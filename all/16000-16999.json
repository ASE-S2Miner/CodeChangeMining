[{"original_method":"/**\n     * Loads a pre-created session.<p>\n     * \n     * @param sessionId the session id \n     * @param formElement the form element \n     * @param onSuccess the callback to call in case of success\n     * @param onError the callback to call in case of an error \n     */\n    public void initFormForSession(\n        final String sessionId,\n        final Element formElement,\n        final I_CmsClientFormSessionCallback onSuccess,\n        final I_CmsStringCallback onError) {\n\n        getRpcHelper().executeRpc(\n            SERVICE.getExistingContent(new CmsUUID(sessionId), new AsyncCallback<CmsFormContent>() {\n\n                public void onFailure(Throwable caught) {\n\n                    onError.call(\"RPC call failed: \" + caught);\n                }\n\n                public void onSuccess(CmsFormContent result) {\n\n                    CmsClientFormSession session = new CmsClientFormSession(CmsXmlContentFormApi.this, result);\n                    session.initFormElement(formElement);\n                    onSuccess.call(session);\n                }\n            }));\n    }","id":16000,"modified_method":"/**\n     * Loads a pre-created session.<p>\n     * \n     * @param sessionId the session id \n     * @param formElement the form element \n     * @param onSuccess the callback to call in case of success\n     * @param onError the callback to call in case of an error \n     */\n    public void initFormForSession(\n        final String sessionId,\n        final Element formElement,\n        final I_CmsClientFormSessionCallback onSuccess,\n        final I_CmsErrorCallback onError) {\n\n        getRpcHelper().executeRpc(\n            SERVICE.getExistingContent(new CmsUUID(sessionId), new AsyncCallback<CmsFormContent>() {\n\n                public void onFailure(Throwable caught) {\n\n                    handleError(caught, onError);\n                }\n\n                public void onSuccess(CmsFormContent result) {\n\n                    CmsClientFormSession session = new CmsClientFormSession(CmsXmlContentFormApi.this, result);\n                    session.initFormElement(formElement);\n                    onSuccess.call(session);\n                }\n            }));\n    }","commit_id":"2e7bbc6566336d6924615549b8d765f99a310bfb","url":"https://github.com/alkacon/opencms-core"},{"original_method":"/**\n     * Tests that editing multiple files in a single form session causes an error.<p>\n     * \n     * @throws Exception - \n     */\n    public void testFailEditMultipleContents() throws Exception {\n\n        CmsObject cms = getCmsObject();\n        CmsUser admin = cms.readUser(\"Admin\");\n        CmsResource contentFolder = cms.createResource(\"/\" + getName(), 0);\n        CmsGroup administrators = cms.readGroup(\"Administrators\");\n\n        CmsFormConfiguration config = new CmsFormConfiguration(\n            new CmsUUID(),\n            Optional.of(admin),\n            administrators,\n            \"xmlcontent\",\n            contentFolder,\n            \"n_%(number)\",\n            Locale.ENGLISH,\n            Optional.<CmsResource> absent(),\n            Optional.<Long> absent(),\n            Optional.<Integer> absent(),\n            Optional.<Long> absent(),\n            Optional.<Integer> absent(),\n            false,\n            Optional.<List<String>> absent());\n\n        cms.createResource(\"/\" + getName() + \"/file1.txt\", 1);\n        cms.createResource(\"/\" + getName() + \"/file2.txt\", 1);\n\n        CmsFormSession session;\n\n        // case create -> load \n        session = new CmsFormSession(cms, config);\n        session.createXmlContent();\n        try {\n\n            session.loadXmlContent(\"file1.txt\");\n            fail(\"Should not be able to edit more than one file in a session.\");\n        } catch (CmsIllegalStateException e) {\n            // ok \n        }\n\n        // case create -> create \n        session = new CmsFormSession(cms, config);\n        session.createXmlContent();\n        try {\n            session.createXmlContent();\n            fail(\"Should not be able to edit more than one file in a session.\");\n        } catch (CmsIllegalStateException e) {\n            // ok \n        }\n\n        // case load -> create \n        session = new CmsFormSession(cms, config);\n        session.loadXmlContent(\"file1.txt\");\n        try {\n            session.createXmlContent();\n            fail(\"Should not be able to edit more than one file in a session.\");\n        } catch (CmsIllegalStateException e) {\n            // ok \n        }\n\n        // case load -> load\n        session = new CmsFormSession(cms, config);\n        session.loadXmlContent(\"file1.txt\");\n        try {\n            session.loadXmlContent(\"file2.txt\");\n            fail(\"Should not be able to edit more than one file in a session.\");\n        } catch (CmsIllegalStateException e) {\n            // ok \n        }\n\n    }","id":16001,"modified_method":"/**\n     * Tests that editing multiple files in a single form session causes an error.<p>\n     * \n     * @throws Exception - \n     */\n    public void testFailEditMultipleContents() throws Exception {\n\n        CmsObject cms = getCmsObject();\n        CmsUser admin = cms.readUser(\"Admin\");\n        CmsResource contentFolder = cms.createResource(\"/\" + getName(), 0);\n        CmsGroup administrators = cms.readGroup(\"Administrators\");\n\n        CmsFormConfiguration config = new CmsFormConfiguration(\n            new CmsUUID(),\n            Optional.of(admin),\n            administrators,\n            \"xmlcontent\",\n            contentFolder,\n            \"n_%(number)\",\n            Locale.ENGLISH,\n            Optional.<CmsResource> absent(),\n            Optional.<Long> absent(),\n            Optional.<Integer> absent(),\n            Optional.<Long> absent(),\n            Optional.<Integer> absent(),\n            false,\n            Optional.<List<String>> absent());\n\n        cms.createResource(\"/\" + getName() + \"/file1.txt\", 1);\n        cms.createResource(\"/\" + getName() + \"/file2.txt\", 1);\n\n        CmsFormSession session;\n\n        // case create -> load \n        session = new CmsFormSession(cms, config);\n        session.createXmlContent();\n        try {\n\n            session.loadXmlContent(\"file1.txt\");\n            fail(\"Should not be able to edit more than one file in a session.\");\n        } catch (CmsFormException e) {\n            // ok \n        }\n\n        // case create -> create \n        session = new CmsFormSession(cms, config);\n        session.createXmlContent();\n        try {\n            session.createXmlContent();\n            fail(\"Should not be able to edit more than one file in a session.\");\n        } catch (CmsFormException e) {\n            // ok \n        }\n\n        // case load -> create \n        session = new CmsFormSession(cms, config);\n        session.loadXmlContent(\"file1.txt\");\n        try {\n            session.createXmlContent();\n            fail(\"Should not be able to edit more than one file in a session.\");\n        } catch (CmsFormException e) {\n            // ok \n        }\n\n        // case load -> load\n        session = new CmsFormSession(cms, config);\n        session.loadXmlContent(\"file1.txt\");\n        try {\n            session.loadXmlContent(\"file2.txt\");\n            fail(\"Should not be able to edit more than one file in a session.\");\n        } catch (CmsFormException e) {\n            // ok \n        }\n\n    }","commit_id":"2e7bbc6566336d6924615549b8d765f99a310bfb","url":"https://github.com/alkacon/opencms-core"},{"original_method":"/**\n     * Tests that errors are thrown when the configured upload / content limits in the configuration are violated.<p>\n     *  \n     * @throws Exception - \n     */\n    public void testLimits() throws Exception {\n\n        CmsObject cms = getCmsObject();\n        CmsUser admin = cms.readUser(\"Admin\");\n\n        CmsResource uploadFolder = cms.createResource(\"/uploads\", 0);\n        CmsResource rootFolder = cms.readResource(\"/\");\n        CmsGroup administrators = cms.readGroup(\"Administrators\");\n        CmsFormConfiguration config = new CmsFormConfiguration(\n            new CmsUUID(),\n            Optional.of(admin),\n            administrators,\n            \"plain\",\n            rootFolder,\n            \"n_%(number)\",\n            Locale.ENGLISH,\n            Optional.of(uploadFolder),\n            Optional.of(Long.valueOf(10000)),\n            Optional.of(Integer.valueOf(0)),\n            Optional.<Long> absent(),\n            Optional.<Integer> absent(),\n            false,\n            Optional.of(Arrays.asList(\".jpg\", \".PNG\")));\n        try {\n            CmsFormSessionSecurityUtil.checkCreateUpload(cms, config, \"foo.png\", 50000);\n            fail(\"Exception should have been thrown!\");\n        } catch (CmsPermissionViolationException e) {\n            assertEquals(Messages.ERR_UPLOAD_TOO_BIG_1, e.getMessageContainer().getKey());\n        }\n\n        try {\n            CmsFormSessionSecurityUtil.checkCreateUpload(cms, config, \"foo.png\", 3);\n        } catch (CmsPermissionViolationException e) {\n            fail(\"Exception was thrown: \" + e.getLocalizedMessage());\n        }\n\n        try {\n            CmsFormSessionSecurityUtil.checkCreateUpload(cms, config, \"foo.doc\", 100L);\n            fail(\"Exception should have been thrown!\");\n        } catch (CmsPermissionViolationException e) {\n            assertEquals(Messages.ERR_UPLOAD_FILE_EXTENSION_NOT_ALLOWED_1, e.getMessageContainer().getKey());\n        }\n\n        try {\n            CmsFormSessionSecurityUtil.checkCreateUpload(cms, config, \"foo.JPG\", 100L);\n        } catch (CmsPermissionViolationException e) {\n            fail(\"Exceptikon was thrown: \" + e.getLocalizedMessage());\n        }\n\n        try {\n            CmsFormSessionSecurityUtil.checkCreateContent(cms, config);\n            fail(\"Exception should have been thrown!\");\n        } catch (CmsPermissionViolationException e) {\n            assertEquals(Messages.ERR_TOO_MANY_CONTENTS_1, e.getMessageContainer().getKey());\n        }\n\n        config = new CmsFormConfiguration(\n            new CmsUUID(),\n            Optional.of(admin),\n            administrators,\n            \"plain\",\n            rootFolder,\n            \"n_%(number)\",\n            Locale.ENGLISH,\n            Optional.of(uploadFolder),\n            Optional.<Long> absent(),\n            Optional.of(Integer.valueOf(100)),\n            Optional.<Long> absent(),\n            Optional.<Integer> absent(),\n            false,\n            Optional.of(Arrays.asList(\".jpg\", \".PNG\")));\n\n        try {\n            CmsFormSessionSecurityUtil.checkCreateContent(cms, config);\n        } catch (CmsPermissionViolationException e) {\n            fail(\"Exception was thrown: \" + e.getLocalizedMessage());\n        }\n\n    }","id":16002,"modified_method":"/**\n     * Tests that errors are thrown when the configured upload / content limits in the configuration are violated.<p>\n     *  \n     * @throws Exception - \n     */\n    public void testLimits() throws Exception {\n\n        CmsObject cms = getCmsObject();\n        CmsUser admin = cms.readUser(\"Admin\");\n\n        CmsResource uploadFolder = cms.createResource(\"/uploads\", 0);\n        CmsResource rootFolder = cms.readResource(\"/\");\n        CmsGroup administrators = cms.readGroup(\"Administrators\");\n        CmsFormConfiguration config = new CmsFormConfiguration(\n            new CmsUUID(),\n            Optional.of(admin),\n            administrators,\n            \"plain\",\n            rootFolder,\n            \"n_%(number)\",\n            Locale.ENGLISH,\n            Optional.of(uploadFolder),\n            Optional.of(Long.valueOf(10000)),\n            Optional.of(Integer.valueOf(0)),\n            Optional.<Long> absent(),\n            Optional.<Integer> absent(),\n            false,\n            Optional.of(Arrays.asList(\".jpg\", \".PNG\")));\n        try {\n            CmsFormSessionSecurityUtil.checkCreateUpload(cms, config, \"foo.png\", 50000);\n            fail(\"Exception should have been thrown!\");\n        } catch (CmsFormException e) {\n            // empty\n        }\n\n        try {\n            CmsFormSessionSecurityUtil.checkCreateUpload(cms, config, \"foo.png\", 3);\n        } catch (CmsFormException e) {\n            fail(\"Exception was thrown: \" + e.getLocalizedMessage());\n        }\n\n        try {\n            CmsFormSessionSecurityUtil.checkCreateUpload(cms, config, \"foo.doc\", 100L);\n            fail(\"Exception should have been thrown!\");\n        } catch (CmsFormException e) {\n            // empty\n\n        }\n\n        try {\n            CmsFormSessionSecurityUtil.checkCreateUpload(cms, config, \"foo.JPG\", 100L);\n        } catch (CmsFormException e) {\n            fail(\"Exceptikon was thrown: \" + e.getLocalizedMessage());\n        }\n\n        try {\n            CmsFormSessionSecurityUtil.checkCreateContent(cms, config);\n            fail(\"Exception should have been thrown!\");\n        } catch (CmsFormException e) {\n            // empty\n\n        }\n\n        config = new CmsFormConfiguration(\n            new CmsUUID(),\n            Optional.of(admin),\n            administrators,\n            \"plain\",\n            rootFolder,\n            \"n_%(number)\",\n            Locale.ENGLISH,\n            Optional.of(uploadFolder),\n            Optional.<Long> absent(),\n            Optional.of(Integer.valueOf(100)),\n            Optional.<Long> absent(),\n            Optional.<Integer> absent(),\n            false,\n            Optional.of(Arrays.asList(\".jpg\", \".PNG\")));\n\n        try {\n            CmsFormSessionSecurityUtil.checkCreateContent(cms, config);\n        } catch (CmsFormException e) {\n            fail(\"Exception was thrown: \" + e.getLocalizedMessage());\n        }\n\n    }","commit_id":"2e7bbc6566336d6924615549b8d765f99a310bfb","url":"https://github.com/alkacon/opencms-core"},{"original_method":"/**\n     * Tests that an error occurs when trying to upload without a configured upload folder.<p>\n     * \n     * @throws Exception - \n     */\n    public void testErrorNoUploadsAllowed() throws Exception {\n\n        CmsObject cms = getCmsObject();\n        CmsUser admin = cms.readUser(\"Admin\");\n        CmsResource rootFolder = cms.readResource(\"/\");\n        CmsGroup administrators = cms.readGroup(\"Administrators\");\n        CmsFormConfiguration config = new CmsFormConfiguration(\n            new CmsUUID(),\n            Optional.of(admin),\n            administrators,\n            \"plain\",\n            rootFolder,\n            \"n_%(number)\",\n            Locale.ENGLISH,\n            Optional.<CmsResource> absent(),\n            Optional.<Long> absent(),\n            Optional.of(Integer.valueOf(100)),\n            Optional.<Long> absent(),\n            Optional.<Integer> absent(),\n            false,\n            Optional.of(Arrays.asList(\".jpg\", \".PNG\")));\n\n        try {\n            CmsFormSessionSecurityUtil.checkCreateUpload(cms, config, \"foo.png\", 100L);\n            fail(\"Exception should have been thrown!\");\n        } catch (CmsPermissionViolationException e) {\n            assertEquals(Messages.ERR_NO_UPLOADS_ALLOWED_0, e.getMessageContainer().getKey());\n        }\n\n    }","id":16003,"modified_method":"/**\n     * Tests that an error occurs when trying to upload without a configured upload folder.<p>\n     * \n     * @throws Exception - \n     */\n    public void testErrorNoUploadsAllowed() throws Exception {\n\n        CmsObject cms = getCmsObject();\n        CmsUser admin = cms.readUser(\"Admin\");\n        CmsResource rootFolder = cms.readResource(\"/\");\n        CmsGroup administrators = cms.readGroup(\"Administrators\");\n        CmsFormConfiguration config = new CmsFormConfiguration(\n            new CmsUUID(),\n            Optional.of(admin),\n            administrators,\n            \"plain\",\n            rootFolder,\n            \"n_%(number)\",\n            Locale.ENGLISH,\n            Optional.<CmsResource> absent(),\n            Optional.<Long> absent(),\n            Optional.of(Integer.valueOf(100)),\n            Optional.<Long> absent(),\n            Optional.<Integer> absent(),\n            false,\n            Optional.of(Arrays.asList(\".jpg\", \".PNG\")));\n\n        try {\n            CmsFormSessionSecurityUtil.checkCreateUpload(cms, config, \"foo.png\", 100L);\n            fail(\"Exception should have been thrown!\");\n        } catch (CmsFormException e) {\n            // empty\n        }\n\n    }","commit_id":"2e7bbc6566336d6924615549b8d765f99a310bfb","url":"https://github.com/alkacon/opencms-core"},{"original_method":"/**\n     * Tests that errors are not thrown if no limits are configured in the form configuration.<p>\n     * \n     * @throws Exception - \n     */\n    public void testNoLimits() throws Exception {\n\n        CmsObject cms = getCmsObject();\n        CmsUser admin = cms.readUser(\"Admin\");\n\n        CmsResource uploadFolder = cms.createResource(\"/uploads2\", 0);\n        CmsResource rootFolder = cms.readResource(\"/\");\n        CmsGroup administrators = cms.readGroup(\"Administrators\");\n        CmsFormConfiguration config = new CmsFormConfiguration(\n            new CmsUUID(),\n            Optional.of(admin),\n            administrators,\n            \"plain\",\n            rootFolder,\n            \"n_%(number)\",\n            Locale.ENGLISH,\n            Optional.of(uploadFolder),\n            Optional.<Long> absent(),\n            Optional.<Integer> absent(),\n            Optional.<Long> absent(),\n            Optional.<Integer> absent(),\n            false,\n            Optional.<List<String>> absent());\n\n        try {\n            CmsFormSessionSecurityUtil.checkCreateUpload(cms, config, \"foo.aasdfasdfasdf\", 99999999L);\n        } catch (CmsPermissionViolationException e) {\n            fail(\"Exception was thrown: \" + e);\n        }\n    }","id":16004,"modified_method":"/**\n     * Tests that errors are not thrown if no limits are configured in the form configuration.<p>\n     * \n     * @throws Exception - \n     */\n    public void testNoLimits() throws Exception {\n\n        CmsObject cms = getCmsObject();\n        CmsUser admin = cms.readUser(\"Admin\");\n\n        CmsResource uploadFolder = cms.createResource(\"/uploads2\", 0);\n        CmsResource rootFolder = cms.readResource(\"/\");\n        CmsGroup administrators = cms.readGroup(\"Administrators\");\n        CmsFormConfiguration config = new CmsFormConfiguration(\n            new CmsUUID(),\n            Optional.of(admin),\n            administrators,\n            \"plain\",\n            rootFolder,\n            \"n_%(number)\",\n            Locale.ENGLISH,\n            Optional.of(uploadFolder),\n            Optional.<Long> absent(),\n            Optional.<Integer> absent(),\n            Optional.<Long> absent(),\n            Optional.<Integer> absent(),\n            false,\n            Optional.<List<String>> absent());\n\n        try {\n            CmsFormSessionSecurityUtil.checkCreateUpload(cms, config, \"foo.aasdfasdfasdf\", 99999999L);\n        } catch (CmsFormException e) {\n            fail(\"Exception was thrown: \" + e);\n        }\n    }","commit_id":"2e7bbc6566336d6924615549b8d765f99a310bfb","url":"https://github.com/alkacon/opencms-core"},{"original_method":"/** Retrieve a snapshot of the statistics that should be published */\n    public Properties publishStatistics() { \n        Properties stats = new Properties();\n        stats.setProperty(\"router.version\", RouterVersion.VERSION);\n        stats.setProperty(\"coreVersion\", CoreVersion.VERSION);\n\n        // No longer expose, to make build tracking more expensive\n        // stats.setProperty(\"router.id\", RouterVersion.ID);\n        // stats.setProperty(\"core.id\", CoreVersion.ID);\n\n/***\n        int newlines = 0;\n        FileInputStream in = null;\n        try {\n            in = new FileInputStream(Router.IDENTLOG);\n            int c = -1;\n            // perhaps later filter this to only include ident changes this\n            // day/week/month\n            while ( (c = in.read()) != -1) {\n                if (c == '\\n')\n                    newlines++;\n            }\n        } catch (IOException ioe) {\n            // ignore\n        } finally {\n            if (in != null)\n                try { in.close(); } catch (IOException ioe) {}\n        }\n        if (newlines > 0)\n            stats.setProperty(\"stat_identities\", newlines+\"\");\n***/\n        \n        if (_includePeerRankings) {\n            if (false)\n                stats.putAll(_context.profileManager().summarizePeers(_publishedStats));\n\n            includeThroughput(stats);\n            //includeRate(\"router.invalidMessageTime\", stats, new long[] { 10*60*1000 });\n            //includeRate(\"router.duplicateMessageId\", stats, new long[] { 24*60*60*1000 });\n            //includeRate(\"tunnel.duplicateIV\", stats, new long[] { 24*60*60*1000 });\n            //includeRate(\"tunnel.fragmentedDropped\", stats, new long[] { 10*60*1000, 3*60*60*1000 });\n            //includeRate(\"tunnel.fullFragments\", stats, new long[] { 10*60*1000, 3*60*60*1000 });\n            //includeRate(\"tunnel.smallFragments\", stats, new long[] { 10*60*1000, 3*60*60*1000 });\n            //includeRate(\"tunnel.testFailedTime\", stats, new long[] { 10*60*1000 });\n            \n            includeRate(\"tunnel.buildFailure\", stats, new long[] { 60*60*1000 });\n            includeRate(\"tunnel.buildSuccess\", stats, new long[] { 60*60*1000 });\n\n            //includeRate(\"tunnel.batchDelaySent\", stats, new long[] { 10*60*1000, 60*60*1000 });\n            //includeRate(\"tunnel.batchMultipleCount\", stats, new long[] { 10*60*1000, 60*60*1000 });\n            includeRate(\"tunnel.corruptMessage\", stats, new long[] { 60*60*1000l, 3*60*60*1000l });\n            \n            //includeRate(\"router.throttleTunnelProbTestSlow\", stats, new long[] { 60*60*1000 });\n            //includeRate(\"router.throttleTunnelProbTooFast\", stats, new long[] { 60*60*1000 });\n            //includeRate(\"router.throttleTunnelProcessingTime1m\", stats, new long[] { 60*60*1000 });\n\n            //includeRate(\"router.fastPeers\", stats, new long[] { 60*60*1000 });\n            \n            //includeRate(\"udp.statusOK\", stats, new long[] { 20*60*1000 });\n            //includeRate(\"udp.statusDifferent\", stats, new long[] { 20*60*1000 });\n            //includeRate(\"udp.statusReject\", stats, new long[] { 20*60*1000 });\n            //includeRate(\"udp.statusUnknown\", stats, new long[] { 20*60*1000 });\n            //includeRate(\"udp.statusKnownCharlie\", stats, new long[] { 1*60*1000, 10*60*1000 });\n            //includeRate(\"udp.addressUpdated\", stats, new long[] { 1*60*1000 });\n            //includeRate(\"udp.addressTestInsteadOfUpdate\", stats, new long[] { 1*60*1000 });\n\n            includeRate(\"clock.skew\", stats, new long[] { 10*60*1000, 3*60*60*1000, 24*60*60*1000 });\n            \n            //includeRate(\"transport.sendProcessingTime\", stats, new long[] { 60*60*1000 });\n            //includeRate(\"jobQueue.jobRunSlow\", stats, new long[] { 10*60*1000l, 60*60*1000l });\n            includeRate(\"crypto.elGamal.encrypt\", stats, new long[] { 60*60*1000 });\n            includeRate(\"tunnel.participatingTunnels\", stats, new long[] { 5*60*1000, 60*60*1000 });\n            //includeRate(\"tunnel.testSuccessTime\", stats, new long[] { 10*60*1000l });\n            includeRate(\"client.sendAckTime\", stats, new long[] { 60*60*1000 }, true);\n            //includeRate(\"udp.sendConfirmTime\", stats, new long[] { 10*60*1000 });\n            //includeRate(\"udp.sendVolleyTime\", stats, new long[] { 10*60*1000 });\n            //includeRate(\"udp.ignoreRecentDuplicate\", stats, new long[] { 60*1000 });\n            //includeRate(\"udp.congestionOccurred\", stats, new long[] { 10*60*1000 });\n            //includeRate(\"stream.con.sendDuplicateSize\", stats, new long[] { 60*60*1000 });\n            //includeRate(\"stream.con.receiveDuplicateSize\", stats, new long[] { 60*60*1000 });\n\n            // Round smaller uptimes to 1 hour, to frustrate uptime tracking\n            // Round 2nd hour to 90m since peers use 2h minimum to route\n            long publishedUptime = _context.router().getUptime();\n            if (publishedUptime < 60*60*1000) publishedUptime = 60*60*1000;\n            else if (publishedUptime < 2*60*60*1000) publishedUptime = 90*60*1000;\n\n            stats.setProperty(\"stat_uptime\", DataHelper.formatDuration(publishedUptime));\n            //stats.setProperty(\"stat__rateKey\", \"avg;maxAvg;pctLifetime;[sat;satLim;maxSat;maxSatLim;][num;lifetimeFreq;maxFreq]\");\n            \n            //includeRate(\"tunnel.decryptRequestTime\", stats, new long[] { 60*1000, 10*60*1000 });\n            //includeRate(\"udp.packetDequeueTime\", stats, new long[] { 60*1000 });\n            //includeRate(\"udp.packetVerifyTime\", stats, new long[] { 60*1000 });\n            \n            includeRate(\"tunnel.buildRequestTime\", stats, new long[] { 10*60*1000 });\n            includeRate(\"tunnel.buildClientExpire\", stats, new long[] { 10*60*1000 });\n            includeRate(\"tunnel.buildClientReject\", stats, new long[] { 10*60*1000 });\n            includeRate(\"tunnel.buildClientSuccess\", stats, new long[] { 10*60*1000 });\n            includeRate(\"tunnel.buildExploratoryExpire\", stats, new long[] { 10*60*1000 });\n            includeRate(\"tunnel.buildExploratoryReject\", stats, new long[] { 10*60*1000 });\n            includeRate(\"tunnel.buildExploratorySuccess\", stats, new long[] { 10*60*1000 });\n            includeRate(\"tunnel.rejectTimeout\", stats, new long[] { 10*60*1000 });\n            includeRate(\"tunnel.rejectOverloaded\", stats, new long[] { 10*60*1000 });\n            includeRate(\"tunnel.acceptLoad\", stats, new long[] { 10*60*1000 });\n            \n            if (FloodfillNetworkDatabaseFacade.isFloodfill(_context.router().getRouterInfo())) {\n                stats.setProperty(\"netdb.knownRouters\", \"\"+_context.netDb().getKnownRouters());\n                stats.setProperty(\"netdb.knownLeaseSets\", \"\"+_context.netDb().getKnownLeaseSets());\n            }\n            \n            _log.debug(\"Publishing peer rankings\");\n        } else {\n            // So that we will still get build requests\n            stats.setProperty(\"stat_uptime\", \"90m\");\n            _log.debug(\"Not publishing peer rankings\");\n        }\n\n    if (_log.shouldLog(Log.DEBUG))\n        _log.debug(\"Building status: \" + stats);\n        return stats;\n    }","id":16005,"modified_method":"/** Retrieve a snapshot of the statistics that should be published */\n    public Properties publishStatistics() { \n        Properties stats = new Properties();\n        stats.setProperty(\"router.version\", RouterVersion.VERSION);\n        stats.setProperty(\"coreVersion\", CoreVersion.VERSION);\n\n        // No longer expose, to make build tracking more expensive\n        // stats.setProperty(\"router.id\", RouterVersion.ID);\n        // stats.setProperty(\"core.id\", CoreVersion.ID);\n\n/***\n        int newlines = 0;\n        FileInputStream in = null;\n        try {\n            in = new FileInputStream(Router.IDENTLOG);\n            int c = -1;\n            // perhaps later filter this to only include ident changes this\n            // day/week/month\n            while ( (c = in.read()) != -1) {\n                if (c == '\\n')\n                    newlines++;\n            }\n        } catch (IOException ioe) {\n            // ignore\n        } finally {\n            if (in != null)\n                try { in.close(); } catch (IOException ioe) {}\n        }\n        if (newlines > 0)\n            stats.setProperty(\"stat_identities\", newlines+\"\");\n***/\n        \n        boolean commentOutIn0621 = RouterVersion.VERSION.equals(\"0.6.2\");\n\n        if (_includePeerRankings) {\n            if (false)\n                stats.putAll(_context.profileManager().summarizePeers(_publishedStats));\n\n            long publishedUptime = _context.router().getUptime();\n            // Don't publish these for first hour\n            if (commentOutIn0621 || publishedUptime > 60*60*1000)\n                includeThroughput(stats);\n            //includeRate(\"router.invalidMessageTime\", stats, new long[] { 10*60*1000 });\n            //includeRate(\"router.duplicateMessageId\", stats, new long[] { 24*60*60*1000 });\n            //includeRate(\"tunnel.duplicateIV\", stats, new long[] { 24*60*60*1000 });\n            //includeRate(\"tunnel.fragmentedDropped\", stats, new long[] { 10*60*1000, 3*60*60*1000 });\n            //includeRate(\"tunnel.fullFragments\", stats, new long[] { 10*60*1000, 3*60*60*1000 });\n            //includeRate(\"tunnel.smallFragments\", stats, new long[] { 10*60*1000, 3*60*60*1000 });\n            //includeRate(\"tunnel.testFailedTime\", stats, new long[] { 10*60*1000 });\n            \n            includeRate(\"tunnel.buildFailure\", stats, new long[] { 60*60*1000 });\n            includeRate(\"tunnel.buildSuccess\", stats, new long[] { 60*60*1000 });\n\n            //includeRate(\"tunnel.batchDelaySent\", stats, new long[] { 10*60*1000, 60*60*1000 });\n            //includeRate(\"tunnel.batchMultipleCount\", stats, new long[] { 10*60*1000, 60*60*1000 });\n          if (commentOutIn0621)\n            includeRate(\"tunnel.corruptMessage\", stats, new long[] { 60*60*1000l, 3*60*60*1000l });\n            \n            //includeRate(\"router.throttleTunnelProbTestSlow\", stats, new long[] { 60*60*1000 });\n            //includeRate(\"router.throttleTunnelProbTooFast\", stats, new long[] { 60*60*1000 });\n            //includeRate(\"router.throttleTunnelProcessingTime1m\", stats, new long[] { 60*60*1000 });\n\n            //includeRate(\"router.fastPeers\", stats, new long[] { 60*60*1000 });\n            \n            //includeRate(\"udp.statusOK\", stats, new long[] { 20*60*1000 });\n            //includeRate(\"udp.statusDifferent\", stats, new long[] { 20*60*1000 });\n            //includeRate(\"udp.statusReject\", stats, new long[] { 20*60*1000 });\n            //includeRate(\"udp.statusUnknown\", stats, new long[] { 20*60*1000 });\n            //includeRate(\"udp.statusKnownCharlie\", stats, new long[] { 1*60*1000, 10*60*1000 });\n            //includeRate(\"udp.addressUpdated\", stats, new long[] { 1*60*1000 });\n            //includeRate(\"udp.addressTestInsteadOfUpdate\", stats, new long[] { 1*60*1000 });\n\n          if (commentOutIn0621)\n            includeRate(\"clock.skew\", stats, new long[] { 10*60*1000, 3*60*60*1000, 24*60*60*1000 });\n            \n            //includeRate(\"transport.sendProcessingTime\", stats, new long[] { 60*60*1000 });\n            //includeRate(\"jobQueue.jobRunSlow\", stats, new long[] { 10*60*1000l, 60*60*1000l });\n          if (commentOutIn0621)\n            includeRate(\"crypto.elGamal.encrypt\", stats, new long[] { 60*60*1000 });\n            includeRate(\"tunnel.participatingTunnels\", stats, new long[] { 5*60*1000, 60*60*1000 });\n            //includeRate(\"tunnel.testSuccessTime\", stats, new long[] { 10*60*1000l });\n          if (commentOutIn0621)\n            includeRate(\"client.sendAckTime\", stats, new long[] { 60*60*1000 }, true);\n            //includeRate(\"udp.sendConfirmTime\", stats, new long[] { 10*60*1000 });\n            //includeRate(\"udp.sendVolleyTime\", stats, new long[] { 10*60*1000 });\n            //includeRate(\"udp.ignoreRecentDuplicate\", stats, new long[] { 60*1000 });\n            //includeRate(\"udp.congestionOccurred\", stats, new long[] { 10*60*1000 });\n            //includeRate(\"stream.con.sendDuplicateSize\", stats, new long[] { 60*60*1000 });\n            //includeRate(\"stream.con.receiveDuplicateSize\", stats, new long[] { 60*60*1000 });\n\n            // Round smaller uptimes to 1 hour, to frustrate uptime tracking\n            // Round 2nd hour to 90m since peers use 2h minimum to route\n            if (publishedUptime < 60*60*1000) publishedUptime = 60*60*1000;\n            else if (publishedUptime < 2*60*60*1000) publishedUptime = 90*60*1000;\n\n            stats.setProperty(\"stat_uptime\", DataHelper.formatDuration(publishedUptime));\n            //stats.setProperty(\"stat__rateKey\", \"avg;maxAvg;pctLifetime;[sat;satLim;maxSat;maxSatLim;][num;lifetimeFreq;maxFreq]\");\n            \n            //includeRate(\"tunnel.decryptRequestTime\", stats, new long[] { 60*1000, 10*60*1000 });\n            //includeRate(\"udp.packetDequeueTime\", stats, new long[] { 60*1000 });\n            //includeRate(\"udp.packetVerifyTime\", stats, new long[] { 60*1000 });\n            \n            includeRate(\"tunnel.buildRequestTime\", stats, new long[] { 10*60*1000 });\n            includeRate(\"tunnel.buildClientExpire\", stats, new long[] { 10*60*1000 });\n            includeRate(\"tunnel.buildClientReject\", stats, new long[] { 10*60*1000 });\n            includeRate(\"tunnel.buildClientSuccess\", stats, new long[] { 10*60*1000 });\n            includeRate(\"tunnel.buildExploratoryExpire\", stats, new long[] { 10*60*1000 });\n            includeRate(\"tunnel.buildExploratoryReject\", stats, new long[] { 10*60*1000 });\n            includeRate(\"tunnel.buildExploratorySuccess\", stats, new long[] { 10*60*1000 });\n          if (commentOutIn0621) {\n            includeRate(\"tunnel.rejectTimeout\", stats, new long[] { 10*60*1000 });\n            includeRate(\"tunnel.rejectOverloaded\", stats, new long[] { 10*60*1000 });\n            includeRate(\"tunnel.acceptLoad\", stats, new long[] { 10*60*1000 });\n          }\n            \n          // move this out of the if after 0.6.2.1 is out, so we get ff stats even if not publishing other stats\n            if (FloodfillNetworkDatabaseFacade.isFloodfill(_context.router().getRouterInfo())) {\n                stats.setProperty(\"netdb.knownRouters\", \"\"+_context.netDb().getKnownRouters());\n                stats.setProperty(\"netdb.knownLeaseSets\", \"\"+_context.netDb().getKnownLeaseSets());\n            }\n            \n            _log.debug(\"Publishing peer rankings\");\n        } else {\n            // So that we will still get build requests\n            stats.setProperty(\"stat_uptime\", \"90m\");\n            _log.debug(\"Not publishing peer rankings\");\n          // delete after 0.6.2.1 is out\n          if (!commentOutIn0621)\n            if (FloodfillNetworkDatabaseFacade.isFloodfill(_context.router().getRouterInfo())) {\n                stats.setProperty(\"netdb.knownRouters\", \"\"+_context.netDb().getKnownRouters());\n                stats.setProperty(\"netdb.knownLeaseSets\", \"\"+_context.netDb().getKnownLeaseSets());\n            }\n        }\n\n    if (_log.shouldLog(Log.DEBUG))\n        _log.debug(\"Building status: \" + stats);\n        return stats;\n    }","commit_id":"df069ec9d1467fbda8a7d366438cf198fc100b0c","url":"https://github.com/i2p/i2p.i2p"},{"original_method":"/** Retrieve a snapshot of the statistics that should be published */\n    public Properties publishStatistics() { \n        Properties stats = new Properties();\n        stats.setProperty(\"router.version\", RouterVersion.VERSION);\n        stats.setProperty(\"coreVersion\", CoreVersion.VERSION);\n\n        // No longer expose, to make build tracking more expensive\n        // stats.setProperty(\"router.id\", RouterVersion.ID);\n        // stats.setProperty(\"core.id\", CoreVersion.ID);\n\n        int newlines = 0;\n        FileInputStream in = null;\n        try {\n            in = new FileInputStream(Router.IDENTLOG);\n            int c = -1;\n            // perhaps later filter this to only include ident changes this\n            // day/week/month\n            while ( (c = in.read()) != -1) {\n                if (c == '\\n')\n                    newlines++;\n            }\n        } catch (IOException ioe) {\n            // ignore\n        } finally {\n            if (in != null)\n                try { in.close(); } catch (IOException ioe) {}\n        }\n        if (newlines > 0)\n            stats.setProperty(\"stat_identities\", newlines+\"\");\n\n        \n        if (_includePeerRankings) {\n            if (false)\n                stats.putAll(_context.profileManager().summarizePeers(_publishedStats));\n\n            includeThroughput(stats);\n            includeRate(\"router.invalidMessageTime\", stats, new long[] { 10*60*1000 });\n            includeRate(\"router.duplicateMessageId\", stats, new long[] { 24*60*60*1000 });\n            //includeRate(\"tunnel.duplicateIV\", stats, new long[] { 24*60*60*1000 });\n            includeRate(\"tunnel.fragmentedDropped\", stats, new long[] { 10*60*1000, 3*60*60*1000 });\n            //includeRate(\"tunnel.fullFragments\", stats, new long[] { 10*60*1000, 3*60*60*1000 });\n            //includeRate(\"tunnel.smallFragments\", stats, new long[] { 10*60*1000, 3*60*60*1000 });\n            includeRate(\"tunnel.testFailedTime\", stats, new long[] { 10*60*1000 });\n            \n            includeRate(\"tunnel.buildFailure\", stats, new long[] { 60*60*1000 });\n            includeRate(\"tunnel.buildSuccess\", stats, new long[] { 60*60*1000 });\n\n            //includeRate(\"tunnel.batchDelaySent\", stats, new long[] { 10*60*1000, 60*60*1000 });\n            includeRate(\"tunnel.batchMultipleCount\", stats, new long[] { 10*60*1000, 60*60*1000 });\n            includeRate(\"tunnel.corruptMessage\", stats, new long[] { 60*60*1000l, 3*60*60*1000l });\n            \n            //includeRate(\"router.throttleTunnelProbTestSlow\", stats, new long[] { 60*60*1000 });\n            //includeRate(\"router.throttleTunnelProbTooFast\", stats, new long[] { 60*60*1000 });\n            //includeRate(\"router.throttleTunnelProcessingTime1m\", stats, new long[] { 60*60*1000 });\n\n            includeRate(\"router.fastPeers\", stats, new long[] { 60*60*1000 });\n            \n            includeRate(\"udp.statusOK\", stats, new long[] { 20*60*1000 });\n            includeRate(\"udp.statusDifferent\", stats, new long[] { 20*60*1000 });\n            includeRate(\"udp.statusReject\", stats, new long[] { 20*60*1000 });\n            includeRate(\"udp.statusUnknown\", stats, new long[] { 20*60*1000 });\n            includeRate(\"udp.statusKnownCharlie\", stats, new long[] { 1*60*1000, 10*60*1000 });\n            includeRate(\"udp.addressUpdated\", stats, new long[] { 1*60*1000 });\n            includeRate(\"udp.addressTestInsteadOfUpdate\", stats, new long[] { 1*60*1000 });\n\n            includeRate(\"clock.skew\", stats, new long[] { 10*60*1000, 3*60*60*1000, 24*60*60*1000 });\n            \n            //includeRate(\"transport.sendProcessingTime\", stats, new long[] { 60*60*1000 });\n            //includeRate(\"jobQueue.jobRunSlow\", stats, new long[] { 10*60*1000l, 60*60*1000l });\n            includeRate(\"crypto.elGamal.encrypt\", stats, new long[] { 60*1000, 60*60*1000 });\n            includeRate(\"tunnel.participatingTunnels\", stats, new long[] { 5*60*1000, 60*60*1000 });\n            includeRate(\"tunnel.testSuccessTime\", stats, new long[] { 10*60*1000l });\n            includeRate(\"client.sendAckTime\", stats, new long[] { 60*60*1000 }, true);\n            includeRate(\"udp.sendConfirmTime\", stats, new long[] { 10*60*1000 });\n            includeRate(\"udp.sendVolleyTime\", stats, new long[] { 10*60*1000 });\n            includeRate(\"udp.ignoreRecentDuplicate\", stats, new long[] { 60*1000 });\n            includeRate(\"udp.congestionOccurred\", stats, new long[] { 10*60*1000 });\n            //includeRate(\"stream.con.sendDuplicateSize\", stats, new long[] { 60*60*1000 });\n            //includeRate(\"stream.con.receiveDuplicateSize\", stats, new long[] { 60*60*1000 });\n\n            // Round smaller uptimes to 1 hour, to frustrate uptime tracking\n            long publishedUptime = _context.router().getUptime();\n            if (publishedUptime < 60*60*1000) publishedUptime = 60*60*1000;\n\n            stats.setProperty(\"stat_uptime\", DataHelper.formatDuration(publishedUptime));\n            stats.setProperty(\"stat__rateKey\", \"avg;maxAvg;pctLifetime;[sat;satLim;maxSat;maxSatLim;][num;lifetimeFreq;maxFreq]\");\n            \n            includeRate(\"tunnel.buildRequestTime\", stats, new long[] { 60*1000, 10*60*1000 });\n            includeRate(\"tunnel.decryptRequestTime\", stats, new long[] { 60*1000, 10*60*1000 });\n            includeRate(\"tunnel.buildClientExpire\", stats, new long[] { 60*1000, 10*60*1000 });\n            includeRate(\"tunnel.buildClientReject\", stats, new long[] { 60*1000, 10*60*1000 });\n            includeRate(\"tunnel.buildClientSuccess\", stats, new long[] { 60*1000, 10*60*1000 });\n            includeRate(\"tunnel.buildExploratoryExpire\", stats, new long[] { 60*1000, 10*60*1000 });\n            includeRate(\"tunnel.buildExploratoryReject\", stats, new long[] { 60*1000, 10*60*1000 });\n            includeRate(\"tunnel.buildExploratorySuccess\", stats, new long[] { 60*1000, 10*60*1000 });\n            includeRate(\"tunnel.rejectTimeout\", stats, new long[] { 60*1000, 10*60*1000 });\n            includeRate(\"udp.packetDequeueTime\", stats, new long[] { 60*1000 });\n            includeRate(\"udp.packetVerifyTime\", stats, new long[] { 60*1000 });\n            \n            includeRate(\"tunnel.rejectOverloaded\", stats, new long[] { 60*1000, 10*60*1000 });\n            includeRate(\"tunnel.acceptLoad\", stats, new long[] { 60*1000, 10*60*1000 });\n            \n            if (FloodfillNetworkDatabaseFacade.isFloodfill(_context.router().getRouterInfo())) {\n                stats.setProperty(\"netdb.knownRouters\", \"\"+_context.netDb().getKnownRouters());\n                stats.setProperty(\"netdb.knownLeaseSets\", \"\"+_context.netDb().getKnownLeaseSets());\n            }\n            \n            _log.debug(\"Publishing peer rankings\");\n        } else {\n            _log.debug(\"Not publishing peer rankings\");\n        }\n\n    if (_log.shouldLog(Log.DEBUG))\n        _log.debug(\"Building status: \" + stats);\n        return stats;\n    }","id":16006,"modified_method":"/** Retrieve a snapshot of the statistics that should be published */\n    public Properties publishStatistics() { \n        Properties stats = new Properties();\n        stats.setProperty(\"router.version\", RouterVersion.VERSION);\n        stats.setProperty(\"coreVersion\", CoreVersion.VERSION);\n\n        // No longer expose, to make build tracking more expensive\n        // stats.setProperty(\"router.id\", RouterVersion.ID);\n        // stats.setProperty(\"core.id\", CoreVersion.ID);\n\n        int newlines = 0;\n        FileInputStream in = null;\n        try {\n            in = new FileInputStream(Router.IDENTLOG);\n            int c = -1;\n            // perhaps later filter this to only include ident changes this\n            // day/week/month\n            while ( (c = in.read()) != -1) {\n                if (c == '\\n')\n                    newlines++;\n            }\n        } catch (IOException ioe) {\n            // ignore\n        } finally {\n            if (in != null)\n                try { in.close(); } catch (IOException ioe) {}\n        }\n        if (newlines > 0)\n            stats.setProperty(\"stat_identities\", newlines+\"\");\n\n        \n        if (_includePeerRankings) {\n            if (false)\n                stats.putAll(_context.profileManager().summarizePeers(_publishedStats));\n\n            // provide cover for developers, change to false or comment out below after .32 is out\n            boolean commentMeOutInDot32 = RouterVersion.VERSION.equals(\"0.6.1.31\");\n            includeThroughput(stats);\n           if (commentMeOutInDot32) {\n            includeRate(\"router.invalidMessageTime\", stats, new long[] { 10*60*1000 });\n            includeRate(\"router.duplicateMessageId\", stats, new long[] { 24*60*60*1000 });\n            //includeRate(\"tunnel.duplicateIV\", stats, new long[] { 24*60*60*1000 });\n            includeRate(\"tunnel.fragmentedDropped\", stats, new long[] { 10*60*1000, 3*60*60*1000 });\n           }\n            //includeRate(\"tunnel.fullFragments\", stats, new long[] { 10*60*1000, 3*60*60*1000 });\n            //includeRate(\"tunnel.smallFragments\", stats, new long[] { 10*60*1000, 3*60*60*1000 });\n            includeRate(\"tunnel.testFailedTime\", stats, new long[] { 10*60*1000 });\n            \n            includeRate(\"tunnel.buildFailure\", stats, new long[] { 60*60*1000 });\n            includeRate(\"tunnel.buildSuccess\", stats, new long[] { 60*60*1000 });\n\n            //includeRate(\"tunnel.batchDelaySent\", stats, new long[] { 10*60*1000, 60*60*1000 });\n           if (commentMeOutInDot32)\n            includeRate(\"tunnel.batchMultipleCount\", stats, new long[] { 10*60*1000, 60*60*1000 });\n            includeRate(\"tunnel.corruptMessage\", stats, new long[] { 60*60*1000l, 3*60*60*1000l });\n            \n            //includeRate(\"router.throttleTunnelProbTestSlow\", stats, new long[] { 60*60*1000 });\n            //includeRate(\"router.throttleTunnelProbTooFast\", stats, new long[] { 60*60*1000 });\n            //includeRate(\"router.throttleTunnelProcessingTime1m\", stats, new long[] { 60*60*1000 });\n\n            includeRate(\"router.fastPeers\", stats, new long[] { 60*60*1000 });\n            \n           if (commentMeOutInDot32) {\n            includeRate(\"udp.statusOK\", stats, new long[] { 20*60*1000 });\n            includeRate(\"udp.statusDifferent\", stats, new long[] { 20*60*1000 });\n            includeRate(\"udp.statusReject\", stats, new long[] { 20*60*1000 });\n            includeRate(\"udp.statusUnknown\", stats, new long[] { 20*60*1000 });\n            includeRate(\"udp.statusKnownCharlie\", stats, new long[] { 1*60*1000, 10*60*1000 });\n            includeRate(\"udp.addressUpdated\", stats, new long[] { 1*60*1000 });\n            includeRate(\"udp.addressTestInsteadOfUpdate\", stats, new long[] { 1*60*1000 });\n           }\n\n            includeRate(\"clock.skew\", stats, new long[] { 10*60*1000, 3*60*60*1000, 24*60*60*1000 });\n            \n            //includeRate(\"transport.sendProcessingTime\", stats, new long[] { 60*60*1000 });\n            //includeRate(\"jobQueue.jobRunSlow\", stats, new long[] { 10*60*1000l, 60*60*1000l });\n            includeRate(\"crypto.elGamal.encrypt\", stats, new long[] { 60*1000, 60*60*1000 });\n            includeRate(\"tunnel.participatingTunnels\", stats, new long[] { 5*60*1000, 60*60*1000 });\n           if (commentMeOutInDot32)\n            includeRate(\"tunnel.testSuccessTime\", stats, new long[] { 10*60*1000l });\n            includeRate(\"client.sendAckTime\", stats, new long[] { 60*60*1000 }, true);\n           if (commentMeOutInDot32) {\n            includeRate(\"udp.sendConfirmTime\", stats, new long[] { 10*60*1000 });\n            includeRate(\"udp.sendVolleyTime\", stats, new long[] { 10*60*1000 });\n            includeRate(\"udp.ignoreRecentDuplicate\", stats, new long[] { 60*1000 });\n            includeRate(\"udp.congestionOccurred\", stats, new long[] { 10*60*1000 });\n           }\n            //includeRate(\"stream.con.sendDuplicateSize\", stats, new long[] { 60*60*1000 });\n            //includeRate(\"stream.con.receiveDuplicateSize\", stats, new long[] { 60*60*1000 });\n\n            // Round smaller uptimes to 1 hour, to frustrate uptime tracking\n            long publishedUptime = _context.router().getUptime();\n            if (publishedUptime < 60*60*1000) publishedUptime = 60*60*1000;\n\n            stats.setProperty(\"stat_uptime\", DataHelper.formatDuration(publishedUptime));\n           if (commentMeOutInDot32)\n            stats.setProperty(\"stat__rateKey\", \"avg;maxAvg;pctLifetime;[sat;satLim;maxSat;maxSatLim;][num;lifetimeFreq;maxFreq]\");\n            \n            includeRate(\"tunnel.buildRequestTime\", stats, new long[] { 60*1000, 10*60*1000 });\n           if (commentMeOutInDot32)\n            includeRate(\"tunnel.decryptRequestTime\", stats, new long[] { 60*1000, 10*60*1000 });\n            includeRate(\"tunnel.buildClientExpire\", stats, new long[] { 60*1000, 10*60*1000 });\n            includeRate(\"tunnel.buildClientReject\", stats, new long[] { 60*1000, 10*60*1000 });\n            includeRate(\"tunnel.buildClientSuccess\", stats, new long[] { 60*1000, 10*60*1000 });\n            includeRate(\"tunnel.buildExploratoryExpire\", stats, new long[] { 60*1000, 10*60*1000 });\n            includeRate(\"tunnel.buildExploratoryReject\", stats, new long[] { 60*1000, 10*60*1000 });\n            includeRate(\"tunnel.buildExploratorySuccess\", stats, new long[] { 60*1000, 10*60*1000 });\n            includeRate(\"tunnel.rejectTimeout\", stats, new long[] { 60*1000, 10*60*1000 });\n           if (commentMeOutInDot32) {\n            includeRate(\"udp.packetDequeueTime\", stats, new long[] { 60*1000 });\n            includeRate(\"udp.packetVerifyTime\", stats, new long[] { 60*1000 });\n           }\n            \n            includeRate(\"tunnel.rejectOverloaded\", stats, new long[] { 60*1000, 10*60*1000 });\n            includeRate(\"tunnel.acceptLoad\", stats, new long[] { 60*1000, 10*60*1000 });\n            \n            if (FloodfillNetworkDatabaseFacade.isFloodfill(_context.router().getRouterInfo())) {\n                stats.setProperty(\"netdb.knownRouters\", \"\"+_context.netDb().getKnownRouters());\n                stats.setProperty(\"netdb.knownLeaseSets\", \"\"+_context.netDb().getKnownLeaseSets());\n            }\n            \n            _log.debug(\"Publishing peer rankings\");\n        } else {\n            _log.debug(\"Not publishing peer rankings\");\n        }\n\n    if (_log.shouldLog(Log.DEBUG))\n        _log.debug(\"Building status: \" + stats);\n        return stats;\n    }","commit_id":"bc16078e3f98e97afe4cde705d556345bf319c13","url":"https://github.com/i2p/i2p.i2p"},{"original_method":"/**\n   * Cast a String representation of an object into that object.\n   * E.g. \"5.4\" will be cast to a Double; \"[1,2,3]\" will be cast\n   * to an Integer[].\n   *\n   * NOTE: Date parses from a Long\n   *\n   * @param <E> The type of the object returned (same as type)\n   * @param value The string representation of the object\n   * @param type The type (usually class) to be returned (same as E)\n   * @return An object corresponding to the String value passed\n   */\n  @SuppressWarnings({ \"unchecked\", \"rawtypes\" })\n  public static final <E> E cast(String value, Type type){\n    //--Get Type\n    Class <?> clazz = null;\n    Type[] params = null;\n    if(type instanceof Class){\n      clazz = (Class <?>) type;\n    }else if(type instanceof ParameterizedType){\n      ParameterizedType pt = (ParameterizedType) type;\n      params = pt.getActualTypeArguments();\n      clazz = (Class <?>) pt.getRawType();\n    }else{\n      clazz = type2class(type);\n      throw new IllegalArgumentException(\"Cannot cast to type (unhandled type): \" + type);\n    }\n    //--Cast\n    if(String.class.isAssignableFrom(clazz)){\n      // (case: String)\n      return (E) value;\n    }else if(Boolean.class.isAssignableFrom(clazz) || boolean.class.isAssignableFrom(clazz)){\n      //(case: boolean)\n      if(\"1\".equals(value)){ return (E) new Boolean(true); }\n      return (E) new Boolean( Boolean.parseBoolean(value) );\n    }else if(Integer.class.isAssignableFrom(clazz) || int.class.isAssignableFrom(clazz)){\n      //(case: integer)\n      try {\n        return (E) new Integer(Integer.parseInt(value));\n      } catch (NumberFormatException e) {\n        return (E) new Integer((int) Double.parseDouble(value));\n      }\n    }else if(Long.class.isAssignableFrom(clazz) || long.class.isAssignableFrom(clazz)){\n      //(case: long)\n      try {\n        return (E) new Long(Long.parseLong(value));\n      } catch (NumberFormatException e) {\n        return (E) new Long((long) Double.parseDouble(value));\n      }\n    }else if(Float.class.isAssignableFrom(clazz) || float.class.isAssignableFrom(clazz)){\n      //(case: float)\n      if(value == null){ return (E) new Float(Float.NaN); }\n      return (E) new Float(Float.parseFloat(value));\n    }else if(Double.class.isAssignableFrom(clazz) || double.class.isAssignableFrom(clazz)){\n      //(case: double)\n      if(value == null){ return (E) new Double(Double.NaN); }\n      return (E) new Double(Double.parseDouble(value));\n    }else if(Short.class.isAssignableFrom(clazz) || short.class.isAssignableFrom(clazz)){\n      //(case: short)\n      try {\n        return (E) new Short(Short.parseShort(value));\n      } catch (NumberFormatException e) {\n        return (E) new Short((short) Double.parseDouble(value));\n      }\n    }else if(Byte.class.isAssignableFrom(clazz) || byte.class.isAssignableFrom(clazz)){\n      //(case: byte)\n      try {\n        return (E) new Byte(Byte.parseByte(value));\n      } catch (NumberFormatException e) {\n        return (E) new Byte((byte) Double.parseDouble(value));\n      }\n    }else if(Character.class.isAssignableFrom(clazz) || char.class.isAssignableFrom(clazz)){\n      //(case: char)\n      return (E) new Character((char) Integer.parseInt(value));\n    }else if(java.util.Date.class.isAssignableFrom(clazz)){\n      //(case: date)\n      try {\n        return (E) new Date(Long.parseLong(value));\n      } catch (NumberFormatException e) {\n        return null;\n      }\n    } else if(java.util.Calendar.class.isAssignableFrom(clazz)){\n      //(case: date)\n      try {\n        Date d = new Date(Long.parseLong(value));\n        GregorianCalendar cal = new GregorianCalendar();\n        cal.setTime(d);\n        return (E) cal;\n      } catch (NumberFormatException e) {\n        return null;\n      }\n    } else if(File.class.isAssignableFrom(clazz)){\n      return (E) new File(value);\n    } else if(Class.class.isAssignableFrom(clazz)){\n      try {\n        return (E) Class.forName(value);\n      } catch (ClassNotFoundException e) {\n        return null;\n      }\n    } else if(clazz.isArray()){\n      if(value == null){ return null; }\n      Class <?> subType = clazz.getComponentType();\n      // (case: array)\n      String[] strings = decodeArray(value);\n      Object[] array = (Object[]) Array.newInstance(clazz.getComponentType(), strings.length);\n      for(int i=0; i<strings.length; i++){\n        array[i] = cast(strings[i], subType);\n      }\n      return (E) array;\n    } else if(clazz.isEnum()){\n      // (case: enumeration)\n      Class c = (Class) clazz;\n      if(value == null){ return null; }\n      if (value.charAt(0) == '\"') value = value.substring(1);\n      if (value.charAt(value.length()-1) == '\"') value = value.substring(0, value.length() - 1);\n      try {\n        return (E) Enum.valueOf(c, value);\n      } catch (Exception e){\n        try {\n          return (E) Enum.valueOf(c, value.toLowerCase());\n        } catch (Exception e2){\n          try {\n            return (E) Enum.valueOf(c, value.toUpperCase());\n          } catch (Exception e3){\n            return (E) Enum.valueOf(c,\n                (Character.isUpperCase(value.charAt(0)) ? Character.toLowerCase(value.charAt(0)) : Character.toUpperCase(value.charAt(0))) +\n                    value.substring(1));\n          }\n        }\n      }\n    } else if (ObjectOutputStream.class.isAssignableFrom(clazz)) {\n      // (case: object output stream)\n      try {\n        return (E) new ObjectOutputStream((OutputStream) cast(value, OutputStream.class));\n      } catch (IOException e) {\n        throw new RuntimeException(e);\n      }\n    } else if (ObjectInputStream.class.isAssignableFrom(clazz)) {\n      // (case: object input stream)\n      try {\n        return (E) new ObjectInputStream((InputStream) cast(value, InputStream.class));\n      } catch (IOException e) {\n        throw new RuntimeException(e);\n      }\n    } else if (OutputStream.class.isAssignableFrom(clazz)) {\n      // (case: output stream)\n      if (value.equalsIgnoreCase(\"stdout\") || value.equalsIgnoreCase(\"out\")) { return (E) System.out; }\n      if (value.equalsIgnoreCase(\"stderr\") || value.equalsIgnoreCase(\"err\")) { return (E) System.err; }\n      File toWriteTo = cast(value, File.class);\n      try {\n        if (!toWriteTo.exists() && !toWriteTo.createNewFile()) {\n          throw new IllegalStateException(\"Could not create output stream (cannot write file): \" + value);\n        }\n        return (E) new FileOutputStream((File) cast(value, File.class));\n      } catch (IOException e) {\n        throw new RuntimeException(e);\n      }\n    } else if (InputStream.class.isAssignableFrom(clazz)) {\n      // (case: input stream)\n      if (value.equalsIgnoreCase(\"stdin\") || value.equalsIgnoreCase(\"in\")) { return (E) System.in; }\n      File toReadFrom = cast(value, File.class);\n      try {\n        if (!toReadFrom.exists() || !toReadFrom.canRead()) {\n          throw new IllegalStateException(\"Could not create input stream (cannot read file): \" + value);\n        }\n        return (E) new FileInputStream((File) cast(value, File.class));\n      } catch (IOException e) {\n        throw new RuntimeException(e);\n      }\n    } else {\n      try {\n        // (case: can parse from string)\n        Method decode = clazz.getMethod(\"fromString\", String.class);\n        return (E) decode.invoke(MetaClass.create(clazz), value);\n      } catch (NoSuchMethodException e) {  // Silent errors for misc failures\n      } catch (InvocationTargetException e) {\n      } catch (IllegalAccessException e) {\n      } catch (ClassCastException e) {\n      }\n\n      // Pass 2: Guess what the object could be\n      if (Tree.class.isAssignableFrom(clazz)) {\n        // (case: reading a tree)\n        try {\n          return (E) new PennTreeReader(new StringReader(value), new LabeledScoredTreeFactory(CoreLabel.factory())).readTree();\n        } catch (IOException e) {\n          throw new RuntimeException(e);\n        }\n      } else if (Collection.class.isAssignableFrom(clazz)) {\n        // (case: reading a collection)\n        Collection rtn;\n        if (Modifier.isAbstract(clazz.getModifiers())) {\n          rtn = abstractToConcreteCollectionMap.get(clazz).createInstance();\n        } else {\n          rtn = MetaClass.create(clazz).createInstance();\n        }\n        Class <?> subType = clazz.getComponentType();\n        String[] strings = decodeArray(value);\n        for (String string : strings) {\n          if (subType == null) {\n            rtn.add(castWithoutKnowingType(string));\n          } else {\n            rtn.add(cast(string, subType));\n          }\n        }\n        return (E) rtn;\n      } else {\n        // We could not cast this object\n        return null;\n      }\n    }\n  }","id":16007,"modified_method":"/**\n   * Cast a String representation of an object into that object.\n   * E.g. \"5.4\" will be cast to a Double; \"[1,2,3]\" will be cast\n   * to an Integer[].\n   *\n   * NOTE: Date parses from a Long\n   *\n   * @param <E> The type of the object returned (same as type)\n   * @param value The string representation of the object\n   * @param type The type (usually class) to be returned (same as E)\n   * @return An object corresponding to the String value passed\n   */\n  @SuppressWarnings({ \"unchecked\", \"rawtypes\" })\n  public static <E> E cast(String value, Type type){\n    //--Get Type\n    Class <?> clazz;\n    if(type instanceof Class){\n      clazz = (Class <?>) type;\n    }else if(type instanceof ParameterizedType){\n      ParameterizedType pt = (ParameterizedType) type;\n      clazz = (Class <?>) pt.getRawType();\n    }else{\n      throw new IllegalArgumentException(\"Cannot cast to type (unhandled type): \" + type);\n    }\n    //--Cast\n    if(String.class.isAssignableFrom(clazz)){\n      // (case: String)\n      return (E) value;\n    }else if(Boolean.class.isAssignableFrom(clazz) || boolean.class.isAssignableFrom(clazz)){\n      //(case: boolean)\n      if(\"1\".equals(value)){ return (E) Boolean.TRUE; }\n      return (E) Boolean.valueOf(Boolean.parseBoolean(value));\n    }else if(Integer.class.isAssignableFrom(clazz) || int.class.isAssignableFrom(clazz)){\n      //(case: integer)\n      try {\n        return (E) new Integer(Integer.parseInt(value));\n      } catch (NumberFormatException e) {\n        return (E) new Integer((int) Double.parseDouble(value));\n      }\n    }else if(Long.class.isAssignableFrom(clazz) || long.class.isAssignableFrom(clazz)){\n      //(case: long)\n      try {\n        return (E) new Long(Long.parseLong(value));\n      } catch (NumberFormatException e) {\n        return (E) new Long((long) Double.parseDouble(value));\n      }\n    }else if(Float.class.isAssignableFrom(clazz) || float.class.isAssignableFrom(clazz)){\n      //(case: float)\n      if(value == null){ return (E) new Float(Float.NaN); }\n      return (E) new Float(Float.parseFloat(value));\n    }else if(Double.class.isAssignableFrom(clazz) || double.class.isAssignableFrom(clazz)){\n      //(case: double)\n      if(value == null){ return (E) new Double(Double.NaN); }\n      return (E) new Double(Double.parseDouble(value));\n    }else if(Short.class.isAssignableFrom(clazz) || short.class.isAssignableFrom(clazz)){\n      //(case: short)\n      try {\n        return (E) new Short(Short.parseShort(value));\n      } catch (NumberFormatException e) {\n        return (E) new Short((short) Double.parseDouble(value));\n      }\n    }else if(Byte.class.isAssignableFrom(clazz) || byte.class.isAssignableFrom(clazz)){\n      //(case: byte)\n      try {\n        return (E) new Byte(Byte.parseByte(value));\n      } catch (NumberFormatException e) {\n        return (E) new Byte((byte) Double.parseDouble(value));\n      }\n    }else if(Character.class.isAssignableFrom(clazz) || char.class.isAssignableFrom(clazz)){\n      //(case: char)\n      return (E) new Character((char) Integer.parseInt(value));\n    }else if(java.util.Date.class.isAssignableFrom(clazz)){\n      //(case: date)\n      try {\n        return (E) new Date(Long.parseLong(value));\n      } catch (NumberFormatException e) {\n        return null;\n      }\n    } else if(java.util.Calendar.class.isAssignableFrom(clazz)){\n      //(case: date)\n      try {\n        Date d = new Date(Long.parseLong(value));\n        GregorianCalendar cal = new GregorianCalendar();\n        cal.setTime(d);\n        return (E) cal;\n      } catch (NumberFormatException e) {\n        return null;\n      }\n    } else if(File.class.isAssignableFrom(clazz)){\n      return (E) new File(value);\n    } else if(Class.class.isAssignableFrom(clazz)){\n      try {\n        return (E) Class.forName(value);\n      } catch (ClassNotFoundException e) {\n        return null;\n      }\n    } else if(clazz.isArray()){\n      if(value == null){ return null; }\n      Class <?> subType = clazz.getComponentType();\n      // (case: array)\n      String[] strings = decodeArray(value);\n      Object[] array = (Object[]) Array.newInstance(clazz.getComponentType(), strings.length);\n      for(int i=0; i<strings.length; i++){\n        array[i] = cast(strings[i], subType);\n      }\n      return (E) array;\n    } else if (Map.class.isAssignableFrom(clazz)) {\n      return (E) decodeMap(value);\n    } else if(clazz.isEnum()){\n      // (case: enumeration)\n      Class c = (Class) clazz;\n      if(value == null){ return null; }\n      if (value.charAt(0) == '\"') value = value.substring(1);\n      if (value.charAt(value.length()-1) == '\"') value = value.substring(0, value.length() - 1);\n      try {\n        return (E) Enum.valueOf(c, value);\n      } catch (Exception e){\n        try {\n          return (E) Enum.valueOf(c, value.toLowerCase());\n        } catch (Exception e2){\n          try {\n            return (E) Enum.valueOf(c, value.toUpperCase());\n          } catch (Exception e3){\n            return (E) Enum.valueOf(c,\n                (Character.isUpperCase(value.charAt(0)) ? Character.toLowerCase(value.charAt(0)) : Character.toUpperCase(value.charAt(0))) +\n                    value.substring(1));\n          }\n        }\n      }\n    } else if (ObjectOutputStream.class.isAssignableFrom(clazz)) {\n      // (case: object output stream)\n      try {\n        return (E) new ObjectOutputStream((OutputStream) cast(value, OutputStream.class));\n      } catch (IOException e) {\n        throw new RuntimeException(e);\n      }\n    } else if (ObjectInputStream.class.isAssignableFrom(clazz)) {\n      // (case: object input stream)\n      try {\n        return (E) new ObjectInputStream((InputStream) cast(value, InputStream.class));\n      } catch (IOException e) {\n        throw new RuntimeException(e);\n      }\n    } else if (OutputStream.class.isAssignableFrom(clazz)) {\n      // (case: output stream)\n      if (value.equalsIgnoreCase(\"stdout\") || value.equalsIgnoreCase(\"out\")) { return (E) System.out; }\n      if (value.equalsIgnoreCase(\"stderr\") || value.equalsIgnoreCase(\"err\")) { return (E) System.err; }\n      File toWriteTo = cast(value, File.class);\n      try {\n        if (!toWriteTo.exists() && !toWriteTo.createNewFile()) {\n          throw new IllegalStateException(\"Could not create output stream (cannot write file): \" + value);\n        }\n        return (E) new FileOutputStream((File) cast(value, File.class));\n      } catch (IOException e) {\n        throw new RuntimeException(e);\n      }\n    } else if (InputStream.class.isAssignableFrom(clazz)) {\n      // (case: input stream)\n      if (value.equalsIgnoreCase(\"stdin\") || value.equalsIgnoreCase(\"in\")) { return (E) System.in; }\n      File toReadFrom = cast(value, File.class);\n      try {\n        if (!toReadFrom.exists() || !toReadFrom.canRead()) {\n          throw new IllegalStateException(\"Could not create input stream (cannot read file): \" + value);\n        }\n        return (E) new FileInputStream((File) cast(value, File.class));\n      } catch (IOException e) {\n        throw new RuntimeException(e);\n      }\n    } else {\n      try {\n        // (case: can parse from string)\n        Method decode = clazz.getMethod(\"fromString\", String.class);\n        return (E) decode.invoke(MetaClass.create(clazz), value);\n      } catch (NoSuchMethodException e) {  // Silent errors for misc failures\n      } catch (InvocationTargetException e) {\n      } catch (IllegalAccessException e) {\n      } catch (ClassCastException e) {\n      }\n\n      // Pass 2: Guess what the object could be\n      if (Tree.class.isAssignableFrom(clazz)) {\n        // (case: reading a tree)\n        try {\n          return (E) new PennTreeReader(new StringReader(value), new LabeledScoredTreeFactory(CoreLabel.factory())).readTree();\n        } catch (IOException e) {\n          throw new RuntimeException(e);\n        }\n      } else if (Collection.class.isAssignableFrom(clazz)) {\n        // (case: reading a collection)\n        Collection rtn;\n        if (Modifier.isAbstract(clazz.getModifiers())) {\n          rtn = abstractToConcreteCollectionMap.get(clazz).createInstance();\n        } else {\n          rtn = MetaClass.create(clazz).createInstance();\n        }\n        Class <?> subType = clazz.getComponentType();\n        String[] strings = decodeArray(value);\n        for (String string : strings) {\n          if (subType == null) {\n            rtn.add(castWithoutKnowingType(string));\n          } else {\n            rtn.add(cast(string, subType));\n          }\n        }\n        return (E) rtn;\n      } else {\n        // We could not cast this object\n        return null;\n      }\n    }\n  }","commit_id":"d9f17248270f7fcf5da47bf89c29e501b0a092c2","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"/**\n   * Decode an array encoded as a String. This entails a comma separated value enclosed in brackets\n   * or parentheses\n   * @param encoded The String encoded array\n   * @return A String array corresponding to the encoded array\n   */\n\tprivate static String[] decodeArray(String encoded){\n    if (encoded.length() == 0) return new String[]{};\n\t\tchar[] chars = encoded.trim().toCharArray();\n\n\t\t//--Parse the String\n\t\t//(state)\n\t\tchar quoteCloseChar = (char) 0;\n\t\tList<StringBuilder> terms = new LinkedList<StringBuilder>();\n\t\tStringBuilder current = new StringBuilder();\n\t\t//(start/stop overhead)\n\t\tint start = 0; int end = chars.length;\n\t\tif(chars[0] == '('){ start += 1; end -= 1; if(chars[end] != ')') throw new IllegalArgumentException(\"Unclosed paren in encoded array: \" + encoded); }\n\t\tif(chars[0] == '['){ start += 1; end -= 1; if(chars[end] != ']') throw new IllegalArgumentException(\"Unclosed bracket in encoded array: \" + encoded); }\n    if(chars[0] == '{'){ start += 1; end -= 1; if(chars[end] != '}') throw new IllegalArgumentException(\"Unclosed bracket in encoded array: \" + encoded); }\n\t\t//(finite state automata)\n\t\tfor(int i=start; i<end; i++){\n\t\t\tif(chars[i] == '\\\\'){\n\t\t\t\t//(case: escaped character)\n\t\t\t\tif(i == chars.length - 1) throw new IllegalArgumentException(\"Last character of encoded pair is escape character: \" + encoded);\n\t\t\t\tcurrent.append(chars[i+1]);\n\t\t\t\ti += 1;\n\t\t\t} else if(quoteCloseChar != 0){\n\t\t\t\t//(case: in quotes)\n\t\t\t\tif(chars[i] == quoteCloseChar){\n\t\t\t\t\tquoteCloseChar = (char) 0;\n\t\t\t\t}else{\n\t\t\t\t\tcurrent.append(chars[i]);\n\t\t\t\t}\n\t\t\t}else{\n\t\t\t\t//(case: normal)\n\t\t\t\tif(chars[i] == '\"'){\n          quoteCloseChar = '\"';\n\t\t\t\t} else if(chars[i] == '\\''){\n          quoteCloseChar = '\\'';\n\t\t\t\t} else if(chars[i] == ',' || chars[i] == ' ' || chars[i] == '\\t' || chars[i] == '\\n'){\n\t\t\t\t\t//break\n          if (current.length() > 0) {\n\t\t\t\t\t  terms.add(current);\n          }\n\t\t\t\t\tcurrent = new StringBuilder();\n\t\t\t\t}else{\n\t\t\t\t\tcurrent.append(chars[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t//--Return\n\t\tif(current.length() > 0) terms.add(current);\n\t\tString[] rtn = new String[terms.size()];\n\t\tint i=0;\n\t\tfor(StringBuilder b : terms){\n\t\t\trtn[i] = b.toString().trim();\n\t\t\ti += 1;\n\t\t}\n    return rtn;\n  }","id":16008,"modified_method":"/**\n   * Decode an array encoded as a String. This entails a comma separated value enclosed in brackets\n   * or parentheses\n   * @param encoded The String encoded array\n   * @return A String array corresponding to the encoded array\n   */\n\tprivate static String[] decodeArray(String encoded){\n    if (encoded.length() == 0) return new String[]{};\n\t\tchar[] chars = encoded.trim().toCharArray();\n\n\t\t//--Parse the String\n\t\t//(state)\n\t\tchar quoteCloseChar = (char) 0;\n\t\tList<StringBuilder> terms = new LinkedList<StringBuilder>();\n\t\tStringBuilder current = new StringBuilder();\n\t\t//(start/stop overhead)\n\t\tint start = 0; int end = chars.length;\n\t\tif(chars[0] == '('){ start += 1; end -= 1; if(chars[end] != ')') throw new IllegalArgumentException(\"Unclosed paren in encoded array: \" + encoded); }\n\t\tif(chars[0] == '['){ start += 1; end -= 1; if(chars[end] != ']') throw new IllegalArgumentException(\"Unclosed bracket in encoded array: \" + encoded); }\n    if(chars[0] == '{'){ start += 1; end -= 1; if(chars[end] != '}') throw new IllegalArgumentException(\"Unclosed bracket in encoded array: \" + encoded); }\n\t\t//(finite state automata)\n\t\tfor(int i=start; i<end; i++){\n\t\t\tif(chars[i] == '\\\\'){\n\t\t\t\t//(case: escaped character)\n\t\t\t\tif(i == chars.length - 1) throw new IllegalArgumentException(\"Last character of encoded pair is escape character: \" + encoded);\n\t\t\t\tcurrent.append(chars[i+1]);\n\t\t\t\ti += 1;\n\t\t\t} else if(quoteCloseChar != 0){\n\t\t\t\t//(case: in quotes)\n\t\t\t\tif(chars[i] == quoteCloseChar){\n\t\t\t\t\tquoteCloseChar = (char) 0;\n\t\t\t\t}else{\n\t\t\t\t\tcurrent.append(chars[i]);\n\t\t\t\t}\n\t\t\t}else{\n\t\t\t\t//(case: normal)\n\t\t\t\tif(chars[i] == '\"'){\n          quoteCloseChar = '\"';\n\t\t\t\t} else if(chars[i] == '\\''){\n          quoteCloseChar = '\\'';\n\t\t\t\t} else if(chars[i] == ',' || chars[i] == ';' || chars[i] == ' ' || chars[i] == '\\t' || chars[i] == '\\n'){\n\t\t\t\t\t//break\n          if (current.length() > 0) {\n\t\t\t\t\t  terms.add(current);\n          }\n\t\t\t\t\tcurrent = new StringBuilder();\n\t\t\t\t}else{\n\t\t\t\t\tcurrent.append(chars[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t//--Return\n\t\tif(current.length() > 0) terms.add(current);\n\t\tString[] rtn = new String[terms.size()];\n\t\tint i=0;\n\t\tfor(StringBuilder b : terms){\n\t\t\trtn[i] = b.toString().trim();\n\t\t\ti += 1;\n\t\t}\n    return rtn;\n  }","commit_id":"d9f17248270f7fcf5da47bf89c29e501b0a092c2","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"@Test\n  public void testCastArray() {\n    Integer[] ints1 = MetaClass.cast(\"[1,2,3]\", Integer[].class);\n    assertArrayEquals(new Integer[]{1,2,3}, ints1);\n    Integer[] ints2 = MetaClass.cast(\"(1,2,3)\", Integer[].class);\n    assertArrayEquals(new Integer[]{1,2,3}, ints2);\n    Integer[] ints3 = MetaClass.cast(\"1, 2, 3\", Integer[].class);\n    assertArrayEquals(new Integer[]{1,2,3}, ints3);\n    Integer[] ints4 = MetaClass.cast(\"1 2 3\", Integer[].class);\n    assertArrayEquals(new Integer[]{1,2,3}, ints4);\n    Integer[] ints5 = MetaClass.cast(\"1   2   3\", Integer[].class);\n    assertArrayEquals(new Integer[]{1,2,3}, ints5);\n\n    Integer[] intsEmpty = MetaClass.cast(\"\", Integer[].class);\n    assertArrayEquals(new Integer[]{}, intsEmpty);\n  }","id":16009,"modified_method":"@Test\n  public void testCastArray() {\n    Integer[] ints1 = MetaClass.cast(\"[1,2,3]\", Integer[].class);\n    assertArrayEquals(new Integer[]{1,2,3}, ints1);\n    Integer[] ints2 = MetaClass.cast(\"(1,2,3)\", Integer[].class);\n    assertArrayEquals(new Integer[]{1,2,3}, ints2);\n    Integer[] ints3 = MetaClass.cast(\"1, 2, 3\", Integer[].class);\n    assertArrayEquals(new Integer[]{1,2,3}, ints3);\n    Integer[] ints4 = MetaClass.cast(\"1 2 3\", Integer[].class);\n    assertArrayEquals(new Integer[]{1,2,3}, ints4);\n    Integer[] ints5 = MetaClass.cast(\"1   2   3\", Integer[].class);\n    assertArrayEquals(new Integer[]{1,2,3}, ints5);\n    Integer[] ints6 = MetaClass.cast(\"\\n1 \\n\\n  2   3\", Integer[].class);\n    assertArrayEquals(new Integer[]{1,2,3}, ints6);\n\n    Integer[] intsEmpty = MetaClass.cast(\"\", Integer[].class);\n    assertArrayEquals(new Integer[]{}, intsEmpty);\n  }","commit_id":"d9f17248270f7fcf5da47bf89c29e501b0a092c2","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"/**\n   * Cast a String representation of an object into that object.\n   * E.g. \"5.4\" will be cast to a Double; \"[1,2,3]\" will be cast\n   * to an Integer[].\n   *\n   * NOTE: Date parses from a Long\n   *\n   * @param <E> The type of the object returned (same as type)\n   * @param value The string representation of the object\n   * @param type The type (usually class) to be returned (same as E)\n   * @return An object corresponding to the String value passed\n   */\n  @SuppressWarnings({ \"unchecked\", \"rawtypes\" })\n  public static final <E> E cast(String value, Type type){\n    //--Get Type\n    Class <?> clazz = null;\n    Type[] params = null;\n    if(type instanceof Class){\n      clazz = (Class <?>) type;\n    }else if(type instanceof ParameterizedType){\n      ParameterizedType pt = (ParameterizedType) type;\n      params = pt.getActualTypeArguments();\n      clazz = (Class <?>) pt.getRawType();\n    }else{\n      clazz = type2class(type);\n      throw new IllegalArgumentException(\"Cannot cast to type (unhandled type): \" + type);\n    }\n    //--Cast\n    if(String.class.isAssignableFrom(clazz)){\n      // (case: String)\n      return (E) value;\n    }else if(Boolean.class.isAssignableFrom(clazz) || boolean.class.isAssignableFrom(clazz)){\n      //(case: boolean)\n      if(\"1\".equals(value)){ return (E) new Boolean(true); }\n      return (E) new Boolean( Boolean.parseBoolean(value) );\n    }else if(Integer.class.isAssignableFrom(clazz) || int.class.isAssignableFrom(clazz)){\n      //(case: integer)\n      try {\n        return (E) new Integer(Integer.parseInt(value));\n      } catch (NumberFormatException e) {\n        return (E) new Integer((int) Double.parseDouble(value));\n      }\n    }else if(Long.class.isAssignableFrom(clazz) || long.class.isAssignableFrom(clazz)){\n      //(case: long)\n      try {\n        return (E) new Long(Long.parseLong(value));\n      } catch (NumberFormatException e) {\n        return (E) new Long((long) Double.parseDouble(value));\n      }\n    }else if(Float.class.isAssignableFrom(clazz) || float.class.isAssignableFrom(clazz)){\n      //(case: float)\n      if(value == null){ return (E) new Float(Float.NaN); }\n      return (E) new Float(Float.parseFloat(value));\n    }else if(Double.class.isAssignableFrom(clazz) || double.class.isAssignableFrom(clazz)){\n      //(case: double)\n      if(value == null){ return (E) new Double(Double.NaN); }\n      return (E) new Double(Double.parseDouble(value));\n    }else if(Short.class.isAssignableFrom(clazz) || short.class.isAssignableFrom(clazz)){\n      //(case: short)\n      try {\n        return (E) new Short(Short.parseShort(value));\n      } catch (NumberFormatException e) {\n        return (E) new Short((short) Double.parseDouble(value));\n      }\n    }else if(Byte.class.isAssignableFrom(clazz) || byte.class.isAssignableFrom(clazz)){\n      //(case: byte)\n      try {\n        return (E) new Byte(Byte.parseByte(value));\n      } catch (NumberFormatException e) {\n        return (E) new Byte((byte) Double.parseDouble(value));\n      }\n    }else if(Character.class.isAssignableFrom(clazz) || char.class.isAssignableFrom(clazz)){\n      //(case: char)\n      return (E) new Character((char) Integer.parseInt(value));\n    }else if(java.util.Date.class.isAssignableFrom(clazz)){\n      //(case: date)\n      try {\n        return (E) new Date(Long.parseLong(value));\n      } catch (NumberFormatException e) {\n        return null;\n      }\n    } else if(java.util.Calendar.class.isAssignableFrom(clazz)){\n      //(case: date)\n      try {\n        Date d = new Date(Long.parseLong(value));\n        GregorianCalendar cal = new GregorianCalendar();\n        cal.setTime(d);\n        return (E) cal;\n      } catch (NumberFormatException e) {\n        return null;\n      }\n    } else if(File.class.isAssignableFrom(clazz)){\n      return (E) new File(value);\n    } else if(Class.class.isAssignableFrom(clazz)){\n      try {\n        return (E) Class.forName(value);\n      } catch (ClassNotFoundException e) {\n        return null;\n      }\n    } else if(clazz.isArray()){\n      if(value == null){ return null; }\n      Class <?> subType = clazz.getComponentType();\n      // (case: array)\n      String[] strings = decodeArray(value);\n      Object[] array = (Object[]) Array.newInstance(clazz.getComponentType(), strings.length);\n      for(int i=0; i<strings.length; i++){\n        array[i] = cast(strings[i], subType);\n      }\n      return (E) array;\n    } else if(clazz.isEnum()){\n      // (case: enumeration)\n      Class c = (Class) clazz;\n      if(value == null){ return null; }\n      if (value.charAt(0) == '\"') value = value.substring(1);\n      if (value.charAt(value.length()-1) == '\"') value = value.substring(0, value.length() - 1);\n      try {\n        return (E) Enum.valueOf(c, value);\n      } catch (Exception e){\n        try {\n          return (E) Enum.valueOf(c, value.toLowerCase());\n        } catch (Exception e2){\n          try {\n            return (E) Enum.valueOf(c, value.toUpperCase());\n          } catch (Exception e3){\n            return (E) Enum.valueOf(c,\n                (Character.isUpperCase(value.charAt(0)) ? Character.toLowerCase(value.charAt(0)) : Character.toUpperCase(value.charAt(0))) +\n                    value.substring(1));\n          }\n        }\n      }\n    } else if (ObjectOutputStream.class.isAssignableFrom(clazz)) {\n      // (case: object output stream)\n      try {\n        return (E) new ObjectOutputStream((OutputStream) cast(value, OutputStream.class));\n      } catch (IOException e) {\n        throw new RuntimeException(e);\n      }\n    } else if (ObjectInputStream.class.isAssignableFrom(clazz)) {\n      // (case: object input stream)\n      try {\n        return (E) new ObjectInputStream((InputStream) cast(value, InputStream.class));\n      } catch (IOException e) {\n        throw new RuntimeException(e);\n      }\n    } else if (OutputStream.class.isAssignableFrom(clazz)) {\n      // (case: output stream)\n      if (value.equalsIgnoreCase(\"stdout\") || value.equalsIgnoreCase(\"out\")) { return (E) System.out; }\n      if (value.equalsIgnoreCase(\"stderr\") || value.equalsIgnoreCase(\"err\")) { return (E) System.err; }\n      File toWriteTo = cast(value, File.class);\n      try {\n        if (!toWriteTo.exists() && !toWriteTo.createNewFile()) {\n          throw new IllegalStateException(\"Could not create output stream (cannot write file): \" + value);\n        }\n        return (E) new FileOutputStream((File) cast(value, File.class));\n      } catch (IOException e) {\n        throw new RuntimeException(e);\n      }\n    } else if (InputStream.class.isAssignableFrom(clazz)) {\n      // (case: input stream)\n      if (value.equalsIgnoreCase(\"stdin\") || value.equalsIgnoreCase(\"in\")) { return (E) System.in; }\n      File toReadFrom = cast(value, File.class);\n      try {\n        if (!toReadFrom.exists() || !toReadFrom.canRead()) {\n          throw new IllegalStateException(\"Could not create input stream (cannot read file): \" + value);\n        }\n        return (E) new FileInputStream((File) cast(value, File.class));\n      } catch (IOException e) {\n        throw new RuntimeException(e);\n      }\n    } else {\n      try {\n        // (case: can parse from string)\n        Method decode = clazz.getMethod(\"fromString\", String.class);\n        return (E) decode.invoke(MetaClass.create(clazz), value);\n      } catch (NoSuchMethodException e) {  // Silent errors for misc failures\n      } catch (InvocationTargetException e) {\n      } catch (IllegalAccessException e) {\n      } catch (ClassCastException e) {\n      }\n\n      // Pass 2: Guess what the object could be\n      if (Tree.class.isAssignableFrom(clazz)) {\n        // (case: reading a tree)\n        try {\n          return (E) new PennTreeReader(new StringReader(value), new LabeledScoredTreeFactory(CoreLabel.factory())).readTree();\n        } catch (IOException e) {\n          throw new RuntimeException(e);\n        }\n      } else if (Collection.class.isAssignableFrom(clazz)) {\n        // (case: reading a collection)\n        Collection rtn;\n        if (Modifier.isAbstract(clazz.getModifiers())) {\n          rtn = abstractToConcreteCollectionMap.get(clazz).createInstance();\n        } else {\n          rtn = MetaClass.create(clazz).createInstance();\n        }\n        Class <?> subType = clazz.getComponentType();\n        String[] strings = decodeArray(value);\n        for (String string : strings) {\n          if (subType == null) {\n            rtn.add(castWithoutKnowingType(string));\n          } else {\n            rtn.add(cast(string, subType));\n          }\n        }\n        return (E) rtn;\n      } else {\n        // We could not cast this object\n        return null;\n      }\n    }\n  }","id":16010,"modified_method":"/**\n   * Cast a String representation of an object into that object.\n   * E.g. \"5.4\" will be cast to a Double; \"[1,2,3]\" will be cast\n   * to an Integer[].\n   *\n   * NOTE: Date parses from a Long\n   *\n   * @param <E> The type of the object returned (same as type)\n   * @param value The string representation of the object\n   * @param type The type (usually class) to be returned (same as E)\n   * @return An object corresponding to the String value passed\n   */\n  @SuppressWarnings({ \"unchecked\", \"rawtypes\" })\n  public static <E> E cast(String value, Type type){\n    //--Get Type\n    Class <?> clazz;\n    if(type instanceof Class){\n      clazz = (Class <?>) type;\n    }else if(type instanceof ParameterizedType){\n      ParameterizedType pt = (ParameterizedType) type;\n      clazz = (Class <?>) pt.getRawType();\n    }else{\n      throw new IllegalArgumentException(\"Cannot cast to type (unhandled type): \" + type);\n    }\n    //--Cast\n    if(String.class.isAssignableFrom(clazz)){\n      // (case: String)\n      return (E) value;\n    }else if(Boolean.class.isAssignableFrom(clazz) || boolean.class.isAssignableFrom(clazz)){\n      //(case: boolean)\n      if(\"1\".equals(value)){ return (E) Boolean.TRUE; }\n      return (E) Boolean.valueOf(Boolean.parseBoolean(value));\n    }else if(Integer.class.isAssignableFrom(clazz) || int.class.isAssignableFrom(clazz)){\n      //(case: integer)\n      try {\n        return (E) new Integer(Integer.parseInt(value));\n      } catch (NumberFormatException e) {\n        return (E) new Integer((int) Double.parseDouble(value));\n      }\n    }else if(Long.class.isAssignableFrom(clazz) || long.class.isAssignableFrom(clazz)){\n      //(case: long)\n      try {\n        return (E) new Long(Long.parseLong(value));\n      } catch (NumberFormatException e) {\n        return (E) new Long((long) Double.parseDouble(value));\n      }\n    }else if(Float.class.isAssignableFrom(clazz) || float.class.isAssignableFrom(clazz)){\n      //(case: float)\n      if(value == null){ return (E) new Float(Float.NaN); }\n      return (E) new Float(Float.parseFloat(value));\n    }else if(Double.class.isAssignableFrom(clazz) || double.class.isAssignableFrom(clazz)){\n      //(case: double)\n      if(value == null){ return (E) new Double(Double.NaN); }\n      return (E) new Double(Double.parseDouble(value));\n    }else if(Short.class.isAssignableFrom(clazz) || short.class.isAssignableFrom(clazz)){\n      //(case: short)\n      try {\n        return (E) new Short(Short.parseShort(value));\n      } catch (NumberFormatException e) {\n        return (E) new Short((short) Double.parseDouble(value));\n      }\n    }else if(Byte.class.isAssignableFrom(clazz) || byte.class.isAssignableFrom(clazz)){\n      //(case: byte)\n      try {\n        return (E) new Byte(Byte.parseByte(value));\n      } catch (NumberFormatException e) {\n        return (E) new Byte((byte) Double.parseDouble(value));\n      }\n    }else if(Character.class.isAssignableFrom(clazz) || char.class.isAssignableFrom(clazz)){\n      //(case: char)\n      return (E) new Character((char) Integer.parseInt(value));\n    }else if(java.util.Date.class.isAssignableFrom(clazz)){\n      //(case: date)\n      try {\n        return (E) new Date(Long.parseLong(value));\n      } catch (NumberFormatException e) {\n        return null;\n      }\n    } else if(java.util.Calendar.class.isAssignableFrom(clazz)){\n      //(case: date)\n      try {\n        Date d = new Date(Long.parseLong(value));\n        GregorianCalendar cal = new GregorianCalendar();\n        cal.setTime(d);\n        return (E) cal;\n      } catch (NumberFormatException e) {\n        return null;\n      }\n    } else if(File.class.isAssignableFrom(clazz)){\n      return (E) new File(value);\n    } else if(Class.class.isAssignableFrom(clazz)){\n      try {\n        return (E) Class.forName(value);\n      } catch (ClassNotFoundException e) {\n        return null;\n      }\n    } else if(clazz.isArray()){\n      if(value == null){ return null; }\n      Class <?> subType = clazz.getComponentType();\n      // (case: array)\n      String[] strings = decodeArray(value);\n      Object[] array = (Object[]) Array.newInstance(clazz.getComponentType(), strings.length);\n      for(int i=0; i<strings.length; i++){\n        array[i] = cast(strings[i], subType);\n      }\n      return (E) array;\n    } else if (Map.class.isAssignableFrom(clazz)) {\n      return (E) decodeMap(value);\n    } else if(clazz.isEnum()){\n      // (case: enumeration)\n      Class c = (Class) clazz;\n      if(value == null){ return null; }\n      if (value.charAt(0) == '\"') value = value.substring(1);\n      if (value.charAt(value.length()-1) == '\"') value = value.substring(0, value.length() - 1);\n      try {\n        return (E) Enum.valueOf(c, value);\n      } catch (Exception e){\n        try {\n          return (E) Enum.valueOf(c, value.toLowerCase());\n        } catch (Exception e2){\n          try {\n            return (E) Enum.valueOf(c, value.toUpperCase());\n          } catch (Exception e3){\n            return (E) Enum.valueOf(c,\n                (Character.isUpperCase(value.charAt(0)) ? Character.toLowerCase(value.charAt(0)) : Character.toUpperCase(value.charAt(0))) +\n                    value.substring(1));\n          }\n        }\n      }\n    } else if (ObjectOutputStream.class.isAssignableFrom(clazz)) {\n      // (case: object output stream)\n      try {\n        return (E) new ObjectOutputStream((OutputStream) cast(value, OutputStream.class));\n      } catch (IOException e) {\n        throw new RuntimeException(e);\n      }\n    } else if (ObjectInputStream.class.isAssignableFrom(clazz)) {\n      // (case: object input stream)\n      try {\n        return (E) new ObjectInputStream((InputStream) cast(value, InputStream.class));\n      } catch (IOException e) {\n        throw new RuntimeException(e);\n      }\n    } else if (OutputStream.class.isAssignableFrom(clazz)) {\n      // (case: output stream)\n      if (value.equalsIgnoreCase(\"stdout\") || value.equalsIgnoreCase(\"out\")) { return (E) System.out; }\n      if (value.equalsIgnoreCase(\"stderr\") || value.equalsIgnoreCase(\"err\")) { return (E) System.err; }\n      File toWriteTo = cast(value, File.class);\n      try {\n        if (!toWriteTo.exists() && !toWriteTo.createNewFile()) {\n          throw new IllegalStateException(\"Could not create output stream (cannot write file): \" + value);\n        }\n        return (E) new FileOutputStream((File) cast(value, File.class));\n      } catch (IOException e) {\n        throw new RuntimeException(e);\n      }\n    } else if (InputStream.class.isAssignableFrom(clazz)) {\n      // (case: input stream)\n      if (value.equalsIgnoreCase(\"stdin\") || value.equalsIgnoreCase(\"in\")) { return (E) System.in; }\n      File toReadFrom = cast(value, File.class);\n      try {\n        if (!toReadFrom.exists() || !toReadFrom.canRead()) {\n          throw new IllegalStateException(\"Could not create input stream (cannot read file): \" + value);\n        }\n        return (E) new FileInputStream((File) cast(value, File.class));\n      } catch (IOException e) {\n        throw new RuntimeException(e);\n      }\n    } else {\n      try {\n        // (case: can parse from string)\n        Method decode = clazz.getMethod(\"fromString\", String.class);\n        return (E) decode.invoke(MetaClass.create(clazz), value);\n      } catch (NoSuchMethodException e) {  // Silent errors for misc failures\n      } catch (InvocationTargetException e) {\n      } catch (IllegalAccessException e) {\n      } catch (ClassCastException e) {\n      }\n\n      // Pass 2: Guess what the object could be\n      if (Tree.class.isAssignableFrom(clazz)) {\n        // (case: reading a tree)\n        try {\n          return (E) new PennTreeReader(new StringReader(value), new LabeledScoredTreeFactory(CoreLabel.factory())).readTree();\n        } catch (IOException e) {\n          throw new RuntimeException(e);\n        }\n      } else if (Collection.class.isAssignableFrom(clazz)) {\n        // (case: reading a collection)\n        Collection rtn;\n        if (Modifier.isAbstract(clazz.getModifiers())) {\n          rtn = abstractToConcreteCollectionMap.get(clazz).createInstance();\n        } else {\n          rtn = MetaClass.create(clazz).createInstance();\n        }\n        Class <?> subType = clazz.getComponentType();\n        String[] strings = decodeArray(value);\n        for (String string : strings) {\n          if (subType == null) {\n            rtn.add(castWithoutKnowingType(string));\n          } else {\n            rtn.add(cast(string, subType));\n          }\n        }\n        return (E) rtn;\n      } else {\n        // We could not cast this object\n        return null;\n      }\n    }\n  }","commit_id":"5ee833d9fd9ff5a5d6e8e6ccd45e12f12462bef6","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"/**\n   * Decode an array encoded as a String. This entails a comma separated value enclosed in brackets\n   * or parentheses\n   * @param encoded The String encoded array\n   * @return A String array corresponding to the encoded array\n   */\n\tprivate static String[] decodeArray(String encoded){\n    if (encoded.length() == 0) return new String[]{};\n\t\tchar[] chars = encoded.trim().toCharArray();\n\n\t\t//--Parse the String\n\t\t//(state)\n\t\tchar quoteCloseChar = (char) 0;\n\t\tList<StringBuilder> terms = new LinkedList<StringBuilder>();\n\t\tStringBuilder current = new StringBuilder();\n\t\t//(start/stop overhead)\n\t\tint start = 0; int end = chars.length;\n\t\tif(chars[0] == '('){ start += 1; end -= 1; if(chars[end] != ')') throw new IllegalArgumentException(\"Unclosed paren in encoded array: \" + encoded); }\n\t\tif(chars[0] == '['){ start += 1; end -= 1; if(chars[end] != ']') throw new IllegalArgumentException(\"Unclosed bracket in encoded array: \" + encoded); }\n    if(chars[0] == '{'){ start += 1; end -= 1; if(chars[end] != '}') throw new IllegalArgumentException(\"Unclosed bracket in encoded array: \" + encoded); }\n\t\t//(finite state automata)\n\t\tfor(int i=start; i<end; i++){\n\t\t\tif(chars[i] == '\\\\'){\n\t\t\t\t//(case: escaped character)\n\t\t\t\tif(i == chars.length - 1) throw new IllegalArgumentException(\"Last character of encoded pair is escape character: \" + encoded);\n\t\t\t\tcurrent.append(chars[i+1]);\n\t\t\t\ti += 1;\n\t\t\t} else if(quoteCloseChar != 0){\n\t\t\t\t//(case: in quotes)\n\t\t\t\tif(chars[i] == quoteCloseChar){\n\t\t\t\t\tquoteCloseChar = (char) 0;\n\t\t\t\t}else{\n\t\t\t\t\tcurrent.append(chars[i]);\n\t\t\t\t}\n\t\t\t}else{\n\t\t\t\t//(case: normal)\n\t\t\t\tif(chars[i] == '\"'){\n          quoteCloseChar = '\"';\n\t\t\t\t} else if(chars[i] == '\\''){\n          quoteCloseChar = '\\'';\n\t\t\t\t} else if(chars[i] == ',' || chars[i] == ' ' || chars[i] == '\\t' || chars[i] == '\\n'){\n\t\t\t\t\t//break\n          if (current.length() > 0) {\n\t\t\t\t\t  terms.add(current);\n          }\n\t\t\t\t\tcurrent = new StringBuilder();\n\t\t\t\t}else{\n\t\t\t\t\tcurrent.append(chars[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t//--Return\n\t\tif(current.length() > 0) terms.add(current);\n\t\tString[] rtn = new String[terms.size()];\n\t\tint i=0;\n\t\tfor(StringBuilder b : terms){\n\t\t\trtn[i] = b.toString().trim();\n\t\t\ti += 1;\n\t\t}\n    return rtn;\n  }","id":16011,"modified_method":"/**\n   * Decode an array encoded as a String. This entails a comma separated value enclosed in brackets\n   * or parentheses\n   * @param encoded The String encoded array\n   * @return A String array corresponding to the encoded array\n   */\n\tprivate static String[] decodeArray(String encoded){\n    if (encoded.length() == 0) return new String[]{};\n\t\tchar[] chars = encoded.trim().toCharArray();\n\n\t\t//--Parse the String\n\t\t//(state)\n\t\tchar quoteCloseChar = (char) 0;\n\t\tList<StringBuilder> terms = new LinkedList<StringBuilder>();\n\t\tStringBuilder current = new StringBuilder();\n\t\t//(start/stop overhead)\n\t\tint start = 0; int end = chars.length;\n\t\tif(chars[0] == '('){ start += 1; end -= 1; if(chars[end] != ')') throw new IllegalArgumentException(\"Unclosed paren in encoded array: \" + encoded); }\n\t\tif(chars[0] == '['){ start += 1; end -= 1; if(chars[end] != ']') throw new IllegalArgumentException(\"Unclosed bracket in encoded array: \" + encoded); }\n    if(chars[0] == '{'){ start += 1; end -= 1; if(chars[end] != '}') throw new IllegalArgumentException(\"Unclosed bracket in encoded array: \" + encoded); }\n\t\t//(finite state automata)\n\t\tfor(int i=start; i<end; i++){\n\t\t\tif(chars[i] == '\\\\'){\n\t\t\t\t//(case: escaped character)\n\t\t\t\tif(i == chars.length - 1) throw new IllegalArgumentException(\"Last character of encoded pair is escape character: \" + encoded);\n\t\t\t\tcurrent.append(chars[i+1]);\n\t\t\t\ti += 1;\n\t\t\t} else if(quoteCloseChar != 0){\n\t\t\t\t//(case: in quotes)\n\t\t\t\tif(chars[i] == quoteCloseChar){\n\t\t\t\t\tquoteCloseChar = (char) 0;\n\t\t\t\t}else{\n\t\t\t\t\tcurrent.append(chars[i]);\n\t\t\t\t}\n\t\t\t}else{\n\t\t\t\t//(case: normal)\n\t\t\t\tif(chars[i] == '\"'){\n          quoteCloseChar = '\"';\n\t\t\t\t} else if(chars[i] == '\\''){\n          quoteCloseChar = '\\'';\n\t\t\t\t} else if(chars[i] == ',' || chars[i] == ';' || chars[i] == ' ' || chars[i] == '\\t' || chars[i] == '\\n'){\n\t\t\t\t\t//break\n          if (current.length() > 0) {\n\t\t\t\t\t  terms.add(current);\n          }\n\t\t\t\t\tcurrent = new StringBuilder();\n\t\t\t\t}else{\n\t\t\t\t\tcurrent.append(chars[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t//--Return\n\t\tif(current.length() > 0) terms.add(current);\n\t\tString[] rtn = new String[terms.size()];\n\t\tint i=0;\n\t\tfor(StringBuilder b : terms){\n\t\t\trtn[i] = b.toString().trim();\n\t\t\ti += 1;\n\t\t}\n    return rtn;\n  }","commit_id":"5ee833d9fd9ff5a5d6e8e6ccd45e12f12462bef6","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"@Test\n  public void testCastArray() {\n    Integer[] ints1 = MetaClass.cast(\"[1,2,3]\", Integer[].class);\n    assertArrayEquals(new Integer[]{1,2,3}, ints1);\n    Integer[] ints2 = MetaClass.cast(\"(1,2,3)\", Integer[].class);\n    assertArrayEquals(new Integer[]{1,2,3}, ints2);\n    Integer[] ints3 = MetaClass.cast(\"1, 2, 3\", Integer[].class);\n    assertArrayEquals(new Integer[]{1,2,3}, ints3);\n    Integer[] ints4 = MetaClass.cast(\"1 2 3\", Integer[].class);\n    assertArrayEquals(new Integer[]{1,2,3}, ints4);\n    Integer[] ints5 = MetaClass.cast(\"1   2   3\", Integer[].class);\n    assertArrayEquals(new Integer[]{1,2,3}, ints5);\n\n    Integer[] intsEmpty = MetaClass.cast(\"\", Integer[].class);\n    assertArrayEquals(new Integer[]{}, intsEmpty);\n  }","id":16012,"modified_method":"@Test\n  public void testCastArray() {\n    Integer[] ints1 = MetaClass.cast(\"[1,2,3]\", Integer[].class);\n    assertArrayEquals(new Integer[]{1,2,3}, ints1);\n    Integer[] ints2 = MetaClass.cast(\"(1,2,3)\", Integer[].class);\n    assertArrayEquals(new Integer[]{1,2,3}, ints2);\n    Integer[] ints3 = MetaClass.cast(\"1, 2, 3\", Integer[].class);\n    assertArrayEquals(new Integer[]{1,2,3}, ints3);\n    Integer[] ints4 = MetaClass.cast(\"1 2 3\", Integer[].class);\n    assertArrayEquals(new Integer[]{1,2,3}, ints4);\n    Integer[] ints5 = MetaClass.cast(\"1   2   3\", Integer[].class);\n    assertArrayEquals(new Integer[]{1,2,3}, ints5);\n    Integer[] ints6 = MetaClass.cast(\"\\n1 \\n\\n  2   3\", Integer[].class);\n    assertArrayEquals(new Integer[]{1,2,3}, ints6);\n\n    Integer[] intsEmpty = MetaClass.cast(\"\", Integer[].class);\n    assertArrayEquals(new Integer[]{}, intsEmpty);\n  }","commit_id":"5ee833d9fd9ff5a5d6e8e6ccd45e12f12462bef6","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"/**\n   * Cast a String representation of an object into that object.\n   * E.g. \"5.4\" will be cast to a Double; \"[1,2,3]\" will be cast\n   * to an Integer[].\n   *\n   * NOTE: Date parses from a Long\n   *\n   * @param <E> The type of the object returned (same as type)\n   * @param value The string representation of the object\n   * @param type The type (usually class) to be returned (same as E)\n   * @return An object corresponding to the String value passed\n   */\n  @SuppressWarnings({ \"unchecked\", \"rawtypes\" })\n  public static final <E> E cast(String value, Type type){\n    //--Get Type\n    Class <?> clazz = null;\n    Type[] params = null;\n    if(type instanceof Class){\n      clazz = (Class <?>) type;\n    }else if(type instanceof ParameterizedType){\n      ParameterizedType pt = (ParameterizedType) type;\n      params = pt.getActualTypeArguments();\n      clazz = (Class <?>) pt.getRawType();\n    }else{\n      clazz = type2class(type);\n      throw new IllegalArgumentException(\"Cannot cast to type (unhandled type): \" + type);\n    }\n    //--Cast\n    if(String.class.isAssignableFrom(clazz)){\n      // (case: String)\n      return (E) value;\n    }else if(Boolean.class.isAssignableFrom(clazz) || boolean.class.isAssignableFrom(clazz)){\n      //(case: boolean)\n      if(\"1\".equals(value)){ return (E) new Boolean(true); }\n      return (E) new Boolean( Boolean.parseBoolean(value) );\n    }else if(Integer.class.isAssignableFrom(clazz) || int.class.isAssignableFrom(clazz)){\n      //(case: integer)\n      try {\n        return (E) new Integer(Integer.parseInt(value));\n      } catch (NumberFormatException e) {\n        return (E) new Integer((int) Double.parseDouble(value));\n      }\n    }else if(Long.class.isAssignableFrom(clazz) || long.class.isAssignableFrom(clazz)){\n      //(case: long)\n      try {\n        return (E) new Long(Long.parseLong(value));\n      } catch (NumberFormatException e) {\n        return (E) new Long((long) Double.parseDouble(value));\n      }\n    }else if(Float.class.isAssignableFrom(clazz) || float.class.isAssignableFrom(clazz)){\n      //(case: float)\n      if(value == null){ return (E) new Float(Float.NaN); }\n      return (E) new Float(Float.parseFloat(value));\n    }else if(Double.class.isAssignableFrom(clazz) || double.class.isAssignableFrom(clazz)){\n      //(case: double)\n      if(value == null){ return (E) new Double(Double.NaN); }\n      return (E) new Double(Double.parseDouble(value));\n    }else if(Short.class.isAssignableFrom(clazz) || short.class.isAssignableFrom(clazz)){\n      //(case: short)\n      try {\n        return (E) new Short(Short.parseShort(value));\n      } catch (NumberFormatException e) {\n        return (E) new Short((short) Double.parseDouble(value));\n      }\n    }else if(Byte.class.isAssignableFrom(clazz) || byte.class.isAssignableFrom(clazz)){\n      //(case: byte)\n      try {\n        return (E) new Byte(Byte.parseByte(value));\n      } catch (NumberFormatException e) {\n        return (E) new Byte((byte) Double.parseDouble(value));\n      }\n    }else if(Character.class.isAssignableFrom(clazz) || char.class.isAssignableFrom(clazz)){\n      //(case: char)\n      return (E) new Character((char) Integer.parseInt(value));\n    }else if(java.util.Date.class.isAssignableFrom(clazz)){\n      //(case: date)\n      try {\n        return (E) new Date(Long.parseLong(value));\n      } catch (NumberFormatException e) {\n        return null;\n      }\n    } else if(java.util.Calendar.class.isAssignableFrom(clazz)){\n      //(case: date)\n      try {\n        Date d = new Date(Long.parseLong(value));\n        GregorianCalendar cal = new GregorianCalendar();\n        cal.setTime(d);\n        return (E) cal;\n      } catch (NumberFormatException e) {\n        return null;\n      }\n    } else if(File.class.isAssignableFrom(clazz)){\n      return (E) new File(value);\n    } else if(Class.class.isAssignableFrom(clazz)){\n      try {\n        return (E) Class.forName(value);\n      } catch (ClassNotFoundException e) {\n        return null;\n      }\n    } else if(clazz.isArray()){\n      if(value == null){ return null; }\n      Class <?> subType = clazz.getComponentType();\n      // (case: array)\n      String[] strings = decodeArray(value);\n      Object[] array = (Object[]) Array.newInstance(clazz.getComponentType(), strings.length);\n      for(int i=0; i<strings.length; i++){\n        array[i] = cast(strings[i], subType);\n      }\n      return (E) array;\n    } else if(clazz.isEnum()){\n      // (case: enumeration)\n      Class c = (Class) clazz;\n      if(value == null){ return null; }\n      if (value.charAt(0) == '\"') value = value.substring(1);\n      if (value.charAt(value.length()-1) == '\"') value = value.substring(0, value.length() - 1);\n      try {\n        return (E) Enum.valueOf(c, value);\n      } catch (Exception e){\n        try {\n          return (E) Enum.valueOf(c, value.toLowerCase());\n        } catch (Exception e2){\n          try {\n            return (E) Enum.valueOf(c, value.toUpperCase());\n          } catch (Exception e3){\n            return (E) Enum.valueOf(c,\n                (Character.isUpperCase(value.charAt(0)) ? Character.toLowerCase(value.charAt(0)) : Character.toUpperCase(value.charAt(0))) +\n                    value.substring(1));\n          }\n        }\n      }\n    } else if (ObjectOutputStream.class.isAssignableFrom(clazz)) {\n      // (case: object output stream)\n      try {\n        return (E) new ObjectOutputStream((OutputStream) cast(value, OutputStream.class));\n      } catch (IOException e) {\n        throw new RuntimeException(e);\n      }\n    } else if (ObjectInputStream.class.isAssignableFrom(clazz)) {\n      // (case: object input stream)\n      try {\n        return (E) new ObjectInputStream((InputStream) cast(value, InputStream.class));\n      } catch (IOException e) {\n        throw new RuntimeException(e);\n      }\n    } else if (OutputStream.class.isAssignableFrom(clazz)) {\n      // (case: output stream)\n      if (value.equalsIgnoreCase(\"stdout\") || value.equalsIgnoreCase(\"out\")) { return (E) System.out; }\n      if (value.equalsIgnoreCase(\"stderr\") || value.equalsIgnoreCase(\"err\")) { return (E) System.err; }\n      File toWriteTo = cast(value, File.class);\n      try {\n        if (!toWriteTo.exists() && !toWriteTo.createNewFile()) {\n          throw new IllegalStateException(\"Could not create output stream (cannot write file): \" + value);\n        }\n        return (E) new FileOutputStream((File) cast(value, File.class));\n      } catch (IOException e) {\n        throw new RuntimeException(e);\n      }\n    } else if (InputStream.class.isAssignableFrom(clazz)) {\n      // (case: input stream)\n      if (value.equalsIgnoreCase(\"stdin\") || value.equalsIgnoreCase(\"in\")) { return (E) System.in; }\n      File toReadFrom = cast(value, File.class);\n      try {\n        if (!toReadFrom.exists() || !toReadFrom.canRead()) {\n          throw new IllegalStateException(\"Could not create input stream (cannot read file): \" + value);\n        }\n        return (E) new FileInputStream((File) cast(value, File.class));\n      } catch (IOException e) {\n        throw new RuntimeException(e);\n      }\n    } else {\n      try {\n        // (case: can parse from string)\n        Method decode = clazz.getMethod(\"fromString\", String.class);\n        return (E) decode.invoke(MetaClass.create(clazz), value);\n      } catch (NoSuchMethodException e) {  // Silent errors for misc failures\n      } catch (InvocationTargetException e) {\n      } catch (IllegalAccessException e) {\n      } catch (ClassCastException e) {\n      }\n\n      // Pass 2: Guess what the object could be\n      if (Tree.class.isAssignableFrom(clazz)) {\n        // (case: reading a tree)\n        try {\n          return (E) new PennTreeReader(new StringReader(value), new LabeledScoredTreeFactory(CoreLabel.factory())).readTree();\n        } catch (IOException e) {\n          throw new RuntimeException(e);\n        }\n      } else if (Collection.class.isAssignableFrom(clazz)) {\n        // (case: reading a collection)\n        Collection rtn;\n        if (Modifier.isAbstract(clazz.getModifiers())) {\n          rtn = abstractToConcreteCollectionMap.get(clazz).createInstance();\n        } else {\n          rtn = MetaClass.create(clazz).createInstance();\n        }\n        Class <?> subType = clazz.getComponentType();\n        String[] strings = decodeArray(value);\n        for (String string : strings) {\n          if (subType == null) {\n            rtn.add(castWithoutKnowingType(string));\n          } else {\n            rtn.add(cast(string, subType));\n          }\n        }\n        return (E) rtn;\n      } else {\n        // We could not cast this object\n        return null;\n      }\n    }\n  }","id":16013,"modified_method":"/**\n   * Cast a String representation of an object into that object.\n   * E.g. \"5.4\" will be cast to a Double; \"[1,2,3]\" will be cast\n   * to an Integer[].\n   *\n   * NOTE: Date parses from a Long\n   *\n   * @param <E> The type of the object returned (same as type)\n   * @param value The string representation of the object\n   * @param type The type (usually class) to be returned (same as E)\n   * @return An object corresponding to the String value passed\n   */\n  @SuppressWarnings({ \"unchecked\", \"rawtypes\" })\n  public static <E> E cast(String value, Type type){\n    //--Get Type\n    Class <?> clazz;\n    if(type instanceof Class){\n      clazz = (Class <?>) type;\n    }else if(type instanceof ParameterizedType){\n      ParameterizedType pt = (ParameterizedType) type;\n      clazz = (Class <?>) pt.getRawType();\n    }else{\n      throw new IllegalArgumentException(\"Cannot cast to type (unhandled type): \" + type);\n    }\n    //--Cast\n    if(String.class.isAssignableFrom(clazz)){\n      // (case: String)\n      return (E) value;\n    }else if(Boolean.class.isAssignableFrom(clazz) || boolean.class.isAssignableFrom(clazz)){\n      //(case: boolean)\n      if(\"1\".equals(value)){ return (E) Boolean.TRUE; }\n      return (E) Boolean.valueOf(Boolean.parseBoolean(value));\n    }else if(Integer.class.isAssignableFrom(clazz) || int.class.isAssignableFrom(clazz)){\n      //(case: integer)\n      try {\n        return (E) new Integer(Integer.parseInt(value));\n      } catch (NumberFormatException e) {\n        return (E) new Integer((int) Double.parseDouble(value));\n      }\n    }else if(Long.class.isAssignableFrom(clazz) || long.class.isAssignableFrom(clazz)){\n      //(case: long)\n      try {\n        return (E) new Long(Long.parseLong(value));\n      } catch (NumberFormatException e) {\n        return (E) new Long((long) Double.parseDouble(value));\n      }\n    }else if(Float.class.isAssignableFrom(clazz) || float.class.isAssignableFrom(clazz)){\n      //(case: float)\n      if(value == null){ return (E) new Float(Float.NaN); }\n      return (E) new Float(Float.parseFloat(value));\n    }else if(Double.class.isAssignableFrom(clazz) || double.class.isAssignableFrom(clazz)){\n      //(case: double)\n      if(value == null){ return (E) new Double(Double.NaN); }\n      return (E) new Double(Double.parseDouble(value));\n    }else if(Short.class.isAssignableFrom(clazz) || short.class.isAssignableFrom(clazz)){\n      //(case: short)\n      try {\n        return (E) new Short(Short.parseShort(value));\n      } catch (NumberFormatException e) {\n        return (E) new Short((short) Double.parseDouble(value));\n      }\n    }else if(Byte.class.isAssignableFrom(clazz) || byte.class.isAssignableFrom(clazz)){\n      //(case: byte)\n      try {\n        return (E) new Byte(Byte.parseByte(value));\n      } catch (NumberFormatException e) {\n        return (E) new Byte((byte) Double.parseDouble(value));\n      }\n    }else if(Character.class.isAssignableFrom(clazz) || char.class.isAssignableFrom(clazz)){\n      //(case: char)\n      return (E) new Character((char) Integer.parseInt(value));\n    }else if(java.util.Date.class.isAssignableFrom(clazz)){\n      //(case: date)\n      try {\n        return (E) new Date(Long.parseLong(value));\n      } catch (NumberFormatException e) {\n        return null;\n      }\n    } else if(java.util.Calendar.class.isAssignableFrom(clazz)){\n      //(case: date)\n      try {\n        Date d = new Date(Long.parseLong(value));\n        GregorianCalendar cal = new GregorianCalendar();\n        cal.setTime(d);\n        return (E) cal;\n      } catch (NumberFormatException e) {\n        return null;\n      }\n    } else if(File.class.isAssignableFrom(clazz)){\n      return (E) new File(value);\n    } else if(Class.class.isAssignableFrom(clazz)){\n      try {\n        return (E) Class.forName(value);\n      } catch (ClassNotFoundException e) {\n        return null;\n      }\n    } else if(clazz.isArray()){\n      if(value == null){ return null; }\n      Class <?> subType = clazz.getComponentType();\n      // (case: array)\n      String[] strings = decodeArray(value);\n      Object[] array = (Object[]) Array.newInstance(clazz.getComponentType(), strings.length);\n      for(int i=0; i<strings.length; i++){\n        array[i] = cast(strings[i], subType);\n      }\n      return (E) array;\n    } else if (Map.class.isAssignableFrom(clazz)) {\n      return (E) decodeMap(value);\n    } else if(clazz.isEnum()){\n      // (case: enumeration)\n      Class c = (Class) clazz;\n      if(value == null){ return null; }\n      if (value.charAt(0) == '\"') value = value.substring(1);\n      if (value.charAt(value.length()-1) == '\"') value = value.substring(0, value.length() - 1);\n      try {\n        return (E) Enum.valueOf(c, value);\n      } catch (Exception e){\n        try {\n          return (E) Enum.valueOf(c, value.toLowerCase());\n        } catch (Exception e2){\n          try {\n            return (E) Enum.valueOf(c, value.toUpperCase());\n          } catch (Exception e3){\n            return (E) Enum.valueOf(c,\n                (Character.isUpperCase(value.charAt(0)) ? Character.toLowerCase(value.charAt(0)) : Character.toUpperCase(value.charAt(0))) +\n                    value.substring(1));\n          }\n        }\n      }\n    } else if (ObjectOutputStream.class.isAssignableFrom(clazz)) {\n      // (case: object output stream)\n      try {\n        return (E) new ObjectOutputStream((OutputStream) cast(value, OutputStream.class));\n      } catch (IOException e) {\n        throw new RuntimeException(e);\n      }\n    } else if (ObjectInputStream.class.isAssignableFrom(clazz)) {\n      // (case: object input stream)\n      try {\n        return (E) new ObjectInputStream((InputStream) cast(value, InputStream.class));\n      } catch (IOException e) {\n        throw new RuntimeException(e);\n      }\n    } else if (OutputStream.class.isAssignableFrom(clazz)) {\n      // (case: output stream)\n      if (value.equalsIgnoreCase(\"stdout\") || value.equalsIgnoreCase(\"out\")) { return (E) System.out; }\n      if (value.equalsIgnoreCase(\"stderr\") || value.equalsIgnoreCase(\"err\")) { return (E) System.err; }\n      File toWriteTo = cast(value, File.class);\n      try {\n        if (!toWriteTo.exists() && !toWriteTo.createNewFile()) {\n          throw new IllegalStateException(\"Could not create output stream (cannot write file): \" + value);\n        }\n        return (E) new FileOutputStream((File) cast(value, File.class));\n      } catch (IOException e) {\n        throw new RuntimeException(e);\n      }\n    } else if (InputStream.class.isAssignableFrom(clazz)) {\n      // (case: input stream)\n      if (value.equalsIgnoreCase(\"stdin\") || value.equalsIgnoreCase(\"in\")) { return (E) System.in; }\n      File toReadFrom = cast(value, File.class);\n      try {\n        if (!toReadFrom.exists() || !toReadFrom.canRead()) {\n          throw new IllegalStateException(\"Could not create input stream (cannot read file): \" + value);\n        }\n        return (E) new FileInputStream((File) cast(value, File.class));\n      } catch (IOException e) {\n        throw new RuntimeException(e);\n      }\n    } else {\n      try {\n        // (case: can parse from string)\n        Method decode = clazz.getMethod(\"fromString\", String.class);\n        return (E) decode.invoke(MetaClass.create(clazz), value);\n      } catch (NoSuchMethodException e) {  // Silent errors for misc failures\n      } catch (InvocationTargetException e) {\n      } catch (IllegalAccessException e) {\n      } catch (ClassCastException e) {\n      }\n\n      // Pass 2: Guess what the object could be\n      if (Tree.class.isAssignableFrom(clazz)) {\n        // (case: reading a tree)\n        try {\n          return (E) new PennTreeReader(new StringReader(value), new LabeledScoredTreeFactory(CoreLabel.factory())).readTree();\n        } catch (IOException e) {\n          throw new RuntimeException(e);\n        }\n      } else if (Collection.class.isAssignableFrom(clazz)) {\n        // (case: reading a collection)\n        Collection rtn;\n        if (Modifier.isAbstract(clazz.getModifiers())) {\n          rtn = abstractToConcreteCollectionMap.get(clazz).createInstance();\n        } else {\n          rtn = MetaClass.create(clazz).createInstance();\n        }\n        Class <?> subType = clazz.getComponentType();\n        String[] strings = decodeArray(value);\n        for (String string : strings) {\n          if (subType == null) {\n            rtn.add(castWithoutKnowingType(string));\n          } else {\n            rtn.add(cast(string, subType));\n          }\n        }\n        return (E) rtn;\n      } else {\n        // We could not cast this object\n        return null;\n      }\n    }\n  }","commit_id":"c373e0f6a529a980c805b794920e51ea1c852e61","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"/**\n   * Decode an array encoded as a String. This entails a comma separated value enclosed in brackets\n   * or parentheses\n   * @param encoded The String encoded array\n   * @return A String array corresponding to the encoded array\n   */\n\tprivate static String[] decodeArray(String encoded){\n    if (encoded.length() == 0) return new String[]{};\n\t\tchar[] chars = encoded.trim().toCharArray();\n\n\t\t//--Parse the String\n\t\t//(state)\n\t\tchar quoteCloseChar = (char) 0;\n\t\tList<StringBuilder> terms = new LinkedList<StringBuilder>();\n\t\tStringBuilder current = new StringBuilder();\n\t\t//(start/stop overhead)\n\t\tint start = 0; int end = chars.length;\n\t\tif(chars[0] == '('){ start += 1; end -= 1; if(chars[end] != ')') throw new IllegalArgumentException(\"Unclosed paren in encoded array: \" + encoded); }\n\t\tif(chars[0] == '['){ start += 1; end -= 1; if(chars[end] != ']') throw new IllegalArgumentException(\"Unclosed bracket in encoded array: \" + encoded); }\n    if(chars[0] == '{'){ start += 1; end -= 1; if(chars[end] != '}') throw new IllegalArgumentException(\"Unclosed bracket in encoded array: \" + encoded); }\n\t\t//(finite state automata)\n\t\tfor(int i=start; i<end; i++){\n\t\t\tif(chars[i] == '\\\\'){\n\t\t\t\t//(case: escaped character)\n\t\t\t\tif(i == chars.length - 1) throw new IllegalArgumentException(\"Last character of encoded pair is escape character: \" + encoded);\n\t\t\t\tcurrent.append(chars[i+1]);\n\t\t\t\ti += 1;\n\t\t\t} else if(quoteCloseChar != 0){\n\t\t\t\t//(case: in quotes)\n\t\t\t\tif(chars[i] == quoteCloseChar){\n\t\t\t\t\tquoteCloseChar = (char) 0;\n\t\t\t\t}else{\n\t\t\t\t\tcurrent.append(chars[i]);\n\t\t\t\t}\n\t\t\t}else{\n\t\t\t\t//(case: normal)\n\t\t\t\tif(chars[i] == '\"'){\n          quoteCloseChar = '\"';\n\t\t\t\t} else if(chars[i] == '\\''){\n          quoteCloseChar = '\\'';\n\t\t\t\t} else if(chars[i] == ',' || chars[i] == ' ' || chars[i] == '\\t' || chars[i] == '\\n'){\n\t\t\t\t\t//break\n          if (current.length() > 0) {\n\t\t\t\t\t  terms.add(current);\n          }\n\t\t\t\t\tcurrent = new StringBuilder();\n\t\t\t\t}else{\n\t\t\t\t\tcurrent.append(chars[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t//--Return\n\t\tif(current.length() > 0) terms.add(current);\n\t\tString[] rtn = new String[terms.size()];\n\t\tint i=0;\n\t\tfor(StringBuilder b : terms){\n\t\t\trtn[i] = b.toString().trim();\n\t\t\ti += 1;\n\t\t}\n    return rtn;\n  }","id":16014,"modified_method":"/**\n   * Decode an array encoded as a String. This entails a comma separated value enclosed in brackets\n   * or parentheses\n   * @param encoded The String encoded array\n   * @return A String array corresponding to the encoded array\n   */\n\tprivate static String[] decodeArray(String encoded){\n    if (encoded.length() == 0) return new String[]{};\n\t\tchar[] chars = encoded.trim().toCharArray();\n\n\t\t//--Parse the String\n\t\t//(state)\n\t\tchar quoteCloseChar = (char) 0;\n\t\tList<StringBuilder> terms = new LinkedList<StringBuilder>();\n\t\tStringBuilder current = new StringBuilder();\n\t\t//(start/stop overhead)\n\t\tint start = 0; int end = chars.length;\n\t\tif(chars[0] == '('){ start += 1; end -= 1; if(chars[end] != ')') throw new IllegalArgumentException(\"Unclosed paren in encoded array: \" + encoded); }\n\t\tif(chars[0] == '['){ start += 1; end -= 1; if(chars[end] != ']') throw new IllegalArgumentException(\"Unclosed bracket in encoded array: \" + encoded); }\n    if(chars[0] == '{'){ start += 1; end -= 1; if(chars[end] != '}') throw new IllegalArgumentException(\"Unclosed bracket in encoded array: \" + encoded); }\n\t\t//(finite state automata)\n\t\tfor(int i=start; i<end; i++){\n\t\t\tif(chars[i] == '\\\\'){\n\t\t\t\t//(case: escaped character)\n\t\t\t\tif(i == chars.length - 1) throw new IllegalArgumentException(\"Last character of encoded pair is escape character: \" + encoded);\n\t\t\t\tcurrent.append(chars[i+1]);\n\t\t\t\ti += 1;\n\t\t\t} else if(quoteCloseChar != 0){\n\t\t\t\t//(case: in quotes)\n\t\t\t\tif(chars[i] == quoteCloseChar){\n\t\t\t\t\tquoteCloseChar = (char) 0;\n\t\t\t\t}else{\n\t\t\t\t\tcurrent.append(chars[i]);\n\t\t\t\t}\n\t\t\t}else{\n\t\t\t\t//(case: normal)\n\t\t\t\tif(chars[i] == '\"'){\n          quoteCloseChar = '\"';\n\t\t\t\t} else if(chars[i] == '\\''){\n          quoteCloseChar = '\\'';\n\t\t\t\t} else if(chars[i] == ',' || chars[i] == ';' || chars[i] == ' ' || chars[i] == '\\t' || chars[i] == '\\n'){\n\t\t\t\t\t//break\n          if (current.length() > 0) {\n\t\t\t\t\t  terms.add(current);\n          }\n\t\t\t\t\tcurrent = new StringBuilder();\n\t\t\t\t}else{\n\t\t\t\t\tcurrent.append(chars[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t//--Return\n\t\tif(current.length() > 0) terms.add(current);\n\t\tString[] rtn = new String[terms.size()];\n\t\tint i=0;\n\t\tfor(StringBuilder b : terms){\n\t\t\trtn[i] = b.toString().trim();\n\t\t\ti += 1;\n\t\t}\n    return rtn;\n  }","commit_id":"c373e0f6a529a980c805b794920e51ea1c852e61","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"@Test\n  public void testCastArray() {\n    Integer[] ints1 = MetaClass.cast(\"[1,2,3]\", Integer[].class);\n    assertArrayEquals(new Integer[]{1,2,3}, ints1);\n    Integer[] ints2 = MetaClass.cast(\"(1,2,3)\", Integer[].class);\n    assertArrayEquals(new Integer[]{1,2,3}, ints2);\n    Integer[] ints3 = MetaClass.cast(\"1, 2, 3\", Integer[].class);\n    assertArrayEquals(new Integer[]{1,2,3}, ints3);\n    Integer[] ints4 = MetaClass.cast(\"1 2 3\", Integer[].class);\n    assertArrayEquals(new Integer[]{1,2,3}, ints4);\n    Integer[] ints5 = MetaClass.cast(\"1   2   3\", Integer[].class);\n    assertArrayEquals(new Integer[]{1,2,3}, ints5);\n\n    Integer[] intsEmpty = MetaClass.cast(\"\", Integer[].class);\n    assertArrayEquals(new Integer[]{}, intsEmpty);\n  }","id":16015,"modified_method":"@Test\n  public void testCastArray() {\n    Integer[] ints1 = MetaClass.cast(\"[1,2,3]\", Integer[].class);\n    assertArrayEquals(new Integer[]{1,2,3}, ints1);\n    Integer[] ints2 = MetaClass.cast(\"(1,2,3)\", Integer[].class);\n    assertArrayEquals(new Integer[]{1,2,3}, ints2);\n    Integer[] ints3 = MetaClass.cast(\"1, 2, 3\", Integer[].class);\n    assertArrayEquals(new Integer[]{1,2,3}, ints3);\n    Integer[] ints4 = MetaClass.cast(\"1 2 3\", Integer[].class);\n    assertArrayEquals(new Integer[]{1,2,3}, ints4);\n    Integer[] ints5 = MetaClass.cast(\"1   2   3\", Integer[].class);\n    assertArrayEquals(new Integer[]{1,2,3}, ints5);\n    Integer[] ints6 = MetaClass.cast(\"\\n1 \\n\\n  2   3\", Integer[].class);\n    assertArrayEquals(new Integer[]{1,2,3}, ints6);\n\n    Integer[] intsEmpty = MetaClass.cast(\"\", Integer[].class);\n    assertArrayEquals(new Integer[]{}, intsEmpty);\n  }","commit_id":"c373e0f6a529a980c805b794920e51ea1c852e61","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"/**\n   * Cast a String representation of an object into that object.\n   * E.g. \"5.4\" will be cast to a Double; \"[1,2,3]\" will be cast\n   * to an Integer[].\n   *\n   * NOTE: Date parses from a Long\n   *\n   * @param <E> The type of the object returned (same as type)\n   * @param value The string representation of the object\n   * @param type The type (usually class) to be returned (same as E)\n   * @return An object corresponding to the String value passed\n   */\n  @SuppressWarnings({ \"unchecked\", \"rawtypes\" })\n  public static final <E> E cast(String value, Type type){\n    //--Get Type\n    Class <?> clazz = null;\n    Type[] params = null;\n    if(type instanceof Class){\n      clazz = (Class <?>) type;\n    }else if(type instanceof ParameterizedType){\n      ParameterizedType pt = (ParameterizedType) type;\n      params = pt.getActualTypeArguments();\n      clazz = (Class <?>) pt.getRawType();\n    }else{\n      clazz = type2class(type);\n      throw new IllegalArgumentException(\"Cannot cast to type (unhandled type): \" + type);\n    }\n    //--Cast\n    if(String.class.isAssignableFrom(clazz)){\n      // (case: String)\n      return (E) value;\n    }else if(Boolean.class.isAssignableFrom(clazz) || boolean.class.isAssignableFrom(clazz)){\n      //(case: boolean)\n      if(\"1\".equals(value)){ return (E) new Boolean(true); }\n      return (E) new Boolean( Boolean.parseBoolean(value) );\n    }else if(Integer.class.isAssignableFrom(clazz) || int.class.isAssignableFrom(clazz)){\n      //(case: integer)\n      try {\n        return (E) new Integer(Integer.parseInt(value));\n      } catch (NumberFormatException e) {\n        return (E) new Integer((int) Double.parseDouble(value));\n      }\n    }else if(Long.class.isAssignableFrom(clazz) || long.class.isAssignableFrom(clazz)){\n      //(case: long)\n      try {\n        return (E) new Long(Long.parseLong(value));\n      } catch (NumberFormatException e) {\n        return (E) new Long((long) Double.parseDouble(value));\n      }\n    }else if(Float.class.isAssignableFrom(clazz) || float.class.isAssignableFrom(clazz)){\n      //(case: float)\n      if(value == null){ return (E) new Float(Float.NaN); }\n      return (E) new Float(Float.parseFloat(value));\n    }else if(Double.class.isAssignableFrom(clazz) || double.class.isAssignableFrom(clazz)){\n      //(case: double)\n      if(value == null){ return (E) new Double(Double.NaN); }\n      return (E) new Double(Double.parseDouble(value));\n    }else if(Short.class.isAssignableFrom(clazz) || short.class.isAssignableFrom(clazz)){\n      //(case: short)\n      try {\n        return (E) new Short(Short.parseShort(value));\n      } catch (NumberFormatException e) {\n        return (E) new Short((short) Double.parseDouble(value));\n      }\n    }else if(Byte.class.isAssignableFrom(clazz) || byte.class.isAssignableFrom(clazz)){\n      //(case: byte)\n      try {\n        return (E) new Byte(Byte.parseByte(value));\n      } catch (NumberFormatException e) {\n        return (E) new Byte((byte) Double.parseDouble(value));\n      }\n    }else if(Character.class.isAssignableFrom(clazz) || char.class.isAssignableFrom(clazz)){\n      //(case: char)\n      return (E) new Character((char) Integer.parseInt(value));\n    }else if(java.util.Date.class.isAssignableFrom(clazz)){\n      //(case: date)\n      try {\n        return (E) new Date(Long.parseLong(value));\n      } catch (NumberFormatException e) {\n        return null;\n      }\n    } else if(java.util.Calendar.class.isAssignableFrom(clazz)){\n      //(case: date)\n      try {\n        Date d = new Date(Long.parseLong(value));\n        GregorianCalendar cal = new GregorianCalendar();\n        cal.setTime(d);\n        return (E) cal;\n      } catch (NumberFormatException e) {\n        return null;\n      }\n    } else if(File.class.isAssignableFrom(clazz)){\n      return (E) new File(value);\n    } else if(Class.class.isAssignableFrom(clazz)){\n      try {\n        return (E) Class.forName(value);\n      } catch (ClassNotFoundException e) {\n        return null;\n      }\n    } else if(clazz.isArray()){\n      if(value == null){ return null; }\n      Class <?> subType = clazz.getComponentType();\n      // (case: array)\n      String[] strings = decodeArray(value);\n      Object[] array = (Object[]) Array.newInstance(clazz.getComponentType(), strings.length);\n      for(int i=0; i<strings.length; i++){\n        array[i] = cast(strings[i], subType);\n      }\n      return (E) array;\n    } else if(clazz.isEnum()){\n      // (case: enumeration)\n      Class c = (Class) clazz;\n      if(value == null){ return null; }\n      if (value.charAt(0) == '\"') value = value.substring(1);\n      if (value.charAt(value.length()-1) == '\"') value = value.substring(0, value.length() - 1);\n      try {\n        return (E) Enum.valueOf(c, value);\n      } catch (Exception e){\n        try {\n          return (E) Enum.valueOf(c, value.toLowerCase());\n        } catch (Exception e2){\n          try {\n            return (E) Enum.valueOf(c, value.toUpperCase());\n          } catch (Exception e3){\n            return (E) Enum.valueOf(c,\n                (Character.isUpperCase(value.charAt(0)) ? Character.toLowerCase(value.charAt(0)) : Character.toUpperCase(value.charAt(0))) +\n                    value.substring(1));\n          }\n        }\n      }\n    } else if (ObjectOutputStream.class.isAssignableFrom(clazz)) {\n      // (case: object output stream)\n      try {\n        return (E) new ObjectOutputStream((OutputStream) cast(value, OutputStream.class));\n      } catch (IOException e) {\n        throw new RuntimeException(e);\n      }\n    } else if (ObjectInputStream.class.isAssignableFrom(clazz)) {\n      // (case: object input stream)\n      try {\n        return (E) new ObjectInputStream((InputStream) cast(value, InputStream.class));\n      } catch (IOException e) {\n        throw new RuntimeException(e);\n      }\n    } else if (OutputStream.class.isAssignableFrom(clazz)) {\n      // (case: output stream)\n      if (value.equalsIgnoreCase(\"stdout\") || value.equalsIgnoreCase(\"out\")) { return (E) System.out; }\n      if (value.equalsIgnoreCase(\"stderr\") || value.equalsIgnoreCase(\"err\")) { return (E) System.err; }\n      File toWriteTo = cast(value, File.class);\n      try {\n        if (!toWriteTo.exists() && !toWriteTo.createNewFile()) {\n          throw new IllegalStateException(\"Could not create output stream (cannot write file): \" + value);\n        }\n        return (E) new FileOutputStream((File) cast(value, File.class));\n      } catch (IOException e) {\n        throw new RuntimeException(e);\n      }\n    } else if (InputStream.class.isAssignableFrom(clazz)) {\n      // (case: input stream)\n      if (value.equalsIgnoreCase(\"stdin\") || value.equalsIgnoreCase(\"in\")) { return (E) System.in; }\n      File toReadFrom = cast(value, File.class);\n      try {\n        if (!toReadFrom.exists() || !toReadFrom.canRead()) {\n          throw new IllegalStateException(\"Could not create input stream (cannot read file): \" + value);\n        }\n        return (E) new FileInputStream((File) cast(value, File.class));\n      } catch (IOException e) {\n        throw new RuntimeException(e);\n      }\n    } else {\n      try {\n        // (case: can parse from string)\n        Method decode = clazz.getMethod(\"fromString\", String.class);\n        return (E) decode.invoke(MetaClass.create(clazz), value);\n      } catch (NoSuchMethodException e) {  // Silent errors for misc failures\n      } catch (InvocationTargetException e) {\n      } catch (IllegalAccessException e) {\n      } catch (ClassCastException e) {\n      }\n\n      // Pass 2: Guess what the object could be\n      if (Tree.class.isAssignableFrom(clazz)) {\n        // (case: reading a tree)\n        try {\n          return (E) new PennTreeReader(new StringReader(value), new LabeledScoredTreeFactory(CoreLabel.factory())).readTree();\n        } catch (IOException e) {\n          throw new RuntimeException(e);\n        }\n      } else if (Collection.class.isAssignableFrom(clazz)) {\n        // (case: reading a collection)\n        Collection rtn;\n        if (Modifier.isAbstract(clazz.getModifiers())) {\n          rtn = abstractToConcreteCollectionMap.get(clazz).createInstance();\n        } else {\n          rtn = MetaClass.create(clazz).createInstance();\n        }\n        Class <?> subType = clazz.getComponentType();\n        String[] strings = decodeArray(value);\n        for (String string : strings) {\n          if (subType == null) {\n            rtn.add(castWithoutKnowingType(string));\n          } else {\n            rtn.add(cast(string, subType));\n          }\n        }\n        return (E) rtn;\n      } else {\n        // We could not cast this object\n        return null;\n      }\n    }\n  }","id":16016,"modified_method":"/**\n   * Cast a String representation of an object into that object.\n   * E.g. \"5.4\" will be cast to a Double; \"[1,2,3]\" will be cast\n   * to an Integer[].\n   *\n   * NOTE: Date parses from a Long\n   *\n   * @param <E> The type of the object returned (same as type)\n   * @param value The string representation of the object\n   * @param type The type (usually class) to be returned (same as E)\n   * @return An object corresponding to the String value passed\n   */\n  @SuppressWarnings({ \"unchecked\", \"rawtypes\" })\n  public static <E> E cast(String value, Type type){\n    //--Get Type\n    Class <?> clazz;\n    if(type instanceof Class){\n      clazz = (Class <?>) type;\n    }else if(type instanceof ParameterizedType){\n      ParameterizedType pt = (ParameterizedType) type;\n      clazz = (Class <?>) pt.getRawType();\n    }else{\n      throw new IllegalArgumentException(\"Cannot cast to type (unhandled type): \" + type);\n    }\n    //--Cast\n    if(String.class.isAssignableFrom(clazz)){\n      // (case: String)\n      return (E) value;\n    }else if(Boolean.class.isAssignableFrom(clazz) || boolean.class.isAssignableFrom(clazz)){\n      //(case: boolean)\n      if(\"1\".equals(value)){ return (E) Boolean.TRUE; }\n      return (E) Boolean.valueOf(Boolean.parseBoolean(value));\n    }else if(Integer.class.isAssignableFrom(clazz) || int.class.isAssignableFrom(clazz)){\n      //(case: integer)\n      try {\n        return (E) new Integer(Integer.parseInt(value));\n      } catch (NumberFormatException e) {\n        return (E) new Integer((int) Double.parseDouble(value));\n      }\n    }else if(Long.class.isAssignableFrom(clazz) || long.class.isAssignableFrom(clazz)){\n      //(case: long)\n      try {\n        return (E) new Long(Long.parseLong(value));\n      } catch (NumberFormatException e) {\n        return (E) new Long((long) Double.parseDouble(value));\n      }\n    }else if(Float.class.isAssignableFrom(clazz) || float.class.isAssignableFrom(clazz)){\n      //(case: float)\n      if(value == null){ return (E) new Float(Float.NaN); }\n      return (E) new Float(Float.parseFloat(value));\n    }else if(Double.class.isAssignableFrom(clazz) || double.class.isAssignableFrom(clazz)){\n      //(case: double)\n      if(value == null){ return (E) new Double(Double.NaN); }\n      return (E) new Double(Double.parseDouble(value));\n    }else if(Short.class.isAssignableFrom(clazz) || short.class.isAssignableFrom(clazz)){\n      //(case: short)\n      try {\n        return (E) new Short(Short.parseShort(value));\n      } catch (NumberFormatException e) {\n        return (E) new Short((short) Double.parseDouble(value));\n      }\n    }else if(Byte.class.isAssignableFrom(clazz) || byte.class.isAssignableFrom(clazz)){\n      //(case: byte)\n      try {\n        return (E) new Byte(Byte.parseByte(value));\n      } catch (NumberFormatException e) {\n        return (E) new Byte((byte) Double.parseDouble(value));\n      }\n    }else if(Character.class.isAssignableFrom(clazz) || char.class.isAssignableFrom(clazz)){\n      //(case: char)\n      return (E) new Character((char) Integer.parseInt(value));\n    }else if(java.util.Date.class.isAssignableFrom(clazz)){\n      //(case: date)\n      try {\n        return (E) new Date(Long.parseLong(value));\n      } catch (NumberFormatException e) {\n        return null;\n      }\n    } else if(java.util.Calendar.class.isAssignableFrom(clazz)){\n      //(case: date)\n      try {\n        Date d = new Date(Long.parseLong(value));\n        GregorianCalendar cal = new GregorianCalendar();\n        cal.setTime(d);\n        return (E) cal;\n      } catch (NumberFormatException e) {\n        return null;\n      }\n    } else if(File.class.isAssignableFrom(clazz)){\n      return (E) new File(value);\n    } else if(Class.class.isAssignableFrom(clazz)){\n      try {\n        return (E) Class.forName(value);\n      } catch (ClassNotFoundException e) {\n        return null;\n      }\n    } else if(clazz.isArray()){\n      if(value == null){ return null; }\n      Class <?> subType = clazz.getComponentType();\n      // (case: array)\n      String[] strings = decodeArray(value);\n      Object[] array = (Object[]) Array.newInstance(clazz.getComponentType(), strings.length);\n      for(int i=0; i<strings.length; i++){\n        array[i] = cast(strings[i], subType);\n      }\n      return (E) array;\n    } else if (Map.class.isAssignableFrom(clazz)) {\n      return (E) decodeMap(value);\n    } else if(clazz.isEnum()){\n      // (case: enumeration)\n      Class c = (Class) clazz;\n      if(value == null){ return null; }\n      if (value.charAt(0) == '\"') value = value.substring(1);\n      if (value.charAt(value.length()-1) == '\"') value = value.substring(0, value.length() - 1);\n      try {\n        return (E) Enum.valueOf(c, value);\n      } catch (Exception e){\n        try {\n          return (E) Enum.valueOf(c, value.toLowerCase());\n        } catch (Exception e2){\n          try {\n            return (E) Enum.valueOf(c, value.toUpperCase());\n          } catch (Exception e3){\n            return (E) Enum.valueOf(c,\n                (Character.isUpperCase(value.charAt(0)) ? Character.toLowerCase(value.charAt(0)) : Character.toUpperCase(value.charAt(0))) +\n                    value.substring(1));\n          }\n        }\n      }\n    } else if (ObjectOutputStream.class.isAssignableFrom(clazz)) {\n      // (case: object output stream)\n      try {\n        return (E) new ObjectOutputStream((OutputStream) cast(value, OutputStream.class));\n      } catch (IOException e) {\n        throw new RuntimeException(e);\n      }\n    } else if (ObjectInputStream.class.isAssignableFrom(clazz)) {\n      // (case: object input stream)\n      try {\n        return (E) new ObjectInputStream((InputStream) cast(value, InputStream.class));\n      } catch (IOException e) {\n        throw new RuntimeException(e);\n      }\n    } else if (OutputStream.class.isAssignableFrom(clazz)) {\n      // (case: output stream)\n      if (value.equalsIgnoreCase(\"stdout\") || value.equalsIgnoreCase(\"out\")) { return (E) System.out; }\n      if (value.equalsIgnoreCase(\"stderr\") || value.equalsIgnoreCase(\"err\")) { return (E) System.err; }\n      File toWriteTo = cast(value, File.class);\n      try {\n        if (!toWriteTo.exists() && !toWriteTo.createNewFile()) {\n          throw new IllegalStateException(\"Could not create output stream (cannot write file): \" + value);\n        }\n        return (E) new FileOutputStream((File) cast(value, File.class));\n      } catch (IOException e) {\n        throw new RuntimeException(e);\n      }\n    } else if (InputStream.class.isAssignableFrom(clazz)) {\n      // (case: input stream)\n      if (value.equalsIgnoreCase(\"stdin\") || value.equalsIgnoreCase(\"in\")) { return (E) System.in; }\n      File toReadFrom = cast(value, File.class);\n      try {\n        if (!toReadFrom.exists() || !toReadFrom.canRead()) {\n          throw new IllegalStateException(\"Could not create input stream (cannot read file): \" + value);\n        }\n        return (E) new FileInputStream((File) cast(value, File.class));\n      } catch (IOException e) {\n        throw new RuntimeException(e);\n      }\n    } else {\n      try {\n        // (case: can parse from string)\n        Method decode = clazz.getMethod(\"fromString\", String.class);\n        return (E) decode.invoke(MetaClass.create(clazz), value);\n      } catch (NoSuchMethodException e) {  // Silent errors for misc failures\n      } catch (InvocationTargetException e) {\n      } catch (IllegalAccessException e) {\n      } catch (ClassCastException e) {\n      }\n\n      // Pass 2: Guess what the object could be\n      if (Tree.class.isAssignableFrom(clazz)) {\n        // (case: reading a tree)\n        try {\n          return (E) new PennTreeReader(new StringReader(value), new LabeledScoredTreeFactory(CoreLabel.factory())).readTree();\n        } catch (IOException e) {\n          throw new RuntimeException(e);\n        }\n      } else if (Collection.class.isAssignableFrom(clazz)) {\n        // (case: reading a collection)\n        Collection rtn;\n        if (Modifier.isAbstract(clazz.getModifiers())) {\n          rtn = abstractToConcreteCollectionMap.get(clazz).createInstance();\n        } else {\n          rtn = MetaClass.create(clazz).createInstance();\n        }\n        Class <?> subType = clazz.getComponentType();\n        String[] strings = decodeArray(value);\n        for (String string : strings) {\n          if (subType == null) {\n            rtn.add(castWithoutKnowingType(string));\n          } else {\n            rtn.add(cast(string, subType));\n          }\n        }\n        return (E) rtn;\n      } else {\n        // We could not cast this object\n        return null;\n      }\n    }\n  }","commit_id":"b70f75e0effb8f752128cd3f5eba5033fcec0c78","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"/**\n   * Decode an array encoded as a String. This entails a comma separated value enclosed in brackets\n   * or parentheses\n   * @param encoded The String encoded array\n   * @return A String array corresponding to the encoded array\n   */\n\tprivate static String[] decodeArray(String encoded){\n    if (encoded.length() == 0) return new String[]{};\n\t\tchar[] chars = encoded.trim().toCharArray();\n\n\t\t//--Parse the String\n\t\t//(state)\n\t\tchar quoteCloseChar = (char) 0;\n\t\tList<StringBuilder> terms = new LinkedList<StringBuilder>();\n\t\tStringBuilder current = new StringBuilder();\n\t\t//(start/stop overhead)\n\t\tint start = 0; int end = chars.length;\n\t\tif(chars[0] == '('){ start += 1; end -= 1; if(chars[end] != ')') throw new IllegalArgumentException(\"Unclosed paren in encoded array: \" + encoded); }\n\t\tif(chars[0] == '['){ start += 1; end -= 1; if(chars[end] != ']') throw new IllegalArgumentException(\"Unclosed bracket in encoded array: \" + encoded); }\n    if(chars[0] == '{'){ start += 1; end -= 1; if(chars[end] != '}') throw new IllegalArgumentException(\"Unclosed bracket in encoded array: \" + encoded); }\n\t\t//(finite state automata)\n\t\tfor(int i=start; i<end; i++){\n\t\t\tif(chars[i] == '\\\\'){\n\t\t\t\t//(case: escaped character)\n\t\t\t\tif(i == chars.length - 1) throw new IllegalArgumentException(\"Last character of encoded pair is escape character: \" + encoded);\n\t\t\t\tcurrent.append(chars[i+1]);\n\t\t\t\ti += 1;\n\t\t\t} else if(quoteCloseChar != 0){\n\t\t\t\t//(case: in quotes)\n\t\t\t\tif(chars[i] == quoteCloseChar){\n\t\t\t\t\tquoteCloseChar = (char) 0;\n\t\t\t\t}else{\n\t\t\t\t\tcurrent.append(chars[i]);\n\t\t\t\t}\n\t\t\t}else{\n\t\t\t\t//(case: normal)\n\t\t\t\tif(chars[i] == '\"'){\n          quoteCloseChar = '\"';\n\t\t\t\t} else if(chars[i] == '\\''){\n          quoteCloseChar = '\\'';\n\t\t\t\t} else if(chars[i] == ',' || chars[i] == ' ' || chars[i] == '\\t' || chars[i] == '\\n'){\n\t\t\t\t\t//break\n          if (current.length() > 0) {\n\t\t\t\t\t  terms.add(current);\n          }\n\t\t\t\t\tcurrent = new StringBuilder();\n\t\t\t\t}else{\n\t\t\t\t\tcurrent.append(chars[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t//--Return\n\t\tif(current.length() > 0) terms.add(current);\n\t\tString[] rtn = new String[terms.size()];\n\t\tint i=0;\n\t\tfor(StringBuilder b : terms){\n\t\t\trtn[i] = b.toString().trim();\n\t\t\ti += 1;\n\t\t}\n    return rtn;\n  }","id":16017,"modified_method":"/**\n   * Decode an array encoded as a String. This entails a comma separated value enclosed in brackets\n   * or parentheses\n   * @param encoded The String encoded array\n   * @return A String array corresponding to the encoded array\n   */\n\tprivate static String[] decodeArray(String encoded){\n    if (encoded.length() == 0) return new String[]{};\n\t\tchar[] chars = encoded.trim().toCharArray();\n\n\t\t//--Parse the String\n\t\t//(state)\n\t\tchar quoteCloseChar = (char) 0;\n\t\tList<StringBuilder> terms = new LinkedList<StringBuilder>();\n\t\tStringBuilder current = new StringBuilder();\n\t\t//(start/stop overhead)\n\t\tint start = 0; int end = chars.length;\n\t\tif(chars[0] == '('){ start += 1; end -= 1; if(chars[end] != ')') throw new IllegalArgumentException(\"Unclosed paren in encoded array: \" + encoded); }\n\t\tif(chars[0] == '['){ start += 1; end -= 1; if(chars[end] != ']') throw new IllegalArgumentException(\"Unclosed bracket in encoded array: \" + encoded); }\n    if(chars[0] == '{'){ start += 1; end -= 1; if(chars[end] != '}') throw new IllegalArgumentException(\"Unclosed bracket in encoded array: \" + encoded); }\n\t\t//(finite state automata)\n\t\tfor(int i=start; i<end; i++){\n\t\t\tif(chars[i] == '\\\\'){\n\t\t\t\t//(case: escaped character)\n\t\t\t\tif(i == chars.length - 1) throw new IllegalArgumentException(\"Last character of encoded pair is escape character: \" + encoded);\n\t\t\t\tcurrent.append(chars[i+1]);\n\t\t\t\ti += 1;\n\t\t\t} else if(quoteCloseChar != 0){\n\t\t\t\t//(case: in quotes)\n\t\t\t\tif(chars[i] == quoteCloseChar){\n\t\t\t\t\tquoteCloseChar = (char) 0;\n\t\t\t\t}else{\n\t\t\t\t\tcurrent.append(chars[i]);\n\t\t\t\t}\n\t\t\t}else{\n\t\t\t\t//(case: normal)\n\t\t\t\tif(chars[i] == '\"'){\n          quoteCloseChar = '\"';\n\t\t\t\t} else if(chars[i] == '\\''){\n          quoteCloseChar = '\\'';\n\t\t\t\t} else if(chars[i] == ',' || chars[i] == ';' || chars[i] == ' ' || chars[i] == '\\t' || chars[i] == '\\n'){\n\t\t\t\t\t//break\n          if (current.length() > 0) {\n\t\t\t\t\t  terms.add(current);\n          }\n\t\t\t\t\tcurrent = new StringBuilder();\n\t\t\t\t}else{\n\t\t\t\t\tcurrent.append(chars[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t//--Return\n\t\tif(current.length() > 0) terms.add(current);\n\t\tString[] rtn = new String[terms.size()];\n\t\tint i=0;\n\t\tfor(StringBuilder b : terms){\n\t\t\trtn[i] = b.toString().trim();\n\t\t\ti += 1;\n\t\t}\n    return rtn;\n  }","commit_id":"b70f75e0effb8f752128cd3f5eba5033fcec0c78","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"@Test\n  public void testCastArray() {\n    Integer[] ints1 = MetaClass.cast(\"[1,2,3]\", Integer[].class);\n    assertArrayEquals(new Integer[]{1,2,3}, ints1);\n    Integer[] ints2 = MetaClass.cast(\"(1,2,3)\", Integer[].class);\n    assertArrayEquals(new Integer[]{1,2,3}, ints2);\n    Integer[] ints3 = MetaClass.cast(\"1, 2, 3\", Integer[].class);\n    assertArrayEquals(new Integer[]{1,2,3}, ints3);\n    Integer[] ints4 = MetaClass.cast(\"1 2 3\", Integer[].class);\n    assertArrayEquals(new Integer[]{1,2,3}, ints4);\n    Integer[] ints5 = MetaClass.cast(\"1   2   3\", Integer[].class);\n    assertArrayEquals(new Integer[]{1,2,3}, ints5);\n\n    Integer[] intsEmpty = MetaClass.cast(\"\", Integer[].class);\n    assertArrayEquals(new Integer[]{}, intsEmpty);\n  }","id":16018,"modified_method":"@Test\n  public void testCastArray() {\n    Integer[] ints1 = MetaClass.cast(\"[1,2,3]\", Integer[].class);\n    assertArrayEquals(new Integer[]{1,2,3}, ints1);\n    Integer[] ints2 = MetaClass.cast(\"(1,2,3)\", Integer[].class);\n    assertArrayEquals(new Integer[]{1,2,3}, ints2);\n    Integer[] ints3 = MetaClass.cast(\"1, 2, 3\", Integer[].class);\n    assertArrayEquals(new Integer[]{1,2,3}, ints3);\n    Integer[] ints4 = MetaClass.cast(\"1 2 3\", Integer[].class);\n    assertArrayEquals(new Integer[]{1,2,3}, ints4);\n    Integer[] ints5 = MetaClass.cast(\"1   2   3\", Integer[].class);\n    assertArrayEquals(new Integer[]{1,2,3}, ints5);\n    Integer[] ints6 = MetaClass.cast(\"\\n1 \\n\\n  2   3\", Integer[].class);\n    assertArrayEquals(new Integer[]{1,2,3}, ints6);\n\n    Integer[] intsEmpty = MetaClass.cast(\"\", Integer[].class);\n    assertArrayEquals(new Integer[]{}, intsEmpty);\n  }","commit_id":"b70f75e0effb8f752128cd3f5eba5033fcec0c78","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"/**\n   * Decode an array encoded as a String. This entails a comma separated value enclosed in brackets\n   * or parentheses\n   * @param encoded The String encoded array\n   * @return A String array corresponding to the encoded array\n   */\n\tprivate static String[] decodeArray(String encoded){\n    if (encoded.length() == 0) return new String[]{};\n\t\tchar[] chars = encoded.trim().toCharArray();\n\n\t\t//--Parse the String\n\t\t//(state)\n\t\tchar quoteCloseChar = (char) 0;\n\t\tList<StringBuilder> terms = new LinkedList<StringBuilder>();\n\t\tStringBuilder current = new StringBuilder();\n\t\t//(start/stop overhead)\n\t\tint start = 0; int end = chars.length;\n\t\tif(chars[0] == '('){ start += 1; end -= 1; if(chars[end] != ')') throw new IllegalArgumentException(\"Unclosed paren in encoded array: \" + encoded); }\n\t\tif(chars[0] == '['){ start += 1; end -= 1; if(chars[end] != ']') throw new IllegalArgumentException(\"Unclosed bracket in encoded array: \" + encoded); }\n    if(chars[0] == '{'){ start += 1; end -= 1; if(chars[end] != '}') throw new IllegalArgumentException(\"Unclosed bracket in encoded array: \" + encoded); }\n\t\t//(finite state automata)\n\t\tfor(int i=start; i<end; i++){\n\t\t\tif(chars[i] == '\\\\'){\n\t\t\t\t//(case: escaped character)\n\t\t\t\tif(i == chars.length - 1) throw new IllegalArgumentException(\"Last character of encoded pair is escape character: \" + encoded);\n\t\t\t\tcurrent.append(chars[i+1]);\n\t\t\t\ti += 1;\n\t\t\t} else if(quoteCloseChar != 0){\n\t\t\t\t//(case: in quotes)\n\t\t\t\tif(chars[i] == quoteCloseChar){\n\t\t\t\t\tquoteCloseChar = (char) 0;\n\t\t\t\t}else{\n\t\t\t\t\tcurrent.append(chars[i]);\n\t\t\t\t}\n\t\t\t}else{\n\t\t\t\t//(case: normal)\n\t\t\t\tif(chars[i] == '\"'){\n          quoteCloseChar = '\"';\n\t\t\t\t} else if(chars[i] == '\\''){\n          quoteCloseChar = '\\'';\n\t\t\t\t} else if(chars[i] == ',' || chars[i] == ' ' || chars[i] == '\\t' || chars[i] == '\\n'){\n\t\t\t\t\t//break\n          if (current.length() > 0) {\n\t\t\t\t\t  terms.add(current);\n          }\n\t\t\t\t\tcurrent = new StringBuilder();\n\t\t\t\t}else{\n\t\t\t\t\tcurrent.append(chars[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t//--Return\n\t\tif(current.length() > 0) terms.add(current);\n\t\tString[] rtn = new String[terms.size()];\n\t\tint i=0;\n\t\tfor(StringBuilder b : terms){\n\t\t\trtn[i] = b.toString().trim();\n\t\t\ti += 1;\n\t\t}\n    return rtn;\n  }","id":16019,"modified_method":"/**\n   * Decode an array encoded as a String. This entails a comma separated value enclosed in brackets\n   * or parentheses\n   * @param encoded The String encoded array\n   * @return A String array corresponding to the encoded array\n   */\n\tprivate static String[] decodeArray(String encoded){\n    if (encoded.length() == 0) return new String[]{};\n\t\tchar[] chars = encoded.trim().toCharArray();\n\n\t\t//--Parse the String\n\t\t//(state)\n\t\tchar quoteCloseChar = (char) 0;\n\t\tList<StringBuilder> terms = new LinkedList<StringBuilder>();\n\t\tStringBuilder current = new StringBuilder();\n\t\t//(start/stop overhead)\n\t\tint start = 0; int end = chars.length;\n\t\tif(chars[0] == '('){ start += 1; end -= 1; if(chars[end] != ')') throw new IllegalArgumentException(\"Unclosed paren in encoded array: \" + encoded); }\n\t\tif(chars[0] == '['){ start += 1; end -= 1; if(chars[end] != ']') throw new IllegalArgumentException(\"Unclosed bracket in encoded array: \" + encoded); }\n    if(chars[0] == '{'){ start += 1; end -= 1; if(chars[end] != '}') throw new IllegalArgumentException(\"Unclosed bracket in encoded array: \" + encoded); }\n\t\t//(finite state automata)\n\t\tfor(int i=start; i<end; i++){\n\t\t\tif(chars[i] == '\\\\'){\n\t\t\t\t//(case: escaped character)\n\t\t\t\tif(i == chars.length - 1) throw new IllegalArgumentException(\"Last character of encoded pair is escape character: \" + encoded);\n\t\t\t\tcurrent.append(chars[i+1]);\n\t\t\t\ti += 1;\n\t\t\t} else if(quoteCloseChar != 0){\n\t\t\t\t//(case: in quotes)\n\t\t\t\tif(chars[i] == quoteCloseChar){\n\t\t\t\t\tquoteCloseChar = (char) 0;\n\t\t\t\t}else{\n\t\t\t\t\tcurrent.append(chars[i]);\n\t\t\t\t}\n\t\t\t}else{\n\t\t\t\t//(case: normal)\n\t\t\t\tif(chars[i] == '\"'){\n          quoteCloseChar = '\"';\n\t\t\t\t} else if(chars[i] == '\\''){\n          quoteCloseChar = '\\'';\n\t\t\t\t} else if(chars[i] == ',' || chars[i] == ';' || chars[i] == ' ' || chars[i] == '\\t' || chars[i] == '\\n'){\n\t\t\t\t\t//break\n          if (current.length() > 0) {\n\t\t\t\t\t  terms.add(current);\n          }\n\t\t\t\t\tcurrent = new StringBuilder();\n\t\t\t\t}else{\n\t\t\t\t\tcurrent.append(chars[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t//--Return\n\t\tif(current.length() > 0) terms.add(current);\n\t\tString[] rtn = new String[terms.size()];\n\t\tint i=0;\n\t\tfor(StringBuilder b : terms){\n\t\t\trtn[i] = b.toString().trim();\n\t\t\ti += 1;\n\t\t}\n    return rtn;\n  }","commit_id":"eb1089e076339da41a1e41c6b9bb1c29bdbad0b1","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"/**\n   * Cast a String representation of an object into that object.\n   * E.g. \"5.4\" will be cast to a Double; \"[1,2,3]\" will be cast\n   * to an Integer[].\n   *\n   * NOTE: Date parses from a Long\n   *\n   * @param <E> The type of the object returned (same as type)\n   * @param value The string representation of the object\n   * @param type The type (usually class) to be returned (same as E)\n   * @return An object corresponding to the String value passed\n   */\n  @SuppressWarnings({ \"unchecked\", \"rawtypes\" })\n  public static final <E> E cast(String value, Type type){\n    //--Get Type\n    Class <?> clazz = null;\n    Type[] params = null;\n    if(type instanceof Class){\n      clazz = (Class <?>) type;\n    }else if(type instanceof ParameterizedType){\n      ParameterizedType pt = (ParameterizedType) type;\n      params = pt.getActualTypeArguments();\n      clazz = (Class <?>) pt.getRawType();\n    }else{\n      clazz = type2class(type);\n      throw new IllegalArgumentException(\"Cannot cast to type (unhandled type): \" + type);\n    }\n    //--Cast\n    if(String.class.isAssignableFrom(clazz)){\n      // (case: String)\n      return (E) value;\n    }else if(Boolean.class.isAssignableFrom(clazz) || boolean.class.isAssignableFrom(clazz)){\n      //(case: boolean)\n      if(\"1\".equals(value)){ return (E) new Boolean(true); }\n      return (E) new Boolean( Boolean.parseBoolean(value) );\n    }else if(Integer.class.isAssignableFrom(clazz) || int.class.isAssignableFrom(clazz)){\n      //(case: integer)\n      try {\n        return (E) new Integer(Integer.parseInt(value));\n      } catch (NumberFormatException e) {\n        return (E) new Integer((int) Double.parseDouble(value));\n      }\n    }else if(Long.class.isAssignableFrom(clazz) || long.class.isAssignableFrom(clazz)){\n      //(case: long)\n      try {\n        return (E) new Long(Long.parseLong(value));\n      } catch (NumberFormatException e) {\n        return (E) new Long((long) Double.parseDouble(value));\n      }\n    }else if(Float.class.isAssignableFrom(clazz) || float.class.isAssignableFrom(clazz)){\n      //(case: float)\n      if(value == null){ return (E) new Float(Float.NaN); }\n      return (E) new Float(Float.parseFloat(value));\n    }else if(Double.class.isAssignableFrom(clazz) || double.class.isAssignableFrom(clazz)){\n      //(case: double)\n      if(value == null){ return (E) new Double(Double.NaN); }\n      return (E) new Double(Double.parseDouble(value));\n    }else if(Short.class.isAssignableFrom(clazz) || short.class.isAssignableFrom(clazz)){\n      //(case: short)\n      try {\n        return (E) new Short(Short.parseShort(value));\n      } catch (NumberFormatException e) {\n        return (E) new Short((short) Double.parseDouble(value));\n      }\n    }else if(Byte.class.isAssignableFrom(clazz) || byte.class.isAssignableFrom(clazz)){\n      //(case: byte)\n      try {\n        return (E) new Byte(Byte.parseByte(value));\n      } catch (NumberFormatException e) {\n        return (E) new Byte((byte) Double.parseDouble(value));\n      }\n    }else if(Character.class.isAssignableFrom(clazz) || char.class.isAssignableFrom(clazz)){\n      //(case: char)\n      return (E) new Character((char) Integer.parseInt(value));\n    }else if(java.util.Date.class.isAssignableFrom(clazz)){\n      //(case: date)\n      try {\n        return (E) new Date(Long.parseLong(value));\n      } catch (NumberFormatException e) {\n        return null;\n      }\n    } else if(java.util.Calendar.class.isAssignableFrom(clazz)){\n      //(case: date)\n      try {\n        Date d = new Date(Long.parseLong(value));\n        GregorianCalendar cal = new GregorianCalendar();\n        cal.setTime(d);\n        return (E) cal;\n      } catch (NumberFormatException e) {\n        return null;\n      }\n    } else if(File.class.isAssignableFrom(clazz)){\n      return (E) new File(value);\n    } else if(Class.class.isAssignableFrom(clazz)){\n      try {\n        return (E) Class.forName(value);\n      } catch (ClassNotFoundException e) {\n        return null;\n      }\n    } else if(clazz.isArray()){\n      if(value == null){ return null; }\n      Class <?> subType = clazz.getComponentType();\n      // (case: array)\n      String[] strings = decodeArray(value);\n      Object[] array = (Object[]) Array.newInstance(clazz.getComponentType(), strings.length);\n      for(int i=0; i<strings.length; i++){\n        array[i] = cast(strings[i], subType);\n      }\n      return (E) array;\n    } else if(clazz.isEnum()){\n      // (case: enumeration)\n      Class c = (Class) clazz;\n      if(value == null){ return null; }\n      if (value.charAt(0) == '\"') value = value.substring(1);\n      if (value.charAt(value.length()-1) == '\"') value = value.substring(0, value.length() - 1);\n      try {\n        return (E) Enum.valueOf(c, value);\n      } catch (Exception e){\n        try {\n          return (E) Enum.valueOf(c, value.toLowerCase());\n        } catch (Exception e2){\n          try {\n            return (E) Enum.valueOf(c, value.toUpperCase());\n          } catch (Exception e3){\n            return (E) Enum.valueOf(c,\n                (Character.isUpperCase(value.charAt(0)) ? Character.toLowerCase(value.charAt(0)) : Character.toUpperCase(value.charAt(0))) +\n                    value.substring(1));\n          }\n        }\n      }\n    } else if (ObjectOutputStream.class.isAssignableFrom(clazz)) {\n      // (case: object output stream)\n      try {\n        return (E) new ObjectOutputStream((OutputStream) cast(value, OutputStream.class));\n      } catch (IOException e) {\n        throw new RuntimeException(e);\n      }\n    } else if (ObjectInputStream.class.isAssignableFrom(clazz)) {\n      // (case: object input stream)\n      try {\n        return (E) new ObjectInputStream((InputStream) cast(value, InputStream.class));\n      } catch (IOException e) {\n        throw new RuntimeException(e);\n      }\n    } else if (OutputStream.class.isAssignableFrom(clazz)) {\n      // (case: output stream)\n      if (value.equalsIgnoreCase(\"stdout\") || value.equalsIgnoreCase(\"out\")) { return (E) System.out; }\n      if (value.equalsIgnoreCase(\"stderr\") || value.equalsIgnoreCase(\"err\")) { return (E) System.err; }\n      File toWriteTo = cast(value, File.class);\n      try {\n        if (!toWriteTo.exists() && !toWriteTo.createNewFile()) {\n          throw new IllegalStateException(\"Could not create output stream (cannot write file): \" + value);\n        }\n        return (E) new FileOutputStream((File) cast(value, File.class));\n      } catch (IOException e) {\n        throw new RuntimeException(e);\n      }\n    } else if (InputStream.class.isAssignableFrom(clazz)) {\n      // (case: input stream)\n      if (value.equalsIgnoreCase(\"stdin\") || value.equalsIgnoreCase(\"in\")) { return (E) System.in; }\n      File toReadFrom = cast(value, File.class);\n      try {\n        if (!toReadFrom.exists() || !toReadFrom.canRead()) {\n          throw new IllegalStateException(\"Could not create input stream (cannot read file): \" + value);\n        }\n        return (E) new FileInputStream((File) cast(value, File.class));\n      } catch (IOException e) {\n        throw new RuntimeException(e);\n      }\n    } else {\n      try {\n        // (case: can parse from string)\n        Method decode = clazz.getMethod(\"fromString\", String.class);\n        return (E) decode.invoke(MetaClass.create(clazz), value);\n      } catch (NoSuchMethodException e) {  // Silent errors for misc failures\n      } catch (InvocationTargetException e) {\n      } catch (IllegalAccessException e) {\n      } catch (ClassCastException e) {\n      }\n\n      // Pass 2: Guess what the object could be\n      if (Tree.class.isAssignableFrom(clazz)) {\n        // (case: reading a tree)\n        try {\n          return (E) new PennTreeReader(new StringReader(value), new LabeledScoredTreeFactory(CoreLabel.factory())).readTree();\n        } catch (IOException e) {\n          throw new RuntimeException(e);\n        }\n      } else if (Collection.class.isAssignableFrom(clazz)) {\n        // (case: reading a collection)\n        Collection rtn;\n        if (Modifier.isAbstract(clazz.getModifiers())) {\n          rtn = abstractToConcreteCollectionMap.get(clazz).createInstance();\n        } else {\n          rtn = MetaClass.create(clazz).createInstance();\n        }\n        Class <?> subType = clazz.getComponentType();\n        String[] strings = decodeArray(value);\n        for (String string : strings) {\n          if (subType == null) {\n            rtn.add(castWithoutKnowingType(string));\n          } else {\n            rtn.add(cast(string, subType));\n          }\n        }\n        return (E) rtn;\n      } else {\n        // We could not cast this object\n        return null;\n      }\n    }\n  }","id":16020,"modified_method":"/**\n   * Cast a String representation of an object into that object.\n   * E.g. \"5.4\" will be cast to a Double; \"[1,2,3]\" will be cast\n   * to an Integer[].\n   *\n   * NOTE: Date parses from a Long\n   *\n   * @param <E> The type of the object returned (same as type)\n   * @param value The string representation of the object\n   * @param type The type (usually class) to be returned (same as E)\n   * @return An object corresponding to the String value passed\n   */\n  @SuppressWarnings({ \"unchecked\", \"rawtypes\" })\n  public static <E> E cast(String value, Type type){\n    //--Get Type\n    Class <?> clazz;\n    if(type instanceof Class){\n      clazz = (Class <?>) type;\n    }else if(type instanceof ParameterizedType){\n      ParameterizedType pt = (ParameterizedType) type;\n      clazz = (Class <?>) pt.getRawType();\n    }else{\n      throw new IllegalArgumentException(\"Cannot cast to type (unhandled type): \" + type);\n    }\n    //--Cast\n    if(String.class.isAssignableFrom(clazz)){\n      // (case: String)\n      return (E) value;\n    }else if(Boolean.class.isAssignableFrom(clazz) || boolean.class.isAssignableFrom(clazz)){\n      //(case: boolean)\n      if(\"1\".equals(value)){ return (E) Boolean.TRUE; }\n      return (E) Boolean.valueOf(Boolean.parseBoolean(value));\n    }else if(Integer.class.isAssignableFrom(clazz) || int.class.isAssignableFrom(clazz)){\n      //(case: integer)\n      try {\n        return (E) new Integer(Integer.parseInt(value));\n      } catch (NumberFormatException e) {\n        return (E) new Integer((int) Double.parseDouble(value));\n      }\n    }else if(Long.class.isAssignableFrom(clazz) || long.class.isAssignableFrom(clazz)){\n      //(case: long)\n      try {\n        return (E) new Long(Long.parseLong(value));\n      } catch (NumberFormatException e) {\n        return (E) new Long((long) Double.parseDouble(value));\n      }\n    }else if(Float.class.isAssignableFrom(clazz) || float.class.isAssignableFrom(clazz)){\n      //(case: float)\n      if(value == null){ return (E) new Float(Float.NaN); }\n      return (E) new Float(Float.parseFloat(value));\n    }else if(Double.class.isAssignableFrom(clazz) || double.class.isAssignableFrom(clazz)){\n      //(case: double)\n      if(value == null){ return (E) new Double(Double.NaN); }\n      return (E) new Double(Double.parseDouble(value));\n    }else if(Short.class.isAssignableFrom(clazz) || short.class.isAssignableFrom(clazz)){\n      //(case: short)\n      try {\n        return (E) new Short(Short.parseShort(value));\n      } catch (NumberFormatException e) {\n        return (E) new Short((short) Double.parseDouble(value));\n      }\n    }else if(Byte.class.isAssignableFrom(clazz) || byte.class.isAssignableFrom(clazz)){\n      //(case: byte)\n      try {\n        return (E) new Byte(Byte.parseByte(value));\n      } catch (NumberFormatException e) {\n        return (E) new Byte((byte) Double.parseDouble(value));\n      }\n    }else if(Character.class.isAssignableFrom(clazz) || char.class.isAssignableFrom(clazz)){\n      //(case: char)\n      return (E) new Character((char) Integer.parseInt(value));\n    }else if(java.util.Date.class.isAssignableFrom(clazz)){\n      //(case: date)\n      try {\n        return (E) new Date(Long.parseLong(value));\n      } catch (NumberFormatException e) {\n        return null;\n      }\n    } else if(java.util.Calendar.class.isAssignableFrom(clazz)){\n      //(case: date)\n      try {\n        Date d = new Date(Long.parseLong(value));\n        GregorianCalendar cal = new GregorianCalendar();\n        cal.setTime(d);\n        return (E) cal;\n      } catch (NumberFormatException e) {\n        return null;\n      }\n    } else if(File.class.isAssignableFrom(clazz)){\n      return (E) new File(value);\n    } else if(Class.class.isAssignableFrom(clazz)){\n      try {\n        return (E) Class.forName(value);\n      } catch (ClassNotFoundException e) {\n        return null;\n      }\n    } else if(clazz.isArray()){\n      if(value == null){ return null; }\n      Class <?> subType = clazz.getComponentType();\n      // (case: array)\n      String[] strings = decodeArray(value);\n      Object[] array = (Object[]) Array.newInstance(clazz.getComponentType(), strings.length);\n      for(int i=0; i<strings.length; i++){\n        array[i] = cast(strings[i], subType);\n      }\n      return (E) array;\n    } else if (Map.class.isAssignableFrom(clazz)) {\n      return (E) decodeMap(value);\n    } else if(clazz.isEnum()){\n      // (case: enumeration)\n      Class c = (Class) clazz;\n      if(value == null){ return null; }\n      if (value.charAt(0) == '\"') value = value.substring(1);\n      if (value.charAt(value.length()-1) == '\"') value = value.substring(0, value.length() - 1);\n      try {\n        return (E) Enum.valueOf(c, value);\n      } catch (Exception e){\n        try {\n          return (E) Enum.valueOf(c, value.toLowerCase());\n        } catch (Exception e2){\n          try {\n            return (E) Enum.valueOf(c, value.toUpperCase());\n          } catch (Exception e3){\n            return (E) Enum.valueOf(c,\n                (Character.isUpperCase(value.charAt(0)) ? Character.toLowerCase(value.charAt(0)) : Character.toUpperCase(value.charAt(0))) +\n                    value.substring(1));\n          }\n        }\n      }\n    } else if (ObjectOutputStream.class.isAssignableFrom(clazz)) {\n      // (case: object output stream)\n      try {\n        return (E) new ObjectOutputStream((OutputStream) cast(value, OutputStream.class));\n      } catch (IOException e) {\n        throw new RuntimeException(e);\n      }\n    } else if (ObjectInputStream.class.isAssignableFrom(clazz)) {\n      // (case: object input stream)\n      try {\n        return (E) new ObjectInputStream((InputStream) cast(value, InputStream.class));\n      } catch (IOException e) {\n        throw new RuntimeException(e);\n      }\n    } else if (OutputStream.class.isAssignableFrom(clazz)) {\n      // (case: output stream)\n      if (value.equalsIgnoreCase(\"stdout\") || value.equalsIgnoreCase(\"out\")) { return (E) System.out; }\n      if (value.equalsIgnoreCase(\"stderr\") || value.equalsIgnoreCase(\"err\")) { return (E) System.err; }\n      File toWriteTo = cast(value, File.class);\n      try {\n        if (!toWriteTo.exists() && !toWriteTo.createNewFile()) {\n          throw new IllegalStateException(\"Could not create output stream (cannot write file): \" + value);\n        }\n        return (E) new FileOutputStream((File) cast(value, File.class));\n      } catch (IOException e) {\n        throw new RuntimeException(e);\n      }\n    } else if (InputStream.class.isAssignableFrom(clazz)) {\n      // (case: input stream)\n      if (value.equalsIgnoreCase(\"stdin\") || value.equalsIgnoreCase(\"in\")) { return (E) System.in; }\n      File toReadFrom = cast(value, File.class);\n      try {\n        if (!toReadFrom.exists() || !toReadFrom.canRead()) {\n          throw new IllegalStateException(\"Could not create input stream (cannot read file): \" + value);\n        }\n        return (E) new FileInputStream((File) cast(value, File.class));\n      } catch (IOException e) {\n        throw new RuntimeException(e);\n      }\n    } else {\n      try {\n        // (case: can parse from string)\n        Method decode = clazz.getMethod(\"fromString\", String.class);\n        return (E) decode.invoke(MetaClass.create(clazz), value);\n      } catch (NoSuchMethodException e) {  // Silent errors for misc failures\n      } catch (InvocationTargetException e) {\n      } catch (IllegalAccessException e) {\n      } catch (ClassCastException e) {\n      }\n\n      // Pass 2: Guess what the object could be\n      if (Tree.class.isAssignableFrom(clazz)) {\n        // (case: reading a tree)\n        try {\n          return (E) new PennTreeReader(new StringReader(value), new LabeledScoredTreeFactory(CoreLabel.factory())).readTree();\n        } catch (IOException e) {\n          throw new RuntimeException(e);\n        }\n      } else if (Collection.class.isAssignableFrom(clazz)) {\n        // (case: reading a collection)\n        Collection rtn;\n        if (Modifier.isAbstract(clazz.getModifiers())) {\n          rtn = abstractToConcreteCollectionMap.get(clazz).createInstance();\n        } else {\n          rtn = MetaClass.create(clazz).createInstance();\n        }\n        Class <?> subType = clazz.getComponentType();\n        String[] strings = decodeArray(value);\n        for (String string : strings) {\n          if (subType == null) {\n            rtn.add(castWithoutKnowingType(string));\n          } else {\n            rtn.add(cast(string, subType));\n          }\n        }\n        return (E) rtn;\n      } else {\n        // We could not cast this object\n        return null;\n      }\n    }\n  }","commit_id":"eb1089e076339da41a1e41c6b9bb1c29bdbad0b1","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"@Test\n  public void testCastArray() {\n    Integer[] ints1 = MetaClass.cast(\"[1,2,3]\", Integer[].class);\n    assertArrayEquals(new Integer[]{1,2,3}, ints1);\n    Integer[] ints2 = MetaClass.cast(\"(1,2,3)\", Integer[].class);\n    assertArrayEquals(new Integer[]{1,2,3}, ints2);\n    Integer[] ints3 = MetaClass.cast(\"1, 2, 3\", Integer[].class);\n    assertArrayEquals(new Integer[]{1,2,3}, ints3);\n    Integer[] ints4 = MetaClass.cast(\"1 2 3\", Integer[].class);\n    assertArrayEquals(new Integer[]{1,2,3}, ints4);\n    Integer[] ints5 = MetaClass.cast(\"1   2   3\", Integer[].class);\n    assertArrayEquals(new Integer[]{1,2,3}, ints5);\n\n    Integer[] intsEmpty = MetaClass.cast(\"\", Integer[].class);\n    assertArrayEquals(new Integer[]{}, intsEmpty);\n  }","id":16021,"modified_method":"@Test\n  public void testCastArray() {\n    Integer[] ints1 = MetaClass.cast(\"[1,2,3]\", Integer[].class);\n    assertArrayEquals(new Integer[]{1,2,3}, ints1);\n    Integer[] ints2 = MetaClass.cast(\"(1,2,3)\", Integer[].class);\n    assertArrayEquals(new Integer[]{1,2,3}, ints2);\n    Integer[] ints3 = MetaClass.cast(\"1, 2, 3\", Integer[].class);\n    assertArrayEquals(new Integer[]{1,2,3}, ints3);\n    Integer[] ints4 = MetaClass.cast(\"1 2 3\", Integer[].class);\n    assertArrayEquals(new Integer[]{1,2,3}, ints4);\n    Integer[] ints5 = MetaClass.cast(\"1   2   3\", Integer[].class);\n    assertArrayEquals(new Integer[]{1,2,3}, ints5);\n    Integer[] ints6 = MetaClass.cast(\"\\n1 \\n\\n  2   3\", Integer[].class);\n    assertArrayEquals(new Integer[]{1,2,3}, ints6);\n\n    Integer[] intsEmpty = MetaClass.cast(\"\", Integer[].class);\n    assertArrayEquals(new Integer[]{}, intsEmpty);\n  }","commit_id":"eb1089e076339da41a1e41c6b9bb1c29bdbad0b1","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"/**\n   * Cast a String representation of an object into that object.\n   * E.g. \"5.4\" will be cast to a Double; \"[1,2,3]\" will be cast\n   * to an Integer[].\n   *\n   * NOTE: Date parses from a Long\n   *\n   * @param <E> The type of the object returned (same as type)\n   * @param value The string representation of the object\n   * @param type The type (usually class) to be returned (same as E)\n   * @return An object corresponding to the String value passed\n   */\n  @SuppressWarnings({ \"unchecked\", \"rawtypes\" })\n  public static final <E> E cast(String value, Type type){\n    //--Get Type\n    Class <?> clazz = null;\n    Type[] params = null;\n    if(type instanceof Class){\n      clazz = (Class <?>) type;\n    }else if(type instanceof ParameterizedType){\n      ParameterizedType pt = (ParameterizedType) type;\n      params = pt.getActualTypeArguments();\n      clazz = (Class <?>) pt.getRawType();\n    }else{\n      clazz = type2class(type);\n      throw new IllegalArgumentException(\"Cannot cast to type (unhandled type): \" + type);\n    }\n    //--Cast\n    if(String.class.isAssignableFrom(clazz)){\n      // (case: String)\n      return (E) value;\n    }else if(Boolean.class.isAssignableFrom(clazz) || boolean.class.isAssignableFrom(clazz)){\n      //(case: boolean)\n      if(\"1\".equals(value)){ return (E) new Boolean(true); }\n      return (E) new Boolean( Boolean.parseBoolean(value) );\n    }else if(Integer.class.isAssignableFrom(clazz) || int.class.isAssignableFrom(clazz)){\n      //(case: integer)\n      try {\n        return (E) new Integer(Integer.parseInt(value));\n      } catch (NumberFormatException e) {\n        return (E) new Integer((int) Double.parseDouble(value));\n      }\n    }else if(Long.class.isAssignableFrom(clazz) || long.class.isAssignableFrom(clazz)){\n      //(case: long)\n      try {\n        return (E) new Long(Long.parseLong(value));\n      } catch (NumberFormatException e) {\n        return (E) new Long((long) Double.parseDouble(value));\n      }\n    }else if(Float.class.isAssignableFrom(clazz) || float.class.isAssignableFrom(clazz)){\n      //(case: float)\n      if(value == null){ return (E) new Float(Float.NaN); }\n      return (E) new Float(Float.parseFloat(value));\n    }else if(Double.class.isAssignableFrom(clazz) || double.class.isAssignableFrom(clazz)){\n      //(case: double)\n      if(value == null){ return (E) new Double(Double.NaN); }\n      return (E) new Double(Double.parseDouble(value));\n    }else if(Short.class.isAssignableFrom(clazz) || short.class.isAssignableFrom(clazz)){\n      //(case: short)\n      try {\n        return (E) new Short(Short.parseShort(value));\n      } catch (NumberFormatException e) {\n        return (E) new Short((short) Double.parseDouble(value));\n      }\n    }else if(Byte.class.isAssignableFrom(clazz) || byte.class.isAssignableFrom(clazz)){\n      //(case: byte)\n      try {\n        return (E) new Byte(Byte.parseByte(value));\n      } catch (NumberFormatException e) {\n        return (E) new Byte((byte) Double.parseDouble(value));\n      }\n    }else if(Character.class.isAssignableFrom(clazz) || char.class.isAssignableFrom(clazz)){\n      //(case: char)\n      return (E) new Character((char) Integer.parseInt(value));\n    }else if(java.util.Date.class.isAssignableFrom(clazz)){\n      //(case: date)\n      try {\n        return (E) new Date(Long.parseLong(value));\n      } catch (NumberFormatException e) {\n        return null;\n      }\n    } else if(java.util.Calendar.class.isAssignableFrom(clazz)){\n      //(case: date)\n      try {\n        Date d = new Date(Long.parseLong(value));\n        GregorianCalendar cal = new GregorianCalendar();\n        cal.setTime(d);\n        return (E) cal;\n      } catch (NumberFormatException e) {\n        return null;\n      }\n    } else if(File.class.isAssignableFrom(clazz)){\n      return (E) new File(value);\n    } else if(Class.class.isAssignableFrom(clazz)){\n      try {\n        return (E) Class.forName(value);\n      } catch (ClassNotFoundException e) {\n        return null;\n      }\n    } else if(clazz.isArray()){\n      if(value == null){ return null; }\n      Class <?> subType = clazz.getComponentType();\n      // (case: array)\n      String[] strings = decodeArray(value);\n      Object[] array = (Object[]) Array.newInstance(clazz.getComponentType(), strings.length);\n      for(int i=0; i<strings.length; i++){\n        array[i] = cast(strings[i], subType);\n      }\n      return (E) array;\n    } else if(clazz.isEnum()){\n      // (case: enumeration)\n      Class c = (Class) clazz;\n      if(value == null){ return null; }\n      if (value.charAt(0) == '\"') value = value.substring(1);\n      if (value.charAt(value.length()-1) == '\"') value = value.substring(0, value.length() - 1);\n      try {\n        return (E) Enum.valueOf(c, value);\n      } catch (Exception e){\n        try {\n          return (E) Enum.valueOf(c, value.toLowerCase());\n        } catch (Exception e2){\n          try {\n            return (E) Enum.valueOf(c, value.toUpperCase());\n          } catch (Exception e3){\n            return (E) Enum.valueOf(c,\n                (Character.isUpperCase(value.charAt(0)) ? Character.toLowerCase(value.charAt(0)) : Character.toUpperCase(value.charAt(0))) +\n                    value.substring(1));\n          }\n        }\n      }\n    } else if (ObjectOutputStream.class.isAssignableFrom(clazz)) {\n      // (case: object output stream)\n      try {\n        return (E) new ObjectOutputStream((OutputStream) cast(value, OutputStream.class));\n      } catch (IOException e) {\n        throw new RuntimeException(e);\n      }\n    } else if (ObjectInputStream.class.isAssignableFrom(clazz)) {\n      // (case: object input stream)\n      try {\n        return (E) new ObjectInputStream((InputStream) cast(value, InputStream.class));\n      } catch (IOException e) {\n        throw new RuntimeException(e);\n      }\n    } else if (OutputStream.class.isAssignableFrom(clazz)) {\n      // (case: output stream)\n      if (value.equalsIgnoreCase(\"stdout\") || value.equalsIgnoreCase(\"out\")) { return (E) System.out; }\n      if (value.equalsIgnoreCase(\"stderr\") || value.equalsIgnoreCase(\"err\")) { return (E) System.err; }\n      File toWriteTo = cast(value, File.class);\n      try {\n        if (!toWriteTo.exists() && !toWriteTo.createNewFile()) {\n          throw new IllegalStateException(\"Could not create output stream (cannot write file): \" + value);\n        }\n        return (E) new FileOutputStream((File) cast(value, File.class));\n      } catch (IOException e) {\n        throw new RuntimeException(e);\n      }\n    } else if (InputStream.class.isAssignableFrom(clazz)) {\n      // (case: input stream)\n      if (value.equalsIgnoreCase(\"stdin\") || value.equalsIgnoreCase(\"in\")) { return (E) System.in; }\n      File toReadFrom = cast(value, File.class);\n      try {\n        if (!toReadFrom.exists() || !toReadFrom.canRead()) {\n          throw new IllegalStateException(\"Could not create input stream (cannot read file): \" + value);\n        }\n        return (E) new FileInputStream((File) cast(value, File.class));\n      } catch (IOException e) {\n        throw new RuntimeException(e);\n      }\n    } else {\n      try {\n        // (case: can parse from string)\n        Method decode = clazz.getMethod(\"fromString\", String.class);\n        return (E) decode.invoke(MetaClass.create(clazz), value);\n      } catch (NoSuchMethodException e) {  // Silent errors for misc failures\n      } catch (InvocationTargetException e) {\n      } catch (IllegalAccessException e) {\n      } catch (ClassCastException e) {\n      }\n\n      // Pass 2: Guess what the object could be\n      if (Tree.class.isAssignableFrom(clazz)) {\n        // (case: reading a tree)\n        try {\n          return (E) new PennTreeReader(new StringReader(value), new LabeledScoredTreeFactory(CoreLabel.factory())).readTree();\n        } catch (IOException e) {\n          throw new RuntimeException(e);\n        }\n      } else if (Collection.class.isAssignableFrom(clazz)) {\n        // (case: reading a collection)\n        Collection rtn;\n        if (Modifier.isAbstract(clazz.getModifiers())) {\n          rtn = abstractToConcreteCollectionMap.get(clazz).createInstance();\n        } else {\n          rtn = MetaClass.create(clazz).createInstance();\n        }\n        Class <?> subType = clazz.getComponentType();\n        String[] strings = decodeArray(value);\n        for (String string : strings) {\n          if (subType == null) {\n            rtn.add(castWithoutKnowingType(string));\n          } else {\n            rtn.add(cast(string, subType));\n          }\n        }\n        return (E) rtn;\n      } else {\n        // We could not cast this object\n        return null;\n      }\n    }\n  }","id":16022,"modified_method":"/**\n   * Cast a String representation of an object into that object.\n   * E.g. \"5.4\" will be cast to a Double; \"[1,2,3]\" will be cast\n   * to an Integer[].\n   *\n   * NOTE: Date parses from a Long\n   *\n   * @param <E> The type of the object returned (same as type)\n   * @param value The string representation of the object\n   * @param type The type (usually class) to be returned (same as E)\n   * @return An object corresponding to the String value passed\n   */\n  @SuppressWarnings({ \"unchecked\", \"rawtypes\" })\n  public static <E> E cast(String value, Type type){\n    //--Get Type\n    Class <?> clazz;\n    if(type instanceof Class){\n      clazz = (Class <?>) type;\n    }else if(type instanceof ParameterizedType){\n      ParameterizedType pt = (ParameterizedType) type;\n      clazz = (Class <?>) pt.getRawType();\n    }else{\n      throw new IllegalArgumentException(\"Cannot cast to type (unhandled type): \" + type);\n    }\n    //--Cast\n    if(String.class.isAssignableFrom(clazz)){\n      // (case: String)\n      return (E) value;\n    }else if(Boolean.class.isAssignableFrom(clazz) || boolean.class.isAssignableFrom(clazz)){\n      //(case: boolean)\n      if(\"1\".equals(value)){ return (E) Boolean.TRUE; }\n      return (E) Boolean.valueOf(Boolean.parseBoolean(value));\n    }else if(Integer.class.isAssignableFrom(clazz) || int.class.isAssignableFrom(clazz)){\n      //(case: integer)\n      try {\n        return (E) new Integer(Integer.parseInt(value));\n      } catch (NumberFormatException e) {\n        return (E) new Integer((int) Double.parseDouble(value));\n      }\n    }else if(Long.class.isAssignableFrom(clazz) || long.class.isAssignableFrom(clazz)){\n      //(case: long)\n      try {\n        return (E) new Long(Long.parseLong(value));\n      } catch (NumberFormatException e) {\n        return (E) new Long((long) Double.parseDouble(value));\n      }\n    }else if(Float.class.isAssignableFrom(clazz) || float.class.isAssignableFrom(clazz)){\n      //(case: float)\n      if(value == null){ return (E) new Float(Float.NaN); }\n      return (E) new Float(Float.parseFloat(value));\n    }else if(Double.class.isAssignableFrom(clazz) || double.class.isAssignableFrom(clazz)){\n      //(case: double)\n      if(value == null){ return (E) new Double(Double.NaN); }\n      return (E) new Double(Double.parseDouble(value));\n    }else if(Short.class.isAssignableFrom(clazz) || short.class.isAssignableFrom(clazz)){\n      //(case: short)\n      try {\n        return (E) new Short(Short.parseShort(value));\n      } catch (NumberFormatException e) {\n        return (E) new Short((short) Double.parseDouble(value));\n      }\n    }else if(Byte.class.isAssignableFrom(clazz) || byte.class.isAssignableFrom(clazz)){\n      //(case: byte)\n      try {\n        return (E) new Byte(Byte.parseByte(value));\n      } catch (NumberFormatException e) {\n        return (E) new Byte((byte) Double.parseDouble(value));\n      }\n    }else if(Character.class.isAssignableFrom(clazz) || char.class.isAssignableFrom(clazz)){\n      //(case: char)\n      return (E) new Character((char) Integer.parseInt(value));\n    }else if(java.util.Date.class.isAssignableFrom(clazz)){\n      //(case: date)\n      try {\n        return (E) new Date(Long.parseLong(value));\n      } catch (NumberFormatException e) {\n        return null;\n      }\n    } else if(java.util.Calendar.class.isAssignableFrom(clazz)){\n      //(case: date)\n      try {\n        Date d = new Date(Long.parseLong(value));\n        GregorianCalendar cal = new GregorianCalendar();\n        cal.setTime(d);\n        return (E) cal;\n      } catch (NumberFormatException e) {\n        return null;\n      }\n    } else if(File.class.isAssignableFrom(clazz)){\n      return (E) new File(value);\n    } else if(Class.class.isAssignableFrom(clazz)){\n      try {\n        return (E) Class.forName(value);\n      } catch (ClassNotFoundException e) {\n        return null;\n      }\n    } else if(clazz.isArray()){\n      if(value == null){ return null; }\n      Class <?> subType = clazz.getComponentType();\n      // (case: array)\n      String[] strings = decodeArray(value);\n      Object[] array = (Object[]) Array.newInstance(clazz.getComponentType(), strings.length);\n      for(int i=0; i<strings.length; i++){\n        array[i] = cast(strings[i], subType);\n      }\n      return (E) array;\n    } else if (Map.class.isAssignableFrom(clazz)) {\n      return (E) decodeMap(value);\n    } else if(clazz.isEnum()){\n      // (case: enumeration)\n      Class c = (Class) clazz;\n      if(value == null){ return null; }\n      if (value.charAt(0) == '\"') value = value.substring(1);\n      if (value.charAt(value.length()-1) == '\"') value = value.substring(0, value.length() - 1);\n      try {\n        return (E) Enum.valueOf(c, value);\n      } catch (Exception e){\n        try {\n          return (E) Enum.valueOf(c, value.toLowerCase());\n        } catch (Exception e2){\n          try {\n            return (E) Enum.valueOf(c, value.toUpperCase());\n          } catch (Exception e3){\n            return (E) Enum.valueOf(c,\n                (Character.isUpperCase(value.charAt(0)) ? Character.toLowerCase(value.charAt(0)) : Character.toUpperCase(value.charAt(0))) +\n                    value.substring(1));\n          }\n        }\n      }\n    } else if (ObjectOutputStream.class.isAssignableFrom(clazz)) {\n      // (case: object output stream)\n      try {\n        return (E) new ObjectOutputStream((OutputStream) cast(value, OutputStream.class));\n      } catch (IOException e) {\n        throw new RuntimeException(e);\n      }\n    } else if (ObjectInputStream.class.isAssignableFrom(clazz)) {\n      // (case: object input stream)\n      try {\n        return (E) new ObjectInputStream((InputStream) cast(value, InputStream.class));\n      } catch (IOException e) {\n        throw new RuntimeException(e);\n      }\n    } else if (OutputStream.class.isAssignableFrom(clazz)) {\n      // (case: output stream)\n      if (value.equalsIgnoreCase(\"stdout\") || value.equalsIgnoreCase(\"out\")) { return (E) System.out; }\n      if (value.equalsIgnoreCase(\"stderr\") || value.equalsIgnoreCase(\"err\")) { return (E) System.err; }\n      File toWriteTo = cast(value, File.class);\n      try {\n        if (!toWriteTo.exists() && !toWriteTo.createNewFile()) {\n          throw new IllegalStateException(\"Could not create output stream (cannot write file): \" + value);\n        }\n        return (E) new FileOutputStream((File) cast(value, File.class));\n      } catch (IOException e) {\n        throw new RuntimeException(e);\n      }\n    } else if (InputStream.class.isAssignableFrom(clazz)) {\n      // (case: input stream)\n      if (value.equalsIgnoreCase(\"stdin\") || value.equalsIgnoreCase(\"in\")) { return (E) System.in; }\n      File toReadFrom = cast(value, File.class);\n      try {\n        if (!toReadFrom.exists() || !toReadFrom.canRead()) {\n          throw new IllegalStateException(\"Could not create input stream (cannot read file): \" + value);\n        }\n        return (E) new FileInputStream((File) cast(value, File.class));\n      } catch (IOException e) {\n        throw new RuntimeException(e);\n      }\n    } else {\n      try {\n        // (case: can parse from string)\n        Method decode = clazz.getMethod(\"fromString\", String.class);\n        return (E) decode.invoke(MetaClass.create(clazz), value);\n      } catch (NoSuchMethodException e) {  // Silent errors for misc failures\n      } catch (InvocationTargetException e) {\n      } catch (IllegalAccessException e) {\n      } catch (ClassCastException e) {\n      }\n\n      // Pass 2: Guess what the object could be\n      if (Tree.class.isAssignableFrom(clazz)) {\n        // (case: reading a tree)\n        try {\n          return (E) new PennTreeReader(new StringReader(value), new LabeledScoredTreeFactory(CoreLabel.factory())).readTree();\n        } catch (IOException e) {\n          throw new RuntimeException(e);\n        }\n      } else if (Collection.class.isAssignableFrom(clazz)) {\n        // (case: reading a collection)\n        Collection rtn;\n        if (Modifier.isAbstract(clazz.getModifiers())) {\n          rtn = abstractToConcreteCollectionMap.get(clazz).createInstance();\n        } else {\n          rtn = MetaClass.create(clazz).createInstance();\n        }\n        Class <?> subType = clazz.getComponentType();\n        String[] strings = decodeArray(value);\n        for (String string : strings) {\n          if (subType == null) {\n            rtn.add(castWithoutKnowingType(string));\n          } else {\n            rtn.add(cast(string, subType));\n          }\n        }\n        return (E) rtn;\n      } else {\n        // We could not cast this object\n        return null;\n      }\n    }\n  }","commit_id":"c714106484114467671463b3d5ceb68f39a55ee6","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"/**\n   * Decode an array encoded as a String. This entails a comma separated value enclosed in brackets\n   * or parentheses\n   * @param encoded The String encoded array\n   * @return A String array corresponding to the encoded array\n   */\n\tprivate static String[] decodeArray(String encoded){\n    if (encoded.length() == 0) return new String[]{};\n\t\tchar[] chars = encoded.trim().toCharArray();\n\n\t\t//--Parse the String\n\t\t//(state)\n\t\tchar quoteCloseChar = (char) 0;\n\t\tList<StringBuilder> terms = new LinkedList<StringBuilder>();\n\t\tStringBuilder current = new StringBuilder();\n\t\t//(start/stop overhead)\n\t\tint start = 0; int end = chars.length;\n\t\tif(chars[0] == '('){ start += 1; end -= 1; if(chars[end] != ')') throw new IllegalArgumentException(\"Unclosed paren in encoded array: \" + encoded); }\n\t\tif(chars[0] == '['){ start += 1; end -= 1; if(chars[end] != ']') throw new IllegalArgumentException(\"Unclosed bracket in encoded array: \" + encoded); }\n    if(chars[0] == '{'){ start += 1; end -= 1; if(chars[end] != '}') throw new IllegalArgumentException(\"Unclosed bracket in encoded array: \" + encoded); }\n\t\t//(finite state automata)\n\t\tfor(int i=start; i<end; i++){\n\t\t\tif(chars[i] == '\\\\'){\n\t\t\t\t//(case: escaped character)\n\t\t\t\tif(i == chars.length - 1) throw new IllegalArgumentException(\"Last character of encoded pair is escape character: \" + encoded);\n\t\t\t\tcurrent.append(chars[i+1]);\n\t\t\t\ti += 1;\n\t\t\t} else if(quoteCloseChar != 0){\n\t\t\t\t//(case: in quotes)\n\t\t\t\tif(chars[i] == quoteCloseChar){\n\t\t\t\t\tquoteCloseChar = (char) 0;\n\t\t\t\t}else{\n\t\t\t\t\tcurrent.append(chars[i]);\n\t\t\t\t}\n\t\t\t}else{\n\t\t\t\t//(case: normal)\n\t\t\t\tif(chars[i] == '\"'){\n          quoteCloseChar = '\"';\n\t\t\t\t} else if(chars[i] == '\\''){\n          quoteCloseChar = '\\'';\n\t\t\t\t} else if(chars[i] == ',' || chars[i] == ' ' || chars[i] == '\\t' || chars[i] == '\\n'){\n\t\t\t\t\t//break\n          if (current.length() > 0) {\n\t\t\t\t\t  terms.add(current);\n          }\n\t\t\t\t\tcurrent = new StringBuilder();\n\t\t\t\t}else{\n\t\t\t\t\tcurrent.append(chars[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t//--Return\n\t\tif(current.length() > 0) terms.add(current);\n\t\tString[] rtn = new String[terms.size()];\n\t\tint i=0;\n\t\tfor(StringBuilder b : terms){\n\t\t\trtn[i] = b.toString().trim();\n\t\t\ti += 1;\n\t\t}\n    return rtn;\n  }","id":16023,"modified_method":"/**\n   * Decode an array encoded as a String. This entails a comma separated value enclosed in brackets\n   * or parentheses\n   * @param encoded The String encoded array\n   * @return A String array corresponding to the encoded array\n   */\n\tprivate static String[] decodeArray(String encoded){\n    if (encoded.length() == 0) return new String[]{};\n\t\tchar[] chars = encoded.trim().toCharArray();\n\n\t\t//--Parse the String\n\t\t//(state)\n\t\tchar quoteCloseChar = (char) 0;\n\t\tList<StringBuilder> terms = new LinkedList<StringBuilder>();\n\t\tStringBuilder current = new StringBuilder();\n\t\t//(start/stop overhead)\n\t\tint start = 0; int end = chars.length;\n\t\tif(chars[0] == '('){ start += 1; end -= 1; if(chars[end] != ')') throw new IllegalArgumentException(\"Unclosed paren in encoded array: \" + encoded); }\n\t\tif(chars[0] == '['){ start += 1; end -= 1; if(chars[end] != ']') throw new IllegalArgumentException(\"Unclosed bracket in encoded array: \" + encoded); }\n    if(chars[0] == '{'){ start += 1; end -= 1; if(chars[end] != '}') throw new IllegalArgumentException(\"Unclosed bracket in encoded array: \" + encoded); }\n\t\t//(finite state automata)\n\t\tfor(int i=start; i<end; i++){\n\t\t\tif(chars[i] == '\\\\'){\n\t\t\t\t//(case: escaped character)\n\t\t\t\tif(i == chars.length - 1) throw new IllegalArgumentException(\"Last character of encoded pair is escape character: \" + encoded);\n\t\t\t\tcurrent.append(chars[i+1]);\n\t\t\t\ti += 1;\n\t\t\t} else if(quoteCloseChar != 0){\n\t\t\t\t//(case: in quotes)\n\t\t\t\tif(chars[i] == quoteCloseChar){\n\t\t\t\t\tquoteCloseChar = (char) 0;\n\t\t\t\t}else{\n\t\t\t\t\tcurrent.append(chars[i]);\n\t\t\t\t}\n\t\t\t}else{\n\t\t\t\t//(case: normal)\n\t\t\t\tif(chars[i] == '\"'){\n          quoteCloseChar = '\"';\n\t\t\t\t} else if(chars[i] == '\\''){\n          quoteCloseChar = '\\'';\n\t\t\t\t} else if(chars[i] == ',' || chars[i] == ';' || chars[i] == ' ' || chars[i] == '\\t' || chars[i] == '\\n'){\n\t\t\t\t\t//break\n          if (current.length() > 0) {\n\t\t\t\t\t  terms.add(current);\n          }\n\t\t\t\t\tcurrent = new StringBuilder();\n\t\t\t\t}else{\n\t\t\t\t\tcurrent.append(chars[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t//--Return\n\t\tif(current.length() > 0) terms.add(current);\n\t\tString[] rtn = new String[terms.size()];\n\t\tint i=0;\n\t\tfor(StringBuilder b : terms){\n\t\t\trtn[i] = b.toString().trim();\n\t\t\ti += 1;\n\t\t}\n    return rtn;\n  }","commit_id":"c714106484114467671463b3d5ceb68f39a55ee6","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"@Test\n  public void testCastArray() {\n    Integer[] ints1 = MetaClass.cast(\"[1,2,3]\", Integer[].class);\n    assertArrayEquals(new Integer[]{1,2,3}, ints1);\n    Integer[] ints2 = MetaClass.cast(\"(1,2,3)\", Integer[].class);\n    assertArrayEquals(new Integer[]{1,2,3}, ints2);\n    Integer[] ints3 = MetaClass.cast(\"1, 2, 3\", Integer[].class);\n    assertArrayEquals(new Integer[]{1,2,3}, ints3);\n    Integer[] ints4 = MetaClass.cast(\"1 2 3\", Integer[].class);\n    assertArrayEquals(new Integer[]{1,2,3}, ints4);\n    Integer[] ints5 = MetaClass.cast(\"1   2   3\", Integer[].class);\n    assertArrayEquals(new Integer[]{1,2,3}, ints5);\n\n    Integer[] intsEmpty = MetaClass.cast(\"\", Integer[].class);\n    assertArrayEquals(new Integer[]{}, intsEmpty);\n  }","id":16024,"modified_method":"@Test\n  public void testCastArray() {\n    Integer[] ints1 = MetaClass.cast(\"[1,2,3]\", Integer[].class);\n    assertArrayEquals(new Integer[]{1,2,3}, ints1);\n    Integer[] ints2 = MetaClass.cast(\"(1,2,3)\", Integer[].class);\n    assertArrayEquals(new Integer[]{1,2,3}, ints2);\n    Integer[] ints3 = MetaClass.cast(\"1, 2, 3\", Integer[].class);\n    assertArrayEquals(new Integer[]{1,2,3}, ints3);\n    Integer[] ints4 = MetaClass.cast(\"1 2 3\", Integer[].class);\n    assertArrayEquals(new Integer[]{1,2,3}, ints4);\n    Integer[] ints5 = MetaClass.cast(\"1   2   3\", Integer[].class);\n    assertArrayEquals(new Integer[]{1,2,3}, ints5);\n    Integer[] ints6 = MetaClass.cast(\"\\n1 \\n\\n  2   3\", Integer[].class);\n    assertArrayEquals(new Integer[]{1,2,3}, ints6);\n\n    Integer[] intsEmpty = MetaClass.cast(\"\", Integer[].class);\n    assertArrayEquals(new Integer[]{}, intsEmpty);\n  }","commit_id":"c714106484114467671463b3d5ceb68f39a55ee6","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"/**\n   * Decode an array encoded as a String. This entails a comma separated value enclosed in brackets\n   * or parentheses\n   * @param encoded The String encoded array\n   * @return A String array corresponding to the encoded array\n   */\n\tprivate static String[] decodeArray(String encoded){\n    if (encoded.length() == 0) return new String[]{};\n\t\tchar[] chars = encoded.trim().toCharArray();\n\n\t\t//--Parse the String\n\t\t//(state)\n\t\tchar quoteCloseChar = (char) 0;\n\t\tList<StringBuilder> terms = new LinkedList<StringBuilder>();\n\t\tStringBuilder current = new StringBuilder();\n\t\t//(start/stop overhead)\n\t\tint start = 0; int end = chars.length;\n\t\tif(chars[0] == '('){ start += 1; end -= 1; if(chars[end] != ')') throw new IllegalArgumentException(\"Unclosed paren in encoded array: \" + encoded); }\n\t\tif(chars[0] == '['){ start += 1; end -= 1; if(chars[end] != ']') throw new IllegalArgumentException(\"Unclosed bracket in encoded array: \" + encoded); }\n    if(chars[0] == '{'){ start += 1; end -= 1; if(chars[end] != '}') throw new IllegalArgumentException(\"Unclosed bracket in encoded array: \" + encoded); }\n\t\t//(finite state automata)\n\t\tfor(int i=start; i<end; i++){\n\t\t\tif(chars[i] == '\\\\'){\n\t\t\t\t//(case: escaped character)\n\t\t\t\tif(i == chars.length - 1) throw new IllegalArgumentException(\"Last character of encoded pair is escape character: \" + encoded);\n\t\t\t\tcurrent.append(chars[i+1]);\n\t\t\t\ti += 1;\n\t\t\t} else if(quoteCloseChar != 0){\n\t\t\t\t//(case: in quotes)\n\t\t\t\tif(chars[i] == quoteCloseChar){\n\t\t\t\t\tquoteCloseChar = (char) 0;\n\t\t\t\t}else{\n\t\t\t\t\tcurrent.append(chars[i]);\n\t\t\t\t}\n\t\t\t}else{\n\t\t\t\t//(case: normal)\n\t\t\t\tif(chars[i] == '\"'){\n          quoteCloseChar = '\"';\n\t\t\t\t} else if(chars[i] == '\\''){\n          quoteCloseChar = '\\'';\n\t\t\t\t} else if(chars[i] == ',' || chars[i] == ' ' || chars[i] == '\\t' || chars[i] == '\\n'){\n\t\t\t\t\t//break\n          if (current.length() > 0) {\n\t\t\t\t\t  terms.add(current);\n          }\n\t\t\t\t\tcurrent = new StringBuilder();\n\t\t\t\t}else{\n\t\t\t\t\tcurrent.append(chars[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t//--Return\n\t\tif(current.length() > 0) terms.add(current);\n\t\tString[] rtn = new String[terms.size()];\n\t\tint i=0;\n\t\tfor(StringBuilder b : terms){\n\t\t\trtn[i] = b.toString().trim();\n\t\t\ti += 1;\n\t\t}\n    return rtn;\n  }","id":16025,"modified_method":"/**\n   * Decode an array encoded as a String. This entails a comma separated value enclosed in brackets\n   * or parentheses\n   * @param encoded The String encoded array\n   * @return A String array corresponding to the encoded array\n   */\n\tprivate static String[] decodeArray(String encoded){\n    if (encoded.length() == 0) return new String[]{};\n\t\tchar[] chars = encoded.trim().toCharArray();\n\n\t\t//--Parse the String\n\t\t//(state)\n\t\tchar quoteCloseChar = (char) 0;\n\t\tList<StringBuilder> terms = new LinkedList<StringBuilder>();\n\t\tStringBuilder current = new StringBuilder();\n\t\t//(start/stop overhead)\n\t\tint start = 0; int end = chars.length;\n\t\tif(chars[0] == '('){ start += 1; end -= 1; if(chars[end] != ')') throw new IllegalArgumentException(\"Unclosed paren in encoded array: \" + encoded); }\n\t\tif(chars[0] == '['){ start += 1; end -= 1; if(chars[end] != ']') throw new IllegalArgumentException(\"Unclosed bracket in encoded array: \" + encoded); }\n    if(chars[0] == '{'){ start += 1; end -= 1; if(chars[end] != '}') throw new IllegalArgumentException(\"Unclosed bracket in encoded array: \" + encoded); }\n\t\t//(finite state automata)\n\t\tfor(int i=start; i<end; i++){\n\t\t\tif(chars[i] == '\\\\'){\n\t\t\t\t//(case: escaped character)\n\t\t\t\tif(i == chars.length - 1) throw new IllegalArgumentException(\"Last character of encoded pair is escape character: \" + encoded);\n\t\t\t\tcurrent.append(chars[i+1]);\n\t\t\t\ti += 1;\n\t\t\t} else if(quoteCloseChar != 0){\n\t\t\t\t//(case: in quotes)\n\t\t\t\tif(chars[i] == quoteCloseChar){\n\t\t\t\t\tquoteCloseChar = (char) 0;\n\t\t\t\t}else{\n\t\t\t\t\tcurrent.append(chars[i]);\n\t\t\t\t}\n\t\t\t}else{\n\t\t\t\t//(case: normal)\n\t\t\t\tif(chars[i] == '\"'){\n          quoteCloseChar = '\"';\n\t\t\t\t} else if(chars[i] == '\\''){\n          quoteCloseChar = '\\'';\n\t\t\t\t} else if(chars[i] == ',' || chars[i] == ';' || chars[i] == ' ' || chars[i] == '\\t' || chars[i] == '\\n'){\n\t\t\t\t\t//break\n          if (current.length() > 0) {\n\t\t\t\t\t  terms.add(current);\n          }\n\t\t\t\t\tcurrent = new StringBuilder();\n\t\t\t\t}else{\n\t\t\t\t\tcurrent.append(chars[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t//--Return\n\t\tif(current.length() > 0) terms.add(current);\n\t\tString[] rtn = new String[terms.size()];\n\t\tint i=0;\n\t\tfor(StringBuilder b : terms){\n\t\t\trtn[i] = b.toString().trim();\n\t\t\ti += 1;\n\t\t}\n    return rtn;\n  }","commit_id":"49064bbc67bddbf1e2666994c550e0a318643425","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"/**\n   * Cast a String representation of an object into that object.\n   * E.g. \"5.4\" will be cast to a Double; \"[1,2,3]\" will be cast\n   * to an Integer[].\n   *\n   * NOTE: Date parses from a Long\n   *\n   * @param <E> The type of the object returned (same as type)\n   * @param value The string representation of the object\n   * @param type The type (usually class) to be returned (same as E)\n   * @return An object corresponding to the String value passed\n   */\n  @SuppressWarnings({ \"unchecked\", \"rawtypes\" })\n  public static final <E> E cast(String value, Type type){\n    //--Get Type\n    Class <?> clazz = null;\n    Type[] params = null;\n    if(type instanceof Class){\n      clazz = (Class <?>) type;\n    }else if(type instanceof ParameterizedType){\n      ParameterizedType pt = (ParameterizedType) type;\n      params = pt.getActualTypeArguments();\n      clazz = (Class <?>) pt.getRawType();\n    }else{\n      clazz = type2class(type);\n      throw new IllegalArgumentException(\"Cannot cast to type (unhandled type): \" + type);\n    }\n    //--Cast\n    if(String.class.isAssignableFrom(clazz)){\n      // (case: String)\n      return (E) value;\n    }else if(Boolean.class.isAssignableFrom(clazz) || boolean.class.isAssignableFrom(clazz)){\n      //(case: boolean)\n      if(\"1\".equals(value)){ return (E) new Boolean(true); }\n      return (E) new Boolean( Boolean.parseBoolean(value) );\n    }else if(Integer.class.isAssignableFrom(clazz) || int.class.isAssignableFrom(clazz)){\n      //(case: integer)\n      try {\n        return (E) new Integer(Integer.parseInt(value));\n      } catch (NumberFormatException e) {\n        return (E) new Integer((int) Double.parseDouble(value));\n      }\n    }else if(Long.class.isAssignableFrom(clazz) || long.class.isAssignableFrom(clazz)){\n      //(case: long)\n      try {\n        return (E) new Long(Long.parseLong(value));\n      } catch (NumberFormatException e) {\n        return (E) new Long((long) Double.parseDouble(value));\n      }\n    }else if(Float.class.isAssignableFrom(clazz) || float.class.isAssignableFrom(clazz)){\n      //(case: float)\n      if(value == null){ return (E) new Float(Float.NaN); }\n      return (E) new Float(Float.parseFloat(value));\n    }else if(Double.class.isAssignableFrom(clazz) || double.class.isAssignableFrom(clazz)){\n      //(case: double)\n      if(value == null){ return (E) new Double(Double.NaN); }\n      return (E) new Double(Double.parseDouble(value));\n    }else if(Short.class.isAssignableFrom(clazz) || short.class.isAssignableFrom(clazz)){\n      //(case: short)\n      try {\n        return (E) new Short(Short.parseShort(value));\n      } catch (NumberFormatException e) {\n        return (E) new Short((short) Double.parseDouble(value));\n      }\n    }else if(Byte.class.isAssignableFrom(clazz) || byte.class.isAssignableFrom(clazz)){\n      //(case: byte)\n      try {\n        return (E) new Byte(Byte.parseByte(value));\n      } catch (NumberFormatException e) {\n        return (E) new Byte((byte) Double.parseDouble(value));\n      }\n    }else if(Character.class.isAssignableFrom(clazz) || char.class.isAssignableFrom(clazz)){\n      //(case: char)\n      return (E) new Character((char) Integer.parseInt(value));\n    }else if(java.util.Date.class.isAssignableFrom(clazz)){\n      //(case: date)\n      try {\n        return (E) new Date(Long.parseLong(value));\n      } catch (NumberFormatException e) {\n        return null;\n      }\n    } else if(java.util.Calendar.class.isAssignableFrom(clazz)){\n      //(case: date)\n      try {\n        Date d = new Date(Long.parseLong(value));\n        GregorianCalendar cal = new GregorianCalendar();\n        cal.setTime(d);\n        return (E) cal;\n      } catch (NumberFormatException e) {\n        return null;\n      }\n    } else if(File.class.isAssignableFrom(clazz)){\n      return (E) new File(value);\n    } else if(Class.class.isAssignableFrom(clazz)){\n      try {\n        return (E) Class.forName(value);\n      } catch (ClassNotFoundException e) {\n        return null;\n      }\n    } else if(clazz.isArray()){\n      if(value == null){ return null; }\n      Class <?> subType = clazz.getComponentType();\n      // (case: array)\n      String[] strings = decodeArray(value);\n      Object[] array = (Object[]) Array.newInstance(clazz.getComponentType(), strings.length);\n      for(int i=0; i<strings.length; i++){\n        array[i] = cast(strings[i], subType);\n      }\n      return (E) array;\n    } else if(clazz.isEnum()){\n      // (case: enumeration)\n      Class c = (Class) clazz;\n      if(value == null){ return null; }\n      if (value.charAt(0) == '\"') value = value.substring(1);\n      if (value.charAt(value.length()-1) == '\"') value = value.substring(0, value.length() - 1);\n      try {\n        return (E) Enum.valueOf(c, value);\n      } catch (Exception e){\n        try {\n          return (E) Enum.valueOf(c, value.toLowerCase());\n        } catch (Exception e2){\n          try {\n            return (E) Enum.valueOf(c, value.toUpperCase());\n          } catch (Exception e3){\n            return (E) Enum.valueOf(c,\n                (Character.isUpperCase(value.charAt(0)) ? Character.toLowerCase(value.charAt(0)) : Character.toUpperCase(value.charAt(0))) +\n                    value.substring(1));\n          }\n        }\n      }\n    } else if (ObjectOutputStream.class.isAssignableFrom(clazz)) {\n      // (case: object output stream)\n      try {\n        return (E) new ObjectOutputStream((OutputStream) cast(value, OutputStream.class));\n      } catch (IOException e) {\n        throw new RuntimeException(e);\n      }\n    } else if (ObjectInputStream.class.isAssignableFrom(clazz)) {\n      // (case: object input stream)\n      try {\n        return (E) new ObjectInputStream((InputStream) cast(value, InputStream.class));\n      } catch (IOException e) {\n        throw new RuntimeException(e);\n      }\n    } else if (OutputStream.class.isAssignableFrom(clazz)) {\n      // (case: output stream)\n      if (value.equalsIgnoreCase(\"stdout\") || value.equalsIgnoreCase(\"out\")) { return (E) System.out; }\n      if (value.equalsIgnoreCase(\"stderr\") || value.equalsIgnoreCase(\"err\")) { return (E) System.err; }\n      File toWriteTo = cast(value, File.class);\n      try {\n        if (!toWriteTo.exists() && !toWriteTo.createNewFile()) {\n          throw new IllegalStateException(\"Could not create output stream (cannot write file): \" + value);\n        }\n        return (E) new FileOutputStream((File) cast(value, File.class));\n      } catch (IOException e) {\n        throw new RuntimeException(e);\n      }\n    } else if (InputStream.class.isAssignableFrom(clazz)) {\n      // (case: input stream)\n      if (value.equalsIgnoreCase(\"stdin\") || value.equalsIgnoreCase(\"in\")) { return (E) System.in; }\n      File toReadFrom = cast(value, File.class);\n      try {\n        if (!toReadFrom.exists() || !toReadFrom.canRead()) {\n          throw new IllegalStateException(\"Could not create input stream (cannot read file): \" + value);\n        }\n        return (E) new FileInputStream((File) cast(value, File.class));\n      } catch (IOException e) {\n        throw new RuntimeException(e);\n      }\n    } else {\n      try {\n        // (case: can parse from string)\n        Method decode = clazz.getMethod(\"fromString\", String.class);\n        return (E) decode.invoke(MetaClass.create(clazz), value);\n      } catch (NoSuchMethodException e) {  // Silent errors for misc failures\n      } catch (InvocationTargetException e) {\n      } catch (IllegalAccessException e) {\n      } catch (ClassCastException e) {\n      }\n\n      // Pass 2: Guess what the object could be\n      if (Tree.class.isAssignableFrom(clazz)) {\n        // (case: reading a tree)\n        try {\n          return (E) new PennTreeReader(new StringReader(value), new LabeledScoredTreeFactory(CoreLabel.factory())).readTree();\n        } catch (IOException e) {\n          throw new RuntimeException(e);\n        }\n      } else if (Collection.class.isAssignableFrom(clazz)) {\n        // (case: reading a collection)\n        Collection rtn;\n        if (Modifier.isAbstract(clazz.getModifiers())) {\n          rtn = abstractToConcreteCollectionMap.get(clazz).createInstance();\n        } else {\n          rtn = MetaClass.create(clazz).createInstance();\n        }\n        Class <?> subType = clazz.getComponentType();\n        String[] strings = decodeArray(value);\n        for (String string : strings) {\n          if (subType == null) {\n            rtn.add(castWithoutKnowingType(string));\n          } else {\n            rtn.add(cast(string, subType));\n          }\n        }\n        return (E) rtn;\n      } else {\n        // We could not cast this object\n        return null;\n      }\n    }\n  }","id":16026,"modified_method":"/**\n   * Cast a String representation of an object into that object.\n   * E.g. \"5.4\" will be cast to a Double; \"[1,2,3]\" will be cast\n   * to an Integer[].\n   *\n   * NOTE: Date parses from a Long\n   *\n   * @param <E> The type of the object returned (same as type)\n   * @param value The string representation of the object\n   * @param type The type (usually class) to be returned (same as E)\n   * @return An object corresponding to the String value passed\n   */\n  @SuppressWarnings({ \"unchecked\", \"rawtypes\" })\n  public static <E> E cast(String value, Type type){\n    //--Get Type\n    Class <?> clazz;\n    if(type instanceof Class){\n      clazz = (Class <?>) type;\n    }else if(type instanceof ParameterizedType){\n      ParameterizedType pt = (ParameterizedType) type;\n      clazz = (Class <?>) pt.getRawType();\n    }else{\n      throw new IllegalArgumentException(\"Cannot cast to type (unhandled type): \" + type);\n    }\n    //--Cast\n    if(String.class.isAssignableFrom(clazz)){\n      // (case: String)\n      return (E) value;\n    }else if(Boolean.class.isAssignableFrom(clazz) || boolean.class.isAssignableFrom(clazz)){\n      //(case: boolean)\n      if(\"1\".equals(value)){ return (E) Boolean.TRUE; }\n      return (E) Boolean.valueOf(Boolean.parseBoolean(value));\n    }else if(Integer.class.isAssignableFrom(clazz) || int.class.isAssignableFrom(clazz)){\n      //(case: integer)\n      try {\n        return (E) new Integer(Integer.parseInt(value));\n      } catch (NumberFormatException e) {\n        return (E) new Integer((int) Double.parseDouble(value));\n      }\n    }else if(Long.class.isAssignableFrom(clazz) || long.class.isAssignableFrom(clazz)){\n      //(case: long)\n      try {\n        return (E) new Long(Long.parseLong(value));\n      } catch (NumberFormatException e) {\n        return (E) new Long((long) Double.parseDouble(value));\n      }\n    }else if(Float.class.isAssignableFrom(clazz) || float.class.isAssignableFrom(clazz)){\n      //(case: float)\n      if(value == null){ return (E) new Float(Float.NaN); }\n      return (E) new Float(Float.parseFloat(value));\n    }else if(Double.class.isAssignableFrom(clazz) || double.class.isAssignableFrom(clazz)){\n      //(case: double)\n      if(value == null){ return (E) new Double(Double.NaN); }\n      return (E) new Double(Double.parseDouble(value));\n    }else if(Short.class.isAssignableFrom(clazz) || short.class.isAssignableFrom(clazz)){\n      //(case: short)\n      try {\n        return (E) new Short(Short.parseShort(value));\n      } catch (NumberFormatException e) {\n        return (E) new Short((short) Double.parseDouble(value));\n      }\n    }else if(Byte.class.isAssignableFrom(clazz) || byte.class.isAssignableFrom(clazz)){\n      //(case: byte)\n      try {\n        return (E) new Byte(Byte.parseByte(value));\n      } catch (NumberFormatException e) {\n        return (E) new Byte((byte) Double.parseDouble(value));\n      }\n    }else if(Character.class.isAssignableFrom(clazz) || char.class.isAssignableFrom(clazz)){\n      //(case: char)\n      return (E) new Character((char) Integer.parseInt(value));\n    }else if(java.util.Date.class.isAssignableFrom(clazz)){\n      //(case: date)\n      try {\n        return (E) new Date(Long.parseLong(value));\n      } catch (NumberFormatException e) {\n        return null;\n      }\n    } else if(java.util.Calendar.class.isAssignableFrom(clazz)){\n      //(case: date)\n      try {\n        Date d = new Date(Long.parseLong(value));\n        GregorianCalendar cal = new GregorianCalendar();\n        cal.setTime(d);\n        return (E) cal;\n      } catch (NumberFormatException e) {\n        return null;\n      }\n    } else if(File.class.isAssignableFrom(clazz)){\n      return (E) new File(value);\n    } else if(Class.class.isAssignableFrom(clazz)){\n      try {\n        return (E) Class.forName(value);\n      } catch (ClassNotFoundException e) {\n        return null;\n      }\n    } else if(clazz.isArray()){\n      if(value == null){ return null; }\n      Class <?> subType = clazz.getComponentType();\n      // (case: array)\n      String[] strings = decodeArray(value);\n      Object[] array = (Object[]) Array.newInstance(clazz.getComponentType(), strings.length);\n      for(int i=0; i<strings.length; i++){\n        array[i] = cast(strings[i], subType);\n      }\n      return (E) array;\n    } else if (Map.class.isAssignableFrom(clazz)) {\n      return (E) decodeMap(value);\n    } else if(clazz.isEnum()){\n      // (case: enumeration)\n      Class c = (Class) clazz;\n      if(value == null){ return null; }\n      if (value.charAt(0) == '\"') value = value.substring(1);\n      if (value.charAt(value.length()-1) == '\"') value = value.substring(0, value.length() - 1);\n      try {\n        return (E) Enum.valueOf(c, value);\n      } catch (Exception e){\n        try {\n          return (E) Enum.valueOf(c, value.toLowerCase());\n        } catch (Exception e2){\n          try {\n            return (E) Enum.valueOf(c, value.toUpperCase());\n          } catch (Exception e3){\n            return (E) Enum.valueOf(c,\n                (Character.isUpperCase(value.charAt(0)) ? Character.toLowerCase(value.charAt(0)) : Character.toUpperCase(value.charAt(0))) +\n                    value.substring(1));\n          }\n        }\n      }\n    } else if (ObjectOutputStream.class.isAssignableFrom(clazz)) {\n      // (case: object output stream)\n      try {\n        return (E) new ObjectOutputStream((OutputStream) cast(value, OutputStream.class));\n      } catch (IOException e) {\n        throw new RuntimeException(e);\n      }\n    } else if (ObjectInputStream.class.isAssignableFrom(clazz)) {\n      // (case: object input stream)\n      try {\n        return (E) new ObjectInputStream((InputStream) cast(value, InputStream.class));\n      } catch (IOException e) {\n        throw new RuntimeException(e);\n      }\n    } else if (OutputStream.class.isAssignableFrom(clazz)) {\n      // (case: output stream)\n      if (value.equalsIgnoreCase(\"stdout\") || value.equalsIgnoreCase(\"out\")) { return (E) System.out; }\n      if (value.equalsIgnoreCase(\"stderr\") || value.equalsIgnoreCase(\"err\")) { return (E) System.err; }\n      File toWriteTo = cast(value, File.class);\n      try {\n        if (!toWriteTo.exists() && !toWriteTo.createNewFile()) {\n          throw new IllegalStateException(\"Could not create output stream (cannot write file): \" + value);\n        }\n        return (E) new FileOutputStream((File) cast(value, File.class));\n      } catch (IOException e) {\n        throw new RuntimeException(e);\n      }\n    } else if (InputStream.class.isAssignableFrom(clazz)) {\n      // (case: input stream)\n      if (value.equalsIgnoreCase(\"stdin\") || value.equalsIgnoreCase(\"in\")) { return (E) System.in; }\n      File toReadFrom = cast(value, File.class);\n      try {\n        if (!toReadFrom.exists() || !toReadFrom.canRead()) {\n          throw new IllegalStateException(\"Could not create input stream (cannot read file): \" + value);\n        }\n        return (E) new FileInputStream((File) cast(value, File.class));\n      } catch (IOException e) {\n        throw new RuntimeException(e);\n      }\n    } else {\n      try {\n        // (case: can parse from string)\n        Method decode = clazz.getMethod(\"fromString\", String.class);\n        return (E) decode.invoke(MetaClass.create(clazz), value);\n      } catch (NoSuchMethodException e) {  // Silent errors for misc failures\n      } catch (InvocationTargetException e) {\n      } catch (IllegalAccessException e) {\n      } catch (ClassCastException e) {\n      }\n\n      // Pass 2: Guess what the object could be\n      if (Tree.class.isAssignableFrom(clazz)) {\n        // (case: reading a tree)\n        try {\n          return (E) new PennTreeReader(new StringReader(value), new LabeledScoredTreeFactory(CoreLabel.factory())).readTree();\n        } catch (IOException e) {\n          throw new RuntimeException(e);\n        }\n      } else if (Collection.class.isAssignableFrom(clazz)) {\n        // (case: reading a collection)\n        Collection rtn;\n        if (Modifier.isAbstract(clazz.getModifiers())) {\n          rtn = abstractToConcreteCollectionMap.get(clazz).createInstance();\n        } else {\n          rtn = MetaClass.create(clazz).createInstance();\n        }\n        Class <?> subType = clazz.getComponentType();\n        String[] strings = decodeArray(value);\n        for (String string : strings) {\n          if (subType == null) {\n            rtn.add(castWithoutKnowingType(string));\n          } else {\n            rtn.add(cast(string, subType));\n          }\n        }\n        return (E) rtn;\n      } else {\n        // We could not cast this object\n        return null;\n      }\n    }\n  }","commit_id":"49064bbc67bddbf1e2666994c550e0a318643425","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"@Test\n  public void testCastArray() {\n    Integer[] ints1 = MetaClass.cast(\"[1,2,3]\", Integer[].class);\n    assertArrayEquals(new Integer[]{1,2,3}, ints1);\n    Integer[] ints2 = MetaClass.cast(\"(1,2,3)\", Integer[].class);\n    assertArrayEquals(new Integer[]{1,2,3}, ints2);\n    Integer[] ints3 = MetaClass.cast(\"1, 2, 3\", Integer[].class);\n    assertArrayEquals(new Integer[]{1,2,3}, ints3);\n    Integer[] ints4 = MetaClass.cast(\"1 2 3\", Integer[].class);\n    assertArrayEquals(new Integer[]{1,2,3}, ints4);\n    Integer[] ints5 = MetaClass.cast(\"1   2   3\", Integer[].class);\n    assertArrayEquals(new Integer[]{1,2,3}, ints5);\n\n    Integer[] intsEmpty = MetaClass.cast(\"\", Integer[].class);\n    assertArrayEquals(new Integer[]{}, intsEmpty);\n  }","id":16027,"modified_method":"@Test\n  public void testCastArray() {\n    Integer[] ints1 = MetaClass.cast(\"[1,2,3]\", Integer[].class);\n    assertArrayEquals(new Integer[]{1,2,3}, ints1);\n    Integer[] ints2 = MetaClass.cast(\"(1,2,3)\", Integer[].class);\n    assertArrayEquals(new Integer[]{1,2,3}, ints2);\n    Integer[] ints3 = MetaClass.cast(\"1, 2, 3\", Integer[].class);\n    assertArrayEquals(new Integer[]{1,2,3}, ints3);\n    Integer[] ints4 = MetaClass.cast(\"1 2 3\", Integer[].class);\n    assertArrayEquals(new Integer[]{1,2,3}, ints4);\n    Integer[] ints5 = MetaClass.cast(\"1   2   3\", Integer[].class);\n    assertArrayEquals(new Integer[]{1,2,3}, ints5);\n    Integer[] ints6 = MetaClass.cast(\"\\n1 \\n\\n  2   3\", Integer[].class);\n    assertArrayEquals(new Integer[]{1,2,3}, ints6);\n\n    Integer[] intsEmpty = MetaClass.cast(\"\", Integer[].class);\n    assertArrayEquals(new Integer[]{}, intsEmpty);\n  }","commit_id":"49064bbc67bddbf1e2666994c550e0a318643425","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"/**\n   * Decode an array encoded as a String. This entails a comma separated value enclosed in brackets\n   * or parentheses\n   * @param encoded The String encoded array\n   * @return A String array corresponding to the encoded array\n   */\n\tprivate static String[] decodeArray(String encoded){\n    if (encoded.length() == 0) return new String[]{};\n\t\tchar[] chars = encoded.trim().toCharArray();\n\n\t\t//--Parse the String\n\t\t//(state)\n\t\tchar quoteCloseChar = (char) 0;\n\t\tList<StringBuilder> terms = new LinkedList<StringBuilder>();\n\t\tStringBuilder current = new StringBuilder();\n\t\t//(start/stop overhead)\n\t\tint start = 0; int end = chars.length;\n\t\tif(chars[0] == '('){ start += 1; end -= 1; if(chars[end] != ')') throw new IllegalArgumentException(\"Unclosed paren in encoded array: \" + encoded); }\n\t\tif(chars[0] == '['){ start += 1; end -= 1; if(chars[end] != ']') throw new IllegalArgumentException(\"Unclosed bracket in encoded array: \" + encoded); }\n    if(chars[0] == '{'){ start += 1; end -= 1; if(chars[end] != '}') throw new IllegalArgumentException(\"Unclosed bracket in encoded array: \" + encoded); }\n\t\t//(finite state automata)\n\t\tfor(int i=start; i<end; i++){\n\t\t\tif(chars[i] == '\\\\'){\n\t\t\t\t//(case: escaped character)\n\t\t\t\tif(i == chars.length - 1) throw new IllegalArgumentException(\"Last character of encoded pair is escape character: \" + encoded);\n\t\t\t\tcurrent.append(chars[i+1]);\n\t\t\t\ti += 1;\n\t\t\t} else if(quoteCloseChar != 0){\n\t\t\t\t//(case: in quotes)\n\t\t\t\tif(chars[i] == quoteCloseChar){\n\t\t\t\t\tquoteCloseChar = (char) 0;\n\t\t\t\t}else{\n\t\t\t\t\tcurrent.append(chars[i]);\n\t\t\t\t}\n\t\t\t}else{\n\t\t\t\t//(case: normal)\n\t\t\t\tif(chars[i] == '\"'){\n          quoteCloseChar = '\"';\n\t\t\t\t} else if(chars[i] == '\\''){\n          quoteCloseChar = '\\'';\n\t\t\t\t} else if(chars[i] == ',' || chars[i] == ' ' || chars[i] == '\\t' || chars[i] == '\\n'){\n\t\t\t\t\t//break\n          if (current.length() > 0) {\n\t\t\t\t\t  terms.add(current);\n          }\n\t\t\t\t\tcurrent = new StringBuilder();\n\t\t\t\t}else{\n\t\t\t\t\tcurrent.append(chars[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t//--Return\n\t\tif(current.length() > 0) terms.add(current);\n\t\tString[] rtn = new String[terms.size()];\n\t\tint i=0;\n\t\tfor(StringBuilder b : terms){\n\t\t\trtn[i] = b.toString().trim();\n\t\t\ti += 1;\n\t\t}\n    return rtn;\n  }","id":16028,"modified_method":"/**\n   * Decode an array encoded as a String. This entails a comma separated value enclosed in brackets\n   * or parentheses\n   * @param encoded The String encoded array\n   * @return A String array corresponding to the encoded array\n   */\n\tprivate static String[] decodeArray(String encoded){\n    if (encoded.length() == 0) return new String[]{};\n\t\tchar[] chars = encoded.trim().toCharArray();\n\n\t\t//--Parse the String\n\t\t//(state)\n\t\tchar quoteCloseChar = (char) 0;\n\t\tList<StringBuilder> terms = new LinkedList<StringBuilder>();\n\t\tStringBuilder current = new StringBuilder();\n\t\t//(start/stop overhead)\n\t\tint start = 0; int end = chars.length;\n\t\tif(chars[0] == '('){ start += 1; end -= 1; if(chars[end] != ')') throw new IllegalArgumentException(\"Unclosed paren in encoded array: \" + encoded); }\n\t\tif(chars[0] == '['){ start += 1; end -= 1; if(chars[end] != ']') throw new IllegalArgumentException(\"Unclosed bracket in encoded array: \" + encoded); }\n    if(chars[0] == '{'){ start += 1; end -= 1; if(chars[end] != '}') throw new IllegalArgumentException(\"Unclosed bracket in encoded array: \" + encoded); }\n\t\t//(finite state automata)\n\t\tfor(int i=start; i<end; i++){\n\t\t\tif(chars[i] == '\\\\'){\n\t\t\t\t//(case: escaped character)\n\t\t\t\tif(i == chars.length - 1) throw new IllegalArgumentException(\"Last character of encoded pair is escape character: \" + encoded);\n\t\t\t\tcurrent.append(chars[i+1]);\n\t\t\t\ti += 1;\n\t\t\t} else if(quoteCloseChar != 0){\n\t\t\t\t//(case: in quotes)\n\t\t\t\tif(chars[i] == quoteCloseChar){\n\t\t\t\t\tquoteCloseChar = (char) 0;\n\t\t\t\t}else{\n\t\t\t\t\tcurrent.append(chars[i]);\n\t\t\t\t}\n\t\t\t}else{\n\t\t\t\t//(case: normal)\n\t\t\t\tif(chars[i] == '\"'){\n          quoteCloseChar = '\"';\n\t\t\t\t} else if(chars[i] == '\\''){\n          quoteCloseChar = '\\'';\n\t\t\t\t} else if(chars[i] == ',' || chars[i] == ';' || chars[i] == ' ' || chars[i] == '\\t' || chars[i] == '\\n'){\n\t\t\t\t\t//break\n          if (current.length() > 0) {\n\t\t\t\t\t  terms.add(current);\n          }\n\t\t\t\t\tcurrent = new StringBuilder();\n\t\t\t\t}else{\n\t\t\t\t\tcurrent.append(chars[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t//--Return\n\t\tif(current.length() > 0) terms.add(current);\n\t\tString[] rtn = new String[terms.size()];\n\t\tint i=0;\n\t\tfor(StringBuilder b : terms){\n\t\t\trtn[i] = b.toString().trim();\n\t\t\ti += 1;\n\t\t}\n    return rtn;\n  }","commit_id":"6c8b68fa7a00fe8a9fa8cab524fbf96d7c66fbd3","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"/**\n   * Cast a String representation of an object into that object.\n   * E.g. \"5.4\" will be cast to a Double; \"[1,2,3]\" will be cast\n   * to an Integer[].\n   *\n   * NOTE: Date parses from a Long\n   *\n   * @param <E> The type of the object returned (same as type)\n   * @param value The string representation of the object\n   * @param type The type (usually class) to be returned (same as E)\n   * @return An object corresponding to the String value passed\n   */\n  @SuppressWarnings({ \"unchecked\", \"rawtypes\" })\n  public static final <E> E cast(String value, Type type){\n    //--Get Type\n    Class <?> clazz = null;\n    Type[] params = null;\n    if(type instanceof Class){\n      clazz = (Class <?>) type;\n    }else if(type instanceof ParameterizedType){\n      ParameterizedType pt = (ParameterizedType) type;\n      params = pt.getActualTypeArguments();\n      clazz = (Class <?>) pt.getRawType();\n    }else{\n      clazz = type2class(type);\n      throw new IllegalArgumentException(\"Cannot cast to type (unhandled type): \" + type);\n    }\n    //--Cast\n    if(String.class.isAssignableFrom(clazz)){\n      // (case: String)\n      return (E) value;\n    }else if(Boolean.class.isAssignableFrom(clazz) || boolean.class.isAssignableFrom(clazz)){\n      //(case: boolean)\n      if(\"1\".equals(value)){ return (E) new Boolean(true); }\n      return (E) new Boolean( Boolean.parseBoolean(value) );\n    }else if(Integer.class.isAssignableFrom(clazz) || int.class.isAssignableFrom(clazz)){\n      //(case: integer)\n      try {\n        return (E) new Integer(Integer.parseInt(value));\n      } catch (NumberFormatException e) {\n        return (E) new Integer((int) Double.parseDouble(value));\n      }\n    }else if(Long.class.isAssignableFrom(clazz) || long.class.isAssignableFrom(clazz)){\n      //(case: long)\n      try {\n        return (E) new Long(Long.parseLong(value));\n      } catch (NumberFormatException e) {\n        return (E) new Long((long) Double.parseDouble(value));\n      }\n    }else if(Float.class.isAssignableFrom(clazz) || float.class.isAssignableFrom(clazz)){\n      //(case: float)\n      if(value == null){ return (E) new Float(Float.NaN); }\n      return (E) new Float(Float.parseFloat(value));\n    }else if(Double.class.isAssignableFrom(clazz) || double.class.isAssignableFrom(clazz)){\n      //(case: double)\n      if(value == null){ return (E) new Double(Double.NaN); }\n      return (E) new Double(Double.parseDouble(value));\n    }else if(Short.class.isAssignableFrom(clazz) || short.class.isAssignableFrom(clazz)){\n      //(case: short)\n      try {\n        return (E) new Short(Short.parseShort(value));\n      } catch (NumberFormatException e) {\n        return (E) new Short((short) Double.parseDouble(value));\n      }\n    }else if(Byte.class.isAssignableFrom(clazz) || byte.class.isAssignableFrom(clazz)){\n      //(case: byte)\n      try {\n        return (E) new Byte(Byte.parseByte(value));\n      } catch (NumberFormatException e) {\n        return (E) new Byte((byte) Double.parseDouble(value));\n      }\n    }else if(Character.class.isAssignableFrom(clazz) || char.class.isAssignableFrom(clazz)){\n      //(case: char)\n      return (E) new Character((char) Integer.parseInt(value));\n    }else if(java.util.Date.class.isAssignableFrom(clazz)){\n      //(case: date)\n      try {\n        return (E) new Date(Long.parseLong(value));\n      } catch (NumberFormatException e) {\n        return null;\n      }\n    } else if(java.util.Calendar.class.isAssignableFrom(clazz)){\n      //(case: date)\n      try {\n        Date d = new Date(Long.parseLong(value));\n        GregorianCalendar cal = new GregorianCalendar();\n        cal.setTime(d);\n        return (E) cal;\n      } catch (NumberFormatException e) {\n        return null;\n      }\n    } else if(File.class.isAssignableFrom(clazz)){\n      return (E) new File(value);\n    } else if(Class.class.isAssignableFrom(clazz)){\n      try {\n        return (E) Class.forName(value);\n      } catch (ClassNotFoundException e) {\n        return null;\n      }\n    } else if(clazz.isArray()){\n      if(value == null){ return null; }\n      Class <?> subType = clazz.getComponentType();\n      // (case: array)\n      String[] strings = decodeArray(value);\n      Object[] array = (Object[]) Array.newInstance(clazz.getComponentType(), strings.length);\n      for(int i=0; i<strings.length; i++){\n        array[i] = cast(strings[i], subType);\n      }\n      return (E) array;\n    } else if(clazz.isEnum()){\n      // (case: enumeration)\n      Class c = (Class) clazz;\n      if(value == null){ return null; }\n      if (value.charAt(0) == '\"') value = value.substring(1);\n      if (value.charAt(value.length()-1) == '\"') value = value.substring(0, value.length() - 1);\n      try {\n        return (E) Enum.valueOf(c, value);\n      } catch (Exception e){\n        try {\n          return (E) Enum.valueOf(c, value.toLowerCase());\n        } catch (Exception e2){\n          try {\n            return (E) Enum.valueOf(c, value.toUpperCase());\n          } catch (Exception e3){\n            return (E) Enum.valueOf(c,\n                (Character.isUpperCase(value.charAt(0)) ? Character.toLowerCase(value.charAt(0)) : Character.toUpperCase(value.charAt(0))) +\n                    value.substring(1));\n          }\n        }\n      }\n    } else if (ObjectOutputStream.class.isAssignableFrom(clazz)) {\n      // (case: object output stream)\n      try {\n        return (E) new ObjectOutputStream((OutputStream) cast(value, OutputStream.class));\n      } catch (IOException e) {\n        throw new RuntimeException(e);\n      }\n    } else if (ObjectInputStream.class.isAssignableFrom(clazz)) {\n      // (case: object input stream)\n      try {\n        return (E) new ObjectInputStream((InputStream) cast(value, InputStream.class));\n      } catch (IOException e) {\n        throw new RuntimeException(e);\n      }\n    } else if (OutputStream.class.isAssignableFrom(clazz)) {\n      // (case: output stream)\n      if (value.equalsIgnoreCase(\"stdout\") || value.equalsIgnoreCase(\"out\")) { return (E) System.out; }\n      if (value.equalsIgnoreCase(\"stderr\") || value.equalsIgnoreCase(\"err\")) { return (E) System.err; }\n      File toWriteTo = cast(value, File.class);\n      try {\n        if (!toWriteTo.exists() && !toWriteTo.createNewFile()) {\n          throw new IllegalStateException(\"Could not create output stream (cannot write file): \" + value);\n        }\n        return (E) new FileOutputStream((File) cast(value, File.class));\n      } catch (IOException e) {\n        throw new RuntimeException(e);\n      }\n    } else if (InputStream.class.isAssignableFrom(clazz)) {\n      // (case: input stream)\n      if (value.equalsIgnoreCase(\"stdin\") || value.equalsIgnoreCase(\"in\")) { return (E) System.in; }\n      File toReadFrom = cast(value, File.class);\n      try {\n        if (!toReadFrom.exists() || !toReadFrom.canRead()) {\n          throw new IllegalStateException(\"Could not create input stream (cannot read file): \" + value);\n        }\n        return (E) new FileInputStream((File) cast(value, File.class));\n      } catch (IOException e) {\n        throw new RuntimeException(e);\n      }\n    } else {\n      try {\n        // (case: can parse from string)\n        Method decode = clazz.getMethod(\"fromString\", String.class);\n        return (E) decode.invoke(MetaClass.create(clazz), value);\n      } catch (NoSuchMethodException e) {  // Silent errors for misc failures\n      } catch (InvocationTargetException e) {\n      } catch (IllegalAccessException e) {\n      } catch (ClassCastException e) {\n      }\n\n      // Pass 2: Guess what the object could be\n      if (Tree.class.isAssignableFrom(clazz)) {\n        // (case: reading a tree)\n        try {\n          return (E) new PennTreeReader(new StringReader(value), new LabeledScoredTreeFactory(CoreLabel.factory())).readTree();\n        } catch (IOException e) {\n          throw new RuntimeException(e);\n        }\n      } else if (Collection.class.isAssignableFrom(clazz)) {\n        // (case: reading a collection)\n        Collection rtn;\n        if (Modifier.isAbstract(clazz.getModifiers())) {\n          rtn = abstractToConcreteCollectionMap.get(clazz).createInstance();\n        } else {\n          rtn = MetaClass.create(clazz).createInstance();\n        }\n        Class <?> subType = clazz.getComponentType();\n        String[] strings = decodeArray(value);\n        for (String string : strings) {\n          if (subType == null) {\n            rtn.add(castWithoutKnowingType(string));\n          } else {\n            rtn.add(cast(string, subType));\n          }\n        }\n        return (E) rtn;\n      } else {\n        // We could not cast this object\n        return null;\n      }\n    }\n  }","id":16029,"modified_method":"/**\n   * Cast a String representation of an object into that object.\n   * E.g. \"5.4\" will be cast to a Double; \"[1,2,3]\" will be cast\n   * to an Integer[].\n   *\n   * NOTE: Date parses from a Long\n   *\n   * @param <E> The type of the object returned (same as type)\n   * @param value The string representation of the object\n   * @param type The type (usually class) to be returned (same as E)\n   * @return An object corresponding to the String value passed\n   */\n  @SuppressWarnings({ \"unchecked\", \"rawtypes\" })\n  public static <E> E cast(String value, Type type){\n    //--Get Type\n    Class <?> clazz;\n    if(type instanceof Class){\n      clazz = (Class <?>) type;\n    }else if(type instanceof ParameterizedType){\n      ParameterizedType pt = (ParameterizedType) type;\n      clazz = (Class <?>) pt.getRawType();\n    }else{\n      throw new IllegalArgumentException(\"Cannot cast to type (unhandled type): \" + type);\n    }\n    //--Cast\n    if(String.class.isAssignableFrom(clazz)){\n      // (case: String)\n      return (E) value;\n    }else if(Boolean.class.isAssignableFrom(clazz) || boolean.class.isAssignableFrom(clazz)){\n      //(case: boolean)\n      if(\"1\".equals(value)){ return (E) Boolean.TRUE; }\n      return (E) Boolean.valueOf(Boolean.parseBoolean(value));\n    }else if(Integer.class.isAssignableFrom(clazz) || int.class.isAssignableFrom(clazz)){\n      //(case: integer)\n      try {\n        return (E) new Integer(Integer.parseInt(value));\n      } catch (NumberFormatException e) {\n        return (E) new Integer((int) Double.parseDouble(value));\n      }\n    }else if(Long.class.isAssignableFrom(clazz) || long.class.isAssignableFrom(clazz)){\n      //(case: long)\n      try {\n        return (E) new Long(Long.parseLong(value));\n      } catch (NumberFormatException e) {\n        return (E) new Long((long) Double.parseDouble(value));\n      }\n    }else if(Float.class.isAssignableFrom(clazz) || float.class.isAssignableFrom(clazz)){\n      //(case: float)\n      if(value == null){ return (E) new Float(Float.NaN); }\n      return (E) new Float(Float.parseFloat(value));\n    }else if(Double.class.isAssignableFrom(clazz) || double.class.isAssignableFrom(clazz)){\n      //(case: double)\n      if(value == null){ return (E) new Double(Double.NaN); }\n      return (E) new Double(Double.parseDouble(value));\n    }else if(Short.class.isAssignableFrom(clazz) || short.class.isAssignableFrom(clazz)){\n      //(case: short)\n      try {\n        return (E) new Short(Short.parseShort(value));\n      } catch (NumberFormatException e) {\n        return (E) new Short((short) Double.parseDouble(value));\n      }\n    }else if(Byte.class.isAssignableFrom(clazz) || byte.class.isAssignableFrom(clazz)){\n      //(case: byte)\n      try {\n        return (E) new Byte(Byte.parseByte(value));\n      } catch (NumberFormatException e) {\n        return (E) new Byte((byte) Double.parseDouble(value));\n      }\n    }else if(Character.class.isAssignableFrom(clazz) || char.class.isAssignableFrom(clazz)){\n      //(case: char)\n      return (E) new Character((char) Integer.parseInt(value));\n    }else if(java.util.Date.class.isAssignableFrom(clazz)){\n      //(case: date)\n      try {\n        return (E) new Date(Long.parseLong(value));\n      } catch (NumberFormatException e) {\n        return null;\n      }\n    } else if(java.util.Calendar.class.isAssignableFrom(clazz)){\n      //(case: date)\n      try {\n        Date d = new Date(Long.parseLong(value));\n        GregorianCalendar cal = new GregorianCalendar();\n        cal.setTime(d);\n        return (E) cal;\n      } catch (NumberFormatException e) {\n        return null;\n      }\n    } else if(File.class.isAssignableFrom(clazz)){\n      return (E) new File(value);\n    } else if(Class.class.isAssignableFrom(clazz)){\n      try {\n        return (E) Class.forName(value);\n      } catch (ClassNotFoundException e) {\n        return null;\n      }\n    } else if(clazz.isArray()){\n      if(value == null){ return null; }\n      Class <?> subType = clazz.getComponentType();\n      // (case: array)\n      String[] strings = decodeArray(value);\n      Object[] array = (Object[]) Array.newInstance(clazz.getComponentType(), strings.length);\n      for(int i=0; i<strings.length; i++){\n        array[i] = cast(strings[i], subType);\n      }\n      return (E) array;\n    } else if (Map.class.isAssignableFrom(clazz)) {\n      return (E) decodeMap(value);\n    } else if(clazz.isEnum()){\n      // (case: enumeration)\n      Class c = (Class) clazz;\n      if(value == null){ return null; }\n      if (value.charAt(0) == '\"') value = value.substring(1);\n      if (value.charAt(value.length()-1) == '\"') value = value.substring(0, value.length() - 1);\n      try {\n        return (E) Enum.valueOf(c, value);\n      } catch (Exception e){\n        try {\n          return (E) Enum.valueOf(c, value.toLowerCase());\n        } catch (Exception e2){\n          try {\n            return (E) Enum.valueOf(c, value.toUpperCase());\n          } catch (Exception e3){\n            return (E) Enum.valueOf(c,\n                (Character.isUpperCase(value.charAt(0)) ? Character.toLowerCase(value.charAt(0)) : Character.toUpperCase(value.charAt(0))) +\n                    value.substring(1));\n          }\n        }\n      }\n    } else if (ObjectOutputStream.class.isAssignableFrom(clazz)) {\n      // (case: object output stream)\n      try {\n        return (E) new ObjectOutputStream((OutputStream) cast(value, OutputStream.class));\n      } catch (IOException e) {\n        throw new RuntimeException(e);\n      }\n    } else if (ObjectInputStream.class.isAssignableFrom(clazz)) {\n      // (case: object input stream)\n      try {\n        return (E) new ObjectInputStream((InputStream) cast(value, InputStream.class));\n      } catch (IOException e) {\n        throw new RuntimeException(e);\n      }\n    } else if (OutputStream.class.isAssignableFrom(clazz)) {\n      // (case: output stream)\n      if (value.equalsIgnoreCase(\"stdout\") || value.equalsIgnoreCase(\"out\")) { return (E) System.out; }\n      if (value.equalsIgnoreCase(\"stderr\") || value.equalsIgnoreCase(\"err\")) { return (E) System.err; }\n      File toWriteTo = cast(value, File.class);\n      try {\n        if (!toWriteTo.exists() && !toWriteTo.createNewFile()) {\n          throw new IllegalStateException(\"Could not create output stream (cannot write file): \" + value);\n        }\n        return (E) new FileOutputStream((File) cast(value, File.class));\n      } catch (IOException e) {\n        throw new RuntimeException(e);\n      }\n    } else if (InputStream.class.isAssignableFrom(clazz)) {\n      // (case: input stream)\n      if (value.equalsIgnoreCase(\"stdin\") || value.equalsIgnoreCase(\"in\")) { return (E) System.in; }\n      File toReadFrom = cast(value, File.class);\n      try {\n        if (!toReadFrom.exists() || !toReadFrom.canRead()) {\n          throw new IllegalStateException(\"Could not create input stream (cannot read file): \" + value);\n        }\n        return (E) new FileInputStream((File) cast(value, File.class));\n      } catch (IOException e) {\n        throw new RuntimeException(e);\n      }\n    } else {\n      try {\n        // (case: can parse from string)\n        Method decode = clazz.getMethod(\"fromString\", String.class);\n        return (E) decode.invoke(MetaClass.create(clazz), value);\n      } catch (NoSuchMethodException e) {  // Silent errors for misc failures\n      } catch (InvocationTargetException e) {\n      } catch (IllegalAccessException e) {\n      } catch (ClassCastException e) {\n      }\n\n      // Pass 2: Guess what the object could be\n      if (Tree.class.isAssignableFrom(clazz)) {\n        // (case: reading a tree)\n        try {\n          return (E) new PennTreeReader(new StringReader(value), new LabeledScoredTreeFactory(CoreLabel.factory())).readTree();\n        } catch (IOException e) {\n          throw new RuntimeException(e);\n        }\n      } else if (Collection.class.isAssignableFrom(clazz)) {\n        // (case: reading a collection)\n        Collection rtn;\n        if (Modifier.isAbstract(clazz.getModifiers())) {\n          rtn = abstractToConcreteCollectionMap.get(clazz).createInstance();\n        } else {\n          rtn = MetaClass.create(clazz).createInstance();\n        }\n        Class <?> subType = clazz.getComponentType();\n        String[] strings = decodeArray(value);\n        for (String string : strings) {\n          if (subType == null) {\n            rtn.add(castWithoutKnowingType(string));\n          } else {\n            rtn.add(cast(string, subType));\n          }\n        }\n        return (E) rtn;\n      } else {\n        // We could not cast this object\n        return null;\n      }\n    }\n  }","commit_id":"6c8b68fa7a00fe8a9fa8cab524fbf96d7c66fbd3","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"@Test\n  public void testCastArray() {\n    Integer[] ints1 = MetaClass.cast(\"[1,2,3]\", Integer[].class);\n    assertArrayEquals(new Integer[]{1,2,3}, ints1);\n    Integer[] ints2 = MetaClass.cast(\"(1,2,3)\", Integer[].class);\n    assertArrayEquals(new Integer[]{1,2,3}, ints2);\n    Integer[] ints3 = MetaClass.cast(\"1, 2, 3\", Integer[].class);\n    assertArrayEquals(new Integer[]{1,2,3}, ints3);\n    Integer[] ints4 = MetaClass.cast(\"1 2 3\", Integer[].class);\n    assertArrayEquals(new Integer[]{1,2,3}, ints4);\n    Integer[] ints5 = MetaClass.cast(\"1   2   3\", Integer[].class);\n    assertArrayEquals(new Integer[]{1,2,3}, ints5);\n\n    Integer[] intsEmpty = MetaClass.cast(\"\", Integer[].class);\n    assertArrayEquals(new Integer[]{}, intsEmpty);\n  }","id":16030,"modified_method":"@Test\n  public void testCastArray() {\n    Integer[] ints1 = MetaClass.cast(\"[1,2,3]\", Integer[].class);\n    assertArrayEquals(new Integer[]{1,2,3}, ints1);\n    Integer[] ints2 = MetaClass.cast(\"(1,2,3)\", Integer[].class);\n    assertArrayEquals(new Integer[]{1,2,3}, ints2);\n    Integer[] ints3 = MetaClass.cast(\"1, 2, 3\", Integer[].class);\n    assertArrayEquals(new Integer[]{1,2,3}, ints3);\n    Integer[] ints4 = MetaClass.cast(\"1 2 3\", Integer[].class);\n    assertArrayEquals(new Integer[]{1,2,3}, ints4);\n    Integer[] ints5 = MetaClass.cast(\"1   2   3\", Integer[].class);\n    assertArrayEquals(new Integer[]{1,2,3}, ints5);\n    Integer[] ints6 = MetaClass.cast(\"\\n1 \\n\\n  2   3\", Integer[].class);\n    assertArrayEquals(new Integer[]{1,2,3}, ints6);\n\n    Integer[] intsEmpty = MetaClass.cast(\"\", Integer[].class);\n    assertArrayEquals(new Integer[]{}, intsEmpty);\n  }","commit_id":"6c8b68fa7a00fe8a9fa8cab524fbf96d7c66fbd3","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"/**\n   * Decode an array encoded as a String. This entails a comma separated value enclosed in brackets\n   * or parentheses\n   * @param encoded The String encoded array\n   * @return A String array corresponding to the encoded array\n   */\n\tprivate static String[] decodeArray(String encoded){\n    if (encoded.length() == 0) return new String[]{};\n\t\tchar[] chars = encoded.trim().toCharArray();\n\n\t\t//--Parse the String\n\t\t//(state)\n\t\tchar quoteCloseChar = (char) 0;\n\t\tList<StringBuilder> terms = new LinkedList<StringBuilder>();\n\t\tStringBuilder current = new StringBuilder();\n\t\t//(start/stop overhead)\n\t\tint start = 0; int end = chars.length;\n\t\tif(chars[0] == '('){ start += 1; end -= 1; if(chars[end] != ')') throw new IllegalArgumentException(\"Unclosed paren in encoded array: \" + encoded); }\n\t\tif(chars[0] == '['){ start += 1; end -= 1; if(chars[end] != ']') throw new IllegalArgumentException(\"Unclosed bracket in encoded array: \" + encoded); }\n    if(chars[0] == '{'){ start += 1; end -= 1; if(chars[end] != '}') throw new IllegalArgumentException(\"Unclosed bracket in encoded array: \" + encoded); }\n\t\t//(finite state automata)\n\t\tfor(int i=start; i<end; i++){\n\t\t\tif(chars[i] == '\\\\'){\n\t\t\t\t//(case: escaped character)\n\t\t\t\tif(i == chars.length - 1) throw new IllegalArgumentException(\"Last character of encoded pair is escape character: \" + encoded);\n\t\t\t\tcurrent.append(chars[i+1]);\n\t\t\t\ti += 1;\n\t\t\t} else if(quoteCloseChar != 0){\n\t\t\t\t//(case: in quotes)\n\t\t\t\tif(chars[i] == quoteCloseChar){\n\t\t\t\t\tquoteCloseChar = (char) 0;\n\t\t\t\t}else{\n\t\t\t\t\tcurrent.append(chars[i]);\n\t\t\t\t}\n\t\t\t}else{\n\t\t\t\t//(case: normal)\n\t\t\t\tif(chars[i] == '\"'){\n          quoteCloseChar = '\"';\n\t\t\t\t} else if(chars[i] == '\\''){\n          quoteCloseChar = '\\'';\n\t\t\t\t} else if(chars[i] == ',' || chars[i] == ' ' || chars[i] == '\\t' || chars[i] == '\\n'){\n\t\t\t\t\t//break\n          if (current.length() > 0) {\n\t\t\t\t\t  terms.add(current);\n          }\n\t\t\t\t\tcurrent = new StringBuilder();\n\t\t\t\t}else{\n\t\t\t\t\tcurrent.append(chars[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t//--Return\n\t\tif(current.length() > 0) terms.add(current);\n\t\tString[] rtn = new String[terms.size()];\n\t\tint i=0;\n\t\tfor(StringBuilder b : terms){\n\t\t\trtn[i] = b.toString().trim();\n\t\t\ti += 1;\n\t\t}\n    return rtn;\n  }","id":16031,"modified_method":"/**\n   * Decode an array encoded as a String. This entails a comma separated value enclosed in brackets\n   * or parentheses\n   * @param encoded The String encoded array\n   * @return A String array corresponding to the encoded array\n   */\n\tprivate static String[] decodeArray(String encoded){\n    if (encoded.length() == 0) return new String[]{};\n\t\tchar[] chars = encoded.trim().toCharArray();\n\n\t\t//--Parse the String\n\t\t//(state)\n\t\tchar quoteCloseChar = (char) 0;\n\t\tList<StringBuilder> terms = new LinkedList<StringBuilder>();\n\t\tStringBuilder current = new StringBuilder();\n\t\t//(start/stop overhead)\n\t\tint start = 0; int end = chars.length;\n\t\tif(chars[0] == '('){ start += 1; end -= 1; if(chars[end] != ')') throw new IllegalArgumentException(\"Unclosed paren in encoded array: \" + encoded); }\n\t\tif(chars[0] == '['){ start += 1; end -= 1; if(chars[end] != ']') throw new IllegalArgumentException(\"Unclosed bracket in encoded array: \" + encoded); }\n    if(chars[0] == '{'){ start += 1; end -= 1; if(chars[end] != '}') throw new IllegalArgumentException(\"Unclosed bracket in encoded array: \" + encoded); }\n\t\t//(finite state automata)\n\t\tfor(int i=start; i<end; i++){\n\t\t\tif(chars[i] == '\\\\'){\n\t\t\t\t//(case: escaped character)\n\t\t\t\tif(i == chars.length - 1) throw new IllegalArgumentException(\"Last character of encoded pair is escape character: \" + encoded);\n\t\t\t\tcurrent.append(chars[i+1]);\n\t\t\t\ti += 1;\n\t\t\t} else if(quoteCloseChar != 0){\n\t\t\t\t//(case: in quotes)\n\t\t\t\tif(chars[i] == quoteCloseChar){\n\t\t\t\t\tquoteCloseChar = (char) 0;\n\t\t\t\t}else{\n\t\t\t\t\tcurrent.append(chars[i]);\n\t\t\t\t}\n\t\t\t}else{\n\t\t\t\t//(case: normal)\n\t\t\t\tif(chars[i] == '\"'){\n          quoteCloseChar = '\"';\n\t\t\t\t} else if(chars[i] == '\\''){\n          quoteCloseChar = '\\'';\n\t\t\t\t} else if(chars[i] == ',' || chars[i] == ';' || chars[i] == ' ' || chars[i] == '\\t' || chars[i] == '\\n'){\n\t\t\t\t\t//break\n          if (current.length() > 0) {\n\t\t\t\t\t  terms.add(current);\n          }\n\t\t\t\t\tcurrent = new StringBuilder();\n\t\t\t\t}else{\n\t\t\t\t\tcurrent.append(chars[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t//--Return\n\t\tif(current.length() > 0) terms.add(current);\n\t\tString[] rtn = new String[terms.size()];\n\t\tint i=0;\n\t\tfor(StringBuilder b : terms){\n\t\t\trtn[i] = b.toString().trim();\n\t\t\ti += 1;\n\t\t}\n    return rtn;\n  }","commit_id":"a0b6e8c04371a5ea9799e3764a8dafd80e825076","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"/**\n   * Cast a String representation of an object into that object.\n   * E.g. \"5.4\" will be cast to a Double; \"[1,2,3]\" will be cast\n   * to an Integer[].\n   *\n   * NOTE: Date parses from a Long\n   *\n   * @param <E> The type of the object returned (same as type)\n   * @param value The string representation of the object\n   * @param type The type (usually class) to be returned (same as E)\n   * @return An object corresponding to the String value passed\n   */\n  @SuppressWarnings({ \"unchecked\", \"rawtypes\" })\n  public static final <E> E cast(String value, Type type){\n    //--Get Type\n    Class <?> clazz = null;\n    Type[] params = null;\n    if(type instanceof Class){\n      clazz = (Class <?>) type;\n    }else if(type instanceof ParameterizedType){\n      ParameterizedType pt = (ParameterizedType) type;\n      params = pt.getActualTypeArguments();\n      clazz = (Class <?>) pt.getRawType();\n    }else{\n      clazz = type2class(type);\n      throw new IllegalArgumentException(\"Cannot cast to type (unhandled type): \" + type);\n    }\n    //--Cast\n    if(String.class.isAssignableFrom(clazz)){\n      // (case: String)\n      return (E) value;\n    }else if(Boolean.class.isAssignableFrom(clazz) || boolean.class.isAssignableFrom(clazz)){\n      //(case: boolean)\n      if(\"1\".equals(value)){ return (E) new Boolean(true); }\n      return (E) new Boolean( Boolean.parseBoolean(value) );\n    }else if(Integer.class.isAssignableFrom(clazz) || int.class.isAssignableFrom(clazz)){\n      //(case: integer)\n      try {\n        return (E) new Integer(Integer.parseInt(value));\n      } catch (NumberFormatException e) {\n        return (E) new Integer((int) Double.parseDouble(value));\n      }\n    }else if(Long.class.isAssignableFrom(clazz) || long.class.isAssignableFrom(clazz)){\n      //(case: long)\n      try {\n        return (E) new Long(Long.parseLong(value));\n      } catch (NumberFormatException e) {\n        return (E) new Long((long) Double.parseDouble(value));\n      }\n    }else if(Float.class.isAssignableFrom(clazz) || float.class.isAssignableFrom(clazz)){\n      //(case: float)\n      if(value == null){ return (E) new Float(Float.NaN); }\n      return (E) new Float(Float.parseFloat(value));\n    }else if(Double.class.isAssignableFrom(clazz) || double.class.isAssignableFrom(clazz)){\n      //(case: double)\n      if(value == null){ return (E) new Double(Double.NaN); }\n      return (E) new Double(Double.parseDouble(value));\n    }else if(Short.class.isAssignableFrom(clazz) || short.class.isAssignableFrom(clazz)){\n      //(case: short)\n      try {\n        return (E) new Short(Short.parseShort(value));\n      } catch (NumberFormatException e) {\n        return (E) new Short((short) Double.parseDouble(value));\n      }\n    }else if(Byte.class.isAssignableFrom(clazz) || byte.class.isAssignableFrom(clazz)){\n      //(case: byte)\n      try {\n        return (E) new Byte(Byte.parseByte(value));\n      } catch (NumberFormatException e) {\n        return (E) new Byte((byte) Double.parseDouble(value));\n      }\n    }else if(Character.class.isAssignableFrom(clazz) || char.class.isAssignableFrom(clazz)){\n      //(case: char)\n      return (E) new Character((char) Integer.parseInt(value));\n    }else if(java.util.Date.class.isAssignableFrom(clazz)){\n      //(case: date)\n      try {\n        return (E) new Date(Long.parseLong(value));\n      } catch (NumberFormatException e) {\n        return null;\n      }\n    } else if(java.util.Calendar.class.isAssignableFrom(clazz)){\n      //(case: date)\n      try {\n        Date d = new Date(Long.parseLong(value));\n        GregorianCalendar cal = new GregorianCalendar();\n        cal.setTime(d);\n        return (E) cal;\n      } catch (NumberFormatException e) {\n        return null;\n      }\n    } else if(File.class.isAssignableFrom(clazz)){\n      return (E) new File(value);\n    } else if(Class.class.isAssignableFrom(clazz)){\n      try {\n        return (E) Class.forName(value);\n      } catch (ClassNotFoundException e) {\n        return null;\n      }\n    } else if(clazz.isArray()){\n      if(value == null){ return null; }\n      Class <?> subType = clazz.getComponentType();\n      // (case: array)\n      String[] strings = decodeArray(value);\n      Object[] array = (Object[]) Array.newInstance(clazz.getComponentType(), strings.length);\n      for(int i=0; i<strings.length; i++){\n        array[i] = cast(strings[i], subType);\n      }\n      return (E) array;\n    } else if(clazz.isEnum()){\n      // (case: enumeration)\n      Class c = (Class) clazz;\n      if(value == null){ return null; }\n      if (value.charAt(0) == '\"') value = value.substring(1);\n      if (value.charAt(value.length()-1) == '\"') value = value.substring(0, value.length() - 1);\n      try {\n        return (E) Enum.valueOf(c, value);\n      } catch (Exception e){\n        try {\n          return (E) Enum.valueOf(c, value.toLowerCase());\n        } catch (Exception e2){\n          try {\n            return (E) Enum.valueOf(c, value.toUpperCase());\n          } catch (Exception e3){\n            return (E) Enum.valueOf(c,\n                (Character.isUpperCase(value.charAt(0)) ? Character.toLowerCase(value.charAt(0)) : Character.toUpperCase(value.charAt(0))) +\n                    value.substring(1));\n          }\n        }\n      }\n    } else if (ObjectOutputStream.class.isAssignableFrom(clazz)) {\n      // (case: object output stream)\n      try {\n        return (E) new ObjectOutputStream((OutputStream) cast(value, OutputStream.class));\n      } catch (IOException e) {\n        throw new RuntimeException(e);\n      }\n    } else if (ObjectInputStream.class.isAssignableFrom(clazz)) {\n      // (case: object input stream)\n      try {\n        return (E) new ObjectInputStream((InputStream) cast(value, InputStream.class));\n      } catch (IOException e) {\n        throw new RuntimeException(e);\n      }\n    } else if (OutputStream.class.isAssignableFrom(clazz)) {\n      // (case: output stream)\n      if (value.equalsIgnoreCase(\"stdout\") || value.equalsIgnoreCase(\"out\")) { return (E) System.out; }\n      if (value.equalsIgnoreCase(\"stderr\") || value.equalsIgnoreCase(\"err\")) { return (E) System.err; }\n      File toWriteTo = cast(value, File.class);\n      try {\n        if (!toWriteTo.exists() && !toWriteTo.createNewFile()) {\n          throw new IllegalStateException(\"Could not create output stream (cannot write file): \" + value);\n        }\n        return (E) new FileOutputStream((File) cast(value, File.class));\n      } catch (IOException e) {\n        throw new RuntimeException(e);\n      }\n    } else if (InputStream.class.isAssignableFrom(clazz)) {\n      // (case: input stream)\n      if (value.equalsIgnoreCase(\"stdin\") || value.equalsIgnoreCase(\"in\")) { return (E) System.in; }\n      File toReadFrom = cast(value, File.class);\n      try {\n        if (!toReadFrom.exists() || !toReadFrom.canRead()) {\n          throw new IllegalStateException(\"Could not create input stream (cannot read file): \" + value);\n        }\n        return (E) new FileInputStream((File) cast(value, File.class));\n      } catch (IOException e) {\n        throw new RuntimeException(e);\n      }\n    } else {\n      try {\n        // (case: can parse from string)\n        Method decode = clazz.getMethod(\"fromString\", String.class);\n        return (E) decode.invoke(MetaClass.create(clazz), value);\n      } catch (NoSuchMethodException e) {  // Silent errors for misc failures\n      } catch (InvocationTargetException e) {\n      } catch (IllegalAccessException e) {\n      } catch (ClassCastException e) {\n      }\n\n      // Pass 2: Guess what the object could be\n      if (Tree.class.isAssignableFrom(clazz)) {\n        // (case: reading a tree)\n        try {\n          return (E) new PennTreeReader(new StringReader(value), new LabeledScoredTreeFactory(CoreLabel.factory())).readTree();\n        } catch (IOException e) {\n          throw new RuntimeException(e);\n        }\n      } else if (Collection.class.isAssignableFrom(clazz)) {\n        // (case: reading a collection)\n        Collection rtn;\n        if (Modifier.isAbstract(clazz.getModifiers())) {\n          rtn = abstractToConcreteCollectionMap.get(clazz).createInstance();\n        } else {\n          rtn = MetaClass.create(clazz).createInstance();\n        }\n        Class <?> subType = clazz.getComponentType();\n        String[] strings = decodeArray(value);\n        for (String string : strings) {\n          if (subType == null) {\n            rtn.add(castWithoutKnowingType(string));\n          } else {\n            rtn.add(cast(string, subType));\n          }\n        }\n        return (E) rtn;\n      } else {\n        // We could not cast this object\n        return null;\n      }\n    }\n  }","id":16032,"modified_method":"/**\n   * Cast a String representation of an object into that object.\n   * E.g. \"5.4\" will be cast to a Double; \"[1,2,3]\" will be cast\n   * to an Integer[].\n   *\n   * NOTE: Date parses from a Long\n   *\n   * @param <E> The type of the object returned (same as type)\n   * @param value The string representation of the object\n   * @param type The type (usually class) to be returned (same as E)\n   * @return An object corresponding to the String value passed\n   */\n  @SuppressWarnings({ \"unchecked\", \"rawtypes\" })\n  public static <E> E cast(String value, Type type){\n    //--Get Type\n    Class <?> clazz;\n    if(type instanceof Class){\n      clazz = (Class <?>) type;\n    }else if(type instanceof ParameterizedType){\n      ParameterizedType pt = (ParameterizedType) type;\n      clazz = (Class <?>) pt.getRawType();\n    }else{\n      throw new IllegalArgumentException(\"Cannot cast to type (unhandled type): \" + type);\n    }\n    //--Cast\n    if(String.class.isAssignableFrom(clazz)){\n      // (case: String)\n      return (E) value;\n    }else if(Boolean.class.isAssignableFrom(clazz) || boolean.class.isAssignableFrom(clazz)){\n      //(case: boolean)\n      if(\"1\".equals(value)){ return (E) Boolean.TRUE; }\n      return (E) Boolean.valueOf(Boolean.parseBoolean(value));\n    }else if(Integer.class.isAssignableFrom(clazz) || int.class.isAssignableFrom(clazz)){\n      //(case: integer)\n      try {\n        return (E) new Integer(Integer.parseInt(value));\n      } catch (NumberFormatException e) {\n        return (E) new Integer((int) Double.parseDouble(value));\n      }\n    }else if(Long.class.isAssignableFrom(clazz) || long.class.isAssignableFrom(clazz)){\n      //(case: long)\n      try {\n        return (E) new Long(Long.parseLong(value));\n      } catch (NumberFormatException e) {\n        return (E) new Long((long) Double.parseDouble(value));\n      }\n    }else if(Float.class.isAssignableFrom(clazz) || float.class.isAssignableFrom(clazz)){\n      //(case: float)\n      if(value == null){ return (E) new Float(Float.NaN); }\n      return (E) new Float(Float.parseFloat(value));\n    }else if(Double.class.isAssignableFrom(clazz) || double.class.isAssignableFrom(clazz)){\n      //(case: double)\n      if(value == null){ return (E) new Double(Double.NaN); }\n      return (E) new Double(Double.parseDouble(value));\n    }else if(Short.class.isAssignableFrom(clazz) || short.class.isAssignableFrom(clazz)){\n      //(case: short)\n      try {\n        return (E) new Short(Short.parseShort(value));\n      } catch (NumberFormatException e) {\n        return (E) new Short((short) Double.parseDouble(value));\n      }\n    }else if(Byte.class.isAssignableFrom(clazz) || byte.class.isAssignableFrom(clazz)){\n      //(case: byte)\n      try {\n        return (E) new Byte(Byte.parseByte(value));\n      } catch (NumberFormatException e) {\n        return (E) new Byte((byte) Double.parseDouble(value));\n      }\n    }else if(Character.class.isAssignableFrom(clazz) || char.class.isAssignableFrom(clazz)){\n      //(case: char)\n      return (E) new Character((char) Integer.parseInt(value));\n    }else if(java.util.Date.class.isAssignableFrom(clazz)){\n      //(case: date)\n      try {\n        return (E) new Date(Long.parseLong(value));\n      } catch (NumberFormatException e) {\n        return null;\n      }\n    } else if(java.util.Calendar.class.isAssignableFrom(clazz)){\n      //(case: date)\n      try {\n        Date d = new Date(Long.parseLong(value));\n        GregorianCalendar cal = new GregorianCalendar();\n        cal.setTime(d);\n        return (E) cal;\n      } catch (NumberFormatException e) {\n        return null;\n      }\n    } else if(File.class.isAssignableFrom(clazz)){\n      return (E) new File(value);\n    } else if(Class.class.isAssignableFrom(clazz)){\n      try {\n        return (E) Class.forName(value);\n      } catch (ClassNotFoundException e) {\n        return null;\n      }\n    } else if(clazz.isArray()){\n      if(value == null){ return null; }\n      Class <?> subType = clazz.getComponentType();\n      // (case: array)\n      String[] strings = decodeArray(value);\n      Object[] array = (Object[]) Array.newInstance(clazz.getComponentType(), strings.length);\n      for(int i=0; i<strings.length; i++){\n        array[i] = cast(strings[i], subType);\n      }\n      return (E) array;\n    } else if (Map.class.isAssignableFrom(clazz)) {\n      return (E) decodeMap(value);\n    } else if(clazz.isEnum()){\n      // (case: enumeration)\n      Class c = (Class) clazz;\n      if(value == null){ return null; }\n      if (value.charAt(0) == '\"') value = value.substring(1);\n      if (value.charAt(value.length()-1) == '\"') value = value.substring(0, value.length() - 1);\n      try {\n        return (E) Enum.valueOf(c, value);\n      } catch (Exception e){\n        try {\n          return (E) Enum.valueOf(c, value.toLowerCase());\n        } catch (Exception e2){\n          try {\n            return (E) Enum.valueOf(c, value.toUpperCase());\n          } catch (Exception e3){\n            return (E) Enum.valueOf(c,\n                (Character.isUpperCase(value.charAt(0)) ? Character.toLowerCase(value.charAt(0)) : Character.toUpperCase(value.charAt(0))) +\n                    value.substring(1));\n          }\n        }\n      }\n    } else if (ObjectOutputStream.class.isAssignableFrom(clazz)) {\n      // (case: object output stream)\n      try {\n        return (E) new ObjectOutputStream((OutputStream) cast(value, OutputStream.class));\n      } catch (IOException e) {\n        throw new RuntimeException(e);\n      }\n    } else if (ObjectInputStream.class.isAssignableFrom(clazz)) {\n      // (case: object input stream)\n      try {\n        return (E) new ObjectInputStream((InputStream) cast(value, InputStream.class));\n      } catch (IOException e) {\n        throw new RuntimeException(e);\n      }\n    } else if (OutputStream.class.isAssignableFrom(clazz)) {\n      // (case: output stream)\n      if (value.equalsIgnoreCase(\"stdout\") || value.equalsIgnoreCase(\"out\")) { return (E) System.out; }\n      if (value.equalsIgnoreCase(\"stderr\") || value.equalsIgnoreCase(\"err\")) { return (E) System.err; }\n      File toWriteTo = cast(value, File.class);\n      try {\n        if (!toWriteTo.exists() && !toWriteTo.createNewFile()) {\n          throw new IllegalStateException(\"Could not create output stream (cannot write file): \" + value);\n        }\n        return (E) new FileOutputStream((File) cast(value, File.class));\n      } catch (IOException e) {\n        throw new RuntimeException(e);\n      }\n    } else if (InputStream.class.isAssignableFrom(clazz)) {\n      // (case: input stream)\n      if (value.equalsIgnoreCase(\"stdin\") || value.equalsIgnoreCase(\"in\")) { return (E) System.in; }\n      File toReadFrom = cast(value, File.class);\n      try {\n        if (!toReadFrom.exists() || !toReadFrom.canRead()) {\n          throw new IllegalStateException(\"Could not create input stream (cannot read file): \" + value);\n        }\n        return (E) new FileInputStream((File) cast(value, File.class));\n      } catch (IOException e) {\n        throw new RuntimeException(e);\n      }\n    } else {\n      try {\n        // (case: can parse from string)\n        Method decode = clazz.getMethod(\"fromString\", String.class);\n        return (E) decode.invoke(MetaClass.create(clazz), value);\n      } catch (NoSuchMethodException e) {  // Silent errors for misc failures\n      } catch (InvocationTargetException e) {\n      } catch (IllegalAccessException e) {\n      } catch (ClassCastException e) {\n      }\n\n      // Pass 2: Guess what the object could be\n      if (Tree.class.isAssignableFrom(clazz)) {\n        // (case: reading a tree)\n        try {\n          return (E) new PennTreeReader(new StringReader(value), new LabeledScoredTreeFactory(CoreLabel.factory())).readTree();\n        } catch (IOException e) {\n          throw new RuntimeException(e);\n        }\n      } else if (Collection.class.isAssignableFrom(clazz)) {\n        // (case: reading a collection)\n        Collection rtn;\n        if (Modifier.isAbstract(clazz.getModifiers())) {\n          rtn = abstractToConcreteCollectionMap.get(clazz).createInstance();\n        } else {\n          rtn = MetaClass.create(clazz).createInstance();\n        }\n        Class <?> subType = clazz.getComponentType();\n        String[] strings = decodeArray(value);\n        for (String string : strings) {\n          if (subType == null) {\n            rtn.add(castWithoutKnowingType(string));\n          } else {\n            rtn.add(cast(string, subType));\n          }\n        }\n        return (E) rtn;\n      } else {\n        // We could not cast this object\n        return null;\n      }\n    }\n  }","commit_id":"a0b6e8c04371a5ea9799e3764a8dafd80e825076","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"@Test\n  public void testCastArray() {\n    Integer[] ints1 = MetaClass.cast(\"[1,2,3]\", Integer[].class);\n    assertArrayEquals(new Integer[]{1,2,3}, ints1);\n    Integer[] ints2 = MetaClass.cast(\"(1,2,3)\", Integer[].class);\n    assertArrayEquals(new Integer[]{1,2,3}, ints2);\n    Integer[] ints3 = MetaClass.cast(\"1, 2, 3\", Integer[].class);\n    assertArrayEquals(new Integer[]{1,2,3}, ints3);\n    Integer[] ints4 = MetaClass.cast(\"1 2 3\", Integer[].class);\n    assertArrayEquals(new Integer[]{1,2,3}, ints4);\n    Integer[] ints5 = MetaClass.cast(\"1   2   3\", Integer[].class);\n    assertArrayEquals(new Integer[]{1,2,3}, ints5);\n\n    Integer[] intsEmpty = MetaClass.cast(\"\", Integer[].class);\n    assertArrayEquals(new Integer[]{}, intsEmpty);\n  }","id":16033,"modified_method":"@Test\n  public void testCastArray() {\n    Integer[] ints1 = MetaClass.cast(\"[1,2,3]\", Integer[].class);\n    assertArrayEquals(new Integer[]{1,2,3}, ints1);\n    Integer[] ints2 = MetaClass.cast(\"(1,2,3)\", Integer[].class);\n    assertArrayEquals(new Integer[]{1,2,3}, ints2);\n    Integer[] ints3 = MetaClass.cast(\"1, 2, 3\", Integer[].class);\n    assertArrayEquals(new Integer[]{1,2,3}, ints3);\n    Integer[] ints4 = MetaClass.cast(\"1 2 3\", Integer[].class);\n    assertArrayEquals(new Integer[]{1,2,3}, ints4);\n    Integer[] ints5 = MetaClass.cast(\"1   2   3\", Integer[].class);\n    assertArrayEquals(new Integer[]{1,2,3}, ints5);\n    Integer[] ints6 = MetaClass.cast(\"\\n1 \\n\\n  2   3\", Integer[].class);\n    assertArrayEquals(new Integer[]{1,2,3}, ints6);\n\n    Integer[] intsEmpty = MetaClass.cast(\"\", Integer[].class);\n    assertArrayEquals(new Integer[]{}, intsEmpty);\n  }","commit_id":"a0b6e8c04371a5ea9799e3764a8dafd80e825076","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"/**\n   * Cast a String representation of an object into that object.\n   * E.g. \"5.4\" will be cast to a Double; \"[1,2,3]\" will be cast\n   * to an Integer[].\n   *\n   * NOTE: Date parses from a Long\n   *\n   * @param <E> The type of the object returned (same as type)\n   * @param value The string representation of the object\n   * @param type The type (usually class) to be returned (same as E)\n   * @return An object corresponding to the String value passed\n   */\n  @SuppressWarnings({ \"unchecked\", \"rawtypes\" })\n  public static final <E> E cast(String value, Type type){\n    //--Get Type\n    Class <?> clazz = null;\n    Type[] params = null;\n    if(type instanceof Class){\n      clazz = (Class <?>) type;\n    }else if(type instanceof ParameterizedType){\n      ParameterizedType pt = (ParameterizedType) type;\n      params = pt.getActualTypeArguments();\n      clazz = (Class <?>) pt.getRawType();\n    }else{\n      clazz = type2class(type);\n      throw new IllegalArgumentException(\"Cannot cast to type (unhandled type): \" + type);\n    }\n    //--Cast\n    if(String.class.isAssignableFrom(clazz)){\n      // (case: String)\n      return (E) value;\n    }else if(Boolean.class.isAssignableFrom(clazz) || boolean.class.isAssignableFrom(clazz)){\n      //(case: boolean)\n      if(\"1\".equals(value)){ return (E) new Boolean(true); }\n      return (E) new Boolean( Boolean.parseBoolean(value) );\n    }else if(Integer.class.isAssignableFrom(clazz) || int.class.isAssignableFrom(clazz)){\n      //(case: integer)\n      try {\n        return (E) new Integer(Integer.parseInt(value));\n      } catch (NumberFormatException e) {\n        return (E) new Integer((int) Double.parseDouble(value));\n      }\n    }else if(Long.class.isAssignableFrom(clazz) || long.class.isAssignableFrom(clazz)){\n      //(case: long)\n      try {\n        return (E) new Long(Long.parseLong(value));\n      } catch (NumberFormatException e) {\n        return (E) new Long((long) Double.parseDouble(value));\n      }\n    }else if(Float.class.isAssignableFrom(clazz) || float.class.isAssignableFrom(clazz)){\n      //(case: float)\n      if(value == null){ return (E) new Float(Float.NaN); }\n      return (E) new Float(Float.parseFloat(value));\n    }else if(Double.class.isAssignableFrom(clazz) || double.class.isAssignableFrom(clazz)){\n      //(case: double)\n      if(value == null){ return (E) new Double(Double.NaN); }\n      return (E) new Double(Double.parseDouble(value));\n    }else if(Short.class.isAssignableFrom(clazz) || short.class.isAssignableFrom(clazz)){\n      //(case: short)\n      try {\n        return (E) new Short(Short.parseShort(value));\n      } catch (NumberFormatException e) {\n        return (E) new Short((short) Double.parseDouble(value));\n      }\n    }else if(Byte.class.isAssignableFrom(clazz) || byte.class.isAssignableFrom(clazz)){\n      //(case: byte)\n      try {\n        return (E) new Byte(Byte.parseByte(value));\n      } catch (NumberFormatException e) {\n        return (E) new Byte((byte) Double.parseDouble(value));\n      }\n    }else if(Character.class.isAssignableFrom(clazz) || char.class.isAssignableFrom(clazz)){\n      //(case: char)\n      return (E) new Character((char) Integer.parseInt(value));\n    }else if(java.util.Date.class.isAssignableFrom(clazz)){\n      //(case: date)\n      try {\n        return (E) new Date(Long.parseLong(value));\n      } catch (NumberFormatException e) {\n        return null;\n      }\n    } else if(java.util.Calendar.class.isAssignableFrom(clazz)){\n      //(case: date)\n      try {\n        Date d = new Date(Long.parseLong(value));\n        GregorianCalendar cal = new GregorianCalendar();\n        cal.setTime(d);\n        return (E) cal;\n      } catch (NumberFormatException e) {\n        return null;\n      }\n    } else if(File.class.isAssignableFrom(clazz)){\n      return (E) new File(value);\n    } else if(Class.class.isAssignableFrom(clazz)){\n      try {\n        return (E) Class.forName(value);\n      } catch (ClassNotFoundException e) {\n        return null;\n      }\n    } else if(clazz.isArray()){\n      if(value == null){ return null; }\n      Class <?> subType = clazz.getComponentType();\n      // (case: array)\n      String[] strings = decodeArray(value);\n      Object[] array = (Object[]) Array.newInstance(clazz.getComponentType(), strings.length);\n      for(int i=0; i<strings.length; i++){\n        array[i] = cast(strings[i], subType);\n      }\n      return (E) array;\n    } else if(clazz.isEnum()){\n      // (case: enumeration)\n      Class c = (Class) clazz;\n      if(value == null){ return null; }\n      if (value.charAt(0) == '\"') value = value.substring(1);\n      if (value.charAt(value.length()-1) == '\"') value = value.substring(0, value.length() - 1);\n      try {\n        return (E) Enum.valueOf(c, value);\n      } catch (Exception e){\n        try {\n          return (E) Enum.valueOf(c, value.toLowerCase());\n        } catch (Exception e2){\n          try {\n            return (E) Enum.valueOf(c, value.toUpperCase());\n          } catch (Exception e3){\n            return (E) Enum.valueOf(c,\n                (Character.isUpperCase(value.charAt(0)) ? Character.toLowerCase(value.charAt(0)) : Character.toUpperCase(value.charAt(0))) +\n                    value.substring(1));\n          }\n        }\n      }\n    } else if (ObjectOutputStream.class.isAssignableFrom(clazz)) {\n      // (case: object output stream)\n      try {\n        return (E) new ObjectOutputStream((OutputStream) cast(value, OutputStream.class));\n      } catch (IOException e) {\n        throw new RuntimeException(e);\n      }\n    } else if (ObjectInputStream.class.isAssignableFrom(clazz)) {\n      // (case: object input stream)\n      try {\n        return (E) new ObjectInputStream((InputStream) cast(value, InputStream.class));\n      } catch (IOException e) {\n        throw new RuntimeException(e);\n      }\n    } else if (OutputStream.class.isAssignableFrom(clazz)) {\n      // (case: output stream)\n      if (value.equalsIgnoreCase(\"stdout\") || value.equalsIgnoreCase(\"out\")) { return (E) System.out; }\n      if (value.equalsIgnoreCase(\"stderr\") || value.equalsIgnoreCase(\"err\")) { return (E) System.err; }\n      File toWriteTo = cast(value, File.class);\n      try {\n        if (!toWriteTo.exists() && !toWriteTo.createNewFile()) {\n          throw new IllegalStateException(\"Could not create output stream (cannot write file): \" + value);\n        }\n        return (E) new FileOutputStream((File) cast(value, File.class));\n      } catch (IOException e) {\n        throw new RuntimeException(e);\n      }\n    } else if (InputStream.class.isAssignableFrom(clazz)) {\n      // (case: input stream)\n      if (value.equalsIgnoreCase(\"stdin\") || value.equalsIgnoreCase(\"in\")) { return (E) System.in; }\n      File toReadFrom = cast(value, File.class);\n      try {\n        if (!toReadFrom.exists() || !toReadFrom.canRead()) {\n          throw new IllegalStateException(\"Could not create input stream (cannot read file): \" + value);\n        }\n        return (E) new FileInputStream((File) cast(value, File.class));\n      } catch (IOException e) {\n        throw new RuntimeException(e);\n      }\n    } else {\n      try {\n        // (case: can parse from string)\n        Method decode = clazz.getMethod(\"fromString\", String.class);\n        return (E) decode.invoke(MetaClass.create(clazz), value);\n      } catch (NoSuchMethodException e) {  // Silent errors for misc failures\n      } catch (InvocationTargetException e) {\n      } catch (IllegalAccessException e) {\n      } catch (ClassCastException e) {\n      }\n\n      // Pass 2: Guess what the object could be\n      if (Tree.class.isAssignableFrom(clazz)) {\n        // (case: reading a tree)\n        try {\n          return (E) new PennTreeReader(new StringReader(value), new LabeledScoredTreeFactory(CoreLabel.factory())).readTree();\n        } catch (IOException e) {\n          throw new RuntimeException(e);\n        }\n      } else if (Collection.class.isAssignableFrom(clazz)) {\n        // (case: reading a collection)\n        Collection rtn;\n        if (Modifier.isAbstract(clazz.getModifiers())) {\n          rtn = abstractToConcreteCollectionMap.get(clazz).createInstance();\n        } else {\n          rtn = MetaClass.create(clazz).createInstance();\n        }\n        Class <?> subType = clazz.getComponentType();\n        String[] strings = decodeArray(value);\n        for (String string : strings) {\n          if (subType == null) {\n            rtn.add(castWithoutKnowingType(string));\n          } else {\n            rtn.add(cast(string, subType));\n          }\n        }\n        return (E) rtn;\n      } else {\n        // We could not cast this object\n        return null;\n      }\n    }\n  }","id":16034,"modified_method":"/**\n   * Cast a String representation of an object into that object.\n   * E.g. \"5.4\" will be cast to a Double; \"[1,2,3]\" will be cast\n   * to an Integer[].\n   *\n   * NOTE: Date parses from a Long\n   *\n   * @param <E> The type of the object returned (same as type)\n   * @param value The string representation of the object\n   * @param type The type (usually class) to be returned (same as E)\n   * @return An object corresponding to the String value passed\n   */\n  @SuppressWarnings({ \"unchecked\", \"rawtypes\" })\n  public static <E> E cast(String value, Type type){\n    //--Get Type\n    Class <?> clazz;\n    if(type instanceof Class){\n      clazz = (Class <?>) type;\n    }else if(type instanceof ParameterizedType){\n      ParameterizedType pt = (ParameterizedType) type;\n      clazz = (Class <?>) pt.getRawType();\n    }else{\n      throw new IllegalArgumentException(\"Cannot cast to type (unhandled type): \" + type);\n    }\n    //--Cast\n    if(String.class.isAssignableFrom(clazz)){\n      // (case: String)\n      return (E) value;\n    }else if(Boolean.class.isAssignableFrom(clazz) || boolean.class.isAssignableFrom(clazz)){\n      //(case: boolean)\n      if(\"1\".equals(value)){ return (E) Boolean.TRUE; }\n      return (E) Boolean.valueOf(Boolean.parseBoolean(value));\n    }else if(Integer.class.isAssignableFrom(clazz) || int.class.isAssignableFrom(clazz)){\n      //(case: integer)\n      try {\n        return (E) new Integer(Integer.parseInt(value));\n      } catch (NumberFormatException e) {\n        return (E) new Integer((int) Double.parseDouble(value));\n      }\n    }else if(Long.class.isAssignableFrom(clazz) || long.class.isAssignableFrom(clazz)){\n      //(case: long)\n      try {\n        return (E) new Long(Long.parseLong(value));\n      } catch (NumberFormatException e) {\n        return (E) new Long((long) Double.parseDouble(value));\n      }\n    }else if(Float.class.isAssignableFrom(clazz) || float.class.isAssignableFrom(clazz)){\n      //(case: float)\n      if(value == null){ return (E) new Float(Float.NaN); }\n      return (E) new Float(Float.parseFloat(value));\n    }else if(Double.class.isAssignableFrom(clazz) || double.class.isAssignableFrom(clazz)){\n      //(case: double)\n      if(value == null){ return (E) new Double(Double.NaN); }\n      return (E) new Double(Double.parseDouble(value));\n    }else if(Short.class.isAssignableFrom(clazz) || short.class.isAssignableFrom(clazz)){\n      //(case: short)\n      try {\n        return (E) new Short(Short.parseShort(value));\n      } catch (NumberFormatException e) {\n        return (E) new Short((short) Double.parseDouble(value));\n      }\n    }else if(Byte.class.isAssignableFrom(clazz) || byte.class.isAssignableFrom(clazz)){\n      //(case: byte)\n      try {\n        return (E) new Byte(Byte.parseByte(value));\n      } catch (NumberFormatException e) {\n        return (E) new Byte((byte) Double.parseDouble(value));\n      }\n    }else if(Character.class.isAssignableFrom(clazz) || char.class.isAssignableFrom(clazz)){\n      //(case: char)\n      return (E) new Character((char) Integer.parseInt(value));\n    }else if(java.util.Date.class.isAssignableFrom(clazz)){\n      //(case: date)\n      try {\n        return (E) new Date(Long.parseLong(value));\n      } catch (NumberFormatException e) {\n        return null;\n      }\n    } else if(java.util.Calendar.class.isAssignableFrom(clazz)){\n      //(case: date)\n      try {\n        Date d = new Date(Long.parseLong(value));\n        GregorianCalendar cal = new GregorianCalendar();\n        cal.setTime(d);\n        return (E) cal;\n      } catch (NumberFormatException e) {\n        return null;\n      }\n    } else if(File.class.isAssignableFrom(clazz)){\n      return (E) new File(value);\n    } else if(Class.class.isAssignableFrom(clazz)){\n      try {\n        return (E) Class.forName(value);\n      } catch (ClassNotFoundException e) {\n        return null;\n      }\n    } else if(clazz.isArray()){\n      if(value == null){ return null; }\n      Class <?> subType = clazz.getComponentType();\n      // (case: array)\n      String[] strings = decodeArray(value);\n      Object[] array = (Object[]) Array.newInstance(clazz.getComponentType(), strings.length);\n      for(int i=0; i<strings.length; i++){\n        array[i] = cast(strings[i], subType);\n      }\n      return (E) array;\n    } else if (Map.class.isAssignableFrom(clazz)) {\n      return (E) decodeMap(value);\n    } else if(clazz.isEnum()){\n      // (case: enumeration)\n      Class c = (Class) clazz;\n      if(value == null){ return null; }\n      if (value.charAt(0) == '\"') value = value.substring(1);\n      if (value.charAt(value.length()-1) == '\"') value = value.substring(0, value.length() - 1);\n      try {\n        return (E) Enum.valueOf(c, value);\n      } catch (Exception e){\n        try {\n          return (E) Enum.valueOf(c, value.toLowerCase());\n        } catch (Exception e2){\n          try {\n            return (E) Enum.valueOf(c, value.toUpperCase());\n          } catch (Exception e3){\n            return (E) Enum.valueOf(c,\n                (Character.isUpperCase(value.charAt(0)) ? Character.toLowerCase(value.charAt(0)) : Character.toUpperCase(value.charAt(0))) +\n                    value.substring(1));\n          }\n        }\n      }\n    } else if (ObjectOutputStream.class.isAssignableFrom(clazz)) {\n      // (case: object output stream)\n      try {\n        return (E) new ObjectOutputStream((OutputStream) cast(value, OutputStream.class));\n      } catch (IOException e) {\n        throw new RuntimeException(e);\n      }\n    } else if (ObjectInputStream.class.isAssignableFrom(clazz)) {\n      // (case: object input stream)\n      try {\n        return (E) new ObjectInputStream((InputStream) cast(value, InputStream.class));\n      } catch (IOException e) {\n        throw new RuntimeException(e);\n      }\n    } else if (OutputStream.class.isAssignableFrom(clazz)) {\n      // (case: output stream)\n      if (value.equalsIgnoreCase(\"stdout\") || value.equalsIgnoreCase(\"out\")) { return (E) System.out; }\n      if (value.equalsIgnoreCase(\"stderr\") || value.equalsIgnoreCase(\"err\")) { return (E) System.err; }\n      File toWriteTo = cast(value, File.class);\n      try {\n        if (!toWriteTo.exists() && !toWriteTo.createNewFile()) {\n          throw new IllegalStateException(\"Could not create output stream (cannot write file): \" + value);\n        }\n        return (E) new FileOutputStream((File) cast(value, File.class));\n      } catch (IOException e) {\n        throw new RuntimeException(e);\n      }\n    } else if (InputStream.class.isAssignableFrom(clazz)) {\n      // (case: input stream)\n      if (value.equalsIgnoreCase(\"stdin\") || value.equalsIgnoreCase(\"in\")) { return (E) System.in; }\n      File toReadFrom = cast(value, File.class);\n      try {\n        if (!toReadFrom.exists() || !toReadFrom.canRead()) {\n          throw new IllegalStateException(\"Could not create input stream (cannot read file): \" + value);\n        }\n        return (E) new FileInputStream((File) cast(value, File.class));\n      } catch (IOException e) {\n        throw new RuntimeException(e);\n      }\n    } else {\n      try {\n        // (case: can parse from string)\n        Method decode = clazz.getMethod(\"fromString\", String.class);\n        return (E) decode.invoke(MetaClass.create(clazz), value);\n      } catch (NoSuchMethodException e) {  // Silent errors for misc failures\n      } catch (InvocationTargetException e) {\n      } catch (IllegalAccessException e) {\n      } catch (ClassCastException e) {\n      }\n\n      // Pass 2: Guess what the object could be\n      if (Tree.class.isAssignableFrom(clazz)) {\n        // (case: reading a tree)\n        try {\n          return (E) new PennTreeReader(new StringReader(value), new LabeledScoredTreeFactory(CoreLabel.factory())).readTree();\n        } catch (IOException e) {\n          throw new RuntimeException(e);\n        }\n      } else if (Collection.class.isAssignableFrom(clazz)) {\n        // (case: reading a collection)\n        Collection rtn;\n        if (Modifier.isAbstract(clazz.getModifiers())) {\n          rtn = abstractToConcreteCollectionMap.get(clazz).createInstance();\n        } else {\n          rtn = MetaClass.create(clazz).createInstance();\n        }\n        Class <?> subType = clazz.getComponentType();\n        String[] strings = decodeArray(value);\n        for (String string : strings) {\n          if (subType == null) {\n            rtn.add(castWithoutKnowingType(string));\n          } else {\n            rtn.add(cast(string, subType));\n          }\n        }\n        return (E) rtn;\n      } else {\n        // We could not cast this object\n        return null;\n      }\n    }\n  }","commit_id":"92df52f17a98f8ee1e0f52926c4895f69c14ac0b","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"/**\n   * Decode an array encoded as a String. This entails a comma separated value enclosed in brackets\n   * or parentheses\n   * @param encoded The String encoded array\n   * @return A String array corresponding to the encoded array\n   */\n\tprivate static String[] decodeArray(String encoded){\n    if (encoded.length() == 0) return new String[]{};\n\t\tchar[] chars = encoded.trim().toCharArray();\n\n\t\t//--Parse the String\n\t\t//(state)\n\t\tchar quoteCloseChar = (char) 0;\n\t\tList<StringBuilder> terms = new LinkedList<StringBuilder>();\n\t\tStringBuilder current = new StringBuilder();\n\t\t//(start/stop overhead)\n\t\tint start = 0; int end = chars.length;\n\t\tif(chars[0] == '('){ start += 1; end -= 1; if(chars[end] != ')') throw new IllegalArgumentException(\"Unclosed paren in encoded array: \" + encoded); }\n\t\tif(chars[0] == '['){ start += 1; end -= 1; if(chars[end] != ']') throw new IllegalArgumentException(\"Unclosed bracket in encoded array: \" + encoded); }\n    if(chars[0] == '{'){ start += 1; end -= 1; if(chars[end] != '}') throw new IllegalArgumentException(\"Unclosed bracket in encoded array: \" + encoded); }\n\t\t//(finite state automata)\n\t\tfor(int i=start; i<end; i++){\n\t\t\tif(chars[i] == '\\\\'){\n\t\t\t\t//(case: escaped character)\n\t\t\t\tif(i == chars.length - 1) throw new IllegalArgumentException(\"Last character of encoded pair is escape character: \" + encoded);\n\t\t\t\tcurrent.append(chars[i+1]);\n\t\t\t\ti += 1;\n\t\t\t} else if(quoteCloseChar != 0){\n\t\t\t\t//(case: in quotes)\n\t\t\t\tif(chars[i] == quoteCloseChar){\n\t\t\t\t\tquoteCloseChar = (char) 0;\n\t\t\t\t}else{\n\t\t\t\t\tcurrent.append(chars[i]);\n\t\t\t\t}\n\t\t\t}else{\n\t\t\t\t//(case: normal)\n\t\t\t\tif(chars[i] == '\"'){\n          quoteCloseChar = '\"';\n\t\t\t\t} else if(chars[i] == '\\''){\n          quoteCloseChar = '\\'';\n\t\t\t\t} else if(chars[i] == ',' || chars[i] == ' ' || chars[i] == '\\t' || chars[i] == '\\n'){\n\t\t\t\t\t//break\n          if (current.length() > 0) {\n\t\t\t\t\t  terms.add(current);\n          }\n\t\t\t\t\tcurrent = new StringBuilder();\n\t\t\t\t}else{\n\t\t\t\t\tcurrent.append(chars[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t//--Return\n\t\tif(current.length() > 0) terms.add(current);\n\t\tString[] rtn = new String[terms.size()];\n\t\tint i=0;\n\t\tfor(StringBuilder b : terms){\n\t\t\trtn[i] = b.toString().trim();\n\t\t\ti += 1;\n\t\t}\n    return rtn;\n  }","id":16035,"modified_method":"/**\n   * Decode an array encoded as a String. This entails a comma separated value enclosed in brackets\n   * or parentheses\n   * @param encoded The String encoded array\n   * @return A String array corresponding to the encoded array\n   */\n\tprivate static String[] decodeArray(String encoded){\n    if (encoded.length() == 0) return new String[]{};\n\t\tchar[] chars = encoded.trim().toCharArray();\n\n\t\t//--Parse the String\n\t\t//(state)\n\t\tchar quoteCloseChar = (char) 0;\n\t\tList<StringBuilder> terms = new LinkedList<StringBuilder>();\n\t\tStringBuilder current = new StringBuilder();\n\t\t//(start/stop overhead)\n\t\tint start = 0; int end = chars.length;\n\t\tif(chars[0] == '('){ start += 1; end -= 1; if(chars[end] != ')') throw new IllegalArgumentException(\"Unclosed paren in encoded array: \" + encoded); }\n\t\tif(chars[0] == '['){ start += 1; end -= 1; if(chars[end] != ']') throw new IllegalArgumentException(\"Unclosed bracket in encoded array: \" + encoded); }\n    if(chars[0] == '{'){ start += 1; end -= 1; if(chars[end] != '}') throw new IllegalArgumentException(\"Unclosed bracket in encoded array: \" + encoded); }\n\t\t//(finite state automata)\n\t\tfor(int i=start; i<end; i++){\n\t\t\tif(chars[i] == '\\\\'){\n\t\t\t\t//(case: escaped character)\n\t\t\t\tif(i == chars.length - 1) throw new IllegalArgumentException(\"Last character of encoded pair is escape character: \" + encoded);\n\t\t\t\tcurrent.append(chars[i+1]);\n\t\t\t\ti += 1;\n\t\t\t} else if(quoteCloseChar != 0){\n\t\t\t\t//(case: in quotes)\n\t\t\t\tif(chars[i] == quoteCloseChar){\n\t\t\t\t\tquoteCloseChar = (char) 0;\n\t\t\t\t}else{\n\t\t\t\t\tcurrent.append(chars[i]);\n\t\t\t\t}\n\t\t\t}else{\n\t\t\t\t//(case: normal)\n\t\t\t\tif(chars[i] == '\"'){\n          quoteCloseChar = '\"';\n\t\t\t\t} else if(chars[i] == '\\''){\n          quoteCloseChar = '\\'';\n\t\t\t\t} else if(chars[i] == ',' || chars[i] == ';' || chars[i] == ' ' || chars[i] == '\\t' || chars[i] == '\\n'){\n\t\t\t\t\t//break\n          if (current.length() > 0) {\n\t\t\t\t\t  terms.add(current);\n          }\n\t\t\t\t\tcurrent = new StringBuilder();\n\t\t\t\t}else{\n\t\t\t\t\tcurrent.append(chars[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t//--Return\n\t\tif(current.length() > 0) terms.add(current);\n\t\tString[] rtn = new String[terms.size()];\n\t\tint i=0;\n\t\tfor(StringBuilder b : terms){\n\t\t\trtn[i] = b.toString().trim();\n\t\t\ti += 1;\n\t\t}\n    return rtn;\n  }","commit_id":"92df52f17a98f8ee1e0f52926c4895f69c14ac0b","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"/**\n   * Cast a String representation of an object into that object.\n   * E.g. \"5.4\" will be cast to a Double; \"[1,2,3]\" will be cast\n   * to an Integer[].\n   *\n   * NOTE: Date parses from a Long\n   *\n   * @param <E> The type of the object returned (same as type)\n   * @param value The string representation of the object\n   * @param type The type (usually class) to be returned (same as E)\n   * @return An object corresponding to the String value passed\n   */\n  @SuppressWarnings({ \"unchecked\", \"rawtypes\" })\n  public static final <E> E cast(String value, Type type){\n    //--Get Type\n    Class <?> clazz = null;\n    Type[] params = null;\n    if(type instanceof Class){\n      clazz = (Class <?>) type;\n    }else if(type instanceof ParameterizedType){\n      ParameterizedType pt = (ParameterizedType) type;\n      params = pt.getActualTypeArguments();\n      clazz = (Class <?>) pt.getRawType();\n    }else{\n      clazz = type2class(type);\n      throw new IllegalArgumentException(\"Cannot cast to type (unhandled type): \" + type);\n    }\n    //--Cast\n    if(String.class.isAssignableFrom(clazz)){\n      // (case: String)\n      return (E) value;\n    }else if(Boolean.class.isAssignableFrom(clazz) || boolean.class.isAssignableFrom(clazz)){\n      //(case: boolean)\n      if(\"1\".equals(value)){ return (E) new Boolean(true); }\n      return (E) new Boolean( Boolean.parseBoolean(value) );\n    }else if(Integer.class.isAssignableFrom(clazz) || int.class.isAssignableFrom(clazz)){\n      //(case: integer)\n      try {\n        return (E) new Integer(Integer.parseInt(value));\n      } catch (NumberFormatException e) {\n        return (E) new Integer((int) Double.parseDouble(value));\n      }\n    }else if(Long.class.isAssignableFrom(clazz) || long.class.isAssignableFrom(clazz)){\n      //(case: long)\n      try {\n        return (E) new Long(Long.parseLong(value));\n      } catch (NumberFormatException e) {\n        return (E) new Long((long) Double.parseDouble(value));\n      }\n    }else if(Float.class.isAssignableFrom(clazz) || float.class.isAssignableFrom(clazz)){\n      //(case: float)\n      if(value == null){ return (E) new Float(Float.NaN); }\n      return (E) new Float(Float.parseFloat(value));\n    }else if(Double.class.isAssignableFrom(clazz) || double.class.isAssignableFrom(clazz)){\n      //(case: double)\n      if(value == null){ return (E) new Double(Double.NaN); }\n      return (E) new Double(Double.parseDouble(value));\n    }else if(Short.class.isAssignableFrom(clazz) || short.class.isAssignableFrom(clazz)){\n      //(case: short)\n      try {\n        return (E) new Short(Short.parseShort(value));\n      } catch (NumberFormatException e) {\n        return (E) new Short((short) Double.parseDouble(value));\n      }\n    }else if(Byte.class.isAssignableFrom(clazz) || byte.class.isAssignableFrom(clazz)){\n      //(case: byte)\n      try {\n        return (E) new Byte(Byte.parseByte(value));\n      } catch (NumberFormatException e) {\n        return (E) new Byte((byte) Double.parseDouble(value));\n      }\n    }else if(Character.class.isAssignableFrom(clazz) || char.class.isAssignableFrom(clazz)){\n      //(case: char)\n      return (E) new Character((char) Integer.parseInt(value));\n    }else if(java.util.Date.class.isAssignableFrom(clazz)){\n      //(case: date)\n      try {\n        return (E) new Date(Long.parseLong(value));\n      } catch (NumberFormatException e) {\n        return null;\n      }\n    } else if(java.util.Calendar.class.isAssignableFrom(clazz)){\n      //(case: date)\n      try {\n        Date d = new Date(Long.parseLong(value));\n        GregorianCalendar cal = new GregorianCalendar();\n        cal.setTime(d);\n        return (E) cal;\n      } catch (NumberFormatException e) {\n        return null;\n      }\n    } else if(File.class.isAssignableFrom(clazz)){\n      return (E) new File(value);\n    } else if(Class.class.isAssignableFrom(clazz)){\n      try {\n        return (E) Class.forName(value);\n      } catch (ClassNotFoundException e) {\n        return null;\n      }\n    } else if(clazz.isArray()){\n      if(value == null){ return null; }\n      Class <?> subType = clazz.getComponentType();\n      // (case: array)\n      String[] strings = decodeArray(value);\n      Object[] array = (Object[]) Array.newInstance(clazz.getComponentType(), strings.length);\n      for(int i=0; i<strings.length; i++){\n        array[i] = cast(strings[i], subType);\n      }\n      return (E) array;\n    } else if(clazz.isEnum()){\n      // (case: enumeration)\n      Class c = (Class) clazz;\n      if(value == null){ return null; }\n      if (value.charAt(0) == '\"') value = value.substring(1);\n      if (value.charAt(value.length()-1) == '\"') value = value.substring(0, value.length() - 1);\n      try {\n        return (E) Enum.valueOf(c, value);\n      } catch (Exception e){\n        try {\n          return (E) Enum.valueOf(c, value.toLowerCase());\n        } catch (Exception e2){\n          try {\n            return (E) Enum.valueOf(c, value.toUpperCase());\n          } catch (Exception e3){\n            return (E) Enum.valueOf(c,\n                (Character.isUpperCase(value.charAt(0)) ? Character.toLowerCase(value.charAt(0)) : Character.toUpperCase(value.charAt(0))) +\n                    value.substring(1));\n          }\n        }\n      }\n    } else if (ObjectOutputStream.class.isAssignableFrom(clazz)) {\n      // (case: object output stream)\n      try {\n        return (E) new ObjectOutputStream((OutputStream) cast(value, OutputStream.class));\n      } catch (IOException e) {\n        throw new RuntimeException(e);\n      }\n    } else if (ObjectInputStream.class.isAssignableFrom(clazz)) {\n      // (case: object input stream)\n      try {\n        return (E) new ObjectInputStream((InputStream) cast(value, InputStream.class));\n      } catch (IOException e) {\n        throw new RuntimeException(e);\n      }\n    } else if (OutputStream.class.isAssignableFrom(clazz)) {\n      // (case: output stream)\n      if (value.equalsIgnoreCase(\"stdout\") || value.equalsIgnoreCase(\"out\")) { return (E) System.out; }\n      if (value.equalsIgnoreCase(\"stderr\") || value.equalsIgnoreCase(\"err\")) { return (E) System.err; }\n      File toWriteTo = cast(value, File.class);\n      try {\n        if (!toWriteTo.exists() && !toWriteTo.createNewFile()) {\n          throw new IllegalStateException(\"Could not create output stream (cannot write file): \" + value);\n        }\n        return (E) new FileOutputStream((File) cast(value, File.class));\n      } catch (IOException e) {\n        throw new RuntimeException(e);\n      }\n    } else if (InputStream.class.isAssignableFrom(clazz)) {\n      // (case: input stream)\n      if (value.equalsIgnoreCase(\"stdin\") || value.equalsIgnoreCase(\"in\")) { return (E) System.in; }\n      File toReadFrom = cast(value, File.class);\n      try {\n        if (!toReadFrom.exists() || !toReadFrom.canRead()) {\n          throw new IllegalStateException(\"Could not create input stream (cannot read file): \" + value);\n        }\n        return (E) new FileInputStream((File) cast(value, File.class));\n      } catch (IOException e) {\n        throw new RuntimeException(e);\n      }\n    } else {\n      try {\n        // (case: can parse from string)\n        Method decode = clazz.getMethod(\"fromString\", String.class);\n        return (E) decode.invoke(MetaClass.create(clazz), value);\n      } catch (NoSuchMethodException e) {  // Silent errors for misc failures\n      } catch (InvocationTargetException e) {\n      } catch (IllegalAccessException e) {\n      } catch (ClassCastException e) {\n      }\n\n      // Pass 2: Guess what the object could be\n      if (Tree.class.isAssignableFrom(clazz)) {\n        // (case: reading a tree)\n        try {\n          return (E) new PennTreeReader(new StringReader(value), new LabeledScoredTreeFactory(CoreLabel.factory())).readTree();\n        } catch (IOException e) {\n          throw new RuntimeException(e);\n        }\n      } else if (Collection.class.isAssignableFrom(clazz)) {\n        // (case: reading a collection)\n        Collection rtn;\n        if (Modifier.isAbstract(clazz.getModifiers())) {\n          rtn = abstractToConcreteCollectionMap.get(clazz).createInstance();\n        } else {\n          rtn = MetaClass.create(clazz).createInstance();\n        }\n        Class <?> subType = clazz.getComponentType();\n        String[] strings = decodeArray(value);\n        for (String string : strings) {\n          if (subType == null) {\n            rtn.add(castWithoutKnowingType(string));\n          } else {\n            rtn.add(cast(string, subType));\n          }\n        }\n        return (E) rtn;\n      } else {\n        // We could not cast this object\n        return null;\n      }\n    }\n  }","id":16036,"modified_method":"/**\n   * Cast a String representation of an object into that object.\n   * E.g. \"5.4\" will be cast to a Double; \"[1,2,3]\" will be cast\n   * to an Integer[].\n   *\n   * NOTE: Date parses from a Long\n   *\n   * @param <E> The type of the object returned (same as type)\n   * @param value The string representation of the object\n   * @param type The type (usually class) to be returned (same as E)\n   * @return An object corresponding to the String value passed\n   */\n  @SuppressWarnings({ \"unchecked\", \"rawtypes\" })\n  public static <E> E cast(String value, Type type){\n    //--Get Type\n    Class <?> clazz;\n    if(type instanceof Class){\n      clazz = (Class <?>) type;\n    }else if(type instanceof ParameterizedType){\n      ParameterizedType pt = (ParameterizedType) type;\n      clazz = (Class <?>) pt.getRawType();\n    }else{\n      throw new IllegalArgumentException(\"Cannot cast to type (unhandled type): \" + type);\n    }\n    //--Cast\n    if(String.class.isAssignableFrom(clazz)){\n      // (case: String)\n      return (E) value;\n    }else if(Boolean.class.isAssignableFrom(clazz) || boolean.class.isAssignableFrom(clazz)){\n      //(case: boolean)\n      if(\"1\".equals(value)){ return (E) Boolean.TRUE; }\n      return (E) Boolean.valueOf(Boolean.parseBoolean(value));\n    }else if(Integer.class.isAssignableFrom(clazz) || int.class.isAssignableFrom(clazz)){\n      //(case: integer)\n      try {\n        return (E) new Integer(Integer.parseInt(value));\n      } catch (NumberFormatException e) {\n        return (E) new Integer((int) Double.parseDouble(value));\n      }\n    }else if(Long.class.isAssignableFrom(clazz) || long.class.isAssignableFrom(clazz)){\n      //(case: long)\n      try {\n        return (E) new Long(Long.parseLong(value));\n      } catch (NumberFormatException e) {\n        return (E) new Long((long) Double.parseDouble(value));\n      }\n    }else if(Float.class.isAssignableFrom(clazz) || float.class.isAssignableFrom(clazz)){\n      //(case: float)\n      if(value == null){ return (E) new Float(Float.NaN); }\n      return (E) new Float(Float.parseFloat(value));\n    }else if(Double.class.isAssignableFrom(clazz) || double.class.isAssignableFrom(clazz)){\n      //(case: double)\n      if(value == null){ return (E) new Double(Double.NaN); }\n      return (E) new Double(Double.parseDouble(value));\n    }else if(Short.class.isAssignableFrom(clazz) || short.class.isAssignableFrom(clazz)){\n      //(case: short)\n      try {\n        return (E) new Short(Short.parseShort(value));\n      } catch (NumberFormatException e) {\n        return (E) new Short((short) Double.parseDouble(value));\n      }\n    }else if(Byte.class.isAssignableFrom(clazz) || byte.class.isAssignableFrom(clazz)){\n      //(case: byte)\n      try {\n        return (E) new Byte(Byte.parseByte(value));\n      } catch (NumberFormatException e) {\n        return (E) new Byte((byte) Double.parseDouble(value));\n      }\n    }else if(Character.class.isAssignableFrom(clazz) || char.class.isAssignableFrom(clazz)){\n      //(case: char)\n      return (E) new Character((char) Integer.parseInt(value));\n    }else if(java.util.Date.class.isAssignableFrom(clazz)){\n      //(case: date)\n      try {\n        return (E) new Date(Long.parseLong(value));\n      } catch (NumberFormatException e) {\n        return null;\n      }\n    } else if(java.util.Calendar.class.isAssignableFrom(clazz)){\n      //(case: date)\n      try {\n        Date d = new Date(Long.parseLong(value));\n        GregorianCalendar cal = new GregorianCalendar();\n        cal.setTime(d);\n        return (E) cal;\n      } catch (NumberFormatException e) {\n        return null;\n      }\n    } else if(File.class.isAssignableFrom(clazz)){\n      return (E) new File(value);\n    } else if(Class.class.isAssignableFrom(clazz)){\n      try {\n        return (E) Class.forName(value);\n      } catch (ClassNotFoundException e) {\n        return null;\n      }\n    } else if(clazz.isArray()){\n      if(value == null){ return null; }\n      Class <?> subType = clazz.getComponentType();\n      // (case: array)\n      String[] strings = decodeArray(value);\n      Object[] array = (Object[]) Array.newInstance(clazz.getComponentType(), strings.length);\n      for(int i=0; i<strings.length; i++){\n        array[i] = cast(strings[i], subType);\n      }\n      return (E) array;\n    } else if (Map.class.isAssignableFrom(clazz)) {\n      return (E) decodeMap(value);\n    } else if(clazz.isEnum()){\n      // (case: enumeration)\n      Class c = (Class) clazz;\n      if(value == null){ return null; }\n      if (value.charAt(0) == '\"') value = value.substring(1);\n      if (value.charAt(value.length()-1) == '\"') value = value.substring(0, value.length() - 1);\n      try {\n        return (E) Enum.valueOf(c, value);\n      } catch (Exception e){\n        try {\n          return (E) Enum.valueOf(c, value.toLowerCase());\n        } catch (Exception e2){\n          try {\n            return (E) Enum.valueOf(c, value.toUpperCase());\n          } catch (Exception e3){\n            return (E) Enum.valueOf(c,\n                (Character.isUpperCase(value.charAt(0)) ? Character.toLowerCase(value.charAt(0)) : Character.toUpperCase(value.charAt(0))) +\n                    value.substring(1));\n          }\n        }\n      }\n    } else if (ObjectOutputStream.class.isAssignableFrom(clazz)) {\n      // (case: object output stream)\n      try {\n        return (E) new ObjectOutputStream((OutputStream) cast(value, OutputStream.class));\n      } catch (IOException e) {\n        throw new RuntimeException(e);\n      }\n    } else if (ObjectInputStream.class.isAssignableFrom(clazz)) {\n      // (case: object input stream)\n      try {\n        return (E) new ObjectInputStream((InputStream) cast(value, InputStream.class));\n      } catch (IOException e) {\n        throw new RuntimeException(e);\n      }\n    } else if (OutputStream.class.isAssignableFrom(clazz)) {\n      // (case: output stream)\n      if (value.equalsIgnoreCase(\"stdout\") || value.equalsIgnoreCase(\"out\")) { return (E) System.out; }\n      if (value.equalsIgnoreCase(\"stderr\") || value.equalsIgnoreCase(\"err\")) { return (E) System.err; }\n      File toWriteTo = cast(value, File.class);\n      try {\n        if (!toWriteTo.exists() && !toWriteTo.createNewFile()) {\n          throw new IllegalStateException(\"Could not create output stream (cannot write file): \" + value);\n        }\n        return (E) new FileOutputStream((File) cast(value, File.class));\n      } catch (IOException e) {\n        throw new RuntimeException(e);\n      }\n    } else if (InputStream.class.isAssignableFrom(clazz)) {\n      // (case: input stream)\n      if (value.equalsIgnoreCase(\"stdin\") || value.equalsIgnoreCase(\"in\")) { return (E) System.in; }\n      File toReadFrom = cast(value, File.class);\n      try {\n        if (!toReadFrom.exists() || !toReadFrom.canRead()) {\n          throw new IllegalStateException(\"Could not create input stream (cannot read file): \" + value);\n        }\n        return (E) new FileInputStream((File) cast(value, File.class));\n      } catch (IOException e) {\n        throw new RuntimeException(e);\n      }\n    } else {\n      try {\n        // (case: can parse from string)\n        Method decode = clazz.getMethod(\"fromString\", String.class);\n        return (E) decode.invoke(MetaClass.create(clazz), value);\n      } catch (NoSuchMethodException e) {  // Silent errors for misc failures\n      } catch (InvocationTargetException e) {\n      } catch (IllegalAccessException e) {\n      } catch (ClassCastException e) {\n      }\n\n      // Pass 2: Guess what the object could be\n      if (Tree.class.isAssignableFrom(clazz)) {\n        // (case: reading a tree)\n        try {\n          return (E) new PennTreeReader(new StringReader(value), new LabeledScoredTreeFactory(CoreLabel.factory())).readTree();\n        } catch (IOException e) {\n          throw new RuntimeException(e);\n        }\n      } else if (Collection.class.isAssignableFrom(clazz)) {\n        // (case: reading a collection)\n        Collection rtn;\n        if (Modifier.isAbstract(clazz.getModifiers())) {\n          rtn = abstractToConcreteCollectionMap.get(clazz).createInstance();\n        } else {\n          rtn = MetaClass.create(clazz).createInstance();\n        }\n        Class <?> subType = clazz.getComponentType();\n        String[] strings = decodeArray(value);\n        for (String string : strings) {\n          if (subType == null) {\n            rtn.add(castWithoutKnowingType(string));\n          } else {\n            rtn.add(cast(string, subType));\n          }\n        }\n        return (E) rtn;\n      } else {\n        // We could not cast this object\n        return null;\n      }\n    }\n  }","commit_id":"3d50a692487da70f064426e17d99aa2cbc9ff00c","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"/**\n   * Decode an array encoded as a String. This entails a comma separated value enclosed in brackets\n   * or parentheses\n   * @param encoded The String encoded array\n   * @return A String array corresponding to the encoded array\n   */\n\tprivate static String[] decodeArray(String encoded){\n    if (encoded.length() == 0) return new String[]{};\n\t\tchar[] chars = encoded.trim().toCharArray();\n\n\t\t//--Parse the String\n\t\t//(state)\n\t\tchar quoteCloseChar = (char) 0;\n\t\tList<StringBuilder> terms = new LinkedList<StringBuilder>();\n\t\tStringBuilder current = new StringBuilder();\n\t\t//(start/stop overhead)\n\t\tint start = 0; int end = chars.length;\n\t\tif(chars[0] == '('){ start += 1; end -= 1; if(chars[end] != ')') throw new IllegalArgumentException(\"Unclosed paren in encoded array: \" + encoded); }\n\t\tif(chars[0] == '['){ start += 1; end -= 1; if(chars[end] != ']') throw new IllegalArgumentException(\"Unclosed bracket in encoded array: \" + encoded); }\n    if(chars[0] == '{'){ start += 1; end -= 1; if(chars[end] != '}') throw new IllegalArgumentException(\"Unclosed bracket in encoded array: \" + encoded); }\n\t\t//(finite state automata)\n\t\tfor(int i=start; i<end; i++){\n\t\t\tif(chars[i] == '\\\\'){\n\t\t\t\t//(case: escaped character)\n\t\t\t\tif(i == chars.length - 1) throw new IllegalArgumentException(\"Last character of encoded pair is escape character: \" + encoded);\n\t\t\t\tcurrent.append(chars[i+1]);\n\t\t\t\ti += 1;\n\t\t\t} else if(quoteCloseChar != 0){\n\t\t\t\t//(case: in quotes)\n\t\t\t\tif(chars[i] == quoteCloseChar){\n\t\t\t\t\tquoteCloseChar = (char) 0;\n\t\t\t\t}else{\n\t\t\t\t\tcurrent.append(chars[i]);\n\t\t\t\t}\n\t\t\t}else{\n\t\t\t\t//(case: normal)\n\t\t\t\tif(chars[i] == '\"'){\n          quoteCloseChar = '\"';\n\t\t\t\t} else if(chars[i] == '\\''){\n          quoteCloseChar = '\\'';\n\t\t\t\t} else if(chars[i] == ',' || chars[i] == ' ' || chars[i] == '\\t' || chars[i] == '\\n'){\n\t\t\t\t\t//break\n          if (current.length() > 0) {\n\t\t\t\t\t  terms.add(current);\n          }\n\t\t\t\t\tcurrent = new StringBuilder();\n\t\t\t\t}else{\n\t\t\t\t\tcurrent.append(chars[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t//--Return\n\t\tif(current.length() > 0) terms.add(current);\n\t\tString[] rtn = new String[terms.size()];\n\t\tint i=0;\n\t\tfor(StringBuilder b : terms){\n\t\t\trtn[i] = b.toString().trim();\n\t\t\ti += 1;\n\t\t}\n    return rtn;\n  }","id":16037,"modified_method":"/**\n   * Decode an array encoded as a String. This entails a comma separated value enclosed in brackets\n   * or parentheses\n   * @param encoded The String encoded array\n   * @return A String array corresponding to the encoded array\n   */\n\tprivate static String[] decodeArray(String encoded){\n    if (encoded.length() == 0) return new String[]{};\n\t\tchar[] chars = encoded.trim().toCharArray();\n\n\t\t//--Parse the String\n\t\t//(state)\n\t\tchar quoteCloseChar = (char) 0;\n\t\tList<StringBuilder> terms = new LinkedList<StringBuilder>();\n\t\tStringBuilder current = new StringBuilder();\n\t\t//(start/stop overhead)\n\t\tint start = 0; int end = chars.length;\n\t\tif(chars[0] == '('){ start += 1; end -= 1; if(chars[end] != ')') throw new IllegalArgumentException(\"Unclosed paren in encoded array: \" + encoded); }\n\t\tif(chars[0] == '['){ start += 1; end -= 1; if(chars[end] != ']') throw new IllegalArgumentException(\"Unclosed bracket in encoded array: \" + encoded); }\n    if(chars[0] == '{'){ start += 1; end -= 1; if(chars[end] != '}') throw new IllegalArgumentException(\"Unclosed bracket in encoded array: \" + encoded); }\n\t\t//(finite state automata)\n\t\tfor(int i=start; i<end; i++){\n\t\t\tif(chars[i] == '\\\\'){\n\t\t\t\t//(case: escaped character)\n\t\t\t\tif(i == chars.length - 1) throw new IllegalArgumentException(\"Last character of encoded pair is escape character: \" + encoded);\n\t\t\t\tcurrent.append(chars[i+1]);\n\t\t\t\ti += 1;\n\t\t\t} else if(quoteCloseChar != 0){\n\t\t\t\t//(case: in quotes)\n\t\t\t\tif(chars[i] == quoteCloseChar){\n\t\t\t\t\tquoteCloseChar = (char) 0;\n\t\t\t\t}else{\n\t\t\t\t\tcurrent.append(chars[i]);\n\t\t\t\t}\n\t\t\t}else{\n\t\t\t\t//(case: normal)\n\t\t\t\tif(chars[i] == '\"'){\n          quoteCloseChar = '\"';\n\t\t\t\t} else if(chars[i] == '\\''){\n          quoteCloseChar = '\\'';\n\t\t\t\t} else if(chars[i] == ',' || chars[i] == ';' || chars[i] == ' ' || chars[i] == '\\t' || chars[i] == '\\n'){\n\t\t\t\t\t//break\n          if (current.length() > 0) {\n\t\t\t\t\t  terms.add(current);\n          }\n\t\t\t\t\tcurrent = new StringBuilder();\n\t\t\t\t}else{\n\t\t\t\t\tcurrent.append(chars[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t//--Return\n\t\tif(current.length() > 0) terms.add(current);\n\t\tString[] rtn = new String[terms.size()];\n\t\tint i=0;\n\t\tfor(StringBuilder b : terms){\n\t\t\trtn[i] = b.toString().trim();\n\t\t\ti += 1;\n\t\t}\n    return rtn;\n  }","commit_id":"3d50a692487da70f064426e17d99aa2cbc9ff00c","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"@Test\n  public void testCastArray() {\n    Integer[] ints1 = MetaClass.cast(\"[1,2,3]\", Integer[].class);\n    assertArrayEquals(new Integer[]{1,2,3}, ints1);\n    Integer[] ints2 = MetaClass.cast(\"(1,2,3)\", Integer[].class);\n    assertArrayEquals(new Integer[]{1,2,3}, ints2);\n    Integer[] ints3 = MetaClass.cast(\"1, 2, 3\", Integer[].class);\n    assertArrayEquals(new Integer[]{1,2,3}, ints3);\n    Integer[] ints4 = MetaClass.cast(\"1 2 3\", Integer[].class);\n    assertArrayEquals(new Integer[]{1,2,3}, ints4);\n    Integer[] ints5 = MetaClass.cast(\"1   2   3\", Integer[].class);\n    assertArrayEquals(new Integer[]{1,2,3}, ints5);\n\n    Integer[] intsEmpty = MetaClass.cast(\"\", Integer[].class);\n    assertArrayEquals(new Integer[]{}, intsEmpty);\n  }","id":16038,"modified_method":"@Test\n  public void testCastArray() {\n    Integer[] ints1 = MetaClass.cast(\"[1,2,3]\", Integer[].class);\n    assertArrayEquals(new Integer[]{1,2,3}, ints1);\n    Integer[] ints2 = MetaClass.cast(\"(1,2,3)\", Integer[].class);\n    assertArrayEquals(new Integer[]{1,2,3}, ints2);\n    Integer[] ints3 = MetaClass.cast(\"1, 2, 3\", Integer[].class);\n    assertArrayEquals(new Integer[]{1,2,3}, ints3);\n    Integer[] ints4 = MetaClass.cast(\"1 2 3\", Integer[].class);\n    assertArrayEquals(new Integer[]{1,2,3}, ints4);\n    Integer[] ints5 = MetaClass.cast(\"1   2   3\", Integer[].class);\n    assertArrayEquals(new Integer[]{1,2,3}, ints5);\n    Integer[] ints6 = MetaClass.cast(\"\\n1 \\n\\n  2   3\", Integer[].class);\n    assertArrayEquals(new Integer[]{1,2,3}, ints6);\n\n    Integer[] intsEmpty = MetaClass.cast(\"\", Integer[].class);\n    assertArrayEquals(new Integer[]{}, intsEmpty);\n  }","commit_id":"3d50a692487da70f064426e17d99aa2cbc9ff00c","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"/**\n   * Cast a String representation of an object into that object.\n   * E.g. \"5.4\" will be cast to a Double; \"[1,2,3]\" will be cast\n   * to an Integer[].\n   *\n   * NOTE: Date parses from a Long\n   *\n   * @param <E> The type of the object returned (same as type)\n   * @param value The string representation of the object\n   * @param type The type (usually class) to be returned (same as E)\n   * @return An object corresponding to the String value passed\n   */\n  @SuppressWarnings({ \"unchecked\", \"rawtypes\" })\n  public static final <E> E cast(String value, Type type){\n    //--Get Type\n    Class <?> clazz = null;\n    Type[] params = null;\n    if(type instanceof Class){\n      clazz = (Class <?>) type;\n    }else if(type instanceof ParameterizedType){\n      ParameterizedType pt = (ParameterizedType) type;\n      params = pt.getActualTypeArguments();\n      clazz = (Class <?>) pt.getRawType();\n    }else{\n      clazz = type2class(type);\n      throw new IllegalArgumentException(\"Cannot cast to type (unhandled type): \" + type);\n    }\n    //--Cast\n    if(String.class.isAssignableFrom(clazz)){\n      // (case: String)\n      return (E) value;\n    }else if(Boolean.class.isAssignableFrom(clazz) || boolean.class.isAssignableFrom(clazz)){\n      //(case: boolean)\n      if(\"1\".equals(value)){ return (E) new Boolean(true); }\n      return (E) new Boolean( Boolean.parseBoolean(value) );\n    }else if(Integer.class.isAssignableFrom(clazz) || int.class.isAssignableFrom(clazz)){\n      //(case: integer)\n      try {\n        return (E) new Integer(Integer.parseInt(value));\n      } catch (NumberFormatException e) {\n        return (E) new Integer((int) Double.parseDouble(value));\n      }\n    }else if(Long.class.isAssignableFrom(clazz) || long.class.isAssignableFrom(clazz)){\n      //(case: long)\n      try {\n        return (E) new Long(Long.parseLong(value));\n      } catch (NumberFormatException e) {\n        return (E) new Long((long) Double.parseDouble(value));\n      }\n    }else if(Float.class.isAssignableFrom(clazz) || float.class.isAssignableFrom(clazz)){\n      //(case: float)\n      if(value == null){ return (E) new Float(Float.NaN); }\n      return (E) new Float(Float.parseFloat(value));\n    }else if(Double.class.isAssignableFrom(clazz) || double.class.isAssignableFrom(clazz)){\n      //(case: double)\n      if(value == null){ return (E) new Double(Double.NaN); }\n      return (E) new Double(Double.parseDouble(value));\n    }else if(Short.class.isAssignableFrom(clazz) || short.class.isAssignableFrom(clazz)){\n      //(case: short)\n      try {\n        return (E) new Short(Short.parseShort(value));\n      } catch (NumberFormatException e) {\n        return (E) new Short((short) Double.parseDouble(value));\n      }\n    }else if(Byte.class.isAssignableFrom(clazz) || byte.class.isAssignableFrom(clazz)){\n      //(case: byte)\n      try {\n        return (E) new Byte(Byte.parseByte(value));\n      } catch (NumberFormatException e) {\n        return (E) new Byte((byte) Double.parseDouble(value));\n      }\n    }else if(Character.class.isAssignableFrom(clazz) || char.class.isAssignableFrom(clazz)){\n      //(case: char)\n      return (E) new Character((char) Integer.parseInt(value));\n    }else if(java.util.Date.class.isAssignableFrom(clazz)){\n      //(case: date)\n      try {\n        return (E) new Date(Long.parseLong(value));\n      } catch (NumberFormatException e) {\n        return null;\n      }\n    } else if(java.util.Calendar.class.isAssignableFrom(clazz)){\n      //(case: date)\n      try {\n        Date d = new Date(Long.parseLong(value));\n        GregorianCalendar cal = new GregorianCalendar();\n        cal.setTime(d);\n        return (E) cal;\n      } catch (NumberFormatException e) {\n        return null;\n      }\n    } else if(File.class.isAssignableFrom(clazz)){\n      return (E) new File(value);\n    } else if(Class.class.isAssignableFrom(clazz)){\n      try {\n        return (E) Class.forName(value);\n      } catch (ClassNotFoundException e) {\n        return null;\n      }\n    } else if(clazz.isArray()){\n      if(value == null){ return null; }\n      Class <?> subType = clazz.getComponentType();\n      // (case: array)\n      String[] strings = decodeArray(value);\n      Object[] array = (Object[]) Array.newInstance(clazz.getComponentType(), strings.length);\n      for(int i=0; i<strings.length; i++){\n        array[i] = cast(strings[i], subType);\n      }\n      return (E) array;\n    } else if(clazz.isEnum()){\n      // (case: enumeration)\n      Class c = (Class) clazz;\n      if(value == null){ return null; }\n      if (value.charAt(0) == '\"') value = value.substring(1);\n      if (value.charAt(value.length()-1) == '\"') value = value.substring(0, value.length() - 1);\n      try {\n        return (E) Enum.valueOf(c, value);\n      } catch (Exception e){\n        try {\n          return (E) Enum.valueOf(c, value.toLowerCase());\n        } catch (Exception e2){\n          try {\n            return (E) Enum.valueOf(c, value.toUpperCase());\n          } catch (Exception e3){\n            return (E) Enum.valueOf(c,\n                (Character.isUpperCase(value.charAt(0)) ? Character.toLowerCase(value.charAt(0)) : Character.toUpperCase(value.charAt(0))) +\n                    value.substring(1));\n          }\n        }\n      }\n    } else if (ObjectOutputStream.class.isAssignableFrom(clazz)) {\n      // (case: object output stream)\n      try {\n        return (E) new ObjectOutputStream((OutputStream) cast(value, OutputStream.class));\n      } catch (IOException e) {\n        throw new RuntimeException(e);\n      }\n    } else if (ObjectInputStream.class.isAssignableFrom(clazz)) {\n      // (case: object input stream)\n      try {\n        return (E) new ObjectInputStream((InputStream) cast(value, InputStream.class));\n      } catch (IOException e) {\n        throw new RuntimeException(e);\n      }\n    } else if (OutputStream.class.isAssignableFrom(clazz)) {\n      // (case: output stream)\n      if (value.equalsIgnoreCase(\"stdout\") || value.equalsIgnoreCase(\"out\")) { return (E) System.out; }\n      if (value.equalsIgnoreCase(\"stderr\") || value.equalsIgnoreCase(\"err\")) { return (E) System.err; }\n      File toWriteTo = cast(value, File.class);\n      try {\n        if (!toWriteTo.exists() && !toWriteTo.createNewFile()) {\n          throw new IllegalStateException(\"Could not create output stream (cannot write file): \" + value);\n        }\n        return (E) new FileOutputStream((File) cast(value, File.class));\n      } catch (IOException e) {\n        throw new RuntimeException(e);\n      }\n    } else if (InputStream.class.isAssignableFrom(clazz)) {\n      // (case: input stream)\n      if (value.equalsIgnoreCase(\"stdin\") || value.equalsIgnoreCase(\"in\")) { return (E) System.in; }\n      File toReadFrom = cast(value, File.class);\n      try {\n        if (!toReadFrom.exists() || !toReadFrom.canRead()) {\n          throw new IllegalStateException(\"Could not create input stream (cannot read file): \" + value);\n        }\n        return (E) new FileInputStream((File) cast(value, File.class));\n      } catch (IOException e) {\n        throw new RuntimeException(e);\n      }\n    } else {\n      try {\n        // (case: can parse from string)\n        Method decode = clazz.getMethod(\"fromString\", String.class);\n        return (E) decode.invoke(MetaClass.create(clazz), value);\n      } catch (NoSuchMethodException e) {  // Silent errors for misc failures\n      } catch (InvocationTargetException e) {\n      } catch (IllegalAccessException e) {\n      } catch (ClassCastException e) {\n      }\n\n      // Pass 2: Guess what the object could be\n      if (Tree.class.isAssignableFrom(clazz)) {\n        // (case: reading a tree)\n        try {\n          return (E) new PennTreeReader(new StringReader(value), new LabeledScoredTreeFactory(CoreLabel.factory())).readTree();\n        } catch (IOException e) {\n          throw new RuntimeException(e);\n        }\n      } else if (Collection.class.isAssignableFrom(clazz)) {\n        // (case: reading a collection)\n        Collection rtn;\n        if (Modifier.isAbstract(clazz.getModifiers())) {\n          rtn = abstractToConcreteCollectionMap.get(clazz).createInstance();\n        } else {\n          rtn = MetaClass.create(clazz).createInstance();\n        }\n        Class <?> subType = clazz.getComponentType();\n        String[] strings = decodeArray(value);\n        for (String string : strings) {\n          if (subType == null) {\n            rtn.add(castWithoutKnowingType(string));\n          } else {\n            rtn.add(cast(string, subType));\n          }\n        }\n        return (E) rtn;\n      } else {\n        // We could not cast this object\n        return null;\n      }\n    }\n  }","id":16039,"modified_method":"/**\n   * Cast a String representation of an object into that object.\n   * E.g. \"5.4\" will be cast to a Double; \"[1,2,3]\" will be cast\n   * to an Integer[].\n   *\n   * NOTE: Date parses from a Long\n   *\n   * @param <E> The type of the object returned (same as type)\n   * @param value The string representation of the object\n   * @param type The type (usually class) to be returned (same as E)\n   * @return An object corresponding to the String value passed\n   */\n  @SuppressWarnings({ \"unchecked\", \"rawtypes\" })\n  public static <E> E cast(String value, Type type){\n    //--Get Type\n    Class <?> clazz;\n    if(type instanceof Class){\n      clazz = (Class <?>) type;\n    }else if(type instanceof ParameterizedType){\n      ParameterizedType pt = (ParameterizedType) type;\n      clazz = (Class <?>) pt.getRawType();\n    }else{\n      throw new IllegalArgumentException(\"Cannot cast to type (unhandled type): \" + type);\n    }\n    //--Cast\n    if(String.class.isAssignableFrom(clazz)){\n      // (case: String)\n      return (E) value;\n    }else if(Boolean.class.isAssignableFrom(clazz) || boolean.class.isAssignableFrom(clazz)){\n      //(case: boolean)\n      if(\"1\".equals(value)){ return (E) Boolean.TRUE; }\n      return (E) Boolean.valueOf(Boolean.parseBoolean(value));\n    }else if(Integer.class.isAssignableFrom(clazz) || int.class.isAssignableFrom(clazz)){\n      //(case: integer)\n      try {\n        return (E) new Integer(Integer.parseInt(value));\n      } catch (NumberFormatException e) {\n        return (E) new Integer((int) Double.parseDouble(value));\n      }\n    }else if(Long.class.isAssignableFrom(clazz) || long.class.isAssignableFrom(clazz)){\n      //(case: long)\n      try {\n        return (E) new Long(Long.parseLong(value));\n      } catch (NumberFormatException e) {\n        return (E) new Long((long) Double.parseDouble(value));\n      }\n    }else if(Float.class.isAssignableFrom(clazz) || float.class.isAssignableFrom(clazz)){\n      //(case: float)\n      if(value == null){ return (E) new Float(Float.NaN); }\n      return (E) new Float(Float.parseFloat(value));\n    }else if(Double.class.isAssignableFrom(clazz) || double.class.isAssignableFrom(clazz)){\n      //(case: double)\n      if(value == null){ return (E) new Double(Double.NaN); }\n      return (E) new Double(Double.parseDouble(value));\n    }else if(Short.class.isAssignableFrom(clazz) || short.class.isAssignableFrom(clazz)){\n      //(case: short)\n      try {\n        return (E) new Short(Short.parseShort(value));\n      } catch (NumberFormatException e) {\n        return (E) new Short((short) Double.parseDouble(value));\n      }\n    }else if(Byte.class.isAssignableFrom(clazz) || byte.class.isAssignableFrom(clazz)){\n      //(case: byte)\n      try {\n        return (E) new Byte(Byte.parseByte(value));\n      } catch (NumberFormatException e) {\n        return (E) new Byte((byte) Double.parseDouble(value));\n      }\n    }else if(Character.class.isAssignableFrom(clazz) || char.class.isAssignableFrom(clazz)){\n      //(case: char)\n      return (E) new Character((char) Integer.parseInt(value));\n    }else if(java.util.Date.class.isAssignableFrom(clazz)){\n      //(case: date)\n      try {\n        return (E) new Date(Long.parseLong(value));\n      } catch (NumberFormatException e) {\n        return null;\n      }\n    } else if(java.util.Calendar.class.isAssignableFrom(clazz)){\n      //(case: date)\n      try {\n        Date d = new Date(Long.parseLong(value));\n        GregorianCalendar cal = new GregorianCalendar();\n        cal.setTime(d);\n        return (E) cal;\n      } catch (NumberFormatException e) {\n        return null;\n      }\n    } else if(File.class.isAssignableFrom(clazz)){\n      return (E) new File(value);\n    } else if(Class.class.isAssignableFrom(clazz)){\n      try {\n        return (E) Class.forName(value);\n      } catch (ClassNotFoundException e) {\n        return null;\n      }\n    } else if(clazz.isArray()){\n      if(value == null){ return null; }\n      Class <?> subType = clazz.getComponentType();\n      // (case: array)\n      String[] strings = decodeArray(value);\n      Object[] array = (Object[]) Array.newInstance(clazz.getComponentType(), strings.length);\n      for(int i=0; i<strings.length; i++){\n        array[i] = cast(strings[i], subType);\n      }\n      return (E) array;\n    } else if (Map.class.isAssignableFrom(clazz)) {\n      return (E) decodeMap(value);\n    } else if(clazz.isEnum()){\n      // (case: enumeration)\n      Class c = (Class) clazz;\n      if(value == null){ return null; }\n      if (value.charAt(0) == '\"') value = value.substring(1);\n      if (value.charAt(value.length()-1) == '\"') value = value.substring(0, value.length() - 1);\n      try {\n        return (E) Enum.valueOf(c, value);\n      } catch (Exception e){\n        try {\n          return (E) Enum.valueOf(c, value.toLowerCase());\n        } catch (Exception e2){\n          try {\n            return (E) Enum.valueOf(c, value.toUpperCase());\n          } catch (Exception e3){\n            return (E) Enum.valueOf(c,\n                (Character.isUpperCase(value.charAt(0)) ? Character.toLowerCase(value.charAt(0)) : Character.toUpperCase(value.charAt(0))) +\n                    value.substring(1));\n          }\n        }\n      }\n    } else if (ObjectOutputStream.class.isAssignableFrom(clazz)) {\n      // (case: object output stream)\n      try {\n        return (E) new ObjectOutputStream((OutputStream) cast(value, OutputStream.class));\n      } catch (IOException e) {\n        throw new RuntimeException(e);\n      }\n    } else if (ObjectInputStream.class.isAssignableFrom(clazz)) {\n      // (case: object input stream)\n      try {\n        return (E) new ObjectInputStream((InputStream) cast(value, InputStream.class));\n      } catch (IOException e) {\n        throw new RuntimeException(e);\n      }\n    } else if (OutputStream.class.isAssignableFrom(clazz)) {\n      // (case: output stream)\n      if (value.equalsIgnoreCase(\"stdout\") || value.equalsIgnoreCase(\"out\")) { return (E) System.out; }\n      if (value.equalsIgnoreCase(\"stderr\") || value.equalsIgnoreCase(\"err\")) { return (E) System.err; }\n      File toWriteTo = cast(value, File.class);\n      try {\n        if (!toWriteTo.exists() && !toWriteTo.createNewFile()) {\n          throw new IllegalStateException(\"Could not create output stream (cannot write file): \" + value);\n        }\n        return (E) new FileOutputStream((File) cast(value, File.class));\n      } catch (IOException e) {\n        throw new RuntimeException(e);\n      }\n    } else if (InputStream.class.isAssignableFrom(clazz)) {\n      // (case: input stream)\n      if (value.equalsIgnoreCase(\"stdin\") || value.equalsIgnoreCase(\"in\")) { return (E) System.in; }\n      File toReadFrom = cast(value, File.class);\n      try {\n        if (!toReadFrom.exists() || !toReadFrom.canRead()) {\n          throw new IllegalStateException(\"Could not create input stream (cannot read file): \" + value);\n        }\n        return (E) new FileInputStream((File) cast(value, File.class));\n      } catch (IOException e) {\n        throw new RuntimeException(e);\n      }\n    } else {\n      try {\n        // (case: can parse from string)\n        Method decode = clazz.getMethod(\"fromString\", String.class);\n        return (E) decode.invoke(MetaClass.create(clazz), value);\n      } catch (NoSuchMethodException e) {  // Silent errors for misc failures\n      } catch (InvocationTargetException e) {\n      } catch (IllegalAccessException e) {\n      } catch (ClassCastException e) {\n      }\n\n      // Pass 2: Guess what the object could be\n      if (Tree.class.isAssignableFrom(clazz)) {\n        // (case: reading a tree)\n        try {\n          return (E) new PennTreeReader(new StringReader(value), new LabeledScoredTreeFactory(CoreLabel.factory())).readTree();\n        } catch (IOException e) {\n          throw new RuntimeException(e);\n        }\n      } else if (Collection.class.isAssignableFrom(clazz)) {\n        // (case: reading a collection)\n        Collection rtn;\n        if (Modifier.isAbstract(clazz.getModifiers())) {\n          rtn = abstractToConcreteCollectionMap.get(clazz).createInstance();\n        } else {\n          rtn = MetaClass.create(clazz).createInstance();\n        }\n        Class <?> subType = clazz.getComponentType();\n        String[] strings = decodeArray(value);\n        for (String string : strings) {\n          if (subType == null) {\n            rtn.add(castWithoutKnowingType(string));\n          } else {\n            rtn.add(cast(string, subType));\n          }\n        }\n        return (E) rtn;\n      } else {\n        // We could not cast this object\n        return null;\n      }\n    }\n  }","commit_id":"681abfe6e96f3af72695146bb918cf5a2967276c","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"/**\n   * Decode an array encoded as a String. This entails a comma separated value enclosed in brackets\n   * or parentheses\n   * @param encoded The String encoded array\n   * @return A String array corresponding to the encoded array\n   */\n\tprivate static String[] decodeArray(String encoded){\n    if (encoded.length() == 0) return new String[]{};\n\t\tchar[] chars = encoded.trim().toCharArray();\n\n\t\t//--Parse the String\n\t\t//(state)\n\t\tchar quoteCloseChar = (char) 0;\n\t\tList<StringBuilder> terms = new LinkedList<StringBuilder>();\n\t\tStringBuilder current = new StringBuilder();\n\t\t//(start/stop overhead)\n\t\tint start = 0; int end = chars.length;\n\t\tif(chars[0] == '('){ start += 1; end -= 1; if(chars[end] != ')') throw new IllegalArgumentException(\"Unclosed paren in encoded array: \" + encoded); }\n\t\tif(chars[0] == '['){ start += 1; end -= 1; if(chars[end] != ']') throw new IllegalArgumentException(\"Unclosed bracket in encoded array: \" + encoded); }\n    if(chars[0] == '{'){ start += 1; end -= 1; if(chars[end] != '}') throw new IllegalArgumentException(\"Unclosed bracket in encoded array: \" + encoded); }\n\t\t//(finite state automata)\n\t\tfor(int i=start; i<end; i++){\n\t\t\tif(chars[i] == '\\\\'){\n\t\t\t\t//(case: escaped character)\n\t\t\t\tif(i == chars.length - 1) throw new IllegalArgumentException(\"Last character of encoded pair is escape character: \" + encoded);\n\t\t\t\tcurrent.append(chars[i+1]);\n\t\t\t\ti += 1;\n\t\t\t} else if(quoteCloseChar != 0){\n\t\t\t\t//(case: in quotes)\n\t\t\t\tif(chars[i] == quoteCloseChar){\n\t\t\t\t\tquoteCloseChar = (char) 0;\n\t\t\t\t}else{\n\t\t\t\t\tcurrent.append(chars[i]);\n\t\t\t\t}\n\t\t\t}else{\n\t\t\t\t//(case: normal)\n\t\t\t\tif(chars[i] == '\"'){\n          quoteCloseChar = '\"';\n\t\t\t\t} else if(chars[i] == '\\''){\n          quoteCloseChar = '\\'';\n\t\t\t\t} else if(chars[i] == ',' || chars[i] == ' ' || chars[i] == '\\t' || chars[i] == '\\n'){\n\t\t\t\t\t//break\n          if (current.length() > 0) {\n\t\t\t\t\t  terms.add(current);\n          }\n\t\t\t\t\tcurrent = new StringBuilder();\n\t\t\t\t}else{\n\t\t\t\t\tcurrent.append(chars[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t//--Return\n\t\tif(current.length() > 0) terms.add(current);\n\t\tString[] rtn = new String[terms.size()];\n\t\tint i=0;\n\t\tfor(StringBuilder b : terms){\n\t\t\trtn[i] = b.toString().trim();\n\t\t\ti += 1;\n\t\t}\n    return rtn;\n  }","id":16040,"modified_method":"/**\n   * Decode an array encoded as a String. This entails a comma separated value enclosed in brackets\n   * or parentheses\n   * @param encoded The String encoded array\n   * @return A String array corresponding to the encoded array\n   */\n\tprivate static String[] decodeArray(String encoded){\n    if (encoded.length() == 0) return new String[]{};\n\t\tchar[] chars = encoded.trim().toCharArray();\n\n\t\t//--Parse the String\n\t\t//(state)\n\t\tchar quoteCloseChar = (char) 0;\n\t\tList<StringBuilder> terms = new LinkedList<StringBuilder>();\n\t\tStringBuilder current = new StringBuilder();\n\t\t//(start/stop overhead)\n\t\tint start = 0; int end = chars.length;\n\t\tif(chars[0] == '('){ start += 1; end -= 1; if(chars[end] != ')') throw new IllegalArgumentException(\"Unclosed paren in encoded array: \" + encoded); }\n\t\tif(chars[0] == '['){ start += 1; end -= 1; if(chars[end] != ']') throw new IllegalArgumentException(\"Unclosed bracket in encoded array: \" + encoded); }\n    if(chars[0] == '{'){ start += 1; end -= 1; if(chars[end] != '}') throw new IllegalArgumentException(\"Unclosed bracket in encoded array: \" + encoded); }\n\t\t//(finite state automata)\n\t\tfor(int i=start; i<end; i++){\n\t\t\tif(chars[i] == '\\\\'){\n\t\t\t\t//(case: escaped character)\n\t\t\t\tif(i == chars.length - 1) throw new IllegalArgumentException(\"Last character of encoded pair is escape character: \" + encoded);\n\t\t\t\tcurrent.append(chars[i+1]);\n\t\t\t\ti += 1;\n\t\t\t} else if(quoteCloseChar != 0){\n\t\t\t\t//(case: in quotes)\n\t\t\t\tif(chars[i] == quoteCloseChar){\n\t\t\t\t\tquoteCloseChar = (char) 0;\n\t\t\t\t}else{\n\t\t\t\t\tcurrent.append(chars[i]);\n\t\t\t\t}\n\t\t\t}else{\n\t\t\t\t//(case: normal)\n\t\t\t\tif(chars[i] == '\"'){\n          quoteCloseChar = '\"';\n\t\t\t\t} else if(chars[i] == '\\''){\n          quoteCloseChar = '\\'';\n\t\t\t\t} else if(chars[i] == ',' || chars[i] == ';' || chars[i] == ' ' || chars[i] == '\\t' || chars[i] == '\\n'){\n\t\t\t\t\t//break\n          if (current.length() > 0) {\n\t\t\t\t\t  terms.add(current);\n          }\n\t\t\t\t\tcurrent = new StringBuilder();\n\t\t\t\t}else{\n\t\t\t\t\tcurrent.append(chars[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t//--Return\n\t\tif(current.length() > 0) terms.add(current);\n\t\tString[] rtn = new String[terms.size()];\n\t\tint i=0;\n\t\tfor(StringBuilder b : terms){\n\t\t\trtn[i] = b.toString().trim();\n\t\t\ti += 1;\n\t\t}\n    return rtn;\n  }","commit_id":"681abfe6e96f3af72695146bb918cf5a2967276c","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"/**\n   * Decode an array encoded as a String. This entails a comma separated value enclosed in brackets\n   * or parentheses\n   * @param encoded The String encoded array\n   * @return A String array corresponding to the encoded array\n   */\n\tprivate static String[] decodeArray(String encoded){\n    if (encoded.length() == 0) return new String[]{};\n\t\tchar[] chars = encoded.trim().toCharArray();\n\n\t\t//--Parse the String\n\t\t//(state)\n\t\tchar quoteCloseChar = (char) 0;\n\t\tList<StringBuilder> terms = new LinkedList<StringBuilder>();\n\t\tStringBuilder current = new StringBuilder();\n\t\t//(start/stop overhead)\n\t\tint start = 0; int end = chars.length;\n\t\tif(chars[0] == '('){ start += 1; end -= 1; if(chars[end] != ')') throw new IllegalArgumentException(\"Unclosed paren in encoded array: \" + encoded); }\n\t\tif(chars[0] == '['){ start += 1; end -= 1; if(chars[end] != ']') throw new IllegalArgumentException(\"Unclosed bracket in encoded array: \" + encoded); }\n    if(chars[0] == '{'){ start += 1; end -= 1; if(chars[end] != '}') throw new IllegalArgumentException(\"Unclosed bracket in encoded array: \" + encoded); }\n\t\t//(finite state automata)\n\t\tfor(int i=start; i<end; i++){\n\t\t\tif(chars[i] == '\\\\'){\n\t\t\t\t//(case: escaped character)\n\t\t\t\tif(i == chars.length - 1) throw new IllegalArgumentException(\"Last character of encoded pair is escape character: \" + encoded);\n\t\t\t\tcurrent.append(chars[i+1]);\n\t\t\t\ti += 1;\n\t\t\t} else if(quoteCloseChar != 0){\n\t\t\t\t//(case: in quotes)\n\t\t\t\tif(chars[i] == quoteCloseChar){\n\t\t\t\t\tquoteCloseChar = (char) 0;\n\t\t\t\t}else{\n\t\t\t\t\tcurrent.append(chars[i]);\n\t\t\t\t}\n\t\t\t}else{\n\t\t\t\t//(case: normal)\n\t\t\t\tif(chars[i] == '\"'){\n          quoteCloseChar = '\"';\n\t\t\t\t} else if(chars[i] == '\\''){\n          quoteCloseChar = '\\'';\n\t\t\t\t} else if(chars[i] == ',' || chars[i] == ' ' || chars[i] == '\\t' || chars[i] == '\\n'){\n\t\t\t\t\t//break\n          if (current.length() > 0) {\n\t\t\t\t\t  terms.add(current);\n          }\n\t\t\t\t\tcurrent = new StringBuilder();\n\t\t\t\t}else{\n\t\t\t\t\tcurrent.append(chars[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t//--Return\n\t\tif(current.length() > 0) terms.add(current);\n\t\tString[] rtn = new String[terms.size()];\n\t\tint i=0;\n\t\tfor(StringBuilder b : terms){\n\t\t\trtn[i] = b.toString().trim();\n\t\t\ti += 1;\n\t\t}\n    return rtn;\n  }","id":16041,"modified_method":"/**\n   * Decode an array encoded as a String. This entails a comma separated value enclosed in brackets\n   * or parentheses\n   * @param encoded The String encoded array\n   * @return A String array corresponding to the encoded array\n   */\n\tprivate static String[] decodeArray(String encoded){\n    if (encoded.length() == 0) return new String[]{};\n\t\tchar[] chars = encoded.trim().toCharArray();\n\n\t\t//--Parse the String\n\t\t//(state)\n\t\tchar quoteCloseChar = (char) 0;\n\t\tList<StringBuilder> terms = new LinkedList<StringBuilder>();\n\t\tStringBuilder current = new StringBuilder();\n\t\t//(start/stop overhead)\n\t\tint start = 0; int end = chars.length;\n\t\tif(chars[0] == '('){ start += 1; end -= 1; if(chars[end] != ')') throw new IllegalArgumentException(\"Unclosed paren in encoded array: \" + encoded); }\n\t\tif(chars[0] == '['){ start += 1; end -= 1; if(chars[end] != ']') throw new IllegalArgumentException(\"Unclosed bracket in encoded array: \" + encoded); }\n    if(chars[0] == '{'){ start += 1; end -= 1; if(chars[end] != '}') throw new IllegalArgumentException(\"Unclosed bracket in encoded array: \" + encoded); }\n\t\t//(finite state automata)\n\t\tfor(int i=start; i<end; i++){\n\t\t\tif(chars[i] == '\\\\'){\n\t\t\t\t//(case: escaped character)\n\t\t\t\tif(i == chars.length - 1) throw new IllegalArgumentException(\"Last character of encoded pair is escape character: \" + encoded);\n\t\t\t\tcurrent.append(chars[i+1]);\n\t\t\t\ti += 1;\n\t\t\t} else if(quoteCloseChar != 0){\n\t\t\t\t//(case: in quotes)\n\t\t\t\tif(chars[i] == quoteCloseChar){\n\t\t\t\t\tquoteCloseChar = (char) 0;\n\t\t\t\t}else{\n\t\t\t\t\tcurrent.append(chars[i]);\n\t\t\t\t}\n\t\t\t}else{\n\t\t\t\t//(case: normal)\n\t\t\t\tif(chars[i] == '\"'){\n          quoteCloseChar = '\"';\n\t\t\t\t} else if(chars[i] == '\\''){\n          quoteCloseChar = '\\'';\n\t\t\t\t} else if(chars[i] == ',' || chars[i] == ';' || chars[i] == ' ' || chars[i] == '\\t' || chars[i] == '\\n'){\n\t\t\t\t\t//break\n          if (current.length() > 0) {\n\t\t\t\t\t  terms.add(current);\n          }\n\t\t\t\t\tcurrent = new StringBuilder();\n\t\t\t\t}else{\n\t\t\t\t\tcurrent.append(chars[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t//--Return\n\t\tif(current.length() > 0) terms.add(current);\n\t\tString[] rtn = new String[terms.size()];\n\t\tint i=0;\n\t\tfor(StringBuilder b : terms){\n\t\t\trtn[i] = b.toString().trim();\n\t\t\ti += 1;\n\t\t}\n    return rtn;\n  }","commit_id":"0f1ed2cde7836d3b99487092a38d4217be70abf4","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"/**\n   * Cast a String representation of an object into that object.\n   * E.g. \"5.4\" will be cast to a Double; \"[1,2,3]\" will be cast\n   * to an Integer[].\n   *\n   * NOTE: Date parses from a Long\n   *\n   * @param <E> The type of the object returned (same as type)\n   * @param value The string representation of the object\n   * @param type The type (usually class) to be returned (same as E)\n   * @return An object corresponding to the String value passed\n   */\n  @SuppressWarnings({ \"unchecked\", \"rawtypes\" })\n  public static final <E> E cast(String value, Type type){\n    //--Get Type\n    Class <?> clazz = null;\n    Type[] params = null;\n    if(type instanceof Class){\n      clazz = (Class <?>) type;\n    }else if(type instanceof ParameterizedType){\n      ParameterizedType pt = (ParameterizedType) type;\n      params = pt.getActualTypeArguments();\n      clazz = (Class <?>) pt.getRawType();\n    }else{\n      clazz = type2class(type);\n      throw new IllegalArgumentException(\"Cannot cast to type (unhandled type): \" + type);\n    }\n    //--Cast\n    if(String.class.isAssignableFrom(clazz)){\n      // (case: String)\n      return (E) value;\n    }else if(Boolean.class.isAssignableFrom(clazz) || boolean.class.isAssignableFrom(clazz)){\n      //(case: boolean)\n      if(\"1\".equals(value)){ return (E) new Boolean(true); }\n      return (E) new Boolean( Boolean.parseBoolean(value) );\n    }else if(Integer.class.isAssignableFrom(clazz) || int.class.isAssignableFrom(clazz)){\n      //(case: integer)\n      try {\n        return (E) new Integer(Integer.parseInt(value));\n      } catch (NumberFormatException e) {\n        return (E) new Integer((int) Double.parseDouble(value));\n      }\n    }else if(Long.class.isAssignableFrom(clazz) || long.class.isAssignableFrom(clazz)){\n      //(case: long)\n      try {\n        return (E) new Long(Long.parseLong(value));\n      } catch (NumberFormatException e) {\n        return (E) new Long((long) Double.parseDouble(value));\n      }\n    }else if(Float.class.isAssignableFrom(clazz) || float.class.isAssignableFrom(clazz)){\n      //(case: float)\n      if(value == null){ return (E) new Float(Float.NaN); }\n      return (E) new Float(Float.parseFloat(value));\n    }else if(Double.class.isAssignableFrom(clazz) || double.class.isAssignableFrom(clazz)){\n      //(case: double)\n      if(value == null){ return (E) new Double(Double.NaN); }\n      return (E) new Double(Double.parseDouble(value));\n    }else if(Short.class.isAssignableFrom(clazz) || short.class.isAssignableFrom(clazz)){\n      //(case: short)\n      try {\n        return (E) new Short(Short.parseShort(value));\n      } catch (NumberFormatException e) {\n        return (E) new Short((short) Double.parseDouble(value));\n      }\n    }else if(Byte.class.isAssignableFrom(clazz) || byte.class.isAssignableFrom(clazz)){\n      //(case: byte)\n      try {\n        return (E) new Byte(Byte.parseByte(value));\n      } catch (NumberFormatException e) {\n        return (E) new Byte((byte) Double.parseDouble(value));\n      }\n    }else if(Character.class.isAssignableFrom(clazz) || char.class.isAssignableFrom(clazz)){\n      //(case: char)\n      return (E) new Character((char) Integer.parseInt(value));\n    }else if(java.util.Date.class.isAssignableFrom(clazz)){\n      //(case: date)\n      try {\n        return (E) new Date(Long.parseLong(value));\n      } catch (NumberFormatException e) {\n        return null;\n      }\n    } else if(java.util.Calendar.class.isAssignableFrom(clazz)){\n      //(case: date)\n      try {\n        Date d = new Date(Long.parseLong(value));\n        GregorianCalendar cal = new GregorianCalendar();\n        cal.setTime(d);\n        return (E) cal;\n      } catch (NumberFormatException e) {\n        return null;\n      }\n    } else if(File.class.isAssignableFrom(clazz)){\n      return (E) new File(value);\n    } else if(Class.class.isAssignableFrom(clazz)){\n      try {\n        return (E) Class.forName(value);\n      } catch (ClassNotFoundException e) {\n        return null;\n      }\n    } else if(clazz.isArray()){\n      if(value == null){ return null; }\n      Class <?> subType = clazz.getComponentType();\n      // (case: array)\n      String[] strings = decodeArray(value);\n      Object[] array = (Object[]) Array.newInstance(clazz.getComponentType(), strings.length);\n      for(int i=0; i<strings.length; i++){\n        array[i] = cast(strings[i], subType);\n      }\n      return (E) array;\n    } else if(clazz.isEnum()){\n      // (case: enumeration)\n      Class c = (Class) clazz;\n      if(value == null){ return null; }\n      if (value.charAt(0) == '\"') value = value.substring(1);\n      if (value.charAt(value.length()-1) == '\"') value = value.substring(0, value.length() - 1);\n      try {\n        return (E) Enum.valueOf(c, value);\n      } catch (Exception e){\n        try {\n          return (E) Enum.valueOf(c, value.toLowerCase());\n        } catch (Exception e2){\n          try {\n            return (E) Enum.valueOf(c, value.toUpperCase());\n          } catch (Exception e3){\n            return (E) Enum.valueOf(c,\n                (Character.isUpperCase(value.charAt(0)) ? Character.toLowerCase(value.charAt(0)) : Character.toUpperCase(value.charAt(0))) +\n                    value.substring(1));\n          }\n        }\n      }\n    } else if (ObjectOutputStream.class.isAssignableFrom(clazz)) {\n      // (case: object output stream)\n      try {\n        return (E) new ObjectOutputStream((OutputStream) cast(value, OutputStream.class));\n      } catch (IOException e) {\n        throw new RuntimeException(e);\n      }\n    } else if (ObjectInputStream.class.isAssignableFrom(clazz)) {\n      // (case: object input stream)\n      try {\n        return (E) new ObjectInputStream((InputStream) cast(value, InputStream.class));\n      } catch (IOException e) {\n        throw new RuntimeException(e);\n      }\n    } else if (OutputStream.class.isAssignableFrom(clazz)) {\n      // (case: output stream)\n      if (value.equalsIgnoreCase(\"stdout\") || value.equalsIgnoreCase(\"out\")) { return (E) System.out; }\n      if (value.equalsIgnoreCase(\"stderr\") || value.equalsIgnoreCase(\"err\")) { return (E) System.err; }\n      File toWriteTo = cast(value, File.class);\n      try {\n        if (!toWriteTo.exists() && !toWriteTo.createNewFile()) {\n          throw new IllegalStateException(\"Could not create output stream (cannot write file): \" + value);\n        }\n        return (E) new FileOutputStream((File) cast(value, File.class));\n      } catch (IOException e) {\n        throw new RuntimeException(e);\n      }\n    } else if (InputStream.class.isAssignableFrom(clazz)) {\n      // (case: input stream)\n      if (value.equalsIgnoreCase(\"stdin\") || value.equalsIgnoreCase(\"in\")) { return (E) System.in; }\n      File toReadFrom = cast(value, File.class);\n      try {\n        if (!toReadFrom.exists() || !toReadFrom.canRead()) {\n          throw new IllegalStateException(\"Could not create input stream (cannot read file): \" + value);\n        }\n        return (E) new FileInputStream((File) cast(value, File.class));\n      } catch (IOException e) {\n        throw new RuntimeException(e);\n      }\n    } else {\n      try {\n        // (case: can parse from string)\n        Method decode = clazz.getMethod(\"fromString\", String.class);\n        return (E) decode.invoke(MetaClass.create(clazz), value);\n      } catch (NoSuchMethodException e) {  // Silent errors for misc failures\n      } catch (InvocationTargetException e) {\n      } catch (IllegalAccessException e) {\n      } catch (ClassCastException e) {\n      }\n\n      // Pass 2: Guess what the object could be\n      if (Tree.class.isAssignableFrom(clazz)) {\n        // (case: reading a tree)\n        try {\n          return (E) new PennTreeReader(new StringReader(value), new LabeledScoredTreeFactory(CoreLabel.factory())).readTree();\n        } catch (IOException e) {\n          throw new RuntimeException(e);\n        }\n      } else if (Collection.class.isAssignableFrom(clazz)) {\n        // (case: reading a collection)\n        Collection rtn;\n        if (Modifier.isAbstract(clazz.getModifiers())) {\n          rtn = abstractToConcreteCollectionMap.get(clazz).createInstance();\n        } else {\n          rtn = MetaClass.create(clazz).createInstance();\n        }\n        Class <?> subType = clazz.getComponentType();\n        String[] strings = decodeArray(value);\n        for (String string : strings) {\n          if (subType == null) {\n            rtn.add(castWithoutKnowingType(string));\n          } else {\n            rtn.add(cast(string, subType));\n          }\n        }\n        return (E) rtn;\n      } else {\n        // We could not cast this object\n        return null;\n      }\n    }\n  }","id":16042,"modified_method":"/**\n   * Cast a String representation of an object into that object.\n   * E.g. \"5.4\" will be cast to a Double; \"[1,2,3]\" will be cast\n   * to an Integer[].\n   *\n   * NOTE: Date parses from a Long\n   *\n   * @param <E> The type of the object returned (same as type)\n   * @param value The string representation of the object\n   * @param type The type (usually class) to be returned (same as E)\n   * @return An object corresponding to the String value passed\n   */\n  @SuppressWarnings({ \"unchecked\", \"rawtypes\" })\n  public static <E> E cast(String value, Type type){\n    //--Get Type\n    Class <?> clazz;\n    if(type instanceof Class){\n      clazz = (Class <?>) type;\n    }else if(type instanceof ParameterizedType){\n      ParameterizedType pt = (ParameterizedType) type;\n      clazz = (Class <?>) pt.getRawType();\n    }else{\n      throw new IllegalArgumentException(\"Cannot cast to type (unhandled type): \" + type);\n    }\n    //--Cast\n    if(String.class.isAssignableFrom(clazz)){\n      // (case: String)\n      return (E) value;\n    }else if(Boolean.class.isAssignableFrom(clazz) || boolean.class.isAssignableFrom(clazz)){\n      //(case: boolean)\n      if(\"1\".equals(value)){ return (E) Boolean.TRUE; }\n      return (E) Boolean.valueOf(Boolean.parseBoolean(value));\n    }else if(Integer.class.isAssignableFrom(clazz) || int.class.isAssignableFrom(clazz)){\n      //(case: integer)\n      try {\n        return (E) new Integer(Integer.parseInt(value));\n      } catch (NumberFormatException e) {\n        return (E) new Integer((int) Double.parseDouble(value));\n      }\n    }else if(Long.class.isAssignableFrom(clazz) || long.class.isAssignableFrom(clazz)){\n      //(case: long)\n      try {\n        return (E) new Long(Long.parseLong(value));\n      } catch (NumberFormatException e) {\n        return (E) new Long((long) Double.parseDouble(value));\n      }\n    }else if(Float.class.isAssignableFrom(clazz) || float.class.isAssignableFrom(clazz)){\n      //(case: float)\n      if(value == null){ return (E) new Float(Float.NaN); }\n      return (E) new Float(Float.parseFloat(value));\n    }else if(Double.class.isAssignableFrom(clazz) || double.class.isAssignableFrom(clazz)){\n      //(case: double)\n      if(value == null){ return (E) new Double(Double.NaN); }\n      return (E) new Double(Double.parseDouble(value));\n    }else if(Short.class.isAssignableFrom(clazz) || short.class.isAssignableFrom(clazz)){\n      //(case: short)\n      try {\n        return (E) new Short(Short.parseShort(value));\n      } catch (NumberFormatException e) {\n        return (E) new Short((short) Double.parseDouble(value));\n      }\n    }else if(Byte.class.isAssignableFrom(clazz) || byte.class.isAssignableFrom(clazz)){\n      //(case: byte)\n      try {\n        return (E) new Byte(Byte.parseByte(value));\n      } catch (NumberFormatException e) {\n        return (E) new Byte((byte) Double.parseDouble(value));\n      }\n    }else if(Character.class.isAssignableFrom(clazz) || char.class.isAssignableFrom(clazz)){\n      //(case: char)\n      return (E) new Character((char) Integer.parseInt(value));\n    }else if(java.util.Date.class.isAssignableFrom(clazz)){\n      //(case: date)\n      try {\n        return (E) new Date(Long.parseLong(value));\n      } catch (NumberFormatException e) {\n        return null;\n      }\n    } else if(java.util.Calendar.class.isAssignableFrom(clazz)){\n      //(case: date)\n      try {\n        Date d = new Date(Long.parseLong(value));\n        GregorianCalendar cal = new GregorianCalendar();\n        cal.setTime(d);\n        return (E) cal;\n      } catch (NumberFormatException e) {\n        return null;\n      }\n    } else if(File.class.isAssignableFrom(clazz)){\n      return (E) new File(value);\n    } else if(Class.class.isAssignableFrom(clazz)){\n      try {\n        return (E) Class.forName(value);\n      } catch (ClassNotFoundException e) {\n        return null;\n      }\n    } else if(clazz.isArray()){\n      if(value == null){ return null; }\n      Class <?> subType = clazz.getComponentType();\n      // (case: array)\n      String[] strings = decodeArray(value);\n      Object[] array = (Object[]) Array.newInstance(clazz.getComponentType(), strings.length);\n      for(int i=0; i<strings.length; i++){\n        array[i] = cast(strings[i], subType);\n      }\n      return (E) array;\n    } else if (Map.class.isAssignableFrom(clazz)) {\n      return (E) decodeMap(value);\n    } else if(clazz.isEnum()){\n      // (case: enumeration)\n      Class c = (Class) clazz;\n      if(value == null){ return null; }\n      if (value.charAt(0) == '\"') value = value.substring(1);\n      if (value.charAt(value.length()-1) == '\"') value = value.substring(0, value.length() - 1);\n      try {\n        return (E) Enum.valueOf(c, value);\n      } catch (Exception e){\n        try {\n          return (E) Enum.valueOf(c, value.toLowerCase());\n        } catch (Exception e2){\n          try {\n            return (E) Enum.valueOf(c, value.toUpperCase());\n          } catch (Exception e3){\n            return (E) Enum.valueOf(c,\n                (Character.isUpperCase(value.charAt(0)) ? Character.toLowerCase(value.charAt(0)) : Character.toUpperCase(value.charAt(0))) +\n                    value.substring(1));\n          }\n        }\n      }\n    } else if (ObjectOutputStream.class.isAssignableFrom(clazz)) {\n      // (case: object output stream)\n      try {\n        return (E) new ObjectOutputStream((OutputStream) cast(value, OutputStream.class));\n      } catch (IOException e) {\n        throw new RuntimeException(e);\n      }\n    } else if (ObjectInputStream.class.isAssignableFrom(clazz)) {\n      // (case: object input stream)\n      try {\n        return (E) new ObjectInputStream((InputStream) cast(value, InputStream.class));\n      } catch (IOException e) {\n        throw new RuntimeException(e);\n      }\n    } else if (OutputStream.class.isAssignableFrom(clazz)) {\n      // (case: output stream)\n      if (value.equalsIgnoreCase(\"stdout\") || value.equalsIgnoreCase(\"out\")) { return (E) System.out; }\n      if (value.equalsIgnoreCase(\"stderr\") || value.equalsIgnoreCase(\"err\")) { return (E) System.err; }\n      File toWriteTo = cast(value, File.class);\n      try {\n        if (!toWriteTo.exists() && !toWriteTo.createNewFile()) {\n          throw new IllegalStateException(\"Could not create output stream (cannot write file): \" + value);\n        }\n        return (E) new FileOutputStream((File) cast(value, File.class));\n      } catch (IOException e) {\n        throw new RuntimeException(e);\n      }\n    } else if (InputStream.class.isAssignableFrom(clazz)) {\n      // (case: input stream)\n      if (value.equalsIgnoreCase(\"stdin\") || value.equalsIgnoreCase(\"in\")) { return (E) System.in; }\n      File toReadFrom = cast(value, File.class);\n      try {\n        if (!toReadFrom.exists() || !toReadFrom.canRead()) {\n          throw new IllegalStateException(\"Could not create input stream (cannot read file): \" + value);\n        }\n        return (E) new FileInputStream((File) cast(value, File.class));\n      } catch (IOException e) {\n        throw new RuntimeException(e);\n      }\n    } else {\n      try {\n        // (case: can parse from string)\n        Method decode = clazz.getMethod(\"fromString\", String.class);\n        return (E) decode.invoke(MetaClass.create(clazz), value);\n      } catch (NoSuchMethodException e) {  // Silent errors for misc failures\n      } catch (InvocationTargetException e) {\n      } catch (IllegalAccessException e) {\n      } catch (ClassCastException e) {\n      }\n\n      // Pass 2: Guess what the object could be\n      if (Tree.class.isAssignableFrom(clazz)) {\n        // (case: reading a tree)\n        try {\n          return (E) new PennTreeReader(new StringReader(value), new LabeledScoredTreeFactory(CoreLabel.factory())).readTree();\n        } catch (IOException e) {\n          throw new RuntimeException(e);\n        }\n      } else if (Collection.class.isAssignableFrom(clazz)) {\n        // (case: reading a collection)\n        Collection rtn;\n        if (Modifier.isAbstract(clazz.getModifiers())) {\n          rtn = abstractToConcreteCollectionMap.get(clazz).createInstance();\n        } else {\n          rtn = MetaClass.create(clazz).createInstance();\n        }\n        Class <?> subType = clazz.getComponentType();\n        String[] strings = decodeArray(value);\n        for (String string : strings) {\n          if (subType == null) {\n            rtn.add(castWithoutKnowingType(string));\n          } else {\n            rtn.add(cast(string, subType));\n          }\n        }\n        return (E) rtn;\n      } else {\n        // We could not cast this object\n        return null;\n      }\n    }\n  }","commit_id":"0f1ed2cde7836d3b99487092a38d4217be70abf4","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"@Test\n  public void testCastArray() {\n    Integer[] ints1 = MetaClass.cast(\"[1,2,3]\", Integer[].class);\n    assertArrayEquals(new Integer[]{1,2,3}, ints1);\n    Integer[] ints2 = MetaClass.cast(\"(1,2,3)\", Integer[].class);\n    assertArrayEquals(new Integer[]{1,2,3}, ints2);\n    Integer[] ints3 = MetaClass.cast(\"1, 2, 3\", Integer[].class);\n    assertArrayEquals(new Integer[]{1,2,3}, ints3);\n    Integer[] ints4 = MetaClass.cast(\"1 2 3\", Integer[].class);\n    assertArrayEquals(new Integer[]{1,2,3}, ints4);\n    Integer[] ints5 = MetaClass.cast(\"1   2   3\", Integer[].class);\n    assertArrayEquals(new Integer[]{1,2,3}, ints5);\n\n    Integer[] intsEmpty = MetaClass.cast(\"\", Integer[].class);\n    assertArrayEquals(new Integer[]{}, intsEmpty);\n  }","id":16043,"modified_method":"@Test\n  public void testCastArray() {\n    Integer[] ints1 = MetaClass.cast(\"[1,2,3]\", Integer[].class);\n    assertArrayEquals(new Integer[]{1,2,3}, ints1);\n    Integer[] ints2 = MetaClass.cast(\"(1,2,3)\", Integer[].class);\n    assertArrayEquals(new Integer[]{1,2,3}, ints2);\n    Integer[] ints3 = MetaClass.cast(\"1, 2, 3\", Integer[].class);\n    assertArrayEquals(new Integer[]{1,2,3}, ints3);\n    Integer[] ints4 = MetaClass.cast(\"1 2 3\", Integer[].class);\n    assertArrayEquals(new Integer[]{1,2,3}, ints4);\n    Integer[] ints5 = MetaClass.cast(\"1   2   3\", Integer[].class);\n    assertArrayEquals(new Integer[]{1,2,3}, ints5);\n    Integer[] ints6 = MetaClass.cast(\"\\n1 \\n\\n  2   3\", Integer[].class);\n    assertArrayEquals(new Integer[]{1,2,3}, ints6);\n\n    Integer[] intsEmpty = MetaClass.cast(\"\", Integer[].class);\n    assertArrayEquals(new Integer[]{}, intsEmpty);\n  }","commit_id":"0f1ed2cde7836d3b99487092a38d4217be70abf4","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"/**\n   * Cast a String representation of an object into that object.\n   * E.g. \"5.4\" will be cast to a Double; \"[1,2,3]\" will be cast\n   * to an Integer[].\n   *\n   * NOTE: Date parses from a Long\n   *\n   * @param <E> The type of the object returned (same as type)\n   * @param value The string representation of the object\n   * @param type The type (usually class) to be returned (same as E)\n   * @return An object corresponding to the String value passed\n   */\n  @SuppressWarnings({ \"unchecked\", \"rawtypes\" })\n  public static final <E> E cast(String value, Type type){\n    //--Get Type\n    Class <?> clazz = null;\n    Type[] params = null;\n    if(type instanceof Class){\n      clazz = (Class <?>) type;\n    }else if(type instanceof ParameterizedType){\n      ParameterizedType pt = (ParameterizedType) type;\n      params = pt.getActualTypeArguments();\n      clazz = (Class <?>) pt.getRawType();\n    }else{\n      clazz = type2class(type);\n      throw new IllegalArgumentException(\"Cannot cast to type (unhandled type): \" + type);\n    }\n    //--Cast\n    if(String.class.isAssignableFrom(clazz)){\n      // (case: String)\n      return (E) value;\n    }else if(Boolean.class.isAssignableFrom(clazz) || boolean.class.isAssignableFrom(clazz)){\n      //(case: boolean)\n      if(\"1\".equals(value)){ return (E) new Boolean(true); }\n      return (E) new Boolean( Boolean.parseBoolean(value) );\n    }else if(Integer.class.isAssignableFrom(clazz) || int.class.isAssignableFrom(clazz)){\n      //(case: integer)\n      try {\n        return (E) new Integer(Integer.parseInt(value));\n      } catch (NumberFormatException e) {\n        return (E) new Integer((int) Double.parseDouble(value));\n      }\n    }else if(Long.class.isAssignableFrom(clazz) || long.class.isAssignableFrom(clazz)){\n      //(case: long)\n      try {\n        return (E) new Long(Long.parseLong(value));\n      } catch (NumberFormatException e) {\n        return (E) new Long((long) Double.parseDouble(value));\n      }\n    }else if(Float.class.isAssignableFrom(clazz) || float.class.isAssignableFrom(clazz)){\n      //(case: float)\n      if(value == null){ return (E) new Float(Float.NaN); }\n      return (E) new Float(Float.parseFloat(value));\n    }else if(Double.class.isAssignableFrom(clazz) || double.class.isAssignableFrom(clazz)){\n      //(case: double)\n      if(value == null){ return (E) new Double(Double.NaN); }\n      return (E) new Double(Double.parseDouble(value));\n    }else if(Short.class.isAssignableFrom(clazz) || short.class.isAssignableFrom(clazz)){\n      //(case: short)\n      try {\n        return (E) new Short(Short.parseShort(value));\n      } catch (NumberFormatException e) {\n        return (E) new Short((short) Double.parseDouble(value));\n      }\n    }else if(Byte.class.isAssignableFrom(clazz) || byte.class.isAssignableFrom(clazz)){\n      //(case: byte)\n      try {\n        return (E) new Byte(Byte.parseByte(value));\n      } catch (NumberFormatException e) {\n        return (E) new Byte((byte) Double.parseDouble(value));\n      }\n    }else if(Character.class.isAssignableFrom(clazz) || char.class.isAssignableFrom(clazz)){\n      //(case: char)\n      return (E) new Character((char) Integer.parseInt(value));\n    }else if(java.util.Date.class.isAssignableFrom(clazz)){\n      //(case: date)\n      try {\n        return (E) new Date(Long.parseLong(value));\n      } catch (NumberFormatException e) {\n        return null;\n      }\n    } else if(java.util.Calendar.class.isAssignableFrom(clazz)){\n      //(case: date)\n      try {\n        Date d = new Date(Long.parseLong(value));\n        GregorianCalendar cal = new GregorianCalendar();\n        cal.setTime(d);\n        return (E) cal;\n      } catch (NumberFormatException e) {\n        return null;\n      }\n    } else if(File.class.isAssignableFrom(clazz)){\n      return (E) new File(value);\n    } else if(Class.class.isAssignableFrom(clazz)){\n      try {\n        return (E) Class.forName(value);\n      } catch (ClassNotFoundException e) {\n        return null;\n      }\n    } else if(clazz.isArray()){\n      if(value == null){ return null; }\n      Class <?> subType = clazz.getComponentType();\n      // (case: array)\n      String[] strings = decodeArray(value);\n      Object[] array = (Object[]) Array.newInstance(clazz.getComponentType(), strings.length);\n      for(int i=0; i<strings.length; i++){\n        array[i] = cast(strings[i], subType);\n      }\n      return (E) array;\n    } else if(clazz.isEnum()){\n      // (case: enumeration)\n      Class c = (Class) clazz;\n      if(value == null){ return null; }\n      if (value.charAt(0) == '\"') value = value.substring(1);\n      if (value.charAt(value.length()-1) == '\"') value = value.substring(0, value.length() - 1);\n      try {\n        return (E) Enum.valueOf(c, value);\n      } catch (Exception e){\n        try {\n          return (E) Enum.valueOf(c, value.toLowerCase());\n        } catch (Exception e2){\n          try {\n            return (E) Enum.valueOf(c, value.toUpperCase());\n          } catch (Exception e3){\n            return (E) Enum.valueOf(c,\n                (Character.isUpperCase(value.charAt(0)) ? Character.toLowerCase(value.charAt(0)) : Character.toUpperCase(value.charAt(0))) +\n                    value.substring(1));\n          }\n        }\n      }\n    } else if (ObjectOutputStream.class.isAssignableFrom(clazz)) {\n      // (case: object output stream)\n      try {\n        return (E) new ObjectOutputStream((OutputStream) cast(value, OutputStream.class));\n      } catch (IOException e) {\n        throw new RuntimeException(e);\n      }\n    } else if (ObjectInputStream.class.isAssignableFrom(clazz)) {\n      // (case: object input stream)\n      try {\n        return (E) new ObjectInputStream((InputStream) cast(value, InputStream.class));\n      } catch (IOException e) {\n        throw new RuntimeException(e);\n      }\n    } else if (OutputStream.class.isAssignableFrom(clazz)) {\n      // (case: output stream)\n      if (value.equalsIgnoreCase(\"stdout\") || value.equalsIgnoreCase(\"out\")) { return (E) System.out; }\n      if (value.equalsIgnoreCase(\"stderr\") || value.equalsIgnoreCase(\"err\")) { return (E) System.err; }\n      File toWriteTo = cast(value, File.class);\n      try {\n        if (!toWriteTo.exists() && !toWriteTo.createNewFile()) {\n          throw new IllegalStateException(\"Could not create output stream (cannot write file): \" + value);\n        }\n        return (E) new FileOutputStream((File) cast(value, File.class));\n      } catch (IOException e) {\n        throw new RuntimeException(e);\n      }\n    } else if (InputStream.class.isAssignableFrom(clazz)) {\n      // (case: input stream)\n      if (value.equalsIgnoreCase(\"stdin\") || value.equalsIgnoreCase(\"in\")) { return (E) System.in; }\n      File toReadFrom = cast(value, File.class);\n      try {\n        if (!toReadFrom.exists() || !toReadFrom.canRead()) {\n          throw new IllegalStateException(\"Could not create input stream (cannot read file): \" + value);\n        }\n        return (E) new FileInputStream((File) cast(value, File.class));\n      } catch (IOException e) {\n        throw new RuntimeException(e);\n      }\n    } else {\n      try {\n        // (case: can parse from string)\n        Method decode = clazz.getMethod(\"fromString\", String.class);\n        return (E) decode.invoke(MetaClass.create(clazz), value);\n      } catch (NoSuchMethodException e) {  // Silent errors for misc failures\n      } catch (InvocationTargetException e) {\n      } catch (IllegalAccessException e) {\n      } catch (ClassCastException e) {\n      }\n\n      // Pass 2: Guess what the object could be\n      if (Tree.class.isAssignableFrom(clazz)) {\n        // (case: reading a tree)\n        try {\n          return (E) new PennTreeReader(new StringReader(value), new LabeledScoredTreeFactory(CoreLabel.factory())).readTree();\n        } catch (IOException e) {\n          throw new RuntimeException(e);\n        }\n      } else if (Collection.class.isAssignableFrom(clazz)) {\n        // (case: reading a collection)\n        Collection rtn;\n        if (Modifier.isAbstract(clazz.getModifiers())) {\n          rtn = abstractToConcreteCollectionMap.get(clazz).createInstance();\n        } else {\n          rtn = MetaClass.create(clazz).createInstance();\n        }\n        Class <?> subType = clazz.getComponentType();\n        String[] strings = decodeArray(value);\n        for (String string : strings) {\n          if (subType == null) {\n            rtn.add(castWithoutKnowingType(string));\n          } else {\n            rtn.add(cast(string, subType));\n          }\n        }\n        return (E) rtn;\n      } else {\n        // We could not cast this object\n        return null;\n      }\n    }\n  }","id":16044,"modified_method":"/**\n   * Cast a String representation of an object into that object.\n   * E.g. \"5.4\" will be cast to a Double; \"[1,2,3]\" will be cast\n   * to an Integer[].\n   *\n   * NOTE: Date parses from a Long\n   *\n   * @param <E> The type of the object returned (same as type)\n   * @param value The string representation of the object\n   * @param type The type (usually class) to be returned (same as E)\n   * @return An object corresponding to the String value passed\n   */\n  @SuppressWarnings({ \"unchecked\", \"rawtypes\" })\n  public static <E> E cast(String value, Type type){\n    //--Get Type\n    Class <?> clazz;\n    if(type instanceof Class){\n      clazz = (Class <?>) type;\n    }else if(type instanceof ParameterizedType){\n      ParameterizedType pt = (ParameterizedType) type;\n      clazz = (Class <?>) pt.getRawType();\n    }else{\n      throw new IllegalArgumentException(\"Cannot cast to type (unhandled type): \" + type);\n    }\n    //--Cast\n    if(String.class.isAssignableFrom(clazz)){\n      // (case: String)\n      return (E) value;\n    }else if(Boolean.class.isAssignableFrom(clazz) || boolean.class.isAssignableFrom(clazz)){\n      //(case: boolean)\n      if(\"1\".equals(value)){ return (E) Boolean.TRUE; }\n      return (E) Boolean.valueOf(Boolean.parseBoolean(value));\n    }else if(Integer.class.isAssignableFrom(clazz) || int.class.isAssignableFrom(clazz)){\n      //(case: integer)\n      try {\n        return (E) new Integer(Integer.parseInt(value));\n      } catch (NumberFormatException e) {\n        return (E) new Integer((int) Double.parseDouble(value));\n      }\n    }else if(Long.class.isAssignableFrom(clazz) || long.class.isAssignableFrom(clazz)){\n      //(case: long)\n      try {\n        return (E) new Long(Long.parseLong(value));\n      } catch (NumberFormatException e) {\n        return (E) new Long((long) Double.parseDouble(value));\n      }\n    }else if(Float.class.isAssignableFrom(clazz) || float.class.isAssignableFrom(clazz)){\n      //(case: float)\n      if(value == null){ return (E) new Float(Float.NaN); }\n      return (E) new Float(Float.parseFloat(value));\n    }else if(Double.class.isAssignableFrom(clazz) || double.class.isAssignableFrom(clazz)){\n      //(case: double)\n      if(value == null){ return (E) new Double(Double.NaN); }\n      return (E) new Double(Double.parseDouble(value));\n    }else if(Short.class.isAssignableFrom(clazz) || short.class.isAssignableFrom(clazz)){\n      //(case: short)\n      try {\n        return (E) new Short(Short.parseShort(value));\n      } catch (NumberFormatException e) {\n        return (E) new Short((short) Double.parseDouble(value));\n      }\n    }else if(Byte.class.isAssignableFrom(clazz) || byte.class.isAssignableFrom(clazz)){\n      //(case: byte)\n      try {\n        return (E) new Byte(Byte.parseByte(value));\n      } catch (NumberFormatException e) {\n        return (E) new Byte((byte) Double.parseDouble(value));\n      }\n    }else if(Character.class.isAssignableFrom(clazz) || char.class.isAssignableFrom(clazz)){\n      //(case: char)\n      return (E) new Character((char) Integer.parseInt(value));\n    }else if(java.util.Date.class.isAssignableFrom(clazz)){\n      //(case: date)\n      try {\n        return (E) new Date(Long.parseLong(value));\n      } catch (NumberFormatException e) {\n        return null;\n      }\n    } else if(java.util.Calendar.class.isAssignableFrom(clazz)){\n      //(case: date)\n      try {\n        Date d = new Date(Long.parseLong(value));\n        GregorianCalendar cal = new GregorianCalendar();\n        cal.setTime(d);\n        return (E) cal;\n      } catch (NumberFormatException e) {\n        return null;\n      }\n    } else if(File.class.isAssignableFrom(clazz)){\n      return (E) new File(value);\n    } else if(Class.class.isAssignableFrom(clazz)){\n      try {\n        return (E) Class.forName(value);\n      } catch (ClassNotFoundException e) {\n        return null;\n      }\n    } else if(clazz.isArray()){\n      if(value == null){ return null; }\n      Class <?> subType = clazz.getComponentType();\n      // (case: array)\n      String[] strings = decodeArray(value);\n      Object[] array = (Object[]) Array.newInstance(clazz.getComponentType(), strings.length);\n      for(int i=0; i<strings.length; i++){\n        array[i] = cast(strings[i], subType);\n      }\n      return (E) array;\n    } else if (Map.class.isAssignableFrom(clazz)) {\n      return (E) decodeMap(value);\n    } else if(clazz.isEnum()){\n      // (case: enumeration)\n      Class c = (Class) clazz;\n      if(value == null){ return null; }\n      if (value.charAt(0) == '\"') value = value.substring(1);\n      if (value.charAt(value.length()-1) == '\"') value = value.substring(0, value.length() - 1);\n      try {\n        return (E) Enum.valueOf(c, value);\n      } catch (Exception e){\n        try {\n          return (E) Enum.valueOf(c, value.toLowerCase());\n        } catch (Exception e2){\n          try {\n            return (E) Enum.valueOf(c, value.toUpperCase());\n          } catch (Exception e3){\n            return (E) Enum.valueOf(c,\n                (Character.isUpperCase(value.charAt(0)) ? Character.toLowerCase(value.charAt(0)) : Character.toUpperCase(value.charAt(0))) +\n                    value.substring(1));\n          }\n        }\n      }\n    } else if (ObjectOutputStream.class.isAssignableFrom(clazz)) {\n      // (case: object output stream)\n      try {\n        return (E) new ObjectOutputStream((OutputStream) cast(value, OutputStream.class));\n      } catch (IOException e) {\n        throw new RuntimeException(e);\n      }\n    } else if (ObjectInputStream.class.isAssignableFrom(clazz)) {\n      // (case: object input stream)\n      try {\n        return (E) new ObjectInputStream((InputStream) cast(value, InputStream.class));\n      } catch (IOException e) {\n        throw new RuntimeException(e);\n      }\n    } else if (OutputStream.class.isAssignableFrom(clazz)) {\n      // (case: output stream)\n      if (value.equalsIgnoreCase(\"stdout\") || value.equalsIgnoreCase(\"out\")) { return (E) System.out; }\n      if (value.equalsIgnoreCase(\"stderr\") || value.equalsIgnoreCase(\"err\")) { return (E) System.err; }\n      File toWriteTo = cast(value, File.class);\n      try {\n        if (!toWriteTo.exists() && !toWriteTo.createNewFile()) {\n          throw new IllegalStateException(\"Could not create output stream (cannot write file): \" + value);\n        }\n        return (E) new FileOutputStream((File) cast(value, File.class));\n      } catch (IOException e) {\n        throw new RuntimeException(e);\n      }\n    } else if (InputStream.class.isAssignableFrom(clazz)) {\n      // (case: input stream)\n      if (value.equalsIgnoreCase(\"stdin\") || value.equalsIgnoreCase(\"in\")) { return (E) System.in; }\n      File toReadFrom = cast(value, File.class);\n      try {\n        if (!toReadFrom.exists() || !toReadFrom.canRead()) {\n          throw new IllegalStateException(\"Could not create input stream (cannot read file): \" + value);\n        }\n        return (E) new FileInputStream((File) cast(value, File.class));\n      } catch (IOException e) {\n        throw new RuntimeException(e);\n      }\n    } else {\n      try {\n        // (case: can parse from string)\n        Method decode = clazz.getMethod(\"fromString\", String.class);\n        return (E) decode.invoke(MetaClass.create(clazz), value);\n      } catch (NoSuchMethodException e) {  // Silent errors for misc failures\n      } catch (InvocationTargetException e) {\n      } catch (IllegalAccessException e) {\n      } catch (ClassCastException e) {\n      }\n\n      // Pass 2: Guess what the object could be\n      if (Tree.class.isAssignableFrom(clazz)) {\n        // (case: reading a tree)\n        try {\n          return (E) new PennTreeReader(new StringReader(value), new LabeledScoredTreeFactory(CoreLabel.factory())).readTree();\n        } catch (IOException e) {\n          throw new RuntimeException(e);\n        }\n      } else if (Collection.class.isAssignableFrom(clazz)) {\n        // (case: reading a collection)\n        Collection rtn;\n        if (Modifier.isAbstract(clazz.getModifiers())) {\n          rtn = abstractToConcreteCollectionMap.get(clazz).createInstance();\n        } else {\n          rtn = MetaClass.create(clazz).createInstance();\n        }\n        Class <?> subType = clazz.getComponentType();\n        String[] strings = decodeArray(value);\n        for (String string : strings) {\n          if (subType == null) {\n            rtn.add(castWithoutKnowingType(string));\n          } else {\n            rtn.add(cast(string, subType));\n          }\n        }\n        return (E) rtn;\n      } else {\n        // We could not cast this object\n        return null;\n      }\n    }\n  }","commit_id":"2397fce9b191e5aa5631d5948eb88c7ea7710a2d","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"/**\n   * Decode an array encoded as a String. This entails a comma separated value enclosed in brackets\n   * or parentheses\n   * @param encoded The String encoded array\n   * @return A String array corresponding to the encoded array\n   */\n\tprivate static String[] decodeArray(String encoded){\n    if (encoded.length() == 0) return new String[]{};\n\t\tchar[] chars = encoded.trim().toCharArray();\n\n\t\t//--Parse the String\n\t\t//(state)\n\t\tchar quoteCloseChar = (char) 0;\n\t\tList<StringBuilder> terms = new LinkedList<StringBuilder>();\n\t\tStringBuilder current = new StringBuilder();\n\t\t//(start/stop overhead)\n\t\tint start = 0; int end = chars.length;\n\t\tif(chars[0] == '('){ start += 1; end -= 1; if(chars[end] != ')') throw new IllegalArgumentException(\"Unclosed paren in encoded array: \" + encoded); }\n\t\tif(chars[0] == '['){ start += 1; end -= 1; if(chars[end] != ']') throw new IllegalArgumentException(\"Unclosed bracket in encoded array: \" + encoded); }\n    if(chars[0] == '{'){ start += 1; end -= 1; if(chars[end] != '}') throw new IllegalArgumentException(\"Unclosed bracket in encoded array: \" + encoded); }\n\t\t//(finite state automata)\n\t\tfor(int i=start; i<end; i++){\n\t\t\tif(chars[i] == '\\\\'){\n\t\t\t\t//(case: escaped character)\n\t\t\t\tif(i == chars.length - 1) throw new IllegalArgumentException(\"Last character of encoded pair is escape character: \" + encoded);\n\t\t\t\tcurrent.append(chars[i+1]);\n\t\t\t\ti += 1;\n\t\t\t} else if(quoteCloseChar != 0){\n\t\t\t\t//(case: in quotes)\n\t\t\t\tif(chars[i] == quoteCloseChar){\n\t\t\t\t\tquoteCloseChar = (char) 0;\n\t\t\t\t}else{\n\t\t\t\t\tcurrent.append(chars[i]);\n\t\t\t\t}\n\t\t\t}else{\n\t\t\t\t//(case: normal)\n\t\t\t\tif(chars[i] == '\"'){\n          quoteCloseChar = '\"';\n\t\t\t\t} else if(chars[i] == '\\''){\n          quoteCloseChar = '\\'';\n\t\t\t\t} else if(chars[i] == ',' || chars[i] == ' ' || chars[i] == '\\t' || chars[i] == '\\n'){\n\t\t\t\t\t//break\n          if (current.length() > 0) {\n\t\t\t\t\t  terms.add(current);\n          }\n\t\t\t\t\tcurrent = new StringBuilder();\n\t\t\t\t}else{\n\t\t\t\t\tcurrent.append(chars[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t//--Return\n\t\tif(current.length() > 0) terms.add(current);\n\t\tString[] rtn = new String[terms.size()];\n\t\tint i=0;\n\t\tfor(StringBuilder b : terms){\n\t\t\trtn[i] = b.toString().trim();\n\t\t\ti += 1;\n\t\t}\n    return rtn;\n  }","id":16045,"modified_method":"/**\n   * Decode an array encoded as a String. This entails a comma separated value enclosed in brackets\n   * or parentheses\n   * @param encoded The String encoded array\n   * @return A String array corresponding to the encoded array\n   */\n\tprivate static String[] decodeArray(String encoded){\n    if (encoded.length() == 0) return new String[]{};\n\t\tchar[] chars = encoded.trim().toCharArray();\n\n\t\t//--Parse the String\n\t\t//(state)\n\t\tchar quoteCloseChar = (char) 0;\n\t\tList<StringBuilder> terms = new LinkedList<StringBuilder>();\n\t\tStringBuilder current = new StringBuilder();\n\t\t//(start/stop overhead)\n\t\tint start = 0; int end = chars.length;\n\t\tif(chars[0] == '('){ start += 1; end -= 1; if(chars[end] != ')') throw new IllegalArgumentException(\"Unclosed paren in encoded array: \" + encoded); }\n\t\tif(chars[0] == '['){ start += 1; end -= 1; if(chars[end] != ']') throw new IllegalArgumentException(\"Unclosed bracket in encoded array: \" + encoded); }\n    if(chars[0] == '{'){ start += 1; end -= 1; if(chars[end] != '}') throw new IllegalArgumentException(\"Unclosed bracket in encoded array: \" + encoded); }\n\t\t//(finite state automata)\n\t\tfor(int i=start; i<end; i++){\n\t\t\tif(chars[i] == '\\\\'){\n\t\t\t\t//(case: escaped character)\n\t\t\t\tif(i == chars.length - 1) throw new IllegalArgumentException(\"Last character of encoded pair is escape character: \" + encoded);\n\t\t\t\tcurrent.append(chars[i+1]);\n\t\t\t\ti += 1;\n\t\t\t} else if(quoteCloseChar != 0){\n\t\t\t\t//(case: in quotes)\n\t\t\t\tif(chars[i] == quoteCloseChar){\n\t\t\t\t\tquoteCloseChar = (char) 0;\n\t\t\t\t}else{\n\t\t\t\t\tcurrent.append(chars[i]);\n\t\t\t\t}\n\t\t\t}else{\n\t\t\t\t//(case: normal)\n\t\t\t\tif(chars[i] == '\"'){\n          quoteCloseChar = '\"';\n\t\t\t\t} else if(chars[i] == '\\''){\n          quoteCloseChar = '\\'';\n\t\t\t\t} else if(chars[i] == ',' || chars[i] == ';' || chars[i] == ' ' || chars[i] == '\\t' || chars[i] == '\\n'){\n\t\t\t\t\t//break\n          if (current.length() > 0) {\n\t\t\t\t\t  terms.add(current);\n          }\n\t\t\t\t\tcurrent = new StringBuilder();\n\t\t\t\t}else{\n\t\t\t\t\tcurrent.append(chars[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t//--Return\n\t\tif(current.length() > 0) terms.add(current);\n\t\tString[] rtn = new String[terms.size()];\n\t\tint i=0;\n\t\tfor(StringBuilder b : terms){\n\t\t\trtn[i] = b.toString().trim();\n\t\t\ti += 1;\n\t\t}\n    return rtn;\n  }","commit_id":"2397fce9b191e5aa5631d5948eb88c7ea7710a2d","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"@Test\n  public void testCastArray() {\n    Integer[] ints1 = MetaClass.cast(\"[1,2,3]\", Integer[].class);\n    assertArrayEquals(new Integer[]{1,2,3}, ints1);\n    Integer[] ints2 = MetaClass.cast(\"(1,2,3)\", Integer[].class);\n    assertArrayEquals(new Integer[]{1,2,3}, ints2);\n    Integer[] ints3 = MetaClass.cast(\"1, 2, 3\", Integer[].class);\n    assertArrayEquals(new Integer[]{1,2,3}, ints3);\n    Integer[] ints4 = MetaClass.cast(\"1 2 3\", Integer[].class);\n    assertArrayEquals(new Integer[]{1,2,3}, ints4);\n    Integer[] ints5 = MetaClass.cast(\"1   2   3\", Integer[].class);\n    assertArrayEquals(new Integer[]{1,2,3}, ints5);\n\n    Integer[] intsEmpty = MetaClass.cast(\"\", Integer[].class);\n    assertArrayEquals(new Integer[]{}, intsEmpty);\n  }","id":16046,"modified_method":"@Test\n  public void testCastArray() {\n    Integer[] ints1 = MetaClass.cast(\"[1,2,3]\", Integer[].class);\n    assertArrayEquals(new Integer[]{1,2,3}, ints1);\n    Integer[] ints2 = MetaClass.cast(\"(1,2,3)\", Integer[].class);\n    assertArrayEquals(new Integer[]{1,2,3}, ints2);\n    Integer[] ints3 = MetaClass.cast(\"1, 2, 3\", Integer[].class);\n    assertArrayEquals(new Integer[]{1,2,3}, ints3);\n    Integer[] ints4 = MetaClass.cast(\"1 2 3\", Integer[].class);\n    assertArrayEquals(new Integer[]{1,2,3}, ints4);\n    Integer[] ints5 = MetaClass.cast(\"1   2   3\", Integer[].class);\n    assertArrayEquals(new Integer[]{1,2,3}, ints5);\n    Integer[] ints6 = MetaClass.cast(\"\\n1 \\n\\n  2   3\", Integer[].class);\n    assertArrayEquals(new Integer[]{1,2,3}, ints6);\n\n    Integer[] intsEmpty = MetaClass.cast(\"\", Integer[].class);\n    assertArrayEquals(new Integer[]{}, intsEmpty);\n  }","commit_id":"2397fce9b191e5aa5631d5948eb88c7ea7710a2d","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"protected List<SnmpCellListItem> parseJSONData(final String jsonString) {\n        final List<SnmpCellListItem> cellList = new ArrayList<SnmpCellListItem>();\n        final JSONArray jArray = JSONParser.parseStrict(jsonString).isArray();\n\n        if (jArray != null) {\n            final JsArray<SnmpCellListItem> jsArray = createJsArray(jArray.getJavaScriptObject());\n            for(int i = 0; i < jsArray.length(); i++) {\n                cellList.add(jsArray.get(i));\n            }\n        }\n        \n        return cellList;\n    }","id":16047,"modified_method":"protected List<SnmpCellListItem> parseJSONData(final String jsonString) {\n        final List<SnmpCellListItem> cellList = new ArrayList<SnmpCellListItem>();\n        final JSONValue value = JSONParser.parseStrict(jsonString);\n        final JSONObject obj = value.isObject();\n        final JSONArray arr = value.isArray();\n        JsArray<SnmpCellListItem> jsArray = null;\n\n        if (obj != null) {\n            jsArray = createJsArray(obj.getJavaScriptObject());\n        } else if (arr != null) {\n            jsArray = createJsArray(arr.getJavaScriptObject());\n        } else {\n            doLog(jsonString + \" does not parse as an array or object!\", value);\n        }\n\n        if (jsArray != null) {\n            for(int i = 0; i < jsArray.length(); i++) {\n                cellList.add(jsArray.get(i));\n            }\n        }\n\n        return cellList;\n    }","commit_id":"4f367ddab33e11ef00382a6cb1c2c6c570e5807a","url":"https://github.com/OpenNMS/opennms"},{"original_method":"public static List<KscReport> translate(final String jsonText) {\n        final List<KscReport> reports = new ArrayList<KscReport>();\n        final JSONArray jArray = JSONParser.parseStrict(jsonText).isArray();\n\n        if (jArray != null) {\n            final JsArray<KscReport> jsReports = translateJsonReportList(jArray.getJavaScriptObject());\n            for(int i = 0; i < jsReports.length(); i++) {\n                reports.add(jsReports.get(i));\n            }\n        }\n        return reports;\n    }","id":16048,"modified_method":"public static List<KscReport> translate(final String jsonText) {\n        final List<KscReport> reports = new ArrayList<KscReport>();\n        final JSONValue value = JSONParser.parseStrict(jsonText);\n        final JSONArray arr = value.isArray();\n        final JSONObject obj = value.isObject();\n        JsArray<KscReport> jsReports = null;\n\n        if (obj != null) {\n            jsReports = translateJsonReportList(obj.getJavaScriptObject());\n        } else if (arr != null) {\n            jsReports = translateJsonReportList(arr.getJavaScriptObject());\n        } else {\n            doLog(jsonText + \" did not parse as an object or array!\", value);\n        }\n\n        if (jsReports != null) {\n            for(int i = 0; i < jsReports.length(); i++) {\n                reports.add(jsReports.get(i));\n            }\n        }\n\n        doLog(\"KSC reports:\",reports);\n        return reports;\n    }","commit_id":"4f367ddab33e11ef00382a6cb1c2c6c570e5807a","url":"https://github.com/OpenNMS/opennms"},{"original_method":"public static List<PhysicalInterface> createSnmpInterfaceData(String jsonString){\n        final List<PhysicalInterface> physIfaceList = new ArrayList<PhysicalInterface>();\n        final JSONArray jArray = JSONParser.parseStrict(jsonString).isArray();\n        if (jArray != null) {\n            final JsArray<PhysicalInterface> ipFaces = createSnmpInterfaceData(jArray.getJavaScriptObject());\n            for(int i = 0; i < ipFaces.length(); i++) {\n                physIfaceList.add(ipFaces.get(i));\n            }\n        }\n        doLog(\"physical interfaces:\", physIfaceList);\n        return physIfaceList;\n    }","id":16049,"modified_method":"public static List<PhysicalInterface> createSnmpInterfaceData(String jsonString){\n        final List<PhysicalInterface> physIfaceList = new ArrayList<PhysicalInterface>();\n        final JSONValue value = JSONParser.parseStrict(jsonString);\n        final JSONObject obj = value.isObject();\n        final JSONArray arr = value.isArray();\n        JsArray<PhysicalInterface> snmpIfaces = null;\n        if (obj != null) {\n            snmpIfaces = createSnmpInterfaceData(obj.getJavaScriptObject());\n        } else if (arr != null) {\n            snmpIfaces = createSnmpInterfaceData(arr.getJavaScriptObject());\n        } else {\n            doLog(jsonString + \" did not parse as an object or array!\", value);\n        }\n\n        if (snmpIfaces != null) {\n            for(int i = 0; i < snmpIfaces.length(); i++) {\n                physIfaceList.add(snmpIfaces.get(i));\n            }\n        }\n\n        doLog(\"physical interfaces:\", physIfaceList);\n        return physIfaceList;\n    }","commit_id":"4f367ddab33e11ef00382a6cb1c2c6c570e5807a","url":"https://github.com/OpenNMS/opennms"},{"original_method":"public static List<IpInterface> createIpInterfaceData(String jsonString){\n        final List<IpInterface> ipIfaceList = new ArrayList<IpInterface>();\n        final JSONArray jArray = JSONParser.parseStrict(jsonString).isArray();\n        if (jArray != null) {\n            final JsArray<IpInterface> ipFaces = createIpInterfaceData(jArray.getJavaScriptObject());\n            for(int i = 0; i < ipFaces.length(); i++) {\n                ipIfaceList.add(ipFaces.get(i));\n            }\n        }\n        doLog(\"ip interfaces:\", ipIfaceList);\n        return ipIfaceList;\n    }","id":16050,"modified_method":"public static List<IpInterface> createIpInterfaceData(String jsonString){\n        final List<IpInterface> ipIfaceList = new ArrayList<IpInterface>();\n        final JSONValue value = JSONParser.parseStrict(jsonString);\n\n        JSONObject obj = value.isObject();\n        JSONArray arr = value.isArray();\n        JsArray<IpInterface> ipIfaces = null;\n        if (obj != null) {\n            ipIfaces = createIpInterfaceData(obj.getJavaScriptObject());\n        } else if (arr != null) {\n            ipIfaces = createIpInterfaceData(arr.getJavaScriptObject());\n        } else {\n            doLog(jsonString + \" did not parse as an object or array!\", value);\n        }\n\n        if (ipIfaces != null) {\n            for(int i = 0; i < ipIfaces.length(); i++) {\n                ipIfaceList.add(ipIfaces.get(i));\n            }\n        }\n        doLog(\"ip interfaces:\", ipIfaceList);\n        return ipIfaceList;\n    }","commit_id":"4f367ddab33e11ef00382a6cb1c2c6c570e5807a","url":"https://github.com/OpenNMS/opennms"},{"original_method":"public static List<NodeDetail> mapNodeJSONtoNodeDetail(final String jsonString) {\n        final List<NodeDetail> nodeDetails = new ArrayList<NodeDetail>();\n        final JSONArray jArray = JSONParser.parseStrict(jsonString).isArray();\n\n        if (jArray != null) {\n            final JsArray<NodeDetail> jsDetails = createNodeDetailsArray(jArray.getJavaScriptObject());\n            for(int i = 0; i < jsDetails.length(); i++) {\n                if(!jsDetails.get(i).getNodeType().equals(\"D\")) {\n                    nodeDetails.add(jsDetails.get(i));\n                }\n            }\n        }\n        \n        return nodeDetails;\n    }","id":16051,"modified_method":"public static List<NodeDetail> mapNodeJSONtoNodeDetail(final String jsonString) {\n        final List<NodeDetail> nodeDetails = new ArrayList<NodeDetail>();\n        final JSONValue value = JSONParser.parseStrict(jsonString);\n        final JSONObject obj = value.isObject();\n        final JSONArray arr = value.isArray();\n        JsArray<NodeDetail> jsDetails = null;\n\n        if (obj != null) {\n            jsDetails = createNodeDetailsArray(obj.getJavaScriptObject());\n        } else if (arr != null) {\n            jsDetails = createNodeDetailsArray(arr.getJavaScriptObject());\n        } else {\n            doLog(jsonString + \" does not parse as an array or object!\", value);\n        }\n\n        if (jsDetails != null) {\n            for(int i = 0; i < jsDetails.length(); i++) {\n                if(!jsDetails.get(i).getNodeType().equals(\"D\")) {\n                    nodeDetails.add(jsDetails.get(i));\n                }\n            }\n        }\n\n        return nodeDetails;\n    }","commit_id":"4f367ddab33e11ef00382a6cb1c2c6c570e5807a","url":"https://github.com/OpenNMS/opennms"},{"original_method":"public AnnotatedServerEndpointConfig(Class<?> endpointClass, ServerEndpoint anno, ServerEndpointConfig baseConfig) throws DeploymentException\n    {\n        List<Class<? extends Decoder>> compositeDecoders = new ArrayList<>();\n        List<Class<? extends Encoder>> compositeEncoders = new ArrayList<>();\n        List<String> compositeSubProtocols = new ArrayList<>();\n\n        Configurator configr = null;\n\n        // Copy from base config\n        if (baseConfig != null)\n        {\n            compositeDecoders.addAll(baseConfig.getDecoders());\n            compositeEncoders.addAll(baseConfig.getEncoders());\n            compositeSubProtocols.addAll(baseConfig.getSubprotocols());\n            configr = baseConfig.getConfigurator();\n        }\n\n        // now add from annotations\n        compositeDecoders.addAll(Arrays.asList(anno.decoders()));\n        compositeEncoders.addAll(Arrays.asList(anno.encoders()));\n        compositeSubProtocols.addAll(Arrays.asList(anno.subprotocols()));\n\n        // Create unmodifiable lists\n        this.decoders = Collections.unmodifiableList(compositeDecoders);\n        this.encoders = Collections.unmodifiableList(compositeEncoders);\n        this.subprotocols = Collections.unmodifiableList(compositeSubProtocols);\n\n        // supplied by init lifecycle\n        this.extensions = new ArrayList<>();\n        this.path = anno.value();\n        this.endpointClass = endpointClass;\n        // no userProperties in annotation\n        this.userProperties = new HashMap<>();\n\n        if (anno.configurator() == null)\n        {\n            if (configr != null)\n            {\n                this.configurator = configr;\n            }\n            else\n            {\n                this.configurator = BasicServerEndpointConfigurator.INSTANCE;\n            }\n        }\n        else\n        {\n            try\n            {\n                this.configurator = anno.configurator().newInstance();\n            }\n            catch (InstantiationException | IllegalAccessException e)\n            {\n                StringBuilder err = new StringBuilder();\n                err.append(\"Unable to instantiate ClientEndpoint.configurator() of \");\n                err.append(anno.configurator().getName());\n                err.append(\" defined as annotation in \");\n                err.append(anno.getClass().getName());\n                throw new DeploymentException(err.toString(),e);\n            }\n        }\n    }","id":16052,"modified_method":"public AnnotatedServerEndpointConfig(Class<?> endpointClass, ServerEndpoint anno, ServerEndpointConfig baseConfig) throws DeploymentException\n    {\n        Configurator configr = null;\n\n        // Copy from base config\n        if (baseConfig != null)\n        {\n            configr = baseConfig.getConfigurator();\n        }\n\n        // Decoders (favor provided config over annotation)\n        if (baseConfig != null && baseConfig.getDecoders() != null && baseConfig.getDecoders().size() > 0)\n        {\n            this.decoders = Collections.unmodifiableList(baseConfig.getDecoders());\n        }\n        else\n        {\n            this.decoders = Collections.unmodifiableList(Arrays.asList(anno.decoders()));\n        }\n\n        // Encoders (favor provided config over annotation)\n        if (baseConfig != null && baseConfig.getEncoders() != null && baseConfig.getEncoders().size() > 0)\n        {\n            this.encoders = Collections.unmodifiableList(baseConfig.getEncoders());\n        }\n        else\n        {\n            this.encoders = Collections.unmodifiableList(Arrays.asList(anno.encoders()));\n        }\n\n        // Sub Protocols (favor provided config over annotation)\n        if (baseConfig != null && baseConfig.getSubprotocols() != null && baseConfig.getSubprotocols().size() > 0)\n        {\n            this.subprotocols = Collections.unmodifiableList(baseConfig.getSubprotocols());\n        }\n        else\n        {\n            this.subprotocols = Collections.unmodifiableList(Arrays.asList(anno.subprotocols()));\n        }\n\n        // Path (favor provided config over annotation)\n        if (baseConfig != null && baseConfig.getPath() != null && baseConfig.getPath().length() > 0)\n        {\n            this.path = baseConfig.getPath();\n        }\n        else\n        {\n            this.path = anno.value();\n        }\n\n        // supplied by init lifecycle\n        this.extensions = new ArrayList<>();\n        // always what is passed in\n        this.endpointClass = endpointClass;\n        // UserProperties in annotation\n        this.userProperties = new HashMap<>();\n        if (baseConfig != null && baseConfig.getUserProperties() != null && baseConfig.getUserProperties().size() > 0)\n        {\n            userProperties.putAll(baseConfig.getUserProperties());\n        }\n\n        if (anno.configurator() == null)\n        {\n            if (configr != null)\n            {\n                this.configurator = configr;\n            }\n            else\n            {\n                this.configurator = BasicServerEndpointConfigurator.INSTANCE;\n            }\n        }\n        else\n        {\n            try\n            {\n                this.configurator = anno.configurator().newInstance();\n            }\n            catch (InstantiationException | IllegalAccessException e)\n            {\n                StringBuilder err = new StringBuilder();\n                err.append(\"Unable to instantiate ClientEndpoint.configurator() of \");\n                err.append(anno.configurator().getName());\n                err.append(\" defined as annotation in \");\n                err.append(anno.getClass().getName());\n                throw new DeploymentException(err.toString(),e);\n            }\n        }\n    }","commit_id":"50d98ab52773f5f1a060a811f9f6ac540d61ac16","url":"https://github.com/eclipse/jetty.project"},{"original_method":"@Override\n    public void addEndpoint(ServerEndpointConfig config) throws DeploymentException\n    {\n        if (LOG.isDebugEnabled())\n        {\n            LOG.debug(\"addEndpoint({}) path={} endpoint={}\",config,config.getPath(),config.getEndpointClass());\n            LOG.debug(\"Occurred from stack\",new Throwable(\"stack\"));\n        }\n        ServerEndpointMetadata metadata = getServerEndpointMetadata(config.getEndpointClass(),config);\n        addEndpoint(metadata);\n    }","id":16053,"modified_method":"@Override\n    public void addEndpoint(ServerEndpointConfig config) throws DeploymentException\n    {\n        if (LOG.isDebugEnabled())\n        {\n            LOG.debug(\"addEndpoint({}) path={} endpoint={}\",config,config.getPath(),config.getEndpointClass());\n        }\n        ServerEndpointMetadata metadata = getServerEndpointMetadata(config.getEndpointClass(),config);\n        addEndpoint(metadata);\n    }","commit_id":"50d98ab52773f5f1a060a811f9f6ac540d61ac16","url":"https://github.com/eclipse/jetty.project"},{"original_method":"public WebSocketSession(URI requestURI, EventDriver websocket, LogicalConnection connection)\n    {\n        if (requestURI == null)\n        {\n            throw new RuntimeException(\"Request URI cannot be null\");\n        }\n\n        this.requestURI = requestURI;\n        this.websocket = websocket;\n        this.connection = connection;\n        this.executor = connection.getExecutor();\n        this.outgoingHandler = connection;\n        this.incomingHandler = websocket;\n\n        this.connection.getIOState().addListener(this);\n\n        // Get the parameter map (use the jetty MultiMap to do this right)\n        MultiMap<String> params = new MultiMap<>();\n        String query = requestURI.getQuery();\n        if (StringUtil.isNotBlank(query))\n        {\n            UrlEncoded.decodeTo(query,params,StringUtil.__UTF8_CHARSET,-1);\n        }\n\n        for (String name : params.keySet())\n        {\n            List<String> valueList = params.getValues(name);\n            String valueArr[] = new String[valueList.size()];\n            valueArr = valueList.toArray(valueArr);\n            parameterMap.put(name,valueArr);\n        }\n    }","id":16054,"modified_method":"public WebSocketSession(URI requestURI, EventDriver websocket, LogicalConnection connection)\n    {\n        if (requestURI == null)\n        {\n            throw new RuntimeException(\"Request URI cannot be null\");\n        }\n\n        this.requestURI = requestURI;\n        this.websocket = websocket;\n        this.connection = connection;\n        this.executor = connection.getExecutor();\n        this.outgoingHandler = connection;\n        this.incomingHandler = websocket;\n\n        this.connection.getIOState().addListener(this);\n    }","commit_id":"50d98ab52773f5f1a060a811f9f6ac540d61ac16","url":"https://github.com/eclipse/jetty.project"},{"original_method":"public void setUpgradeRequest(UpgradeRequest request)\n    {\n        this.upgradeRequest = request;\n        this.protocolVersion = request.getProtocolVersion();\n    }","id":16055,"modified_method":"public void setUpgradeRequest(UpgradeRequest request)\n    {\n        this.upgradeRequest = request;\n        this.protocolVersion = request.getProtocolVersion();\n        this.parameterMap.clear();\n        if (request.getParameterMap() != null)\n        {\n            for (Map.Entry<String, List<String>> entry : request.getParameterMap().entrySet())\n            {\n                List<String> values = entry.getValue();\n                if (values != null)\n                {\n                    this.parameterMap.put(entry.getKey(),values.toArray(new String[values.size()]));\n                }\n                else\n                {\n                    this.parameterMap.put(entry.getKey(),new String[0]);\n                }\n            }\n        }\n    }","commit_id":"50d98ab52773f5f1a060a811f9f6ac540d61ac16","url":"https://github.com/eclipse/jetty.project"},{"original_method":"public void process( WatchedEvent event )\n    {\n        String path = event.getPath();\n        System.out.println( this + \", \" + new Date() + \" Got event: \" + event + \"(path=\" + path + \")\" );\n        if ( path == null && event.getState() == Watcher.Event.KeeperState.Expired )\n        {\n            keeperState = KeeperState.Expired;\n            zooKeeper = instantiateZooKeeper();\n        }\n        else if ( path == null && event.getState() == Watcher.Event.KeeperState.SyncConnected )\n        {\n            sequenceNr = setup();\n            keeperState = KeeperState.SyncConnected;\n            if ( firstSyncConnected )\n            {\n                firstSyncConnected = false;\n            }\n            else\n            {\n                receiver.somethingIsWrong( new Exception() );\n            }\n        }\n        else if ( path == null && event.getState() == Watcher.Event.KeeperState.Disconnected )\n        {\n            keeperState = KeeperState.Disconnected;\n        }\n        else if ( event.getType() == Watcher.Event.EventType.NodeDataChanged )\n        {\n            // If my current master is the same as the master which this master-notify thingie\n            // says, just ignore it.\n            System.out.println( \"NodeDataChanged (most likely master-notify)\" );\n            Machine master = getMaster();\n            if ( master != null && master.getMachineId() == getMasterNotifyId() )\n            {\n                System.out.println( \"...but no change, so just chill\" );\n                return;\n            }\n            \n            receiver.somethingIsWrong( new Exception() );\n        }\n    }","id":16056,"modified_method":"public void process( WatchedEvent event )\n    {\n        String path = event.getPath();\n        System.out.println( this + \", \" + new Date() + \" Got event: \" + event + \"(path=\" + path + \")\" );\n        if ( path == null && event.getState() == Watcher.Event.KeeperState.Expired )\n        {\n            keeperState = KeeperState.Expired;\n            zooKeeper = instantiateZooKeeper();\n        }\n        else if ( path == null && event.getState() == Watcher.Event.KeeperState.SyncConnected )\n        {\n            sequenceNr = setup();\n            keeperState = KeeperState.SyncConnected;\n            if ( firstSyncConnected )\n            {\n                firstSyncConnected = false;\n            }\n            else\n            {\n                receiver.somethingIsWrong( new Exception() );\n            }\n        }\n        else if ( path == null && event.getState() == Watcher.Event.KeeperState.Disconnected )\n        {\n            keeperState = KeeperState.Disconnected;\n        }\n        else if ( event.getType() == Watcher.Event.EventType.NodeDataChanged )\n        {\n            // If my current master is the same as the master which this master-notify thingie\n            // says, just ignore it.\n//            System.out.println( \"NodeDataChanged (most likely master-notify)\" );\n//            Machine master = getMaster();\n//            if ( master != null && master.getMachineId() == getMasterNotifyId() )\n//            {\n//                System.out.println( \"...but no change, so just chill\" );\n//                return;\n//            }\n            \n            receiver.somethingIsWrong( new Exception() );\n        }\n    }","commit_id":"509fad3c03163bf8ee7527d7ba6cf8b418b1ab1e","url":"https://github.com/neo4j/neo4j"},{"original_method":"public void process( WatchedEvent event )\n    {\n        String path = event.getPath();\n        System.out.println( this + \", \" + new Date() + \" Got event: \" + event + \"(path=\" + path + \")\" );\n        if ( path == null && event.getState() == Watcher.Event.KeeperState.Expired )\n        {\n            keeperState = KeeperState.Expired;\n            zooKeeper = instantiateZooKeeper();\n        }\n        else if ( path == null && event.getState() == Watcher.Event.KeeperState.SyncConnected )\n        {\n            sequenceNr = setup();\n            keeperState = KeeperState.SyncConnected;\n            if ( firstSyncConnected )\n            {\n                firstSyncConnected = false;\n            }\n            else\n            {\n                receiver.somethingIsWrong( new Exception() );\n            }\n        }\n        else if ( path == null && event.getState() == Watcher.Event.KeeperState.Disconnected )\n        {\n            keeperState = KeeperState.Disconnected;\n        }\n        else if ( event.getType() == Watcher.Event.EventType.NodeDataChanged )\n        {\n            // If my current master is the same as the master which this master-notify thingie\n            // says, just ignore it.\n            System.out.println( \"NodeDataChanged (most likely master-notify)\" );\n            Machine master = getMaster();\n            if ( master != null && master.getMachineId() == getMasterNotifyId() )\n            {\n                System.out.println( \"...but no change, so just chill\" );\n                return;\n            }\n            \n            receiver.somethingIsWrong( new Exception() );\n        }\n    }","id":16057,"modified_method":"public void process( WatchedEvent event )\n    {\n        String path = event.getPath();\n        System.out.println( this + \", \" + new Date() + \" Got event: \" + event + \"(path=\" + path + \")\" );\n        if ( path == null && event.getState() == Watcher.Event.KeeperState.Expired )\n        {\n            keeperState = KeeperState.Expired;\n            zooKeeper = instantiateZooKeeper();\n        }\n        else if ( path == null && event.getState() == Watcher.Event.KeeperState.SyncConnected )\n        {\n            sequenceNr = setup();\n            keeperState = KeeperState.SyncConnected;\n            if ( firstSyncConnected )\n            {\n                firstSyncConnected = false;\n            }\n            else\n            {\n                receiver.somethingIsWrong( new Exception() );\n            }\n        }\n        else if ( path == null && event.getState() == Watcher.Event.KeeperState.Disconnected )\n        {\n            keeperState = KeeperState.Disconnected;\n        }\n        else if ( event.getType() == Watcher.Event.EventType.NodeDataChanged )\n        {\n            // If my current master is the same as the master which this master-notify thingie\n            // says, just ignore it.\n//            System.out.println( \"NodeDataChanged (most likely master-notify)\" );\n//            Machine master = getMaster();\n//            if ( master != null && master.getMachineId() == getMasterNotifyId() )\n//            {\n//                System.out.println( \"...but no change, so just chill\" );\n//                return;\n//            }\n            \n            receiver.somethingIsWrong( new Exception() );\n        }\n    }","commit_id":"7ab0b4a70444b9aa25f9565a380c9df381f54e13","url":"https://github.com/neo4j/neo4j"},{"original_method":"public void process( WatchedEvent event )\n    {\n        String path = event.getPath();\n        System.out.println( this + \", \" + new Date() + \" Got event: \" + event + \"(path=\" + path + \")\" );\n        if ( path == null && event.getState() == Watcher.Event.KeeperState.Expired )\n        {\n            keeperState = KeeperState.Expired;\n            zooKeeper = instantiateZooKeeper();\n        }\n        else if ( path == null && event.getState() == Watcher.Event.KeeperState.SyncConnected )\n        {\n            sequenceNr = setup();\n            keeperState = KeeperState.SyncConnected;\n            if ( firstSyncConnected )\n            {\n                firstSyncConnected = false;\n            }\n            else\n            {\n                receiver.somethingIsWrong( new Exception() );\n            }\n        }\n        else if ( path == null && event.getState() == Watcher.Event.KeeperState.Disconnected )\n        {\n            keeperState = KeeperState.Disconnected;\n        }\n        else if ( event.getType() == Watcher.Event.EventType.NodeDataChanged )\n        {\n            // If my current master is the same as the master which this master-notify thingie\n            // says, just ignore it.\n            System.out.println( \"NodeDataChanged (most likely master-notify)\" );\n            Machine master = getMaster();\n            if ( master != null && master.getMachineId() == getMasterNotifyId() )\n            {\n                System.out.println( \"...but no change, so just chill\" );\n                return;\n            }\n            \n            receiver.somethingIsWrong( new Exception() );\n        }\n    }","id":16058,"modified_method":"public void process( WatchedEvent event )\n    {\n        String path = event.getPath();\n        System.out.println( this + \", \" + new Date() + \" Got event: \" + event + \"(path=\" + path + \")\" );\n        if ( path == null && event.getState() == Watcher.Event.KeeperState.Expired )\n        {\n            keeperState = KeeperState.Expired;\n            zooKeeper = instantiateZooKeeper();\n        }\n        else if ( path == null && event.getState() == Watcher.Event.KeeperState.SyncConnected )\n        {\n            sequenceNr = setup();\n            keeperState = KeeperState.SyncConnected;\n            if ( firstSyncConnected )\n            {\n                firstSyncConnected = false;\n            }\n            else\n            {\n                receiver.somethingIsWrong( new Exception() );\n            }\n        }\n        else if ( path == null && event.getState() == Watcher.Event.KeeperState.Disconnected )\n        {\n            keeperState = KeeperState.Disconnected;\n        }\n        else if ( event.getType() == Watcher.Event.EventType.NodeDataChanged )\n        {\n            // If my current master is the same as the master which this master-notify thingie\n            // says, just ignore it.\n//            System.out.println( \"NodeDataChanged (most likely master-notify)\" );\n//            Machine master = getMaster();\n//            if ( master != null && master.getMachineId() == getMasterNotifyId() )\n//            {\n//                System.out.println( \"...but no change, so just chill\" );\n//                return;\n//            }\n            \n            receiver.somethingIsWrong( new Exception() );\n        }\n    }","commit_id":"edc8aacab527e9246b0ec5f2e391eb84779ea091","url":"https://github.com/neo4j/neo4j"},{"original_method":"public void applySecondBaseDistributionPrior(String primaryBases, String secondaryBases) {\n        for (int genotypeIndex = 0; genotypeIndex < genotypes.length; genotypeIndex++) {\n            char firstAllele = genotypes[genotypeIndex].charAt(0);\n            char secondAllele = genotypes[genotypeIndex].charAt(1);\n\n            int offIsGenotypic = 0;\n            int offTotal = 0;\n\n            int onIsGenotypic = 0;\n            int onTotal = 0;\n\n            for (int pileupIndex = 0; pileupIndex < primaryBases.length(); pileupIndex++) {\n                char primaryBase = primaryBases.charAt(pileupIndex);\n\n                if (secondaryBases != null) {\n                    char secondaryBase = secondaryBases.charAt(pileupIndex);\n\n                    if (primaryBase != firstAllele && primaryBase != secondAllele) {\n                        if (secondaryBase == firstAllele || secondaryBase == secondAllele) {\n                            offIsGenotypic++;\n                        }\n                        offTotal++;\n                    } else {\n                        if (secondaryBase == firstAllele || secondaryBase == secondAllele) {\n                            onIsGenotypic++;\n                        }\n                        onTotal++;\n                    }\n                }\n            }\n\n            double offPrior = MathUtils.binomialProbability(offIsGenotypic, offTotal, offNextBestBasePriors.get(genotypes[genotypeIndex]));\n            double onPrior = MathUtils.binomialProbability(onIsGenotypic, onTotal, onNextBestBasePriors.get(genotypes[genotypeIndex]));\n\n            likelihoods[genotypeIndex] += Math.log10(offPrior) + Math.log10(onPrior);\n        }\n        this.sort();\n    }","id":16059,"modified_method":"public void applySecondBaseDistributionPrior(String primaryBases, String secondaryBases) {\n        for (int genotypeIndex = 0; genotypeIndex < genotypes.length; genotypeIndex++) {\n            char firstAllele = genotypes[genotypeIndex].charAt(0);\n            char secondAllele = genotypes[genotypeIndex].charAt(1);\n\n            int offIsGenotypic = 0;\n            int offTotal = 0;\n\n            int onIsGenotypic = 0;\n            int onTotal = 0;\n\n            for (int pileupIndex = 0; pileupIndex < primaryBases.length(); pileupIndex++) {\n                char primaryBase = primaryBases.charAt(pileupIndex);\n\n                if (secondaryBases != null) {\n                    char secondaryBase = secondaryBases.charAt(pileupIndex);\n\n                    if (primaryBase != firstAllele && primaryBase != secondAllele) {\n                        if (secondaryBase == firstAllele || secondaryBase == secondAllele) {\n                            offIsGenotypic++;\n                        }\n                        offTotal++;\n                    } else {\n                        if (secondaryBase == firstAllele || secondaryBase == secondAllele) {\n                            onIsGenotypic++;\n                        }\n                        onTotal++;\n                    }\n                }\n            }\n\n            double offPrior = MathUtils.binomialProbability(offIsGenotypic, offTotal, offNextBestBasePriors.get(genotypes[genotypeIndex]));\n            double onPrior = MathUtils.binomialProbability(onIsGenotypic, onTotal, onNextBestBasePriors.get(genotypes[genotypeIndex]));\n\n            double logOffPrior = MathUtils.compareDoubles(offPrior, 0.0, 1e-10) == 0 ? Math.log10(Double.MIN_VALUE) : Math.log10(offPrior);\n            double logOnPrior = MathUtils.compareDoubles(onPrior, 0.0, 1e-10) == 0 ? Math.log10(Double.MIN_VALUE) : Math.log10(onPrior);\n\n            likelihoods[genotypeIndex] += logOffPrior + logOnPrior;\n        }\n        this.sort();\n    }","commit_id":"038cbcf80e69c8a43140c4fc9c16df1a842a4b6e","url":"https://github.com/broadgsa/gatk"},{"original_method":"/**\n     * Method to compute the result of this feature for each of the ten genotypes.  The return value must be a double array\n     * of length 10 (one for each genotype) and the value must be in log10-space.\n     *\n     * @param ref     the reference base\n     * @param context the context for the given locus\n     * @return a ten-element array of log-likelihood result of the feature applied to each genotype\n     */\n    public double[] compute(char ref, LocusContext context) {\n        double[] likelihoods = new double[10];\n\n        ReadBackedPileup pileup = new ReadBackedPileup(ref, context);\n        String primaryBases = pileup.getBases();\n        String secondaryBases = pileup.getSecondaryBasePileup();\n\n        for (int genotypeIndex = 0; genotypeIndex < Genotype.values().length; genotypeIndex++) {\n            char firstAllele = Genotype.values()[genotypeIndex].toString().charAt(0);\n            char secondAllele = Genotype.values()[genotypeIndex].toString().charAt(1);\n\n            int offIsGenotypic = 0;\n            int offTotal = 0;\n\n            int onIsGenotypic = 0;\n            int onTotal = 0;\n\n            for (int pileupIndex = 0; pileupIndex < primaryBases.length(); pileupIndex++) {\n                char primaryBase = primaryBases.charAt(pileupIndex);\n\n                if (secondaryBases != null) {\n                    char secondaryBase = secondaryBases.charAt(pileupIndex);\n\n                    if (primaryBase != firstAllele && primaryBase != secondAllele) {\n                        if (secondaryBase == firstAllele || secondaryBase == secondAllele) {\n                            offIsGenotypic++;\n                        }\n                        offTotal++;\n                    } else {\n                        if (secondaryBase == firstAllele || secondaryBase == secondAllele) {\n                            onIsGenotypic++;\n                        }\n                        onTotal++;\n                    }\n                }\n            }\n\n            double offPrior = MathUtils.binomialProbability(offIsGenotypic, offTotal, p2off[genotypeIndex]);\n            double onPrior = MathUtils.binomialProbability(onIsGenotypic, onTotal, p2on[genotypeIndex]);\n\n            likelihoods[genotypeIndex] = Math.log10(offPrior) + Math.log10(onPrior);\n        }\n\n        return likelihoods;\n    }","id":16060,"modified_method":"/**\n     * Method to compute the result of this feature for each of the ten genotypes.  The return value must be a double array\n     * of length 10 (one for each genotype) and the value must be in log10-space.\n     *\n     * @param ref     the reference base\n     * @param context the context for the given locus\n     * @return a ten-element array of log-likelihood result of the feature applied to each genotype\n     */\n    public double[] compute(char ref, LocusContext context) {\n        double[] likelihoods = new double[10];\n\n        ReadBackedPileup pileup = new ReadBackedPileup(ref, context);\n        String primaryBases = pileup.getBases();\n        String secondaryBases = pileup.getSecondaryBasePileup();\n\n        for (int genotypeIndex = 0; genotypeIndex < Genotype.values().length; genotypeIndex++) {\n            char firstAllele = Genotype.values()[genotypeIndex].toString().charAt(0);\n            char secondAllele = Genotype.values()[genotypeIndex].toString().charAt(1);\n\n            int offIsGenotypic = 0;\n            int offTotal = 0;\n\n            int onIsGenotypic = 0;\n            int onTotal = 0;\n\n            for (int pileupIndex = 0; pileupIndex < primaryBases.length(); pileupIndex++) {\n                char primaryBase = primaryBases.charAt(pileupIndex);\n\n                if (secondaryBases != null) {\n                    char secondaryBase = secondaryBases.charAt(pileupIndex);\n\n                    if (primaryBase != firstAllele && primaryBase != secondAllele) {\n                        if (secondaryBase == firstAllele || secondaryBase == secondAllele) {\n                            offIsGenotypic++;\n                        }\n                        offTotal++;\n                    } else {\n                        if (secondaryBase == firstAllele || secondaryBase == secondAllele) {\n                            onIsGenotypic++;\n                        }\n                        onTotal++;\n                    }\n                }\n            }\n\n            double offPrior = MathUtils.binomialProbability(offIsGenotypic, offTotal, p2off[genotypeIndex]);\n            double onPrior = MathUtils.binomialProbability(onIsGenotypic, onTotal, p2on[genotypeIndex]);\n\n            double logOffPrior = MathUtils.compareDoubles(offPrior, 0.0, 1e-10) == 0 ? Math.log10(Double.MIN_VALUE) : Math.log10(offPrior);\n            double logOnPrior = MathUtils.compareDoubles(onPrior, 0.0, 1e-10) == 0 ? Math.log10(Double.MIN_VALUE) : Math.log10(onPrior);\n\n            likelihoods[genotypeIndex] += logOffPrior + logOnPrior;\n        }\n\n        return likelihoods;\n    }","commit_id":"038cbcf80e69c8a43140c4fc9c16df1a842a4b6e","url":"https://github.com/broadgsa/gatk"},{"original_method":"/**\n     * @param chartConfig\n     * @param baseDataSet\n     * @return\n     */\n    private static JFreeChart createBarChart(BarChart chartConfig, DefaultCategoryDataset baseDataSet) {\n        PlotOrientation po = (chartConfig.getPlotOrientation() == \"horizontal\" ? PlotOrientation.HORIZONTAL : PlotOrientation.VERTICAL);        \n        JFreeChart barChart = ChartFactory.createBarChart(chartConfig.getTitle().getValue(),\n                chartConfig.getDomainAxisLabel(),\n                chartConfig.getRangeAxisLabel(),\n                baseDataSet,\n                po,\n                chartConfig.getShowLegend(),\n                chartConfig.getShowToolTips(),\n                chartConfig.getShowUrls());\n        \n        // Create a bit more headroom for value labels than is allowed for by the default 0.05 upper margin\n        ValueAxis rangeAxis = barChart.getCategoryPlot().getRangeAxis();\n        if (rangeAxis.getUpperMargin() < 0.1) {\n            rangeAxis.setUpperMargin(0.1);\n        }\n        \n        return barChart;\n    }","id":16061,"modified_method":"/**\n     * @param chartConfig\n     * @param baseDataSet\n     * @return\n     */\n    private static JFreeChart createBarChart(BarChart chartConfig, DefaultCategoryDataset baseDataSet) {\n        PlotOrientation po = (chartConfig.getPlotOrientation() == \"horizontal\" ? PlotOrientation.HORIZONTAL : PlotOrientation.VERTICAL);        \n        JFreeChart barChart = null;\n        if (\"3d\".equalsIgnoreCase(chartConfig.getVariation())) {\n            barChart = ChartFactory.createBarChart3D(chartConfig.getTitle().getValue(),\n                    chartConfig.getDomainAxisLabel(),\n                    chartConfig.getRangeAxisLabel(),\n                    baseDataSet,\n                    po,\n                    chartConfig.getShowLegend(),\n                    chartConfig.getShowToolTips(),\n                    chartConfig.getShowUrls());\n        } else {\n            barChart = ChartFactory.createBarChart(chartConfig.getTitle().getValue(),\n                    chartConfig.getDomainAxisLabel(),\n                    chartConfig.getRangeAxisLabel(),\n                    baseDataSet,\n                    po,\n                    chartConfig.getShowLegend(),\n                    chartConfig.getShowToolTips(),\n                    chartConfig.getShowUrls());\n        }\n        \n        // Create a bit more headroom for value labels than is allowed for by the default 0.05 upper margin\n        ValueAxis rangeAxis = barChart.getCategoryPlot().getRangeAxis();\n        if (rangeAxis.getUpperMargin() < 0.1) {\n            rangeAxis.setUpperMargin(0.1);\n        }\n        \n        return barChart;\n    }","commit_id":"1b32bd4998057abb3787f2061ef36e2032a1f58b","url":"https://github.com/OpenNMS/opennms"},{"original_method":"/**\n     * @param chartConfig\n     * @param baseDataSet\n     * @return\n     */\n    private static JFreeChart createBarChart(BarChart chartConfig, DefaultCategoryDataset baseDataSet) {\n        PlotOrientation po = (chartConfig.getPlotOrientation() == \"horizontal\" ? PlotOrientation.HORIZONTAL : PlotOrientation.VERTICAL);        \n        JFreeChart barChart = ChartFactory.createBarChart(chartConfig.getTitle().getValue(),\n                chartConfig.getDomainAxisLabel(),\n                chartConfig.getRangeAxisLabel(),\n                baseDataSet,\n                po,\n                chartConfig.getShowLegend(),\n                chartConfig.getShowToolTips(),\n                chartConfig.getShowUrls());\n        \n        // Create a bit more headroom for value labels than is allowed for by the default 0.05 upper margin\n        ValueAxis rangeAxis = barChart.getCategoryPlot().getRangeAxis();\n        if (rangeAxis.getUpperMargin() < 0.1) {\n            rangeAxis.setUpperMargin(0.1);\n        }\n        \n        return barChart;\n    }","id":16062,"modified_method":"/**\n     * @param chartConfig\n     * @param baseDataSet\n     * @return\n     */\n    private static JFreeChart createBarChart(BarChart chartConfig, DefaultCategoryDataset baseDataSet) {\n        PlotOrientation po = (chartConfig.getPlotOrientation() == \"horizontal\" ? PlotOrientation.HORIZONTAL : PlotOrientation.VERTICAL);        \n        JFreeChart barChart = null;\n        if (\"3d\".equalsIgnoreCase(chartConfig.getVariation())) {\n            barChart = ChartFactory.createBarChart3D(chartConfig.getTitle().getValue(),\n                    chartConfig.getDomainAxisLabel(),\n                    chartConfig.getRangeAxisLabel(),\n                    baseDataSet,\n                    po,\n                    chartConfig.getShowLegend(),\n                    chartConfig.getShowToolTips(),\n                    chartConfig.getShowUrls());\n        } else {\n            barChart = ChartFactory.createBarChart(chartConfig.getTitle().getValue(),\n                    chartConfig.getDomainAxisLabel(),\n                    chartConfig.getRangeAxisLabel(),\n                    baseDataSet,\n                    po,\n                    chartConfig.getShowLegend(),\n                    chartConfig.getShowToolTips(),\n                    chartConfig.getShowUrls());\n        }\n        \n        // Create a bit more headroom for value labels than is allowed for by the default 0.05 upper margin\n        ValueAxis rangeAxis = barChart.getCategoryPlot().getRangeAxis();\n        if (rangeAxis.getUpperMargin() < 0.1) {\n            rangeAxis.setUpperMargin(0.1);\n        }\n        \n        return barChart;\n    }","commit_id":"52351c384c3b3945ab0c88ea20555092664ecbda","url":"https://github.com/OpenNMS/opennms"},{"original_method":"/**\n     * @param chartConfig\n     * @param baseDataSet\n     * @return\n     */\n    private static JFreeChart createBarChart(BarChart chartConfig, DefaultCategoryDataset baseDataSet) {\n        PlotOrientation po = (chartConfig.getPlotOrientation() == \"horizontal\" ? PlotOrientation.HORIZONTAL : PlotOrientation.VERTICAL);        \n        JFreeChart barChart = ChartFactory.createBarChart(chartConfig.getTitle().getValue(),\n                chartConfig.getDomainAxisLabel(),\n                chartConfig.getRangeAxisLabel(),\n                baseDataSet,\n                po,\n                chartConfig.getShowLegend(),\n                chartConfig.getShowToolTips(),\n                chartConfig.getShowUrls());\n        \n        // Create a bit more headroom for value labels than is allowed for by the default 0.05 upper margin\n        ValueAxis rangeAxis = barChart.getCategoryPlot().getRangeAxis();\n        if (rangeAxis.getUpperMargin() < 0.1) {\n            rangeAxis.setUpperMargin(0.1);\n        }\n        \n        return barChart;\n    }","id":16063,"modified_method":"/**\n     * @param chartConfig\n     * @param baseDataSet\n     * @return\n     */\n    private static JFreeChart createBarChart(BarChart chartConfig, DefaultCategoryDataset baseDataSet) {\n        PlotOrientation po = (chartConfig.getPlotOrientation() == \"horizontal\" ? PlotOrientation.HORIZONTAL : PlotOrientation.VERTICAL);        \n        JFreeChart barChart = null;\n        if (\"3d\".equalsIgnoreCase(chartConfig.getVariation())) {\n            barChart = ChartFactory.createBarChart3D(chartConfig.getTitle().getValue(),\n                    chartConfig.getDomainAxisLabel(),\n                    chartConfig.getRangeAxisLabel(),\n                    baseDataSet,\n                    po,\n                    chartConfig.getShowLegend(),\n                    chartConfig.getShowToolTips(),\n                    chartConfig.getShowUrls());\n        } else {\n            barChart = ChartFactory.createBarChart(chartConfig.getTitle().getValue(),\n                    chartConfig.getDomainAxisLabel(),\n                    chartConfig.getRangeAxisLabel(),\n                    baseDataSet,\n                    po,\n                    chartConfig.getShowLegend(),\n                    chartConfig.getShowToolTips(),\n                    chartConfig.getShowUrls());\n        }\n        \n        // Create a bit more headroom for value labels than is allowed for by the default 0.05 upper margin\n        ValueAxis rangeAxis = barChart.getCategoryPlot().getRangeAxis();\n        if (rangeAxis.getUpperMargin() < 0.1) {\n            rangeAxis.setUpperMargin(0.1);\n        }\n        \n        return barChart;\n    }","commit_id":"a4fbe78e4c4b9d6ac2f9f27ea912f4f84f1594a4","url":"https://github.com/OpenNMS/opennms"},{"original_method":"public AlleleFrequencyEstimate(GenomeLoc location, char ref, char alt, int N, double qhat, double qstar, double lodVsRef, double lodVsNextBest, double pBest, double pRef, int depth, String bases, double[][] quals)\n    {\n        this.location = location;\n        this.ref = ref;\n        this.alt = alt;\n        this.N = N;\n        this.qhat = qhat;\n        this.qstar = qstar;\n        this.lodVsRef = lodVsRef;\n        this.lodVsNextBest = lodVsNextBest;\n        this.depth = depth;\n        this.notes = \"\";\n        this.bases = bases;\n        this.quals = quals;\n    }","id":16064,"modified_method":"public AlleleFrequencyEstimate(GenomeLoc location, char ref, char alt, int N, double qhat, double qstar, double lodVsRef, double lodVsNextBest, double pBest, double pRef, int depth, String bases, double[][] quals, double[] posteriors)\n    {\n        if( Double.isNaN(lodVsRef)) { System.out.printf(\"lodVsRef is NaN\\n\"); }\n        if( Double.isNaN(lodVsNextBest)) { System.out.printf(\"lodVsNextBest is NaN\\n\"); }\n        if( Double.isNaN(qhat)) { System.out.printf(\"qhat is NaN\\n\"); }\n        if( Double.isNaN(qstar)) { System.out.printf(\"qstar is NaN\\n\"); }\n        if( Double.isNaN(pBest)) { System.out.printf(\"pBest is NaN\\n\"); }\n        if( Double.isNaN(pRef)) { System.out.printf(\"pRef is NaN\\n\"); }\n\n        if( Double.isInfinite(lodVsRef)) { System.out.printf(\"lodVsRef is Infinite\\n\"); }\n        if( Double.isInfinite(lodVsNextBest)) { System.out.printf(\"lodVsNextBest is Infinite\\n\"); }\n        if( Double.isInfinite(qhat)) { System.out.printf(\"qhat is Infinite\\n\"); }\n        if( Double.isInfinite(qstar)) { System.out.printf(\"qstar is Infinite\\n\"); }\n        if( Double.isInfinite(pBest)) { System.out.printf(\"pBest is Infinite\\n\"); }\n        if( Double.isInfinite(pRef)) { System.out.printf(\"pRef is Infinite\\n\"); }\n\n        assert(! Double.isNaN(lodVsRef));\n        assert(! Double.isNaN(lodVsNextBest));\n        assert(! Double.isNaN(qhat));\n        assert(! Double.isNaN(qstar));\n        assert(! Double.isNaN(pBest));\n        assert(! Double.isNaN(pRef));\n\n        assert(! Double.isInfinite(lodVsRef));\n        assert(! Double.isInfinite(lodVsNextBest));\n        assert(! Double.isInfinite(qhat));\n        assert(! Double.isInfinite(qstar));\n        assert(! Double.isInfinite(pBest));\n        assert(! Double.isInfinite(pRef));\n\n        this.location = location;\n        this.ref = ref;\n        this.alt = alt;\n        this.N = N;\n        this.qhat = qhat;\n        this.qstar = qstar;\n        this.lodVsRef = lodVsRef;\n        this.lodVsNextBest = lodVsNextBest;\n        this.depth = depth;\n        this.notes = \"\";\n        this.bases = bases;\n        this.quals = quals;\n        this.posteriors = posteriors;\n    }","commit_id":"af6788fa3d23c51cb98c74184d86ee5114fe82cf","url":"https://github.com/broadgsa/gatk"},{"original_method":"public double emperical_allele_frequency(int N)\n    {\n        return (double)Math.round((double)qhat * (double)N) / (double)N;\n    }","id":16065,"modified_method":"public double emperical_allele_frequency(int N)\n    {\n        return (double)Math.round((double)qstar * (double)N) / (double)N;\n    }","commit_id":"af6788fa3d23c51cb98c74184d86ee5114fe82cf","url":"https://github.com/broadgsa/gatk"},{"original_method":"public double emperical_allele_frequency()\n    {\n        return (double)Math.round((double)qhat * (double)N) / (double)N;\n    }","id":16066,"modified_method":"public double emperical_allele_frequency()\n    {\n        return (double)Math.round((double)qstar * (double)N) / (double)N;\n    }","commit_id":"af6788fa3d23c51cb98c74184d86ee5114fe82cf","url":"https://github.com/broadgsa/gatk"},{"original_method":"static public double[][] getQuals (LocusContext context)\n    {\n        int numReads = context.getReads().size(); //numReads();\n        double[][] quals = new double[numReads][4];\n\n        List<SAMRecord> reads = context.getReads();\n        List<Integer> offsets = context.getOffsets();\n        for (int i =0; i < numReads; i++ ) {\n            SAMRecord read = reads.get(i);\n            int offset = offsets.get(i);\n\n            // First, set the called base to the correct quality\n            int callednum = nuc2num[read.getReadBases()[offset]]; // number of the called base (0,1,2,3)\n\n            quals[i][callednum] = 1 - Math.pow(10.0, (double)read.getBaseQualities()[offset] / -10.0);\n\n            // For other 3 bases, check if 2-base probs exist\n            assert (reads.size() > 0);\n            Object SQ_field = reads.get(i).getAttribute(\"SQ\");\n            if (SQ_field == null || FORCE_1BASE_PROBS) {\n                // Set all nonref qual scores to their share of the remaining probality not \"used\" by the reference base's qual\n                double nonref_quals = (1.0 - quals[i][callednum]) / 3;\n                for (int b=0; b<4; b++)\n                    if (b != callednum)\n                        quals[i][b] = nonref_quals + quality_precision;\n            }else{\n                assert (SQ_field instanceof byte[]);\n                byte[] hex_quals = (byte[]) SQ_field;\n                //System.out.printf(\"SQ field (hex): %s\\n\", bytesToHexString(hex_quals));\n                //System.out.printf(\"SAM record: %s\\n\", read.format());\n\n                byte hex_qual = hex_quals[offset];\n                int called2num = QualityUtils.compressedQualityToBaseIndex(hex_qual);\n\n                /*\n                int crossTalkPartnerIndex = BaseUtils.crossTalkPartnerIndex(callednum);\n                \n                if (called2num == crossTalkPartnerIndex) {\n                    double nonref_quals = (1.0 - quals[i][callednum]) / 3.0;\n                    for (int b=0; b<4; b++)\n                        if (b != callednum)\n                            quals[i][b] = nonref_quals;\n                } else {\n                */\n                    double qual2 = QualityUtils.compressedQualityToProb(hex_qual);\n                    //System.out.printf(\"2ND %x %d %f\\n\", hex_qual, called2num, qual2);\n                    quals[i][called2num] = qual2 + quality_precision;\n\n                    double nonref_quals = (1.0 - quals[i][callednum] - quals[i][called2num]) / 2.0;\n                    for (int b=0; b<4; b++)\n                        if (b != callednum && b != called2num)\n                            quals[i][b] = nonref_quals;\n                //}\n            }\n        }\n\n        //print_base_qual_matrix(quals);\n        return quals;\n    }","id":16067,"modified_method":"public double[][] getQuals (LocusContext context)\n    {\n        int numReads = context.getReads().size(); //numReads();\n        double[][] quals = new double[numReads][4];\n\n        List<SAMRecord> reads = context.getReads();\n        List<Integer> offsets = context.getOffsets();\n        for (int i =0; i < numReads; i++ ) {\n            SAMRecord read = reads.get(i);\n            int offset = offsets.get(i);\n\n            // First, set the called base to the correct quality\n            int callednum = nuc2num[read.getReadBases()[offset]]; // number of the called base (0,1,2,3)\n\n            quals[i][callednum] = 1 - Math.pow(10.0, (double)read.getBaseQualities()[offset] / -10.0);\n\n            // For other 3 bases, check if 2-base probs exist\n            assert (reads.size() > 0);\n            Object SQ_field = reads.get(i).getAttribute(\"SQ\");\n            if (SQ_field == null || FORCE_1BASE_PROBS) {\n                // Set all nonref qual scores to their share of the remaining probality not \"used\" by the reference base's qual\n                double nonref_quals = (1.0 - quals[i][callednum]) / 3;\n                for (int b=0; b<4; b++)\n                {\n                    if (b != callednum)\n                    {\n                        quals[i][b] = nonref_quals;\n                        if (quals[i][b] <= quality_precision) { quals[i][b] = quality_precision; } // avoid zero probs.\n                    }\n                }\n            }else{\n                assert (SQ_field instanceof byte[]);\n                byte[] hex_quals = (byte[]) SQ_field;\n                //System.out.printf(\"SQ field (hex): %s\\n\", bytesToHexString(hex_quals));\n                //System.out.printf(\"SAM record: %s\\n\", read.format());\n\n                byte hex_qual = hex_quals[offset];\n                int called2num = QualityUtils.compressedQualityToBaseIndex(hex_qual);\n\n                /*\n                int crossTalkPartnerIndex = BaseUtils.crossTalkPartnerIndex(callednum);\n                \n                if (called2num == crossTalkPartnerIndex) {\n                    double nonref_quals = (1.0 - quals[i][callednum]) / 3.0;\n                    for (int b=0; b<4; b++)\n                        if (b != callednum)\n                            quals[i][b] = nonref_quals;\n                } else {\n                */\n                    double qual2 = QualityUtils.compressedQualityToProb(hex_qual);\n                    //System.out.printf(\"2ND %x %d %f\\n\", hex_qual, called2num, qual2);\n                    quals[i][called2num] = qual2;\n                    if (quals[i][called2num] <= quality_precision) { quals[i][called2num] = quality_precision; } // avoid zero probs.\n\n                    double nonref_quals = (1.0 - quals[i][callednum] - quals[i][called2num]) / 2.0;\n                    for (int b=0; b<4; b++)\n                        if (b != callednum && b != called2num)\n                            quals[i][b] = nonref_quals;\n                //}\n            }\n        }\n\n        //print_base_qual_matrix(quals);\n        return quals;\n    }","commit_id":"af6788fa3d23c51cb98c74184d86ee5114fe82cf","url":"https://github.com/broadgsa/gatk"},{"original_method":"public static void main(String[] args)\n    {\n\n        AlleleFrequencyWalker.binomialProb(5,10,0.5);\n        AlleleFrequencyWalker.binomialProb(50,100,0.5);\n        AlleleFrequencyWalker.binomialProb(1500,2965,0.508065);\n\n        {\n            int N = 2;\n\t        byte[] het_bases = {0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  \n\t                        1, 1, 1, 1, 1, 1, 1, 1, 1, 1};\n\t        double[][] het_quals = {{0.999, 0.001/3.0, 0.001/3.0, 0.001/3.0},\n\t                                {0.999, 0.001/3.0, 0.001/3.0, 0.001/3.0},\n\t                                {0.999, 0.001/3.0, 0.001/3.0, 0.001/3.0},\n\t                                {0.999, 0.001/3.0, 0.001/3.0, 0.001/3.0},\n\t                                {0.999, 0.001/3.0, 0.001/3.0, 0.001/3.0},\n\t                                {0.999, 0.001/3.0, 0.001/3.0, 0.001/3.0},\n\t                                {0.999, 0.001/3.0, 0.001/3.0, 0.001/3.0},\n\t                                {0.999, 0.001/3.0, 0.001/3.0, 0.001/3.0},\n\t                                {0.999, 0.001/3.0, 0.001/3.0, 0.001/3.0},\n\t                                {0.999, 0.001/3.0, 0.001/3.0, 0.001/3.0},\n\t                                {0.001/3.0, 0.999, 0.001/3.0, 0.001/3.0},\n\t                                {0.001/3.0, 0.999, 0.001/3.0, 0.001/3.0},\n\t                                {0.001/3.0, 0.999, 0.001/3.0, 0.001/3.0},\n\t                                {0.001/3.0, 0.999, 0.001/3.0, 0.001/3.0},\n\t                                {0.001/3.0, 0.999, 0.001/3.0, 0.001/3.0},\n\t                                {0.001/3.0, 0.999, 0.001/3.0, 0.001/3.0},\n\t                                {0.001/3.0, 0.999, 0.001/3.0, 0.001/3.0},\n\t                                {0.001/3.0, 0.999, 0.001/3.0, 0.001/3.0},\n\t                                {0.001/3.0, 0.999, 0.001/3.0, 0.001/3.0},\n\t                                {0.001/3.0, 0.999, 0.001/3.0, 0.001/3.0}};\n\t        AlleleFrequencyWalker w = new AlleleFrequencyWalker();\n\t        AlleleFrequencyEstimate estimate = w.AlleleFrequencyEstimator(null, N, het_bases, het_quals, 0, 1, 20);\n\t        System.out.print(String.format(\"50%% Het : %s %c %c %f %f %f %d %s\\n\", \n\t                                        \"null\", estimate.ref, estimate.alt, estimate.qhat, estimate.qstar, estimate.lodVsRef, 20, \"null\"));\n        }\n\n        {\n\t        byte[] het_bases = {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1};\n\t                        \n\t        double[][] het_quals = {\n\t                                {0.001/3.0, 0.999, 0.001/3.0, 0.001/3.0},\n\t                                {0.001/3.0, 0.999, 0.001/3.0, 0.001/3.0},\n\t                                {0.001/3.0, 0.999, 0.001/3.0, 0.001/3.0},\n\t                                {0.001/3.0, 0.999, 0.001/3.0, 0.001/3.0},\n\t                                {0.001/3.0, 0.999, 0.001/3.0, 0.001/3.0},\n\t                                {0.001/3.0, 0.999, 0.001/3.0, 0.001/3.0},\n\t                                {0.001/3.0, 0.999, 0.001/3.0, 0.001/3.0},\n\t                                {0.001/3.0, 0.999, 0.001/3.0, 0.001/3.0},\n\t                                {0.001/3.0, 0.999, 0.001/3.0, 0.001/3.0},\n\t                                {0.001/3.0, 0.999, 0.001/3.0, 0.001/3.0},\n                                    {0.999, 0.001/3.0, 0.001/3.0, 0.001/3.0},\n                                    {0.999, 0.001/3.0, 0.001/3.0, 0.001/3.0},\n                                    {0.999, 0.001/3.0, 0.001/3.0, 0.001/3.0},\n                                    {0.999, 0.001/3.0, 0.001/3.0, 0.001/3.0},\n                                    {0.999, 0.001/3.0, 0.001/3.0, 0.001/3.0},\n                                    {0.999, 0.001/3.0, 0.001/3.0, 0.001/3.0},\n                                    {0.999, 0.001/3.0, 0.001/3.0, 0.001/3.0},\n                                    {0.999, 0.001/3.0, 0.001/3.0, 0.001/3.0},\n                                    {0.999, 0.001/3.0, 0.001/3.0, 0.001/3.0},\n                                    {0.999, 0.001/3.0, 0.001/3.0, 0.001/3.0},\n                                    {0.999, 0.001/3.0, 0.001/3.0, 0.001/3.0},\n                                    {0.999, 0.001/3.0, 0.001/3.0, 0.001/3.0},\n                                    {0.999, 0.001/3.0, 0.001/3.0, 0.001/3.0},\n                                    {0.999, 0.001/3.0, 0.001/3.0, 0.001/3.0},\n                                    {0.999, 0.001/3.0, 0.001/3.0, 0.001/3.0},\n                                    {0.999, 0.001/3.0, 0.001/3.0, 0.001/3.0},\n                                    {0.999, 0.001/3.0, 0.001/3.0, 0.001/3.0},\n                                    {0.999, 0.001/3.0, 0.001/3.0, 0.001/3.0},\n                                    {0.999, 0.001/3.0, 0.001/3.0, 0.001/3.0},\n                                    {0.999, 0.001/3.0, 0.001/3.0, 0.001/3.0},\n                                    {0.999, 0.001/3.0, 0.001/3.0, 0.001/3.0},\n                                    {0.999, 0.001/3.0, 0.001/3.0, 0.001/3.0},\n                                    {0.999, 0.001/3.0, 0.001/3.0, 0.001/3.0},\n                                    {0.999, 0.001/3.0, 0.001/3.0, 0.001/3.0},\n                                    {0.999, 0.001/3.0, 0.001/3.0, 0.001/3.0},\n                                    {0.999, 0.001/3.0, 0.001/3.0, 0.001/3.0},\n                                    {0.999, 0.001/3.0, 0.001/3.0, 0.001/3.0},\n                                    {0.999, 0.001/3.0, 0.001/3.0, 0.001/3.0},\n                                    {0.999, 0.001/3.0, 0.001/3.0, 0.001/3.0},\n                                    {0.999, 0.001/3.0, 0.001/3.0, 0.001/3.0},\n                                    {0.999, 0.001/3.0, 0.001/3.0, 0.001/3.0},\n                                    {0.999, 0.001/3.0, 0.001/3.0, 0.001/3.0},\n                                    {0.999, 0.001/3.0, 0.001/3.0, 0.001/3.0},\n                                    {0.999, 0.001/3.0, 0.001/3.0, 0.001/3.0},\n                                    {0.999, 0.001/3.0, 0.001/3.0, 0.001/3.0},\n                                    {0.999, 0.001/3.0, 0.001/3.0, 0.001/3.0},\n                                    {0.999, 0.001/3.0, 0.001/3.0, 0.001/3.0},\n                                    {0.999, 0.001/3.0, 0.001/3.0, 0.001/3.0},\n                                    {0.999, 0.001/3.0, 0.001/3.0, 0.001/3.0},\n                                    {0.999, 0.001/3.0, 0.001/3.0, 0.001/3.0},\n                                    {0.999, 0.001/3.0, 0.001/3.0, 0.001/3.0},\n                                    {0.999, 0.001/3.0, 0.001/3.0, 0.001/3.0},\n                                    {0.999, 0.001/3.0, 0.001/3.0, 0.001/3.0},\n                                    {0.999, 0.001/3.0, 0.001/3.0, 0.001/3.0},\n                                    {0.999, 0.001/3.0, 0.001/3.0, 0.001/3.0},\n                                    {0.999, 0.001/3.0, 0.001/3.0, 0.001/3.0},\n                                    {0.999, 0.001/3.0, 0.001/3.0, 0.001/3.0},\n                                    {0.999, 0.001/3.0, 0.001/3.0, 0.001/3.0},\n                                    {0.999, 0.001/3.0, 0.001/3.0, 0.001/3.0},\n                                    {0.999, 0.001/3.0, 0.001/3.0, 0.001/3.0},\n                                    {0.999, 0.001/3.0, 0.001/3.0, 0.001/3.0},\n                                    {0.999, 0.001/3.0, 0.001/3.0, 0.001/3.0},\n                                    {0.999, 0.001/3.0, 0.001/3.0, 0.001/3.0},\n                                    {0.999, 0.001/3.0, 0.001/3.0, 0.001/3.0},\n                                    {0.999, 0.001/3.0, 0.001/3.0, 0.001/3.0},\n                                    {0.999, 0.001/3.0, 0.001/3.0, 0.001/3.0},\n                                    {0.999, 0.001/3.0, 0.001/3.0, 0.001/3.0},\n                                    {0.999, 0.001/3.0, 0.001/3.0, 0.001/3.0},\n                                    {0.999, 0.001/3.0, 0.001/3.0, 0.001/3.0},\n                                    {0.999, 0.001/3.0, 0.001/3.0, 0.001/3.0},\n                                    {0.999, 0.001/3.0, 0.001/3.0, 0.001/3.0},\n                                    {0.999, 0.001/3.0, 0.001/3.0, 0.001/3.0},\n                                    {0.999, 0.001/3.0, 0.001/3.0, 0.001/3.0},\n                                    {0.999, 0.001/3.0, 0.001/3.0, 0.001/3.0},\n                                    {0.999, 0.001/3.0, 0.001/3.0, 0.001/3.0},\n                                    {0.999, 0.001/3.0, 0.001/3.0, 0.001/3.0},\n                                    {0.999, 0.001/3.0, 0.001/3.0, 0.001/3.0},\n                                    {0.999, 0.001/3.0, 0.001/3.0, 0.001/3.0},\n                                    {0.999, 0.001/3.0, 0.001/3.0, 0.001/3.0},\n                                    {0.999, 0.001/3.0, 0.001/3.0, 0.001/3.0},\n                                    {0.999, 0.001/3.0, 0.001/3.0, 0.001/3.0},\n                                    {0.999, 0.001/3.0, 0.001/3.0, 0.001/3.0},\n                                    {0.999, 0.001/3.0, 0.001/3.0, 0.001/3.0},\n                                    {0.999, 0.001/3.0, 0.001/3.0, 0.001/3.0},\n                                    {0.999, 0.001/3.0, 0.001/3.0, 0.001/3.0},\n                                    {0.999, 0.001/3.0, 0.001/3.0, 0.001/3.0},\n                                    {0.999, 0.001/3.0, 0.001/3.0, 0.001/3.0},\n                                    {0.999, 0.001/3.0, 0.001/3.0, 0.001/3.0},\n                                    {0.999, 0.001/3.0, 0.001/3.0, 0.001/3.0},\n                                    {0.999, 0.001/3.0, 0.001/3.0, 0.001/3.0},\n                                    {0.999, 0.001/3.0, 0.001/3.0, 0.001/3.0},\n                                    {0.999, 0.001/3.0, 0.001/3.0, 0.001/3.0},\n                                    {0.999, 0.001/3.0, 0.001/3.0, 0.001/3.0},\n                                    {0.999, 0.001/3.0, 0.001/3.0, 0.001/3.0},\n                                    {0.999, 0.001/3.0, 0.001/3.0, 0.001/3.0},\n                                    {0.999, 0.001/3.0, 0.001/3.0, 0.001/3.0},\n                                    {0.999, 0.001/3.0, 0.001/3.0, 0.001/3.0},\n                                    {0.999, 0.001/3.0, 0.001/3.0, 0.001/3.0},\n                                    {0.999, 0.001/3.0, 0.001/3.0, 0.001/3.0},\n                                    {0.999, 0.001/3.0, 0.001/3.0, 0.001/3.0},\n                                    {0.999, 0.001/3.0, 0.001/3.0, 0.001/3.0},\n                                   };\n\n            assert(het_bases.length == het_quals.length);\n\n            int N = 10;\n\t        AlleleFrequencyWalker w = new AlleleFrequencyWalker();\n            w.N = 10;\n\t        AlleleFrequencyEstimate estimate = w.AlleleFrequencyEstimator(null, N, het_bases, het_quals, 0, 1, 20);\n\t        System.out.print(String.format(\"10%% Het : %s %c %c %f %f %f %d %s\\n\", \n\t                                        \"null\", estimate.ref, estimate.alt, estimate.qhat, estimate.qstar, estimate.lodVsRef, 20, \"null\"));\n        }\n\n    }","id":16068,"modified_method":"public static void main(String[] args)\n    {\n\n        AlleleFrequencyWalker.binomialProb(5,10,0.5);\n        AlleleFrequencyWalker.binomialProb(50,100,0.5);\n        AlleleFrequencyWalker.binomialProb(1500,2965,0.508065);\n        AlleleFrequencyWalker.binomialProb(0,197,0.5);\n        AlleleFrequencyWalker.binomialProb(13,197,0.5);\n        System.exit(0);\n\n        {\n            int N = 2;\n\t        byte[] het_bases = {0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  \n\t                        1, 1, 1, 1, 1, 1, 1, 1, 1, 1};\n\t        double[][] het_quals = {{0.999, 0.001/3.0, 0.001/3.0, 0.001/3.0},\n\t                                {0.999, 0.001/3.0, 0.001/3.0, 0.001/3.0},\n\t                                {0.999, 0.001/3.0, 0.001/3.0, 0.001/3.0},\n\t                                {0.999, 0.001/3.0, 0.001/3.0, 0.001/3.0},\n\t                                {0.999, 0.001/3.0, 0.001/3.0, 0.001/3.0},\n\t                                {0.999, 0.001/3.0, 0.001/3.0, 0.001/3.0},\n\t                                {0.999, 0.001/3.0, 0.001/3.0, 0.001/3.0},\n\t                                {0.999, 0.001/3.0, 0.001/3.0, 0.001/3.0},\n\t                                {0.999, 0.001/3.0, 0.001/3.0, 0.001/3.0},\n\t                                {0.999, 0.001/3.0, 0.001/3.0, 0.001/3.0},\n\t                                {0.001/3.0, 0.999, 0.001/3.0, 0.001/3.0},\n\t                                {0.001/3.0, 0.999, 0.001/3.0, 0.001/3.0},\n\t                                {0.001/3.0, 0.999, 0.001/3.0, 0.001/3.0},\n\t                                {0.001/3.0, 0.999, 0.001/3.0, 0.001/3.0},\n\t                                {0.001/3.0, 0.999, 0.001/3.0, 0.001/3.0},\n\t                                {0.001/3.0, 0.999, 0.001/3.0, 0.001/3.0},\n\t                                {0.001/3.0, 0.999, 0.001/3.0, 0.001/3.0},\n\t                                {0.001/3.0, 0.999, 0.001/3.0, 0.001/3.0},\n\t                                {0.001/3.0, 0.999, 0.001/3.0, 0.001/3.0},\n\t                                {0.001/3.0, 0.999, 0.001/3.0, 0.001/3.0}};\n\t        AlleleFrequencyWalker w = new AlleleFrequencyWalker();\n\t        AlleleFrequencyEstimate estimate = w.AlleleFrequencyEstimator(null, N, het_bases, het_quals, 0, 1, 20);\n\t        System.out.print(String.format(\"50%% Het : %s %c %c %f %f %f %d %s\\n\", \n\t                                        \"null\", estimate.ref, estimate.alt, estimate.qhat, estimate.qstar, estimate.lodVsRef, 20, \"null\"));\n        }\n\n        {\n\t        byte[] het_bases = {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1};\n\t                        \n\t        double[][] het_quals = {\n\t                                {0.001/3.0, 0.999, 0.001/3.0, 0.001/3.0},\n\t                                {0.001/3.0, 0.999, 0.001/3.0, 0.001/3.0},\n\t                                {0.001/3.0, 0.999, 0.001/3.0, 0.001/3.0},\n\t                                {0.001/3.0, 0.999, 0.001/3.0, 0.001/3.0},\n\t                                {0.001/3.0, 0.999, 0.001/3.0, 0.001/3.0},\n\t                                {0.001/3.0, 0.999, 0.001/3.0, 0.001/3.0},\n\t                                {0.001/3.0, 0.999, 0.001/3.0, 0.001/3.0},\n\t                                {0.001/3.0, 0.999, 0.001/3.0, 0.001/3.0},\n\t                                {0.001/3.0, 0.999, 0.001/3.0, 0.001/3.0},\n\t                                {0.001/3.0, 0.999, 0.001/3.0, 0.001/3.0},\n                                    {0.999, 0.001/3.0, 0.001/3.0, 0.001/3.0},\n                                    {0.999, 0.001/3.0, 0.001/3.0, 0.001/3.0},\n                                    {0.999, 0.001/3.0, 0.001/3.0, 0.001/3.0},\n                                    {0.999, 0.001/3.0, 0.001/3.0, 0.001/3.0},\n                                    {0.999, 0.001/3.0, 0.001/3.0, 0.001/3.0},\n                                    {0.999, 0.001/3.0, 0.001/3.0, 0.001/3.0},\n                                    {0.999, 0.001/3.0, 0.001/3.0, 0.001/3.0},\n                                    {0.999, 0.001/3.0, 0.001/3.0, 0.001/3.0},\n                                    {0.999, 0.001/3.0, 0.001/3.0, 0.001/3.0},\n                                    {0.999, 0.001/3.0, 0.001/3.0, 0.001/3.0},\n                                    {0.999, 0.001/3.0, 0.001/3.0, 0.001/3.0},\n                                    {0.999, 0.001/3.0, 0.001/3.0, 0.001/3.0},\n                                    {0.999, 0.001/3.0, 0.001/3.0, 0.001/3.0},\n                                    {0.999, 0.001/3.0, 0.001/3.0, 0.001/3.0},\n                                    {0.999, 0.001/3.0, 0.001/3.0, 0.001/3.0},\n                                    {0.999, 0.001/3.0, 0.001/3.0, 0.001/3.0},\n                                    {0.999, 0.001/3.0, 0.001/3.0, 0.001/3.0},\n                                    {0.999, 0.001/3.0, 0.001/3.0, 0.001/3.0},\n                                    {0.999, 0.001/3.0, 0.001/3.0, 0.001/3.0},\n                                    {0.999, 0.001/3.0, 0.001/3.0, 0.001/3.0},\n                                    {0.999, 0.001/3.0, 0.001/3.0, 0.001/3.0},\n                                    {0.999, 0.001/3.0, 0.001/3.0, 0.001/3.0},\n                                    {0.999, 0.001/3.0, 0.001/3.0, 0.001/3.0},\n                                    {0.999, 0.001/3.0, 0.001/3.0, 0.001/3.0},\n                                    {0.999, 0.001/3.0, 0.001/3.0, 0.001/3.0},\n                                    {0.999, 0.001/3.0, 0.001/3.0, 0.001/3.0},\n                                    {0.999, 0.001/3.0, 0.001/3.0, 0.001/3.0},\n                                    {0.999, 0.001/3.0, 0.001/3.0, 0.001/3.0},\n                                    {0.999, 0.001/3.0, 0.001/3.0, 0.001/3.0},\n                                    {0.999, 0.001/3.0, 0.001/3.0, 0.001/3.0},\n                                    {0.999, 0.001/3.0, 0.001/3.0, 0.001/3.0},\n                                    {0.999, 0.001/3.0, 0.001/3.0, 0.001/3.0},\n                                    {0.999, 0.001/3.0, 0.001/3.0, 0.001/3.0},\n                                    {0.999, 0.001/3.0, 0.001/3.0, 0.001/3.0},\n                                    {0.999, 0.001/3.0, 0.001/3.0, 0.001/3.0},\n                                    {0.999, 0.001/3.0, 0.001/3.0, 0.001/3.0},\n                                    {0.999, 0.001/3.0, 0.001/3.0, 0.001/3.0},\n                                    {0.999, 0.001/3.0, 0.001/3.0, 0.001/3.0},\n                                    {0.999, 0.001/3.0, 0.001/3.0, 0.001/3.0},\n                                    {0.999, 0.001/3.0, 0.001/3.0, 0.001/3.0},\n                                    {0.999, 0.001/3.0, 0.001/3.0, 0.001/3.0},\n                                    {0.999, 0.001/3.0, 0.001/3.0, 0.001/3.0},\n                                    {0.999, 0.001/3.0, 0.001/3.0, 0.001/3.0},\n                                    {0.999, 0.001/3.0, 0.001/3.0, 0.001/3.0},\n                                    {0.999, 0.001/3.0, 0.001/3.0, 0.001/3.0},\n                                    {0.999, 0.001/3.0, 0.001/3.0, 0.001/3.0},\n                                    {0.999, 0.001/3.0, 0.001/3.0, 0.001/3.0},\n                                    {0.999, 0.001/3.0, 0.001/3.0, 0.001/3.0},\n                                    {0.999, 0.001/3.0, 0.001/3.0, 0.001/3.0},\n                                    {0.999, 0.001/3.0, 0.001/3.0, 0.001/3.0},\n                                    {0.999, 0.001/3.0, 0.001/3.0, 0.001/3.0},\n                                    {0.999, 0.001/3.0, 0.001/3.0, 0.001/3.0},\n                                    {0.999, 0.001/3.0, 0.001/3.0, 0.001/3.0},\n                                    {0.999, 0.001/3.0, 0.001/3.0, 0.001/3.0},\n                                    {0.999, 0.001/3.0, 0.001/3.0, 0.001/3.0},\n                                    {0.999, 0.001/3.0, 0.001/3.0, 0.001/3.0},\n                                    {0.999, 0.001/3.0, 0.001/3.0, 0.001/3.0},\n                                    {0.999, 0.001/3.0, 0.001/3.0, 0.001/3.0},\n                                    {0.999, 0.001/3.0, 0.001/3.0, 0.001/3.0},\n                                    {0.999, 0.001/3.0, 0.001/3.0, 0.001/3.0},\n                                    {0.999, 0.001/3.0, 0.001/3.0, 0.001/3.0},\n                                    {0.999, 0.001/3.0, 0.001/3.0, 0.001/3.0},\n                                    {0.999, 0.001/3.0, 0.001/3.0, 0.001/3.0},\n                                    {0.999, 0.001/3.0, 0.001/3.0, 0.001/3.0},\n                                    {0.999, 0.001/3.0, 0.001/3.0, 0.001/3.0},\n                                    {0.999, 0.001/3.0, 0.001/3.0, 0.001/3.0},\n                                    {0.999, 0.001/3.0, 0.001/3.0, 0.001/3.0},\n                                    {0.999, 0.001/3.0, 0.001/3.0, 0.001/3.0},\n                                    {0.999, 0.001/3.0, 0.001/3.0, 0.001/3.0},\n                                    {0.999, 0.001/3.0, 0.001/3.0, 0.001/3.0},\n                                    {0.999, 0.001/3.0, 0.001/3.0, 0.001/3.0},\n                                    {0.999, 0.001/3.0, 0.001/3.0, 0.001/3.0},\n                                    {0.999, 0.001/3.0, 0.001/3.0, 0.001/3.0},\n                                    {0.999, 0.001/3.0, 0.001/3.0, 0.001/3.0},\n                                    {0.999, 0.001/3.0, 0.001/3.0, 0.001/3.0},\n                                    {0.999, 0.001/3.0, 0.001/3.0, 0.001/3.0},\n                                    {0.999, 0.001/3.0, 0.001/3.0, 0.001/3.0},\n                                    {0.999, 0.001/3.0, 0.001/3.0, 0.001/3.0},\n                                    {0.999, 0.001/3.0, 0.001/3.0, 0.001/3.0},\n                                    {0.999, 0.001/3.0, 0.001/3.0, 0.001/3.0},\n                                    {0.999, 0.001/3.0, 0.001/3.0, 0.001/3.0},\n                                    {0.999, 0.001/3.0, 0.001/3.0, 0.001/3.0},\n                                    {0.999, 0.001/3.0, 0.001/3.0, 0.001/3.0},\n                                    {0.999, 0.001/3.0, 0.001/3.0, 0.001/3.0},\n                                    {0.999, 0.001/3.0, 0.001/3.0, 0.001/3.0},\n                                    {0.999, 0.001/3.0, 0.001/3.0, 0.001/3.0},\n                                    {0.999, 0.001/3.0, 0.001/3.0, 0.001/3.0},\n                                    {0.999, 0.001/3.0, 0.001/3.0, 0.001/3.0},\n                                    {0.999, 0.001/3.0, 0.001/3.0, 0.001/3.0},\n                                    {0.999, 0.001/3.0, 0.001/3.0, 0.001/3.0},\n                                    {0.999, 0.001/3.0, 0.001/3.0, 0.001/3.0},\n                                   };\n\n            assert(het_bases.length == het_quals.length);\n\n            int N = 10;\n\t        AlleleFrequencyWalker w = new AlleleFrequencyWalker();\n            w.N = 10;\n\t        AlleleFrequencyEstimate estimate = w.AlleleFrequencyEstimator(null, N, het_bases, het_quals, 0, 1, 20);\n\t        System.out.print(String.format(\"10%% Het : %s %c %c %f %f %f %d %s\\n\", \n\t                                        \"null\", estimate.ref, estimate.alt, estimate.qhat, estimate.qstar, estimate.lodVsRef, 20, \"null\"));\n        }\n\n    }","commit_id":"af6788fa3d23c51cb98c74184d86ee5114fe82cf","url":"https://github.com/broadgsa/gatk"},{"original_method":"double P_q_G(byte [] bases, int N, double q, double qstar, long q_R) \n    {\n        double epsilon = 1e-3;\n        if (qstar == 0) { qstar = epsilon; }\n        if (qstar == 1) { qstar = 1.0 - epsilon; }\n\n        if (N != 2) { return 0.0; }\n        else { return Math.log10(binomialProb(q_R, bases.length, qstar)); }\n    }","id":16069,"modified_method":"double P_q_G(byte [] bases, int N, double q, double qstar, long q_R) \n    {\n        double epsilon = 1e-3;\n        if (qstar == 0) { qstar = epsilon; }\n        if (qstar == 1) { qstar = 1.0 - epsilon; }\n\n        if (N != 2) { return 0.0; }\n        else { return binomialProb(q_R, bases.length, qstar); }\n    }","commit_id":"af6788fa3d23c51cb98c74184d86ee5114fe82cf","url":"https://github.com/broadgsa/gatk"},{"original_method":"static double binomialProb(long k, long n, double p) {\n        // k - number of successes\n        // n - number of Bernoulli trials\n        // p - probability of success\n\n        if ((n*p < 5) && (n*(1-p) < 5))\n        {\n            // For small n and the edges, compute it directly.\n            return (double)nchoosek(n, k) * Math.pow(p, k) * Math.pow(1-p, n-k);\n        }\n        else\n        {\n            // For large n, approximate with a gaussian.\n            double mean  = (double)(n*p);\n            double var   = Math.sqrt((double)(n*p)*(1.0-p));\n            double ans   = (double)(1.0 / (var*Math.sqrt(2*Math.PI)))*Math.exp(-1.0 * Math.pow((double)k-mean,2)/(2.0*var*var));\n            double check = (double)nchoosek(n, k) * Math.pow(p, k) * Math.pow(1-p, n-k);\n            double residual = ans - check;\n\n            //System.out.format(\"DBG: %d %.10f %.10f\\n\", nchoosek(n, k), Math.pow(p, k), Math.pow(1-p, n-k));\n            //System.out.format(\"RESIDUAL: (%d,%d,%f) %.10f %.10f %.10f\\n\", k, n, p, ans, check, residual);\n\n            return check;\n        }\n    }","id":16070,"modified_method":"static double binomialProb(long k, long n, double p) {\n        // k - number of successes\n        // n - number of Bernoulli trials\n        // p - probability of success\n\n        double ans;\n\n        //if (((double)n*p < 5.0) && ((double)n*(1.0-p) < 5.0))\n        if (n < 1000)\n        {\n            // For small n and the edges, compute it directly.\n            ans = Math.log10((double)nchoosek(n, k)) + Math.log10(Math.pow(p, k)) + Math.log10(Math.pow(1-p, n-k));\n            //System.out.printf(\"DBG1: %d %d %f %f\\n\", k, n, p, ans);\n        }\n        else\n        {\n            // For large n, approximate with a gaussian.\n            double mean  = (double)(n*p);\n            double var   = Math.sqrt((double)(n*p)*(1.0-p));\n            double ans_1   = Math.log10((double)(1.0 / (var*Math.sqrt(2*Math.PI)))*Math.exp(-1.0 * Math.pow((double)k-mean,2)/(2.0*var*var)));\n            double ans_2   = ((Utils.logGamma(n+1) - Utils.logGamma(k+1) - Utils.logGamma(n-k+1))/Math.log(10)) + Math.log10(Math.pow(p, k)) + Math.log10(Math.pow(1-p, n-k));\n            double check = Math.log10((double)nchoosek(n, k)) + Math.log10(Math.pow(p, k)) + Math.log10(Math.pow(1-p, n-k));\n            double residual = ans_2 - check;\n\n            //System.out.format(\"DBG: %d %.10f %.10f\\n\", nchoosek(n, k), Math.pow(p, k), Math.pow(1-p, n-k));\n            //System.out.format(\"RESIDUAL: (%d,%d,%f) %.10f %.10f %.10f\\n\", k, n, p, ans, check, residual);\n\n            //System.out.printf(\"DBG2: %d %d %f %f %f %f %f\\n\", k, n, p, check, ans_1, ans_2, residual);\n\n            //if ((Double.isInfinite(check) || (Double.isNaN(check))))\n            //{\n            //    System.out.printf(\"DBG2: %d %d %f %f\\n\", k, n, p, check);\n            //}\n\n            ans = ans_1;\n        }\n\n        //System.out.printf(\"DBG3: %f\\n\", ans);\n\n        return ans;\n    }","commit_id":"af6788fa3d23c51cb98c74184d86ee5114fe82cf","url":"https://github.com/broadgsa/gatk"},{"original_method":"public AlleleFrequencyEstimate AlleleFrequencyEstimator(GenomeLoc location, int N, byte[] bases, double[][] quals, int refnum, int altnum, int depth)\n    {\n\n        // q = hypothetical %nonref\n        // qstar = true %nonref\n        // G = N, qstar, alt\n        // N = number of chromosomes\n        // alt = alternate hypothesis base (most frequent nonref base)\n        // ref = reference base\n\n        double qstar;\n        int qstar_N;\n\n        double qstep = 0.001;\n        double qend = 1.0 + qstep / 10; // makes sure we get to 1.0 even with rounding error of qsteps accumulating\n\n        double posterior_null_hyp;\n\n        // Initialize empyt MixtureLikelihood holders for each possible qstar (N+1)\n        MixtureLikelihood[] bestMixtures = new MixtureLikelihood[N+1];\n            \n        {\n            double q = ML_q_byEM(bases, quals, refnum, altnum);\n            double pDq = P_D_q(bases, quals, q, refnum, altnum);\n            long q_R = Math.round(q*bases.length);\n\n            posterior_null_hyp = P_D_q(bases, quals, 0.0, refnum, altnum) + P_q_G(bases, N, 0.0, 0, 0) + P_G(N, 0);\n            bestMixtures[0] = new MixtureLikelihood(posterior_null_hyp, 0.0, 0.0);\n\n            //System.out.format(\"DBG %s %.2f %.2f %5.2f %5.2f %5.2f %5.2f %d %d %s\\n\", location, 0.0, 0.0, P_D_q(bases, quals, 0.0, refnum, altnum), P_q_G(bases, N, 0.0, 0, 0), P_G(N, 0), posterior_null_hyp, (int)(q*bases.length), (int)((1.0-q)*bases.length), new String(bases));\n\n            // qstar - true allele balances\n            //for (qstar = epsilon + ((1.0 - 2*epsilon)/N), qstar_N = 1; qstar <= 1.0; qstar += (1.0 - 2*epsilon)/N, qstar_N++) \n            for (qstar_N = 1; qstar_N <= N; qstar_N += 1)\n            { \n                qstar = (double)qstar_N / (double)N;\n\n                double pqG = P_q_G(bases, N, q, qstar, q_R);\n                double pG  = P_G(N, qstar_N); \n                double posterior = pDq + pqG + pG;\n\n                bestMixtures[qstar_N] = new MixtureLikelihood(posterior, qstar, q);\n\n                //System.out.format(\"DBG %s %.2f %.2f %5.2f %5.2f %5.2f %5.2f %d %d %s\\n\", location, q, qstar, pDq, pqG, pG, posterior, (int)(q*bases.length), (int)((1.0-q)*bases.length), new String(bases));\n            }\n        }\n\n        // First reverse sort NONREF mixtures according to highest posterior probabililty\n        Arrays.sort(bestMixtures);\n\n        // Calculate Lod of any variant call versus the reference call\n        // Answers how confident are we in the best variant (nonref) mixture versus the null hypothesis\n        // reference mixture - qhat = qstar = 0.0\n        double lodVarVsRef = bestMixtures[0].posterior - posterior_null_hyp;\n\n        // Now reverse sort ALL mixtures according to highest posterior probability\n        Arrays.sort(bestMixtures);\n\n        // Calculate Lod of the mixture versus other possible\n        // Answers how confident are we in the best mixture versus the nextPosition best mixture\n        double lodBestVsNextBest = bestMixtures[0].posterior - bestMixtures[1].posterior;\n\n        if (lodVarVsRef == 0) { lodVarVsRef = -1.0 * lodBestVsNextBest; }\n\n        AlleleFrequencyEstimate alleleFreq = new AlleleFrequencyEstimate(location,\n                                                                         num2nuc[refnum], \n                                                                         num2nuc[altnum],\n                                                                         N, \n                                                                         bestMixtures[0].qhat,\n                                                                         bestMixtures[0].qstar,\n                                                                         lodVarVsRef,\n                                                                         lodBestVsNextBest,\n                                                                         bestMixtures[0].posterior,\n                                                                         posterior_null_hyp,\n                                                                         depth,\n                                                                         new String(bases),\n                                                                         quals);\n        return alleleFreq;\n    }","id":16071,"modified_method":"public AlleleFrequencyEstimate AlleleFrequencyEstimator(GenomeLoc location, int N, byte[] bases, double[][] quals, int refnum, int altnum, int depth)\n    {\n\n        // q = hypothetical %nonref\n        // qstar = true %nonref\n        // G = N, qstar, alt\n        // N = number of chromosomes\n        // alt = alternate hypothesis base (most frequent nonref base)\n        // ref = reference base\n\n        double qstar;\n        int qstar_N;\n\n        double qstep = 0.001;\n        double qend = 1.0 + qstep / 10; // makes sure we get to 1.0 even with rounding error of qsteps accumulating\n\n        double posterior_null_hyp;\n\n        // Initialize empyt MixtureLikelihood holders for each possible qstar (N+1)\n        MixtureLikelihood[] bestMixtures = new MixtureLikelihood[N+1];\n        double posteriors[] = new double[N+1];\n            \n        {\n            double q = ML_q_byEM(bases, quals, refnum, altnum);\n            double pDq = P_D_q(bases, quals, q, refnum, altnum);\n            long q_R = Math.round(q*bases.length);\n\n            posterior_null_hyp = P_D_q(bases, quals, 0.0, refnum, altnum) + P_q_G(bases, N, 0.0, 0, 0) + P_G(N, 0);\n            bestMixtures[0] = new MixtureLikelihood(posterior_null_hyp, 0.0, 0.0);\n            posteriors[0] = posterior_null_hyp;\n\n            assert(! Double.isNaN(P_D_q(bases, quals, 0.0, refnum, altnum)));\n            assert(! Double.isNaN(P_q_G(bases, N, 0.0, 0, 0)));\n            assert(! Double.isNaN(P_G(N, 0)));\n\n            assert(! Double.isNaN(posteriors[0]));\n            assert(! Double.isInfinite(posteriors[0]));\n\n            //System.out.format(\"DBG %s %.2f %.2f %5.2f %5.2f %5.2f %5.2f %d %d %s\\n\", location, 0.0, 0.0, P_D_q(bases, quals, 0.0, refnum, altnum), P_q_G(bases, N, 0.0, 0, 0), P_G(N, 0), posterior_null_hyp, (int)(q*bases.length), (int)((1.0-q)*bases.length), new String(bases));\n\n            // qstar - true allele balances\n            //for (qstar = epsilon + ((1.0 - 2*epsilon)/N), qstar_N = 1; qstar <= 1.0; qstar += (1.0 - 2*epsilon)/N, qstar_N++) \n            for (qstar_N = 1; qstar_N <= N; qstar_N += 1)\n            { \n                qstar = (double)qstar_N / (double)N;\n\n                double pqG = P_q_G(bases, N, q, qstar, q_R);\n                double pG  = P_G(N, qstar_N); \n                double posterior = pDq + pqG + pG;\n\n                bestMixtures[qstar_N] = new MixtureLikelihood(posterior, qstar, q);\n                posteriors[qstar_N] = posterior;\n\n                //System.out.format(\"DBG %s %.2f %.2f %5.2f %5.2f %5.2f %5.2f %d %d %s\\n\", \n                //        location, q, qstar, pDq, pqG, pG, posterior, (int)(q*bases.length), (int)((1.0-q)*bases.length), new String(bases));\n            }\n        }\n\n        // First reverse sort mixtures according to highest posterior probabililty\n        Arrays.sort(bestMixtures);\n\n        // Calculate Lod of any variant call versus the reference call\n        // Answers how confident are we in the best variant (nonref) mixture versus the null hypothesis\n        // reference mixture - qhat = qstar = 0.0\n        double lodVarVsRef = bestMixtures[0].posterior - posterior_null_hyp;\n\n        // Now reverse sort ALL mixtures according to highest posterior probability\n        Arrays.sort(bestMixtures);\n\n        // Calculate Lod of the mixture versus other possible\n        // Answers how confident are we in the best mixture versus the nextPosition best mixture\n        double lodBestVsNextBest = bestMixtures[0].posterior - bestMixtures[1].posterior;\n\n        if (lodVarVsRef == 0) { lodVarVsRef = -1.0 * lodBestVsNextBest; }\n\n        AlleleFrequencyEstimate alleleFreq = new AlleleFrequencyEstimate(location,\n                                                                         num2nuc[refnum], \n                                                                         num2nuc[altnum],\n                                                                         N, \n                                                                         bestMixtures[0].qhat,\n                                                                         bestMixtures[0].qstar,\n                                                                         lodVarVsRef,\n                                                                         lodBestVsNextBest,\n                                                                         bestMixtures[0].posterior,\n                                                                         posterior_null_hyp,\n                                                                         depth,\n                                                                         new String(bases),\n                                                                         quals,\n                                                                         posteriors);\n        return alleleFreq;\n    }","commit_id":"af6788fa3d23c51cb98c74184d86ee5114fe82cf","url":"https://github.com/broadgsa/gatk"},{"original_method":"static long nchoosek(long n, long k) {\n        long m = n - k;\n        if (k < m)\n            k = m;\n\n        long t = 1;\n        for (long i = n, j = 1; i > k; i--, j++)\n            t = t * i / j;\n        return t;\n    }","id":16072,"modified_method":"static double nchoosek(long n, long k) \n    {\n\n        if (k > n)\n            return 0;\n\n        if (k > n/2)\n            k = n-k; // Take advantage of symmetry\n        \n        double accum = 1;\n        for (long i = 1; i <= k; i++)\n            accum = accum * (n-k+i) / i;\n\n        return accum + 0.5; // avoid rounding error\n\n                            /*\n        long m = n - k;\n        if (k < m)\n            k = m;\n\n        long t = 1;\n        for (long i = n, j = 1; i > k; i--, j++)\n            t = t * i / j;\n        return t;\n            */\n    }","commit_id":"af6788fa3d23c51cb98c74184d86ee5114fe82cf","url":"https://github.com/broadgsa/gatk"},{"original_method":"double P_G(int N, int qstar_N) \n    {\n        // badly hard coded right now.\n        \n        if ((N == 2) && (prior_alt_frequency != -1))\n        {\n            return ((double)qstar_N * prior_alt_frequency) + (((double)N-(double)qstar_N)*(1.0-prior_alt_frequency));\n        }\n        \n        if      (qstar_N == 0) { return Math.log10(0.999); }\n        else if (qstar_N == N) { return Math.log10(1e-5);  }\n        else                   { return Math.log10(1e-3);  }\n    }","id":16073,"modified_method":"double P_G(int N, int qstar_N) \n    {\n        // badly hard coded right now.\n        \n        if ((N == 2) && (prior_alt_frequency != -1))\n        {\n            double p = -1.0;\n\n            if      (qstar_N == 0) { p = Math.pow(1.0 - prior_alt_frequency, 2.0); }\n            else if (qstar_N == 1) { p = 2.0 * (prior_alt_frequency * (1.0 - prior_alt_frequency)); }\n            else if (qstar_N == 2) { p = Math.pow(prior_alt_frequency, 2.0); }\n            else                   { assert(false); }\n\n            //System.out.printf(\"DBG2: %d %d %f %f\\n\", N, qstar_N, prior_alt_frequency, p);\n\n            return Math.log10(p);            \n        }\n        \n        if      (qstar_N == 0) { return Math.log10(0.999); }\n        else if (qstar_N == N) { return Math.log10(1e-5);  }\n        else                   { return Math.log10(1e-3);  }\n    }","commit_id":"af6788fa3d23c51cb98c74184d86ee5114fe82cf","url":"https://github.com/broadgsa/gatk"},{"original_method":"double P_D_q(byte[] bases, double[][]quals, double q, int refnum, int altnum) \n    {\n        double p = 0.0;\n\n        for (int i=0; i<bases.length; i++) \n        {\n            p += Math.log10((1-q) * quals[i][refnum] + q * quals[i][altnum]);\n        }\n\n        return p;\n    }","id":16074,"modified_method":"double P_D_q(byte[] bases, double[][]quals, double q, int refnum, int altnum) \n    {\n        double p = 0.0;\n        double epsilon = 1e-4;\n\n        for (int i=0; i<bases.length; i++) \n        {\n            double atomic = (1-q) * quals[i][refnum] + q * quals[i][altnum];\n            if (atomic <= 0) { atomic = epsilon; }\n            if (Double.isNaN(Math.log10(atomic))) { System.out.printf(\"DBG: %f %f %f\\n\", q, quals[i][refnum], quals[i][altnum]); }\n            p += Math.log10(atomic);\n        }\n\n        return p;\n    }","commit_id":"af6788fa3d23c51cb98c74184d86ee5114fe82cf","url":"https://github.com/broadgsa/gatk"},{"original_method":"public AlleleFrequencyEstimate map(RefMetaDataTracker tracker, char ref, LocusContext context) \n    {\n        // 1. seperate each context.\n        LocusContext[] deep_contexts = new LocusContext[sample_names.size()];\n        for (int i = 0; i < sample_names.size(); i++)\n        {\n            deep_contexts[i] = filterLocusContext(context, sample_names.get(i), 0);\n        }\n\n        // 2. Pool the deep contexts. (for the hell of it)\n        LocusContext deep_pooled_context = poolLocusContext(deep_contexts);\n        \n        // 3. Call individuals from deep coverage.\n        AlleleFrequencyEstimate[] deep_calls    = new AlleleFrequencyEstimate[sample_names.size()];\n        for (int i = 0; i < sample_names.size(); i++)\n        {\n            deep_calls[i] = deep_callers.get(i).map(tracker, ref, deep_contexts[i]);\n        }\n\n        // 4. Count \"true\" allele frequency from deep calls, and compare to the estimated frequency from the pool.\n        // 4.1. Count \"true\" allele frequency from deep calls, and downsample the individuals with solid truth.\n        double true_alt_freq = 0.0;\n        double true_N        = 0.0;\n        LocusContext[] downsampled_contexts = new LocusContext[sample_names.size()];\n        for (int i = 0; i < deep_calls.length; i++)\n        {\n            downsampled_contexts[i] = null;\n            if ((deep_calls[i].lodVsNextBest >= 5.0) || (deep_calls[i].lodVsRef <= -5.0))\n            {\n                true_alt_freq += deep_calls[i].emperical_allele_frequency() * deep_calls[i].N;\n                true_N        += 2;\n                downsampled_contexts[i] = filterLocusContext(context, sample_names.get(i), DOWNSAMPLE + (int)(random.nextGaussian()*DOWNSAMPLE_NOISE));\n            }\n        }\n        true_alt_freq /= true_N;\n\n        if (true_N == 0.0) { return null; } // just bail if true_N == 0.\n\n        // 4.2. Pool just the contexts that have truth data.\n        LocusContext pooled_context = poolLocusContext(downsampled_contexts);\n\n\n        // EM Loop:\n        AlleleFrequencyEstimate pooled_call = null;\n\n\t    double correct_shallow_calls = 0;\n\t    double total_shallow_calls = 0;\n\t    AlleleFrequencyEstimate[] shallow_calls = null;\n\t    double EM_alt_freq = 0;\n\t    double EM_N = 0;\n        double shallow_calls_fraction_correct = 0;\n\n\t    // 5. Call the pool.  (this step is the EM init)\n\t    pooled_caller.N = (int)true_N;\n\t    pooled_call = pooled_caller.map(tracker, ref, pooled_context);\n\t    System.out.print(\"POOLED_CALL \" + pooled_call.asTabularString());\n\n        // (this loop is the EM cycle)\n\t    EM_alt_freq = pooled_call.qstar; //pooled_call.qhat;\n        int num_iterations = 10;\n        double[] trajectory = new double[num_iterations + 1]; trajectory[0] = EM_alt_freq;\n        double[] likelihood_trajectory = new double[num_iterations + 1]; likelihood_trajectory[0] = pooled_call.pBest;\n        for (int iterations = 0; iterations < num_iterations; iterations++)\n        { \n\t        // 6. Re-call from shallow coverage using the estimated frequency as a prior, \n\t        //    and compare to true deep calls, \n\t        //    and compute new MAF estimate.\n\t        correct_shallow_calls = 0;\n\t        total_shallow_calls   = 0;\n\t        shallow_calls = new AlleleFrequencyEstimate[sample_names.size()];\n\t        EM_N        = 0.0;\n            double EM_sum = 0.0;\n            double likelihood = 0.0;\n\n\t        for (int i = 0; i < deep_calls.length; i++)\n\t        {\n\t            // Only shallow-call things where we know the truth!\n\t            if ((deep_calls[i].lodVsNextBest >= 5.0) || (deep_calls[i].lodVsRef <= -5.0))\n\t            {\n\t                shallow_callers.get(i).setAlleleFrequencyPrior(EM_alt_freq);\n\t                shallow_calls[i] = shallow_callers.get(i).map(tracker, ref, downsampled_contexts[i]);\n\t                String deep_genotype = deep_calls[i].genotype();\n\t                String shallow_genotype = shallow_calls[i].genotype();\n\n                    likelihood += shallow_calls[i].lodVsNextBest;\n\t\n                    /*\n\t                System.out.printf(\"DBG: %f %f %f %f\\n\", \n\t                                        deep_calls[i].lodVsNextBest,\n\t                                        deep_calls[i].lodVsRef,\n\t                                        shallow_calls[i].lodVsNextBest,\n\t                                        shallow_calls[i].lodVsRef);\n                    */\n\t\n\t                if (deep_genotype.equals(shallow_genotype)) { correct_shallow_calls += 1; }\n\t                total_shallow_calls += 1;\n\t                   \n\t\t            EM_sum += shallow_calls[i].emperical_allele_frequency() * shallow_calls[i].N;\n\t\t            EM_N        += 2;\n\t            }\n\t        }\n\t        EM_alt_freq = EM_sum / EM_N;\n\t        shallow_calls_fraction_correct = correct_shallow_calls / total_shallow_calls;\n            trajectory[iterations+1] = EM_alt_freq;\n            likelihood_trajectory[iterations+1] = likelihood/(double)total_shallow_calls;\n        }\n\n        // 7. Compare to estimation from the pool.\n        System.out.printf(\"EVAL %s %f %f %f %f %f %f %d %d %f %f %f %f\\n\",\n                                pooled_call.location, \n                                pooled_call.lodVsRef, \n                                true_alt_freq, \n                                pooled_call.qhat, \n                                pooled_call.qstar, \n                                true_alt_freq * true_N,\n                                pooled_call.emperical_allele_frequency() * true_N,\n                                pooled_call.N, \n                                pooled_call.depth,\n                                total_shallow_calls, \n                                correct_shallow_calls, \n                                shallow_calls_fraction_correct,\n                                EM_alt_freq);\n        for (int i = 0; i < likelihood_trajectory.length; i++)\n        {\n            System.out.printf(\"TRAJECTORY %f %f\\n\", trajectory[i], likelihood_trajectory[i]);\n        }\n        System.out.print(\"\\n\\n\");\n\n        return null;\n    }","id":16075,"modified_method":"public AlleleFrequencyEstimate map(RefMetaDataTracker tracker, char ref, LocusContext context) \n    {\n        // 1. seperate each context.\n        LocusContext[] deep_contexts = new LocusContext[sample_names.size()];\n        for (int i = 0; i < sample_names.size(); i++)\n        {\n            deep_contexts[i] = filterLocusContext(context, sample_names.get(i), 0);\n        }\n\n        // 2. Pool the deep contexts. (for the hell of it)\n        LocusContext deep_pooled_context = poolLocusContext(deep_contexts);\n        \n        // 3. Call individuals from deep coverage.\n        AlleleFrequencyEstimate[] deep_calls    = new AlleleFrequencyEstimate[sample_names.size()];\n        for (int i = 0; i < sample_names.size(); i++)\n        {\n            deep_calls[i] = deep_callers.get(i).map(tracker, ref, deep_contexts[i]);\n        }\n\n        // 4. Count \"true\" allele frequency from deep calls, and compare to the estimated frequency from the pool.\n        // 4.1. Count \"true\" allele frequency from deep calls, and downsample the individuals with solid truth.\n        double true_alt_freq = 0.0;\n        double true_N        = 0.0;\n        LocusContext[] downsampled_contexts = new LocusContext[sample_names.size()];\n        for (int i = 0; i < deep_calls.length; i++)\n        {\n            downsampled_contexts[i] = null;\n            if ((deep_calls[i].lodVsNextBest >= 5.0) || (deep_calls[i].lodVsRef <= -5.0))\n            {\n                true_alt_freq += deep_calls[i].emperical_allele_frequency() * deep_calls[i].N;\n                true_N        += 2;\n                downsampled_contexts[i] = filterLocusContext(context, sample_names.get(i), DOWNSAMPLE + (int)(random.nextGaussian()*DOWNSAMPLE_NOISE));\n            }\n        }\n        true_alt_freq /= true_N;\n\n        if (true_N == 0.0) { return null; } // just bail if true_N == 0.\n\n        // 4.2. Pool just the contexts that have truth data.\n        LocusContext pooled_context = poolLocusContext(downsampled_contexts);\n\n\n        // EM Loop:\n        AlleleFrequencyEstimate pooled_call = null;\n\n\t    double correct_shallow_calls = 0;\n\t    double total_shallow_calls = 0;\n\t    AlleleFrequencyEstimate[] shallow_calls = null;\n\t    double EM_alt_freq = 0;\n\t    double EM_N = 0;\n        double shallow_calls_fraction_correct = 0;\n\n\t    // 5. Call the pool.  (this step is the EM init)\n\t    pooled_caller.N = (int)true_N;\n\t    pooled_call = pooled_caller.map(tracker, ref, pooled_context);\n\t    System.out.print(\"POOLED_CALL \" + pooled_call.asTabularString());\n\n        // (this loop is the EM cycle)\n\t    EM_alt_freq = pooled_call.qstar; //pooled_call.qhat;\n        int num_iterations = 10;\n        double[] trajectory = new double[num_iterations + 1]; trajectory[0] = EM_alt_freq;\n        double[] likelihood_trajectory = new double[num_iterations + 1]; likelihood_trajectory[0] = pooled_call.pBest;\n        for (int iterations = 0; iterations < num_iterations; iterations++)\n        { \n\t        // 6. Re-call from shallow coverage using the estimated frequency as a prior, \n\t        //    and compare to true deep calls, \n\t        //    and compute new MAF estimate.\n\t        correct_shallow_calls = 0;\n\t        total_shallow_calls   = 0;\n\t        shallow_calls = new AlleleFrequencyEstimate[sample_names.size()];\n\t        EM_N        = 0.0;\n            double EM_sum = 0.0;\n            double likelihood = 0.0;\n\n\t        for (int i = 0; i < deep_calls.length; i++)\n\t        {\n\t            // Only shallow-call things where we know the truth!\n\t            if ((deep_calls[i].lodVsNextBest >= 5.0) || (deep_calls[i].lodVsRef <= -5.0))\n\t            {\n\t                shallow_callers.get(i).setAlleleFrequencyPrior(EM_alt_freq);\n\t                shallow_calls[i] = shallow_callers.get(i).map(tracker, ref, downsampled_contexts[i]);\n\t                String deep_genotype = deep_calls[i].genotype();\n\t                String shallow_genotype = shallow_calls[i].genotype();\n\n                    likelihood += shallow_calls[i].lodVsNextBest;\n\t\n                    /*\n\t                System.out.printf(\"DBG: %f %f %f %f\\n\", \n\t                                        deep_calls[i].lodVsNextBest,\n\t                                        deep_calls[i].lodVsRef,\n\t                                        shallow_calls[i].lodVsNextBest,\n\t                                        shallow_calls[i].lodVsRef);\n                    */\n\t\n\t                if (deep_genotype.equals(shallow_genotype)) \n                    { \n                        correct_shallow_calls += 1; \n                    }\n\t                total_shallow_calls += 1;\n\t                   \n                    if (! FRACTIONAL_COUNTS)\n                    {\n\t\t\t            EM_sum += shallow_calls[i].emperical_allele_frequency() * shallow_calls[i].N;\n\t\t\t            EM_N   += shallow_calls[i].N;\n                    }\n                    else\n                    {\n\t                    for (int j = 0; j <= shallow_calls[i].N; j++)\n\t                    {\n\t                        //System.out.printf(\"DBG3: %d %f %d\\n\", j, shallow_calls[i].posteriors[j], shallow_calls[i].N);\n\t                        EM_sum += shallow_calls[i].posteriors[j] * (double)j;\n\t                        EM_sum += shallow_calls[i].N;\n\t                    }\n                    }\n\n\t            }\n\t        }\n\t        EM_alt_freq = EM_sum / EM_N;\n\t        shallow_calls_fraction_correct = correct_shallow_calls / total_shallow_calls;\n            trajectory[iterations+1] = EM_alt_freq;\n            likelihood_trajectory[iterations+1] = likelihood/(double)total_shallow_calls;\n        }\n\n        // 7. Compare to estimation from the pool.\n        System.out.printf(\"EVAL %s %f %f %f %f %f %f %d %d %f %f %f %f\\n\",\n                                pooled_call.location, \n                                pooled_call.lodVsRef, \n                                true_alt_freq, \n                                pooled_call.qhat, \n                                pooled_call.qstar, \n                                true_alt_freq * true_N,\n                                pooled_call.emperical_allele_frequency() * true_N,\n                                pooled_call.N, \n                                pooled_call.depth,\n                                total_shallow_calls, \n                                correct_shallow_calls, \n                                shallow_calls_fraction_correct,\n                                EM_alt_freq);\n        for (int i = 0; i < likelihood_trajectory.length; i++)\n        {\n            System.out.printf(\"TRAJECTORY %f %f\\n\", trajectory[i], likelihood_trajectory[i]);\n        }\n        System.out.print(\"\\n\\n\");\n\n        return null;\n    }","commit_id":"af6788fa3d23c51cb98c74184d86ee5114fe82cf","url":"https://github.com/broadgsa/gatk"},{"original_method":"/** Adds a new message. Message cannot be null */\n    public void add(long seqno, Message msg) {\n        if(msg == null)\n            throw new IllegalArgumentException(\"msg must be non-null\");\n        synchronized(msgs) {\n            if(seqno < next_to_remove) {\n                if(log.isTraceEnabled())\n                    log.trace(\"discarded msg with seqno=\" + seqno + \" (next msg to receive is \" + next_to_remove + ')');\n                return;\n            }\n            Long seq=new Long(seqno);\n            if(!msgs.containsKey(seq)) // todo: replace with atomic action once we have util.concurrent (JDK 5)\n                msgs.put(seq, msg);\n        }\n    }","id":16076,"modified_method":"/** Adds a new message. Message cannot be null */\n    public void add(long seqno, Message msg) {\n        if(msg == null)\n            throw new IllegalArgumentException(\"msg must be non-null\");\n        synchronized(msgs) {\n            if(seqno < next_to_remove) {\n                if(log.isTraceEnabled())\n                    log.trace(\"discarded msg with seqno=\" + seqno + \" (next msg to receive is \" + next_to_remove + ')');\n                return;\n            }\n            Long seq=new Long(seqno);\n            if(!msgs.containsKey(seq)) { // todo: replace with atomic action once we have util.concurrent (JDK 5)\n                msgs.put(seq, msg);\n                if(log.isTraceEnabled())\n                    log.trace(\"added seqno=\" + seqno); // todo: remove\n            }\n            else {\n                if(log.isTraceEnabled())\n                    log.trace(\"seqno \" + seqno + \" already received - dropping it\");\n            }\n        }\n    }","commit_id":"856390341fa5db0b781a3e9f1d90fac01cc16497","url":"https://github.com/belaban/JGroups"},{"original_method":"/**\n     * Removes a message whose seqno is equal to <code>next_to_remove<\/code>, increments the latter.\n     * Returns message that was removed, or null, if no message can be removed. Messages are thus\n     * removed in order.\n     */\n    public Message remove() {\n        Message retval;\n\n        synchronized(msgs) {\n            Long key=new Long(next_to_remove);\n            retval=(Message)msgs.remove(key);\n            if(retval != null)\n                next_to_remove++;\n        }\n        return retval;\n    }","id":16077,"modified_method":"/**\n     * Removes a message whose seqno is equal to <code>next_to_remove<\/code>, increments the latter.\n     * Returns message that was removed, or null, if no message can be removed. Messages are thus\n     * removed in order.\n     */\n    public Message remove() {\n        Message retval;\n\n        synchronized(msgs) {\n            Long key=new Long(next_to_remove);\n            retval=(Message)msgs.remove(key);\n            if(retval != null) {\n                if(log.isTraceEnabled())\n                    log.trace(\"removed seqno=\" + next_to_remove);\n                next_to_remove++;\n            }\n        }\n        return retval;\n    }","commit_id":"856390341fa5db0b781a3e9f1d90fac01cc16497","url":"https://github.com/belaban/JGroups"},{"original_method":"public void testReceptionOfAllMessages() {\n        int num_received=0;\n        Receiver r=new Receiver();\n        s.setReceiver(r);\n        for(int i=0; i < NUM_MSGS; i++) {\n            Message msg=new Message(null, null, createPayload(SIZE));\n            Event evt=new Event(Event.MSG, msg);\n            s.send(evt);\n            if(i % 1000 == 0)\n                System.out.println(\"==> \" + i);\n        }\n        num_received=r.getNumberOfReceivedMessages();\n        System.out.println(\"-- num received=\" + num_received);\n        Util.sleep(1000);\n        num_received=r.getNumberOfReceivedMessages();\n        System.out.println(\"-- num received=\" + num_received);\n        assertTrue(num_received >= NUM_MSGS);\n        System.out.println(\"Stats:\\n\" + s.dumpStats());\n    }","id":16078,"modified_method":"public void testReceptionOfAllMessages() {\n        int num_received=0;\n        Receiver r=new Receiver();\n        s.setReceiver(r);\n        for(int i=1; i <= NUM_MSGS; i++) {\n            Message msg=new Message(null, null, createPayload(SIZE));\n            Event evt=new Event(Event.MSG, msg);\n            s.send(evt);\n            if(i % 1000 == 0)\n                System.out.println(\"==> \" + i);\n        }\n        int num_tries=10;\n        while(num_tries > 0) {\n            Util.sleep(1000);\n            num_received=r.getNumberOfReceivedMessages();\n            System.out.println(\"-- num received=\" + num_received + \", stats:\\n\" + s.dumpStats());\n            if(num_received == NUM_MSGS)\n                break;\n            num_tries--;\n        }\n        assertTrue(num_received == NUM_MSGS);\n    }","commit_id":"856390341fa5db0b781a3e9f1d90fac01cc16497","url":"https://github.com/belaban/JGroups"},{"original_method":"public void receive(Event evt) {\n        try {\n            recv_queue.add(evt);\n        }\n        catch(QueueClosedException e) {\n        }\n    }","id":16079,"modified_method":"public void receive(Event evt) {\n        try {\n            Event copy;\n            if(evt.getType() == Event.MSG && evt.getArg() != null) {\n                copy=new Event(Event.MSG, ((Message)evt.getArg()).copy());\n            }\n            else\n                copy=evt;\n\n            recv_queue.add(copy);\n        }\n        catch(QueueClosedException e) {\n        }\n    }","commit_id":"856390341fa5db0b781a3e9f1d90fac01cc16497","url":"https://github.com/belaban/JGroups"},{"original_method":"public void up(Event evt) {\n        Message        msg;\n        Address        dst, src;\n        UnicastHeader  hdr;\n\n        switch(evt.getType()) {\n\n        case Event.MSG:\n            msg=(Message)evt.getArg();\n            dst=msg.getDest();\n\n            if(dst == null || dst.isMulticastAddress())  // only handle unicast messages\n                break;  // pass up\n\n            hdr=(UnicastHeader)msg.removeHeader(name);\n            if(hdr == null) break;\n            src=msg.getSrc();\n            switch(hdr.type) {\n            case UnicastHeader.DATA:      // received regular message\n                handleDataReceived(src, hdr.seqno, msg);\n                sendAck(src, hdr.seqno); // only send an ACK if added to the received_msgs table (bela Aug 2006)\n                break;\n            case UnicastHeader.ACK:  // received ACK for previously sent message\n                handleAckReceived(src, hdr.seqno);\n                break;\n            default:\n                log.error(\"UnicastHeader type \" + hdr.type + \" not known !\");\n                break;\n            }\n            return;\n\n        case Event.SET_LOCAL_ADDRESS:\n            local_addr=(Address)evt.getArg();\n            break;\n        }\n\n        passUp(evt);   // Pass up to the layer above us\n    }","id":16080,"modified_method":"public void up(Event evt) {\n        Message        msg;\n        Address        dst, src;\n        UnicastHeader  hdr;\n\n        switch(evt.getType()) {\n\n        case Event.MSG:\n            msg=(Message)evt.getArg();\n            dst=msg.getDest();\n\n            if(dst == null || dst.isMulticastAddress())  // only handle unicast messages\n                break;  // pass up\n\n            hdr=(UnicastHeader)msg.getHeader(name); // changed from removeHeader()\n            if(hdr == null) break;\n            src=msg.getSrc();\n            switch(hdr.type) {\n            case UnicastHeader.DATA:      // received regular message\n                handleDataReceived(src, hdr.seqno, msg);\n                sendAck(src, hdr.seqno); // only send an ACK if added to the received_msgs table (bela Aug 2006)\n                return; // we pass the deliverable message up in handleDataReceived()\n            case UnicastHeader.ACK:  // received ACK for previously sent message\n                handleAckReceived(src, hdr.seqno);\n                break;\n            default:\n                log.error(\"UnicastHeader type \" + hdr.type + \" not known !\");\n                break;\n            }\n            return;\n\n        case Event.SET_LOCAL_ADDRESS:\n            local_addr=(Address)evt.getArg();\n            break;\n        }\n\n        passUp(evt);   // Pass up to the layer above us\n    }","commit_id":"856390341fa5db0b781a3e9f1d90fac01cc16497","url":"https://github.com/belaban/JGroups"},{"original_method":"private static byte[] createPayload(int size) {\n        byte[] retval=new byte[size];\n        for(int i=0; i < size; i++)\n            retval[i]='0';\n        return retval;\n    }","id":16081,"modified_method":"private static byte[] createPayload(int size, int seqno) {\n        ByteBuffer buf=ByteBuffer.allocate(size);\n        buf.putInt(seqno);\n        return buf.array();\n    }","commit_id":"856390341fa5db0b781a3e9f1d90fac01cc16497","url":"https://github.com/belaban/JGroups"},{"original_method":"public void receive(Event evt) {\n            if(evt.getType() == Event.MSG) {\n                num_mgs_received++;\n                if(num_mgs_received % 1000 == 0)\n                    System.out.println(\"<== \" + num_mgs_received);\n            }\n        }","id":16082,"modified_method":"public void receive(Event evt) {\n            if(evt.getType() == Event.MSG) {\n                if(exception != null)\n                return;\n                Message msg=(Message)evt.getArg();\n                ByteBuffer buf=ByteBuffer.wrap(msg.getRawBuffer());\n                int seqno=buf.getInt();\n                if(seqno != next) {\n                    exception=new Exception(\"expected seqno was \" + next + \", but received \" + seqno);\n                    return;\n                }\n                next++;\n                num_mgs_received++;\n                if(num_mgs_received % 1000 == 0)\n                    System.out.println(\"<== \" + num_mgs_received);\n            }\n        }","commit_id":"856390341fa5db0b781a3e9f1d90fac01cc16497","url":"https://github.com/belaban/JGroups"},{"original_method":"public void testReceptionOfAllMessages() {\n        int num_received=0;\n        Receiver r=new Receiver();\n        s.setReceiver(r);\n        for(int i=1; i <= NUM_MSGS; i++) {\n            Message msg=new Message(a1, null, createPayload(SIZE)); // unicast message\n            Event evt=new Event(Event.MSG, msg);\n            s.send(evt);\n            if(i % 1000 == 0)\n                System.out.println(\"==> \" + i);\n        }\n        num_received=r.getNumberOfReceivedMessages();\n        System.out.println(\"-- num received=\" + num_received);\n        Util.sleep(1000);\n        num_received=r.getNumberOfReceivedMessages();\n        System.out.println(\"-- num received=\" + num_received);\n        assertTrue(num_received >= NUM_MSGS);\n        System.out.println(\"Stats:\\n\" + s.dumpStats());\n    }","id":16083,"modified_method":"public void testReceptionOfAllMessages() throws Throwable {\n        int num_received=0;\n        Receiver r=new Receiver();\n        s.setReceiver(r);\n        for(int i=1; i <= NUM_MSGS; i++) {\n            Message msg=new Message(a1, null, createPayload(SIZE, i)); // unicast message\n            Event evt=new Event(Event.MSG, msg);\n            s.send(evt);\n            if(i % 1000 == 0)\n                System.out.println(\"==> \" + i);\n        }\n        int num_tries=10;\n        while((num_received=r.getNumberOfReceivedMessages()) != NUM_MSGS && num_tries > 0) {\n            if(r.getException() != null)\n            throw r.getException();\n            Util.sleep(3000);\n            // System.out.println(\"-- num received=\" + num_received);\n            num_tries--;\n        }\n        System.out.println(\"-- num received=\" + num_received + \", stats:\\n\" + s.dumpStats());\n        assertTrue(num_received == NUM_MSGS);\n    }","commit_id":"856390341fa5db0b781a3e9f1d90fac01cc16497","url":"https://github.com/belaban/JGroups"},{"original_method":"/** Adds a new message. Message cannot be null */\n    public void add(long seqno, Message msg) {\n        if(msg == null)\n            throw new IllegalArgumentException(\"msg must be non-null\");\n        synchronized(msgs) {\n            if(seqno < next_to_remove) {\n                if(log.isTraceEnabled())\n                    log.trace(\"discarded msg with seqno=\" + seqno + \" (next msg to receive is \" + next_to_remove + ')');\n                return;\n            }\n            Long seq=new Long(seqno);\n            if(!msgs.containsKey(seq)) // todo: replace with atomic action once we have util.concurrent (JDK 5)\n                msgs.put(seq, msg);\n        }\n    }","id":16084,"modified_method":"/** Adds a new message. Message cannot be null */\n    public void add(long seqno, Message msg) {\n        if(msg == null)\n            throw new IllegalArgumentException(\"msg must be non-null\");\n        synchronized(msgs) {\n            if(seqno < next_to_remove) {\n                if(log.isTraceEnabled())\n                    log.trace(\"discarded msg with seqno=\" + seqno + \" (next msg to receive is \" + next_to_remove + ')');\n                return;\n            }\n            Long seq=new Long(seqno);\n            if(!msgs.containsKey(seq)) { // todo: replace with atomic action once we have util.concurrent (JDK 5)\n                msgs.put(seq, msg);\n                if(log.isTraceEnabled())\n                    log.trace(\"added seqno=\" + seqno); // todo: remove\n            }\n            else {\n                if(log.isTraceEnabled())\n                    log.trace(\"seqno \" + seqno + \" already received - dropping it\");\n            }\n        }\n    }","commit_id":"d796ec1cb721287d6090e10b4e1c03ae53ce4a84","url":"https://github.com/belaban/JGroups"},{"original_method":"/**\n     * Removes a message whose seqno is equal to <code>next_to_remove<\/code>, increments the latter.\n     * Returns message that was removed, or null, if no message can be removed. Messages are thus\n     * removed in order.\n     */\n    public Message remove() {\n        Message retval;\n\n        synchronized(msgs) {\n            Long key=new Long(next_to_remove);\n            retval=(Message)msgs.remove(key);\n            if(retval != null)\n                next_to_remove++;\n        }\n        return retval;\n    }","id":16085,"modified_method":"/**\n     * Removes a message whose seqno is equal to <code>next_to_remove<\/code>, increments the latter.\n     * Returns message that was removed, or null, if no message can be removed. Messages are thus\n     * removed in order.\n     */\n    public Message remove() {\n        Message retval;\n\n        synchronized(msgs) {\n            Long key=new Long(next_to_remove);\n            retval=(Message)msgs.remove(key);\n            if(retval != null) {\n                if(log.isTraceEnabled())\n                    log.trace(\"removed seqno=\" + next_to_remove);\n                next_to_remove++;\n            }\n        }\n        return retval;\n    }","commit_id":"d796ec1cb721287d6090e10b4e1c03ae53ce4a84","url":"https://github.com/belaban/JGroups"},{"original_method":"public void testReceptionOfAllMessages() {\n        int num_received=0;\n        Receiver r=new Receiver();\n        s.setReceiver(r);\n        for(int i=0; i < NUM_MSGS; i++) {\n            Message msg=new Message(null, null, createPayload(SIZE));\n            Event evt=new Event(Event.MSG, msg);\n            s.send(evt);\n            if(i % 1000 == 0)\n                System.out.println(\"==> \" + i);\n        }\n        num_received=r.getNumberOfReceivedMessages();\n        System.out.println(\"-- num received=\" + num_received);\n        Util.sleep(1000);\n        num_received=r.getNumberOfReceivedMessages();\n        System.out.println(\"-- num received=\" + num_received);\n        assertTrue(num_received >= NUM_MSGS);\n        System.out.println(\"Stats:\\n\" + s.dumpStats());\n    }","id":16086,"modified_method":"public void testReceptionOfAllMessages() {\n        int num_received=0;\n        Receiver r=new Receiver();\n        s.setReceiver(r);\n        for(int i=1; i <= NUM_MSGS; i++) {\n            Message msg=new Message(null, null, createPayload(SIZE));\n            Event evt=new Event(Event.MSG, msg);\n            s.send(evt);\n            if(i % 1000 == 0)\n                System.out.println(\"==> \" + i);\n        }\n        int num_tries=10;\n        while(num_tries > 0) {\n            Util.sleep(1000);\n            num_received=r.getNumberOfReceivedMessages();\n            System.out.println(\"-- num received=\" + num_received + \", stats:\\n\" + s.dumpStats());\n            if(num_received == NUM_MSGS)\n                break;\n            num_tries--;\n        }\n        assertTrue(num_received == NUM_MSGS);\n    }","commit_id":"d796ec1cb721287d6090e10b4e1c03ae53ce4a84","url":"https://github.com/belaban/JGroups"},{"original_method":"public void receive(Event evt) {\n        try {\n            recv_queue.add(evt);\n        }\n        catch(QueueClosedException e) {\n        }\n    }","id":16087,"modified_method":"public void receive(Event evt) {\n        try {\n            Event copy;\n            if(evt.getType() == Event.MSG && evt.getArg() != null) {\n                copy=new Event(Event.MSG, ((Message)evt.getArg()).copy());\n            }\n            else\n                copy=evt;\n\n            recv_queue.add(copy);\n        }\n        catch(QueueClosedException e) {\n        }\n    }","commit_id":"d796ec1cb721287d6090e10b4e1c03ae53ce4a84","url":"https://github.com/belaban/JGroups"},{"original_method":"public void up(Event evt) {\n        Message        msg;\n        Address        dst, src;\n        UnicastHeader  hdr;\n\n        switch(evt.getType()) {\n\n        case Event.MSG:\n            msg=(Message)evt.getArg();\n            dst=msg.getDest();\n\n            if(dst == null || dst.isMulticastAddress())  // only handle unicast messages\n                break;  // pass up\n\n            hdr=(UnicastHeader)msg.removeHeader(name);\n            if(hdr == null) break;\n            src=msg.getSrc();\n            switch(hdr.type) {\n            case UnicastHeader.DATA:      // received regular message\n                handleDataReceived(src, hdr.seqno, msg);\n                sendAck(src, hdr.seqno); // only send an ACK if added to the received_msgs table (bela Aug 2006)\n                break;\n            case UnicastHeader.ACK:  // received ACK for previously sent message\n                handleAckReceived(src, hdr.seqno);\n                break;\n            default:\n                log.error(\"UnicastHeader type \" + hdr.type + \" not known !\");\n                break;\n            }\n            return;\n\n        case Event.SET_LOCAL_ADDRESS:\n            local_addr=(Address)evt.getArg();\n            break;\n        }\n\n        passUp(evt);   // Pass up to the layer above us\n    }","id":16088,"modified_method":"public void up(Event evt) {\n        Message        msg;\n        Address        dst, src;\n        UnicastHeader  hdr;\n\n        switch(evt.getType()) {\n\n        case Event.MSG:\n            msg=(Message)evt.getArg();\n            dst=msg.getDest();\n\n            if(dst == null || dst.isMulticastAddress())  // only handle unicast messages\n                break;  // pass up\n\n            hdr=(UnicastHeader)msg.getHeader(name); // changed from removeHeader()\n            if(hdr == null) break;\n            src=msg.getSrc();\n            switch(hdr.type) {\n            case UnicastHeader.DATA:      // received regular message\n                handleDataReceived(src, hdr.seqno, msg);\n                sendAck(src, hdr.seqno); // only send an ACK if added to the received_msgs table (bela Aug 2006)\n                return; // we pass the deliverable message up in handleDataReceived()\n            case UnicastHeader.ACK:  // received ACK for previously sent message\n                handleAckReceived(src, hdr.seqno);\n                break;\n            default:\n                log.error(\"UnicastHeader type \" + hdr.type + \" not known !\");\n                break;\n            }\n            return;\n\n        case Event.SET_LOCAL_ADDRESS:\n            local_addr=(Address)evt.getArg();\n            break;\n        }\n\n        passUp(evt);   // Pass up to the layer above us\n    }","commit_id":"d796ec1cb721287d6090e10b4e1c03ae53ce4a84","url":"https://github.com/belaban/JGroups"},{"original_method":"public void receive(Event evt) {\n            if(evt.getType() == Event.MSG) {\n                num_mgs_received++;\n                if(num_mgs_received % 1000 == 0)\n                    System.out.println(\"<== \" + num_mgs_received);\n            }\n        }","id":16089,"modified_method":"public void receive(Event evt) {\n            if(evt.getType() == Event.MSG) {\n                if(exception != null)\n                return;\n                Message msg=(Message)evt.getArg();\n                ByteBuffer buf=ByteBuffer.wrap(msg.getRawBuffer());\n                int seqno=buf.getInt();\n                if(seqno != next) {\n                    exception=new Exception(\"expected seqno was \" + next + \", but received \" + seqno);\n                    return;\n                }\n                next++;\n                num_mgs_received++;\n                if(num_mgs_received % 1000 == 0)\n                    System.out.println(\"<== \" + num_mgs_received);\n            }\n        }","commit_id":"d796ec1cb721287d6090e10b4e1c03ae53ce4a84","url":"https://github.com/belaban/JGroups"},{"original_method":"private static byte[] createPayload(int size) {\n        byte[] retval=new byte[size];\n        for(int i=0; i < size; i++)\n            retval[i]='0';\n        return retval;\n    }","id":16090,"modified_method":"private static byte[] createPayload(int size, int seqno) {\n        ByteBuffer buf=ByteBuffer.allocate(size);\n        buf.putInt(seqno);\n        return buf.array();\n    }","commit_id":"d796ec1cb721287d6090e10b4e1c03ae53ce4a84","url":"https://github.com/belaban/JGroups"},{"original_method":"public void testReceptionOfAllMessages() {\n        int num_received=0;\n        Receiver r=new Receiver();\n        s.setReceiver(r);\n        for(int i=1; i <= NUM_MSGS; i++) {\n            Message msg=new Message(a1, null, createPayload(SIZE)); // unicast message\n            Event evt=new Event(Event.MSG, msg);\n            s.send(evt);\n            if(i % 1000 == 0)\n                System.out.println(\"==> \" + i);\n        }\n        num_received=r.getNumberOfReceivedMessages();\n        System.out.println(\"-- num received=\" + num_received);\n        Util.sleep(1000);\n        num_received=r.getNumberOfReceivedMessages();\n        System.out.println(\"-- num received=\" + num_received);\n        assertTrue(num_received >= NUM_MSGS);\n        System.out.println(\"Stats:\\n\" + s.dumpStats());\n    }","id":16091,"modified_method":"public void testReceptionOfAllMessages() throws Throwable {\n        int num_received=0;\n        Receiver r=new Receiver();\n        s.setReceiver(r);\n        for(int i=1; i <= NUM_MSGS; i++) {\n            Message msg=new Message(a1, null, createPayload(SIZE, i)); // unicast message\n            Event evt=new Event(Event.MSG, msg);\n            s.send(evt);\n            if(i % 1000 == 0)\n                System.out.println(\"==> \" + i);\n        }\n        int num_tries=10;\n        while((num_received=r.getNumberOfReceivedMessages()) != NUM_MSGS && num_tries > 0) {\n            if(r.getException() != null)\n            throw r.getException();\n            Util.sleep(3000);\n            // System.out.println(\"-- num received=\" + num_received);\n            num_tries--;\n        }\n        System.out.println(\"-- num received=\" + num_received + \", stats:\\n\" + s.dumpStats());\n        assertTrue(num_received == NUM_MSGS);\n    }","commit_id":"d796ec1cb721287d6090e10b4e1c03ae53ce4a84","url":"https://github.com/belaban/JGroups"},{"original_method":"@AfterClass\n\tpublic static void tearDownClass() {\n\t\tfor (long bundleId : _bundleIds) {\n\t\t\ttry {\n\t\t\t\tModuleFrameworkUtilAdapter.startBundle(bundleId);\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t\t_log.error(\"Unable to start bundle \" + bundleId, e);\n\t\t\t}\n\t\t}\n\t}","id":16092,"modified_method":"@AfterClass\n\tpublic static void tearDownClass() {\n\t\tModuleFrameworkTestUtil.startBundles(_bundleIds);\n\t}","commit_id":"8d5ffeb680a9ea08d3bdeb966352390071764ad5","url":"https://github.com/liferay/liferay-portal"},{"original_method":"@BeforeClass\n\tpublic static void setUpClass() throws Exception {\n\t\tServiceTestUtil.setUser(TestPropsValues.getUser());\n\n\t\tRegistry registry = RegistryUtil.getRegistry();\n\n\t\tCollection<ServiceReference<StoreWrapper>>\n\t\t\tserviceReferences = registry.getServiceReferences(\n\t\t\t\tStoreWrapper.class, \"(store.type=\"+ _STORE_TYPE +\")\");\n\n\t\tfor (ServiceReference<StoreWrapper> serviceReference :\n\t\t\t\tserviceReferences) {\n\n\t\t\tLong bundleId = (Long)serviceReference.getProperty(\n\t\t\t\t\"service.bundleid\");\n\n\t\t\t_bundleIds.add(bundleId);\n\n\t\t\tModuleFrameworkUtilAdapter.stopBundle(bundleId);\n\t\t}\n\t}","id":16093,"modified_method":"@BeforeClass\n\tpublic static void setUpClass() throws Exception {\n\t\tServiceTestUtil.setUser(TestPropsValues.getUser());\n\n\t\t_bundleIds = ModuleFrameworkTestUtil.getBundleIds(\n\t\t\tStoreWrapper.class, \"(store.type=\"+ _STORE_TYPE +\")\");\n\n\t\tModuleFrameworkTestUtil.stopBundles(_bundleIds);\n\t}","commit_id":"8d5ffeb680a9ea08d3bdeb966352390071764ad5","url":"https://github.com/liferay/liferay-portal"},{"original_method":"@BeforeClass\n\tpublic static void setUpClass() throws Exception {\n\t\tRegistry registry = RegistryUtil.getRegistry();\n\n\t\tCollection<ServiceReference<EditorConfigContributor>>\n\t\t\tserviceReferences = registry.getServiceReferences(\n\t\t\t\tEditorConfigContributor.class, null);\n\n\t\tfor (ServiceReference<EditorConfigContributor> serviceReference :\n\t\t\t\tserviceReferences) {\n\n\t\t\tLong bundleId = (Long)serviceReference.getProperty(\n\t\t\t\t\"service.bundleid\");\n\n\t\t\t_bundleIds.add(bundleId);\n\n\t\t\tModuleFrameworkUtilAdapter.stopBundle(bundleId);\n\t\t}\n\t}","id":16094,"modified_method":"@BeforeClass\n\tpublic static void setUpClass() throws Exception {\n\t\tServiceTestUtil.setUser(TestPropsValues.getUser());\n\n\t\t_bundleIds = ModuleFrameworkTestUtil.getBundleIds(\n\t\t\tEditorConfigContributor.class, null);\n\n\t\tModuleFrameworkTestUtil.stopBundles(_bundleIds);\n\t}","commit_id":"8d5ffeb680a9ea08d3bdeb966352390071764ad5","url":"https://github.com/liferay/liferay-portal"},{"original_method":"@AfterClass\n\tpublic static void tearDownClass() {\n\t\tfor (long bundleId : _bundleIds) {\n\t\t\ttry {\n\t\t\t\tModuleFrameworkUtilAdapter.startBundle(bundleId);\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t\t_log.error(\"Unable to start bundle \" + bundleId, e);\n\t\t\t}\n\t\t}\n\t}","id":16095,"modified_method":"@AfterClass\n\tpublic static void tearDownClass() {\n\t\tModuleFrameworkTestUtil.startBundles(_bundleIds);\n\t}","commit_id":"8d5ffeb680a9ea08d3bdeb966352390071764ad5","url":"https://github.com/liferay/liferay-portal"},{"original_method":"@AfterClass\n\tpublic static void tearDownClass() {\n\t\tfor (long bundleId : _bundleIds) {\n\t\t\ttry {\n\t\t\t\tModuleFrameworkUtilAdapter.startBundle(bundleId);\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t\t_log.error(\"Unable to start bundle \" + bundleId, e);\n\t\t\t}\n\t\t}\n\t}","id":16096,"modified_method":"@AfterClass\n\tpublic static void tearDownClass() {\n\t\tModuleFrameworkTestUtil.startBundles(_bundleIds);\n\t}","commit_id":"8d5ffeb680a9ea08d3bdeb966352390071764ad5","url":"https://github.com/liferay/liferay-portal"},{"original_method":"@BeforeClass\n\tpublic static void setUpClass() throws Exception {\n\t\tRegistry registry = RegistryUtil.getRegistry();\n\n\t\tCollection<ServiceReference<EditorConfigContributor>>\n\t\t\tserviceReferences = registry.getServiceReferences(\n\t\t\t\tEditorConfigContributor.class, null);\n\n\t\tfor (ServiceReference<EditorConfigContributor> serviceReference :\n\t\t\t\tserviceReferences) {\n\n\t\t\tLong bundleId = (Long)serviceReference.getProperty(\n\t\t\t\t\"service.bundleid\");\n\n\t\t\t_bundleIds.add(bundleId);\n\n\t\t\tModuleFrameworkUtilAdapter.stopBundle(bundleId);\n\t\t}\n\t}","id":16097,"modified_method":"@BeforeClass\n\tpublic static void setUpClass() throws Exception {\n\t\tServiceTestUtil.setUser(TestPropsValues.getUser());\n\n\t\t_bundleIds = ModuleFrameworkTestUtil.getBundleIds(\n\t\t\tEditorConfigContributor.class, null);\n\n\t\tModuleFrameworkTestUtil.stopBundles(_bundleIds);\n\t}","commit_id":"8d5ffeb680a9ea08d3bdeb966352390071764ad5","url":"https://github.com/liferay/liferay-portal"},{"original_method":"@AfterClass\n\tpublic static void tearDownClass() {\n\t\tfor (long bundleId : _bundleIds) {\n\t\t\ttry {\n\t\t\t\tModuleFrameworkUtilAdapter.startBundle(bundleId);\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t\t_log.error(\"Unable to start bundle \" + bundleId, e);\n\t\t\t}\n\t\t}\n\t}","id":16098,"modified_method":"@AfterClass\n\tpublic static void tearDownClass() {\n\t\tModuleFrameworkTestUtil.startBundles(_bundleIds);\n\t}","commit_id":"8d5ffeb680a9ea08d3bdeb966352390071764ad5","url":"https://github.com/liferay/liferay-portal"},{"original_method":"@BeforeClass\n\tpublic static void setUpClass() throws Exception {\n\t\tServiceTestUtil.setUser(TestPropsValues.getUser());\n\n\t\tRegistry registry = RegistryUtil.getRegistry();\n\n\t\tCollection<ServiceReference<StoreWrapper>>\n\t\t\tserviceReferences = registry.getServiceReferences(\n\t\t\t\tStoreWrapper.class, \"(store.type=\"+ _STORE_TYPE +\")\");\n\n\t\tfor (ServiceReference<StoreWrapper> serviceReference :\n\t\t\t\tserviceReferences) {\n\n\t\t\tLong bundleId = (Long)serviceReference.getProperty(\n\t\t\t\t\"service.bundleid\");\n\n\t\t\t_bundleIds.add(bundleId);\n\n\t\t\tModuleFrameworkUtilAdapter.stopBundle(bundleId);\n\t\t}\n\t}","id":16099,"modified_method":"@BeforeClass\n\tpublic static void setUpClass() throws Exception {\n\t\tServiceTestUtil.setUser(TestPropsValues.getUser());\n\n\t\t_bundleIds = ModuleFrameworkTestUtil.getBundleIds(\n\t\t\tStoreWrapper.class, \"(store.type=\" + _STORE_TYPE + \")\");\n\n\t\tModuleFrameworkTestUtil.stopBundles(_bundleIds);\n\t}","commit_id":"8d5ffeb680a9ea08d3bdeb966352390071764ad5","url":"https://github.com/liferay/liferay-portal"},{"original_method":"/**\n   * Ensure the buffer (either input or output) ready to read or write with ZERO\n   * bytes fully in chunkSize.\n   * @param buffer\n   * @return the buffer itself\n   */\n  protected ByteBuffer resetBuffer(ByteBuffer buffer) {\n    buffer.clear();\n    buffer.put(zeroChunkBytes);\n    buffer.position(0);\n\n    return buffer;\n  }","id":16100,"modified_method":"/**\n   * Ensure output buffer filled with ZERO bytes fully in chunkSize.\n   * @param buffer a buffer ready to write chunk size bytes\n   * @return the buffer itself, with ZERO bytes written, the position and limit\n   *         are not changed after the call\n   */\n  protected ByteBuffer resetOutputBuffer(ByteBuffer buffer) {\n    int pos = buffer.position();\n    for (int i = pos; i < buffer.limit(); ++i) {\n      buffer.put((byte) 0);\n    }\n    buffer.position(pos);\n\n    return buffer;\n  }","commit_id":"343c0e76fcd95ac739ca7cd6742c9d617e19fc37","url":"https://github.com/apache/hadoop"},{"original_method":"@Override\n  public void initialize(int numDataUnits, int numParityUnits,\n                         int chunkSize) {\n    this.numDataUnits = numDataUnits;\n    this.numParityUnits = numParityUnits;\n    this.chunkSize = chunkSize;\n\n    zeroChunkBytes = new byte[chunkSize]; // With ZERO by default\n  }","id":16101,"modified_method":"@Override\n  public void initialize(int numDataUnits, int numParityUnits,\n                         int chunkSize) {\n    this.numDataUnits = numDataUnits;\n    this.numParityUnits = numParityUnits;\n    this.chunkSize = chunkSize;\n  }","commit_id":"343c0e76fcd95ac739ca7cd6742c9d617e19fc37","url":"https://github.com/apache/hadoop"},{"original_method":"/**\n   * Convert an array of heap ByteBuffers to an array of byte array.\n   * @param buffers\n   * @return an array of byte array\n   */\n  protected static byte[][] toArrays(ByteBuffer[] buffers) {\n    byte[][] bytesArr = new byte[buffers.length][];\n\n    ByteBuffer buffer;\n    for (int i = 0; i < buffers.length; i++) {\n      buffer = buffers[i];\n      if (buffer == null) {\n        bytesArr[i] = null;\n        continue;\n      }\n\n      if (buffer.hasArray()) {\n        bytesArr[i] = buffer.array();\n      } else {\n        throw new IllegalArgumentException(\"Invalid ByteBuffer passed, \" +\n            \"expecting heap buffer\");\n      }\n    }\n\n    return bytesArr;\n  }","id":16102,"modified_method":"/**\n   * Ensure the buffer (either input or output) ready to read or write with ZERO\n   * bytes fully in chunkSize.\n   * @param buffer bytes array buffer\n   * @return the buffer itself\n   */\n  protected byte[] resetBuffer(byte[] buffer, int offset, int len) {\n    for (int i = offset; i < len; ++i) {\n      buffer[i] = (byte) 0;\n    }\n\n    return buffer;\n  }","commit_id":"343c0e76fcd95ac739ca7cd6742c9d617e19fc37","url":"https://github.com/apache/hadoop"},{"original_method":"@Override\n  public void decode(byte[][] inputs, int[] erasedIndexes, byte[][] outputs) {\n    checkParameters(inputs, erasedIndexes, outputs);\n\n    doDecode(inputs, erasedIndexes, outputs);\n  }","id":16103,"modified_method":"@Override\n  public void decode(byte[][] inputs, int[] erasedIndexes, byte[][] outputs) {\n    checkParameters(inputs, erasedIndexes, outputs);\n    int dataLen = inputs[0].length;\n    if (dataLen == 0) {\n      return;\n    }\n    ensureLength(inputs, dataLen);\n    ensureLength(outputs, dataLen);\n\n    int[] inputOffsets = new int[inputs.length]; // ALL ZERO\n    int[] outputOffsets = new int[outputs.length]; // ALL ZERO\n\n    doDecode(inputs, inputOffsets, dataLen, erasedIndexes, outputs,\n        outputOffsets);\n  }","commit_id":"343c0e76fcd95ac739ca7cd6742c9d617e19fc37","url":"https://github.com/apache/hadoop"},{"original_method":"/**\n   * Perform the real decoding using bytes array\n   * @param inputs\n   * @param erasedIndexes\n   * @param outputs\n   */\n  protected abstract void doDecode(byte[][] inputs, int[] erasedIndexes,\n                                   byte[][] outputs);","id":16104,"modified_method":"/**\n   * Perform the real decoding using bytes array, supporting offsets and\n   * lengths.\n   * @param inputs\n   * @param inputOffsets\n   * @param dataLen\n   * @param erasedIndexes\n   * @param outputs\n   * @param outputOffsets\n   */\n  protected abstract void doDecode(byte[][] inputs, int[] inputOffsets,\n                                   int dataLen, int[] erasedIndexes,\n                                   byte[][] outputs, int[] outputOffsets);","commit_id":"343c0e76fcd95ac739ca7cd6742c9d617e19fc37","url":"https://github.com/apache/hadoop"},{"original_method":"/**\n   * Check and validate decoding parameters, throw exception accordingly. The\n   * checking assumes it's a MDS code. Other code  can override this.\n   * @param inputs\n   * @param erasedIndexes\n   * @param outputs\n   */\n  protected void checkParameters(Object[] inputs, int[] erasedIndexes,\n                                 Object[] outputs) {\n    if (inputs.length != getNumParityUnits() + getNumDataUnits()) {\n      throw new IllegalArgumentException(\"Invalid inputs length\");\n    }\n\n    if (erasedIndexes.length != outputs.length) {\n      throw new IllegalArgumentException(\n          \"erasedIndexes and outputs mismatch in length\");\n    }\n\n    if (erasedIndexes.length > getNumParityUnits()) {\n      throw new IllegalArgumentException(\n          \"Too many erased, not recoverable\");\n    }\n  }","id":16105,"modified_method":"/**\n   * Check and validate decoding parameters, throw exception accordingly. The\n   * checking assumes it's a MDS code. Other code  can override this.\n   * @param inputs\n   * @param erasedIndexes\n   * @param outputs\n   */\n  protected void checkParameters(Object[] inputs, int[] erasedIndexes,\n                                 Object[] outputs) {\n    if (inputs.length != getNumParityUnits() + getNumDataUnits()) {\n      throw new IllegalArgumentException(\"Invalid inputs length\");\n    }\n\n    if (erasedIndexes.length != outputs.length) {\n      throw new HadoopIllegalArgumentException(\n          \"erasedIndexes and outputs mismatch in length\");\n    }\n\n    if (erasedIndexes.length > getNumParityUnits()) {\n      throw new HadoopIllegalArgumentException(\n          \"Too many erased, not recoverable\");\n    }\n  }","commit_id":"343c0e76fcd95ac739ca7cd6742c9d617e19fc37","url":"https://github.com/apache/hadoop"},{"original_method":"@Override\n  public void decode(ByteBuffer[] inputs, int[] erasedIndexes,\n                     ByteBuffer[] outputs) {\n    checkParameters(inputs, erasedIndexes, outputs);\n\n    boolean hasArray = inputs[0].hasArray();\n    if (hasArray) {\n      byte[][] newInputs = toArrays(inputs);\n      byte[][] newOutputs = toArrays(outputs);\n      doDecode(newInputs, erasedIndexes, newOutputs);\n    } else {\n      doDecode(inputs, erasedIndexes, outputs);\n    }\n  }","id":16106,"modified_method":"@Override\n  public void decode(ByteBuffer[] inputs, int[] erasedIndexes,\n                     ByteBuffer[] outputs) {\n    checkParameters(inputs, erasedIndexes, outputs);\n    int dataLen = inputs[0].remaining();\n    if (dataLen == 0) {\n      return;\n    }\n    ensureLength(inputs, dataLen);\n    ensureLength(outputs, dataLen);\n\n    boolean usingDirectBuffer = inputs[0].isDirect();\n    if (usingDirectBuffer) {\n      doDecode(inputs, erasedIndexes, outputs);\n      return;\n    }\n\n    int[] inputOffsets = new int[inputs.length];\n    int[] outputOffsets = new int[outputs.length];\n    byte[][] newInputs = new byte[inputs.length][];\n    byte[][] newOutputs = new byte[outputs.length][];\n\n    ByteBuffer buffer;\n    for (int i = 0; i < inputs.length; ++i) {\n      buffer = inputs[i];\n      inputOffsets[i] = buffer.position();\n      newInputs[i] = buffer.array();\n    }\n\n    for (int i = 0; i < outputs.length; ++i) {\n      buffer = outputs[i];\n      outputOffsets[i] = buffer.position();\n      newOutputs[i] = buffer.array();\n    }\n\n    doDecode(newInputs, inputOffsets, dataLen,\n        erasedIndexes, newOutputs, outputOffsets);\n\n    for (int i = 0; i < inputs.length; ++i) {\n      buffer = inputs[i];\n      buffer.position(inputOffsets[i] + dataLen); // dataLen bytes consumed\n    }\n  }","commit_id":"343c0e76fcd95ac739ca7cd6742c9d617e19fc37","url":"https://github.com/apache/hadoop"},{"original_method":"@Override\n  public void encode(byte[][] inputs, byte[][] outputs) {\n    checkParameters(inputs, outputs);\n\n    doEncode(inputs, outputs);\n  }","id":16107,"modified_method":"@Override\n  public void encode(byte[][] inputs, byte[][] outputs) {\n    checkParameters(inputs, outputs);\n    int dataLen = inputs[0].length;\n    if (dataLen == 0) {\n      return;\n    }\n    ensureLength(inputs, dataLen);\n    ensureLength(outputs, dataLen);\n\n    int[] inputOffsets = new int[inputs.length]; // ALL ZERO\n    int[] outputOffsets = new int[outputs.length]; // ALL ZERO\n\n    doEncode(inputs, inputOffsets, dataLen, outputs, outputOffsets);\n  }","commit_id":"343c0e76fcd95ac739ca7cd6742c9d617e19fc37","url":"https://github.com/apache/hadoop"},{"original_method":"/**\n   * Perform the real encoding work using bytes array\n   * @param inputs\n   * @param outputs\n   */\n  protected abstract void doEncode(byte[][] inputs, byte[][] outputs);","id":16108,"modified_method":"/**\n   * Perform the real encoding work using bytes array, supporting offsets\n   * and lengths.\n   * @param inputs\n   * @param inputOffsets\n   * @param dataLen\n   * @param outputs\n   * @param outputOffsets\n   */\n  protected abstract void doEncode(byte[][] inputs, int[] inputOffsets,\n                                   int dataLen, byte[][] outputs,\n                                   int[] outputOffsets);","commit_id":"343c0e76fcd95ac739ca7cd6742c9d617e19fc37","url":"https://github.com/apache/hadoop"},{"original_method":"@Override\n  public void encode(ByteBuffer[] inputs, ByteBuffer[] outputs) {\n    checkParameters(inputs, outputs);\n\n    boolean hasArray = inputs[0].hasArray();\n    if (hasArray) {\n      byte[][] newInputs = toArrays(inputs);\n      byte[][] newOutputs = toArrays(outputs);\n      doEncode(newInputs, newOutputs);\n    } else {\n      doEncode(inputs, outputs);\n    }\n  }","id":16109,"modified_method":"@Override\n  public void encode(ByteBuffer[] inputs, ByteBuffer[] outputs) {\n    checkParameters(inputs, outputs);\n    int dataLen = inputs[0].remaining();\n    if (dataLen == 0) {\n      return;\n    }\n    ensureLength(inputs, dataLen);\n    ensureLength(outputs, dataLen);\n\n    boolean usingDirectBuffer = inputs[0].isDirect();\n    if (usingDirectBuffer) {\n      doEncode(inputs, outputs);\n      return;\n    }\n\n    int[] inputOffsets = new int[inputs.length];\n    int[] outputOffsets = new int[outputs.length];\n    byte[][] newInputs = new byte[inputs.length][];\n    byte[][] newOutputs = new byte[outputs.length][];\n\n    ByteBuffer buffer;\n    for (int i = 0; i < inputs.length; ++i) {\n      buffer = inputs[i];\n      inputOffsets[i] = buffer.position();\n      newInputs[i] = buffer.array();\n    }\n\n    for (int i = 0; i < outputs.length; ++i) {\n      buffer = outputs[i];\n      outputOffsets[i] = buffer.position();\n      newOutputs[i] = buffer.array();\n    }\n\n    doEncode(newInputs, inputOffsets, dataLen, newOutputs, outputOffsets);\n\n    for (int i = 0; i < inputs.length; ++i) {\n      buffer = inputs[i];\n      buffer.position(buffer.position() + dataLen); // dataLen bytes consumed\n    }\n  }","commit_id":"343c0e76fcd95ac739ca7cd6742c9d617e19fc37","url":"https://github.com/apache/hadoop"},{"original_method":"/**\n   * Check and validate decoding parameters, throw exception accordingly.\n   * @param inputs\n   * @param outputs\n   */\n  protected void checkParameters(Object[] inputs, Object[] outputs) {\n    if (inputs.length != getNumDataUnits()) {\n      throw new IllegalArgumentException(\"Invalid inputs length\");\n    }\n    if (outputs.length != getNumParityUnits()) {\n      throw new IllegalArgumentException(\"Invalid outputs length\");\n    }\n  }","id":16110,"modified_method":"/**\n   * Check and validate decoding parameters, throw exception accordingly.\n   * @param inputs\n   * @param outputs\n   */\n  protected void checkParameters(Object[] inputs, Object[] outputs) {\n    if (inputs.length != getNumDataUnits()) {\n      throw new HadoopIllegalArgumentException(\"Invalid inputs length\");\n    }\n    if (outputs.length != getNumParityUnits()) {\n      throw new HadoopIllegalArgumentException(\"Invalid outputs length\");\n    }\n  }","commit_id":"343c0e76fcd95ac739ca7cd6742c9d617e19fc37","url":"https://github.com/apache/hadoop"},{"original_method":"/**\n   * A \"bulk\" version of the substitute, using ByteBuffer.\n   * Tends to be 2X faster than the \"int\" substitute in a loop.\n   *\n   * @param p input polynomial\n   * @param q store the return result\n   * @param x input field\n   */\n  public void substitute(ByteBuffer[] p, ByteBuffer q, int x) {\n    int y = 1;\n    for (int i = 0; i < p.length; i++) {\n      ByteBuffer pi = p[i];\n      int len = pi.remaining();\n      for (int j = 0; j < len; j++) {\n        int pij = pi.get(j) & 0x000000FF;\n        q.put(j, (byte) (q.get(j) ^ mulTable[pij][y]));\n      }\n      y = mulTable[x][y];\n    }\n  }","id":16111,"modified_method":"/**\n   * A \"bulk\" version of the substitute, using ByteBuffer.\n   * Tends to be 2X faster than the \"int\" substitute in a loop.\n   *\n   * @param p input polynomial\n   * @param q store the return result\n   * @param x input field\n   */\n  public void substitute(ByteBuffer[] p, ByteBuffer q, int x) {\n    int y = 1, iIdx, oIdx;\n    for (int i = 0; i < p.length; i++) {\n      ByteBuffer pi = p[i];\n      for (iIdx = pi.position(), oIdx = q.position();\n           iIdx < pi.limit(); iIdx++, oIdx++) {\n        int pij = pi.get(iIdx) & 0x000000FF;\n        q.put(oIdx, (byte) (q.get(oIdx) ^ mulTable[pij][y]));\n      }\n      y = mulTable[x][y];\n    }\n  }","commit_id":"343c0e76fcd95ac739ca7cd6742c9d617e19fc37","url":"https://github.com/apache/hadoop"},{"original_method":"/**\n   * The \"bulk\" version of the remainder, using ByteBuffer.\n   * Warning: This function will modify the \"dividend\" inputs.\n   */\n  public void remainder(ByteBuffer[] dividend, int[] divisor) {\n    for (int i = dividend.length - divisor.length; i >= 0; i--) {\n      int width = dividend[i].remaining();\n      for (int j = 0; j < divisor.length; j++) {\n        for (int k = 0; k < width; k++) {\n          int ratio = divTable[dividend[i + divisor.length - 1].get(k) &\n              0x00FF][divisor[divisor.length - 1]];\n          dividend[j + i].put(k, (byte) ((dividend[j + i].get(k) & 0x00FF) ^\n              mulTable[ratio][divisor[j]]));\n        }\n      }\n    }\n  }","id":16112,"modified_method":"/**\n   * The \"bulk\" version of the remainder, using ByteBuffer.\n   * Warning: This function will modify the \"dividend\" inputs.\n   */\n  public void remainder(ByteBuffer[] dividend, int[] divisor) {\n    int idx1, idx2;\n    ByteBuffer b1, b2;\n    for (int i = dividend.length - divisor.length; i >= 0; i--) {\n      for (int j = 0; j < divisor.length; j++) {\n        b1 = dividend[i + divisor.length - 1];\n        b2 = dividend[j + i];\n        for (idx1 = b1.position(), idx2 = b2.position();\n             idx1 < b1.limit(); idx1++, idx2++) {\n          int ratio = divTable[b1.get(idx1) &\n              0x00FF][divisor[divisor.length - 1]];\n          b2.put(idx2, (byte) ((b2.get(idx2) & 0x00FF) ^\n              mulTable[ratio][divisor[j]]));\n        }\n      }\n    }\n  }","commit_id":"343c0e76fcd95ac739ca7cd6742c9d617e19fc37","url":"https://github.com/apache/hadoop"},{"original_method":"/**\n   * A \"bulk\" version to the solving of Vandermonde System\n   */\n  public void solveVandermondeSystem(int[] x, byte[][] y,\n                                     int len, int dataLen) {\n    for (int i = 0; i < len - 1; i++) {\n      for (int j = len - 1; j > i; j--) {\n        for (int k = 0; k < dataLen; k++) {\n          y[j][k] = (byte) (y[j][k] ^ mulTable[x[i]][y[j - 1][k] &\n              0x000000FF]);\n        }\n      }\n    }\n    for (int i = len - 1; i >= 0; i--) {\n      for (int j = i + 1; j < len; j++) {\n        for (int k = 0; k < dataLen; k++) {\n          y[j][k] = (byte) (divTable[y[j][k] & 0x000000FF][x[j] ^\n              x[j - i - 1]]);\n        }\n      }\n      for (int j = i; j < len - 1; j++) {\n        for (int k = 0; k < dataLen; k++) {\n          y[j][k] = (byte) (y[j][k] ^ y[j + 1][k]);\n        }\n      }\n    }\n  }","id":16113,"modified_method":"/**\n   * A \"bulk\" version to the solving of Vandermonde System\n   */\n  public void solveVandermondeSystem(int[] x, byte[][] y, int[] outputOffsets,\n                                     int len, int dataLen) {\n    int idx1, idx2;\n    for (int i = 0; i < len - 1; i++) {\n      for (int j = len - 1; j > i; j--) {\n        for (idx2 = outputOffsets[j-1], idx1 = outputOffsets[j];\n             idx1 < outputOffsets[j] + dataLen; idx1++, idx2++) {\n          y[j][idx1] = (byte) (y[j][idx1] ^ mulTable[x[i]][y[j - 1][idx2] &\n              0x000000FF]);\n        }\n      }\n    }\n    for (int i = len - 1; i >= 0; i--) {\n      for (int j = i + 1; j < len; j++) {\n        for (idx1 = outputOffsets[j];\n             idx1 < outputOffsets[j] + dataLen; idx1++) {\n          y[j][idx1] = (byte) (divTable[y[j][idx1] & 0x000000FF][x[j] ^\n              x[j - i - 1]]);\n        }\n      }\n      for (int j = i; j < len - 1; j++) {\n        for (idx2 = outputOffsets[j+1], idx1 = outputOffsets[j];\n             idx1 < outputOffsets[j] + dataLen; idx1++, idx2++) {\n          y[j][idx1] = (byte) (y[j][idx1] ^ y[j + 1][idx2]);\n        }\n      }\n    }\n  }","commit_id":"343c0e76fcd95ac739ca7cd6742c9d617e19fc37","url":"https://github.com/apache/hadoop"},{"original_method":"/**\n   * A \"bulk\" version of the solveVandermondeSystem, using ByteBuffer.\n   */\n  public void solveVandermondeSystem(int[] x, ByteBuffer[] y,\n                                     int len, int dataLen) {\n    for (int i = 0; i < len - 1; i++) {\n      for (int j = len - 1; j > i; j--) {\n        for (int k = 0; k < dataLen; k++) {\n          y[j].put(k, (byte) (y[j].get(k) ^ mulTable[x[i]][y[j - 1].get(k) &\n              0x000000FF]));\n        }\n      }\n    }\n    for (int i = len - 1; i >= 0; i--) {\n      for (int j = i + 1; j < len; j++) {\n        for (int k = 0; k < dataLen; k++) {\n          y[j].put(k, (byte) (divTable[y[j].get(k) & 0x000000FF][x[j] ^\n              x[j - i - 1]]));\n        }\n      }\n      for (int j = i; j < len - 1; j++) {\n        for (int k = 0; k < dataLen; k++) {\n          y[j].put(k, (byte) (y[j].get(k) ^ y[j + 1].get(k)));\n        }\n      }\n    }\n  }","id":16114,"modified_method":"/**\n   * A \"bulk\" version of the solveVandermondeSystem, using ByteBuffer.\n   */\n  public void solveVandermondeSystem(int[] x, ByteBuffer[] y, int len) {\n    ByteBuffer p;\n    int idx1, idx2;\n    for (int i = 0; i < len - 1; i++) {\n      for (int j = len - 1; j > i; j--) {\n        p = y[j];\n        for (idx1 = p.position(), idx2 = y[j-1].position();\n             idx1 < p.limit(); idx1++, idx2++) {\n          p.put(idx1, (byte) (p.get(idx1) ^ mulTable[x[i]][y[j-1].get(idx2) &\n              0x000000FF]));\n        }\n      }\n    }\n\n    for (int i = len - 1; i >= 0; i--) {\n      for (int j = i + 1; j < len; j++) {\n        p = y[j];\n        for (idx1 = p.position(); idx1 < p.limit(); idx1++) {\n          p.put(idx1, (byte) (divTable[p.get(idx1) &\n              0x000000FF][x[j] ^ x[j - i - 1]]));\n        }\n      }\n\n      for (int j = i; j < len - 1; j++) {\n        p = y[j];\n        for (idx1 = p.position(), idx2 = y[j+1].position();\n             idx1 < p.limit(); idx1++, idx2++) {\n          p.put(idx1, (byte) (p.get(idx1) ^ y[j+1].get(idx2)));\n        }\n      }\n    }\n  }","commit_id":"343c0e76fcd95ac739ca7cd6742c9d617e19fc37","url":"https://github.com/apache/hadoop"},{"original_method":"@Override\n  public void initialize(int numDataUnits, int numParityUnits, int chunkSize) {\n    super.initialize(numDataUnits, numParityUnits, chunkSize);\n    assert (getNumDataUnits() + getNumParityUnits() < RSUtil.GF.getFieldSize());\n\n    this.errSignature = new int[getNumParityUnits()];\n    this.primitivePower = RSUtil.getPrimitivePower(getNumDataUnits(),\n        getNumParityUnits());\n  }","id":16115,"modified_method":"@Override\n  public void initialize(int numDataUnits, int numParityUnits, int chunkSize) {\n    super.initialize(numDataUnits, numParityUnits, chunkSize);\n    assert (getNumDataUnits() + getNumParityUnits() < RSUtil.GF.getFieldSize());\n\n    this.errSignature = new int[numParityUnits];\n    this.primitivePower = RSUtil.getPrimitivePower(numDataUnits,\n        numParityUnits);\n  }","commit_id":"343c0e76fcd95ac739ca7cd6742c9d617e19fc37","url":"https://github.com/apache/hadoop"},{"original_method":"@Override\n  protected void doDecode(byte[][] inputs, int[] erasedIndexes,\n                          byte[][] outputs) {\n    for (int i = 0; i < erasedIndexes.length; i++) {\n      errSignature[i] = primitivePower[erasedIndexes[i]];\n      RSUtil.GF.substitute(inputs, outputs[i], primitivePower[i]);\n    }\n\n    int dataLen = inputs[0].length;\n    RSUtil.GF.solveVandermondeSystem(errSignature, outputs,\n        erasedIndexes.length, dataLen);\n  }","id":16116,"modified_method":"@Override\n  protected void doDecode(byte[][] inputs, int[] inputOffsets,\n                          int dataLen, int[] erasedIndexes,\n                          byte[][] outputs, int[] outputOffsets) {\n    for (int i = 0; i < erasedIndexes.length; i++) {\n      errSignature[i] = primitivePower[erasedIndexes[i]];\n      RSUtil.GF.substitute(inputs, inputOffsets, dataLen, outputs[i],\n          outputOffsets[i], primitivePower[i]);\n    }\n\n    RSUtil.GF.solveVandermondeSystem(errSignature, outputs, outputOffsets,\n        erasedIndexes.length, dataLen);\n  }","commit_id":"343c0e76fcd95ac739ca7cd6742c9d617e19fc37","url":"https://github.com/apache/hadoop"},{"original_method":"@Override\n  protected void doDecode(ByteBuffer[] inputs, int[] erasedIndexes,\n                          ByteBuffer[] outputs) {\n    for (int i = 0; i < erasedIndexes.length; i++) {\n      errSignature[i] = primitivePower[erasedIndexes[i]];\n      RSUtil.GF.substitute(inputs, outputs[i], primitivePower[i]);\n    }\n\n    int dataLen = inputs[0].remaining();\n    RSUtil.GF.solveVandermondeSystem(errSignature, outputs,\n        erasedIndexes.length, dataLen);\n  }","id":16117,"modified_method":"@Override\n  protected void doDecode(ByteBuffer[] inputs, int[] erasedIndexes,\n                          ByteBuffer[] outputs) {\n    for (int i = 0; i < erasedIndexes.length; i++) {\n      errSignature[i] = primitivePower[erasedIndexes[i]];\n      RSUtil.GF.substitute(inputs, outputs[i], primitivePower[i]);\n    }\n\n    RSUtil.GF.solveVandermondeSystem(errSignature,\n        outputs, erasedIndexes.length);\n  }","commit_id":"343c0e76fcd95ac739ca7cd6742c9d617e19fc37","url":"https://github.com/apache/hadoop"},{"original_method":"@Override\n  public void initialize(int numDataUnits, int numParityUnits, int chunkSize) {\n    super.initialize(numDataUnits, numParityUnits, chunkSize);\n    assert (getNumDataUnits() + getNumParityUnits() < RSUtil.GF.getFieldSize());\n\n    int[] primitivePower = RSUtil.getPrimitivePower(getNumDataUnits(),\n        getNumParityUnits());\n    // compute generating polynomial\n    int[] gen = {1};\n    int[] poly = new int[2];\n    for (int i = 0; i < getNumParityUnits(); i++) {\n      poly[0] = primitivePower[i];\n      poly[1] = 1;\n      gen = RSUtil.GF.multiply(gen, poly);\n    }\n    // generating polynomial has all generating roots\n    generatingPolynomial = gen;\n  }","id":16118,"modified_method":"@Override\n  public void initialize(int numDataUnits, int numParityUnits, int chunkSize) {\n    super.initialize(numDataUnits, numParityUnits, chunkSize);\n    assert (getNumDataUnits() + getNumParityUnits() < RSUtil.GF.getFieldSize());\n\n    int[] primitivePower = RSUtil.getPrimitivePower(numDataUnits,\n        numParityUnits);\n    // compute generating polynomial\n    int[] gen = {1};\n    int[] poly = new int[2];\n    for (int i = 0; i < numParityUnits; i++) {\n      poly[0] = primitivePower[i];\n      poly[1] = 1;\n      gen = RSUtil.GF.multiply(gen, poly);\n    }\n    // generating polynomial has all generating roots\n    generatingPolynomial = gen;\n  }","commit_id":"343c0e76fcd95ac739ca7cd6742c9d617e19fc37","url":"https://github.com/apache/hadoop"},{"original_method":"@Override\n  protected void doEncode(ByteBuffer[] inputs, ByteBuffer[] outputs) {\n    ByteBuffer[] data = new ByteBuffer[getNumDataUnits() + getNumParityUnits()];\n    for (int i = 0; i < getNumParityUnits(); i++) {\n      data[i] = outputs[i];\n    }\n    for (int i = 0; i < getNumDataUnits(); i++) {\n      data[i + getNumParityUnits()] = inputs[i];\n    }\n\n    // Compute the remainder\n    RSUtil.GF.remainder(data, generatingPolynomial);\n  }","id":16119,"modified_method":"@Override\n  protected void doEncode(ByteBuffer[] inputs, ByteBuffer[] outputs) {\n    // parity units + data units\n    ByteBuffer[] all = new ByteBuffer[outputs.length + inputs.length];\n    System.arraycopy(outputs, 0, all, 0, outputs.length);\n    System.arraycopy(inputs, 0, all, outputs.length, inputs.length);\n\n    // Compute the remainder\n    RSUtil.GF.remainder(all, generatingPolynomial);\n  }","commit_id":"343c0e76fcd95ac739ca7cd6742c9d617e19fc37","url":"https://github.com/apache/hadoop"},{"original_method":"@Override\n  protected void doEncode(byte[][] inputs, byte[][] outputs) {\n    byte[][] data = new byte[getNumDataUnits() + getNumParityUnits()][];\n    for (int i = 0; i < getNumParityUnits(); i++) {\n      data[i] = outputs[i];\n    }\n    for (int i = 0; i < getNumDataUnits(); i++) {\n      data[i + getNumParityUnits()] = inputs[i];\n    }\n\n    // Compute the remainder\n    RSUtil.GF.remainder(data, generatingPolynomial);\n  }","id":16120,"modified_method":"@Override\n  protected void doEncode(byte[][] inputs, int[] inputOffsets,\n                          int dataLen, byte[][] outputs,\n                          int[] outputOffsets) {\n    // parity units + data units\n    byte[][] all = new byte[outputs.length + inputs.length][];\n    System.arraycopy(outputs, 0, all, 0, outputs.length);\n    System.arraycopy(inputs, 0, all, outputs.length, inputs.length);\n\n    int[] offsets = new int[inputOffsets.length + outputOffsets.length];\n    System.arraycopy(outputOffsets, 0, offsets, 0, outputOffsets.length);\n    System.arraycopy(inputOffsets, 0, offsets,\n        outputOffsets.length, inputOffsets.length);\n\n    // Compute the remainder\n    RSUtil.GF.remainder(all, offsets, dataLen, generatingPolynomial);\n  }","commit_id":"343c0e76fcd95ac739ca7cd6742c9d617e19fc37","url":"https://github.com/apache/hadoop"},{"original_method":"/**\n   * Clone chunk along with copying the associated data. It respects how the\n   * chunk buffer is allocated, direct or non-direct. It avoids affecting the\n   * original chunk.\n   * @param chunk\n   * @return a new chunk\n   */\n  protected static ECChunk cloneChunkWithData(ECChunk chunk) {\n    ByteBuffer srcBuffer = chunk.getBuffer();\n    ByteBuffer destBuffer;\n\n    byte[] bytesArr = new byte[srcBuffer.remaining()];\n    srcBuffer.mark();\n    srcBuffer.get(bytesArr);\n    srcBuffer.reset();\n\n    if (srcBuffer.hasArray()) {\n      destBuffer = ByteBuffer.wrap(bytesArr);\n    } else {\n      destBuffer = ByteBuffer.allocateDirect(srcBuffer.remaining());\n      destBuffer.put(bytesArr);\n      destBuffer.flip();\n    }\n\n    return new ECChunk(destBuffer);\n  }","id":16121,"modified_method":"/**\n   * Clone chunk along with copying the associated data. It respects how the\n   * chunk buffer is allocated, direct or non-direct. It avoids affecting the\n   * original chunk.\n   * @param chunk\n   * @return a new chunk\n   */\n  protected ECChunk cloneChunkWithData(ECChunk chunk) {\n    ByteBuffer srcBuffer = chunk.getBuffer();\n\n    byte[] bytesArr = new byte[srcBuffer.remaining()];\n    srcBuffer.mark();\n    srcBuffer.get(bytesArr, 0, bytesArr.length);\n    srcBuffer.reset();\n\n    ByteBuffer destBuffer = allocateOutputBuffer(bytesArr.length);\n    int pos = destBuffer.position();\n    destBuffer.put(bytesArr);\n    destBuffer.flip();\n    destBuffer.position(pos);\n\n    return new ECChunk(destBuffer);\n  }","commit_id":"343c0e76fcd95ac739ca7cd6742c9d617e19fc37","url":"https://github.com/apache/hadoop"},{"original_method":"/**\n   * Allocate a buffer for output or writing.\n   * @return\n   */\n  protected ByteBuffer allocateOutputBuffer() {\n    ByteBuffer buffer = usingDirectBuffer ?\n        ByteBuffer.allocateDirect(chunkSize) : ByteBuffer.allocate(chunkSize);\n\n    return buffer;\n  }","id":16122,"modified_method":"/**\n   * Allocate a buffer for output or writing. It can prepare for two kinds of\n   * data buffers: one with position as 0, the other with position > 0\n   * @return a buffer ready to write chunkSize bytes from current position\n   */\n  protected ByteBuffer allocateOutputBuffer(int bufferLen) {\n    /**\n     * When startBufferWithZero, will prepare a buffer as:---------------\n     * otherwise, the buffer will be like:             ___TO--BE--WRITTEN___,\n     * and in the beginning, dummy data are prefixed, to simulate a buffer of\n     * position > 0.\n     */\n    int startOffset = startBufferWithZero ? 0 : 11; // 11 is arbitrary\n    int allocLen = startOffset + bufferLen + startOffset;\n    ByteBuffer buffer = usingDirectBuffer ?\n        ByteBuffer.allocateDirect(allocLen) : ByteBuffer.allocate(allocLen);\n    buffer.limit(startOffset + bufferLen);\n    fillDummyData(buffer, startOffset);\n    startBufferWithZero = ! startBufferWithZero;\n\n    return buffer;\n  }","commit_id":"343c0e76fcd95ac739ca7cd6742c9d617e19fc37","url":"https://github.com/apache/hadoop"},{"original_method":"/**\n   * Generate data chunk by making random data.\n   * @return\n   */\n  protected ECChunk generateDataChunk() {\n    ByteBuffer buffer = allocateOutputBuffer();\n    for (int i = 0; i < chunkSize; i++) {\n      buffer.put((byte) RAND.nextInt(256));\n    }\n    buffer.flip();\n\n    return new ECChunk(buffer);\n  }","id":16123,"modified_method":"/**\n   * Generate data chunk by making random data.\n   * @return\n   */\n  protected ECChunk generateDataChunk() {\n    ByteBuffer buffer = allocateOutputBuffer(chunkSize);\n    int pos = buffer.position();\n    buffer.put(generateData(chunkSize));\n    buffer.flip();\n    buffer.position(pos);\n\n    return new ECChunk(buffer);\n  }","commit_id":"343c0e76fcd95ac739ca7cd6742c9d617e19fc37","url":"https://github.com/apache/hadoop"},{"original_method":"/**\n   * Erase data from the specified chunk, putting ZERO bytes to the buffer.\n   * @param chunk\n   */\n  protected void eraseDataFromChunk(ECChunk chunk) {\n    ByteBuffer chunkBuffer = chunk.getBuffer();\n    // erase the data\n    chunkBuffer.position(0);\n    for (int i = 0; i < chunkSize; i++) {\n      chunkBuffer.put((byte) 0);\n    }\n    chunkBuffer.flip();\n  }","id":16124,"modified_method":"/**\n   * Erase data from the specified chunk, putting ZERO bytes to the buffer.\n   * @param chunk with a buffer ready to read at the current position\n   */\n  protected void eraseDataFromChunk(ECChunk chunk) {\n    ByteBuffer chunkBuffer = chunk.getBuffer();\n    // Erase the data at the position, and restore the buffer ready for reading\n    // same many bytes but all ZERO.\n    int pos = chunkBuffer.position();\n    int len = chunkBuffer.remaining();\n    chunkBuffer.put(zeroChunkBytes, 0, len);\n    // Back to readable again after data erased\n    chunkBuffer.flip();\n    chunkBuffer.position(pos);\n    chunkBuffer.limit(pos + len);\n  }","commit_id":"343c0e76fcd95ac739ca7cd6742c9d617e19fc37","url":"https://github.com/apache/hadoop"},{"original_method":"/**\n   * Allocate a chunk for output or writing.\n   * @return\n   */\n  protected ECChunk allocateOutputChunk() {\n    ByteBuffer buffer = allocateOutputBuffer();\n\n    return new ECChunk(buffer);\n  }","id":16125,"modified_method":"/**\n   * Allocate a chunk for output or writing.\n   * @return\n   */\n  protected ECChunk allocateOutputChunk() {\n    ByteBuffer buffer = allocateOutputBuffer(chunkSize);\n\n    return new ECChunk(buffer);\n  }","commit_id":"343c0e76fcd95ac739ca7cd6742c9d617e19fc37","url":"https://github.com/apache/hadoop"},{"original_method":"/**\n   * Compare and verify if erased chunks are equal to recovered chunks\n   * @param erasedChunks\n   * @param recoveredChunks\n   */\n  protected void compareAndVerify(ECChunk[] erasedChunks,\n                                  ECChunk[] recoveredChunks) {\n    byte[][] erased = ECChunk.toArrays(erasedChunks);\n    byte[][] recovered = ECChunk.toArrays(recoveredChunks);\n    boolean result = Arrays.deepEquals(erased, recovered);\n    assertTrue(\"Decoding and comparing failed.\", result);\n  }","id":16126,"modified_method":"/**\n   * Compare and verify if erased chunks are equal to recovered chunks\n   * @param erasedChunks\n   * @param recoveredChunks\n   */\n  protected void compareAndVerify(ECChunk[] erasedChunks,\n                                  ECChunk[] recoveredChunks) {\n    byte[][] erased = toArrays(erasedChunks);\n    byte[][] recovered = toArrays(recoveredChunks);\n    boolean result = Arrays.deepEquals(erased, recovered);\n    assertTrue(\"Decoding and comparing failed.\", result);\n  }","commit_id":"343c0e76fcd95ac739ca7cd6742c9d617e19fc37","url":"https://github.com/apache/hadoop"},{"original_method":"/**\n   * Clone chunks along with copying the associated data. It respects how the\n   * chunk buffer is allocated, direct or non-direct. It avoids affecting the\n   * original chunk buffers.\n   * @param chunks\n   * @return\n   */\n  protected static ECChunk[] cloneChunksWithData(ECChunk[] chunks) {\n    ECChunk[] results = new ECChunk[chunks.length];\n    for (int i = 0; i < chunks.length; i++) {\n      results[i] = cloneChunkWithData(chunks[i]);\n    }\n\n    return results;\n  }","id":16127,"modified_method":"/**\n   * Clone chunks along with copying the associated data. It respects how the\n   * chunk buffer is allocated, direct or non-direct. It avoids affecting the\n   * original chunk buffers.\n   * @param chunks\n   * @return\n   */\n  protected ECChunk[] cloneChunksWithData(ECChunk[] chunks) {\n    ECChunk[] results = new ECChunk[chunks.length];\n    for (int i = 0; i < chunks.length; i++) {\n      results[i] = cloneChunkWithData(chunks[i]);\n    }\n\n    return results;\n  }","commit_id":"343c0e76fcd95ac739ca7cd6742c9d617e19fc37","url":"https://github.com/apache/hadoop"},{"original_method":"/**\n   * Generating source data, encoding, recovering and then verifying.\n   * RawErasureCoder mainly uses ECChunk to pass input and output data buffers,\n   * it supports two kinds of ByteBuffers, one is array backed, the other is\n   * direct ByteBuffer. Have usingDirectBuffer to indicate which case to test.\n   * @param usingDirectBuffer\n   */\n  protected void testCoding(boolean usingDirectBuffer) {\n    this.usingDirectBuffer = usingDirectBuffer;\n    prepareCoders();\n\n    // Generate data and encode\n    ECBlockGroup blockGroup = prepareBlockGroupForEncoding();\n    // Backup all the source chunks for later recovering because some coders\n    // may affect the source data.\n    TestBlock[] clonedDataBlocks =\n        cloneBlocksWithData((TestBlock[]) blockGroup.getDataBlocks());\n    TestBlock[] parityBlocks = (TestBlock[]) blockGroup.getParityBlocks();\n\n    ErasureCodingStep codingStep;\n    codingStep = encoder.calculateCoding(blockGroup);\n    performCodingStep(codingStep);\n    // Erase specified sources but return copies of them for later comparing\n    TestBlock[] backupBlocks = backupAndEraseBlocks(clonedDataBlocks, parityBlocks);\n\n    // Decode\n    blockGroup = new ECBlockGroup(clonedDataBlocks, blockGroup.getParityBlocks());\n    codingStep = decoder.calculateCoding(blockGroup);\n    performCodingStep(codingStep);\n\n    // Compare\n    compareAndVerify(backupBlocks, codingStep.getOutputBlocks());\n  }","id":16128,"modified_method":"/**\n   * Generating source data, encoding, recovering and then verifying.\n   * RawErasureCoder mainly uses ECChunk to pass input and output data buffers,\n   * it supports two kinds of ByteBuffers, one is array backed, the other is\n   * direct ByteBuffer. Have usingDirectBuffer to indicate which case to test.\n   * @param usingDirectBuffer\n   */\n  protected void testCoding(boolean usingDirectBuffer) {\n    this.usingDirectBuffer = usingDirectBuffer;\n    prepareCoders();\n\n    /**\n     * The following runs will use 3 different chunkSize for inputs and outputs,\n     * to verify the same encoder/decoder can process variable width of data.\n     */\n    performTestCoding(baseChunkSize);\n    performTestCoding(baseChunkSize - 17);\n    performTestCoding(baseChunkSize + 16);\n  }","commit_id":"343c0e76fcd95ac739ca7cd6742c9d617e19fc37","url":"https://github.com/apache/hadoop"},{"original_method":"/**\n   * Clone blocks with data copied along with, avoiding affecting the original\n   * blocks.\n   * @param blocks\n   * @return\n   */\n  protected static TestBlock[] cloneBlocksWithData(TestBlock[] blocks) {\n    TestBlock[] results = new TestBlock[blocks.length];\n    for (int i = 0; i < blocks.length; ++i) {\n      results[i] = cloneBlockWithData(blocks[i]);\n    }\n\n    return results;\n  }","id":16129,"modified_method":"/**\n   * Clone blocks with data copied along with, avoiding affecting the original\n   * blocks.\n   * @param blocks\n   * @return\n   */\n  protected TestBlock[] cloneBlocksWithData(TestBlock[] blocks) {\n    TestBlock[] results = new TestBlock[blocks.length];\n    for (int i = 0; i < blocks.length; ++i) {\n      results[i] = cloneBlockWithData(blocks[i]);\n    }\n\n    return results;\n  }","commit_id":"343c0e76fcd95ac739ca7cd6742c9d617e19fc37","url":"https://github.com/apache/hadoop"},{"original_method":"/**\n   * Create erasure encoder for test.\n   * @return\n   */\n  private ErasureCoder createEncoder() {\n    ErasureCoder encoder;\n    try {\n      encoder = encoderClass.newInstance();\n    } catch (Exception e) {\n      throw new RuntimeException(\"Failed to create encoder\", e);\n    }\n\n    encoder.initialize(numDataUnits, numParityUnits, chunkSize);\n    encoder.setConf(getConf());\n    return encoder;\n  }","id":16130,"modified_method":"/**\n   * Create erasure encoder for test.\n   * @return\n   */\n  private ErasureCoder createEncoder() {\n    ErasureCoder encoder;\n    try {\n      encoder = encoderClass.newInstance();\n    } catch (Exception e) {\n      throw new RuntimeException(\"Failed to create encoder\", e);\n    }\n\n    encoder.initialize(numDataUnits, numParityUnits, getChunkSize());\n    encoder.setConf(getConf());\n    return encoder;\n  }","commit_id":"343c0e76fcd95ac739ca7cd6742c9d617e19fc37","url":"https://github.com/apache/hadoop"},{"original_method":"/**\n   * Clone exactly a block, avoiding affecting the original block.\n   * @param block\n   * @return a new block\n   */\n  protected static TestBlock cloneBlockWithData(TestBlock block) {\n    ECChunk[] newChunks = cloneChunksWithData(block.chunks);\n\n    return new TestBlock(newChunks);\n  }","id":16131,"modified_method":"/**\n   * Clone exactly a block, avoiding affecting the original block.\n   * @param block\n   * @return a new block\n   */\n  protected TestBlock cloneBlockWithData(TestBlock block) {\n    ECChunk[] newChunks = cloneChunksWithData(block.chunks);\n\n    return new TestBlock(newChunks);\n  }","commit_id":"343c0e76fcd95ac739ca7cd6742c9d617e19fc37","url":"https://github.com/apache/hadoop"},{"original_method":"/**\n   * Create the erasure decoder for the test.\n   * @return\n   */\n  private ErasureCoder createDecoder() {\n    ErasureCoder decoder;\n    try {\n      decoder = decoderClass.newInstance();\n    } catch (Exception e) {\n      throw new RuntimeException(\"Failed to create decoder\", e);\n    }\n\n    decoder.initialize(numDataUnits, numParityUnits, chunkSize);\n    decoder.setConf(getConf());\n    return decoder;\n  }","id":16132,"modified_method":"/**\n   * Create the erasure decoder for the test.\n   * @return\n   */\n  private ErasureCoder createDecoder() {\n    ErasureCoder decoder;\n    try {\n      decoder = decoderClass.newInstance();\n    } catch (Exception e) {\n      throw new RuntimeException(\"Failed to create decoder\", e);\n    }\n\n    decoder.initialize(numDataUnits, numParityUnits, getChunkSize());\n    decoder.setConf(getConf());\n    return decoder;\n  }","commit_id":"343c0e76fcd95ac739ca7cd6742c9d617e19fc37","url":"https://github.com/apache/hadoop"},{"original_method":"@Test\n  public void testCodingDirectBuffer_10x4_erasing_p1() {\n    prepare(null, 10, 4, new int[] {}, new int[] {1});\n    testCoding(true);\n    testCoding(true);\n  }","id":16133,"modified_method":"@Test\n  public void testCodingDirectBuffer_10x4_erasing_p1() {\n    prepare(null, 10, 4, new int[0], new int[] {1});\n    testCoding(true);\n    testCoding(true);\n  }","commit_id":"343c0e76fcd95ac739ca7cd6742c9d617e19fc37","url":"https://github.com/apache/hadoop"},{"original_method":"@Override\n  protected ECChunk generateDataChunk() {\n    ByteBuffer buffer = allocateOutputBuffer();\n    for (int i = 0; i < chunkSize; i++) {\n      buffer.put((byte) RAND.nextInt(symbolMax));\n    }\n    buffer.flip();\n\n    return new ECChunk(buffer);\n  }","id":16134,"modified_method":"@Override\n  protected byte[] generateData(int len) {\n    byte[] buffer = new byte[len];\n    for (int i = 0; i < len; i++) {\n      buffer[i] = (byte) RAND.nextInt(symbolMax);\n    }\n    return buffer;\n  }","commit_id":"343c0e76fcd95ac739ca7cd6742c9d617e19fc37","url":"https://github.com/apache/hadoop"},{"original_method":"/**\n   * Generating source data, encoding, recovering and then verifying.\n   * RawErasureCoder mainly uses ECChunk to pass input and output data buffers,\n   * it supports two kinds of ByteBuffers, one is array backed, the other is\n   * direct ByteBuffer. Use usingDirectBuffer indicate which case to test.\n   *\n   * @param usingDirectBuffer\n   */\n  protected void testCoding(boolean usingDirectBuffer) {\n    this.usingDirectBuffer = usingDirectBuffer;\n    prepareCoders();\n\n    // Generate data and encode\n    ECChunk[] dataChunks = prepareDataChunksForEncoding();\n    ECChunk[] parityChunks = prepareParityChunksForEncoding();\n\n    // Backup all the source chunks for later recovering because some coders\n    // may affect the source data.\n    ECChunk[] clonedDataChunks = cloneChunksWithData(dataChunks);\n\n    encoder.encode(dataChunks, parityChunks);\n\n    // Backup and erase some chunks\n    ECChunk[] backupChunks = backupAndEraseChunks(clonedDataChunks, parityChunks);\n\n    // Decode\n    ECChunk[] inputChunks = prepareInputChunksForDecoding(\n        clonedDataChunks, parityChunks);\n\n    ECChunk[] recoveredChunks = prepareOutputChunksForDecoding();\n\n    decoder.decode(inputChunks, getErasedIndexesForDecoding(), recoveredChunks);\n\n    // Compare\n    compareAndVerify(backupChunks, recoveredChunks);\n  }","id":16135,"modified_method":"/**\n   * Generating source data, encoding, recovering and then verifying.\n   * RawErasureCoder mainly uses ECChunk to pass input and output data buffers,\n   * it supports two kinds of ByteBuffers, one is array backed, the other is\n   * direct ByteBuffer. Use usingDirectBuffer indicate which case to test.\n   *\n   * @param usingDirectBuffer\n   */\n  protected void testCoding(boolean usingDirectBuffer) {\n    this.usingDirectBuffer = usingDirectBuffer;\n    prepareCoders();\n\n    /**\n     * The following runs will use 3 different chunkSize for inputs and outputs,\n     * to verify the same encoder/decoder can process variable width of data.\n     */\n    performTestCoding(baseChunkSize, false, false);\n    performTestCoding(baseChunkSize - 17, false, false);\n    performTestCoding(baseChunkSize + 16, false, false);\n  }","commit_id":"343c0e76fcd95ac739ca7cd6742c9d617e19fc37","url":"https://github.com/apache/hadoop"},{"original_method":"/**\n   * create the raw erasure decoder to test\n   * @return\n   */\n  protected RawErasureDecoder createDecoder() {\n    RawErasureDecoder decoder;\n    try {\n      decoder = decoderClass.newInstance();\n    } catch (Exception e) {\n      throw new RuntimeException(\"Failed to create decoder\", e);\n    }\n\n    decoder.initialize(numDataUnits, numParityUnits, chunkSize);\n    decoder.setConf(getConf());\n    return decoder;\n  }","id":16136,"modified_method":"/**\n   * create the raw erasure decoder to test\n   * @return\n   */\n  protected RawErasureDecoder createDecoder() {\n    RawErasureDecoder decoder;\n    try {\n      decoder = decoderClass.newInstance();\n    } catch (Exception e) {\n      throw new RuntimeException(\"Failed to create decoder\", e);\n    }\n\n    decoder.initialize(numDataUnits, numParityUnits, getChunkSize());\n    decoder.setConf(getConf());\n    return decoder;\n  }","commit_id":"343c0e76fcd95ac739ca7cd6742c9d617e19fc37","url":"https://github.com/apache/hadoop"},{"original_method":"/**\n   * Create the raw erasure encoder to test\n   * @return\n   */\n  protected RawErasureEncoder createEncoder() {\n    RawErasureEncoder encoder;\n    try {\n      encoder = encoderClass.newInstance();\n    } catch (Exception e) {\n      throw new RuntimeException(\"Failed to create encoder\", e);\n    }\n\n    encoder.initialize(numDataUnits, numParityUnits, chunkSize);\n    encoder.setConf(getConf());\n    return encoder;\n  }","id":16137,"modified_method":"/**\n   * Create the raw erasure encoder to test\n   * @return\n   */\n  protected RawErasureEncoder createEncoder() {\n    RawErasureEncoder encoder;\n    try {\n      encoder = encoderClass.newInstance();\n    } catch (Exception e) {\n      throw new RuntimeException(\"Failed to create encoder\", e);\n    }\n\n    encoder.initialize(numDataUnits, numParityUnits, getChunkSize());\n    encoder.setConf(getConf());\n    return encoder;\n  }","commit_id":"343c0e76fcd95ac739ca7cd6742c9d617e19fc37","url":"https://github.com/apache/hadoop"},{"original_method":"@Override\n  protected void doDecode(byte[][] inputs,\n                          int[] erasedIndexes, byte[][] outputs) {\n    resetBuffer(outputs[0]);\n\n    int bufSize = getChunkSize();\n    int erasedIdx = erasedIndexes[0];\n\n    // Process the inputs.\n    for (int i = 0; i < inputs.length; i++) {\n      // Skip the erased location.\n      if (i == erasedIdx) {\n        continue;\n      }\n\n      for (int j = 0; j < bufSize; j++) {\n        outputs[0][j] ^= inputs[i][j];\n      }\n    }\n  }","id":16138,"modified_method":"@Override\n  protected void doDecode(byte[][] inputs, int[] inputOffsets, int dataLen,\n                          int[] erasedIndexes, byte[][] outputs,\n                          int[] outputOffsets) {\n    byte[] output = outputs[0];\n    resetBuffer(output, outputOffsets[0], dataLen);\n\n    int erasedIdx = erasedIndexes[0];\n\n    // Process the inputs.\n    int iIdx, oIdx;\n    for (int i = 0; i < inputs.length; i++) {\n      // Skip the erased location.\n      if (i == erasedIdx) {\n        continue;\n      }\n\n      for (iIdx = inputOffsets[i], oIdx = outputOffsets[0];\n           iIdx < inputOffsets[i] + dataLen; iIdx++, oIdx++) {\n        output[oIdx] ^= inputs[i][iIdx];\n      }\n    }\n  }","commit_id":"343c0e76fcd95ac739ca7cd6742c9d617e19fc37","url":"https://github.com/apache/hadoop"},{"original_method":"@Override\n  protected void doDecode(ByteBuffer[] inputs, int[] erasedIndexes,\n                          ByteBuffer[] outputs) {\n    resetBuffer(outputs[0]);\n\n    int bufSize = getChunkSize();\n    int erasedIdx = erasedIndexes[0];\n\n    // Process the inputs.\n    for (int i = 0; i < inputs.length; i++) {\n      // Skip the erased location.\n      if (i == erasedIdx) {\n        continue;\n      }\n\n      for (int j = 0; j < bufSize; j++) {\n        outputs[0].put(j, (byte) (outputs[0].get(j) ^ inputs[i].get(j)));\n      }\n    }\n  }","id":16139,"modified_method":"@Override\n  protected void doDecode(ByteBuffer[] inputs, int[] erasedIndexes,\n                          ByteBuffer[] outputs) {\n    ByteBuffer output = outputs[0];\n    resetOutputBuffer(output);\n\n    int erasedIdx = erasedIndexes[0];\n\n    // Process the inputs.\n    int iIdx, oIdx;\n    for (int i = 0; i < inputs.length; i++) {\n      // Skip the erased location.\n      if (i == erasedIdx) {\n        continue;\n      }\n\n      for (iIdx = inputs[i].position(), oIdx = output.position();\n           iIdx < inputs[i].limit();\n           iIdx++, oIdx++) {\n        output.put(oIdx, (byte) (output.get(oIdx) ^ inputs[i].get(iIdx)));\n      }\n    }\n  }","commit_id":"343c0e76fcd95ac739ca7cd6742c9d617e19fc37","url":"https://github.com/apache/hadoop"},{"original_method":"@Override\n  protected void doEncode(byte[][] inputs, byte[][] outputs) {\n    resetBuffer(outputs[0]);\n\n    int bufSize = getChunkSize();\n    // Get the first buffer's data.\n    for (int j = 0; j < bufSize; j++) {\n      outputs[0][j] = inputs[0][j];\n    }\n\n    // XOR with everything else.\n    for (int i = 1; i < inputs.length; i++) {\n      for (int j = 0; j < bufSize; j++) {\n        outputs[0][j] ^= inputs[i][j];\n      }\n    }\n  }","id":16140,"modified_method":"@Override\n  protected void doEncode(byte[][] inputs, int[] inputOffsets, int dataLen,\n                          byte[][] outputs, int[] outputOffsets) {\n    byte[] output = outputs[0];\n    resetBuffer(output, outputOffsets[0], dataLen);\n\n    // Get the first buffer's data.\n    int iIdx, oIdx;\n    for (iIdx = inputOffsets[0], oIdx = outputOffsets[0];\n         iIdx < inputOffsets[0] + dataLen; iIdx++, oIdx++) {\n      output[oIdx] = inputs[0][iIdx];\n    }\n\n    // XOR with everything else.\n    for (int i = 1; i < inputs.length; i++) {\n      for (iIdx = inputOffsets[i], oIdx = outputOffsets[0];\n           iIdx < inputOffsets[i] + dataLen; iIdx++, oIdx++) {\n        output[oIdx] ^= inputs[i][iIdx];\n      }\n    }\n  }","commit_id":"343c0e76fcd95ac739ca7cd6742c9d617e19fc37","url":"https://github.com/apache/hadoop"},{"original_method":"@Override\n  protected void doEncode(ByteBuffer[] inputs, ByteBuffer[] outputs) {\n    resetBuffer(outputs[0]);\n\n    int bufSize = getChunkSize();\n    // Get the first buffer's data.\n    for (int j = 0; j < bufSize; j++) {\n      outputs[0].put(j, inputs[0].get(j));\n    }\n\n    // XOR with everything else.\n    for (int i = 1; i < inputs.length; i++) {\n      for (int j = 0; j < bufSize; j++) {\n        outputs[0].put(j, (byte) (outputs[0].get(j) ^ inputs[i].get(j)));\n      }\n    }\n  }","id":16141,"modified_method":"protected void doEncode(ByteBuffer[] inputs, ByteBuffer[] outputs) {\n    ByteBuffer output = outputs[0];\n    resetOutputBuffer(output);\n\n    // Get the first buffer's data.\n    int iIdx, oIdx;\n    for (iIdx = inputs[0].position(), oIdx = output.position();\n         iIdx < inputs[0].limit(); iIdx++, oIdx++) {\n      output.put(oIdx, inputs[0].get(iIdx));\n    }\n\n    // XOR with everything else.\n    for (int i = 1; i < inputs.length; i++) {\n      for (iIdx = inputs[i].position(), oIdx = output.position();\n           iIdx < inputs[i].limit();\n           iIdx++, oIdx++) {\n        output.put(oIdx, (byte) (output.get(oIdx) ^ inputs[i].get(iIdx)));\n      }\n    }\n  }","commit_id":"343c0e76fcd95ac739ca7cd6742c9d617e19fc37","url":"https://github.com/apache/hadoop"},{"original_method":"/**\n     * Initialize all the global components, then initialize all the m_sites.\n     */\n    public void initialize(VoltDB.Configuration config) {\n        synchronized(m_startAndStopLock) {\n            hostLog.l7dlog( Level.INFO, LogKeys.host_VoltDB_StartupString.name(), null);\n\n            m_faultManager = new FaultDistributor();\n            // Install a handler for NODE_FAILURE faults to update the catalog\n            // This should be the first handler to run when a node fails\n            m_faultManager.registerFaultHandler(FaultType.NODE_FAILURE,\n                                                new VoltDBNodeFailureFaultHandler(),\n                                                NodeFailureFault.NODE_FAILURE_CATALOG);\n\n            // start the dumper thread\n            if (config.listenForDumpRequests)\n                DumpManager.init();\n\n            readBuildInfo();\n            m_config = config;\n\n            // start the admin console\n            int port;\n            for (port = 8080; true; port++) {\n                try {\n                    m_adminListener = new HTTPAdminListener(port);\n                    break;\n                } catch (IOException e1) {}\n            }\n            if (port == 8081)\n                hostLog.info(\"HTTP admin console unable to bind to port 8080\");\n            else if (port > 8081)\n                hostLog.info(\"HTTP admin console unable to bind to ports 8080 through \" + (port - 1));\n            hostLog.info(\"HTTP admin console listening on port \" + port);\n\n            // Initialize the catalog and some common shortcuts\n            if (m_config.m_pathToCatalog.startsWith(\"http\")) {\n                hostLog.info(\"Loading application catalog jarfile from \" + m_config.m_pathToCatalog);\n            }\n            else {\n                File f = new File(m_config.m_pathToCatalog);\n                hostLog.info(\"Loading application catalog jarfile from \" + f.getAbsolutePath());\n            }\n\n            final String serializedCatalog = CatalogUtil.loadCatalogFromJar(m_config.m_pathToCatalog, hostLog);\n            if ((serializedCatalog == null) || (serializedCatalog.length() == 0))\n                VoltDB.crashVoltDB();\n\n            // get a CRC for the jarfile to check if everyone has the same one\n            long catalogCRC = 0;\n            try {\n                catalogCRC = JarReader.crcForJar(m_config.m_pathToCatalog);\n            } catch (IOException e1) {\n                VoltDB.crashVoltDB();\n            }\n\n            Catalog catalog = new Catalog();\n            catalog.execute(serializedCatalog);\n            m_catalogContext = new CatalogContext(catalog, m_config.m_pathToCatalog);\n            final SnapshotSchedule schedule = m_catalogContext.database.getSnapshotschedule().get(\"default\");\n\n            /*\n             * The lowest non-exec siteId (ClientInterface) is tasked with\n             * running a SnapshotDaemon.\n             */\n            int lowestNonExecSiteId = -1;\n            for (Site site : m_catalogContext.siteTracker.getUpSites()) {\n                if (!site.getIsexec()) {\n                    if (lowestNonExecSiteId == -1) {\n                        lowestNonExecSiteId = Integer.parseInt(site.getTypeName());\n                    } else {\n                        lowestNonExecSiteId = Math.min(lowestNonExecSiteId, Integer.parseInt(site.getTypeName()));\n                    }\n                }\n            }\n\n            // Initialize the complex partitioning scheme\n            TheHashinator.initialize(catalog);\n\n            // Prepare the network socket manager for work\n            m_network = new VoltNetwork( new Runnable[] { new Runnable() {\n                @Override\n                public void run() {\n                    for (final ClientInterface ci : m_clientInterfaces) {\n                        ci.processPeriodicWork();\n                    }\n                }\n            }});\n\n            // Let the ELT system read its configuration from the catalog.\n            try {\n                ELTManager.initialize(catalog);\n            } catch (ELTManager.SetupException e) {\n                hostLog.l7dlog(Level.FATAL, LogKeys.host_VoltDB_ELTInitFailure.name(), e);\n                System.exit(-1);\n            }\n\n            // Create the intra-cluster mesh\n            InetAddress leader = null;\n            try {\n                leader = InetAddress.getByName(m_catalogContext.cluster.getLeaderaddress());\n            } catch (UnknownHostException ex) {\n                hostLog.l7dlog( Level.FATAL, LogKeys.host_VoltDB_CouldNotRetrieveLeaderAddress.name(), new Object[] { m_catalogContext.cluster.getLeaderaddress() }, ex);\n                throw new RuntimeException(ex);\n            }\n            // ensure at least one host (catalog compiler should check this too\n            if (m_catalogContext.numberOfNodes <= 0) {\n                hostLog.l7dlog( Level.FATAL, LogKeys.host_VoltDB_InvalidHostCount.name(), new Object[] { m_catalogContext.numberOfNodes }, null);\n                VoltDB.crashVoltDB();\n            }\n\n            hostLog.l7dlog( Level.INFO, LogKeys.host_VoltDB_CreatingVoltDB.name(), new Object[] { m_catalogContext.numberOfNodes, leader }, null);\n            m_messenger = new HostMessenger(m_network, leader, m_catalogContext.numberOfNodes, catalogCRC, hostLog);\n            m_instanceId = m_messenger.waitForGroupJoin();\n\n            // Use the host messenger's hostId.\n            int myHostId = m_messenger.getHostId();\n\n            // set up site structure\n            m_localSites = new Hashtable<Integer, ExecutionSite>();\n            m_siteThreads = new Hashtable<Integer, Thread>();\n            m_runners = new ArrayList<ExecutionSiteRunner>();\n\n            /*\n             * Create execution sites runners (and threads) for all exec sites except the first one.\n             * This allows the sites to be set up in the thread that will end up running them.\n             * Cache the first Site from the catalog and only do the setup once the other threads have been started.\n             */\n            Site siteForThisThread = null;\n            m_currentThreadSite = null;\n            for (Site site : m_catalogContext.siteTracker.getUpSites()) {\n                int sitesHostId = Integer.parseInt(site.getHost().getTypeName());\n                int siteId = Integer.parseInt(site.getTypeName());\n\n                // start a local site\n                if (sitesHostId == myHostId) {\n                    log.l7dlog( Level.TRACE, LogKeys.org_voltdb_VoltDB_CreatingLocalSite.name(), new Object[] { siteId }, null);\n                    m_messenger.createLocalSite(siteId);\n                    if (site.getIsexec()) {\n                        if (siteForThisThread == null) {\n                            siteForThisThread = site;\n                        } else {\n                            ExecutionSiteRunner runner = new ExecutionSiteRunner(siteId, m_catalogContext, serializedCatalog);\n                            m_runners.add(runner);\n                            Thread runnerThread = new Thread(runner, \"Site \" + siteId);\n                            runnerThread.start();\n                            log.l7dlog(Level.TRACE, LogKeys.org_voltdb_VoltDB_CreatingThreadForSite.name(), new Object[] { siteId }, null);\n                            m_siteThreads.put(siteId, runnerThread);\n                        }\n                    }\n                }\n            }\n\n            /*\n             * Now that the runners have been started and are doing setup of the other sites in parallel\n             * this thread can set up its own execution site.\n             */\n            int siteId = Integer.parseInt(siteForThisThread.getTypeName());\n            ExecutionSite siteObj =\n                new ExecutionSite(VoltDB.instance(),\n                                  VoltDB.instance().getMessenger().createMailbox(siteId, VoltDB.DTXN_MAILBOX_ID, null),\n                                  siteId,\n                                  serializedCatalog);\n            m_localSites.put(Integer.parseInt(siteForThisThread.getTypeName()), siteObj);\n            m_currentThreadSite = siteObj;\n\n            /*\n             * Stop and wait for the runners to finish setting up and then put\n             * the constructed ExecutionSites in the local site map.\n             */\n            for (ExecutionSiteRunner runner : m_runners) {\n                synchronized (runner) {\n                    if (!runner.m_isSiteCreated) {\n                        try {\n                            runner.wait();\n                        } catch (InterruptedException e) {\n                            throw new RuntimeException(e);\n                        }\n                    }\n                    m_localSites.put(runner.m_siteId, runner.m_siteObj);\n                }\n            }\n\n\n            // set up profiling and tracing\n            // hack to prevent profiling on multiple machines\n            if (m_localSites.size() == 1) {\n                if (m_config.m_profilingLevel != ProcedureProfiler.Level.DISABLED)\n                    hostLog.l7dlog(\n                                   Level.INFO,\n                                   LogKeys.host_VoltDB_ProfileLevelIs.name(),\n                                   new Object[] { m_config.m_profilingLevel },\n                                   null);\n                ProcedureProfiler.profilingLevel = m_config.m_profilingLevel;\n            }\n            else {\n                hostLog.l7dlog(\n                               Level.INFO,\n                               LogKeys.host_VoltDB_InternalProfilingDisabledOnMultipartitionHosts.name(),\n                               null);\n            }\n\n            // if a workload tracer is specified, start her up!\n            ProcedureProfiler.initializeWorkloadTrace(catalog);\n\n            // Create the client interfaces and associated dtxn initiators\n            int portOffset = 0;\n            for (Site site : m_catalogContext.siteTracker.getUpSites()) {\n                int sitesHostId = Integer.parseInt(site.getHost().getTypeName());\n                int currSiteId = Integer.parseInt(site.getTypeName());\n\n                // create CI for each local non-EE site\n                if ((sitesHostId == myHostId) && (site.getIsexec() == false)) {\n                    ClientInterface ci =\n                        ClientInterface.create(\n                                               m_network,\n                                               m_messenger,\n                                               m_catalogContext,\n                                               m_catalogContext.numberOfNodes,\n                                               currSiteId,\n                                               site.getInitiatorid(),\n                                               config.m_port + portOffset++,\n                                               currSiteId == lowestNonExecSiteId ? schedule : null);\n                    m_clientInterfaces.add(ci);\n                    try {\n                        ci.startAcceptingConnections();\n                    } catch (IOException e) {\n                        hostLog.l7dlog( Level.FATAL, LogKeys.host_VoltDB_ErrorStartAcceptingConnections.name(), e);\n                        VoltDB.crashVoltDB();\n                    }\n                }\n            }\n\n            // Start running the socket handlers\n            hostLog.l7dlog( Level.INFO, LogKeys.host_VoltDB_StartingNetwork.name(), null);\n            m_network.start();\n\n            m_messenger.sendReadyMessage();\n            m_messenger.waitForAllHostsToBeReady();\n\n            fivems = new FiveMSThread(m_clientInterfaces);\n            fivems.start();\n\n            hostLog.l7dlog( Level.INFO, LogKeys.host_VoltDB_ServerCompletedInitialization.name(), null);\n        }\n    }","id":16142,"modified_method":"/**\n     * Initialize all the global components, then initialize all the m_sites.\n     */\n    public void initialize(VoltDB.Configuration config) {\n        synchronized(m_startAndStopLock) {\n            hostLog.l7dlog( Level.INFO, LogKeys.host_VoltDB_StartupString.name(), null);\n\n            m_faultManager = new FaultDistributor();\n            // Install a handler for NODE_FAILURE faults to update the catalog\n            // This should be the first handler to run when a node fails\n            m_faultManager.registerFaultHandler(FaultType.NODE_FAILURE,\n                                                new VoltDBNodeFailureFaultHandler(),\n                                                NodeFailureFault.NODE_FAILURE_CATALOG);\n\n            // start the dumper thread\n            if (config.listenForDumpRequests)\n                DumpManager.init();\n\n            readBuildInfo();\n            m_config = config;\n\n            // start the admin console\n            int port;\n            for (port = 8080; true; port++) {\n                try {\n                    m_adminListener = new HTTPAdminListener(port);\n                    break;\n                } catch (IOException e1) {}\n            }\n            if (port == 8081)\n                hostLog.info(\"HTTP admin console unable to bind to port 8080\");\n            else if (port > 8081)\n                hostLog.info(\"HTTP admin console unable to bind to ports 8080 through \" + (port - 1));\n            hostLog.info(\"HTTP admin console listening on port \" + port);\n\n            // Initialize the catalog and some common shortcuts\n            if (m_config.m_pathToCatalog.startsWith(\"http\")) {\n                hostLog.info(\"Loading application catalog jarfile from \" + m_config.m_pathToCatalog);\n            }\n            else {\n                File f = new File(m_config.m_pathToCatalog);\n                hostLog.info(\"Loading application catalog jarfile from \" + f.getAbsolutePath());\n            }\n\n            final String serializedCatalog = CatalogUtil.loadCatalogFromJar(m_config.m_pathToCatalog, hostLog);\n            if ((serializedCatalog == null) || (serializedCatalog.length() == 0))\n                VoltDB.crashVoltDB();\n\n            // get a CRC for the jarfile to check if everyone has the same one\n            long catalogCRC = 0;\n            try {\n                catalogCRC = JarReader.crcForJar(m_config.m_pathToCatalog);\n            } catch (IOException e1) {\n                VoltDB.crashVoltDB();\n            }\n\n            Catalog catalog = new Catalog();\n            catalog.execute(serializedCatalog);\n            m_catalogContext = new CatalogContext(catalog, m_config.m_pathToCatalog);\n            final SnapshotSchedule schedule = m_catalogContext.database.getSnapshotschedule().get(\"default\");\n\n            /*\n             * The lowest non-exec siteId (ClientInterface) is tasked with\n             * running a SnapshotDaemon.\n             */\n            int lowestNonExecSiteId = -1;\n            for (Site site : m_catalogContext.siteTracker.getUpSites()) {\n                if (!site.getIsexec()) {\n                    if (lowestNonExecSiteId == -1) {\n                        lowestNonExecSiteId = Integer.parseInt(site.getTypeName());\n                    } else {\n                        lowestNonExecSiteId = Math.min(lowestNonExecSiteId, Integer.parseInt(site.getTypeName()));\n                    }\n                }\n            }\n\n            // Initialize the complex partitioning scheme\n            TheHashinator.initialize(catalog);\n\n            // Prepare the network socket manager for work\n            m_network = new VoltNetwork(/* new Runnable[] { new Runnable() {\n                @Override\n                public void run() {\n                    for (final ClientInterface ci : m_clientInterfaces) {\n                        ci.processPeriodicWork();\n                    }\n                }\n            }}*/);\n\n            // Let the ELT system read its configuration from the catalog.\n            try {\n                ELTManager.initialize(catalog);\n            } catch (ELTManager.SetupException e) {\n                hostLog.l7dlog(Level.FATAL, LogKeys.host_VoltDB_ELTInitFailure.name(), e);\n                System.exit(-1);\n            }\n\n            // Create the intra-cluster mesh\n            InetAddress leader = null;\n            try {\n                leader = InetAddress.getByName(m_catalogContext.cluster.getLeaderaddress());\n            } catch (UnknownHostException ex) {\n                hostLog.l7dlog( Level.FATAL, LogKeys.host_VoltDB_CouldNotRetrieveLeaderAddress.name(), new Object[] { m_catalogContext.cluster.getLeaderaddress() }, ex);\n                throw new RuntimeException(ex);\n            }\n            // ensure at least one host (catalog compiler should check this too\n            if (m_catalogContext.numberOfNodes <= 0) {\n                hostLog.l7dlog( Level.FATAL, LogKeys.host_VoltDB_InvalidHostCount.name(), new Object[] { m_catalogContext.numberOfNodes }, null);\n                VoltDB.crashVoltDB();\n            }\n\n            hostLog.l7dlog( Level.INFO, LogKeys.host_VoltDB_CreatingVoltDB.name(), new Object[] { m_catalogContext.numberOfNodes, leader }, null);\n            m_messenger = new HostMessenger(m_network, leader, m_catalogContext.numberOfNodes, catalogCRC, hostLog);\n            m_instanceId = m_messenger.waitForGroupJoin();\n\n            // Use the host messenger's hostId.\n            int myHostId = m_messenger.getHostId();\n\n            // set up site structure\n            m_localSites = new Hashtable<Integer, ExecutionSite>();\n            m_siteThreads = new Hashtable<Integer, Thread>();\n            m_runners = new ArrayList<ExecutionSiteRunner>();\n\n            /*\n             * Create execution sites runners (and threads) for all exec sites except the first one.\n             * This allows the sites to be set up in the thread that will end up running them.\n             * Cache the first Site from the catalog and only do the setup once the other threads have been started.\n             */\n            Site siteForThisThread = null;\n            m_currentThreadSite = null;\n            for (Site site : m_catalogContext.siteTracker.getUpSites()) {\n                int sitesHostId = Integer.parseInt(site.getHost().getTypeName());\n                int siteId = Integer.parseInt(site.getTypeName());\n\n                // start a local site\n                if (sitesHostId == myHostId) {\n                    log.l7dlog( Level.TRACE, LogKeys.org_voltdb_VoltDB_CreatingLocalSite.name(), new Object[] { siteId }, null);\n                    m_messenger.createLocalSite(siteId);\n                    if (site.getIsexec()) {\n                        if (siteForThisThread == null) {\n                            siteForThisThread = site;\n                        } else {\n                            ExecutionSiteRunner runner = new ExecutionSiteRunner(siteId, m_catalogContext, serializedCatalog);\n                            m_runners.add(runner);\n                            Thread runnerThread = new Thread(runner, \"Site \" + siteId);\n                            runnerThread.start();\n                            log.l7dlog(Level.TRACE, LogKeys.org_voltdb_VoltDB_CreatingThreadForSite.name(), new Object[] { siteId }, null);\n                            m_siteThreads.put(siteId, runnerThread);\n                        }\n                    }\n                }\n            }\n\n            /*\n             * Now that the runners have been started and are doing setup of the other sites in parallel\n             * this thread can set up its own execution site.\n             */\n            int siteId = Integer.parseInt(siteForThisThread.getTypeName());\n            ExecutionSite siteObj =\n                new ExecutionSite(VoltDB.instance(),\n                                  VoltDB.instance().getMessenger().createMailbox(siteId, VoltDB.DTXN_MAILBOX_ID, null),\n                                  siteId,\n                                  serializedCatalog);\n            m_localSites.put(Integer.parseInt(siteForThisThread.getTypeName()), siteObj);\n            m_currentThreadSite = siteObj;\n\n            /*\n             * Stop and wait for the runners to finish setting up and then put\n             * the constructed ExecutionSites in the local site map.\n             */\n            for (ExecutionSiteRunner runner : m_runners) {\n                synchronized (runner) {\n                    if (!runner.m_isSiteCreated) {\n                        try {\n                            runner.wait();\n                        } catch (InterruptedException e) {\n                            throw new RuntimeException(e);\n                        }\n                    }\n                    m_localSites.put(runner.m_siteId, runner.m_siteObj);\n                }\n            }\n\n\n            // set up profiling and tracing\n            // hack to prevent profiling on multiple machines\n            if (m_localSites.size() == 1) {\n                if (m_config.m_profilingLevel != ProcedureProfiler.Level.DISABLED)\n                    hostLog.l7dlog(\n                                   Level.INFO,\n                                   LogKeys.host_VoltDB_ProfileLevelIs.name(),\n                                   new Object[] { m_config.m_profilingLevel },\n                                   null);\n                ProcedureProfiler.profilingLevel = m_config.m_profilingLevel;\n            }\n            else {\n                hostLog.l7dlog(\n                               Level.INFO,\n                               LogKeys.host_VoltDB_InternalProfilingDisabledOnMultipartitionHosts.name(),\n                               null);\n            }\n\n            // if a workload tracer is specified, start her up!\n            ProcedureProfiler.initializeWorkloadTrace(catalog);\n\n            // Create the client interfaces and associated dtxn initiators\n            int portOffset = 0;\n            for (Site site : m_catalogContext.siteTracker.getUpSites()) {\n                int sitesHostId = Integer.parseInt(site.getHost().getTypeName());\n                int currSiteId = Integer.parseInt(site.getTypeName());\n\n                // create CI for each local non-EE site\n                if ((sitesHostId == myHostId) && (site.getIsexec() == false)) {\n                    ClientInterface ci =\n                        ClientInterface.create(\n                                               m_network,\n                                               m_messenger,\n                                               m_catalogContext,\n                                               m_catalogContext.numberOfNodes,\n                                               currSiteId,\n                                               site.getInitiatorid(),\n                                               config.m_port + portOffset++,\n                                               currSiteId == lowestNonExecSiteId ? schedule : null);\n                    m_clientInterfaces.add(ci);\n                    try {\n                        ci.startAcceptingConnections();\n                    } catch (IOException e) {\n                        hostLog.l7dlog( Level.FATAL, LogKeys.host_VoltDB_ErrorStartAcceptingConnections.name(), e);\n                        VoltDB.crashVoltDB();\n                    }\n                }\n            }\n\n            // Start running the socket handlers\n            hostLog.l7dlog( Level.INFO, LogKeys.host_VoltDB_StartingNetwork.name(), null);\n            m_network.start();\n\n            m_messenger.sendReadyMessage();\n            m_messenger.waitForAllHostsToBeReady();\n\n            fivems = new PeriodicWorkTimerThread(m_clientInterfaces);\n            fivems.start();\n\n            hostLog.l7dlog( Level.INFO, LogKeys.host_VoltDB_ServerCompletedInitialization.name(), null);\n        }\n    }","commit_id":"9ae7a99c6bc51a78c2aff4ea099b70f563941197","url":"https://github.com/VoltDB/voltdb"},{"original_method":"QueueState checkQueueState() {\n        QueueState newState = QueueState.UNBLOCKED;\n        TransactionState ts = super.peek();\n        LastInitiatorData lid = null;\n        if (ts == null) {\n            newState = QueueState.BLOCKED_EMPTY;\n        }\n        else {\n            if (ts.txnId > m_newestCandidateTransaction) {\n                newState = QueueState.BLOCKED_ORDERING;\n            }\n            else {\n                lid = m_initiatorData.get(ts.initiatorSiteId);\n                if (ts.txnId > lid.m_lastSafeTxnId) {\n                    newState = QueueState.BLOCKED_SAFETY;\n                }\n            }\n        }\n        if (newState != m_state) {\n            // note if we get non-empty but blocked\n            if ((newState == QueueState.BLOCKED_ORDERING) || (newState == QueueState.BLOCKED_SAFETY)) {\n                m_blockTime = System.currentTimeMillis();\n            }\n            if (newState == QueueState.UNBLOCKED) {\n                if ((m_state == QueueState.BLOCKED_ORDERING) || (m_state == QueueState.BLOCKED_SAFETY)) {\n                    long blockedFor = System.currentTimeMillis() - m_blockTime;\n                    //System.out.printf(\"Queue unblocked. Was blocked for %d ms\\n\", blockedFor);\n                    //System.out.flush();\n                }\n            }\n            if ((m_state == QueueState.BLOCKED_ORDERING) || (m_state == QueueState.BLOCKED_SAFETY)) {\n                assert(m_state != QueueState.BLOCKED_EMPTY);\n            }\n\n            // if now blocked, send a heartbeat response\n            if (newState == QueueState.BLOCKED_SAFETY) {\n                assert(ts != null);\n                assert(lid != null);\n                sendHearbeatResponse(ts, lid);\n            }\n\n            m_state = newState;\n        }\n        return m_state;\n    }","id":16143,"modified_method":"QueueState checkQueueState() {\n        QueueState newState = QueueState.UNBLOCKED;\n        TransactionState ts = super.peek();\n        LastInitiatorData lid = null;\n        if (ts == null) {\n            newState = QueueState.BLOCKED_EMPTY;\n        }\n        else {\n            if (ts.txnId > m_newestCandidateTransaction) {\n                newState = QueueState.BLOCKED_ORDERING;\n            }\n            else {\n                lid = m_initiatorData.get(ts.initiatorSiteId);\n                if ((lid != null) && (ts.txnId > lid.m_lastSafeTxnId)) {\n                    newState = QueueState.BLOCKED_SAFETY;\n                }\n            }\n        }\n        if (newState != m_state) {\n            // THIS CODE IS HERE TO HANDLE A STATE CHANGE\n\n            // note if we get non-empty but blocked\n            if ((newState == QueueState.BLOCKED_ORDERING) || (newState == QueueState.BLOCKED_SAFETY)) {\n                m_blockTime = System.currentTimeMillis();\n            }\n            /*if (newState == QueueState.UNBLOCKED) {\n                if ((m_state == QueueState.BLOCKED_ORDERING) || (m_state == QueueState.BLOCKED_SAFETY)) {\n                    long blockedFor = System.currentTimeMillis() - m_blockTime;\n                    System.out.printf(\"Queue unblocked. Was blocked for %d ms\\n\", blockedFor);\n                    System.out.flush();\n                }\n            }*/\n            if ((m_state == QueueState.BLOCKED_ORDERING) || (m_state == QueueState.BLOCKED_SAFETY)) {\n                assert(m_state != QueueState.BLOCKED_EMPTY);\n            }\n\n            // if now blocked, send a heartbeat response\n            if (newState == QueueState.BLOCKED_SAFETY) {\n                assert(ts != null);\n                assert(lid != null);\n                sendHearbeatResponse(ts, lid);\n            }\n\n            m_state = newState;\n        }\n        return m_state;\n    }","commit_id":"9ae7a99c6bc51a78c2aff4ea099b70f563941197","url":"https://github.com/VoltDB/voltdb"},{"original_method":"@Override\n    public synchronized void tick(long time, long interval) {\n        long txnId = m_idManager.getNextUniqueTransactionId();\n\n        int[] outOfDateSites =\n            VoltDB.instance().getCatalogContext().\n            //siteTracker.getSitesWhichNeedAHeartbeat(time, interval);\n            siteTracker.getUpExecutionSites();\n\n        long now = System.currentTimeMillis();\n        long duration = now - m_lastTickTime;\n        //System.out.printf(\"Sending tick after %d ms pause.\\n\", duration);\n        //System.out.flush();\n\n        try {\n            // loop over all the sites that need a heartbeat and send one\n            for (int siteId : outOfDateSites) {\n                // tack on the last confirmed seen txn id for all sites with a particular partition\n                long newestSafeTxnId = m_safetyState.getNewestSafeTxnIdForExecutorBySiteId(siteId);\n                HeartbeatMessage tickNotice = new HeartbeatMessage(m_siteId, txnId, newestSafeTxnId);\n                m_mailbox.send(siteId, VoltDB.DTXN_MAILBOX_ID, tickNotice);\n            }\n        } catch (MessagingException e) {\n            throw new RuntimeException(e);\n        }\n\n        m_lastTickTime = now;\n    }","id":16144,"modified_method":"@Override\n    public synchronized void tick(long time, long interval) {\n        long txnId = m_idManager.getNextUniqueTransactionId();\n\n        int[] outOfDateSites =\n            VoltDB.instance().getCatalogContext().\n            //siteTracker.getSitesWhichNeedAHeartbeat(time, interval);\n            siteTracker.getUpExecutionSites();\n\n        long now = System.currentTimeMillis();\n        //long duration = now - m_lastTickTime;\n        //System.out.printf(\"Sending tick after %d ms pause.\\n\", duration);\n        //System.out.flush();\n\n        try {\n            // loop over all the sites that need a heartbeat and send one\n            for (int siteId : outOfDateSites) {\n                // tack on the last confirmed seen txn id for all sites with a particular partition\n                long newestSafeTxnId = m_safetyState.getNewestSafeTxnIdForExecutorBySiteId(siteId);\n                HeartbeatMessage tickNotice = new HeartbeatMessage(m_siteId, txnId, newestSafeTxnId);\n                m_mailbox.send(siteId, VoltDB.DTXN_MAILBOX_ID, tickNotice);\n            }\n        } catch (MessagingException e) {\n            throw new RuntimeException(e);\n        }\n\n        m_lastTickTime = now;\n    }","commit_id":"9ae7a99c6bc51a78c2aff4ea099b70f563941197","url":"https://github.com/VoltDB/voltdb"},{"original_method":"/** add 20 shuffled rows */\n    private void load(Client client) throws NoConnectionsException, ProcCallException, IOException {\n        int pkey = 0;\n        a_int.clear();\n        a_inline_str.clear();\n        a_pool_str.clear();\n\n        for (int i=0; i < 20; i++) {\n            a_int.add(i);\n            a_inline_str.add(\"a_\" + i);\n            a_pool_str.add(bigString + i);\n        }\n\n        Collections.shuffle(a_int);\n        Collections.shuffle(a_inline_str);\n        Collections.shuffle(a_pool_str);\n\n        for (int i=0; i < 20; i++) {\n            final VoltTable vt = client.callProcedure(\"InsertO1\",\n                    pkey++,\n                    a_int.get(i),\n                    a_inline_str.get(i),\n                    a_pool_str.get(i))[0];\n            assertTrue(vt.getRowCount() == 1);\n        }\n    }","id":16145,"modified_method":"/** add 20 shuffled rows\n     * @throws InterruptedException */\n    private void load(Client client) throws NoConnectionsException, ProcCallException, IOException, InterruptedException {\n        int pkey = 0;\n        a_int.clear();\n        a_inline_str.clear();\n        a_pool_str.clear();\n\n        // if you want to test synchronous latency, this\n        //  is a good variable to change\n        boolean async = true;\n\n        for (int i=0; i < 20; i++) {\n            a_int.add(i);\n            a_inline_str.add(\"a_\" + i);\n            a_pool_str.add(bigString + i);\n        }\n\n        Collections.shuffle(a_int);\n        Collections.shuffle(a_inline_str);\n        Collections.shuffle(a_pool_str);\n\n        for (int i=0; i < 20; i++) {\n            SyncCallback cb = new SyncCallback();\n            client.callProcedure(cb,\n                    \"InsertO1\",\n                    pkey++,\n                    a_int.get(i),\n                    a_inline_str.get(i),\n                    a_pool_str.get(i));\n\n            if (!async) {\n                cb.waitForResponse();\n                VoltTable vt = cb.getResponse().getResults()[0];\n                assertTrue(vt.getRowCount() == 1);\n            }\n        }\n\n        client.drain();\n    }","commit_id":"9ae7a99c6bc51a78c2aff4ea099b70f563941197","url":"https://github.com/VoltDB/voltdb"},{"original_method":"private void loadWithDupes(Client client) throws NoConnectionsException, ProcCallException, IOException {\n        VoltTable vt;\n        vt = client.callProcedure(\"InsertO1\", new Long(1), new Long(1), \"Alice\", \"AlphaBitters\")[0];\n        assertTrue(vt.getRowCount() == 1);\n        vt = client.callProcedure(\"InsertO1\", new Long(2), new Long(2), \"Alice\", \"CrunchTubers\")[0];\n        assertTrue(vt.getRowCount() == 1);\n        vt = client.callProcedure(\"InsertO1\", new Long(3), new Long(3), \"Alice\", \"BetaBuildingBlocks\")[0];\n        assertTrue(vt.getRowCount() == 1);\n\n        vt = client.callProcedure(\"InsertO1\", new Long(4), new Long(1), \"Betty\", \"CrunchTubers\")[0];\n        assertTrue(vt.getRowCount() == 1);\n        vt = client.callProcedure(\"InsertO1\", new Long(5), new Long(2), \"Betty\", \"AlphaBitters\")[0];\n        assertTrue(vt.getRowCount() == 1);\n        vt = client.callProcedure(\"InsertO1\", new Long(6), new Long(3), \"Betty\", \"BetaBuildingBlocks\")[0];\n        assertTrue(vt.getRowCount() == 1);\n\n        vt = client.callProcedure(\"InsertO1\", new Long(7), new Long(1), \"Chris\", \"BetaBuildingBlocks\")[0];\n        assertTrue(vt.getRowCount() == 1);\n        vt = client.callProcedure(\"InsertO1\", new Long(8), new Long(2), \"Chris\", \"CrunchTubers\")[0];\n        assertTrue(vt.getRowCount() == 1);\n        vt = client.callProcedure(\"InsertO1\", new Long(9), new Long(3), \"Chris\", \"AlphaBitters\")[0];\n        assertTrue(vt.getRowCount() == 1);\n    }","id":16146,"modified_method":"private void loadWithDupes(Client client) throws NoConnectionsException, ProcCallException, IOException {\n        client.callProcedure(new SyncCallback(), \"InsertO1\", new Long(1), new Long(1), \"Alice\", \"AlphaBitters\");\n        client.callProcedure(new SyncCallback(), \"InsertO1\", new Long(2), new Long(2), \"Alice\", \"CrunchTubers\");\n        client.callProcedure(new SyncCallback(), \"InsertO1\", new Long(3), new Long(3), \"Alice\", \"BetaBuildingBlocks\");\n\n        client.callProcedure(new SyncCallback(), \"InsertO1\", new Long(4), new Long(1), \"Betty\", \"CrunchTubers\");\n        client.callProcedure(new SyncCallback(), \"InsertO1\", new Long(5), new Long(2), \"Betty\", \"AlphaBitters\");\n        client.callProcedure(new SyncCallback(), \"InsertO1\", new Long(6), new Long(3), \"Betty\", \"BetaBuildingBlocks\");\n\n        client.callProcedure(new SyncCallback(), \"InsertO1\", new Long(7), new Long(1), \"Chris\", \"BetaBuildingBlocks\");\n        client.callProcedure(new SyncCallback(), \"InsertO1\", new Long(8), new Long(2), \"Chris\", \"CrunchTubers\");\n        client.callProcedure(new SyncCallback(), \"InsertO1\", new Long(9), new Long(3), \"Chris\", \"AlphaBitters\");\n\n        client.drain();\n    }","commit_id":"9ae7a99c6bc51a78c2aff4ea099b70f563941197","url":"https://github.com/VoltDB/voltdb"},{"original_method":"/** select * from T order by A ASC\n     * @throws IOException\n     * @throws ProcCallException\n     * @throws NoConnectionsException */\n    public void testOrderBySingleColumnAscending() throws NoConnectionsException, ProcCallException, IOException {\n        VoltTable vt;\n        Client client = this.getClient();\n        load(client);\n\n        // sort column of ints ascending\n        vt = client.callProcedure(\"@AdHoc\", \"select * from O1 order by A_INT ASC\")[0];\n        assertTrue(vt.getRowCount() == 20);\n        int it = 0;\n        while (vt.advanceRow()) {\n            Integer key = (Integer) vt.get(0, VoltType.INTEGER);\n            Integer a = (Integer) vt.get(1, VoltType.INTEGER);\n            String b = (String) vt.get(2, VoltType.STRING);\n            String c = (String) vt.get(3, VoltType.STRING);\n\n            int pos = a_int.indexOf(a);   // offset of this value in unsorted data\n\n            assertEquals(it, a.intValue());     // a should be order 1, 2, 3..\n            assertEquals(pos, key.intValue());  // side-effect of insertion method\n            assertEquals(b, a_inline_str.get(pos));\n            assertEquals(c, a_pool_str.get(pos));\n\n            it++;\n        }\n\n        // sort column of inlined strings ascending\n        vt = client.callProcedure(\"@AdHoc\", \"select * from O1 order by A_INLINE_STR ASC\")[0];\n        assertTrue(vt.getRowCount() == 20);\n        String lastString = \"a\";\n        while (vt.advanceRow()) {\n            Integer key = (Integer) vt.get(0, VoltType.INTEGER);\n            Integer a = (Integer) vt.get(1, VoltType.INTEGER);\n            String b = (String) vt.get(2, VoltType.STRING);\n            String c = (String) vt.get(3, VoltType.STRING);\n\n            assertTrue(lastString.compareTo(b) < 0);  // always ascending\n            lastString = b;\n\n            int pos = a_inline_str.indexOf(b);   // offset of this value in unsorted data\n            assertEquals(pos, key.intValue());   // side-effect of insertion method\n            assertEquals(a, a_int.get(pos));     // retrieved value matches at index in unsorted data\n            assertEquals(c, a_pool_str.get(pos));\n        }\n\n\n        // sort column of non-inlined strings ascending\n        vt = client.callProcedure(\"@AdHoc\", \"select * from O1 order by A_POOL_STR ASC\")[0];\n        assertTrue(vt.getRowCount() == 20);\n        lastString = \"A\";\n        while (vt.advanceRow()) {\n            Integer key = (Integer) vt.get(0, VoltType.INTEGER);\n            Integer a = (Integer) vt.get(1, VoltType.INTEGER);\n            String b = (String) vt.get(2, VoltType.STRING);\n            String c = (String) vt.get(3, VoltType.STRING);\n\n            assertTrue(lastString.compareTo(c) < 0);  // always ascending\n            lastString = c;\n\n            int pos = a_pool_str.indexOf(c);   // offset of this value in unsorted data\n            assertEquals(pos, key.intValue());   // side-effect of insertion method\n            assertEquals(a, a_int.get(pos));     // retrieved value matches at index in unsorted data\n            assertEquals(b, a_inline_str.get(pos));\n        }\n    }","id":16147,"modified_method":"/** select * from T order by A ASC\n     * @throws IOException\n     * @throws ProcCallException\n     * @throws NoConnectionsException\n     * @throws InterruptedException */\n    public void testOrderBySingleColumnAscending() throws NoConnectionsException, ProcCallException, IOException, InterruptedException {\n        VoltTable vt;\n        Client client = this.getClient();\n        load(client);\n\n        // sort column of ints ascending\n        vt = client.callProcedure(\"@AdHoc\", \"select * from O1 order by A_INT ASC\")[0];\n        assertTrue(vt.getRowCount() == 20);\n        int it = 0;\n        while (vt.advanceRow()) {\n            Integer key = (Integer) vt.get(0, VoltType.INTEGER);\n            Integer a = (Integer) vt.get(1, VoltType.INTEGER);\n            String b = (String) vt.get(2, VoltType.STRING);\n            String c = (String) vt.get(3, VoltType.STRING);\n\n            int pos = a_int.indexOf(a);   // offset of this value in unsorted data\n\n            assertEquals(it, a.intValue());     // a should be order 1, 2, 3..\n            assertEquals(pos, key.intValue());  // side-effect of insertion method\n            assertEquals(b, a_inline_str.get(pos));\n            assertEquals(c, a_pool_str.get(pos));\n\n            it++;\n        }\n\n        // sort column of inlined strings ascending\n        vt = client.callProcedure(\"@AdHoc\", \"select * from O1 order by A_INLINE_STR ASC\")[0];\n        assertTrue(vt.getRowCount() == 20);\n        String lastString = \"a\";\n        while (vt.advanceRow()) {\n            Integer key = (Integer) vt.get(0, VoltType.INTEGER);\n            Integer a = (Integer) vt.get(1, VoltType.INTEGER);\n            String b = (String) vt.get(2, VoltType.STRING);\n            String c = (String) vt.get(3, VoltType.STRING);\n\n            assertTrue(lastString.compareTo(b) < 0);  // always ascending\n            lastString = b;\n\n            int pos = a_inline_str.indexOf(b);   // offset of this value in unsorted data\n            assertEquals(pos, key.intValue());   // side-effect of insertion method\n            assertEquals(a, a_int.get(pos));     // retrieved value matches at index in unsorted data\n            assertEquals(c, a_pool_str.get(pos));\n        }\n\n\n        // sort column of non-inlined strings ascending\n        vt = client.callProcedure(\"@AdHoc\", \"select * from O1 order by A_POOL_STR ASC\")[0];\n        assertTrue(vt.getRowCount() == 20);\n        lastString = \"A\";\n        while (vt.advanceRow()) {\n            Integer key = (Integer) vt.get(0, VoltType.INTEGER);\n            Integer a = (Integer) vt.get(1, VoltType.INTEGER);\n            String b = (String) vt.get(2, VoltType.STRING);\n            String c = (String) vt.get(3, VoltType.STRING);\n\n            assertTrue(lastString.compareTo(c) < 0);  // always ascending\n            lastString = c;\n\n            int pos = a_pool_str.indexOf(c);   // offset of this value in unsorted data\n            assertEquals(pos, key.intValue());   // side-effect of insertion method\n            assertEquals(a, a_int.get(pos));     // retrieved value matches at index in unsorted data\n            assertEquals(b, a_inline_str.get(pos));\n        }\n    }","commit_id":"9ae7a99c6bc51a78c2aff4ea099b70f563941197","url":"https://github.com/VoltDB/voltdb"},{"original_method":"private void loadInOrder(Client client) throws NoConnectionsException,\n                                           ProcCallException,\n                                           IOException {\n        for (int i = 0; i < 100; i++) {\n            final VoltTable vt = client.callProcedure(\"InsertO3\", 3, i, i, i)[0];\n            assertTrue(vt.getRowCount() == 1);\n        }\n    }","id":16148,"modified_method":"private void loadInOrder(Client client) throws NoConnectionsException,\n                                           ProcCallException,\n                                           IOException, InterruptedException {\n        // if you want to test synchronous latency, this\n        //  is a good variable to change\n        boolean async = true;\n\n        for (int i = 0; i < 100; i++) {\n            SyncCallback cb = new SyncCallback();\n            client.callProcedure(cb, \"InsertO3\", 3, i, i, i);\n\n            if (!async) {\n                cb.waitForResponse();\n                VoltTable vt = cb.getResponse().getResults()[0];\n                assertTrue(vt.getRowCount() == 1);\n            }\n        }\n    }","commit_id":"9ae7a99c6bc51a78c2aff4ea099b70f563941197","url":"https://github.com/VoltDB/voltdb"},{"original_method":"/**\n     * distributed sum of a view with a join on a replicated table for one dim value\n     * (REDUNDANT GROUP BY)\n     * select D1.D1_NAME, sum(V.SUM_V1), sum(V.SUM_V2), sum(V.SUM_V3)\n     * from D1, V where D1.D1_PKEY = V.V_D1_PKEY and D1.D1_PKEY = ?\n     * group by D1_NAME\n     */\n    public void testDistributedSumGroupSingleJoinOneDim() throws IOException,\n    ProcCallException {\n        VoltTable vt;\n        Client client = getClient();\n        loadF(client, 0);\n        loadDims(client);\n\n        String qs = \"select D1.D1_NAME, sum(V.SUM_V1), sum(V.SUM_V2), sum(V.SUM_V3) \"\n            + \" from D1, V where D1.D1_PKEY = V.V_D1_PKEY and D1.D1_PKEY = 5\"\n            + \" group by D1.D1_NAME\";\n\n        vt = client.callProcedure(\"@AdHoc\", qs)[0];\n        assertTrue(vt.getRowCount() == 1);\n        System.out.println(\"testDistributedSumGroupSingleJoinOneDim: \" + vt);\n        while (vt.advanceRow()) {\n            String d1 = (String) vt.get(0, VoltType.STRING);\n            Integer s1 = (Integer) vt.get(1, VoltType.INTEGER);\n            Integer s2 = (Integer) vt.get(2, VoltType.INTEGER);\n            Integer s3 = (Integer) vt.get(3, VoltType.INTEGER);\n\n            assertEquals(d1, \"D1_5\");             // name is D1_%d where %d is pkey\n            assertEquals(200, s1.intValue());     // dim1 present 100 times. s1 == 2.\n            assertEquals(500000, s2.intValue());  // verified in hsql.\n            assertEquals(100, s3.intValue());     // odd dim1 == 1 in s3 ( x100 )\n        }\n    }","id":16149,"modified_method":"/**\n     * distributed sum of a view with a join on a replicated table for one dim value\n     * (REDUNDANT GROUP BY)\n     * select D1.D1_NAME, sum(V.SUM_V1), sum(V.SUM_V2), sum(V.SUM_V3)\n     * from D1, V where D1.D1_PKEY = V.V_D1_PKEY and D1.D1_PKEY = ?\n     * group by D1_NAME\n     * @throws InterruptedException\n     */\n    public void testDistributedSumGroupSingleJoinOneDim() throws IOException,\n    ProcCallException, InterruptedException {\n        VoltTable vt;\n        Client client = getClient();\n        loadF(client, 0);\n        loadDims(client);\n\n        String qs = \"select D1.D1_NAME, sum(V.SUM_V1), sum(V.SUM_V2), sum(V.SUM_V3) \"\n            + \" from D1, V where D1.D1_PKEY = V.V_D1_PKEY and D1.D1_PKEY = 5\"\n            + \" group by D1.D1_NAME\";\n\n        vt = client.callProcedure(\"@AdHoc\", qs)[0];\n        assertTrue(vt.getRowCount() == 1);\n        System.out.println(\"testDistributedSumGroupSingleJoinOneDim: \" + vt);\n        while (vt.advanceRow()) {\n            String d1 = (String) vt.get(0, VoltType.STRING);\n            Integer s1 = (Integer) vt.get(1, VoltType.INTEGER);\n            Integer s2 = (Integer) vt.get(2, VoltType.INTEGER);\n            Integer s3 = (Integer) vt.get(3, VoltType.INTEGER);\n\n            assertEquals(d1, \"D1_5\");             // name is D1_%d where %d is pkey\n            assertEquals(200, s1.intValue());     // dim1 present 100 times. s1 == 2.\n            assertEquals(500000, s2.intValue());  // verified in hsql.\n            assertEquals(100, s3.intValue());     // odd dim1 == 1 in s3 ( x100 )\n        }\n    }","commit_id":"9ae7a99c6bc51a78c2aff4ea099b70f563941197","url":"https://github.com/VoltDB/voltdb"},{"original_method":"/**\n     * distributed sum of a view with a group by and join on a replicated table.\n     * (REDUNDANT GROUP BY)\n     * select D1.D1_NAME, sum(V.SUM_V1), sum(V.SUM_V2), sum(V.SUM_V3)\n     * from D1, V where D1.D1_PKEY = V.V_D1_PKEY group by D1.D1_NAME\n     */\n    public void testDistributedSumGroupSingleJoin()\n    throws NoConnectionsException, ProcCallException, IOException {\n        VoltTable vt;\n        Client client = getClient();\n\n        loadF(client, 0);\n        loadDims(client);\n\n        vt = client.callProcedure(\"SumGroupSingleJoin\")[0];\n        assertTrue(vt.getRowCount() == 10);\n\n        int found[] = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };\n        while (vt.advanceRow()) {\n            String d1 = (String) vt.get(0, VoltType.STRING);\n            Integer s1 = (Integer) vt.get(1, VoltType.INTEGER);\n            Integer s2 = (Integer) vt.get(2, VoltType.INTEGER);\n            Integer s3 = (Integer) vt.get(3, VoltType.INTEGER);\n            // sum1 is const 2; 100 dim1 instances per group.\n            assertEquals(200, s1.intValue());\n            assertTrue(495000 <= s2.intValue() && 504000 >= s2.intValue());\n            assertTrue(s3.intValue() == 0 || s3.intValue() == 100);\n\n            Integer di = Integer.valueOf(d1.substring(3));\n            found[di.intValue()] += 1;\n        }\n        for (int i = 0; i < 10; i++)\n            assertEquals(1, found[i]);\n    }","id":16150,"modified_method":"/**\n     * distributed sum of a view with a group by and join on a replicated table.\n     * (REDUNDANT GROUP BY)\n     * select D1.D1_NAME, sum(V.SUM_V1), sum(V.SUM_V2), sum(V.SUM_V3)\n     * from D1, V where D1.D1_PKEY = V.V_D1_PKEY group by D1.D1_NAME\n     * @throws InterruptedException\n     */\n    public void testDistributedSumGroupSingleJoin()\n    throws NoConnectionsException, ProcCallException, IOException, InterruptedException {\n        VoltTable vt;\n        Client client = getClient();\n\n        loadF(client, 0);\n        loadDims(client);\n\n        vt = client.callProcedure(\"SumGroupSingleJoin\")[0];\n        assertTrue(vt.getRowCount() == 10);\n\n        int found[] = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };\n        while (vt.advanceRow()) {\n            String d1 = (String) vt.get(0, VoltType.STRING);\n            Integer s1 = (Integer) vt.get(1, VoltType.INTEGER);\n            Integer s2 = (Integer) vt.get(2, VoltType.INTEGER);\n            Integer s3 = (Integer) vt.get(3, VoltType.INTEGER);\n            // sum1 is const 2; 100 dim1 instances per group.\n            assertEquals(200, s1.intValue());\n            assertTrue(495000 <= s2.intValue() && 504000 >= s2.intValue());\n            assertTrue(s3.intValue() == 0 || s3.intValue() == 100);\n\n            Integer di = Integer.valueOf(d1.substring(3));\n            found[di.intValue()] += 1;\n        }\n        for (int i = 0; i < 10; i++)\n            assertEquals(1, found[i]);\n    }","commit_id":"9ae7a99c6bc51a78c2aff4ea099b70f563941197","url":"https://github.com/VoltDB/voltdb"},{"original_method":"/**\n     * distributed sums of a view (REDUNDANT GROUP BY)\n     * select V.D1_PKEY, sum(V.SUM_V1), sum(V.SUM_V2), sum(V.SUM_V3)\n     * from V group by V.V_D1_PKEY\n     */\n    public void testDistributedSumAndGroup() throws NoConnectionsException,\n    ProcCallException, IOException {\n        VoltTable vt;\n        Client client = getClient();\n        loadF(client, 0);\n\n        String qs = \"select V.V_D1_PKEY, sum(V.SUM_V1), sum(V.SUM_V2), sum(V.SUM_V3) \"\n            + \"from V group by V.V_D1_PKEY\";\n\n        vt = client.callProcedure(\"@AdHoc\", qs)[0];\n        System.out.println(\"testDistributedSumAndJoin result: \" + vt);\n        assert (vt.getRowCount() == 10); // 10 unique values for dim1 which is\n        // the grouping col\n\n        int found[] = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };\n        while (vt.advanceRow()) {\n            Integer d1 = (Integer) vt.get(0, VoltType.INTEGER);\n            Integer s1 = (Integer) vt.get(1, VoltType.INTEGER);\n            Integer s2 = (Integer) vt.get(2, VoltType.INTEGER);\n            Integer s3 = (Integer) vt.get(3, VoltType.INTEGER);\n\n            // track that 10 dim1s are in the final group\n            found[d1.intValue()] += 1;\n            // sum1 is const 2. 100 dim1 instances / group\n            assertEquals(200, s1.intValue());\n            // sum of every 10th i * 10 in this range\n            assertTrue(495000 <= s2.intValue() && 504000 >= s2.intValue());\n            // sum3 alternates 0|1. There are 100 dim1 instances / group\n            if ((d1.intValue() % 2) == 0)\n                assertEquals(s3.intValue(), 0);\n            else\n                assertEquals(s3.intValue(), 100);\n\n        }\n        for (int i = 0; i < 10; i++)\n            assertEquals(1, found[i]);\n\n    }","id":16151,"modified_method":"/**\n     * distributed sums of a view (REDUNDANT GROUP BY)\n     * select V.D1_PKEY, sum(V.SUM_V1), sum(V.SUM_V2), sum(V.SUM_V3)\n     * from V group by V.V_D1_PKEY\n     * @throws InterruptedException\n     */\n    public void testDistributedSumAndGroup() throws NoConnectionsException,\n    ProcCallException, IOException, InterruptedException {\n        VoltTable vt;\n        Client client = getClient();\n        loadF(client, 0);\n\n        String qs = \"select V.V_D1_PKEY, sum(V.SUM_V1), sum(V.SUM_V2), sum(V.SUM_V3) \"\n            + \"from V group by V.V_D1_PKEY\";\n\n        vt = client.callProcedure(\"@AdHoc\", qs)[0];\n        System.out.println(\"testDistributedSumAndJoin result: \" + vt);\n        assert (vt.getRowCount() == 10); // 10 unique values for dim1 which is\n        // the grouping col\n\n        int found[] = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };\n        while (vt.advanceRow()) {\n            Integer d1 = (Integer) vt.get(0, VoltType.INTEGER);\n            Integer s1 = (Integer) vt.get(1, VoltType.INTEGER);\n            Integer s2 = (Integer) vt.get(2, VoltType.INTEGER);\n            Integer s3 = (Integer) vt.get(3, VoltType.INTEGER);\n\n            // track that 10 dim1s are in the final group\n            found[d1.intValue()] += 1;\n            // sum1 is const 2. 100 dim1 instances / group\n            assertEquals(200, s1.intValue());\n            // sum of every 10th i * 10 in this range\n            assertTrue(495000 <= s2.intValue() && 504000 >= s2.intValue());\n            // sum3 alternates 0|1. There are 100 dim1 instances / group\n            if ((d1.intValue() % 2) == 0)\n                assertEquals(s3.intValue(), 0);\n            else\n                assertEquals(s3.intValue(), 100);\n\n        }\n        for (int i = 0; i < 10; i++)\n            assertEquals(1, found[i]);\n\n    }","commit_id":"9ae7a99c6bc51a78c2aff4ea099b70f563941197","url":"https://github.com/VoltDB/voltdb"},{"original_method":"/**\n     * distributed sum of a view with 3-way join on replicated tables\n     * (REDUNDANT GROUP BY)\n     * select D1.D1_NAME, D2.D2_NAME, sum(V.SUM_V1), sum(V.SUM_V2), sum(V.SUM_V3)\n     * from D1, D2, V where V.V_D1_PKEY = D1.D1_PKEY and V.V_D2_PKEY = D2.D2_PKEY\n     * group by D1_NAME, D2_NAME\n     */\n    @SuppressWarnings(\"unchecked\")\n    public void testDistributedSumGroupMultiJoin() throws IOException,\n    ProcCallException {\n        VoltTable vt;\n        Client client = getClient();\n        loadF(client, 0);\n        loadDims(client);\n\n        String qs = \"select D1.D1_NAME, D2.D2_NAME, sum(V.SUM_V1), sum(V.SUM_V2), sum(V.SUM_V3) \"\n            + \"from V, D1, D2 \"\n            + \"where V.V_D1_PKEY = D1.D1_PKEY and V.V_D2_PKEY = D2.D2_PKEY \"\n            + \"group by D1.D1_NAME, D2.D2_NAME\";\n\n        vt = client.callProcedure(\"@AdHoc\", qs)[0];\n        System.out.println(\"DistributedSumGroupMultiJoin: \" + vt);\n\n        // sort the output by d2's value\n        ArrayList<VoltTableRow> sorted = new ArrayList<VoltTableRow>();\n        while (vt.advanceRow()) {\n            String d1 = (String) vt.get(0, VoltType.STRING);\n            String d2 = (String) vt.get(1, VoltType.STRING);\n            System.out.println(\"Adding Row: \" + d1 + \", \" + d2);\n            // this will add the active row of vt\n            sorted.add(vt.cloneRow());\n        }\n        System.out.println(\"DSGMJonedim\"); debug(sorted);\n        Collections.sort(sorted, new VRowComparator<VoltTableRow>());\n        System.out.println(\"DSGMJonedim: \"); debug(sorted);\n\n        // 5 unique d2's for each of 10 d1's (so 10 * 5 rows)\n        assertEquals(50, vt.getRowCount());\n        Integer i = 0, j = 0;\n        for (VoltTableRow row : sorted) {\n            String d1_name = \"D1_\" + i;\n            String d2_name = \"D2_\" + (i + (j * 10));\n            int v3 = (i % 2) * 20;   // 20 unique combinations of d1, d2, d3\n\n            String d1 = (String)   row.get(0, VoltType.STRING);\n            String d2 = (String)   row.get(1, VoltType.STRING);\n            Integer s1 = (Integer) row.get(2, VoltType.INTEGER);\n            Integer s3 = (Integer) row.get(4, VoltType.INTEGER);\n\n            assertEquals(d1, d1_name);\n            assertEquals(d2, d2_name);\n            assertEquals(s1.intValue(), 40);\n            assertEquals(s3.intValue(), v3);\n            j++;  if (j == 5) { i++; j = 0; }\n        }\n    }","id":16152,"modified_method":"/**\n     * distributed sum of a view with 3-way join on replicated tables\n     * (REDUNDANT GROUP BY)\n     * select D1.D1_NAME, D2.D2_NAME, sum(V.SUM_V1), sum(V.SUM_V2), sum(V.SUM_V3)\n     * from D1, D2, V where V.V_D1_PKEY = D1.D1_PKEY and V.V_D2_PKEY = D2.D2_PKEY\n     * group by D1_NAME, D2_NAME\n     * @throws InterruptedException\n     */\n    @SuppressWarnings(\"unchecked\")\n    public void testDistributedSumGroupMultiJoin() throws IOException,\n    ProcCallException, InterruptedException {\n        VoltTable vt;\n        Client client = getClient();\n        loadF(client, 0);\n        loadDims(client);\n\n        String qs = \"select D1.D1_NAME, D2.D2_NAME, sum(V.SUM_V1), sum(V.SUM_V2), sum(V.SUM_V3) \"\n            + \"from V, D1, D2 \"\n            + \"where V.V_D1_PKEY = D1.D1_PKEY and V.V_D2_PKEY = D2.D2_PKEY \"\n            + \"group by D1.D1_NAME, D2.D2_NAME\";\n\n        vt = client.callProcedure(\"@AdHoc\", qs)[0];\n        System.out.println(\"DistributedSumGroupMultiJoin: \" + vt);\n\n        // sort the output by d2's value\n        ArrayList<VoltTableRow> sorted = new ArrayList<VoltTableRow>();\n        while (vt.advanceRow()) {\n            String d1 = (String) vt.get(0, VoltType.STRING);\n            String d2 = (String) vt.get(1, VoltType.STRING);\n            System.out.println(\"Adding Row: \" + d1 + \", \" + d2);\n            // this will add the active row of vt\n            sorted.add(vt.cloneRow());\n        }\n        System.out.println(\"DSGMJonedim\"); debug(sorted);\n        Collections.sort(sorted, new VRowComparator<VoltTableRow>());\n        System.out.println(\"DSGMJonedim: \"); debug(sorted);\n\n        // 5 unique d2's for each of 10 d1's (so 10 * 5 rows)\n        assertEquals(50, vt.getRowCount());\n        Integer i = 0, j = 0;\n        for (VoltTableRow row : sorted) {\n            String d1_name = \"D1_\" + i;\n            String d2_name = \"D2_\" + (i + (j * 10));\n            int v3 = (i % 2) * 20;   // 20 unique combinations of d1, d2, d3\n\n            String d1 = (String)   row.get(0, VoltType.STRING);\n            String d2 = (String)   row.get(1, VoltType.STRING);\n            Integer s1 = (Integer) row.get(2, VoltType.INTEGER);\n            Integer s3 = (Integer) row.get(4, VoltType.INTEGER);\n\n            assertEquals(d1, d1_name);\n            assertEquals(d2, d2_name);\n            assertEquals(s1.intValue(), 40);\n            assertEquals(s3.intValue(), v3);\n            j++;  if (j == 5) { i++; j = 0; }\n        }\n    }","commit_id":"9ae7a99c6bc51a78c2aff4ea099b70f563941197","url":"https://github.com/VoltDB/voltdb"},{"original_method":"/** load known data to F without loading the Dimension tables */\n    private int loadF(Client client, int pkey) throws NoConnectionsException,\n    ProcCallException, IOException {\n        VoltTable vt;\n\n        // val1 = constant value 2\n        // val2 = i * 10\n        // val3 = 0 for even i, 1 for odd i\n\n        for (int i = 0; i < 1000; i++) {\n\n            int f_d1 = i % 10; // 10 unique dim1s\n            int f_d2 = i % 50; // 50 unique dim2s\n            int f_d3 = i % 100; // 100 unique dim3s\n\n            vt = client.callProcedure(\"InsertF\", pkey++, f_d1, f_d2, f_d3,\n                    2, (i * 10), (i % 2))[0];\n            assertTrue(vt.getRowCount() == 1);\n            // assertTrue(vt.asScalarLong() == 1);\n        }\n        return pkey;\n    }","id":16153,"modified_method":"/** load known data to F without loading the Dimension tables\n     * @throws InterruptedException */\n    private int loadF(Client client, int pkey) throws NoConnectionsException,\n    ProcCallException, IOException, InterruptedException {\n        VoltTable vt;\n\n        // if you want to test synchronous latency, this\n        //  is a good variable to change\n        boolean async = true;\n\n        // val1 = constant value 2\n        // val2 = i * 10\n        // val3 = 0 for even i, 1 for odd i\n\n        for (int i = 0; i < 1000; i++) {\n\n            int f_d1 = i % 10; // 10 unique dim1s\n            int f_d2 = i % 50; // 50 unique dim2s\n            int f_d3 = i % 100; // 100 unique dim3s\n\n            SyncCallback cb = new SyncCallback();\n            client.callProcedure(cb, \"InsertF\", pkey++, f_d1, f_d2, f_d3,\n                    2, (i * 10), (i % 2));\n\n            if (!async) {\n                cb.waitForResponse();\n                vt = cb.getResponse().getResults()[0];\n                assertTrue(vt.getRowCount() == 1);\n                // assertTrue(vt.asScalarLong() == 1);\n            }\n        }\n\n        client.drain();\n\n        return pkey;\n    }","commit_id":"9ae7a99c6bc51a78c2aff4ea099b70f563941197","url":"https://github.com/VoltDB/voltdb"},{"original_method":"/**\n     * distributed sum of a view with 4-way join on replicated tables for\n     * specific dim1, dim2 (REDUNDANT GROUP BY)\n     * select D1.D1_NAME, D2.D2_NAME, sum(V.SUM_V1), sum(V.SUM_V2), sum(V.SUM_V3)\n     * from D1, D2, V where V.V_D1_PKEY = D1.D1_PKEY and V.V_D2_PKEY = D2.D2_PKEY\n     * and D1.D1_PKEY = ? and D2.D2_PKEY = ? group by D1_NAME, D2_NAME\n     */\n    public void testDistributedSumGroupMultiJoinTwoDims() throws IOException, ProcCallException {\n        VoltTable vt;\n        Client client = getClient();\n        loadF(client, 0);\n        loadDims(client);\n\n        String qs = \"select D1.D1_NAME, D2.D2_NAME, D3.D3_NAME, sum(V.SUM_V1), sum(V.SUM_V2), sum(V.SUM_V3) \"\n            + \"from D1, D2, D3, V \"\n            + \"where V.V_D1_PKEY = D1.D1_PKEY and V.V_D2_PKEY = D2.D2_PKEY and V.V_D3_PKEY = D3.D3_PKEY \"\n            +        \"and D1.D1_PKEY = 6 and D2.D2_PKEY = 26 \"\n            + \"group by D1.D1_NAME, D2.D2_NAME, D3.D3_NAME;\";\n\n        vt = client.callProcedure(\"@AdHoc\", qs)[0];\n        System.out.println(\"MultiJoin3Dims: \" + vt);\n\n        // output looks like this - in either ordering\n        // D1_6, D2_26, D3_76, 20, 52600, 0,\n        // D1_6, D2_26, D3_26, 20, 47600, 0,\n        while (vt.advanceRow()) {\n            String d1 = (String)   vt.get(0, VoltType.STRING);\n            String d2 = (String)   vt.get(1, VoltType.STRING);\n            String d3 = (String)   vt.get(2, VoltType.STRING);\n            Integer s1 = (Integer) vt.get(3, VoltType.INTEGER);\n            Integer s3 = (Integer) vt.get(4, VoltType.INTEGER);\n\n            assertEquals(\"D1_6\", d1);\n            assertEquals(\"D2_26\", d2);\n            assertEquals(20, s1.intValue());\n            if (d3.equals(\"D3_26\"))\n                assertEquals(47600, s3.intValue());\n            else if (d3.equals(\"D3_76\"))\n                assertEquals(52600, s3.intValue());\n            else\n                fail();\n        }\n    }","id":16154,"modified_method":"/**\n     * distributed sum of a view with 4-way join on replicated tables for\n     * specific dim1, dim2 (REDUNDANT GROUP BY)\n     * select D1.D1_NAME, D2.D2_NAME, sum(V.SUM_V1), sum(V.SUM_V2), sum(V.SUM_V3)\n     * from D1, D2, V where V.V_D1_PKEY = D1.D1_PKEY and V.V_D2_PKEY = D2.D2_PKEY\n     * and D1.D1_PKEY = ? and D2.D2_PKEY = ? group by D1_NAME, D2_NAME\n     * @throws InterruptedException\n     */\n    public void testDistributedSumGroupMultiJoinTwoDims() throws IOException, ProcCallException, InterruptedException {\n        VoltTable vt;\n        Client client = getClient();\n        loadF(client, 0);\n        loadDims(client);\n\n        String qs = \"select D1.D1_NAME, D2.D2_NAME, D3.D3_NAME, sum(V.SUM_V1), sum(V.SUM_V2), sum(V.SUM_V3) \"\n            + \"from D1, D2, D3, V \"\n            + \"where V.V_D1_PKEY = D1.D1_PKEY and V.V_D2_PKEY = D2.D2_PKEY and V.V_D3_PKEY = D3.D3_PKEY \"\n            +        \"and D1.D1_PKEY = 6 and D2.D2_PKEY = 26 \"\n            + \"group by D1.D1_NAME, D2.D2_NAME, D3.D3_NAME;\";\n\n        vt = client.callProcedure(\"@AdHoc\", qs)[0];\n        System.out.println(\"MultiJoin3Dims: \" + vt);\n\n        // output looks like this - in either ordering\n        // D1_6, D2_26, D3_76, 20, 52600, 0,\n        // D1_6, D2_26, D3_26, 20, 47600, 0,\n        while (vt.advanceRow()) {\n            String d1 = (String)   vt.get(0, VoltType.STRING);\n            String d2 = (String)   vt.get(1, VoltType.STRING);\n            String d3 = (String)   vt.get(2, VoltType.STRING);\n            Integer s1 = (Integer) vt.get(3, VoltType.INTEGER);\n            Integer s3 = (Integer) vt.get(4, VoltType.INTEGER);\n\n            assertEquals(\"D1_6\", d1);\n            assertEquals(\"D2_26\", d2);\n            assertEquals(20, s1.intValue());\n            if (d3.equals(\"D3_26\"))\n                assertEquals(47600, s3.intValue());\n            else if (d3.equals(\"D3_76\"))\n                assertEquals(52600, s3.intValue());\n            else\n                fail();\n        }\n    }","commit_id":"9ae7a99c6bc51a78c2aff4ea099b70f563941197","url":"https://github.com/VoltDB/voltdb"},{"original_method":"/**\n     * distributed sums of a view\n     * select sum(V.SUM_V1), sum(V.SUM_V2), sum(V.SUM_V3) from V\n     */\n    public void testDistributedSum_View() throws IOException, ProcCallException {\n        VoltTable vt;\n        Client client = getClient();\n        loadF(client, 0);\n\n        String qs = \"select sum(V.SUM_v1), sum(V.SUM_V2), sum(V.SUM_V3) from V\";\n\n        vt = client.callProcedure(\"@AdHoc\", qs)[0];\n        System.out.println(\"testDistributedSum_View result: \" + vt);\n        assertTrue(vt.getRowCount() == 1);\n        while (vt.advanceRow()) {\n            Integer sum1 = (Integer) vt.get(0, VoltType.INTEGER);\n            assertEquals(2000, sum1.intValue());\n            Integer sum2 = (Integer) vt.get(1, VoltType.INTEGER);\n            assertEquals(4995000, sum2.intValue());\n            Integer sum3 = (Integer) vt.get(2, VoltType.INTEGER);\n            assertEquals(500, sum3.intValue());\n        }\n    }","id":16155,"modified_method":"/**\n     * distributed sums of a view\n     * select sum(V.SUM_V1), sum(V.SUM_V2), sum(V.SUM_V3) from V\n     * @throws InterruptedException\n     */\n    public void testDistributedSum_View() throws IOException, ProcCallException, InterruptedException {\n        VoltTable vt;\n        Client client = getClient();\n        loadF(client, 0);\n\n        String qs = \"select sum(V.SUM_v1), sum(V.SUM_V2), sum(V.SUM_V3) from V\";\n\n        vt = client.callProcedure(\"@AdHoc\", qs)[0];\n        System.out.println(\"testDistributedSum_View result: \" + vt);\n        assertTrue(vt.getRowCount() == 1);\n        while (vt.advanceRow()) {\n            Integer sum1 = (Integer) vt.get(0, VoltType.INTEGER);\n            assertEquals(2000, sum1.intValue());\n            Integer sum2 = (Integer) vt.get(1, VoltType.INTEGER);\n            assertEquals(4995000, sum2.intValue());\n            Integer sum3 = (Integer) vt.get(2, VoltType.INTEGER);\n            assertEquals(500, sum3.intValue());\n        }\n    }","commit_id":"9ae7a99c6bc51a78c2aff4ea099b70f563941197","url":"https://github.com/VoltDB/voltdb"},{"original_method":"/**\n     * distributed sum of a view with 3-way join on replicated table for\n     * specific dim1 (REDUNDANT GROUP BY)\n     * select D1.D1_NAME, D2.D2_NAME, sum(V.SUM_V1),\n     * sum(V.SUM_V2), sum(V.SUM_V3) from D1, D2, V where V.V_D1_PKEY =\n     * D1.D1_PKEY and V.V_D2_PKEY = D2.D2_PKEY and D1.D1_PKEY = ?\n     * group by D1_NAME, D2_NAME\n     */\n    @SuppressWarnings(\"unchecked\")\n    public void testDistributedSumGroupMultiJoinOneDim() throws IOException,\n    ProcCallException {\n        VoltTable vt;\n        Client client = getClient();\n        loadF(client, 0);\n        loadDims(client);\n\n        String qs = \"select D1.D1_NAME, D2.D2_NAME, sum(V.SUM_V1), sum(V.SUM_V2), sum(V.SUM_V3) \"\n            + \"from D1, D2, V \"\n            + \"where V.V_D1_PKEY = D1.D1_PKEY and V.V_D2_PKEY = D2.D2_PKEY and D1.D1_PKEY = 6 \"\n            + \"group by D1.D1_NAME, D2.D2_NAME;\";\n\n        vt = client.callProcedure(\"@AdHoc\", qs)[0];\n        // 5 unique values of d2 for each value of d1 (and a single d1 value is selected above)\n        assertEquals(vt.getRowCount(), 5);\n\n        // sort the output by d2's value\n        ArrayList<VoltTableRow> sorted = new ArrayList<VoltTableRow>();\n        while (vt.advanceRow()) {\n            // this will add the active row of vt\n            sorted.add(vt.cloneRow());\n        }\n        System.out.println(\"DSGMJonedim\"); debug(sorted);\n        Collections.sort(sorted, new VRowComparator<VoltTableRow>());\n        System.out.println(\"DSGMJonedim: \"); debug(sorted);\n\n        int i = 0;\n        for (VoltTableRow row : sorted) {\n            String d2_name = \"D2_\" + ((i * 10) + 6);\n\n            String d1 = (String)   row.get(0, VoltType.STRING);\n            String d2 = (String)   row.get(1, VoltType.STRING);\n            Integer s1 = (Integer) row.get(2, VoltType.INTEGER);\n            Integer s3 = (Integer) row.get(4, VoltType.INTEGER);\n\n            System.out.println(\"D2 expected: \" + d2_name + \" actual: \" + d2);\n\n            assertEquals(d1, \"D1_6\");\n            assertEquals(d2, d2_name);\n            assertEquals(s1.intValue(), 40);  // 20 unique combinations * 2.\n            assertEquals(s3.intValue(), 0);   // all even d1's are 0 in s3\n            i++;\n        }\n    }","id":16156,"modified_method":"/**\n     * distributed sum of a view with 3-way join on replicated table for\n     * specific dim1 (REDUNDANT GROUP BY)\n     * select D1.D1_NAME, D2.D2_NAME, sum(V.SUM_V1),\n     * sum(V.SUM_V2), sum(V.SUM_V3) from D1, D2, V where V.V_D1_PKEY =\n     * D1.D1_PKEY and V.V_D2_PKEY = D2.D2_PKEY and D1.D1_PKEY = ?\n     * group by D1_NAME, D2_NAME\n     * @throws InterruptedException\n     */\n    @SuppressWarnings(\"unchecked\")\n    public void testDistributedSumGroupMultiJoinOneDim() throws IOException,\n    ProcCallException, InterruptedException {\n        VoltTable vt;\n        Client client = getClient();\n        loadF(client, 0);\n        loadDims(client);\n\n        String qs = \"select D1.D1_NAME, D2.D2_NAME, sum(V.SUM_V1), sum(V.SUM_V2), sum(V.SUM_V3) \"\n            + \"from D1, D2, V \"\n            + \"where V.V_D1_PKEY = D1.D1_PKEY and V.V_D2_PKEY = D2.D2_PKEY and D1.D1_PKEY = 6 \"\n            + \"group by D1.D1_NAME, D2.D2_NAME;\";\n\n        vt = client.callProcedure(\"@AdHoc\", qs)[0];\n        // 5 unique values of d2 for each value of d1 (and a single d1 value is selected above)\n        assertEquals(vt.getRowCount(), 5);\n\n        // sort the output by d2's value\n        ArrayList<VoltTableRow> sorted = new ArrayList<VoltTableRow>();\n        while (vt.advanceRow()) {\n            // this will add the active row of vt\n            sorted.add(vt.cloneRow());\n        }\n        System.out.println(\"DSGMJonedim\"); debug(sorted);\n        Collections.sort(sorted, new VRowComparator<VoltTableRow>());\n        System.out.println(\"DSGMJonedim: \"); debug(sorted);\n\n        int i = 0;\n        for (VoltTableRow row : sorted) {\n            String d2_name = \"D2_\" + ((i * 10) + 6);\n\n            String d1 = (String)   row.get(0, VoltType.STRING);\n            String d2 = (String)   row.get(1, VoltType.STRING);\n            Integer s1 = (Integer) row.get(2, VoltType.INTEGER);\n            Integer s3 = (Integer) row.get(4, VoltType.INTEGER);\n\n            System.out.println(\"D2 expected: \" + d2_name + \" actual: \" + d2);\n\n            assertEquals(d1, \"D1_6\");\n            assertEquals(d2, d2_name);\n            assertEquals(s1.intValue(), 40);  // 20 unique combinations * 2.\n            assertEquals(s3.intValue(), 0);   // all even d1's are 0 in s3\n            i++;\n        }\n    }","commit_id":"9ae7a99c6bc51a78c2aff4ea099b70f563941197","url":"https://github.com/VoltDB/voltdb"},{"original_method":"/**\n     * distributed sums of a partitioned table\n     * select sum(F_VAL1), sum(F_VAL2), sum(F_VAL3) from F\n     */\n    public void testDistributedSum() throws IOException, ProcCallException {\n        VoltTable vt;\n        Client client = getClient();\n        loadF(client, 0);\n\n        String qs = \"select sum(F_VAL1), sum(F_VAL2), sum(F_VAL3) from F\";\n\n        vt = client.callProcedure(\"@AdHoc\", qs)[0];\n        System.out.println(\"testDistributedSum result: \" + vt);\n        assertTrue(vt.getRowCount() == 1);\n        while (vt.advanceRow()) {\n            Integer sum1 = (Integer) vt.get(0, VoltType.INTEGER);\n            assertEquals(2000, sum1.intValue());\n            Integer sum2 = (Integer) vt.get(1, VoltType.INTEGER);\n            assertEquals(4995000, sum2.intValue());\n            Integer sum3 = (Integer) vt.get(2, VoltType.INTEGER);\n            assertEquals(500, sum3.intValue());\n        }\n    }","id":16157,"modified_method":"/**\n     * distributed sums of a partitioned table\n     * select sum(F_VAL1), sum(F_VAL2), sum(F_VAL3) from F\n     * @throws InterruptedException\n     */\n    public void testDistributedSum() throws IOException, ProcCallException, InterruptedException {\n        VoltTable vt;\n        Client client = getClient();\n        loadF(client, 0);\n\n        String qs = \"select sum(F_VAL1), sum(F_VAL2), sum(F_VAL3) from F\";\n\n        vt = client.callProcedure(\"@AdHoc\", qs)[0];\n        System.out.println(\"testDistributedSum result: \" + vt);\n        assertTrue(vt.getRowCount() == 1);\n        while (vt.advanceRow()) {\n            Integer sum1 = (Integer) vt.get(0, VoltType.INTEGER);\n            assertEquals(2000, sum1.intValue());\n            Integer sum2 = (Integer) vt.get(1, VoltType.INTEGER);\n            assertEquals(4995000, sum2.intValue());\n            Integer sum3 = (Integer) vt.get(2, VoltType.INTEGER);\n            assertEquals(500, sum3.intValue());\n        }\n    }","commit_id":"9ae7a99c6bc51a78c2aff4ea099b70f563941197","url":"https://github.com/VoltDB/voltdb"},{"original_method":"static public junit.framework.Test suite() {\n        VoltServerConfig config = null;\n        MultiConfigSuiteBuilder builder = new MultiConfigSuiteBuilder(\n                TestPlansGroupBySuite.class);\n        VoltProjectBuilder project = new VoltProjectBuilder();\n\n        project.addSchema(TestPlansGroupBy.class\n                .getResource(\"testplans-groupby-ddl.sql\"));\n        project.addPartitionInfo(\"T1\", \"PKEY\");\n        project.addPartitionInfo(\"F\", \"F_PKEY\");\n        project.addProcedures(PROCEDURES);\n\n        // config = new LocalSingleProcessServer(\"plansgroupby-ipc.jar\", 1, BackendTarget.NATIVE_EE_IPC);\n        // config.compile(project);\n        // builder.addServerConfig(config);\n\n        config = new LocalSingleProcessServer(\"plansgroupby-onesite.jar\",1,\n                BackendTarget.NATIVE_EE_JNI);\n        config.compile(project);\n        builder.addServerConfig(config);\n\n        config = new LocalSingleProcessServer(\"plansgroupby-threesites.jar\",3,\n                BackendTarget.NATIVE_EE_JNI);\n        config.compile(project);\n        builder.addServerConfig(config);\n\n        config = new LocalSingleProcessServer(\"plansgroupby-hsql.jar\", 1,\n                BackendTarget.HSQLDB_BACKEND);\n        config.compile(project);\n        builder.addServerConfig(config);\n\n        // Cluster\n        config = new LocalCluster(\"plansgroupby-cluster.jar\", 2, 2,\n                                  1, BackendTarget.NATIVE_EE_JNI);\n        config.compile(project);\n        builder.addServerConfig(config);\n\n        return builder;\n    }","id":16158,"modified_method":"static public junit.framework.Test suite() {\n        VoltServerConfig config = null;\n        MultiConfigSuiteBuilder builder = new MultiConfigSuiteBuilder(\n                TestPlansGroupBySuite.class);\n        VoltProjectBuilder project = new VoltProjectBuilder();\n\n        project.addSchema(TestPlansGroupBy.class\n                .getResource(\"testplans-groupby-ddl.sql\"));\n        project.addPartitionInfo(\"T1\", \"PKEY\");\n        project.addPartitionInfo(\"F\", \"F_PKEY\");\n        project.addProcedures(PROCEDURES);\n        project.addStmtProcedure(\"T1Insert\", \"INSERT INTO T1 VALUES (?, ?);\");\n\n        // config = new LocalSingleProcessServer(\"plansgroupby-ipc.jar\", 1, BackendTarget.NATIVE_EE_IPC);\n        // config.compile(project);\n        // builder.addServerConfig(config);\n\n        config = new LocalSingleProcessServer(\"plansgroupby-onesite.jar\",1,\n                BackendTarget.NATIVE_EE_JNI);\n        config.compile(project);\n        builder.addServerConfig(config);\n\n        config = new LocalSingleProcessServer(\"plansgroupby-threesites.jar\",3,\n                BackendTarget.NATIVE_EE_JNI);\n        config.compile(project);\n        builder.addServerConfig(config);\n\n        config = new LocalSingleProcessServer(\"plansgroupby-hsql.jar\", 1,\n                BackendTarget.HSQLDB_BACKEND);\n        config.compile(project);\n        builder.addServerConfig(config);\n\n        // Cluster\n        config = new LocalCluster(\"plansgroupby-cluster.jar\", 2, 2,\n                                  1, BackendTarget.NATIVE_EE_JNI);\n        config.compile(project);\n        builder.addServerConfig(config);\n\n        return builder;\n    }","commit_id":"9ae7a99c6bc51a78c2aff4ea099b70f563941197","url":"https://github.com/VoltDB/voltdb"},{"original_method":"/** Load 1 1's, 2 2's, 3 3's .. 10 10's and 1 11 */\n    private int loaderNxN(Client client, int pkey) throws ProcCallException,\n    IOException, NoConnectionsException {\n        VoltTable vt;\n        String qs;\n        // Insert some known data. Insert {1, 2, 2, 3, 3, 3, ... }\n        for (int i = 1; i <= 10; i++) {\n            for (int j = 0; j < i; j++) {\n                qs = \"INSERT INTO T1 VALUES (\" + pkey++ + \", \" + i + \");\";\n                vt = client.callProcedure(\"@AdHoc\", qs)[0];\n                assertTrue(vt.getRowCount() == 1);\n                // assertTrue(vt.asScalarLong() == 1);\n            }\n        }\n        // also add a single \"11\" to make verification a bit saner\n        // (so that the table results of \"count\" and \"group by\" can be\n        // distinguished)\n        vt = client.callProcedure(\"@AdHoc\", \"insert into t1 values (\" + pkey++\n                + \",11);\")[0];\n        assertTrue(vt.getRowCount() == 1);\n        // assertTrue(vt.asScalarLong() == 1);\n        return pkey;\n    }","id":16159,"modified_method":"/** Load 1 1's, 2 2's, 3 3's .. 10 10's and 1 11 */\n    private int loaderNxN(Client client, int pkey) throws ProcCallException,\n    IOException, NoConnectionsException {\n        VoltTable vt;\n        //String qs;\n        // Insert some known data. Insert {1, 2, 2, 3, 3, 3, ... }\n        for (int i = 1; i <= 10; i++) {\n            for (int j = 0; j < i; j++) {\n                //qs = \"INSERT INTO T1 VALUES (\" + pkey++ + \", \" + i + \");\";\n                vt = client.callProcedure(\"T1Insert\", pkey++, i)[0];\n                assertTrue(vt.getRowCount() == 1);\n                // assertTrue(vt.asScalarLong() == 1);\n            }\n        }\n        // also add a single \"11\" to make verification a bit saner\n        // (so that the table results of \"count\" and \"group by\" can be\n        // distinguished)\n        vt = client.callProcedure(\"@AdHoc\", \"insert into t1 values (\" + pkey++\n                + \",11);\")[0];\n        assertTrue(vt.getRowCount() == 1);\n        // assertTrue(vt.asScalarLong() == 1);\n        return pkey;\n    }","commit_id":"9ae7a99c6bc51a78c2aff4ea099b70f563941197","url":"https://github.com/VoltDB/voltdb"},{"original_method":"private void addTxnToQueue(TransactionState state)\n    {\n        m_queue.noteTransactionRecievedAndReturnLastSeen(state.initiatorSiteId, state.txnId, false, DtxnConstants.DUMMY_LAST_SEEN_TXN_ID);\n        m_queue.add(state);\n    }","id":16160,"modified_method":"private void addTxnToQueue(TransactionState state)\n    {\n        m_queue.noteTransactionRecievedAndReturnLastSeen(state.initiatorSiteId, state.txnId, false, state.txnId);\n        m_queue.add(state);\n    }","commit_id":"9ae7a99c6bc51a78c2aff4ea099b70f563941197","url":"https://github.com/VoltDB/voltdb"},{"original_method":"@Override\n    public ServiceClientResponse execute(RequestProxyService proxyService, RemoteBehavior remoteBehavior) {\n        return proxyService.delete(getUrl(), getHeaders(remoteBehavior));\n    }","id":16161,"modified_method":"@Override\n    public ServiceClientResponse execute(RequestProxyService proxyService, RemoteBehavior remoteBehavior) {\n        return proxyService.delete(getBaseUrl(), getCacheObjectKey(), getHeaders(remoteBehavior));\n    }","commit_id":"a29ad44f3be7f96a8d4757a0e4048c68c7436834","url":"https://github.com/rackerlabs/repose"},{"original_method":"@Test\n      public void shouldReturnTrueOnSuccess() throws Exception {\n         final Delete deleteCommand = new Delete(\"object-key\", new InetSocketAddress(InetAddress.getByAddress(new byte[]{127, 0, 0, 1}), 1000));\n\n         // RemoteBehavior.ALLOW_FORWARDING\n         final ProxyService proxy = mock(ProxyService.class);\n         final ServiceClientResponse response = mock(ServiceClientResponse.class);\n         when(response.getStatusCode()).thenReturn(202);\n\n         assertEquals(\"Delete command must communicate success on 202\", Boolean.TRUE, deleteCommand.handleResponse(response));\n      }","id":16162,"modified_method":"@Test\n      public void shouldReturnTrueOnSuccess() throws Exception {\n         final Delete deleteCommand = new Delete(\"object-key\", new InetSocketAddress(InetAddress.getByAddress(new byte[]{127, 0, 0, 1}), 1000));\n\n         // RemoteBehavior.ALLOW_FORWARDING\n         final ServiceClientResponse response = mock(ServiceClientResponse.class);\n         when(response.getStatusCode()).thenReturn(202);\n\n         assertEquals(\"Delete command must communicate success on 202\", Boolean.TRUE, deleteCommand.handleResponse(response));\n      }","commit_id":"a29ad44f3be7f96a8d4757a0e4048c68c7436834","url":"https://github.com/rackerlabs/repose"},{"original_method":"@Override\n    public ServiceClientResponse execute(RequestProxyService proxyService, RemoteBehavior remoteBehavior) {\n        return proxyService.get(getUrl(), getHeaders(remoteBehavior));\n    }","id":16163,"modified_method":"@Override\n    public ServiceClientResponse execute(RequestProxyService proxyService, RemoteBehavior remoteBehavior) {\n        return proxyService.get(getBaseUrl(), getCacheObjectKey(), getHeaders(remoteBehavior));\n    }","commit_id":"a29ad44f3be7f96a8d4757a0e4048c68c7436834","url":"https://github.com/rackerlabs/repose"},{"original_method":"@Override\n    public ServiceClientResponse execute(RequestProxyService proxyService, RemoteBehavior remoteBehavior) {\n        return proxyService.put(getUrl(), getHeaders(remoteBehavior), value, MediaType.WILDCARD_TYPE);\n    }","id":16164,"modified_method":"@Override\n    public ServiceClientResponse execute(RequestProxyService proxyService, RemoteBehavior remoteBehavior) {\n        return proxyService.put(getBaseUrl(), getCacheObjectKey(), getHeaders(remoteBehavior), MediaType.WILDCARD_TYPE, value);\n    }","commit_id":"a29ad44f3be7f96a8d4757a0e4048c68c7436834","url":"https://github.com/rackerlabs/repose"},{"original_method":"@Override\n    public ServiceClientResponse get(String uri, Map<String, String> headers) {\n        return new ServiceClient(getClient()).get(uri, headers);\n    }","id":16165,"modified_method":"@Override\n    public ServiceClientResponse get(String baseUri, String path, Map<String, String> headers) {\n        WebResource.Builder requestBuilder = getClient().resource(baseUri, true).path(path).getRequestBuilder();\n        requestBuilder = setHeaders(requestBuilder, headers);\n        ClientResponse response = requestBuilder.get(ClientResponse.class);\n        return new ServiceClientResponse(response.getStatus(), response.getEntityInputStream());\n    }","commit_id":"a29ad44f3be7f96a8d4757a0e4048c68c7436834","url":"https://github.com/rackerlabs/repose"},{"original_method":"@Override\n    public ServiceClientResponse delete(String uri, Map<String, String> headers) {\n        return new ServiceClient(getClient()).delete(uri, headers);\n    }","id":16166,"modified_method":"@Override\n    public ServiceClientResponse delete(String baseUri, String path, Map<String, String> headers) {\n        WebResource.Builder requestBuilder = getClient().resource(baseUri, true).path(path).getRequestBuilder();\n        requestBuilder = setHeaders(requestBuilder, headers);\n        ClientResponse response = requestBuilder.delete(ClientResponse.class);\n        return new ServiceClientResponse(response.getStatus(), response.getEntityInputStream());\n    }","commit_id":"a29ad44f3be7f96a8d4757a0e4048c68c7436834","url":"https://github.com/rackerlabs/repose"},{"original_method":"@Override\n    public ServiceClientResponse put(String uri, Map<String, String> headers, byte[] body, MediaType contentType) {\n        return new ServiceClient(getClient()).put(uri, headers, body, contentType);\n    }","id":16167,"modified_method":"public ServiceClientResponse put(String baseUri, String path, Map<String, String> headers, MediaType contentType, byte[] body) {\n        WebResource resource = getClient().resource(baseUri, true).path(path);\n        WebResource.Builder requestBuilder = resource.getRequestBuilder();\n        requestBuilder = setHeaders(requestBuilder, headers);\n        ClientResponse response = requestBuilder.type(contentType).header(\"Accept\", \"application/xml\").put(ClientResponse.class, body);\n\n        return new ServiceClientResponse(response.getStatus(), response.getEntityInputStream());\n\n    }","commit_id":"a29ad44f3be7f96a8d4757a0e4048c68c7436834","url":"https://github.com/rackerlabs/repose"},{"original_method":"private Client getClient() {\n        synchronized (lock) {\n            if (client == null) {\n                DefaultClientConfig cc = new JerseyPropertiesConfigurator(connectionTimeout, readTimeout).configure();\n                client = Client.create(cc);\n\n                if (LOG.isInfoEnabled()) {\n                    LOG.info(\"Enabling info logging of jersey client requests\");\n                    client.addFilter(new LoggingFilter());\n                } else {\n                    LOG.warn(\"**** Jersey client request logging not enabled *****\");\n                }\n\n            }\n\n            return client;\n        }\n    }","id":16168,"modified_method":"private ClientWrapper getClient() {\n        synchronized (lock) {\n            if (client == null) {\n                DefaultClientConfig cc = new JerseyPropertiesConfigurator(connectionTimeout, readTimeout).configure();\n                client = new ClientWrapper(Client.create(cc));\n\n                if (LOG.isInfoEnabled()) {\n                    LOG.info(\"Enabling info logging of jersey client requests\");\n                    client.getClient().addFilter(new LoggingFilter());\n                } else {\n                    LOG.warn(\"**** Jersey client request logging not enabled *****\");\n                }\n\n            }\n\n            return client;\n        }\n    }","commit_id":"a29ad44f3be7f96a8d4757a0e4048c68c7436834","url":"https://github.com/rackerlabs/repose"},{"original_method":"@Override\n    public void setTimeouts(Integer connectionTimeout, Integer readTimeout) {\n        LOG.info(\"Connection and/or read timeouts changed to: \" + connectionTimeout + \"/\" + readTimeout);\n        this.connectionTimeout = connectionTimeout;\n        this.readTimeout = readTimeout;\n\n        // Invalidate client\n        client = null;\n    }","id":16169,"modified_method":"@Override\n    public void setTimeouts(Integer connectionTimeout, Integer readTimeout) {\n        LOG.info(\"Connection and/or read timeouts changed to: \" + connectionTimeout + \"/\" + readTimeout);\n        this.connectionTimeout = connectionTimeout;\n        this.readTimeout = readTimeout;\n\n        // Invalidate client\n        synchronized (lock) {\n            client = null;\n        }\n    }","commit_id":"a29ad44f3be7f96a8d4757a0e4048c68c7436834","url":"https://github.com/rackerlabs/repose"},{"original_method":"/**\n\t * Test if a transaction ( begin / rollback ) is executed on the\n\t * LocalTransaction when CciLocalTransactionManager is specified as\n\t * transaction manager and a non-checked exception is thrown.\n\t */\n\tpublic void testLocalTransactionRollback() throws ResourceException {\n\t\tMockControl connectionFactoryControl = MockControl.createControl(ConnectionFactory.class);\n\t\tfinal ConnectionFactory connectionFactory = (ConnectionFactory) connectionFactoryControl.getMock();\n\t\tMockControl connectionControl = MockControl.createControl(Connection.class);\n\t\tConnection connection = (Connection) connectionControl.getMock();\n\t\tMockControl interactionControl = MockControl.createControl(Interaction.class);\n\t\tInteraction interaction = (Interaction) interactionControl.getMock();\n\t\tMockControl localTransactionControl = MockControl.createControl(LocalTransaction.class);\n\t\tLocalTransaction localTransaction = (LocalTransaction) localTransactionControl.getMock();\n\t\tMockControl recordControl = MockControl.createControl(Record.class);\n\t\tfinal Record record = (Record) recordControl.getMock();\n\n\t\tMockControl interactionSpecControl = MockControl.createControl(InteractionSpec.class);\n\t\tfinal InteractionSpec interactionSpec = (InteractionSpec) interactionSpecControl.getMock();\n\n\t\tconnectionFactory.getConnection();\n\t\tconnectionFactoryControl.setReturnValue(connection);\n\n\t\tconnection.getLocalTransaction();\n\t\tconnectionControl.setReturnValue(localTransaction);\n\n\t\tlocalTransaction.begin();\n\t\tlocalTransactionControl.setVoidCallable(1);\n\n\t\tconnection.createInteraction();\n\t\tconnectionControl.setReturnValue(interaction);\n\n\t\tinteraction.execute(interactionSpec, record, record);\n\t\tinteractionControl.setReturnValue(true, 1);\n\n\t\tinteraction.close();\n\t\tinteractionControl.setVoidCallable(1);\n\n\t\tconnection.getLocalTransaction();\n\t\tconnectionControl.setReturnValue(localTransaction);\n\n\t\tlocalTransaction.rollback();\n\t\tlocalTransactionControl.setVoidCallable(1);\n\n\t\tconnection.close();\n\t\tconnectionControl.setVoidCallable(1);\n\n\t\tconnectionFactoryControl.replay();\n\t\tconnectionControl.replay();\n\t\tlocalTransactionControl.replay();\n\t\tinteractionControl.replay();\n\n\t\torg.springframework.jca.cci.connection.CciLocalTransactionManager tm = new org.springframework.jca.cci.connection.CciLocalTransactionManager();\n\t\ttm.setConnectionFactory(connectionFactory);\n\t\tTransactionTemplate tt = new TransactionTemplate(tm);\n\n\t\ttry {\n\t\t\tObject result = tt.execute(new TransactionCallback() {\n\t\t\t\tpublic Object doInTransaction(TransactionStatus status) {\n\t\t\t\t\tassertTrue(\"Has thread connection\", TransactionSynchronizationManager.hasResource(connectionFactory));\n\t\t\t\t\tCciTemplate ct = new CciTemplate(connectionFactory);\n\t\t\t\t\tct.execute(interactionSpec, record, record);\n\t\t\t\t\tthrow new DataRetrievalFailureException(\"error\");\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\tcatch (Exception ex) {\n\t\t}\n\n\t\tconnectionFactoryControl.verify();\n\t\tconnectionControl.verify();\n\t\tinteractionControl.verify();\n\t\tlocalTransactionControl.verify();\n\t}","id":16170,"modified_method":"/**\n\t * Test if a transaction ( begin / rollback ) is executed on the\n\t * LocalTransaction when CciLocalTransactionManager is specified as\n\t * transaction manager and a non-checked exception is thrown.\n\t */\n\t@Test\n\tpublic void testLocalTransactionRollback() throws ResourceException {\n\t\tfinal ConnectionFactory connectionFactory = createMock(ConnectionFactory.class);\n\t\tConnection connection = createMock(Connection.class);\n\t\tInteraction interaction = createMock(Interaction.class);\n\t\tLocalTransaction localTransaction = createMock(LocalTransaction.class);\n\t\tfinal Record record = createMock(Record.class);\n\t\tfinal InteractionSpec interactionSpec = createMock(InteractionSpec.class);\n\t\t\n\t\texpect(connectionFactory.getConnection()).andReturn(connection);\n\n\t\texpect(connection.getLocalTransaction()).andReturn(localTransaction);\n\n\t\tlocalTransaction.begin();\n\n\t\texpect(connection.createInteraction()).andReturn(interaction);\n\n\t\texpect(interaction.execute(interactionSpec, record, record)).andReturn(true);\n\n\t\tinteraction.close();\n\n\t\texpect(connection.getLocalTransaction()).andReturn(localTransaction);\n\n\t\tlocalTransaction.rollback();\n\n\t\tconnection.close();\n\t\t\n\t\treplay(connectionFactory, connection, localTransaction, interaction, record);\n\n\t\torg.springframework.jca.cci.connection.CciLocalTransactionManager tm = new org.springframework.jca.cci.connection.CciLocalTransactionManager();\n\t\ttm.setConnectionFactory(connectionFactory);\n\t\tTransactionTemplate tt = new TransactionTemplate(tm);\n\n\t\ttry {\n\t\t\ttt.execute(new TransactionCallback() {\n\t\t\t\tpublic Object doInTransaction(TransactionStatus status) {\n\t\t\t\t\tassertTrue(\"Has thread connection\", TransactionSynchronizationManager.hasResource(connectionFactory));\n\t\t\t\t\tCciTemplate ct = new CciTemplate(connectionFactory);\n\t\t\t\t\tct.execute(interactionSpec, record, record);\n\t\t\t\t\tthrow new DataRetrievalFailureException(\"error\");\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\tcatch (Exception ex) {\n\t\t}\n\n\t\tverify(connectionFactory, connection, localTransaction, interaction, record);\n\t}","commit_id":"6285e61435a69f885747c2f122a37a8012526d86","url":"https://github.com/spring-projects/spring-framework"},{"original_method":"/**\n\t * Test if a transaction ( begin / commit ) is executed on the\n\t * LocalTransaction when CciLocalTransactionManager is specified as\n\t * transaction manager.\n\t */\n\tpublic void testLocalTransactionCommit() throws ResourceException {\n\t\tMockControl connectionFactoryControl = MockControl.createControl(ConnectionFactory.class);\n\t\tfinal ConnectionFactory connectionFactory = (ConnectionFactory) connectionFactoryControl.getMock();\n\t\tMockControl connectionControl = MockControl.createControl(Connection.class);\n\t\tConnection connection = (Connection) connectionControl.getMock();\n\t\tMockControl interactionControl = MockControl.createControl(Interaction.class);\n\t\tInteraction interaction = (Interaction) interactionControl.getMock();\n\t\tMockControl localTransactionControl = MockControl.createControl(LocalTransaction.class);\n\t\tLocalTransaction localTransaction = (LocalTransaction) localTransactionControl.getMock();\n\t\tMockControl recordControl = MockControl.createControl(Record.class);\n\t\tfinal Record record = (Record) recordControl.getMock();\n\n\t\tMockControl interactionSpecControl = MockControl.createControl(InteractionSpec.class);\n\t\tfinal InteractionSpec interactionSpec = (InteractionSpec) interactionSpecControl.getMock();\n\n\t\tconnectionFactory.getConnection();\n\t\tconnectionFactoryControl.setReturnValue(connection, 1);\n\n\t\tconnection.getLocalTransaction();\n\t\tconnectionControl.setReturnValue(localTransaction, 1);\n\n\t\tlocalTransaction.begin();\n\t\tlocalTransactionControl.setVoidCallable(1);\n\n\t\tconnection.createInteraction();\n\t\tconnectionControl.setReturnValue(interaction);\n\n\t\tinteraction.execute(interactionSpec, record, record);\n\t\tinteractionControl.setReturnValue(true, 1);\n\n\t\tinteraction.close();\n\t\tinteractionControl.setVoidCallable(1);\n\n\t\tconnection.getLocalTransaction();\n\t\tconnectionControl.setReturnValue(localTransaction);\n\n\t\tlocalTransaction.commit();\n\t\tlocalTransactionControl.setVoidCallable(1);\n\n\t\tconnection.close();\n\t\tconnectionControl.setVoidCallable(1);\n\n\t\tconnectionFactoryControl.replay();\n\t\tconnectionControl.replay();\n\t\tlocalTransactionControl.replay();\n\t\tinteractionControl.replay();\n\n\t\torg.springframework.jca.cci.connection.CciLocalTransactionManager tm = new org.springframework.jca.cci.connection.CciLocalTransactionManager();\n\t\ttm.setConnectionFactory(connectionFactory);\n\t\tTransactionTemplate tt = new TransactionTemplate(tm);\n\n\t\ttt.execute(new TransactionCallbackWithoutResult() {\n\t\t\tprotected void doInTransactionWithoutResult(TransactionStatus status) {\n\t\t\t\tassertTrue(\"Has thread connection\", TransactionSynchronizationManager.hasResource(connectionFactory));\n\t\t\t\tCciTemplate ct = new CciTemplate(connectionFactory);\n\t\t\t\tct.execute(interactionSpec, record, record);\n\t\t\t}\n\t\t});\n\n\t\tconnectionFactoryControl.verify();\n\t\tconnectionControl.verify();\n\t\tinteractionControl.verify();\n\t\tlocalTransactionControl.verify();\n\t}","id":16171,"modified_method":"/**\n\t * Test if a transaction ( begin / commit ) is executed on the\n\t * LocalTransaction when CciLocalTransactionManager is specified as\n\t * transaction manager.\n\t */\n\t@Test\n\tpublic void testLocalTransactionCommit() throws ResourceException {\n\t\tfinal ConnectionFactory connectionFactory = createMock(ConnectionFactory.class);\n\t\tConnection connection = createMock(Connection.class);\n\t\tInteraction interaction = createMock(Interaction.class);\n\t\tLocalTransaction localTransaction = createMock(LocalTransaction.class);\n\t\tfinal Record record = createMock(Record.class);\n\t\tfinal InteractionSpec interactionSpec = createMock(InteractionSpec.class);\n\n\t\texpect(connectionFactory.getConnection()).andReturn(connection);\n\n\t\texpect(connection.getLocalTransaction()).andReturn(localTransaction);\n\n\t\tlocalTransaction.begin();\n\n\t\texpect(connection.createInteraction()).andReturn(interaction);\n\n\t\texpect(interaction.execute(interactionSpec, record, record)).andReturn(true);\n\n\t\tinteraction.close();\n\n\t\texpect(connection.getLocalTransaction()).andReturn(localTransaction);\n\n\t\tlocalTransaction.commit();\n\n\t\tconnection.close();\n\n\t\treplay(connectionFactory, connection, localTransaction, interaction, record);\n\n\t\torg.springframework.jca.cci.connection.CciLocalTransactionManager tm = new org.springframework.jca.cci.connection.CciLocalTransactionManager();\n\t\ttm.setConnectionFactory(connectionFactory);\n\t\tTransactionTemplate tt = new TransactionTemplate(tm);\n\n\t\ttt.execute(new TransactionCallbackWithoutResult() {\n\t\t\tprotected void doInTransactionWithoutResult(TransactionStatus status) {\n\t\t\t\tassertTrue(\"Has thread connection\", TransactionSynchronizationManager.hasResource(connectionFactory));\n\t\t\t\tCciTemplate ct = new CciTemplate(connectionFactory);\n\t\t\t\tct.execute(interactionSpec, record, record);\n\t\t\t}\n\t\t});\n\n\t\tverify(connectionFactory, connection, localTransaction, interaction, record);\n\t}","commit_id":"6285e61435a69f885747c2f122a37a8012526d86","url":"https://github.com/spring-projects/spring-framework"},{"original_method":"public void testTemplateExecuteInputGeneratorExtractorFalse() throws ResourceException, SQLException {\n\t\tMockControl connectionFactoryControl = MockControl.createStrictControl(ConnectionFactory.class);\n\t\tConnectionFactory connectionFactory = (ConnectionFactory) connectionFactoryControl.getMock();\n\t\tMockControl recordFactoryControl = MockControl.createStrictControl(RecordFactory.class);\n\t\tRecordFactory recordFactory = (RecordFactory) recordFactoryControl.getMock();\n\t\tMockControl connectionControl = MockControl.createStrictControl(Connection.class);\n\t\tConnection connection = (Connection) connectionControl.getMock();\n\t\tMockControl interactionControl = MockControl.createStrictControl(Interaction.class);\n\t\tInteraction interaction = (Interaction) interactionControl.getMock();\n\t\tMockControl generatorControl = MockControl.createStrictControl(RecordCreator.class);\n\t\tRecordCreator generator = (RecordCreator) generatorControl.getMock();\n\t\tMockControl extractorControl = MockControl.createStrictControl(RecordExtractor.class);\n\t\tRecordExtractor extractor = (RecordExtractor) extractorControl.getMock();\n\n\t\tMockControl inputRecordControl = MockControl.createStrictControl(Record.class);\n\t\tRecord inputRecord = (Record) inputRecordControl.getMock();\n\t\tMockControl outputRecordControl = MockControl.createStrictControl(Record.class);\n\t\tRecord outputRecord = (Record) outputRecordControl.getMock();\n\n\t\tMockControl interactionSpecControl = MockControl.createStrictControl(InteractionSpec.class);\n\t\tInteractionSpec interactionSpec = (InteractionSpec) interactionSpecControl.getMock();\n\n\t\tObject obj = new Object();\n\n\t\tconnectionFactory.getRecordFactory();\n\t\tconnectionFactoryControl.setReturnValue(recordFactory, 1);\n\n\t\tconnectionFactory.getConnection();\n\t\tconnectionFactoryControl.setReturnValue(connection);\n\n\t\tconnection.createInteraction();\n\t\tconnectionControl.setReturnValue(interaction);\n\n\t\tgenerator.createRecord(recordFactory);\n\t\tgeneratorControl.setReturnValue(inputRecord);\n\n\t\tinteraction.execute(interactionSpec, inputRecord);\n\t\tinteractionControl.setReturnValue(outputRecord, 1);\n\n\t\textractor.extractData(outputRecord);\n\t\textractorControl.setReturnValue(obj);\n\n\t\tinteraction.close();\n\t\tinteractionControl.setVoidCallable(1);\n\n\t\tconnection.close();\n\t\tconnectionControl.setVoidCallable(1);\n\n\t\tconnectionFactoryControl.replay();\n\t\tconnectionControl.replay();\n\t\tinteractionControl.replay();\n\t\tgeneratorControl.replay();\n\t\textractorControl.replay();\n\n\t\tCciTemplate ct = new CciTemplate(connectionFactory);\n\t\tct.execute(interactionSpec, generator, extractor);\n\n\t\tconnectionFactoryControl.verify();\n\t\tconnectionControl.verify();\n\t\tinteractionControl.verify();\n\t\tgeneratorControl.verify();\n\t\textractorControl.verify();\n\t}","id":16172,"modified_method":"@Test\n\tpublic void testTemplateExecuteInputGeneratorExtractorFalse() throws ResourceException, SQLException {\n\t\tConnectionFactory connectionFactory = createMock(ConnectionFactory.class);\n\t\tRecordFactory recordFactory = createMock(RecordFactory.class);\n\t\tConnection connection = createMock(Connection.class);\n\t\tInteraction interaction = createMock(Interaction.class);\n\t\tRecordCreator generator = createMock(RecordCreator.class);\n\t\tRecordExtractor<?> extractor = createMock(RecordExtractor.class);\n\n\t\tRecord inputRecord = createMock(Record.class);\n\t\tRecord outputRecord = createMock(Record.class);\n\t\t\n\t\tInteractionSpec interactionSpec = createMock(InteractionSpec.class);\n\n\t\texpect(connectionFactory.getRecordFactory()).andReturn(recordFactory);\n\n\t\texpect(connectionFactory.getConnection()).andReturn(connection);\n\n\t\texpect(connection.createInteraction()).andReturn(interaction);\n\n\t\texpect(generator.createRecord(recordFactory)).andReturn(inputRecord);\n\n\t\texpect(interaction.execute(interactionSpec, inputRecord)).andReturn(outputRecord);\n\n\t\texpect(extractor.extractData(outputRecord)).andStubReturn(new Object());\n\n\t\tinteraction.close();\n\n\t\tconnection.close();\n\n\t\treplay(connectionFactory, connection, interaction, generator, extractor);\n\n\t\tCciTemplate ct = new CciTemplate(connectionFactory);\n\t\tct.execute(interactionSpec, generator, extractor);\n\n\t\tverify(connectionFactory, connection, interaction, generator, extractor);\n\t}","commit_id":"6285e61435a69f885747c2f122a37a8012526d86","url":"https://github.com/spring-projects/spring-framework"},{"original_method":"public void testTemplateExecuteInputOutput() throws ResourceException {\n\t\tMockControl connectionFactoryControl = MockControl.createStrictControl(ConnectionFactory.class);\n\t\tConnectionFactory connectionFactory = (ConnectionFactory) connectionFactoryControl.getMock();\n\t\tMockControl connectionControl = MockControl.createStrictControl(Connection.class);\n\t\tConnection connection = (Connection) connectionControl.getMock();\n\t\tMockControl interactionControl = MockControl.createStrictControl(Interaction.class);\n\t\tInteraction interaction = (Interaction) interactionControl.getMock();\n\n\t\tMockControl inputRecordControl = MockControl.createStrictControl(Record.class);\n\t\tRecord inputRecord = (Record) inputRecordControl.getMock();\n\t\tMockControl outputRecordControl = MockControl.createStrictControl(Record.class);\n\t\tRecord outputRecord = (Record) outputRecordControl.getMock();\n\n\t\tMockControl interactionSpecControl = MockControl.createStrictControl(InteractionSpec.class);\n\t\tInteractionSpec interactionSpec = (InteractionSpec) interactionSpecControl.getMock();\n\n\t\tconnectionFactory.getConnection();\n\t\tconnectionFactoryControl.setReturnValue(connection, 1);\n\n\t\tconnection.createInteraction();\n\t\tconnectionControl.setReturnValue(interaction, 1);\n\n\t\tinteraction.execute(interactionSpec, inputRecord, outputRecord);\n\t\tinteractionControl.setReturnValue(true, 1);\n\n\t\tinteraction.close();\n\t\tinteractionControl.setVoidCallable(1);\n\n\t\tconnection.close();\n\t\tconnectionControl.setVoidCallable(1);\n\n\t\tconnectionFactoryControl.replay();\n\t\tconnectionControl.replay();\n\t\tinteractionControl.replay();\n\n\t\tCciTemplate ct = new CciTemplate(connectionFactory);\n\t\tct.execute(interactionSpec, inputRecord, outputRecord);\n\n\t\tconnectionFactoryControl.verify();\n\t\tconnectionControl.verify();\n\t\tinteractionControl.verify();\n\t}","id":16173,"modified_method":"@Test\n\tpublic void testTemplateExecuteInputOutput() throws ResourceException {\n\t\tConnectionFactory connectionFactory = createMock(ConnectionFactory.class);\n\t\tConnection connection = createMock(Connection.class);\n\t\tInteraction interaction = createMock(Interaction.class);\n\n\t\tRecord inputRecord = createMock(Record.class);\n\t\tRecord outputRecord = createMock(Record.class);\n\n\t\tInteractionSpec interactionSpec = createMock(InteractionSpec.class);\n\n\t\texpect(connectionFactory.getConnection()).andReturn(connection);\n\n\t\texpect(connection.createInteraction()).andReturn(interaction);\n\n\t\texpect(interaction.execute(interactionSpec, inputRecord, outputRecord)).andReturn(true);\n\n\t\tinteraction.close();\n\n\t\tconnection.close();\n\n\t\treplay(connectionFactory, connection, interaction);\n\n\t\tCciTemplate ct = new CciTemplate(connectionFactory);\n\t\tct.execute(interactionSpec, inputRecord, outputRecord);\n\n\t\tverify(connectionFactory, connection, interaction);\n\t}","commit_id":"6285e61435a69f885747c2f122a37a8012526d86","url":"https://github.com/spring-projects/spring-framework"},{"original_method":"public void testTemplateExecuteInputExtractorFalse() throws ResourceException, SQLException {\n\t\tMockControl connectionFactoryControl = MockControl.createStrictControl(ConnectionFactory.class);\n\t\tConnectionFactory connectionFactory = (ConnectionFactory) connectionFactoryControl.getMock();\n\t\tMockControl connectionControl = MockControl.createStrictControl(Connection.class);\n\t\tConnection connection = (Connection) connectionControl.getMock();\n\t\tMockControl interactionControl = MockControl.createStrictControl(Interaction.class);\n\t\tInteraction interaction = (Interaction) interactionControl.getMock();\n\t\tMockControl extractorControl = MockControl.createStrictControl(RecordExtractor.class);\n\t\tRecordExtractor extractor = (RecordExtractor) extractorControl.getMock();\n\n\t\tMockControl inputRecordControl = MockControl.createStrictControl(Record.class);\n\t\tRecord inputRecord = (Record) inputRecordControl.getMock();\n\t\tMockControl outputRecordControl = MockControl.createStrictControl(Record.class);\n\t\tRecord outputRecord = (Record) outputRecordControl.getMock();\n\n\t\tMockControl interactionSpecControl = MockControl.createStrictControl(InteractionSpec.class);\n\t\tInteractionSpec interactionSpec = (InteractionSpec) interactionSpecControl.getMock();\n\n\t\tObject obj = new Object();\n\n\t\tconnectionFactory.getConnection();\n\t\tconnectionFactoryControl.setReturnValue(connection);\n\n\t\tconnection.createInteraction();\n\t\tconnectionControl.setReturnValue(interaction);\n\n\t\tinteraction.execute(interactionSpec, inputRecord);\n\t\tinteractionControl.setReturnValue(outputRecord, 1);\n\n\t\textractor.extractData(outputRecord);\n\t\textractorControl.setReturnValue(obj);\n\n\t\tinteraction.close();\n\t\tinteractionControl.setVoidCallable(1);\n\n\t\tconnection.close();\n\t\tconnectionControl.setVoidCallable(1);\n\n\t\tconnectionFactoryControl.replay();\n\t\tconnectionControl.replay();\n\t\tinteractionControl.replay();\n\t\textractorControl.replay();\n\n\t\tCciTemplate ct = new CciTemplate(connectionFactory);\n\t\tct.execute(interactionSpec, inputRecord, extractor);\n\n\t\tconnectionFactoryControl.verify();\n\t\tconnectionControl.verify();\n\t\tinteractionControl.verify();\n\t\textractorControl.verify();\n\t}","id":16174,"modified_method":"@Test\n\tpublic void testTemplateExecuteInputExtractorFalse() throws ResourceException, SQLException {\n\t\tConnectionFactory connectionFactory = createMock(ConnectionFactory.class);\n\t\tConnection connection = createMock(Connection.class);\n\t\tInteraction interaction = createMock(Interaction.class);\n\t\tRecordExtractor<?> extractor = createMock(RecordExtractor.class);\n\n\t\tRecord inputRecord = createMock(Record.class);\n\t\tRecord outputRecord = createMock(Record.class);\n\n\t\tInteractionSpec interactionSpec = createMock(InteractionSpec.class);\n\n\t\texpect(connectionFactory.getConnection()).andReturn(connection);\n\n\t\texpect(connection.createInteraction()).andReturn(interaction);\n\n\t\texpect(interaction.execute(interactionSpec, inputRecord)).andReturn(outputRecord);\n\n\t\texpect(extractor.extractData(outputRecord)).andStubReturn(new Object());\n\n\t\tinteraction.close();\n\n\t\tconnection.close();\n\n\t\treplay(connectionFactory, connection, interaction, extractor);\n\n\t\tCciTemplate ct = new CciTemplate(connectionFactory);\n\t\tct.execute(interactionSpec, inputRecord, extractor);\n\n\t\tverify(connectionFactory, connection, interaction, extractor);\n\t}","commit_id":"6285e61435a69f885747c2f122a37a8012526d86","url":"https://github.com/spring-projects/spring-framework"},{"original_method":"public void testTemplateExecuteInputGeneratorTrueWithCreator() throws ResourceException {\n\t\tMockControl connectionFactoryControl = MockControl.createStrictControl(ConnectionFactory.class);\n\t\tConnectionFactory connectionFactory = (ConnectionFactory) connectionFactoryControl.getMock();\n\t\tMockControl recordFactoryControl = MockControl.createStrictControl(RecordFactory.class);\n\t\tRecordFactory recordFactory = (RecordFactory) recordFactoryControl.getMock();\n\t\tMockControl connectionControl = MockControl.createStrictControl(Connection.class);\n\t\tConnection connection = (Connection) connectionControl.getMock();\n\t\tMockControl interactionControl = MockControl.createStrictControl(Interaction.class);\n\t\tInteraction interaction = (Interaction) interactionControl.getMock();\n\t\tMockControl generatorControl = MockControl.createStrictControl(RecordCreator.class);\n\t\tRecordCreator generator = (RecordCreator) generatorControl.getMock();\n\t\tMockControl creatorControl = MockControl.createStrictControl(RecordCreator.class);\n\t\tRecordCreator creator = (RecordCreator) creatorControl.getMock();\n\n\t\tMockControl inputRecordControl = MockControl.createStrictControl(Record.class);\n\t\tRecord inputRecord = (Record) inputRecordControl.getMock();\n\t\tMockControl outputRecordControl = MockControl.createStrictControl(Record.class);\n\t\tRecord outputRecord = (Record) outputRecordControl.getMock();\n\n\t\tMockControl interactionSpecControl = MockControl.createStrictControl(InteractionSpec.class);\n\t\tInteractionSpec interactionSpec = (InteractionSpec) interactionSpecControl.getMock();\n\n\t\tconnectionFactory.getRecordFactory();\n\t\tconnectionFactoryControl.setReturnValue(recordFactory, 1);\n\n\t\tgenerator.createRecord(recordFactory);\n\t\tgeneratorControl.setReturnValue(inputRecord);\n\n\t\tconnectionFactory.getConnection();\n\t\tconnectionFactoryControl.setReturnValue(connection);\n\n\t\tconnection.createInteraction();\n\t\tconnectionControl.setReturnValue(interaction);\n\n\t\tcreator.createRecord(recordFactory);\n\t\tcreatorControl.setReturnValue(outputRecord);\n\n\t\tconnectionFactory.getRecordFactory();\n\t\tconnectionFactoryControl.setReturnValue(recordFactory, 1);\n\n\t\tinteraction.execute(interactionSpec, inputRecord, outputRecord);\n\t\tinteractionControl.setReturnValue(true, 1);\n\n\t\tinteraction.close();\n\t\tinteractionControl.setVoidCallable(1);\n\n\t\tconnection.close();\n\t\tconnectionControl.setVoidCallable(1);\n\n\t\tconnectionFactoryControl.replay();\n\t\tconnectionControl.replay();\n\t\tinteractionControl.replay();\n\t\tgeneratorControl.replay();\n\t\tcreatorControl.replay();\n\n\t\tCciTemplate ct = new CciTemplate(connectionFactory);\n\t\tct.setOutputRecordCreator(creator);\n\t\tct.execute(interactionSpec, generator);\n\n\t\tconnectionFactoryControl.verify();\n\t\tconnectionControl.verify();\n\t\tinteractionControl.verify();\n\t\tgeneratorControl.verify();\n\t\tcreatorControl.verify();\n\t}","id":16175,"modified_method":"@Test\n\tpublic void testTemplateExecuteInputGeneratorTrueWithCreator() throws ResourceException {\n\t\tConnectionFactory connectionFactory = createMock(ConnectionFactory.class);\n\t\tRecordFactory recordFactory = createMock(RecordFactory.class);\n\t\tConnection connection = createMock(Connection.class);\n\t\tInteraction interaction = createMock(Interaction.class);\n\t\tRecordCreator generator = createMock(RecordCreator.class);\n\t\tRecordCreator creator = createMock(RecordCreator.class);\n\n\t\tRecord inputRecord = createMock(Record.class);\n\t\tRecord outputRecord = createMock(Record.class);\n\n\t\tInteractionSpec interactionSpec = createMock(InteractionSpec.class);\n\n\t\texpect(connectionFactory.getRecordFactory()).andReturn(recordFactory);\n\n\t\texpect(generator.createRecord(recordFactory)).andReturn(inputRecord);\n\n\t\texpect(connectionFactory.getConnection()).andReturn(connection);\n\n\t\texpect(connection.createInteraction()).andReturn(interaction);\n\n\t\texpect(creator.createRecord(recordFactory)).andReturn(outputRecord);\n\n\t\texpect(connectionFactory.getRecordFactory()).andReturn(recordFactory);\n\n\t\texpect(interaction.execute(interactionSpec, inputRecord, outputRecord)).andReturn(true);\n\n\t\tinteraction.close();\n\n\t\tconnection.close();\n\n\t\treplay(connectionFactory, connection, interaction, generator, creator);\n\n\t\tCciTemplate ct = new CciTemplate(connectionFactory);\n\t\tct.setOutputRecordCreator(creator);\n\t\tct.execute(interactionSpec, generator);\n\n\t\tverify(connectionFactory, connection, interaction, generator, creator);\n\t}","commit_id":"6285e61435a69f885747c2f122a37a8012526d86","url":"https://github.com/spring-projects/spring-framework"},{"original_method":"public void testTemplateExecuteConnectionCallback() throws ResourceException, SQLException {\n\t\tMockControl connectionFactoryControl = MockControl.createStrictControl(ConnectionFactory.class);\n\t\tConnectionFactory connectionFactory = (ConnectionFactory) connectionFactoryControl.getMock();\n\t\tMockControl connectionControl = MockControl.createStrictControl(Connection.class);\n\t\tConnection connection = (Connection) connectionControl.getMock();\n\t\tMockControl connectionCallbackControl = MockControl.createStrictControl(ConnectionCallback.class);\n\t\tConnectionCallback connectionCallback = (ConnectionCallback) connectionCallbackControl.getMock();\n\n\t\tObject obj = new Object();\n\n\t\tconnectionFactory.getConnection();\n\t\tconnectionFactoryControl.setReturnValue(connection);\n\n\t\tconnectionCallback.doInConnection(connection, connectionFactory);\n\t\tconnectionCallbackControl.setReturnValue(obj);\n\n\t\tconnection.close();\n\t\tconnectionControl.setVoidCallable(1);\n\n\t\tconnectionFactoryControl.replay();\n\t\tconnectionControl.replay();\n\t\tconnectionCallbackControl.replay();\n\n\t\tCciTemplate ct = new CciTemplate(connectionFactory);\n\t\tct.execute(connectionCallback);\n\n\t\tconnectionFactoryControl.verify();\n\t\tconnectionControl.verify();\n\t\tconnectionCallbackControl.verify();\n\t}","id":16176,"modified_method":"@Test\n\tpublic void testTemplateExecuteConnectionCallback() throws ResourceException, SQLException {\n\t\tConnectionFactory connectionFactory = createMock(ConnectionFactory.class);\n\t\tConnection connection = createMock(Connection.class);\n\t\tConnectionCallback<?> connectionCallback = createMock(ConnectionCallback.class);\n\n\t\texpect(connectionFactory.getConnection()).andReturn(connection);\n\n\t\texpect(connectionCallback.doInConnection(connection, connectionFactory)).andStubReturn(new Object());\n\n\t\tconnection.close();\n\n\t\treplay(connectionFactory, connection, connectionCallback);\n\n\t\tCciTemplate ct = new CciTemplate(connectionFactory);\n\t\tct.execute(connectionCallback);\n\n\t\tverify(connectionFactory, connection, connectionCallback);\n\t}","commit_id":"6285e61435a69f885747c2f122a37a8012526d86","url":"https://github.com/spring-projects/spring-framework"},{"original_method":"public void testTemplateExecuteInputGeneratorExtractorTrueWithCreator() throws ResourceException, SQLException {\n\t\tMockControl connectionFactoryControl = MockControl.createStrictControl(ConnectionFactory.class);\n\t\tConnectionFactory connectionFactory = (ConnectionFactory) connectionFactoryControl.getMock();\n\t\tMockControl recordFactoryControl = MockControl.createStrictControl(RecordFactory.class);\n\t\tRecordFactory recordFactory = (RecordFactory) recordFactoryControl.getMock();\n\t\tMockControl connectionControl = MockControl.createStrictControl(Connection.class);\n\t\tConnection connection = (Connection) connectionControl.getMock();\n\t\tMockControl interactionControl = MockControl.createStrictControl(Interaction.class);\n\t\tInteraction interaction = (Interaction) interactionControl.getMock();\n\t\tMockControl generatorControl = MockControl.createStrictControl(RecordCreator.class);\n\t\tRecordCreator generator = (RecordCreator) generatorControl.getMock();\n\t\tMockControl extractorControl = MockControl.createStrictControl(RecordExtractor.class);\n\t\tRecordExtractor extractor = (RecordExtractor) extractorControl.getMock();\n\t\tMockControl creatorControl = MockControl.createStrictControl(RecordCreator.class);\n\t\tRecordCreator creator = (RecordCreator) creatorControl.getMock();\n\n\t\tMockControl inputRecordControl = MockControl.createStrictControl(Record.class);\n\t\tRecord inputRecord = (Record) inputRecordControl.getMock();\n\t\tMockControl outputRecordControl = MockControl.createStrictControl(Record.class);\n\t\tRecord outputRecord = (Record) outputRecordControl.getMock();\n\n\t\tMockControl interactionSpecControl = MockControl.createStrictControl(InteractionSpec.class);\n\t\tInteractionSpec interactionSpec = (InteractionSpec) interactionSpecControl.getMock();\n\n\t\tObject obj = new Object();\n\n\t\tconnectionFactory.getRecordFactory();\n\t\tconnectionFactoryControl.setReturnValue(recordFactory, 1);\n\n\t\tconnectionFactory.getConnection();\n\t\tconnectionFactoryControl.setReturnValue(connection);\n\n\t\tconnection.createInteraction();\n\t\tconnectionControl.setReturnValue(interaction);\n\n\t\tcreator.createRecord(recordFactory);\n\t\tcreatorControl.setReturnValue(outputRecord);\n\n\t\tconnectionFactory.getRecordFactory();\n\t\tconnectionFactoryControl.setReturnValue(recordFactory, 1);\n\n\t\tgenerator.createRecord(recordFactory);\n\t\tgeneratorControl.setReturnValue(inputRecord);\n\n\t\tinteraction.execute(interactionSpec, inputRecord, outputRecord);\n\t\tinteractionControl.setReturnValue(true, 1);\n\n\t\textractor.extractData(outputRecord);\n\t\textractorControl.setReturnValue(obj);\n\n\t\tinteraction.close();\n\t\tinteractionControl.setVoidCallable(1);\n\n\t\tconnection.close();\n\t\tconnectionControl.setVoidCallable(1);\n\n\t\tconnectionFactoryControl.replay();\n\t\tconnectionControl.replay();\n\t\tinteractionControl.replay();\n\t\tgeneratorControl.replay();\n\t\textractorControl.replay();\n\t\tcreatorControl.replay();\n\n\t\tCciTemplate ct = new CciTemplate(connectionFactory);\n\t\tct.setOutputRecordCreator(creator);\n\t\tassertEquals(obj, ct.execute(interactionSpec, generator, extractor));\n\n\t\tconnectionFactoryControl.verify();\n\t\tconnectionControl.verify();\n\t\tinteractionControl.verify();\n\t\tgeneratorControl.verify();\n\t\textractorControl.verify();\n\t\tcreatorControl.verify();\n\t}","id":16177,"modified_method":"@Test\n\tpublic void testTemplateExecuteInputGeneratorExtractorTrueWithCreator() throws ResourceException, SQLException {\n\t\tConnectionFactory connectionFactory = createMock(ConnectionFactory.class);\n\t\tRecordFactory recordFactory = createMock(RecordFactory.class);\n\t\tConnection connection = createMock(Connection.class);\n\t\tInteraction interaction = createMock(Interaction.class);\n\t\tRecordCreator generator = createMock(RecordCreator.class);\n\t\tRecordExtractor<?> extractor = createMock(RecordExtractor.class);\n\t\tRecordCreator creator = createMock(RecordCreator.class);\n\n\t\tRecord inputRecord = createMock(Record.class);\n\t\tRecord outputRecord = createMock(Record.class);\n\t\t\n\t\tObject obj = new Object();\n\t\t\n\t\tInteractionSpec interactionSpec = createMock(InteractionSpec.class);\n\n\t\texpect(connectionFactory.getRecordFactory()).andReturn(recordFactory);\n\n\t\texpect(connectionFactory.getConnection()).andReturn(connection);\n\n\t\texpect(connection.createInteraction()).andReturn(interaction);\n\n\t\texpect(creator.createRecord(recordFactory)).andReturn(outputRecord);\n\n\t\texpect(connectionFactory.getRecordFactory()).andReturn(recordFactory);\n\n\t\texpect(generator.createRecord(recordFactory)).andReturn(inputRecord);\n\n\t\texpect(interaction.execute(interactionSpec, inputRecord, outputRecord)).andReturn(true);\n\n\t\texpect(extractor.extractData(outputRecord)).andStubReturn(obj);\n\n\t\tinteraction.close();\n\n\t\tconnection.close();\n\n\t\treplay(connectionFactory, connection, interaction, generator, creator, extractor);\n\n\t\tCciTemplate ct = new CciTemplate(connectionFactory);\n\t\tct.setOutputRecordCreator(creator);\n\t\tassertEquals(obj, ct.execute(interactionSpec, generator, extractor));\n\n\t\tverify(connectionFactory, connection, interaction, generator, creator, extractor);\n\t}","commit_id":"6285e61435a69f885747c2f122a37a8012526d86","url":"https://github.com/spring-projects/spring-framework"},{"original_method":"public void testTemplateExecuteInputTrueTrue() throws ResourceException {\n\t\tMockControl connectionFactoryControl = MockControl.createStrictControl(ConnectionFactory.class);\n\t\tConnectionFactory connectionFactory = (ConnectionFactory) connectionFactoryControl.getMock();\n\t\tMockControl connectionControl = MockControl.createStrictControl(Connection.class);\n\t\tConnection connection = (Connection) connectionControl.getMock();\n\t\tMockControl interactionControl = MockControl.createStrictControl(Interaction.class);\n\t\tInteraction interaction = (Interaction) interactionControl.getMock();\n\n\t\tMockControl inputOutputRecordControl = MockControl.createStrictControl(Record.class);\n\t\tRecord inputOutputRecord = (Record) inputOutputRecordControl.getMock();\n\n\t\tMockControl interactionSpecControl = MockControl.createStrictControl(InteractionSpec.class);\n\t\tInteractionSpec interactionSpec = (InteractionSpec) interactionSpecControl.getMock();\n\n\t\tconnectionFactory.getConnection();\n\t\tconnectionFactoryControl.setReturnValue(connection);\n\n\t\tconnection.createInteraction();\n\t\tconnectionControl.setReturnValue(interaction);\n\n\t\tinteraction.execute(interactionSpec, inputOutputRecord, inputOutputRecord);\n\t\tinteractionControl.setReturnValue(true, 1);\n\n\t\tinteraction.close();\n\t\tinteractionControl.setVoidCallable(1);\n\n\t\tconnection.close();\n\t\tconnectionControl.setVoidCallable(1);\n\n\t\tconnectionFactoryControl.replay();\n\t\tconnectionControl.replay();\n\t\tinteractionControl.replay();\n\n\t\tCciTemplate ct = new CciTemplate(connectionFactory);\n\t\tct.execute(interactionSpec, inputOutputRecord, inputOutputRecord);\n\n\t\tconnectionFactoryControl.verify();\n\t\tconnectionControl.verify();\n\t\tinteractionControl.verify();\n\t}","id":16178,"modified_method":"@Test\n\tpublic void testTemplateExecuteInputTrueTrue() throws ResourceException {\n\t\tConnectionFactory connectionFactory = createMock(ConnectionFactory.class);\n\t\tConnection connection = createMock(Connection.class);\n\t\tInteraction interaction = createMock(Interaction.class);\n\n\t\tRecord inputOutputRecord = createMock(Record.class);\n\n\t\tInteractionSpec interactionSpec = createMock(InteractionSpec.class);\n\n\t\texpect(connectionFactory.getConnection()).andReturn(connection);\n\n\t\texpect(connection.createInteraction()).andReturn(interaction);\n\n\t\texpect(interaction.execute(interactionSpec, inputOutputRecord, inputOutputRecord)).andReturn(true);\n\n\t\tinteraction.close();\n\t\t\n\t\tconnection.close();\n\n\t\treplay(connectionFactory, connection, interaction);\n\n\t\tCciTemplate ct = new CciTemplate(connectionFactory);\n\t\tct.execute(interactionSpec, inputOutputRecord, inputOutputRecord);\n\n\t\tverify(connectionFactory, connection, interaction);\n\t}","commit_id":"6285e61435a69f885747c2f122a37a8012526d86","url":"https://github.com/spring-projects/spring-framework"},{"original_method":"public void testTemplateExecuteInputExtractorTrueWithCreator() throws ResourceException, SQLException {\n\t\tMockControl connectionFactoryControl = MockControl.createStrictControl(ConnectionFactory.class);\n\t\tConnectionFactory connectionFactory = (ConnectionFactory) connectionFactoryControl.getMock();\n\t\tMockControl recordFactoryControl = MockControl.createStrictControl(RecordFactory.class);\n\t\tRecordFactory recordFactory = (RecordFactory) recordFactoryControl.getMock();\n\t\tMockControl connectionControl = MockControl.createStrictControl(Connection.class);\n\t\tConnection connection = (Connection) connectionControl.getMock();\n\t\tMockControl interactionControl = MockControl.createStrictControl(Interaction.class);\n\t\tInteraction interaction = (Interaction) interactionControl.getMock();\n\t\tMockControl extractorControl = MockControl.createStrictControl(RecordExtractor.class);\n\t\tRecordExtractor extractor = (RecordExtractor) extractorControl.getMock();\n\t\tMockControl creatorControl = MockControl.createStrictControl(RecordCreator.class);\n\t\tRecordCreator creator = (RecordCreator) creatorControl.getMock();\n\n\t\tMockControl inputRecordControl = MockControl.createStrictControl(Record.class);\n\t\tRecord inputRecord = (Record) inputRecordControl.getMock();\n\t\tMockControl outputRecordControl = MockControl.createStrictControl(Record.class);\n\t\tRecord outputRecord = (Record) outputRecordControl.getMock();\n\n\t\tMockControl interactionSpecControl = MockControl.createStrictControl(InteractionSpec.class);\n\t\tInteractionSpec interactionSpec = (InteractionSpec) interactionSpecControl.getMock();\n\n\t\tObject obj = new Object();\n\n\t\tconnectionFactory.getConnection();\n\t\tconnectionFactoryControl.setReturnValue(connection);\n\n\t\tconnection.createInteraction();\n\t\tconnectionControl.setReturnValue(interaction);\n\n\t\tconnectionFactory.getRecordFactory();\n\t\tconnectionFactoryControl.setReturnValue(recordFactory, 1);\n\n\t\tcreator.createRecord(recordFactory);\n\t\tcreatorControl.setReturnValue(outputRecord);\n\n\t\tinteraction.execute(interactionSpec, inputRecord, outputRecord);\n\t\tinteractionControl.setReturnValue(true, 1);\n\n\t\textractor.extractData(outputRecord);\n\t\textractorControl.setReturnValue(obj);\n\n\t\tinteraction.close();\n\t\tinteractionControl.setVoidCallable(1);\n\n\t\tconnection.close();\n\t\tconnectionControl.setVoidCallable(1);\n\n\t\tconnectionFactoryControl.replay();\n\t\tconnectionControl.replay();\n\t\tinteractionControl.replay();\n\t\textractorControl.replay();\n\t\tcreatorControl.replay();\n\n\t\tCciTemplate ct = new CciTemplate(connectionFactory);\n\t\tct.setOutputRecordCreator(creator);\n\t\tct.execute(interactionSpec, inputRecord, extractor);\n\n\t\tconnectionFactoryControl.verify();\n\t\tconnectionControl.verify();\n\t\tinteractionControl.verify();\n\t\textractorControl.verify();\n\t\tcreatorControl.verify();\n\t}","id":16179,"modified_method":"@Test\n\tpublic void testTemplateExecuteInputExtractorTrueWithCreator() throws ResourceException, SQLException {\n\t\tConnectionFactory connectionFactory = createMock(ConnectionFactory.class);\n\t\tRecordFactory recordFactory = createMock(RecordFactory.class);\n\t\tConnection connection = createMock(Connection.class);\n\t\tInteraction interaction = createMock(Interaction.class);\n\t\tRecordExtractor<?> extractor = createMock(RecordExtractor.class);\n\t\tRecordCreator creator = createMock(RecordCreator.class);\n\n\t\tRecord inputRecord = createMock(Record.class);\n\t\tRecord outputRecord = createMock(Record.class);\n\n\t\tInteractionSpec interactionSpec = createMock(InteractionSpec.class);\n\n\t\texpect(connectionFactory.getConnection()).andReturn(connection);\n\n\t\texpect(connection.createInteraction()).andReturn(interaction);\n\n\t\texpect(connectionFactory.getRecordFactory()).andReturn(recordFactory);\n\n\t\texpect(creator.createRecord(recordFactory)).andReturn(outputRecord);\n\n\t\texpect(interaction.execute(interactionSpec, inputRecord, outputRecord)).andReturn(true);\n\n\t\texpect(extractor.extractData(outputRecord)).andStubReturn(new Object());\n\n\t\tinteraction.close();\n\n\t\tconnection.close();\n\n\t\treplay(connectionFactory, connection, interaction, extractor, creator);\n\n\t\tCciTemplate ct = new CciTemplate(connectionFactory);\n\t\tct.setOutputRecordCreator(creator);\n\t\tct.execute(interactionSpec, inputRecord, extractor);\n\n\t\tverify(connectionFactory, connection, interaction, extractor, creator);\n\t}","commit_id":"6285e61435a69f885747c2f122a37a8012526d86","url":"https://github.com/spring-projects/spring-framework"},{"original_method":"public void testTemplateExecuteInputTrueTrueWithCreator() throws ResourceException {\n\t\tMockControl connectionFactoryControl = MockControl.createStrictControl(ConnectionFactory.class);\n\t\tConnectionFactory connectionFactory = (ConnectionFactory) connectionFactoryControl.getMock();\n\t\tMockControl connectionControl = MockControl.createStrictControl(Connection.class);\n\t\tConnection connection = (Connection) connectionControl.getMock();\n\t\tMockControl interactionControl = MockControl.createStrictControl(Interaction.class);\n\t\tInteraction interaction = (Interaction) interactionControl.getMock();\n\t\tMockControl creatorControl = MockControl.createStrictControl(RecordCreator.class);\n\t\tRecordCreator creator = (RecordCreator) creatorControl.getMock();\n\n\t\tMockControl inputOutputRecordControl = MockControl.createStrictControl(Record.class);\n\t\tRecord inputOutputRecord = (Record) inputOutputRecordControl.getMock();\n\n\t\tMockControl interactionSpecControl = MockControl.createStrictControl(InteractionSpec.class);\n\t\tInteractionSpec interactionSpec = (InteractionSpec) interactionSpecControl.getMock();\n\n\t\tconnectionFactory.getConnection();\n\t\tconnectionFactoryControl.setReturnValue(connection);\n\n\t\tconnection.createInteraction();\n\t\tconnectionControl.setReturnValue(interaction);\n\n\t\tinteraction.execute(interactionSpec, inputOutputRecord, inputOutputRecord);\n\t\tinteractionControl.setReturnValue(true, 1);\n\n\t\tinteraction.close();\n\t\tinteractionControl.setVoidCallable(1);\n\n\t\tconnection.close();\n\t\tconnectionControl.setVoidCallable(1);\n\n\t\tconnectionFactoryControl.replay();\n\t\tconnectionControl.replay();\n\t\tinteractionControl.replay();\n\t\tcreatorControl.replay();\n\n\t\tCciTemplate ct = new CciTemplate(connectionFactory);\n\t\tct.setOutputRecordCreator(creator);\n\t\tct.execute(interactionSpec, inputOutputRecord, inputOutputRecord);\n\n\t\tconnectionFactoryControl.verify();\n\t\tconnectionControl.verify();\n\t\tinteractionControl.verify();\n\t\tcreatorControl.verify();\n\t}","id":16180,"modified_method":"@Test\n\tpublic void testTemplateExecuteInputTrueTrueWithCreator() throws ResourceException {\n\t\tConnectionFactory connectionFactory = createMock(ConnectionFactory.class);\n\t\tConnection connection = createMock(Connection.class);\n\t\tInteraction interaction = createMock(Interaction.class);\n\t\tRecordCreator creator = createMock(RecordCreator.class);\n\n\t\tRecord inputOutputRecord = createMock(Record.class);\n\n\t\tInteractionSpec interactionSpec = createMock(InteractionSpec.class);\n\n\t\texpect(connectionFactory.getConnection()).andReturn(connection);\n\n\t\texpect(connection.createInteraction()).andReturn(interaction);\n\n\t\texpect(interaction.execute(interactionSpec, inputOutputRecord, inputOutputRecord)).andReturn(true);\n\n\t\tinteraction.close();\n\n\t\tconnection.close();\n\n\t\treplay(connectionFactory, connection, interaction, creator);\n\n\t\tCciTemplate ct = new CciTemplate(connectionFactory);\n\t\tct.setOutputRecordCreator(creator);\n\t\tct.execute(interactionSpec, inputOutputRecord, inputOutputRecord);\n\n\t\tverify(connectionFactory, connection, interaction, creator);\n\t}","commit_id":"6285e61435a69f885747c2f122a37a8012526d86","url":"https://github.com/spring-projects/spring-framework"},{"original_method":"public void testTemplateExecuteInputOutputResultsSetFalse() throws ResourceException, SQLException {\n\t\tMockControl connectionFactoryControl = MockControl.createStrictControl(ConnectionFactory.class);\n\t\tConnectionFactory connectionFactory = (ConnectionFactory) connectionFactoryControl.getMock();\n\t\tMockControl recordFactoryControl = MockControl.createStrictControl(RecordFactory.class);\n\t\tRecordFactory recordFactory = (RecordFactory) recordFactoryControl.getMock();\n\t\tMockControl connectionControl = MockControl.createStrictControl(Connection.class);\n\t\tConnection connection = (Connection) connectionControl.getMock();\n\t\tMockControl interactionControl = MockControl.createStrictControl(Interaction.class);\n\t\tInteraction interaction = (Interaction) interactionControl.getMock();\n\t\tMockControl recordControl = MockControl.createStrictControl(Record.class);\n\t\tRecord record = (Record) recordControl.getMock();\n\t\tMockControl resultsetControl = MockControl.createStrictControl(ResultSet.class);\n\t\tResultSet resultset = (ResultSet) resultsetControl.getMock();\n\t\tMockControl generatorControl = MockControl.createStrictControl(RecordCreator.class);\n\t\tRecordCreator generator = (RecordCreator) generatorControl.getMock();\n\t\tMockControl extractorControl = MockControl.createStrictControl(RecordExtractor.class);\n\t\tRecordExtractor extractor = (RecordExtractor) extractorControl.getMock();\n\n\t\tMockControl interactionSpecControl = MockControl.createStrictControl(InteractionSpec.class);\n\t\tInteractionSpec interactionSpec = (InteractionSpec) interactionSpecControl.getMock();\n\n\t\tObject obj = new Object();\n\n\t\tconnectionFactory.getRecordFactory();\n\t\tconnectionFactoryControl.setReturnValue(recordFactory, 1);\n\n\t\tconnectionFactory.getConnection();\n\t\tconnectionFactoryControl.setReturnValue(connection);\n\n\t\tconnection.createInteraction();\n\t\tconnectionControl.setReturnValue(interaction);\n\n\t\tgenerator.createRecord(recordFactory);\n\t\tgeneratorControl.setReturnValue(record);\n\n\t\tinteraction.execute(interactionSpec, record);\n\t\tinteractionControl.setReturnValue(resultset, 1);\n\n\t\textractor.extractData(resultset);\n\t\textractorControl.setReturnValue(obj);\n\n\t\tresultset.close();\n\t\tresultsetControl.setVoidCallable(1);\n\n\t\tinteraction.close();\n\t\tinteractionControl.setVoidCallable(1);\n\n\t\tconnection.close();\n\t\tconnectionControl.setVoidCallable(1);\n\n\t\tconnectionFactoryControl.replay();\n\t\tconnectionControl.replay();\n\t\tinteractionControl.replay();\n\t\tgeneratorControl.replay();\n\t\textractorControl.replay();\n\t\tresultsetControl.replay();\n\n\t\tCciTemplate ct = new CciTemplate(connectionFactory);\n\t\tct.execute(interactionSpec, generator, extractor);\n\n\t\tconnectionFactoryControl.verify();\n\t\tconnectionControl.verify();\n\t\tinteractionControl.verify();\n\t\tgeneratorControl.verify();\n\t\textractorControl.verify();\n\t\tresultsetControl.verify();\n\t}","id":16181,"modified_method":"@Test\n\tpublic void testTemplateExecuteInputOutputResultsSetFalse() throws ResourceException, SQLException {\n\t\tConnectionFactory connectionFactory = createMock(ConnectionFactory.class);\n\t\tRecordFactory recordFactory = createMock(RecordFactory.class);\n\t\tConnection connection = createMock(Connection.class);\n\t\tInteraction interaction = createMock(Interaction.class);\n\t\tRecord record = createMock(Record.class);\n\t\tResultSet resultset = createMock(ResultSet.class);\n\t\tRecordCreator generator = createMock(RecordCreator.class);\n\t\tRecordExtractor<?> extractor = createMock(RecordExtractor.class);\n\n\t\tInteractionSpec interactionSpec = createMock(InteractionSpec.class);\n\n\t\texpect(connectionFactory.getRecordFactory()).andReturn(recordFactory);\n\n\t\texpect(connectionFactory.getConnection()).andReturn(connection);\n\n\t\texpect(connection.createInteraction()).andReturn(interaction);\n\n\t\texpect(generator.createRecord(recordFactory)).andReturn(record);\n\n\t\texpect(interaction.execute(interactionSpec, record)).andReturn(resultset);\n\n\t\texpect(extractor.extractData(resultset)).andStubReturn(new Object());\n\n\t\tresultset.close();\n\n\t\tinteraction.close();\n\n\t\tconnection.close();\n\n\t\treplay(connectionFactory, connection, interaction, generator, extractor, resultset);\n\n\t\tCciTemplate ct = new CciTemplate(connectionFactory);\n\t\tct.execute(interactionSpec, generator, extractor);\n\n\t\tverify(connectionFactory, connection, interaction, generator, extractor, resultset);\n\t}","commit_id":"6285e61435a69f885747c2f122a37a8012526d86","url":"https://github.com/spring-projects/spring-framework"},{"original_method":"public void testCreateIndexedRecord() throws ResourceException {\n\t\tMockControl connectionFactoryControl = MockControl.createStrictControl(ConnectionFactory.class);\n\t\tConnectionFactory connectionFactory = (ConnectionFactory) connectionFactoryControl.getMock();\n\t\tMockControl recordFactoryControl = MockControl.createStrictControl(RecordFactory.class);\n\t\tRecordFactory recordFactory = (RecordFactory) recordFactoryControl.getMock();\n\t\tMockControl indexedRecordControl = MockControl.createStrictControl(IndexedRecord.class);\n\t\tIndexedRecord indexedRecord = (IndexedRecord) indexedRecordControl.getMock();\n\n\t\tconnectionFactory.getRecordFactory();\n\t\tconnectionFactoryControl.setReturnValue(recordFactory, 1);\n\n\t\trecordFactory.createIndexedRecord(\"name\");\n\t\trecordFactoryControl.setReturnValue(indexedRecord, 1);\n\n\t\tconnectionFactoryControl.replay();\n\t\trecordFactoryControl.replay();\n\n\t\tCciTemplate ct = new CciTemplate(connectionFactory);\n\t\tct.createIndexedRecord(\"name\");\n\n\t\tconnectionFactoryControl.verify();\n\t\trecordFactoryControl.verify();\n\t}","id":16182,"modified_method":"@Test\n\tpublic void testCreateIndexedRecord() throws ResourceException {\n\t\tConnectionFactory connectionFactory = createMock(ConnectionFactory.class);\n\t\tRecordFactory recordFactory = createMock(RecordFactory.class);\n\t\tIndexedRecord indexedRecord = createMock(IndexedRecord.class);\n\n\t\texpect(connectionFactory.getRecordFactory()).andReturn(recordFactory);\n\n\t\texpect(recordFactory.createIndexedRecord(\"name\")).andReturn(indexedRecord);\n\n\t\treplay(connectionFactory, recordFactory);\n\n\t\tCciTemplate ct = new CciTemplate(connectionFactory);\n\t\tct.createIndexedRecord(\"name\");\n\n\t\tverify(connectionFactory, recordFactory);\n\t}","commit_id":"6285e61435a69f885747c2f122a37a8012526d86","url":"https://github.com/spring-projects/spring-framework"},{"original_method":"public void testTemplateExecuteInteractionCallback() throws ResourceException, SQLException {\n\t\tMockControl connectionFactoryControl = MockControl.createStrictControl(ConnectionFactory.class);\n\t\tConnectionFactory connectionFactory = (ConnectionFactory) connectionFactoryControl.getMock();\n\t\tMockControl connectionControl = MockControl.createStrictControl(Connection.class);\n\t\tConnection connection = (Connection) connectionControl.getMock();\n\t\tMockControl interactionControl = MockControl.createStrictControl(Interaction.class);\n\t\tInteraction interaction = (Interaction) interactionControl.getMock();\n\t\tMockControl interactionCallbackControl = MockControl.createStrictControl(InteractionCallback.class);\n\t\tInteractionCallback interactionCallback = (InteractionCallback) interactionCallbackControl.getMock();\n\n\t\tObject obj = new Object();\n\n\t\tconnectionFactory.getConnection();\n\t\tconnectionFactoryControl.setReturnValue(connection);\n\n\t\tconnection.createInteraction();\n\t\tconnectionControl.setReturnValue(interaction);\n\n\t\tinteractionCallback.doInInteraction(interaction, connectionFactory);\n\t\tinteractionCallbackControl.setReturnValue(obj);\n\n\t\tinteraction.close();\n\t\tinteractionControl.setVoidCallable(1);\n\n\t\tconnection.close();\n\t\tconnectionControl.setVoidCallable(1);\n\n\t\tconnectionFactoryControl.replay();\n\t\tconnectionControl.replay();\n\t\tinteractionControl.replay();\n\t\tinteractionCallbackControl.replay();\n\n\t\tCciTemplate ct = new CciTemplate(connectionFactory);\n\t\tct.execute(interactionCallback);\n\n\t\tconnectionFactoryControl.verify();\n\t\tconnectionControl.verify();\n\t\tinteractionControl.verify();\n\t\tinteractionCallbackControl.verify();\n\t}","id":16183,"modified_method":"@Test\n\tpublic void testTemplateExecuteInteractionCallback() throws ResourceException, SQLException {\n\t\tConnectionFactory connectionFactory = createMock(ConnectionFactory.class);\n\t\tConnection connection = createMock(Connection.class);\n\t\tInteraction interaction = createMock(Interaction.class);\n\t\tInteractionCallback<?> interactionCallback = createMock(InteractionCallback.class);\n\n\t\texpect(connectionFactory.getConnection()).andReturn(connection);\n\n\t\texpect(connection.createInteraction()).andReturn(interaction);\n\n\t\texpect(interactionCallback.doInInteraction(interaction, connectionFactory)).andStubReturn(new Object());\n\n\t\tinteraction.close();\n\n\t\tconnection.close();\n\n\t\treplay(connectionFactory, connection, interaction, interactionCallback);\n\n\t\tCciTemplate ct = new CciTemplate(connectionFactory);\n\t\tct.execute(interactionCallback);\n\n\t\tverify(connectionFactory, connection, interaction, interactionCallback);\n\t}","commit_id":"6285e61435a69f885747c2f122a37a8012526d86","url":"https://github.com/spring-projects/spring-framework"},{"original_method":"public void testTemplateExecuteInputFalse() throws ResourceException {\n\t\tMockControl connectionFactoryControl = MockControl.createStrictControl(ConnectionFactory.class);\n\t\tConnectionFactory connectionFactory = (ConnectionFactory) connectionFactoryControl.getMock();\n\t\tMockControl connectionControl = MockControl.createStrictControl(Connection.class);\n\t\tConnection connection = (Connection) connectionControl.getMock();\n\t\tMockControl interactionControl = MockControl.createStrictControl(Interaction.class);\n\t\tInteraction interaction = (Interaction) interactionControl.getMock();\n\n\t\tMockControl inputRecordControl = MockControl.createStrictControl(Record.class);\n\t\tRecord inputRecord = (Record) inputRecordControl.getMock();\n\t\tMockControl outputRecordControl = MockControl.createStrictControl(Record.class);\n\t\tRecord outputRecord = (Record) outputRecordControl.getMock();\n\n\t\tMockControl interactionSpecControl = MockControl.createStrictControl(InteractionSpec.class);\n\t\tInteractionSpec interactionSpec = (InteractionSpec) interactionSpecControl.getMock();\n\n\t\tconnectionFactory.getConnection();\n\t\tconnectionFactoryControl.setReturnValue(connection);\n\n\t\tconnection.createInteraction();\n\t\tconnectionControl.setReturnValue(interaction);\n\n\t\tinteraction.execute(interactionSpec, inputRecord);\n\t\tinteractionControl.setReturnValue(outputRecord, 1);\n\n\t\tinteraction.close();\n\t\tinteractionControl.setVoidCallable(1);\n\n\t\tconnection.close();\n\t\tconnectionControl.setVoidCallable(1);\n\n\t\tconnectionFactoryControl.replay();\n\t\tconnectionControl.replay();\n\t\tinteractionControl.replay();\n\n\t\tCciTemplate ct = new CciTemplate(connectionFactory);\n\t\tct.execute(interactionSpec, inputRecord);\n\n\t\tconnectionFactoryControl.verify();\n\t\tconnectionControl.verify();\n\t\tinteractionControl.verify();\n\t}","id":16184,"modified_method":"@Test\n\tpublic void testTemplateExecuteInputFalse() throws ResourceException {\n\t\tConnectionFactory connectionFactory = createMock(ConnectionFactory.class);\n\t\tConnection connection = createMock(Connection.class);\n\t\tInteraction interaction = createMock(Interaction.class);\n\n\t\tRecord inputRecord = createMock(Record.class);\n\t\tRecord outputRecord = createMock(Record.class);\n\n\t\tInteractionSpec interactionSpec = createMock(InteractionSpec.class);\n\n\t\texpect(connectionFactory.getConnection()).andReturn(connection);\n\n\t\texpect(connection.createInteraction()).andReturn(interaction);\n\n\t\texpect(interaction.execute(interactionSpec, inputRecord)).andReturn(outputRecord);\n\n\t\tinteraction.close();\n\n\t\tconnection.close();\n\n\t\treplay(connectionFactory, connection, interaction);\n\n\t\tCciTemplate ct = new CciTemplate(connectionFactory);\n\t\tct.execute(interactionSpec, inputRecord);\n\n\t\tverify(connectionFactory, connection, interaction);\n\t}","commit_id":"6285e61435a69f885747c2f122a37a8012526d86","url":"https://github.com/spring-projects/spring-framework"},{"original_method":"public void testTemplateExecuteWithCreatorAndRecordFactoryNotSupported() throws ResourceException {\n\t\tMockControl connectionFactoryControl = MockControl.createStrictControl(ConnectionFactory.class);\n\t\tConnectionFactory connectionFactory = (ConnectionFactory) connectionFactoryControl.getMock();\n\t\tMockControl connectionControl = MockControl.createStrictControl(Connection.class);\n\t\tConnection connection = (Connection) connectionControl.getMock();\n\t\tMockControl interactionControl = MockControl.createStrictControl(Interaction.class);\n\t\tInteraction interaction = (Interaction) interactionControl.getMock();\n\n\t\tMockControl inputRecordControl = MockControl.createStrictControl(Record.class);\n\t\tRecord inputRecord = (Record) inputRecordControl.getMock();\n\t\tMockControl outputRecordControl = MockControl.createStrictControl(Record.class);\n\t\tfinal Record outputRecord = (Record) outputRecordControl.getMock();\n\n\t\tMockControl interactionSpecControl = MockControl.createStrictControl(InteractionSpec.class);\n\t\tInteractionSpec interactionSpec = (InteractionSpec) interactionSpecControl.getMock();\n\n\t\tconnectionFactory.getConnection();\n\t\tconnectionFactoryControl.setReturnValue(connection);\n\n\t\tconnectionFactory.getRecordFactory();\n\t\tconnectionFactoryControl.setThrowable(new NotSupportedException(\"not supported\"), 1);\n\n\t\tconnection.createInteraction();\n\t\tconnectionControl.setReturnValue(interaction);\n\n\t\tinteraction.execute(interactionSpec, inputRecord, outputRecord);\n\t\tinteractionControl.setReturnValue(true, 1);\n\n\t\tinteraction.close();\n\t\tinteractionControl.setVoidCallable(1);\n\n\t\tconnection.close();\n\t\tconnectionControl.setVoidCallable(1);\n\n\t\tconnectionFactoryControl.replay();\n\t\tconnectionControl.replay();\n\t\tinteractionControl.replay();\n\n\t\tCciTemplate ct = new CciTemplate(connectionFactory);\n\t\tct.setOutputRecordCreator(new RecordCreator() {\n\t\t\tpublic Record createRecord(RecordFactory recordFactory) {\n\t\t\t\tassertTrue(recordFactory instanceof NotSupportedRecordFactory);\n\t\t\t\treturn outputRecord;\n\t\t\t}\n\t\t});\n\t\tct.execute(interactionSpec, inputRecord);\n\n\t\tconnectionFactoryControl.verify();\n\t\tconnectionControl.verify();\n\t\tinteractionControl.verify();\n\t}","id":16185,"modified_method":"@Test\n\tpublic void testTemplateExecuteWithCreatorAndRecordFactoryNotSupported() throws ResourceException {\n\t\tConnectionFactory connectionFactory = createMock(ConnectionFactory.class);\n\t\tConnection connection = createMock(Connection.class);\n\t\tInteraction interaction = createMock(Interaction.class);\n\n\t\tRecord inputRecord = createMock(Record.class);\n\t\tfinal Record outputRecord = createMock(Record.class);\n\n\t\tInteractionSpec interactionSpec = createMock(InteractionSpec.class);\n\n\t\texpect(connectionFactory.getConnection()).andReturn(connection);\n\n\t\texpect(connectionFactory.getRecordFactory()).andThrow(new NotSupportedException(\"not supported\"));\n\n\t\texpect(connection.createInteraction()).andReturn(interaction);\n\n\t\texpect(interaction.execute(interactionSpec, inputRecord, outputRecord)).andReturn(true);\n\n\t\tinteraction.close();\n\n\t\tconnection.close();\n\n\t\treplay(connectionFactory, connection, interaction);\n\n\t\tCciTemplate ct = new CciTemplate(connectionFactory);\n\t\tct.setOutputRecordCreator(new RecordCreator() {\n\t\t\tpublic Record createRecord(RecordFactory recordFactory) {\n\t\t\t\tassertTrue(recordFactory instanceof NotSupportedRecordFactory);\n\t\t\t\treturn outputRecord;\n\t\t\t}\n\t\t});\n\t\tct.execute(interactionSpec, inputRecord);\n\n\t\tverify(connectionFactory, connection, interaction);\n\t}","commit_id":"6285e61435a69f885747c2f122a37a8012526d86","url":"https://github.com/spring-projects/spring-framework"},{"original_method":"public void testTemplateExecuteInputFalseTrue() throws ResourceException {\n\t\tMockControl connectionFactoryControl = MockControl.createStrictControl(ConnectionFactory.class);\n\t\tConnectionFactory connectionFactory = (ConnectionFactory) connectionFactoryControl.getMock();\n\t\tMockControl connectionControl = MockControl.createStrictControl(Connection.class);\n\t\tConnection connection = (Connection) connectionControl.getMock();\n\t\tMockControl interactionControl = MockControl.createStrictControl(Interaction.class);\n\t\tInteraction interaction = (Interaction) interactionControl.getMock();\n\n\t\tMockControl inputOutputRecordControl = MockControl.createStrictControl(Record.class);\n\t\tRecord inputOutputRecord = (Record) inputOutputRecordControl.getMock();\n\n\t\tMockControl interactionSpecControl = MockControl.createStrictControl(InteractionSpec.class);\n\t\tInteractionSpec interactionSpec = (InteractionSpec) interactionSpecControl.getMock();\n\n\t\tconnectionFactory.getConnection();\n\t\tconnectionFactoryControl.setReturnValue(connection);\n\n\t\tconnection.createInteraction();\n\t\tconnectionControl.setReturnValue(interaction);\n\n\t\tinteraction.execute(interactionSpec, inputOutputRecord);\n\t\tinteractionControl.setReturnValue(null, 1);\n\n\t\tinteraction.close();\n\t\tinteractionControl.setVoidCallable(1);\n\n\t\tconnection.close();\n\t\tconnectionControl.setVoidCallable(1);\n\n\t\tconnectionFactoryControl.replay();\n\t\tconnectionControl.replay();\n\t\tinteractionControl.replay();\n\n\t\tCciTemplate ct = new CciTemplate(connectionFactory);\n\t\tRecord tmpOutputRecord = (Record) ct.execute(interactionSpec, inputOutputRecord);\n\t\tassertNull(tmpOutputRecord);\n\n\t\tconnectionFactoryControl.verify();\n\t\tconnectionControl.verify();\n\t\tinteractionControl.verify();\n\t}","id":16186,"modified_method":"@Test\n\tpublic void testTemplateExecuteInputFalseTrue() throws ResourceException {\n\t\tConnectionFactory connectionFactory = createMock(ConnectionFactory.class);\n\t\tConnection connection = createMock(Connection.class);\n\t\tInteraction interaction = createMock(Interaction.class);\n\n\t\tRecord inputOutputRecord = createMock(Record.class);\n\n\t\tInteractionSpec interactionSpec = createMock(InteractionSpec.class);\n\n\t\texpect(connectionFactory.getConnection()).andReturn(connection);\n\n\t\texpect(connection.createInteraction()).andReturn(interaction);\n\n\t\texpect(interaction.execute(interactionSpec, inputOutputRecord)).andReturn(null);\n\n\t\tinteraction.close();\n\n\t\tconnection.close();\n\n\t\treplay(connectionFactory, connection, interaction);\n\n\t\tCciTemplate ct = new CciTemplate(connectionFactory);\n\t\tRecord tmpOutputRecord = (Record) ct.execute(interactionSpec, inputOutputRecord);\n\t\tassertNull(tmpOutputRecord);\n\n\t\tverify(connectionFactory, connection, interaction);\n\t}","commit_id":"6285e61435a69f885747c2f122a37a8012526d86","url":"https://github.com/spring-projects/spring-framework"},{"original_method":"public void testTemplateExecuteInputGeneratorFalse() throws ResourceException {\n\t\tMockControl connectionFactoryControl = MockControl.createStrictControl(ConnectionFactory.class);\n\t\tConnectionFactory connectionFactory = (ConnectionFactory) connectionFactoryControl.getMock();\n\t\tMockControl recordFactoryControl = MockControl.createStrictControl(RecordFactory.class);\n\t\tRecordFactory recordFactory = (RecordFactory) recordFactoryControl.getMock();\n\t\tMockControl connectionControl = MockControl.createStrictControl(Connection.class);\n\t\tConnection connection = (Connection) connectionControl.getMock();\n\t\tMockControl interactionControl = MockControl.createStrictControl(Interaction.class);\n\t\tInteraction interaction = (Interaction) interactionControl.getMock();\n\t\tMockControl generatorControl = MockControl.createStrictControl(RecordCreator.class);\n\t\tRecordCreator generator = (RecordCreator) generatorControl.getMock();\n\n\t\tMockControl inputRecordControl = MockControl.createStrictControl(Record.class);\n\t\tRecord inputRecord = (Record) inputRecordControl.getMock();\n\t\tMockControl outputRecordControl = MockControl.createStrictControl(Record.class);\n\t\tRecord outputRecord = (Record) outputRecordControl.getMock();\n\n\t\tMockControl interactionSpecControl = MockControl.createStrictControl(InteractionSpec.class);\n\t\tInteractionSpec interactionSpec = (InteractionSpec) interactionSpecControl.getMock();\n\n\t\tconnectionFactory.getRecordFactory();\n\t\tconnectionFactoryControl.setReturnValue(recordFactory, 1);\n\n\t\tconnectionFactory.getConnection();\n\t\tconnectionFactoryControl.setReturnValue(connection);\n\n\t\tconnection.createInteraction();\n\t\tconnectionControl.setReturnValue(interaction);\n\n\t\tgenerator.createRecord(recordFactory);\n\t\tgeneratorControl.setReturnValue(inputRecord);\n\n\t\tinteraction.execute(interactionSpec, inputRecord);\n\t\tinteractionControl.setReturnValue(outputRecord, 1);\n\n\t\tinteraction.close();\n\t\tinteractionControl.setVoidCallable(1);\n\n\t\tconnection.close();\n\t\tconnectionControl.setVoidCallable(1);\n\n\t\tconnectionFactoryControl.replay();\n\t\tconnectionControl.replay();\n\t\tinteractionControl.replay();\n\t\tgeneratorControl.replay();\n\n\t\tCciTemplate ct = new CciTemplate(connectionFactory);\n\t\tct.execute(interactionSpec, generator);\n\n\t\tconnectionFactoryControl.verify();\n\t\tconnectionControl.verify();\n\t\tinteractionControl.verify();\n\t\tgeneratorControl.verify();\n\t}","id":16187,"modified_method":"@Test\n\tpublic void testTemplateExecuteInputGeneratorFalse() throws ResourceException {\n\t\tConnectionFactory connectionFactory = createMock(ConnectionFactory.class);\n\t\tRecordFactory recordFactory = createMock(RecordFactory.class);\n\t\tConnection connection = createMock(Connection.class);\n\t\tInteraction interaction = createMock(Interaction.class);\n\t\tRecordCreator generator = createMock(RecordCreator.class);\n\n\t\tRecord inputRecord = createMock(Record.class);\n\t\tRecord outputRecord = createMock(Record.class);\n\n\t\tInteractionSpec interactionSpec = createMock(InteractionSpec.class);\n\n\t\texpect(connectionFactory.getRecordFactory()).andReturn(recordFactory);\n\t\t\n\t\texpect(connectionFactory.getConnection()).andReturn(connection);\n\n\t\texpect(connection.createInteraction()).andReturn(interaction);\n\n\t\texpect(generator.createRecord(recordFactory)).andReturn(inputRecord);\n\n\t\texpect(interaction.execute(interactionSpec, inputRecord)).andReturn(outputRecord);\n\n\t\tinteraction.close();\n\n\t\tconnection.close();\n\n\t\treplay(connectionFactory, connection, interaction, generator);\n\n\t\tCciTemplate ct = new CciTemplate(connectionFactory);\n\t\tct.execute(interactionSpec, generator);\n\n\t\tverify(connectionFactory, connection, interaction, generator);\n\t}","commit_id":"6285e61435a69f885747c2f122a37a8012526d86","url":"https://github.com/spring-projects/spring-framework"},{"original_method":"public void testTemplateExecuteInputTrueWithCreator() throws ResourceException {\n\t\tMockControl connectionFactoryControl = MockControl.createStrictControl(ConnectionFactory.class);\n\t\tConnectionFactory connectionFactory = (ConnectionFactory) connectionFactoryControl.getMock();\n\t\tMockControl recordFactoryControl = MockControl.createStrictControl(RecordFactory.class);\n\t\tRecordFactory recordFactory = (RecordFactory) recordFactoryControl.getMock();\n\t\tMockControl connectionControl = MockControl.createStrictControl(Connection.class);\n\t\tConnection connection = (Connection) connectionControl.getMock();\n\t\tMockControl interactionControl = MockControl.createStrictControl(Interaction.class);\n\t\tInteraction interaction = (Interaction) interactionControl.getMock();\n\t\tMockControl creatorControl = MockControl.createStrictControl(RecordCreator.class);\n\t\tRecordCreator creator = (RecordCreator) creatorControl.getMock();\n\n\t\tMockControl inputRecordControl = MockControl.createStrictControl(Record.class);\n\t\tRecord inputRecord = (Record) inputRecordControl.getMock();\n\t\tMockControl outputRecordControl = MockControl.createStrictControl(Record.class);\n\t\tRecord outputRecord = (Record) outputRecordControl.getMock();\n\n\t\tMockControl interactionSpecControl = MockControl.createStrictControl(InteractionSpec.class);\n\t\tInteractionSpec interactionSpec = (InteractionSpec) interactionSpecControl.getMock();\n\n\t\tconnectionFactory.getConnection();\n\t\tconnectionFactoryControl.setReturnValue(connection);\n\n\t\tconnectionFactory.getRecordFactory();\n\t\tconnectionFactoryControl.setReturnValue(recordFactory, 1);\n\n\t\tconnection.createInteraction();\n\t\tconnectionControl.setReturnValue(interaction);\n\n\t\tcreator.createRecord(recordFactory);\n\t\tcreatorControl.setReturnValue(outputRecord);\n\n\t\tinteraction.execute(interactionSpec, inputRecord, outputRecord);\n\t\tinteractionControl.setReturnValue(true, 1);\n\n\t\tinteraction.close();\n\t\tinteractionControl.setVoidCallable(1);\n\n\t\tconnection.close();\n\t\tconnectionControl.setVoidCallable(1);\n\n\t\tconnectionFactoryControl.replay();\n\t\tconnectionControl.replay();\n\t\tinteractionControl.replay();\n\t\tcreatorControl.replay();\n\n\t\tCciTemplate ct = new CciTemplate(connectionFactory);\n\t\tct.setOutputRecordCreator(creator);\n\t\tct.execute(interactionSpec, inputRecord);\n\n\t\tconnectionFactoryControl.verify();\n\t\tconnectionControl.verify();\n\t\tinteractionControl.verify();\n\t\tcreatorControl.verify();\n\t}","id":16188,"modified_method":"@Test\n\tpublic void testTemplateExecuteInputTrueWithCreator2() throws ResourceException {\n\t\tConnectionFactory connectionFactory = createMock(ConnectionFactory.class);\n\t\tRecordFactory recordFactory = createMock(RecordFactory.class);\n\t\tConnection connection = createMock(Connection.class);\n\t\tInteraction interaction = createMock(Interaction.class);\n\t\tRecordCreator creator = createMock(RecordCreator.class);\n\n\t\tRecord inputRecord = createMock(Record.class);\n\t\tfinal Record outputRecord = createMock(Record.class);\n\n\t\tInteractionSpec interactionSpec = createMock(InteractionSpec.class);\n\n\t\texpect(connectionFactory.getConnection()).andReturn(connection);\n\n\t\texpect(connectionFactory.getRecordFactory()).andReturn(recordFactory);\n\n\t\texpect(connection.createInteraction()).andReturn(interaction);\n\n\t\texpect(creator.createRecord(recordFactory)).andReturn(outputRecord);\n\n\t\texpect(interaction.execute(interactionSpec, inputRecord, outputRecord)).andReturn(true);\n\n\t\tinteraction.close();\n\n\t\tconnection.close();\n\n\t\treplay(connectionFactory, connection, interaction, creator);\n\n\t\tCciTemplate ct = new CciTemplate(connectionFactory);\n\t\tct.setOutputRecordCreator(creator);\n\t\tct.execute(interactionSpec, inputRecord);\n\n\t\tverify(connectionFactory, connection, interaction, creator);\n\t}","commit_id":"6285e61435a69f885747c2f122a37a8012526d86","url":"https://github.com/spring-projects/spring-framework"},{"original_method":"public void testCreateMappedRecord() throws ResourceException {\n\t\tMockControl connectionFactoryControl = MockControl.createStrictControl(ConnectionFactory.class);\n\t\tConnectionFactory connectionFactory = (ConnectionFactory) connectionFactoryControl.getMock();\n\t\tMockControl recordFactoryControl = MockControl.createStrictControl(RecordFactory.class);\n\t\tRecordFactory recordFactory = (RecordFactory) recordFactoryControl.getMock();\n\t\tMockControl mappedRecordControl = MockControl.createStrictControl(MappedRecord.class);\n\t\tMappedRecord mappedRecord = (MappedRecord) mappedRecordControl.getMock();\n\n\t\tconnectionFactory.getRecordFactory();\n\t\tconnectionFactoryControl.setReturnValue(recordFactory, 1);\n\n\t\trecordFactory.createMappedRecord(\"name\");\n\t\trecordFactoryControl.setReturnValue(mappedRecord, 1);\n\n\t\tconnectionFactoryControl.replay();\n\t\trecordFactoryControl.replay();\n\n\t\tCciTemplate ct = new CciTemplate(connectionFactory);\n\t\tct.createMappedRecord(\"name\");\n\n\t\tconnectionFactoryControl.verify();\n\t\trecordFactoryControl.verify();\n\t}","id":16189,"modified_method":"@Test\n\tpublic void testCreateMappedRecord() throws ResourceException {\n\t\tConnectionFactory connectionFactory = createMock(ConnectionFactory.class);\n\t\tRecordFactory recordFactory = createMock(RecordFactory.class);\n\t\tMappedRecord mappedRecord = createMock(MappedRecord.class);\n\n\t\texpect(connectionFactory.getRecordFactory()).andReturn(recordFactory);\n\n\t\texpect(recordFactory.createMappedRecord(\"name\")).andReturn(mappedRecord);\n\n\t\treplay(connectionFactory, recordFactory);\n\n\t\tCciTemplate ct = new CciTemplate(connectionFactory);\n\t\tct.createMappedRecord(\"name\");\n\n\t\tverify(connectionFactory, recordFactory);\n\t}","commit_id":"6285e61435a69f885747c2f122a37a8012526d86","url":"https://github.com/spring-projects/spring-framework"},{"original_method":"public void testTemplateExecuteInputOutputConnectionSpec() throws ResourceException {\n\t\tMockControl connectionFactoryControl = MockControl.createStrictControl(ConnectionFactory.class);\n\t\tConnectionFactory connectionFactory = (ConnectionFactory) connectionFactoryControl.getMock();\n\t\tMockControl connectionControl = MockControl.createStrictControl(Connection.class);\n\t\tConnection connection = (Connection) connectionControl.getMock();\n\t\tMockControl interactionControl = MockControl.createStrictControl(Interaction.class);\n\t\tInteraction interaction = (Interaction) interactionControl.getMock();\n\n\t\tMockControl inputRecordControl = MockControl.createStrictControl(Record.class);\n\t\tRecord inputRecord = (Record) inputRecordControl.getMock();\n\t\tMockControl outputRecordControl = MockControl.createStrictControl(Record.class);\n\t\tRecord outputRecord = (Record) outputRecordControl.getMock();\n\n\t\tMockControl connectionSpecControl = MockControl.createStrictControl(ConnectionSpec.class);\n\t\tConnectionSpec connectionSpec = (ConnectionSpec) connectionSpecControl.getMock();\n\t\tMockControl interactionSpecControl = MockControl.createStrictControl(InteractionSpec.class);\n\t\tInteractionSpec interactionSpec = (InteractionSpec) interactionSpecControl.getMock();\n\n\t\tconnectionFactory.getConnection(connectionSpec);\n\t\tconnectionFactoryControl.setReturnValue(connection, 1);\n\n\t\tconnection.createInteraction();\n\t\tconnectionControl.setReturnValue(interaction, 1);\n\n\t\tinteraction.execute(interactionSpec, inputRecord, outputRecord);\n\t\tinteractionControl.setReturnValue(true, 1);\n\n\t\tinteraction.close();\n\t\tinteractionControl.setVoidCallable(1);\n\n\t\tconnection.close();\n\t\tconnectionControl.setVoidCallable(1);\n\n\t\tconnectionFactoryControl.replay();\n\t\tconnectionControl.replay();\n\t\tinteractionControl.replay();\n\n\t\tConnectionSpecConnectionFactoryAdapter adapter = new ConnectionSpecConnectionFactoryAdapter();\n\t\tadapter.setTargetConnectionFactory(connectionFactory);\n\t\tadapter.setConnectionSpec(connectionSpec);\n\t\tCciTemplate ct = new CciTemplate(adapter);\n\t\tct.execute(interactionSpec, inputRecord, outputRecord);\n\n\t\tconnectionFactoryControl.verify();\n\t\tconnectionControl.verify();\n\t\tinteractionControl.verify();\n\t}","id":16190,"modified_method":"@Test\n\tpublic void testTemplateExecuteInputOutputConnectionSpec() throws ResourceException {\n\t\tConnectionFactory connectionFactory = createMock(ConnectionFactory.class);\n\t\tConnectionSpec connectionSpec = createMock(ConnectionSpec.class);\n\t\tConnection connection = createMock(Connection.class);\n\t\tInteraction interaction = createMock(Interaction.class);\n\n\t\tRecord inputRecord = createMock(Record.class);\n\t\tRecord outputRecord = createMock(Record.class);\n\t\t\n\t\tInteractionSpec interactionSpec = createMock(InteractionSpec.class);\n\t\t\n\n\t\texpect(connectionFactory.getConnection(connectionSpec)).andReturn(connection);\n\n\t\texpect(connection.createInteraction()).andReturn(interaction);\n\n\t\texpect(interaction.execute(interactionSpec, inputRecord, outputRecord)).andReturn(true);\n\n\t\tinteraction.close();\n\n\t\tconnection.close();\n\n\t\treplay(connectionFactory, connection, interaction);\n\n\t\tConnectionSpecConnectionFactoryAdapter adapter = new ConnectionSpecConnectionFactoryAdapter();\n\t\tadapter.setTargetConnectionFactory(connectionFactory);\n\t\tadapter.setConnectionSpec(connectionSpec);\n\t\tCciTemplate ct = new CciTemplate(adapter);\n\t\tct.execute(interactionSpec, inputRecord, outputRecord);\n\n\t\tverify(connectionFactory, connection, interaction);\n\t}","commit_id":"6285e61435a69f885747c2f122a37a8012526d86","url":"https://github.com/spring-projects/spring-framework"},{"original_method":"public void testSimpleRecordOperation() throws ResourceException {\n\t\tMockControl connectionFactoryControl = MockControl.createControl(ConnectionFactory.class);\n\t\tConnectionFactory connectionFactory = (ConnectionFactory) connectionFactoryControl.getMock();\n\t\tMockControl connectionControl = MockControl.createControl(Connection.class);\n\t\tConnection connection = (Connection) connectionControl.getMock();\n\t\tMockControl interactionControl = MockControl.createControl(Interaction.class);\n\t\tInteraction interaction = (Interaction) interactionControl.getMock();\n\n\t\tMockControl inputRecordControl = MockControl.createControl(Record.class);\n\t\tRecord inputRecord = (Record) inputRecordControl.getMock();\n\t\tMockControl outputRecordControl = MockControl.createControl(Record.class);\n\t\tRecord outputRecord = (Record) outputRecordControl.getMock();\n\n\t\tMockControl interactionSpecControl = MockControl.createControl(InteractionSpec.class);\n\t\tInteractionSpec interactionSpec = (InteractionSpec) interactionSpecControl.getMock();\n\n\t\tSimpleRecordOperation query = new SimpleRecordOperation(connectionFactory, interactionSpec);\n\n\t\tconnectionFactory.getConnection();\n\t\tconnectionFactoryControl.setReturnValue(connection);\n\n\t\tconnection.createInteraction();\n\t\tconnectionControl.setReturnValue(interaction);\n\n\t\tinteraction.execute(interactionSpec, inputRecord);\n\t\tinteractionControl.setReturnValue(outputRecord, 1);\n\n\t\tinteraction.close();\n\t\tinteractionControl.setVoidCallable(1);\n\n\t\tconnection.close();\n\t\tconnectionControl.setVoidCallable(1);\n\n\t\tconnectionFactoryControl.replay();\n\t\tconnectionControl.replay();\n\t\tinteractionControl.replay();\n\n\t\tquery.execute(inputRecord);\n\n\t\tconnectionFactoryControl.verify();\n\t\tconnectionControl.verify();\n\t\tinteractionControl.verify();\n\t}","id":16191,"modified_method":"@Test\n\tpublic void testSimpleRecordOperation() throws ResourceException {\n\t\tConnectionFactory connectionFactory = createMock(ConnectionFactory.class);\n\t\tConnection connection = createMock(Connection.class);\n\t\tInteraction interaction = createMock(Interaction.class);\n\n\t\tRecord inputRecord = createMock(Record.class);\n\t\tRecord outputRecord = createMock(Record.class);\n\n\t\tInteractionSpec interactionSpec = createMock(InteractionSpec.class);\n\n\t\tSimpleRecordOperation query = new SimpleRecordOperation(connectionFactory, interactionSpec);\n\n\t\texpect(connectionFactory.getConnection()).andReturn(connection);\n\n\t\texpect(connection.createInteraction()).andReturn(interaction);\n\n\t\texpect(interaction.execute(interactionSpec, inputRecord)).andReturn(outputRecord);\n\n\t\tinteraction.close();\n\n\t\tconnection.close();\n\n\t\treplay(connectionFactory, connection, interaction);\n\n\t\tquery.execute(inputRecord);\n\n\t\tverify(connectionFactory, connection, interaction);\n\t}","commit_id":"6285e61435a69f885747c2f122a37a8012526d86","url":"https://github.com/spring-projects/spring-framework"},{"original_method":"public void testMappingRecordOperationWithOutputRecordCreator() throws ResourceException {\n\t\tMockControl connectionFactoryControl = MockControl.createControl(ConnectionFactory.class);\n\t\tfinal ConnectionFactory connectionFactory = (ConnectionFactory) connectionFactoryControl.getMock();\n\t\tMockControl recordFactoryControl = MockControl.createStrictControl(RecordFactory.class);\n\t\tRecordFactory recordFactory = (RecordFactory) recordFactoryControl.getMock();\n\t\tMockControl connectionControl = MockControl.createControl(Connection.class);\n\t\tConnection connection = (Connection) connectionControl.getMock();\n\t\tMockControl interactionControl = MockControl.createControl(Interaction.class);\n\t\tInteraction interaction = (Interaction) interactionControl.getMock();\n\n\t\tMockControl inputRecordControl = MockControl.createControl(Record.class);\n\t\tRecord inputRecord = (Record) inputRecordControl.getMock();\n\t\tMockControl outputRecordControl = MockControl.createControl(Record.class);\n\t\tRecord outputRecord = (Record) outputRecordControl.getMock();\n\t\tMockControl outputCreatorControl = MockControl.createControl(RecordCreator.class);\n\t\tRecordCreator outputCreator = (RecordCreator) outputCreatorControl.getMock();\n\n\t\tMockControl interactionSpecControl = MockControl.createControl(InteractionSpec.class);\n\t\tInteractionSpec interactionSpec = (InteractionSpec) interactionSpecControl.getMock();\n\n\t\tMockControl callDetectorControl = MockControl.createControl(QueryCallDetector.class);\n\t\tQueryCallDetector callDetector = (QueryCallDetector) callDetectorControl.getMock();\n\n\t\tMappingRecordOperationImpl query = new MappingRecordOperationImpl(connectionFactory, interactionSpec);\n\t\tquery.setOutputRecordCreator(outputCreator);\n\t\tquery.setCallDetector(callDetector);\n\n\t\tObject inObj = new Object();\n\t\tObject outObj = new Object();\n\n\t\tconnectionFactory.getRecordFactory();\n\t\tconnectionFactoryControl.setReturnValue(recordFactory, 1);\n\n\t\tcallDetector.callCreateInputRecord(recordFactory, inObj);\n\t\tcallDetectorControl.setReturnValue(inputRecord, 1);\n\n\t\tconnectionFactory.getConnection();\n\t\tconnectionFactoryControl.setReturnValue(connection, 1);\n\n\t\tconnection.createInteraction();\n\t\tconnectionControl.setReturnValue(interaction, 1);\n\n\t\tconnectionFactory.getRecordFactory();\n\t\tconnectionFactoryControl.setReturnValue(recordFactory, 1);\n\n\t\toutputCreator.createRecord(recordFactory);\n\t\toutputCreatorControl.setReturnValue(outputRecord, 1);\n\n\t\tinteraction.execute(interactionSpec, inputRecord, outputRecord);\n\t\tinteractionControl.setReturnValue(true, 1);\n\n\t\tcallDetector.callExtractOutputData(outputRecord);\n\t\tcallDetectorControl.setReturnValue(outObj, 1);\n\n\t\tinteraction.close();\n\t\tinteractionControl.setVoidCallable(1);\n\n\t\tconnection.close();\n\t\tconnectionControl.setVoidCallable(1);\n\n\t\tconnectionFactoryControl.replay();\n\t\tconnectionControl.replay();\n\t\tinteractionControl.replay();\n\t\toutputCreatorControl.replay();\n\t\tcallDetectorControl.replay();\n\n\t\tassertSame(outObj, query.execute(inObj));\n\n\t\tconnectionFactoryControl.verify();\n\t\tconnectionControl.verify();\n\t\tinteractionControl.verify();\n\t\toutputCreatorControl.verify();\n\t\tcallDetectorControl.verify();\n\t}","id":16192,"modified_method":"@Test\n\tpublic void testMappingRecordOperationWithOutputRecordCreator() throws ResourceException {\n\t\tConnectionFactory connectionFactory = createMock(ConnectionFactory.class);\n\t\tConnection connection = createMock(Connection.class);\n\t\tInteraction interaction = createMock(Interaction.class);\n\t\tRecordFactory recordFactory = createMock(RecordFactory.class);\n\n\t\tRecord inputRecord = createMock(Record.class);\n\t\tRecord outputRecord = createMock(Record.class);\n\n\t\tRecordCreator outputCreator = createMock(RecordCreator.class);\n\n\t\tInteractionSpec interactionSpec = createMock(InteractionSpec.class);\n\n\t\tQueryCallDetector callDetector = createMock(QueryCallDetector.class);\n\n\t\tMappingRecordOperationImpl query = new MappingRecordOperationImpl(connectionFactory, interactionSpec);\n\t\tquery.setOutputRecordCreator(outputCreator);\n\t\tquery.setCallDetector(callDetector);\n\n\t\tObject inObj = new Object();\n\t\tObject outObj = new Object();\n\n\t\texpect(connectionFactory.getRecordFactory()).andReturn(recordFactory);\n\n\t\texpect(callDetector.callCreateInputRecord(recordFactory, inObj)).andReturn(inputRecord);\n\n\t\texpect(connectionFactory.getConnection()).andReturn(connection);\n\n\t\texpect(connection.createInteraction()).andReturn(interaction);\n\n\t\texpect(connectionFactory.getRecordFactory()).andReturn(recordFactory);\n\n\t\texpect(outputCreator.createRecord(recordFactory)).andReturn(outputRecord);\n\n\t\texpect(interaction.execute(interactionSpec, inputRecord, outputRecord)).andReturn(true);\n\n\t\texpect(callDetector.callExtractOutputData(outputRecord)).andReturn(outObj);\n\n\t\tinteraction.close();\n\n\t\tconnection.close();\n\n\t\treplay(connectionFactory, connection, interaction, outputCreator, callDetector);\n\n\t\tassertSame(outObj, query.execute(inObj));\n\n\t\tverify(connectionFactory, connection, interaction, outputCreator, callDetector);\n\t}","commit_id":"6285e61435a69f885747c2f122a37a8012526d86","url":"https://github.com/spring-projects/spring-framework"},{"original_method":"public void testMappingRecordOperation() throws ResourceException {\n\t\tMockControl connectionFactoryControl = MockControl.createControl(ConnectionFactory.class);\n\t\tfinal ConnectionFactory connectionFactory = (ConnectionFactory) connectionFactoryControl.getMock();\n\t\tMockControl recordFactoryControl = MockControl.createStrictControl(RecordFactory.class);\n\t\tRecordFactory recordFactory = (RecordFactory) recordFactoryControl.getMock();\n\t\tMockControl connectionControl = MockControl.createControl(Connection.class);\n\t\tConnection connection = (Connection) connectionControl.getMock();\n\t\tMockControl interactionControl = MockControl.createControl(Interaction.class);\n\t\tInteraction interaction = (Interaction) interactionControl.getMock();\n\n\t\tMockControl inputRecordControl = MockControl.createControl(Record.class);\n\t\tRecord inputRecord = (Record) inputRecordControl.getMock();\n\t\tMockControl outputRecordControl = MockControl.createControl(Record.class);\n\t\tRecord outputRecord = (Record) outputRecordControl.getMock();\n\n\t\tMockControl interactionSpecControl = MockControl.createControl(InteractionSpec.class);\n\t\tInteractionSpec interactionSpec = (InteractionSpec) interactionSpecControl.getMock();\n\n\t\tMockControl callDetectorControl = MockControl.createControl(QueryCallDetector.class);\n\t\tQueryCallDetector callDetector = (QueryCallDetector) callDetectorControl.getMock();\n\n\t\tMappingRecordOperationImpl query = new MappingRecordOperationImpl(connectionFactory, interactionSpec);\n\t\tquery.setCallDetector(callDetector);\n\n\t\tObject inObj = new Object();\n\t\tObject outObj = new Object();\n\n\t\tconnectionFactory.getRecordFactory();\n\t\tconnectionFactoryControl.setReturnValue(recordFactory, 1);\n\n\t\tcallDetector.callCreateInputRecord(recordFactory, inObj);\n\t\tcallDetectorControl.setReturnValue(inputRecord, 1);\n\n\t\tconnectionFactory.getConnection();\n\t\tconnectionFactoryControl.setReturnValue(connection, 1);\n\n\t\tconnection.createInteraction();\n\t\tconnectionControl.setReturnValue(interaction, 1);\n\n\t\tinteraction.execute(interactionSpec, inputRecord);\n\t\tinteractionControl.setReturnValue(outputRecord, 1);\n\n\t\tcallDetector.callExtractOutputData(outputRecord);\n\t\tcallDetectorControl.setReturnValue(outObj, 1);\n\n\t\tinteraction.close();\n\t\tinteractionControl.setVoidCallable(1);\n\n\t\tconnection.close();\n\t\tconnectionControl.setVoidCallable(1);\n\n\t\tconnectionFactoryControl.replay();\n\t\tconnectionControl.replay();\n\t\tinteractionControl.replay();\n\t\tcallDetectorControl.replay();\n\n\t\tassertSame(outObj, query.execute(inObj));\n\n\t\tconnectionFactoryControl.verify();\n\t\tconnectionControl.verify();\n\t\tinteractionControl.verify();\n\t\tcallDetectorControl.verify();\n\t}","id":16193,"modified_method":"@Test\n\tpublic void testMappingRecordOperation() throws ResourceException {\n\t\tConnectionFactory connectionFactory = createMock(ConnectionFactory.class);\n\t\tConnection connection = createMock(Connection.class);\n\t\tInteraction interaction = createMock(Interaction.class);\n\t\tRecordFactory recordFactory = createMock(RecordFactory.class);\n\n\t\tRecord inputRecord = createMock(Record.class);\n\t\tRecord outputRecord = createMock(Record.class);\n\n\t\tInteractionSpec interactionSpec = createMock(InteractionSpec.class);\n\n\t\tQueryCallDetector callDetector = createMock(QueryCallDetector.class);\n\n\t\tMappingRecordOperationImpl query = new MappingRecordOperationImpl(connectionFactory, interactionSpec);\n\t\tquery.setCallDetector(callDetector);\n\n\t\tObject inObj = new Object();\n\t\tObject outObj = new Object();\n\n\t\texpect(connectionFactory.getRecordFactory()).andReturn(recordFactory);\n\n\t\texpect(callDetector.callCreateInputRecord(recordFactory, inObj)).andReturn(inputRecord);\n\n\t\texpect(connectionFactory.getConnection()).andReturn(connection);\n\n\t\texpect(connection.createInteraction()).andReturn(interaction);\n\n\t\texpect(interaction.execute(interactionSpec, inputRecord)).andReturn(outputRecord);\n\n\t\texpect(callDetector.callExtractOutputData(outputRecord)).andReturn(outObj);\n\n\t\tinteraction.close();\n\n\t\tconnection.close();\n\n\t\treplay(connectionFactory, connection, interaction, callDetector);\n\n\t\tassertSame(outObj, query.execute(inObj));\n\n\t\tverify(connectionFactory, connection, interaction, callDetector);\n\t}","commit_id":"6285e61435a69f885747c2f122a37a8012526d86","url":"https://github.com/spring-projects/spring-framework"},{"original_method":"public void testSimpleRecordOperationWithExplicitOutputRecord() throws ResourceException {\n\t\tMockControl connectionFactoryControl = MockControl.createControl(ConnectionFactory.class);\n\t\tConnectionFactory connectionFactory = (ConnectionFactory) connectionFactoryControl.getMock();\n\t\tMockControl connectionControl = MockControl.createControl(Connection.class);\n\t\tConnection connection = (Connection) connectionControl.getMock();\n\t\tMockControl interactionControl = MockControl.createControl(Interaction.class);\n\t\tInteraction interaction = (Interaction) interactionControl.getMock();\n\n\t\tMockControl inputRecordControl = MockControl.createControl(Record.class);\n\t\tRecord inputRecord = (Record) inputRecordControl.getMock();\n\t\tMockControl outputRecordControl = MockControl.createControl(Record.class);\n\t\tRecord outputRecord = (Record) outputRecordControl.getMock();\n\n\t\tMockControl interactionSpecControl = MockControl.createControl(InteractionSpec.class);\n\t\tInteractionSpec interactionSpec = (InteractionSpec) interactionSpecControl.getMock();\n\n\t\tSimpleRecordOperation operation = new SimpleRecordOperation(connectionFactory, interactionSpec);\n\n\t\tconnectionFactory.getConnection();\n\t\tconnectionFactoryControl.setReturnValue(connection, 1);\n\n\t\tconnection.createInteraction();\n\t\tconnectionControl.setReturnValue(interaction, 1);\n\n\t\tinteraction.execute(interactionSpec, inputRecord, outputRecord);\n\t\tinteractionControl.setReturnValue(true, 1);\n\n\t\tinteraction.close();\n\t\tinteractionControl.setVoidCallable(1);\n\n\t\tconnection.close();\n\t\tconnectionControl.setVoidCallable(1);\n\n\t\tconnectionFactoryControl.replay();\n\t\tconnectionControl.replay();\n\t\tinteractionControl.replay();\n\n\t\toperation.execute(inputRecord, outputRecord);\n\n\t\tconnectionFactoryControl.verify();\n\t\tconnectionControl.verify();\n\t\tinteractionControl.verify();\n\t}","id":16194,"modified_method":"@Test\n\tpublic void testSimpleRecordOperationWithExplicitOutputRecord() throws ResourceException {\n\t\tConnectionFactory connectionFactory = createMock(ConnectionFactory.class);\n\t\tConnection connection = createMock(Connection.class);\n\t\tInteraction interaction = createMock(Interaction.class);\n\n\t\tRecord inputRecord = createMock(Record.class);\n\t\tRecord outputRecord = createMock(Record.class);\n\n\t\tInteractionSpec interactionSpec = createMock(InteractionSpec.class);\n\n\t\tSimpleRecordOperation operation = new SimpleRecordOperation(connectionFactory, interactionSpec);\n\t\t\n\t\texpect(connectionFactory.getConnection()).andReturn(connection);\n\n\t\texpect(connection.createInteraction()).andReturn(interaction);\n\n\t\texpect(interaction.execute(interactionSpec, inputRecord, outputRecord)).andReturn(true);\n\n\t\tinteraction.close();\n\n\t\tconnection.close();\n\n\t\treplay(connectionFactory, connection, interaction);\n\n\t\toperation.execute(inputRecord, outputRecord);\n\n\t\tverify(connectionFactory, connection, interaction);\n\t}","commit_id":"6285e61435a69f885747c2f122a37a8012526d86","url":"https://github.com/spring-projects/spring-framework"},{"original_method":"public void testSimpleRecordOperationWithInputOutputRecord() throws ResourceException {\n\t\tMockControl connectionFactoryControl = MockControl.createControl(ConnectionFactory.class);\n\t\tfinal ConnectionFactory connectionFactory = (ConnectionFactory) connectionFactoryControl.getMock();\n\t\tMockControl connectionControl = MockControl.createControl(Connection.class);\n\t\tConnection connection = (Connection) connectionControl.getMock();\n\t\tMockControl interactionControl = MockControl.createControl(Interaction.class);\n\t\tInteraction interaction = (Interaction) interactionControl.getMock();\n\n\t\tMockControl inputOutputRecordControl = MockControl.createControl(Record.class);\n\t\tRecord inputOutputRecord = (Record) inputOutputRecordControl.getMock();\n\n\t\tMockControl interactionSpecControl = MockControl.createControl(InteractionSpec.class);\n\t\tInteractionSpec interactionSpec = (InteractionSpec) interactionSpecControl.getMock();\n\n\t\tSimpleRecordOperation query = new SimpleRecordOperation(connectionFactory, interactionSpec);\n\n\t\tconnectionFactory.getConnection();\n\t\tconnectionFactoryControl.setReturnValue(connection);\n\n\t\tconnection.createInteraction();\n\t\tconnectionControl.setReturnValue(interaction);\n\n\t\tinteraction.execute(interactionSpec, inputOutputRecord, inputOutputRecord);\n\t\tinteractionControl.setReturnValue(true, 1);\n\n\t\tinteraction.close();\n\t\tinteractionControl.setVoidCallable(1);\n\n\t\tconnection.close();\n\t\tconnectionControl.setVoidCallable(1);\n\n\t\tconnectionFactoryControl.replay();\n\t\tconnectionControl.replay();\n\t\tinteractionControl.replay();\n\n\t\tquery.execute(inputOutputRecord, inputOutputRecord);\n\n\t\tconnectionFactoryControl.verify();\n\t\tconnectionControl.verify();\n\t\tinteractionControl.verify();\n\t}","id":16195,"modified_method":"@Test\n\tpublic void testSimpleRecordOperationWithInputOutputRecord() throws ResourceException {\n\t\tConnectionFactory connectionFactory = createMock(ConnectionFactory.class);\n\t\tConnection connection = createMock(Connection.class);\n\t\tInteraction interaction = createMock(Interaction.class);\n\n\t\tRecord inputOutputRecord = createMock(Record.class);\n\n\t\tInteractionSpec interactionSpec = createMock(InteractionSpec.class);\n\n\t\tSimpleRecordOperation query = new SimpleRecordOperation(connectionFactory, interactionSpec);\n\n\t\texpect(connectionFactory.getConnection()).andReturn(connection);\n\n\t\texpect(connection.createInteraction()).andReturn(interaction);\n\n\t\texpect(interaction.execute(interactionSpec, inputOutputRecord, inputOutputRecord)).andReturn(true);\n\n\t\tinteraction.close();\n\n\t\tconnection.close();\n\n\t\treplay(connectionFactory, connection, interaction);\n\n\t\tquery.execute(inputOutputRecord, inputOutputRecord);\n\n\t\tverify(connectionFactory, connection, interaction);\n\t}","commit_id":"6285e61435a69f885747c2f122a37a8012526d86","url":"https://github.com/spring-projects/spring-framework"},{"original_method":"@Override\n  protected XContentBuilder getMapping() {\n    try {\n      return jsonBuilder().startObject()\n        .startObject(\"issue\")\n          .startObject(\"properties\")\n            .startObject(\"component.path\")\n              .field(\"type\", \"string\")\n              .field(\"index_analyzer\", \"path_analyzer\")\n              .field(\"search_analyzer\", \"keyword\")\n            .endObject()\n          .startObject(\"rule.name\")\n            .field(\"type\", \"string\")\n            .field(\"analyzer\", \"keyword\")\n          .endObject()\n          .startObject(\"root.id\")\n            .field(\"type\", \"multi_field\")\n            .startObject(\"fields\")\n              .startObject(\"str\")\n                .field(\"type\", \"string\")\n                .field(\"index\",\"analyzed\")\n                .field(\"analyzer\", \"default\")\n              .endObject()\n              .startObject(\"num\")\n                .field(\"type\", \"long\")\n                .field(\"index\",\"analyzed\")\n              .endObject()\n          .endObject()\n        .endObject()\n      .endObject().endObject();\n    } catch (IOException e) {\n      LOG.error(\"Could not create mapping for {}\",this.getIndexName());\n      return null;\n    }\n  }","id":16196,"modified_method":"@Override\n  protected XContentBuilder getMapping() {\n    try {\n      return jsonBuilder().startObject()\n          .startObject(this.getType()).endObject()\n        .endObject();\n\n//      return jsonBuilder().startObject()\n//        .startObject(\"issue\")\n//          .startObject(\"properties\")\n//            .startObject(\"component.path\")\n//              .field(\"type\", \"string\")\n//              .field(\"index_analyzer\", \"path_analyzer\")\n//              .field(\"search_analyzer\", \"keyword\")\n//            .endObject()\n//          .startObject(\"rule.name\")\n//            .field(\"type\", \"string\")\n//            .field(\"analyzer\", \"keyword\")\n//          .endObject()\n//          .startObject(\"root.id\")\n//            .field(\"type\", \"multi_field\")\n//            .startObject(\"fields\")\n//              .startObject(\"str\")\n//                .field(\"type\", \"string\")\n//                .field(\"index\",\"analyzed\")\n//                .field(\"analyzer\", \"default\")\n//              .endObject()\n//              .startObject(\"num\")\n//                .field(\"type\", \"long\")\n//                .field(\"index\",\"analyzed\")\n//              .endObject()\n//          .endObject()\n//        .endObject()\n//      .endObject().endObject();\n    } catch (IOException e) {\n      LOG.error(\"Could not create mapping for {}\",this.getIndexName());\n      return null;\n    }\n  }","commit_id":"3fa8122a97e501f72bcee13812ed22a2dc2c21a9","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"/**\n   * All the stuff required to connect to database\n   */\n  Collection level1Components() {\n    List components = Lists.newArrayList(rootComponents);\n    components.addAll(Arrays.asList(\n      new BaseConfiguration(),\n      ServerSettings.class,\n      ServerImpl.class,\n      Logback.class,\n      Profiling.class,\n      JRubyProfiling.class,\n      EmbeddedDatabaseFactory.class,\n      DefaultDatabase.class,\n      MyBatis.class,\n      LocalNonBlockingWorkQueue.class,\n      DatabaseServerCompatibility.class,\n      DatabaseVersion.class,\n      PurgeProfiler.class,\n      DefaultServerFileSystem.class,\n      PreviewDatabaseFactory.class,\n      SemaphoreUpdater.class,\n      SemaphoresImpl.class,\n      TempFolderCleaner.class,\n      new TempFolderProvider(),\n      System2.INSTANCE\n    ));\n    components.addAll(CorePropertyDefinitions.all());\n    components.addAll(DatabaseMigrations.CLASSES);\n    components.addAll(DaoUtils.getDaoClasses());\n    components.addAll(IndexUtils.getIndexClasses());\n    return components;\n  }","id":16197,"modified_method":"/**\n   * All the stuff required to connect to database\n   */\n  Collection level1Components() {\n    List components = Lists.newArrayList(rootComponents);\n    components.addAll(Arrays.asList(\n      new BaseConfiguration(),\n      ServerSettings.class,\n      ServerImpl.class,\n      Logback.class,\n      Profiling.class,\n      JRubyProfiling.class,\n      EmbeddedDatabaseFactory.class,\n      DefaultDatabase.class,\n      MyBatis.class,\n      LocalNonBlockingWorkQueue.class,\n      DatabaseServerCompatibility.class,\n      DatabaseVersion.class,\n      PurgeProfiler.class,\n      DefaultServerFileSystem.class,\n      PreviewDatabaseFactory.class,\n      SemaphoreUpdater.class,\n      SemaphoresImpl.class,\n      TempFolderCleaner.class,\n      new TempFolderProvider(),\n      System2.INSTANCE\n    ));\n    components.addAll(CorePropertyDefinitions.all());\n    components.addAll(DatabaseMigrations.CLASSES);\n    components.addAll(DaoUtils.getDaoClasses());\n    return components;\n  }","commit_id":"3fa8122a97e501f72bcee13812ed22a2dc2c21a9","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"/**\n   * The core components that complete the initialization of database\n   * when its schema is up-to-date.\n   */\n  Collection level3Components() {\n    return Lists.newArrayList(\n      PersistentSettings.class,\n      DefaultDatabaseConnector.class,\n      ThreadLocalDatabaseSessionFactory.class,\n      new DatabaseSessionProvider(),\n      ServerMetadataPersister.class,\n      ESNode.class,\n      HttpDownloader.class,\n      UriReader.class,\n      ServerIdGenerator.class\n    );\n  }","id":16198,"modified_method":"/**\n   * The core components that complete the initialization of database\n   * when its schema is up-to-date.\n   */\n  Collection level3Components() {\n    List components = Lists.newArrayList(\n      PersistentSettings.class,\n      DefaultDatabaseConnector.class,\n      ThreadLocalDatabaseSessionFactory.class,\n      new DatabaseSessionProvider(),\n      ServerMetadataPersister.class,\n      ESNode.class,\n      HttpDownloader.class,\n      UriReader.class,\n      ServerIdGenerator.class\n    );\n    components.addAll(IndexUtils.getIndexClasses());\n    return components;\n  }","commit_id":"3fa8122a97e501f72bcee13812ed22a2dc2c21a9","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"@Test\n    public void testDuellStrings() throws Exception {\n        Random random = getRandom();\n        int atLeast = atLeast(random, 1000);\n        for (int i = 0; i < atLeast; i++) {\n            Document d = new Document();\n            d.add(new StringField(\"_id\", \"\" + i, Field.Store.NO));\n            if (random.nextInt(15) != 0) {\n                int[] numbers = getNumbers(random, Integer.MAX_VALUE);\n                for (int j : numbers) {\n                    d.add(new StringField(\"bytes\", English.longToEnglish(j), Field.Store.NO));\n                }\n                if (random.nextInt(10) == 0) {\n                    d.add(new StringField(\"bytes\", \"\", Field.Store.NO));\n                }\n            }\n            writer.addDocument(d);\n            if (random.nextInt(10) == 0) {\n                refreshReader();\n            }\n        }\n        AtomicReaderContext context = refreshReader();\n        Map<FieldDataType, Type> typeMap = new HashMap<FieldDataType, DuellFieldDataTests.Type>();\n        typeMap.put(new FieldDataType(\"string\", ImmutableSettings.builder().put(\"format\", \"fst\")), Type.Bytes);\n        typeMap.put(new FieldDataType(\"string\", ImmutableSettings.builder().put(\"format\", \"paged_bytes\")), Type.Bytes);\n        typeMap.put(new FieldDataType(\"string\", ImmutableSettings.builder().put(\"format\", \"concrete_bytes\")), Type.Bytes);\n        // TODO add filters\n        ArrayList<Entry<FieldDataType, Type>> list = new ArrayList<Entry<FieldDataType, Type>>(typeMap.entrySet());\n        Preprocessor pre = new Preprocessor();\n        while (!list.isEmpty()) {\n            Entry<FieldDataType, Type> left;\n            Entry<FieldDataType, Type> right;\n            if (list.size() > 1) {\n                left = list.remove(random.nextInt(list.size()));\n                right = list.remove(random.nextInt(list.size()));\n            } else {\n                right = left = list.remove(0);\n            }\n            ifdService.clear();\n            IndexFieldData leftFieldData = ifdService.getForField(new FieldMapper.Names(left.getValue().name().toLowerCase(Locale.ROOT)),\n                    left.getKey());\n            ifdService.clear();\n            IndexFieldData rightFieldData = ifdService.getForField(new FieldMapper.Names(right.getValue().name().toLowerCase(Locale.ROOT)),\n                    right.getKey());\n            duellFieldDataBytes(random, context, leftFieldData, rightFieldData, pre);\n            duellFieldDataBytes(random, context, rightFieldData, leftFieldData, pre);\n\n            DirectoryReader perSegment = DirectoryReader.open(writer, true);\n            CompositeReaderContext composite = perSegment.getContext();\n            List<AtomicReaderContext> leaves = composite.leaves();\n            for (AtomicReaderContext atomicReaderContext : leaves) {\n                duellFieldDataBytes(random, atomicReaderContext, leftFieldData, rightFieldData, pre);\n            }\n            perSegment.close();\n        }\n\n    }","id":16199,"modified_method":"@Test\n    public void testDuellStrings() throws Exception {\n        Random random = getRandom();\n        int atLeast = atLeast(random, 1000);\n        for (int i = 0; i < atLeast; i++) {\n            Document d = new Document();\n            d.add(new StringField(\"_id\", \"\" + i, Field.Store.NO));\n            if (random.nextInt(15) != 0) {\n                int[] numbers = getNumbers(random, Integer.MAX_VALUE);\n                for (int j : numbers) {\n                    d.add(new StringField(\"bytes\", English.longToEnglish(j), Field.Store.NO));\n                }\n                if (random.nextInt(10) == 0) {\n                    d.add(new StringField(\"bytes\", \"\", Field.Store.NO));\n                }\n            }\n            writer.addDocument(d);\n            if (random.nextInt(10) == 0) {\n                refreshReader();\n            }\n        }\n        AtomicReaderContext context = refreshReader();\n        Map<FieldDataType, Type> typeMap = new HashMap<FieldDataType, DuellFieldDataTests.Type>();\n        typeMap.put(new FieldDataType(\"string\", ImmutableSettings.builder().put(\"format\", \"fst\")), Type.Bytes);\n        typeMap.put(new FieldDataType(\"string\", ImmutableSettings.builder().put(\"format\", \"paged_bytes\")), Type.Bytes);\n        // TODO add filters\n        ArrayList<Entry<FieldDataType, Type>> list = new ArrayList<Entry<FieldDataType, Type>>(typeMap.entrySet());\n        Preprocessor pre = new Preprocessor();\n        while (!list.isEmpty()) {\n            Entry<FieldDataType, Type> left;\n            Entry<FieldDataType, Type> right;\n            if (list.size() > 1) {\n                left = list.remove(random.nextInt(list.size()));\n                right = list.remove(random.nextInt(list.size()));\n            } else {\n                right = left = list.remove(0);\n            }\n            ifdService.clear();\n            IndexFieldData leftFieldData = ifdService.getForField(new FieldMapper.Names(left.getValue().name().toLowerCase(Locale.ROOT)),\n                    left.getKey());\n            ifdService.clear();\n            IndexFieldData rightFieldData = ifdService.getForField(new FieldMapper.Names(right.getValue().name().toLowerCase(Locale.ROOT)),\n                    right.getKey());\n            duellFieldDataBytes(random, context, leftFieldData, rightFieldData, pre);\n            duellFieldDataBytes(random, context, rightFieldData, leftFieldData, pre);\n\n            DirectoryReader perSegment = DirectoryReader.open(writer, true);\n            CompositeReaderContext composite = perSegment.getContext();\n            List<AtomicReaderContext> leaves = composite.leaves();\n            for (AtomicReaderContext atomicReaderContext : leaves) {\n                duellFieldDataBytes(random, atomicReaderContext, leftFieldData, rightFieldData, pre);\n            }\n            perSegment.close();\n        }\n\n    }","commit_id":"43fcc55625b8617e3a2c9ff609305279e6f3e94d","url":"https://github.com/elastic/elasticsearch"},{"original_method":"@Test\n    public void testDuellAllTypesSingleValue() throws Exception {\n        Random random = getRandom();\n        int atLeast = atLeast(random, 1000);\n        for (int i = 0; i < atLeast; i++) {\n            int v = (random.nextBoolean() ? -1 * random.nextInt(Byte.MAX_VALUE) : random.nextInt(Byte.MAX_VALUE));\n            Document d = new Document();\n            d.add(new StringField(\"_id\", \"\" + i, Field.Store.NO));\n            if (random.nextInt(15) != 0) {\n                d.add(new LongField(\"long\", v, Field.Store.NO));\n                d.add(new IntField(\"integer\", v, Field.Store.NO));\n                d.add(new DoubleField(\"double\", v, Field.Store.NO));\n                d.add(new FloatField(\"float\", v, Field.Store.NO));\n                d.add(new StringField(\"bytes\", \"\" + v, Field.Store.NO));\n            }\n            writer.addDocument(d);\n            if (random.nextInt(10) == 0) {\n                refreshReader();\n            }\n        }\n        AtomicReaderContext context = refreshReader();\n        Map<FieldDataType, Type> typeMap = new HashMap<FieldDataType, DuellFieldDataTests.Type>();\n        typeMap.put(new FieldDataType(\"string\", ImmutableSettings.builder().put(\"format\", \"fst\")), Type.Bytes);\n        typeMap.put(new FieldDataType(\"string\", ImmutableSettings.builder().put(\"format\", \"paged_bytes\")), Type.Bytes);\n        typeMap.put(new FieldDataType(\"string\", ImmutableSettings.builder().put(\"format\", \"concrete_bytes\")), Type.Bytes);\n        typeMap.put(new FieldDataType(\"byte\"), Type.Integer);\n        typeMap.put(new FieldDataType(\"short\"), Type.Integer);\n        typeMap.put(new FieldDataType(\"int\"), Type.Integer);\n        typeMap.put(new FieldDataType(\"long\"), Type.Long);\n        typeMap.put(new FieldDataType(\"double\"), Type.Double);\n        typeMap.put(new FieldDataType(\"float\"), Type.Float);\n        ArrayList<Entry<FieldDataType, Type>> list = new ArrayList<Entry<FieldDataType, Type>>(typeMap.entrySet());\n        Preprocessor pre = new ToDoublePreprocessor();\n        while (!list.isEmpty()) {\n            Entry<FieldDataType, Type> left;\n            Entry<FieldDataType, Type> right;\n            if (list.size() > 1) {\n                left = list.remove(random.nextInt(list.size()));\n                right = list.remove(random.nextInt(list.size()));\n            } else {\n                right = left = list.remove(0);\n            }\n            ifdService.clear();\n            IndexFieldData leftFieldData = ifdService.getForField(new FieldMapper.Names(left.getValue().name().toLowerCase(Locale.ROOT)),\n                    left.getKey());\n            ifdService.clear();\n            IndexFieldData rightFieldData = ifdService.getForField(new FieldMapper.Names(right.getValue().name().toLowerCase(Locale.ROOT)),\n                    right.getKey());\n            duellFieldDataBytes(random, context, leftFieldData, rightFieldData, pre);\n            duellFieldDataBytes(random, context, rightFieldData, leftFieldData, pre);\n\n            DirectoryReader perSegment = DirectoryReader.open(writer, true);\n            CompositeReaderContext composite = perSegment.getContext();\n            List<AtomicReaderContext> leaves = composite.leaves();\n            for (AtomicReaderContext atomicReaderContext : leaves) {\n                duellFieldDataBytes(random, atomicReaderContext, leftFieldData, rightFieldData, pre);\n            }\n        }\n    }","id":16200,"modified_method":"@Test\n    public void testDuellAllTypesSingleValue() throws Exception {\n        Random random = getRandom();\n        int atLeast = atLeast(random, 1000);\n        for (int i = 0; i < atLeast; i++) {\n            int v = (random.nextBoolean() ? -1 * random.nextInt(Byte.MAX_VALUE) : random.nextInt(Byte.MAX_VALUE));\n            Document d = new Document();\n            d.add(new StringField(\"_id\", \"\" + i, Field.Store.NO));\n            if (random.nextInt(15) != 0) {\n                d.add(new LongField(\"long\", v, Field.Store.NO));\n                d.add(new IntField(\"integer\", v, Field.Store.NO));\n                d.add(new DoubleField(\"double\", v, Field.Store.NO));\n                d.add(new FloatField(\"float\", v, Field.Store.NO));\n                d.add(new StringField(\"bytes\", \"\" + v, Field.Store.NO));\n            }\n            writer.addDocument(d);\n            if (random.nextInt(10) == 0) {\n                refreshReader();\n            }\n        }\n        AtomicReaderContext context = refreshReader();\n        Map<FieldDataType, Type> typeMap = new HashMap<FieldDataType, DuellFieldDataTests.Type>();\n        typeMap.put(new FieldDataType(\"string\", ImmutableSettings.builder().put(\"format\", \"fst\")), Type.Bytes);\n        typeMap.put(new FieldDataType(\"string\", ImmutableSettings.builder().put(\"format\", \"paged_bytes\")), Type.Bytes);\n        typeMap.put(new FieldDataType(\"byte\"), Type.Integer);\n        typeMap.put(new FieldDataType(\"short\"), Type.Integer);\n        typeMap.put(new FieldDataType(\"int\"), Type.Integer);\n        typeMap.put(new FieldDataType(\"long\"), Type.Long);\n        typeMap.put(new FieldDataType(\"double\"), Type.Double);\n        typeMap.put(new FieldDataType(\"float\"), Type.Float);\n        ArrayList<Entry<FieldDataType, Type>> list = new ArrayList<Entry<FieldDataType, Type>>(typeMap.entrySet());\n        Preprocessor pre = new ToDoublePreprocessor();\n        while (!list.isEmpty()) {\n            Entry<FieldDataType, Type> left;\n            Entry<FieldDataType, Type> right;\n            if (list.size() > 1) {\n                left = list.remove(random.nextInt(list.size()));\n                right = list.remove(random.nextInt(list.size()));\n            } else {\n                right = left = list.remove(0);\n            }\n            ifdService.clear();\n            IndexFieldData leftFieldData = ifdService.getForField(new FieldMapper.Names(left.getValue().name().toLowerCase(Locale.ROOT)),\n                    left.getKey());\n            ifdService.clear();\n            IndexFieldData rightFieldData = ifdService.getForField(new FieldMapper.Names(right.getValue().name().toLowerCase(Locale.ROOT)),\n                    right.getKey());\n            duellFieldDataBytes(random, context, leftFieldData, rightFieldData, pre);\n            duellFieldDataBytes(random, context, rightFieldData, leftFieldData, pre);\n\n            DirectoryReader perSegment = DirectoryReader.open(writer, true);\n            CompositeReaderContext composite = perSegment.getContext();\n            List<AtomicReaderContext> leaves = composite.leaves();\n            for (AtomicReaderContext atomicReaderContext : leaves) {\n                duellFieldDataBytes(random, atomicReaderContext, leftFieldData, rightFieldData, pre);\n            }\n        }\n    }","commit_id":"43fcc55625b8617e3a2c9ff609305279e6f3e94d","url":"https://github.com/elastic/elasticsearch"},{"original_method":"@Test\n    public void testFilterByRegExp() throws Exception {\n\n        int hundred  = 0;\n        int ten  = 0;\n        int five  = 0;\n        for (int i = 0; i < 1000; i++) {\n            Document d = new Document();\n            d.add(new StringField(\"id\", \"\" + i, Field.Store.NO));\n            if (i % 100 == 0) {\n                hundred++;\n                d.add(new StringField(\"high_freq\", \"100\", Field.Store.NO));\n            }\n            if (i % 10 == 0) {\n                ten++;\n                d.add(new StringField(\"high_freq\", \"10\", Field.Store.NO));\n            }\n            if (i % 5 == 0) {\n                five++;\n                d.add(new StringField(\"high_freq\", \"5\", Field.Store.NO));\n\n            }\n            writer.addDocument(d);\n        }\n        System.out.println(hundred + \" \" + ten + \" \" +five);\n        writer.forceMerge(1);\n        AtomicReaderContext context = refreshReader();\n        String[] formats = new String[] { \"fst\", \"paged_bytes\", \"concrete_bytes\" };\n        for (String format : formats) {\n            {\n                ifdService.clear();\n                FieldDataType fieldDataType = new FieldDataType(\"string\", ImmutableSettings.builder().put(\"format\", format)\n                        .put(\"filter.regex.pattern\", \"\\\\d\"));\n                IndexFieldData fieldData = ifdService.getForField(new FieldMapper.Names(\"high_freq\"), fieldDataType);\n                AtomicFieldData.WithOrdinals<ScriptDocValues.Strings> loadDirect = (WithOrdinals<Strings>) fieldData.loadDirect(context);\n                BytesValues.WithOrdinals bytesValues = loadDirect.getBytesValues();\n                Docs ordinals = bytesValues.ordinals();\n                assertThat(1L, equalTo(ordinals.getNumOrds()));\n                assertThat(1000, equalTo(ordinals.getNumDocs()));\n                assertThat(bytesValues.getValueByOrd(1).utf8ToString(), equalTo(\"5\"));\n            }\n            {\n                ifdService.clear();\n                FieldDataType fieldDataType = new FieldDataType(\"string\", ImmutableSettings.builder().put(\"format\", format)\n                        .put(\"filter.regex.pattern\", \"\\\\d{1,2}\"));\n                IndexFieldData fieldData = ifdService.getForField(new FieldMapper.Names(\"high_freq\"), fieldDataType);\n                AtomicFieldData.WithOrdinals<ScriptDocValues.Strings> loadDirect = (WithOrdinals<Strings>) fieldData.loadDirect(context);\n                BytesValues.WithOrdinals bytesValues = loadDirect.getBytesValues();\n                Docs ordinals = bytesValues.ordinals();\n                assertThat(2L, equalTo(ordinals.getNumOrds()));\n                assertThat(1000, equalTo(ordinals.getNumDocs()));\n                assertThat(bytesValues.getValueByOrd(1).utf8ToString(), equalTo(\"10\"));\n                assertThat(bytesValues.getValueByOrd(2).utf8ToString(), equalTo(\"5\"));\n            }\n        }\n\n    }","id":16201,"modified_method":"@Test\n    public void testFilterByRegExp() throws Exception {\n\n        int hundred  = 0;\n        int ten  = 0;\n        int five  = 0;\n        for (int i = 0; i < 1000; i++) {\n            Document d = new Document();\n            d.add(new StringField(\"id\", \"\" + i, Field.Store.NO));\n            if (i % 100 == 0) {\n                hundred++;\n                d.add(new StringField(\"high_freq\", \"100\", Field.Store.NO));\n            }\n            if (i % 10 == 0) {\n                ten++;\n                d.add(new StringField(\"high_freq\", \"10\", Field.Store.NO));\n            }\n            if (i % 5 == 0) {\n                five++;\n                d.add(new StringField(\"high_freq\", \"5\", Field.Store.NO));\n\n            }\n            writer.addDocument(d);\n        }\n        System.out.println(hundred + \" \" + ten + \" \" +five);\n        writer.forceMerge(1);\n        AtomicReaderContext context = refreshReader();\n        String[] formats = new String[] { \"fst\", \"paged_bytes\"};\n        for (String format : formats) {\n            {\n                ifdService.clear();\n                FieldDataType fieldDataType = new FieldDataType(\"string\", ImmutableSettings.builder().put(\"format\", format)\n                        .put(\"filter.regex.pattern\", \"\\\\d\"));\n                IndexFieldData fieldData = ifdService.getForField(new FieldMapper.Names(\"high_freq\"), fieldDataType);\n                AtomicFieldData.WithOrdinals<ScriptDocValues.Strings> loadDirect = (WithOrdinals<Strings>) fieldData.loadDirect(context);\n                BytesValues.WithOrdinals bytesValues = loadDirect.getBytesValues();\n                Docs ordinals = bytesValues.ordinals();\n                assertThat(1L, equalTo(ordinals.getNumOrds()));\n                assertThat(1000, equalTo(ordinals.getNumDocs()));\n                assertThat(bytesValues.getValueByOrd(1).utf8ToString(), equalTo(\"5\"));\n            }\n            {\n                ifdService.clear();\n                FieldDataType fieldDataType = new FieldDataType(\"string\", ImmutableSettings.builder().put(\"format\", format)\n                        .put(\"filter.regex.pattern\", \"\\\\d{1,2}\"));\n                IndexFieldData fieldData = ifdService.getForField(new FieldMapper.Names(\"high_freq\"), fieldDataType);\n                AtomicFieldData.WithOrdinals<ScriptDocValues.Strings> loadDirect = (WithOrdinals<Strings>) fieldData.loadDirect(context);\n                BytesValues.WithOrdinals bytesValues = loadDirect.getBytesValues();\n                Docs ordinals = bytesValues.ordinals();\n                assertThat(2L, equalTo(ordinals.getNumOrds()));\n                assertThat(1000, equalTo(ordinals.getNumDocs()));\n                assertThat(bytesValues.getValueByOrd(1).utf8ToString(), equalTo(\"10\"));\n                assertThat(bytesValues.getValueByOrd(2).utf8ToString(), equalTo(\"5\"));\n            }\n        }\n\n    }","commit_id":"43fcc55625b8617e3a2c9ff609305279e6f3e94d","url":"https://github.com/elastic/elasticsearch"},{"original_method":"@Test\n    public void testFilterByFrequency() throws Exception {\n        Random random = getRandom();\n        for (int i = 0; i < 1000; i++) {\n            Document d = new Document();\n            d.add(new StringField(\"id\", \"\" + i, Field.Store.NO));\n            if (i % 100 == 0) {\n                d.add(new StringField(\"high_freq\", \"100\", Field.Store.NO));\n                d.add(new StringField(\"low_freq\", \"100\", Field.Store.NO));\n                d.add(new StringField(\"med_freq\", \"100\", Field.Store.NO));\n            }\n            if (i % 10 == 0) {\n                d.add(new StringField(\"high_freq\", \"10\", Field.Store.NO));\n                d.add(new StringField(\"med_freq\", \"10\", Field.Store.NO));\n            }\n            if (i % 5 == 0) {\n                d.add(new StringField(\"high_freq\", \"5\", Field.Store.NO));\n            }\n            writer.addDocument(d);\n        }\n        writer.forceMerge(1);\n        AtomicReaderContext context = refreshReader();\n        String[] formats = new String[] { \"fst\", \"paged_bytes\", \"concrete_bytes\" };\n        \n        for (String format : formats) {\n            {\n                ifdService.clear();\n                FieldDataType fieldDataType = new FieldDataType(\"string\", ImmutableSettings.builder().put(\"format\", format)\n                        .put(\"filter.frequency.min_segment_size\", 100).put(\"filter.frequency.min\", 0.0d).put(\"filter.frequency.max\", random.nextBoolean() ? 100 : 0.5d));\n                IndexFieldData fieldData = ifdService.getForField(new FieldMapper.Names(\"high_freq\"), fieldDataType);\n                AtomicFieldData.WithOrdinals<ScriptDocValues.Strings> loadDirect = (WithOrdinals<Strings>) fieldData.loadDirect(context);\n                BytesValues.WithOrdinals bytesValues = loadDirect.getBytesValues();\n                Docs ordinals = bytesValues.ordinals();\n                assertThat(2L, equalTo(ordinals.getNumOrds()));\n                assertThat(1000, equalTo(ordinals.getNumDocs()));\n                assertThat(bytesValues.getValueByOrd(1).utf8ToString(), equalTo(\"10\"));\n                assertThat(bytesValues.getValueByOrd(2).utf8ToString(), equalTo(\"100\"));\n            }\n            {\n                ifdService.clear();\n                FieldDataType fieldDataType = new FieldDataType(\"string\", ImmutableSettings.builder().put(\"format\", format)\n                        .put(\"filter.frequency.min_segment_size\", 100).put(\"filter.frequency.min\",  random.nextBoolean() ? 101 : 101d/200.0d).put(\"filter.frequency.max\", 201));\n                IndexFieldData fieldData = ifdService.getForField(new FieldMapper.Names(\"high_freq\"), fieldDataType);\n                AtomicFieldData.WithOrdinals<ScriptDocValues.Strings> loadDirect = (WithOrdinals<Strings>) fieldData.loadDirect(context);\n                BytesValues.WithOrdinals bytesValues = loadDirect.getBytesValues();\n                Docs ordinals = bytesValues.ordinals();\n                assertThat(1L, equalTo(ordinals.getNumOrds()));\n                assertThat(1000, equalTo(ordinals.getNumDocs()));\n                assertThat(bytesValues.getValueByOrd(1).utf8ToString(), equalTo(\"5\"));\n            }\n            \n            {\n                ifdService.clear(); // test # docs with value\n                FieldDataType fieldDataType = new FieldDataType(\"string\", ImmutableSettings.builder().put(\"format\", format)\n                        .put(\"filter.frequency.min_segment_size\", 101).put(\"filter.frequency.min\", random.nextBoolean() ? 101 : 101d/200.0d));\n                IndexFieldData fieldData = ifdService.getForField(new FieldMapper.Names(\"med_freq\"), fieldDataType);\n                AtomicFieldData.WithOrdinals<ScriptDocValues.Strings> loadDirect = (WithOrdinals<Strings>) fieldData.loadDirect(context);\n                BytesValues.WithOrdinals bytesValues = loadDirect.getBytesValues();\n                Docs ordinals = bytesValues.ordinals();\n                assertThat(2L, equalTo(ordinals.getNumOrds()));\n                assertThat(1000, equalTo(ordinals.getNumDocs()));\n                assertThat(bytesValues.getValueByOrd(1).utf8ToString(), equalTo(\"10\"));\n                assertThat(bytesValues.getValueByOrd(2).utf8ToString(), equalTo(\"100\"));\n            }\n            \n            {\n                ifdService.clear();\n                FieldDataType fieldDataType = new FieldDataType(\"string\", ImmutableSettings.builder().put(\"format\", format)\n                        .put(\"filter.frequency.min_segment_size\", 101).put(\"filter.frequency.min\", random.nextBoolean() ? 101 : 101d/200.0d));\n                IndexFieldData fieldData = ifdService.getForField(new FieldMapper.Names(\"med_freq\"), fieldDataType);\n                AtomicFieldData.WithOrdinals<ScriptDocValues.Strings> loadDirect = (WithOrdinals<Strings>) fieldData.loadDirect(context);\n                BytesValues.WithOrdinals bytesValues = loadDirect.getBytesValues();\n                Docs ordinals = bytesValues.ordinals();\n                assertThat(2L, equalTo(ordinals.getNumOrds()));\n                assertThat(1000, equalTo(ordinals.getNumDocs()));\n                assertThat(bytesValues.getValueByOrd(1).utf8ToString(), equalTo(\"10\"));\n                assertThat(bytesValues.getValueByOrd(2).utf8ToString(), equalTo(\"100\"));\n            }\n            \n            {\n                ifdService.clear();\n                FieldDataType fieldDataType = new FieldDataType(\"string\", ImmutableSettings.builder().put(\"format\", format)\n                        .put(\"filter.regex.pattern\", \"\\\\d{2,3}\") // allows 10 & 100\n                        .put(\"filter.frequency.min_segment_size\", 0)\n                        .put(\"filter.frequency.min\", random.nextBoolean() ? 1 : 1d/200.0d) // 100, 10, 5\n                        .put(\"filter.frequency.max\", random.nextBoolean() ? 99 : 99d/200.0d)); // 100\n                IndexFieldData fieldData = ifdService.getForField(new FieldMapper.Names(\"high_freq\"), fieldDataType);\n                AtomicFieldData.WithOrdinals<ScriptDocValues.Strings> loadDirect = (WithOrdinals<Strings>) fieldData.loadDirect(context);\n                BytesValues.WithOrdinals bytesValues = loadDirect.getBytesValues();\n                Docs ordinals = bytesValues.ordinals();\n                assertThat(1L, equalTo(ordinals.getNumOrds()));\n                assertThat(1000, equalTo(ordinals.getNumDocs()));\n                assertThat(bytesValues.getValueByOrd(1).utf8ToString(), equalTo(\"100\"));\n            }\n        }\n\n    }","id":16202,"modified_method":"@Test\n    public void testFilterByFrequency() throws Exception {\n        Random random = getRandom();\n        for (int i = 0; i < 1000; i++) {\n            Document d = new Document();\n            d.add(new StringField(\"id\", \"\" + i, Field.Store.NO));\n            if (i % 100 == 0) {\n                d.add(new StringField(\"high_freq\", \"100\", Field.Store.NO));\n                d.add(new StringField(\"low_freq\", \"100\", Field.Store.NO));\n                d.add(new StringField(\"med_freq\", \"100\", Field.Store.NO));\n            }\n            if (i % 10 == 0) {\n                d.add(new StringField(\"high_freq\", \"10\", Field.Store.NO));\n                d.add(new StringField(\"med_freq\", \"10\", Field.Store.NO));\n            }\n            if (i % 5 == 0) {\n                d.add(new StringField(\"high_freq\", \"5\", Field.Store.NO));\n            }\n            writer.addDocument(d);\n        }\n        writer.forceMerge(1);\n        AtomicReaderContext context = refreshReader();\n        String[] formats = new String[] { \"fst\", \"paged_bytes\"};\n        \n        for (String format : formats) {\n            {\n                ifdService.clear();\n                FieldDataType fieldDataType = new FieldDataType(\"string\", ImmutableSettings.builder().put(\"format\", format)\n                        .put(\"filter.frequency.min_segment_size\", 100).put(\"filter.frequency.min\", 0.0d).put(\"filter.frequency.max\", random.nextBoolean() ? 100 : 0.5d));\n                IndexFieldData fieldData = ifdService.getForField(new FieldMapper.Names(\"high_freq\"), fieldDataType);\n                AtomicFieldData.WithOrdinals<ScriptDocValues.Strings> loadDirect = (WithOrdinals<Strings>) fieldData.loadDirect(context);\n                BytesValues.WithOrdinals bytesValues = loadDirect.getBytesValues();\n                Docs ordinals = bytesValues.ordinals();\n                assertThat(2L, equalTo(ordinals.getNumOrds()));\n                assertThat(1000, equalTo(ordinals.getNumDocs()));\n                assertThat(bytesValues.getValueByOrd(1).utf8ToString(), equalTo(\"10\"));\n                assertThat(bytesValues.getValueByOrd(2).utf8ToString(), equalTo(\"100\"));\n            }\n            {\n                ifdService.clear();\n                FieldDataType fieldDataType = new FieldDataType(\"string\", ImmutableSettings.builder().put(\"format\", format)\n                        .put(\"filter.frequency.min_segment_size\", 100).put(\"filter.frequency.min\",  random.nextBoolean() ? 101 : 101d/200.0d).put(\"filter.frequency.max\", 201));\n                IndexFieldData fieldData = ifdService.getForField(new FieldMapper.Names(\"high_freq\"), fieldDataType);\n                AtomicFieldData.WithOrdinals<ScriptDocValues.Strings> loadDirect = (WithOrdinals<Strings>) fieldData.loadDirect(context);\n                BytesValues.WithOrdinals bytesValues = loadDirect.getBytesValues();\n                Docs ordinals = bytesValues.ordinals();\n                assertThat(1L, equalTo(ordinals.getNumOrds()));\n                assertThat(1000, equalTo(ordinals.getNumDocs()));\n                assertThat(bytesValues.getValueByOrd(1).utf8ToString(), equalTo(\"5\"));\n            }\n            \n            {\n                ifdService.clear(); // test # docs with value\n                FieldDataType fieldDataType = new FieldDataType(\"string\", ImmutableSettings.builder().put(\"format\", format)\n                        .put(\"filter.frequency.min_segment_size\", 101).put(\"filter.frequency.min\", random.nextBoolean() ? 101 : 101d/200.0d));\n                IndexFieldData fieldData = ifdService.getForField(new FieldMapper.Names(\"med_freq\"), fieldDataType);\n                AtomicFieldData.WithOrdinals<ScriptDocValues.Strings> loadDirect = (WithOrdinals<Strings>) fieldData.loadDirect(context);\n                BytesValues.WithOrdinals bytesValues = loadDirect.getBytesValues();\n                Docs ordinals = bytesValues.ordinals();\n                assertThat(2L, equalTo(ordinals.getNumOrds()));\n                assertThat(1000, equalTo(ordinals.getNumDocs()));\n                assertThat(bytesValues.getValueByOrd(1).utf8ToString(), equalTo(\"10\"));\n                assertThat(bytesValues.getValueByOrd(2).utf8ToString(), equalTo(\"100\"));\n            }\n            \n            {\n                ifdService.clear();\n                FieldDataType fieldDataType = new FieldDataType(\"string\", ImmutableSettings.builder().put(\"format\", format)\n                        .put(\"filter.frequency.min_segment_size\", 101).put(\"filter.frequency.min\", random.nextBoolean() ? 101 : 101d/200.0d));\n                IndexFieldData fieldData = ifdService.getForField(new FieldMapper.Names(\"med_freq\"), fieldDataType);\n                AtomicFieldData.WithOrdinals<ScriptDocValues.Strings> loadDirect = (WithOrdinals<Strings>) fieldData.loadDirect(context);\n                BytesValues.WithOrdinals bytesValues = loadDirect.getBytesValues();\n                Docs ordinals = bytesValues.ordinals();\n                assertThat(2L, equalTo(ordinals.getNumOrds()));\n                assertThat(1000, equalTo(ordinals.getNumDocs()));\n                assertThat(bytesValues.getValueByOrd(1).utf8ToString(), equalTo(\"10\"));\n                assertThat(bytesValues.getValueByOrd(2).utf8ToString(), equalTo(\"100\"));\n            }\n            \n            {\n                ifdService.clear();\n                FieldDataType fieldDataType = new FieldDataType(\"string\", ImmutableSettings.builder().put(\"format\", format)\n                        .put(\"filter.regex.pattern\", \"\\\\d{2,3}\") // allows 10 & 100\n                        .put(\"filter.frequency.min_segment_size\", 0)\n                        .put(\"filter.frequency.min\", random.nextBoolean() ? 1 : 1d/200.0d) // 100, 10, 5\n                        .put(\"filter.frequency.max\", random.nextBoolean() ? 99 : 99d/200.0d)); // 100\n                IndexFieldData fieldData = ifdService.getForField(new FieldMapper.Names(\"high_freq\"), fieldDataType);\n                AtomicFieldData.WithOrdinals<ScriptDocValues.Strings> loadDirect = (WithOrdinals<Strings>) fieldData.loadDirect(context);\n                BytesValues.WithOrdinals bytesValues = loadDirect.getBytesValues();\n                Docs ordinals = bytesValues.ordinals();\n                assertThat(1L, equalTo(ordinals.getNumOrds()));\n                assertThat(1000, equalTo(ordinals.getNumDocs()));\n                assertThat(bytesValues.getValueByOrd(1).utf8ToString(), equalTo(\"100\"));\n            }\n        }\n\n    }","commit_id":"43fcc55625b8617e3a2c9ff609305279e6f3e94d","url":"https://github.com/elastic/elasticsearch"},{"original_method":"@Test\n    public void testDuelByteFieldDataImpl() throws ElasticSearchException, IOException, InterruptedException, ExecutionException {\n        prepareCreate(\"test\")\n        .addMapping(\"type\", jsonBuilder().startObject().startObject(\"type\").startObject(\"properties\")\n                .startObject(\"name_concrete\")\n                    .field(\"type\", \"string\")\n                    .startObject(\"fielddata\").field(\"format\", \"concrete_bytes\").endObject()\n                 .endObject()\n                 .startObject(\"name_paged\")\n                    .field(\"type\", \"string\")\n                    .startObject(\"fielddata\").field(\"format\", \"paged_bytes\").endObject()\n                 .endObject()\n                 .startObject(\"name_fst\")\n                    .field(\"type\", \"string\")\n                    .startObject(\"fielddata\").field(\"format\", \"fst\").endObject()\n                 .endObject()\n                 .startObject(\"name_concrete_mv\")\n                    .field(\"type\", \"string\")\n                    .startObject(\"fielddata\").field(\"format\", \"concrete_bytes\").endObject()\n                 .endObject()\n                 .startObject(\"name_paged_mv\")\n                    .field(\"type\", \"string\")\n                    .startObject(\"fielddata\").field(\"format\", \"paged_bytes\").endObject()\n                 .endObject()\n                 .startObject(\"name_fst_mv\")\n                    .field(\"type\", \"string\")\n                    .startObject(\"fielddata\").field(\"format\", \"fst\").endObject()\n                 .endObject()\n                 .startObject(\"filtered\")\n                    .field(\"type\", \"string\")\n                    .startObject(\"fielddata\").field(\"format\", \"fst\").startObject(\"filter\")\n                    .startObject(\"regex\").field(\"pattern\", \"\\\\d{1,2}\").endObject().endObject()\n                    .endObject()\n                    // only 1 or 2 digits \n                 .endObject()\n                  .startObject(\"filtered_mv\")\n                    .field(\"type\", \"string\")\n                    .startObject(\"fielddata\").field(\"format\", \"fst\").startObject(\"filter\")\n                    .startObject(\"regex\").field(\"pattern\", \"\\\\d{1,2}\").endObject().endObject()\n                    .endObject()\n                .endObject().endObject().endObject())\n        .execute().actionGet();\n        client().admin().cluster().prepareHealth().setWaitForEvents(Priority.LANGUID).setWaitForGreenStatus().execute().actionGet();\n\n        for (int i = 0; i < 100; i++) {\n            client().prepareIndex(\"test\", \"type\", \"\"+i).setSource(jsonBuilder().startObject()\n                    .field(\"name_concrete\", \"\"+i)\n                    .field(\"name_paged\", \"\"+i)\n                    .field(\"name_fst\", \"\"+i)\n                    .field(\"filtered\", \"\"+i)\n                    .field(\"name_concrete_mv\", \"\"+i, \"\"+Math.min(99, i+1))\n                    .field(\"name_paged_mv\", \"\"+i,\"\"+ Math.min(99, i+1))\n                    .field(\"name_fst_mv\", \"\"+i,\"\"+Math.min(99, i+1))\n                    .field(\"filtered_mv\", \"\"+i,\"\"+Math.min(99, i+1), \"\"+(100 + i))\n                    .endObject()).execute().actionGet();\n        }\n        \n        for (int i = 0; i < 10; i++) {\n            client().prepareIndex(\"test\", \"type\", \"\"+(i + 100)).setSource(jsonBuilder().startObject()\n                    .field(\"foo\", \"\"+i)\n                    .endObject()).execute().actionGet();\n        }\n       \n       client().admin().indices().prepareFlush().setRefresh(true).execute().actionGet();\n       ConcurrentDuel<Facets> duel = new ConcurrentDuel<Facets>(5);\n       String[] fieldPostFix = new String[] {\"\", \"_mv\"};\n       for (final String postfix : fieldPostFix) {\n             duel.duel(new ConcurrentDuel.DuelJudge<Facets>() {\n    \n                 @Override\n                 public void judge(Facets firstRun, Facets result) {\n                     for (Facet f : result) {\n                         TermsFacet facet = (TermsFacet) f;\n                         assertThat(facet.getName(), equalTo(\"termFacet\"));\n                         TermsFacet firstRunFacet = (TermsFacet) firstRun.getFacets().get(facet.getName());\n                         assertThat(facet.getEntries().size(), equalTo(firstRunFacet.getEntries().size()));\n                       \n                         if (\"_mv\".equals(postfix)) {\n                             assertThat(facet.getEntries().size(), equalTo(10));\n                             assertThat(facet.getTotalCount(), equalTo(199l));\n                             assertThat(facet.getOtherCount(), equalTo(179l));\n                             assertThat(facet.getMissingCount(), equalTo(10l));\n                         } else {\n                             assertThat(facet.getEntries().size(), equalTo(10));\n                             assertThat(facet.getTotalCount(), equalTo(100l));\n                             assertThat(facet.getOtherCount(), equalTo(90l));\n                             assertThat(facet.getMissingCount(), equalTo(10l));\n                         }\n                         List<? extends Entry> right = facet.getEntries();\n                         List<? extends Entry> left = firstRunFacet.getEntries();\n                         \n                         for (int i = 0; i < facet.getEntries().size(); i++) {\n                             assertThat(left.get(i).getTerm(), equalTo(right.get(i).getTerm()));\n                             assertThat(left.get(i).getCount(), equalTo(right.get(i).getCount()));\n                         }              \n                     }\n                 }\n             }, new ConcurrentDuel.DuelExecutor<Facets>() {\n                 AtomicInteger count = new AtomicInteger();\n                 @Override\n                 public Facets run() {\n                     final SearchRequestBuilder facetRequest;\n                     int incrementAndGet = count.incrementAndGet();\n                     final String field;\n                    switch (incrementAndGet % 3) {\n                    case 2:\n                        field =  \"filtered\"+postfix;\n                        break;\n                    case 1:\n                        field = \"name_concrete\"+postfix;\n                        break;\n                    case 0:\n                        field = \"name_paged\"+postfix;\n                        break;\n                    default:\n                        field = \"name_fst\"+postfix;\n                    }\n                     switch(incrementAndGet % 5) {\n                     case 4:\n                         facetRequest = client().prepareSearch()\n                          .setQuery(matchAllQuery())\n                          .addFacet(termsFacet(\"termFacet\").executionHint(\"map\").field(field).script(\"\\\"\\\" + (Integer.parseInt(term) % 100)\").size(10));\n                         break;\n                     case 3:\n                         facetRequest = client().prepareSearch()\n                          .setQuery(matchAllQuery())\n                          .addFacet(termsFacet(\"termFacet\").field(field).regex(\"\\\\d+\").size(10));\n                         break;\n                     case 2:\n                        facetRequest = client().prepareSearch()\n                         .setQuery(matchAllQuery())\n                         .addFacet(termsFacet(\"termFacet\").executionHint(\"map\").field(field).regex(\"\\\\d+\").script(\"term\").size(10));\n                        break;\n                     case 1:\n                         facetRequest = client().prepareSearch()\n                         .setQuery(matchAllQuery())\n                         .addFacet(termsFacet(\"termFacet\").field(field).regex(\"\\\\d+\").script(\"term\").size(10));\n                         break;\n                     case 0:\n                         facetRequest = client().prepareSearch()\n                         .setQuery(matchAllQuery())\n                         .addFacet(termsFacet(\"termFacet\").field(field).size(10));\n                         break;\n                     default:\n                         facetRequest = client().prepareSearch()\n                         .setQuery(matchAllQuery())\n                         .addFacet(termsFacet(\"termFacet\").executionHint(\"map\").field(field).size(10));\n                         break;\n                     }\n                     SearchResponse actionGet = facetRequest.execute().actionGet();\n                     return actionGet.getFacets();\n                 }\n             }, 5000);\n        }\n        \n        duel.close();\n    }","id":16203,"modified_method":"@Test\n    public void testDuelByteFieldDataImpl() throws ElasticSearchException, IOException, InterruptedException, ExecutionException {\n        prepareCreate(\"test\")\n        .addMapping(\"type\", jsonBuilder().startObject().startObject(\"type\").startObject(\"properties\")\n                 .startObject(\"name_paged\")\n                    .field(\"type\", \"string\")\n                    .startObject(\"fielddata\").field(\"format\", \"paged_bytes\").endObject()\n                 .endObject()\n                 .startObject(\"name_fst\")\n                    .field(\"type\", \"string\")\n                    .startObject(\"fielddata\").field(\"format\", \"fst\").endObject()\n                 .endObject()\n                 .startObject(\"name_paged_mv\")\n                    .field(\"type\", \"string\")\n                    .startObject(\"fielddata\").field(\"format\", \"paged_bytes\").endObject()\n                 .endObject()\n                 .startObject(\"name_fst_mv\")\n                    .field(\"type\", \"string\")\n                    .startObject(\"fielddata\").field(\"format\", \"fst\").endObject()\n                 .endObject()\n                 .startObject(\"filtered\")\n                    .field(\"type\", \"string\")\n                    .startObject(\"fielddata\").field(\"format\", \"fst\").startObject(\"filter\")\n                    .startObject(\"regex\").field(\"pattern\", \"\\\\d{1,2}\").endObject().endObject()\n                    .endObject()\n                    // only 1 or 2 digits \n                 .endObject()\n                  .startObject(\"filtered_mv\")\n                    .field(\"type\", \"string\")\n                    .startObject(\"fielddata\").field(\"format\", \"fst\").startObject(\"filter\")\n                    .startObject(\"regex\").field(\"pattern\", \"\\\\d{1,2}\").endObject().endObject()\n                    .endObject()\n                .endObject().endObject().endObject())\n        .execute().actionGet();\n        client().admin().cluster().prepareHealth().setWaitForEvents(Priority.LANGUID).setWaitForGreenStatus().execute().actionGet();\n\n        for (int i = 0; i < 100; i++) {\n            client().prepareIndex(\"test\", \"type\", \"\"+i).setSource(jsonBuilder().startObject()\n                    .field(\"name_paged\", \"\"+i)\n                    .field(\"name_fst\", \"\"+i)\n                    .field(\"filtered\", \"\"+i)\n                    .field(\"name_paged_mv\", \"\"+i,\"\"+ Math.min(99, i+1))\n                    .field(\"name_fst_mv\", \"\"+i,\"\"+Math.min(99, i+1))\n                    .field(\"filtered_mv\", \"\"+i,\"\"+Math.min(99, i+1), \"\"+(100 + i))\n                    .endObject()).execute().actionGet();\n        }\n        \n        for (int i = 0; i < 10; i++) {\n            client().prepareIndex(\"test\", \"type\", \"\"+(i + 100)).setSource(jsonBuilder().startObject()\n                    .field(\"foo\", \"\"+i)\n                    .endObject()).execute().actionGet();\n        }\n       \n       client().admin().indices().prepareFlush().setRefresh(true).execute().actionGet();\n       ConcurrentDuel<Facets> duel = new ConcurrentDuel<Facets>(5);\n       String[] fieldPostFix = new String[] {\"\", \"_mv\"};\n       for (final String postfix : fieldPostFix) {\n             duel.duel(new ConcurrentDuel.DuelJudge<Facets>() {\n    \n                 @Override\n                 public void judge(Facets firstRun, Facets result) {\n                     for (Facet f : result) {\n                         TermsFacet facet = (TermsFacet) f;\n                         assertThat(facet.getName(), equalTo(\"termFacet\"));\n                         TermsFacet firstRunFacet = (TermsFacet) firstRun.getFacets().get(facet.getName());\n                         assertThat(facet.getEntries().size(), equalTo(firstRunFacet.getEntries().size()));\n                       \n                         if (\"_mv\".equals(postfix)) {\n                             assertThat(facet.getEntries().size(), equalTo(10));\n                             assertThat(facet.getTotalCount(), equalTo(199l));\n                             assertThat(facet.getOtherCount(), equalTo(179l));\n                             assertThat(facet.getMissingCount(), equalTo(10l));\n                         } else {\n                             assertThat(facet.getEntries().size(), equalTo(10));\n                             assertThat(facet.getTotalCount(), equalTo(100l));\n                             assertThat(facet.getOtherCount(), equalTo(90l));\n                             assertThat(facet.getMissingCount(), equalTo(10l));\n                         }\n                         List<? extends Entry> right = facet.getEntries();\n                         List<? extends Entry> left = firstRunFacet.getEntries();\n                         \n                         for (int i = 0; i < facet.getEntries().size(); i++) {\n                             assertThat(left.get(i).getTerm(), equalTo(right.get(i).getTerm()));\n                             assertThat(left.get(i).getCount(), equalTo(right.get(i).getCount()));\n                         }              \n                     }\n                 }\n             }, new ConcurrentDuel.DuelExecutor<Facets>() {\n                 AtomicInteger count = new AtomicInteger();\n                 @Override\n                 public Facets run() {\n                     final SearchRequestBuilder facetRequest;\n                     int incrementAndGet = count.incrementAndGet();\n                     final String field;\n                    switch (incrementAndGet % 2) {\n                    case 1:\n                        field =  \"filtered\"+postfix;\n                        break;\n                    case 0:\n                        field = \"name_paged\"+postfix;\n                        break;\n                    default:\n                        field = \"name_fst\"+postfix;\n                    }\n                     switch(incrementAndGet % 5) {\n                     case 4:\n                         facetRequest = client().prepareSearch()\n                          .setQuery(matchAllQuery())\n                          .addFacet(termsFacet(\"termFacet\").executionHint(\"map\").field(field).script(\"\\\"\\\" + (Integer.parseInt(term) % 100)\").size(10));\n                         break;\n                     case 3:\n                         facetRequest = client().prepareSearch()\n                          .setQuery(matchAllQuery())\n                          .addFacet(termsFacet(\"termFacet\").field(field).regex(\"\\\\d+\").size(10));\n                         break;\n                     case 2:\n                        facetRequest = client().prepareSearch()\n                         .setQuery(matchAllQuery())\n                         .addFacet(termsFacet(\"termFacet\").executionHint(\"map\").field(field).regex(\"\\\\d+\").script(\"term\").size(10));\n                        break;\n                     case 1:\n                         facetRequest = client().prepareSearch()\n                         .setQuery(matchAllQuery())\n                         .addFacet(termsFacet(\"termFacet\").field(field).regex(\"\\\\d+\").script(\"term\").size(10));\n                         break;\n                     case 0:\n                         facetRequest = client().prepareSearch()\n                         .setQuery(matchAllQuery())\n                         .addFacet(termsFacet(\"termFacet\").field(field).size(10));\n                         break;\n                     default:\n                         facetRequest = client().prepareSearch()\n                         .setQuery(matchAllQuery())\n                         .addFacet(termsFacet(\"termFacet\").executionHint(\"map\").field(field).size(10));\n                         break;\n                     }\n                     SearchResponse actionGet = facetRequest.execute().actionGet();\n                     return actionGet.getFacets();\n                 }\n             }, 5000);\n        }\n        \n        duel.close();\n    }","commit_id":"43fcc55625b8617e3a2c9ff609305279e6f3e94d","url":"https://github.com/elastic/elasticsearch"},{"original_method":"@Test\n    public void testTermFacet_stringFields() throws Throwable {\n        client.admin().indices().prepareDelete().execute().actionGet();\n        client.admin().indices().prepareCreate(\"test\")\n                .addMapping(\"type1\", jsonBuilder().startObject()\n                        .startObject(\"type1\")\n                        .startObject(\"properties\")\n                        .startObject(\"field1_concrete\")\n                        .field(\"type\", \"string\")\n                        .field(\"index\", \"not_analyzed\")\n                        .startObject(\"fielddata\")\n                        .field(\"format\", \"concrete_bytes\")\n                        .endObject()\n                        .endObject()\n                        .startObject(\"field1_paged\")\n                        .field(\"type\", \"string\")\n                        .field(\"index\", \"not_analyzed\")\n                        .startObject(\"fielddata\")\n                        .field(\"format\", \"paged_bytes\")\n                        .endObject()\n                        .endObject()\n                        .startObject(\"field1_fst\")\n                        .field(\"type\", \"string\")\n                        .field(\"index\", \"not_analyzed\")\n                        .startObject(\"fielddata\")\n                        .field(\"format\", \"fst\")\n                        .endObject()\n                        .endObject()\n                        .startObject(\"field2\")\n                        .field(\"type\", \"string\")\n                        .field(\"index\", \"not_analyzed\")\n                        .startObject(\"fielddata\")\n                        .field(\"format\", \"fst\")\n                        .endObject()\n                        .endObject()\n                        .startObject(\"q_field\")\n                        .field(\"type\", \"string\")\n                        .field(\"index\", \"not_analyzed\")\n                        .endObject()\n                        .endObject()\n                        .endObject().endObject()\n                )\n                .execute().actionGet();\n\n\n        long seed = System.currentTimeMillis(); // LuceneTestCase...\n        try {\n            Random random = new Random(seed);\n            int numOfQueryValues = 50;\n            String[] queryValues = new String[numOfQueryValues];\n            for (int i = 0; i < numOfQueryValues; i++) {\n                queryValues[i] = RandomStringGenerator.random(5, 0, 0, true, true, null, random);\n            }\n\n            Set<String> uniqueValuesSet = new HashSet<String>();\n            int numOfVals = 400;\n            for (int i = 0; i < numOfVals; i++) {\n                uniqueValuesSet.add(RandomStringGenerator.random(10, 0, 0, true, true, null, random));\n            }\n            String[] allUniqueFieldValues = uniqueValuesSet.toArray(new String[uniqueValuesSet.size()]);\n\n            Set<String> allField1Values = new HashSet<String>();\n            Set<String> allField1AndField2Values = new HashSet<String>();\n            Map<String, Map<String, Integer>> queryValToField1FacetEntries = new HashMap<String, Map<String, Integer>>();\n            Map<String, Map<String, Integer>> queryValToField1and2FacetEntries = new HashMap<String, Map<String, Integer>>();\n            for (int i = 1; i <= numDocs(); i++) {\n                int numField1Values = random.nextInt(17);\n                Set<String> field1Values = new HashSet<String>(numField1Values);\n                for (int j = 0; j <= numField1Values; j++) {\n                    boolean added = false;\n                    while (!added) {\n                        added = field1Values.add(allUniqueFieldValues[random.nextInt(numOfVals)]);\n                    }\n                }\n                allField1Values.addAll(field1Values);\n                allField1AndField2Values.addAll(field1Values);\n                String field2Val = allUniqueFieldValues[random.nextInt(numOfVals)];\n                allField1AndField2Values.add(field2Val);\n                String queryVal = queryValues[random.nextInt(numOfQueryValues)];\n                client.prepareIndex(\"test\", \"type1\", Integer.toString(i))\n                        .setSource(jsonBuilder().startObject()\n                                .field(\"field1_concrete\", field1Values)\n                                .field(\"field1_paged\", field1Values)\n                                .field(\"field1_fst\", field1Values)\n                                .field(\"field2\", field2Val)\n                                .field(\"q_field\", queryVal)\n                                .endObject())\n                        .execute().actionGet();\n\n                if (random.nextInt(2000) == 854) {\n                    client.admin().indices().prepareFlush(\"test\").execute().actionGet();\n                }\n                addControlValues(queryValToField1FacetEntries, field1Values, queryVal);\n                addControlValues(queryValToField1and2FacetEntries, field1Values, queryVal);\n                addControlValues(queryValToField1and2FacetEntries, field2Val, queryVal);\n            }\n\n            client.admin().indices().prepareRefresh().execute().actionGet();\n            String[] facetFields = new String[]{\"field1_concrete\", \"field1_paged\", \"field1_fst\"};\n            TermsFacet.ComparatorType[] compTypes = TermsFacet.ComparatorType.values();\n            for (String facetField : facetFields) {\n                for (String queryVal : queryValToField1FacetEntries.keySet()) {\n                    Set<String> allFieldValues;\n                    Map<String, Integer> queryControlFacets;\n                    TermsFacet.ComparatorType compType = compTypes[random.nextInt(compTypes.length)];\n                    TermsFacetBuilder termsFacetBuilder = FacetBuilders.termsFacet(\"facet1\").order(compType);\n\n                    boolean useFields;\n                    if (random.nextInt(4) == 3) {\n                        useFields = true;\n                        queryControlFacets = queryValToField1and2FacetEntries.get(queryVal);\n                        allFieldValues = allField1AndField2Values;\n                        termsFacetBuilder.fields(facetField, \"field2\");\n                    } else {\n                        queryControlFacets = queryValToField1FacetEntries.get(queryVal);\n                        allFieldValues = allField1Values;\n                        useFields = false;\n                        termsFacetBuilder.field(facetField);\n                    }\n                    int size;\n                    if (numberOfShards() == 1 || compType == TermsFacet.ComparatorType.TERM || compType == TermsFacet.ComparatorType.REVERSE_TERM) {\n                        size = random.nextInt(queryControlFacets.size());\n                    } else {\n                        size = allFieldValues.size();\n                    }\n                    termsFacetBuilder.size(size);\n\n                    if (random.nextBoolean()) {\n                        termsFacetBuilder.executionHint(\"map\");\n                    }\n                    List<String> excludes = new ArrayList<String>();\n                    if (random.nextBoolean()) {\n                        int numExcludes = random.nextInt(5) + 1;\n                        List<String> facetValues = new ArrayList<String>(queryControlFacets.keySet());\n                        for (int i = 0; i < numExcludes; i++) {\n                            excludes.add(facetValues.get(random.nextInt(facetValues.size())));\n                        }\n                        termsFacetBuilder.exclude(excludes.toArray());\n                    }\n                    String regex = null;\n                    if (random.nextBoolean()) {\n                        List<String> facetValues = new ArrayList<String>(queryControlFacets.keySet());\n                        regex = facetValues.get(random.nextInt(facetValues.size()));\n                        regex = \"^\" + regex.substring(0, regex.length() / 2) + \".*\";\n                        termsFacetBuilder.regex(regex);\n                    }\n\n                    boolean allTerms = random.nextInt(10) == 3;\n                    termsFacetBuilder.allTerms(allTerms);\n\n                    SearchResponse response = client.prepareSearch(\"test\")\n                            .setQuery(QueryBuilders.termQuery(\"q_field\", queryVal))\n                            .addFacet(termsFacetBuilder)\n                            .execute().actionGet();\n                    TermsFacet actualFacetEntries = response.getFacets().facet(\"facet1\");\n\n                    List<Tuple<Text, Integer>> expectedFacetEntries = getExpectedFacetEntries(allFieldValues, queryControlFacets, size, compType, excludes, regex, allTerms);\n                    String reason = String.format(\"query: [%s] field: [%s] size: [%d] order: [%s] all_terms: [%s] fields: [%s] regex: [%s] excludes: [%s]\", queryVal, facetField, size, compType, allTerms, useFields, regex, excludes);\n                    assertThat(reason, actualFacetEntries.getEntries().size(), equalTo(expectedFacetEntries.size()));\n                    for (int i = 0; i < expectedFacetEntries.size(); i++) {\n                        assertThat(reason, actualFacetEntries.getEntries().get(i).getTerm(), equalTo(expectedFacetEntries.get(i).v1()));\n                        assertThat(reason, actualFacetEntries.getEntries().get(i).getCount(), equalTo(expectedFacetEntries.get(i).v2()));\n                    }\n                }\n            }\n        } catch (Throwable t) {\n            logger.error(\"Failed with seed:\" + seed);\n            throw t;\n        }\n    }","id":16204,"modified_method":"@Test\n    public void testTermFacet_stringFields() throws Throwable {\n        client.admin().indices().prepareDelete().execute().actionGet();\n        client.admin().indices().prepareCreate(\"test\")\n                .addMapping(\"type1\", jsonBuilder().startObject()\n                        .startObject(\"type1\")\n                        .startObject(\"properties\")\n                        .startObject(\"field1_paged\")\n                        .field(\"type\", \"string\")\n                        .field(\"index\", \"not_analyzed\")\n                        .startObject(\"fielddata\")\n                        .field(\"format\", \"paged_bytes\")\n                        .endObject()\n                        .endObject()\n                        .startObject(\"field1_fst\")\n                        .field(\"type\", \"string\")\n                        .field(\"index\", \"not_analyzed\")\n                        .startObject(\"fielddata\")\n                        .field(\"format\", \"fst\")\n                        .endObject()\n                        .endObject()\n                        .startObject(\"field2\")\n                        .field(\"type\", \"string\")\n                        .field(\"index\", \"not_analyzed\")\n                        .startObject(\"fielddata\")\n                        .field(\"format\", \"fst\")\n                        .endObject()\n                        .endObject()\n                        .startObject(\"q_field\")\n                        .field(\"type\", \"string\")\n                        .field(\"index\", \"not_analyzed\")\n                        .endObject()\n                        .endObject()\n                        .endObject().endObject()\n                )\n                .execute().actionGet();\n\n\n        long seed = System.currentTimeMillis(); // LuceneTestCase...\n        try {\n            Random random = new Random(seed);\n            int numOfQueryValues = 50;\n            String[] queryValues = new String[numOfQueryValues];\n            for (int i = 0; i < numOfQueryValues; i++) {\n                queryValues[i] = RandomStringGenerator.random(5, 0, 0, true, true, null, random);\n            }\n\n            Set<String> uniqueValuesSet = new HashSet<String>();\n            int numOfVals = 400;\n            for (int i = 0; i < numOfVals; i++) {\n                uniqueValuesSet.add(RandomStringGenerator.random(10, 0, 0, true, true, null, random));\n            }\n            String[] allUniqueFieldValues = uniqueValuesSet.toArray(new String[uniqueValuesSet.size()]);\n\n            Set<String> allField1Values = new HashSet<String>();\n            Set<String> allField1AndField2Values = new HashSet<String>();\n            Map<String, Map<String, Integer>> queryValToField1FacetEntries = new HashMap<String, Map<String, Integer>>();\n            Map<String, Map<String, Integer>> queryValToField1and2FacetEntries = new HashMap<String, Map<String, Integer>>();\n            for (int i = 1; i <= numDocs(); i++) {\n                int numField1Values = random.nextInt(17);\n                Set<String> field1Values = new HashSet<String>(numField1Values);\n                for (int j = 0; j <= numField1Values; j++) {\n                    boolean added = false;\n                    while (!added) {\n                        added = field1Values.add(allUniqueFieldValues[random.nextInt(numOfVals)]);\n                    }\n                }\n                allField1Values.addAll(field1Values);\n                allField1AndField2Values.addAll(field1Values);\n                String field2Val = allUniqueFieldValues[random.nextInt(numOfVals)];\n                allField1AndField2Values.add(field2Val);\n                String queryVal = queryValues[random.nextInt(numOfQueryValues)];\n                client.prepareIndex(\"test\", \"type1\", Integer.toString(i))\n                        .setSource(jsonBuilder().startObject()\n                                .field(\"field1_paged\", field1Values)\n                                .field(\"field1_fst\", field1Values)\n                                .field(\"field2\", field2Val)\n                                .field(\"q_field\", queryVal)\n                                .endObject())\n                        .execute().actionGet();\n\n                if (random.nextInt(2000) == 854) {\n                    client.admin().indices().prepareFlush(\"test\").execute().actionGet();\n                }\n                addControlValues(queryValToField1FacetEntries, field1Values, queryVal);\n                addControlValues(queryValToField1and2FacetEntries, field1Values, queryVal);\n                addControlValues(queryValToField1and2FacetEntries, field2Val, queryVal);\n            }\n\n            client.admin().indices().prepareRefresh().execute().actionGet();\n            String[] facetFields = new String[]{\"field1_paged\", \"field1_fst\"};\n            TermsFacet.ComparatorType[] compTypes = TermsFacet.ComparatorType.values();\n            for (String facetField : facetFields) {\n                for (String queryVal : queryValToField1FacetEntries.keySet()) {\n                    Set<String> allFieldValues;\n                    Map<String, Integer> queryControlFacets;\n                    TermsFacet.ComparatorType compType = compTypes[random.nextInt(compTypes.length)];\n                    TermsFacetBuilder termsFacetBuilder = FacetBuilders.termsFacet(\"facet1\").order(compType);\n\n                    boolean useFields;\n                    if (random.nextInt(4) == 3) {\n                        useFields = true;\n                        queryControlFacets = queryValToField1and2FacetEntries.get(queryVal);\n                        allFieldValues = allField1AndField2Values;\n                        termsFacetBuilder.fields(facetField, \"field2\");\n                    } else {\n                        queryControlFacets = queryValToField1FacetEntries.get(queryVal);\n                        allFieldValues = allField1Values;\n                        useFields = false;\n                        termsFacetBuilder.field(facetField);\n                    }\n                    int size;\n                    if (numberOfShards() == 1 || compType == TermsFacet.ComparatorType.TERM || compType == TermsFacet.ComparatorType.REVERSE_TERM) {\n                        size = random.nextInt(queryControlFacets.size());\n                    } else {\n                        size = allFieldValues.size();\n                    }\n                    termsFacetBuilder.size(size);\n\n                    if (random.nextBoolean()) {\n                        termsFacetBuilder.executionHint(\"map\");\n                    }\n                    List<String> excludes = new ArrayList<String>();\n                    if (random.nextBoolean()) {\n                        int numExcludes = random.nextInt(5) + 1;\n                        List<String> facetValues = new ArrayList<String>(queryControlFacets.keySet());\n                        for (int i = 0; i < numExcludes; i++) {\n                            excludes.add(facetValues.get(random.nextInt(facetValues.size())));\n                        }\n                        termsFacetBuilder.exclude(excludes.toArray());\n                    }\n                    String regex = null;\n                    if (random.nextBoolean()) {\n                        List<String> facetValues = new ArrayList<String>(queryControlFacets.keySet());\n                        regex = facetValues.get(random.nextInt(facetValues.size()));\n                        regex = \"^\" + regex.substring(0, regex.length() / 2) + \".*\";\n                        termsFacetBuilder.regex(regex);\n                    }\n\n                    boolean allTerms = random.nextInt(10) == 3;\n                    termsFacetBuilder.allTerms(allTerms);\n\n                    SearchResponse response = client.prepareSearch(\"test\")\n                            .setQuery(QueryBuilders.termQuery(\"q_field\", queryVal))\n                            .addFacet(termsFacetBuilder)\n                            .execute().actionGet();\n                    TermsFacet actualFacetEntries = response.getFacets().facet(\"facet1\");\n\n                    List<Tuple<Text, Integer>> expectedFacetEntries = getExpectedFacetEntries(allFieldValues, queryControlFacets, size, compType, excludes, regex, allTerms);\n                    String reason = String.format(\"query: [%s] field: [%s] size: [%d] order: [%s] all_terms: [%s] fields: [%s] regex: [%s] excludes: [%s]\", queryVal, facetField, size, compType, allTerms, useFields, regex, excludes);\n                    assertThat(reason, actualFacetEntries.getEntries().size(), equalTo(expectedFacetEntries.size()));\n                    for (int i = 0; i < expectedFacetEntries.size(); i++) {\n                        assertThat(reason, actualFacetEntries.getEntries().get(i).getTerm(), equalTo(expectedFacetEntries.get(i).v1()));\n                        assertThat(reason, actualFacetEntries.getEntries().get(i).getCount(), equalTo(expectedFacetEntries.get(i).v2()));\n                    }\n                }\n            }\n        } catch (Throwable t) {\n            logger.error(\"Failed with seed:\" + seed);\n            throw t;\n        }\n    }","commit_id":"da5dff9ee445787239c713faf347f59970213e4d","url":"https://github.com/elastic/elasticsearch"},{"original_method":"@Override\n    public boolean apply(Game game, Ability source) {\n        Player controller = game.getPlayer(source.getControllerId());\n        if (controller != null) {\n            if (putOnCard) {\n                Card card = game.getCard(source.getSourceId());\n                if (card != null) {\n                    if (counter != null) {\n                        Counter newCounter = counter.copy();\n                        int countersToAdd = amount.calculate(game, source, this);\n                        if (countersToAdd > 0 && newCounter.getCount() == 1) {\n                            countersToAdd--;\n                        }\n                        newCounter.add(countersToAdd);\n                        card.addCounters(newCounter, game);\n                        if (informPlayers) {\n                            Player player = game.getPlayer(source.getControllerId());\n                            if (player != null) {\n                                game.informPlayers(new StringBuilder(player.getName()).append(\" puts \").append(newCounter.getCount()).append(\" \").append(newCounter.getName().toLowerCase()).append(\" counter on \").append(card.getLogName()).toString());\n                            }\n                        }\n                    }\n                    return true;\n                }\n            } else {\n                Permanent permanent = game.getPermanent(source.getSourceId());\n                if (permanent != null) {\n                    if (counter != null) {\n                        Counter newCounter = counter.copy();\n                        int countersToAdd = amount.calculate(game, source, this);\n                        if (countersToAdd > 0 && newCounter.getCount() == 1) {\n                            countersToAdd--;\n                        }\n                        newCounter.add(countersToAdd);\n                        int before = permanent.getCounters().getCount(newCounter.getName());\n                        permanent.addCounters(newCounter, game);\n                        int amountAdded = permanent.getCounters().getCount(newCounter.getName()) - before;\n                        if (informPlayers) {\n                            Player player = game.getPlayer(source.getControllerId());\n                            if (player != null) {\n                                game.informPlayers(player.getName()+\" puts \"+amountAdded+\" \"+newCounter.getName().toLowerCase()+\" counter on \"+permanent.getLogName());\n                            }\n                        }\n                    }\n                }\n            }\n            return true;\n        }\n        return false;\n    }","id":16205,"modified_method":"@Override\n    public boolean apply(Game game, Ability source) {\n        Player controller = game.getPlayer(source.getControllerId());\n        if (controller != null) {\n            if (putOnCard) {\n                Card card = game.getCard(source.getSourceId());\n                if (card != null) {\n                    if (counter != null) {\n                        Counter newCounter = counter.copy();\n                        int countersToAdd = amount.calculate(game, source, this);\n                        if (countersToAdd > 0 && newCounter.getCount() == 1) {\n                            countersToAdd--;\n                        }\n                        newCounter.add(countersToAdd);\n                        card.addCounters(newCounter, game);\n                        if (informPlayers) {\n                            Player player = game.getPlayer(source.getControllerId());\n                            if (player != null) {\n                                game.informPlayers(new StringBuilder(player.getName()).append(\" puts \").append(newCounter.getCount()).append(\" \").append(newCounter.getName().toLowerCase()).append(\" counter on \").append(card.getLogName()).toString());\n                            }\n                        }\n                    }\n                    return true;\n                }\n            } else {\n                Permanent permanent = game.getPermanent(source.getSourceId());\n                if (permanent != null) {\n                    if (counter != null) {\n                        Counter newCounter = counter.copy();\n                        int countersToAdd = amount.calculate(game, source, this);\n                        if (countersToAdd > 0) {\n                            if (countersToAdd > 0 && newCounter.getCount() == 1) {\n                                countersToAdd--;\n                            }\n                            newCounter.add(countersToAdd);\n                            int before = permanent.getCounters().getCount(newCounter.getName());\n                            permanent.addCounters(newCounter, game);\n                            int amountAdded = permanent.getCounters().getCount(newCounter.getName()) - before;\n                            if (informPlayers) {\n                                Player player = game.getPlayer(source.getControllerId());\n                                if (player != null) {\n                                    game.informPlayers(player.getName()+\" puts \"+amountAdded+\" \"+newCounter.getName().toLowerCase()+\" counter on \"+permanent.getLogName());\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n            return true;\n        }\n        return false;\n    }","commit_id":"325aab10a212ded168269136d158d3851e5de111","url":"https://github.com/magefree/mage"},{"original_method":"public AvatarOfTheResolute(UUID ownerId) {\r\n        super(ownerId, 175, \"Avatar of the Resolute\", Rarity.RARE, new CardType[]{CardType.CREATURE}, \"{G}{G}\");\r\n        this.expansionSetCode = \"DTK\";\r\n        this.subtype.add(\"Avatar\");\r\n        this.power = new MageInt(3);\r\n        this.toughness = new MageInt(2);\r\n\r\n        // Reach\r\n        this.addAbility(ReachAbility.getInstance());\r\n        \r\n        // Trample\r\n        this.addAbility(TrampleAbility.getInstance());\r\n        \r\n        // Avatar of the Resolute enters the battlefield with a +1/+1 counter on it for each other creature you control with a +1/+1 counter on it.\r\n        DynamicValue numberCounters = new PermanentsOnBattlefieldCount(filter);\r\n        this.addAbility(new EntersBattlefieldAbility(new AddCountersSourceEffect(CounterType.P1P1.createInstance(), numberCounters, true),\r\n                \"with a +1/+1 counter on it for each other creature you control with a +1/+1 counter on it\"));\r\n        \r\n    }","id":16206,"modified_method":"public AvatarOfTheResolute(UUID ownerId) {\r\n        super(ownerId, 175, \"Avatar of the Resolute\", Rarity.RARE, new CardType[]{CardType.CREATURE}, \"{G}{G}\");\r\n        this.expansionSetCode = \"DTK\";\r\n        this.subtype.add(\"Avatar\");\r\n        this.power = new MageInt(3);\r\n        this.toughness = new MageInt(2);\r\n\r\n        // Reach\r\n        this.addAbility(ReachAbility.getInstance());\r\n        \r\n        // Trample\r\n        this.addAbility(TrampleAbility.getInstance());\r\n        \r\n        // Avatar of the Resolute enters the battlefield with a +1/+1 counter on it for each other creature you control with a +1/+1 counter on it.\r\n        DynamicValue numberCounters = new PermanentsOnBattlefieldCount(filter);\r\n        this.addAbility(new EntersBattlefieldAbility(new AddCountersSourceEffect(CounterType.P1P1.createInstance(0), numberCounters, true),\r\n                \"with a +1/+1 counter on it for each other creature you control with a +1/+1 counter on it\"));\r\n        \r\n    }","commit_id":"325aab10a212ded168269136d158d3851e5de111","url":"https://github.com/magefree/mage"},{"original_method":"public CallToMind(UUID ownerId) {\n        super(ownerId, 47, \"Call to Mind\", Rarity.UNCOMMON, new CardType[]{CardType.SORCERY}, \"{2}{U}\");\n        this.expansionSetCode = \"M11\";\n        this.color.setBlue(true);\n\n        this.getSpellAbility().addEffect(new ReturnToHandTargetEffect());\n        this.getSpellAbility().addTarget(new TargetCardInYourGraveyard(filter));\n    }","id":16207,"modified_method":"public CallToMind(UUID ownerId) {\n        super(ownerId, 47, \"Call to Mind\", Rarity.UNCOMMON, new CardType[]{CardType.SORCERY}, \"{2}{U}\");\n        this.expansionSetCode = \"M11\";\n\n        // Return target instant or sorcery card from your graveyard to your hand.\n        this.getSpellAbility().addEffect(new ReturnToHandTargetEffect());\n        this.getSpellAbility().addTarget(new TargetCardInYourGraveyard(new FilterInstantOrSorceryCard(\"instant or sorcery card from your graveyard\")));\n    }","commit_id":"325aab10a212ded168269136d158d3851e5de111","url":"https://github.com/magefree/mage"},{"original_method":"@Override\r\n    public boolean checkTrigger(GameEvent event, Game game) {\r\n        if (event.getType() == EventType.TARGETED && game.getOpponents(this.controllerId).contains(event.getPlayerId())) {\r\n            Permanent creature = game.getPermanent(event.getTargetId());\r\n            if (creature != null && filter.match(creature, getSourceId(), getControllerId(), game)) {\r\n                this.getTargets().clear();\r\n                TargetStackObject target = new TargetStackObject();\r\n                target.add(event.getSourceId(), game);\r\n                this.addTarget(target);\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }","id":16208,"modified_method":"@Override\r\n    public boolean checkTrigger(GameEvent event, Game game) {\r\n        if (game.getOpponents(this.controllerId).contains(event.getPlayerId())) {\r\n            Permanent creature = game.getPermanent(event.getTargetId());\r\n            if (creature != null && filter.match(creature, getSourceId(), getControllerId(), game)) {\r\n                this.getTargets().clear();\r\n                TargetStackObject target = new TargetStackObject();\r\n                target.add(event.getSourceId(), game);\r\n                this.addTarget(target);\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }","commit_id":"325aab10a212ded168269136d158d3851e5de111","url":"https://github.com/magefree/mage"},{"original_method":"public DraconicRoar(UUID ownerId) {\r\n        super(ownerId, 134, \"Draconic Roar\", Rarity.UNCOMMON, new CardType[]{CardType.INSTANT}, \"{1}{R}\");\r\n        this.expansionSetCode = \"DTK\";\r\n\r\n        // As an additional cost to cast Draconic Roar, you may reveal a Dragon card from your hand.\r\n        this.getSpellAbility().addCost(new RevealTargetFromHandCost(new TargetCardInHand(0,1, new FilterCreatureCard(\"a Dragon card\"))));\r\n        // TODO: You may is missing\r\n\r\n        // Draconic Roar deals 3 damage to target creature. If you revealed a Dragon card or controlled a Dragon as you cast Draconic Roar, Draconic Roar deals 3 damage to that creature's controller.\r\n        this.getSpellAbility().addEffect(new DamageTargetEffect(3));\r\n        this.getSpellAbility().addTarget(new TargetCreaturePermanent());\r\n        this.getSpellAbility().addEffect(new DraconicRoarEffect());\r\n        this.getSpellAbility().addWatcher(new DraconicRoarCastWatcher());\r\n    }","id":16209,"modified_method":"public DraconicRoar(UUID ownerId) {\r\n        super(ownerId, 134, \"Draconic Roar\", Rarity.UNCOMMON, new CardType[]{CardType.INSTANT}, \"{1}{R}\");\r\n        this.expansionSetCode = \"DTK\";\r\n\r\n        // As an additional cost to cast Draconic Roar, you may reveal a Dragon card from your hand.\r\n        this.getSpellAbility().addEffect(new InfoEffect(\"As an additional cost to cast {this}, you may reveal a Dragon card from your hand\"));\r\n\r\n        // Draconic Roar deals 3 damage to target creature. If you revealed a Dragon card or controlled a Dragon as you cast Draconic Roar, Draconic Roar deals 3 damage to that creature's controller.\r\n        this.getSpellAbility().addEffect(new DamageTargetEffect(3));\r\n        this.getSpellAbility().addTarget(new TargetCreaturePermanent());\r\n        this.getSpellAbility().addEffect(new DraconicRoarEffect());\r\n        this.getSpellAbility().addWatcher(new DraconicRoarCastWatcher());\r\n    }","commit_id":"325aab10a212ded168269136d158d3851e5de111","url":"https://github.com/magefree/mage"},{"original_method":"public FissureVent(UUID ownerId) {\n        super(ownerId, 144, \"Fissure Vent\", Rarity.COMMON, new CardType[]{CardType.SORCERY}, \"{3}{R}{R}\");\n        this.expansionSetCode = \"ROE\";\n        this.color.setRed(true);\n        this.getSpellAbility().addTarget(new TargetArtifactPermanent());\n        this.getSpellAbility().addEffect(new DestroyTargetEffect());\n        Mode mode1 = new Mode();\n        mode1.getTargets().add(new TargetNonBasicLandPermanent());\n        mode1.getEffects().add(new DestroyTargetEffect());\n        this.getSpellAbility().addMode(mode1);\n        Mode mode2 = new Mode();\n        mode2.getTargets().add(new TargetArtifactPermanent());\n        mode2.getTargets().add(new TargetNonBasicLandPermanent());\n        mode2.getEffects().add(new DestroyMultiTargetEffect());\n        this.getSpellAbility().addMode(mode2);\n    }","id":16210,"modified_method":"public FissureVent(UUID ownerId) {\n        super(ownerId, 144, \"Fissure Vent\", Rarity.COMMON, new CardType[]{CardType.SORCERY}, \"{3}{R}{R}\");\n        this.expansionSetCode = \"ROE\";\n\n        // Choose one or both - Destroy target artifact; and/or destroy target nonbasic land.\n        this.getSpellAbility().getModes().setMinModes(1);\n        this.getSpellAbility().getModes().setMaxModes(2);\n\n        this.getSpellAbility().addTarget(new TargetArtifactPermanent());\n        this.getSpellAbility().addEffect(new DestroyTargetEffect());\n\n        Mode mode1 = new Mode();\n        mode1.getTargets().add(new TargetNonBasicLandPermanent());\n        mode1.getEffects().add(new DestroyTargetEffect());\n        this.getSpellAbility().addMode(mode1);\n    }","commit_id":"325aab10a212ded168269136d158d3851e5de111","url":"https://github.com/magefree/mage"},{"original_method":"public RallyTheForces (UUID ownerId) {\r\n        super(ownerId, 73, \"Rally the Forces\", Rarity.COMMON, new CardType[]{CardType.INSTANT}, \"{2}{R}\");\r\n        this.expansionSetCode = \"MBS\";\r\n        this.color.setRed(true);\r\n        this.getSpellAbility().addEffect(new BoostAllEffect(1, 1, Duration.EndOfTurn, filter, false));\r\n        this.getSpellAbility().addEffect(new GainAbilityAllEffect(FirstStrikeAbility.getInstance(), Duration.EndOfTurn, filter, false));\r\n    }","id":16211,"modified_method":"public RallyTheForces (UUID ownerId) {\r\n        super(ownerId, 73, \"Rally the Forces\", Rarity.COMMON, new CardType[]{CardType.INSTANT}, \"{2}{R}\");\r\n        this.expansionSetCode = \"MBS\";\r\n\r\n        // Attacking creatures get +1/+0 and gain first strike until end of turn.\r\n        Effect effect = new BoostAllEffect(1, 0, Duration.EndOfTurn, new FilterAttackingCreature(\"Attacking creatures\"), false);\r\n        effect.setText(\"Attacking creatures get +1/+0\");\r\n        this.getSpellAbility().addEffect(effect);\r\n        effect = new GainAbilityAllEffect(FirstStrikeAbility.getInstance(), Duration.EndOfTurn, new FilterAttackingCreature(\"Attacking creatures\"), false);\r\n        effect.setText(\"and gain first strike until end of turn\");\r\n        this.getSpellAbility().addEffect(effect);\r\n    }","commit_id":"325aab10a212ded168269136d158d3851e5de111","url":"https://github.com/magefree/mage"},{"original_method":"public GrimDiscovery(UUID ownerId) {\r\n        super(ownerId, 91, \"Grim Discovery\", Rarity.COMMON, new CardType[]{CardType.SORCERY}, \"{1}{B}\");\r\n        this.expansionSetCode = \"ZEN\";\r\n\r\n        this.color.setBlack(true);\r\n\r\n        // Choose one or both - Return target creature card from your graveyard to your hand; and/or return target land card from your graveyard to your hand.\r\n        this.getSpellAbility().addEffect(new ReturnToHandTargetEffect());\r\n        this.getSpellAbility().addTarget(new TargetCardInYourGraveyard(filterCreatureCard));\r\n\r\n        Mode mode1 = new Mode();\r\n        mode1.getEffects().add(new ReturnToHandTargetEffect());\r\n        mode1.getTargets().add(new TargetCardInYourGraveyard(filterLandCard));\r\n        this.getSpellAbility().addMode(mode1);\r\n\r\n        Mode mode2 = new Mode();\r\n        mode2.getEffects().add(new GrimDiscoveryEffect());\r\n        mode2.getTargets().add(new TargetCardInYourGraveyard(filterCreatureCard));\r\n        mode2.getTargets().add(new TargetCardInYourGraveyard(filterLandCard));\r\n        this.getSpellAbility().addMode(mode2);\r\n    }","id":16212,"modified_method":"public GrimDiscovery(UUID ownerId) {\r\n        super(ownerId, 91, \"Grim Discovery\", Rarity.COMMON, new CardType[]{CardType.SORCERY}, \"{1}{B}\");\r\n        this.expansionSetCode = \"ZEN\";\r\n\r\n        this.color.setBlack(true);\r\n\r\n        // Choose one or both -\r\n        this.getSpellAbility().getModes().setMinModes(1);\r\n        this.getSpellAbility().getModes().setMaxModes(2);\r\n        // Return target creature card from your graveyard to your hand;\r\n        this.getSpellAbility().addEffect(new ReturnToHandTargetEffect());\r\n        this.getSpellAbility().addTarget(new TargetCardInYourGraveyard(filterCreatureCard));\r\n        // and/or return target land card from your graveyard to your hand.\r\n        Mode mode1 = new Mode();\r\n        mode1.getEffects().add(new ReturnToHandTargetEffect());\r\n        mode1.getTargets().add(new TargetCardInYourGraveyard(filterLandCard));\r\n        this.getSpellAbility().addMode(mode1);\r\n    }","commit_id":"d9ea904bc4d3dd982149a5bb02dee2be9c143fa4","url":"https://github.com/magefree/mage"},{"original_method":"@Configuration\n    public static Option[] configure() throws Exception {\n\n        Option[] options = combine(\n            // Default karaf environment\n            Helper.getDefaultOptions(\n                // this is how you set the default log level when using pax logging (logProfile)\n                Helper.setLogLevel(\"INFO\")),\n                \n            // install blueprint requirements\n            mavenBundle(\"org.apache.felix\", \"org.apache.felix.configadmin\"),\n\n            bundle(newBundle()\n                .add(\"OSGI-INF/blueprint/test.xml\", BlueprintExplicitPropertiesRouteTest.class.getResource(\"blueprint-16.xml\"))\n                .set(Constants.BUNDLE_SYMBOLICNAME, BlueprintExplicitPropertiesRouteTest.class.getName())\n                .build()).noStart(),\n\n                // install the spring, http features first\n                scanFeatures(getKarafFeatureUrl(), \"spring\", \"spring-dm\", \"jetty\"),\n                \n                // using the features to install the camel components\n                scanFeatures(getCamelKarafFeatureUrl(),\n                        \"camel-core\", \"camel-blueprint\", \"camel-test\"),\n\n                workingDirectory(\"target/paxrunner/\"),\n\n                felix());\n\n        return options;\n    }","id":16213,"modified_method":"@Configuration\n    public static Option[] configure() throws Exception {\n\n        Option[] options = combine(\n            getDefaultCamelKarafOptions(),\n            \n            bundle(newBundle()\n                .add(\"OSGI-INF/blueprint/test.xml\", BlueprintExplicitPropertiesRouteTest.class.getResource(\"blueprint-16.xml\"))\n                .set(Constants.BUNDLE_SYMBOLICNAME, BlueprintExplicitPropertiesRouteTest.class.getName())\n                .build()).noStart(),\n                \n            // using the features to install the camel components\n            scanFeatures(getCamelKarafFeatureUrl(),\n                        \"camel-blueprint\"));\n\n        return options;\n    }","commit_id":"265c94d3a523b8de2a3780c0ff4a32c94d8dad69","url":"https://github.com/apache/camel"},{"original_method":"@Configuration\n    public static Option[] configure() throws Exception {\n\n        Option[] options = combine(\n                // Default karaf environment\n                Helper.getDefaultOptions(\n                    // this is how you set the default log level when using pax logging (logProfile)\n                    Helper.setLogLevel(\"INFO\")),\n                bundle(newBundle()\n                        .add(\"OSGI-INF/blueprint/test.xml\", BlueprintPropertiesRouteTest.class.getResource(\"blueprint-17.xml\"))\n                        .set(Constants.BUNDLE_SYMBOLICNAME, BlueprintPropertiesRouteTest.class.getName())\n                        .build()).noStart(),\n\n                // install the spring dm profile\n                profile(\"spring.dm\").version(\"1.2.0\"),\n                mavenBundle(\"org.apache.aries.blueprint\", \"org.apache.aries.blueprint\", \"0.2-incubating\"),\n\n                // install blueprint requirements\n                mavenBundle(\"org.apache.felix\", \"org.apache.felix.configadmin\"),\n\n                // install the spring, http features first\n                scanFeatures(getKarafFeatureUrl(), \"spring\", \"spring-dm\", \"jetty\"),\n                // using the features to install the camel components\n                scanFeatures(getCamelKarafFeatureUrl(),\n                        \"camel-core\", \"camel-blueprint\", \"camel-test\"),\n\n                workingDirectory(\"target/paxrunner/\"),\n\n                felix()/*, equinox()*/);\n\n        return options;\n    }","id":16214,"modified_method":"@Configuration\n    public static Option[] configure() throws Exception {\n\n        Option[] options = combine(\n                getDefaultCamelKarafOptions(),\n\n                bundle(newBundle()\n                        .add(\"OSGI-INF/blueprint/test.xml\", BlueprintPropertiesRouteTest.class.getResource(\"blueprint-17.xml\"))\n                        .set(Constants.BUNDLE_SYMBOLICNAME, BlueprintPropertiesRouteTest.class.getName())\n                        .build()).noStart(),\n\n                // using the features to install the camel components\n                scanFeatures(getCamelKarafFeatureUrl(),\n                                    \"camel-blueprint\"));\n\n        return options;\n    }","commit_id":"265c94d3a523b8de2a3780c0ff4a32c94d8dad69","url":"https://github.com/apache/camel"},{"original_method":"@Override\r\n  public void freeze() {\r\n    if (!(getStorage() instanceof OStorageLocalAbstract)) {\r\n      OLogManager.instance().error(this,\r\n          \"We can not freeze non local storage. \" + \"If you use remote client please use OServerAdmin instead.\");\r\n\r\n      return;\r\n    }\r\n\r\n    final long startTime = Orient.instance().getProfiler().startChrono();\r\n\r\n    final Collection<? extends OIndex<?>> indexes = getMetadata().getIndexManager().getIndexes();\r\n    final List<OIndexAbstract<?>> indexesToLock = prepareIndexesToFreeze(indexes);\r\n\r\n    freezeIndexes(indexesToLock, false);\r\n    flushIndexes(indexesToLock);\r\n\r\n    super.freeze();\r\n\r\n    Orient.instance().getProfiler()\r\n        .stopChrono(\"db.\" + getName() + \".freeze\", \"Time to freeze the database\", startTime, \"db.*.freeze\");\r\n  }","id":16215,"modified_method":"@Override\r\n  public void freeze() {\r\n    if (!(getStorage() instanceof OFreezableStorage)) {\r\n      OLogManager.instance().error(this,\r\n          \"We can not freeze non local storage. \" + \"If you use remote client please use OServerAdmin instead.\");\r\n\r\n      return;\r\n    }\r\n\r\n    final long startTime = Orient.instance().getProfiler().startChrono();\r\n\r\n    final Collection<? extends OIndex<?>> indexes = getMetadata().getIndexManager().getIndexes();\r\n    final List<OIndexAbstract<?>> indexesToLock = prepareIndexesToFreeze(indexes);\r\n\r\n    freezeIndexes(indexesToLock, false);\r\n    flushIndexes(indexesToLock);\r\n\r\n    super.freeze();\r\n\r\n    Orient.instance().getProfiler()\r\n        .stopChrono(\"db.\" + getName() + \".freeze\", \"Time to freeze the database\", startTime, \"db.*.freeze\");\r\n  }","commit_id":"ad79b5365b71973382ed1b72ca34fab30370bb42","url":"https://github.com/orientechnologies/orientdb"},{"original_method":"public void release() {\r\n    final OStorageLocalAbstract storage;\r\n    if (getStorage() instanceof OStorageLocalAbstract)\r\n      storage = ((OStorageLocalAbstract) getStorage());\r\n    else {\r\n      OLogManager.instance().error(this, \"We can not freeze non local storage.\");\r\n      return;\r\n    }\r\n\r\n    storage.release();\r\n  }","id":16216,"modified_method":"public void release() {\r\n    final OFreezableStorage storage = getFreezableStorage();\r\n    if (storage != null) {\r\n      storage.release();\r\n    }\r\n  }","commit_id":"ad79b5365b71973382ed1b72ca34fab30370bb42","url":"https://github.com/orientechnologies/orientdb"},{"original_method":"public void freeze() {\r\n    final OStorageLocalAbstract storage;\r\n    if (getStorage() instanceof OStorageLocalAbstract)\r\n      storage = ((OStorageLocalAbstract) getStorage());\r\n    else {\r\n      OLogManager.instance().error(this, \"We can not freeze non local storage.\");\r\n      return;\r\n    }\r\n\r\n    storage.freeze(false);\r\n  }","id":16217,"modified_method":"public void freeze() {\r\n    final OFreezableStorage storage = getFreezableStorage();\r\n    if (storage != null) {\r\n      storage.freeze(false);\r\n    }\r\n  }","commit_id":"ad79b5365b71973382ed1b72ca34fab30370bb42","url":"https://github.com/orientechnologies/orientdb"},{"original_method":"public void freeze(final boolean throwException) {\r\n    final OStorageLocalAbstract storage;\r\n    if (getStorage() instanceof OStorageLocalAbstract)\r\n      storage = ((OStorageLocalAbstract) getStorage());\r\n    else {\r\n      OLogManager.instance().error(this, \"We can not freeze non local storage.\");\r\n      return;\r\n    }\r\n\r\n    storage.freeze(throwException);\r\n  }","id":16218,"modified_method":"public void freeze(final boolean throwException) {\r\n    final OFreezableStorage storage = getFreezableStorage();\r\n    if (storage != null) {\r\n      storage.freeze(throwException);\r\n    }\r\n  }","commit_id":"ad79b5365b71973382ed1b72ca34fab30370bb42","url":"https://github.com/orientechnologies/orientdb"},{"original_method":"@Override\r\n  public void freeze() {\r\n    if (!(getStorage() instanceof OStorageLocalAbstract)) {\r\n      OLogManager.instance().error(this,\r\n          \"We can not freeze non local storage. \" + \"If you use remote client please use OServerAdmin instead.\");\r\n\r\n      return;\r\n    }\r\n\r\n    final long startTime = Orient.instance().getProfiler().startChrono();\r\n\r\n    final Collection<? extends OIndex<?>> indexes = getMetadata().getIndexManager().getIndexes();\r\n    final List<OIndexAbstract<?>> indexesToLock = prepareIndexesToFreeze(indexes);\r\n\r\n    freezeIndexes(indexesToLock, false);\r\n    flushIndexes(indexesToLock);\r\n\r\n    super.freeze();\r\n\r\n    Orient.instance().getProfiler()\r\n        .stopChrono(\"db.\" + getName() + \".freeze\", \"Time to freeze the database\", startTime, \"db.*.freeze\");\r\n  }","id":16219,"modified_method":"@Override\r\n  public void freeze() {\r\n    if (!(getStorage() instanceof OFreezableStorage)) {\r\n      OLogManager.instance().error(this,\r\n          \"We can not freeze non local storage. \" + \"If you use remote client please use OServerAdmin instead.\");\r\n\r\n      return;\r\n    }\r\n\r\n    final long startTime = Orient.instance().getProfiler().startChrono();\r\n\r\n    final Collection<? extends OIndex<?>> indexes = getMetadata().getIndexManager().getIndexes();\r\n    final List<OIndexAbstract<?>> indexesToLock = prepareIndexesToFreeze(indexes);\r\n\r\n    freezeIndexes(indexesToLock, false);\r\n    flushIndexes(indexesToLock);\r\n\r\n    super.freeze();\r\n\r\n    Orient.instance().getProfiler()\r\n        .stopChrono(\"db.\" + getName() + \".freeze\", \"Time to freeze the database\", startTime, \"db.*.freeze\");\r\n  }","commit_id":"fba11f48e7629af9b502e84805d66ea580ebe89f","url":"https://github.com/orientechnologies/orientdb"},{"original_method":"public void freeze(final boolean throwException) {\r\n    final OStorageLocalAbstract storage;\r\n    if (getStorage() instanceof OStorageLocalAbstract)\r\n      storage = ((OStorageLocalAbstract) getStorage());\r\n    else {\r\n      OLogManager.instance().error(this, \"We can not freeze non local storage.\");\r\n      return;\r\n    }\r\n\r\n    storage.freeze(throwException);\r\n  }","id":16220,"modified_method":"public void freeze(final boolean throwException) {\r\n    final OFreezableStorage storage = getFreezableStorage();\r\n    if (storage != null) {\r\n      storage.freeze(throwException);\r\n    }\r\n  }","commit_id":"fba11f48e7629af9b502e84805d66ea580ebe89f","url":"https://github.com/orientechnologies/orientdb"},{"original_method":"public void release() {\r\n    final OStorageLocalAbstract storage;\r\n    if (getStorage() instanceof OStorageLocalAbstract)\r\n      storage = ((OStorageLocalAbstract) getStorage());\r\n    else {\r\n      OLogManager.instance().error(this, \"We can not freeze non local storage.\");\r\n      return;\r\n    }\r\n\r\n    storage.release();\r\n  }","id":16221,"modified_method":"public void release() {\r\n    final OFreezableStorage storage = getFreezableStorage();\r\n    if (storage != null) {\r\n      storage.release();\r\n    }\r\n  }","commit_id":"fba11f48e7629af9b502e84805d66ea580ebe89f","url":"https://github.com/orientechnologies/orientdb"},{"original_method":"public void freeze() {\r\n    final OStorageLocalAbstract storage;\r\n    if (getStorage() instanceof OStorageLocalAbstract)\r\n      storage = ((OStorageLocalAbstract) getStorage());\r\n    else {\r\n      OLogManager.instance().error(this, \"We can not freeze non local storage.\");\r\n      return;\r\n    }\r\n\r\n    storage.freeze(false);\r\n  }","id":16222,"modified_method":"public void freeze() {\r\n    final OFreezableStorage storage = getFreezableStorage();\r\n    if (storage != null) {\r\n      storage.freeze(false);\r\n    }\r\n  }","commit_id":"fba11f48e7629af9b502e84805d66ea580ebe89f","url":"https://github.com/orientechnologies/orientdb"},{"original_method":"/**\n     * Moves the IO stream to right before the next contig marker in the fasta file, for anywhere inside the\n     * previous contig.  It is primarily useful as a supplementary routine for jumping forward in the file by\n     * N bases, since we don't know exactly how far way N bases in bytes will be in the file.  So a guess jump\n     * will put us somewhere before the target contig, and we use this routine to seek forward to the actual\n     * contig we want.\n     * \n     * @return the name of the next contig, as a string\n     */\n    public String seekForNextContig(final String targetContig ) {\n        //System.out.printf(\"seekForNextContig()%n\");\n\n        int basesRead;\n        int totalBasesRead = 0;\n        byte[] bases = new byte[4096];\n        int i = 0;\n        while ((basesRead = readNextLine(bases, 0)) != 0) {\n            totalBasesRead += basesRead;\n\n            // Keep looking for the > marking the start of the line, and stop\n            final byte b = peekOneByte();\n            if (b == -1 || b == '>') {\n                final String foundContig = readNextContigName();\n                // System.out.printf(\"Found a contig name line %s%n\", foundContig);\n                final int foundIndex = this.sequenceDictionary.getSequenceIndex(foundContig);\n                final int ourIndex = this.sequenceDictionary.getSequenceIndex(targetContig);\n\n                if ( foundIndex == ourIndex ) {\n                    // we found our target!\n                    this.nextContigName = foundContig;   // store the right answer\n                    if ( DEBUG ) System.out.printf(\"seekForNextContig found %s%n\", foundContig);\n                    return foundContig;\n                }\n                else if ( foundIndex <= ourIndex )\n                    // we are still looking for our contig, the seek estimate was inaccurate relative to the size of contings in this area\n                    continue;\n                else {\n                    // This is really bad -- we are past our target\n                    throw new RuntimeIOException(String.format(\"Seek pushes us past our target contig of %s, instead we found %s, which is after the target in the sequence dictions\", targetContig, foundContig));\n                }\n            }\n        }\n\n\n        return null;\n    }","id":16223,"modified_method":"/**\n     * Moves the IO stream to right before the next contig marker in the fasta file, for anywhere inside the\n     * previous contig.  It is primarily useful as a supplementary routine for jumping forward in the file by\n     * N bases, since we don't know exactly how far way N bases in bytes will be in the file.  So a guess jump\n     * will put us somewhere before the target contig, and we use this routine to seek forward to the actual\n     * contig we want.\n     * \n     * @return the name of the next contig, as a string\n     */\n    public String seekForNextContig(final String targetContig ) {\n        //System.out.printf(\"seekForNextContig()%n\");\n\n        int basesRead;\n        int totalBasesRead = 0;\n        byte[] bases = new byte[4096];\n        int i = 0;\n        while ((basesRead = readNextLine(bases, 0)) != 0) {\n            totalBasesRead += basesRead;\n\n            // Keep looking for the > marking the start of the line, and stop\n            final byte b = peekOneByte();\n            if (b == -1 || b == '>') {\n                final String foundContig = readNextContigName();\n                // System.out.printf(\"Found a contig name line %s%n\", foundContig);\n                final int foundIndex = this.sequenceDictionary.getSequenceIndex(foundContig);\n                final int ourIndex = this.sequenceDictionary.getSequenceIndex(targetContig);\n\n                if ( foundIndex == ourIndex ) {\n                    // we found our target!\n                    this.nextContigName = foundContig;   // store the right answer\n                    if ( DEBUG ) logger.debug(String.format(\"seekForNextContig found %s%n\", foundContig));\n                    return foundContig;\n                }\n                else if ( foundIndex <= ourIndex )\n                    // we are still looking for our contig, the seek estimate was inaccurate relative to the size of contings in this area\n                    continue;\n                else {\n                    // This is really bad -- we are past our target\n                    throw new RuntimeIOException(String.format(\"Seek pushes us past our target contig of %s, instead we found %s, which is after the target in the sequence dictions\", targetContig, foundContig));\n                }\n            }\n        }\n\n\n        return null;\n    }","commit_id":"230c1ad161c25c177b1fa9a4e08c4f0324278aac","url":"https://github.com/broadgsa/gatk"},{"original_method":"/**\n     * Returns the distance, in bp, between contig1 and contig2 according to this fasta file's dictionary.  That is,\n     * the number of bp we'd have to traverse to move from the start of contig1 to reach the start of contig2.\n     *\n     * If contig1 occurs before contig2, a negative number is returned.  0 indicates that the contigs are the same.\n     *\n     * Returns Integer.MAX_VALUE if the sequence dictionary cannot be found\n     *\n     * @param contig1\n     * @param contig2\n     * @return distance in bp from the start of contig1 to the start of contig2\n     */\n    public long getDistanceBetweenContigs(final String contig1, final String contig2) {\n        assert contig1 != null;\n        assert contig2 != null;\n\n        final SAMSequenceDictionary seqDict = getSequenceDictionary();\n\n        if ( seqDict == null ) // we couldn't load the reference dictionary\n            return Integer.MAX_VALUE;\n\n        SAMSequenceRecord contig1Rec = seqDict.getSequence(contig1);\n        SAMSequenceRecord contig2Rec = seqDict.getSequence(contig2);\n\n        assert contig1Rec != null : \"Contig1 record is null: \" + contig1;\n        assert contig1Rec != null : \"Contig2 record is null: \" + contig2;\n\n        if ( DEBUG )\n            System.out.printf(\"Contig1=(%s, %d), contig2=(%s, %d)%n\",\n                    contig1, contig1Rec.getSequenceIndex(),\n                    contig2, contig2Rec.getSequenceIndex());\n\n        int startIndex = Math.min(contig1Rec.getSequenceIndex(), contig2Rec.getSequenceIndex());\n        int lastIndex = Math.max(contig1Rec.getSequenceIndex(), contig2Rec.getSequenceIndex());\n\n        long bytesToTraverse = 0;\n        for ( int i = startIndex; i < lastIndex; i++ ) {\n            SAMSequenceRecord rec = seqDict.getSequence(i);\n            bytesToTraverse += rec.getSequenceLength();\n            if ( DEBUG )\n                System.out.printf(\"  -> Traversing from %15s to %15s requires reading at least %10d bytes to pass contig %15s, total bytes %10d%n\",\n                    contig1, contig2, rec.getSequenceLength(), rec.getSequenceName(), bytesToTraverse);\n        }\n\n        if ( contig1Rec.getSequenceIndex() > contig2Rec.getSequenceIndex() )\n            bytesToTraverse *= -1;  // we are going backward!\n\n        if ( DEBUG ) System.out.printf(\"  -> total distance is %d%n\", bytesToTraverse);\n\n        return bytesToTraverse;\n    }","id":16224,"modified_method":"/**\n     * Returns the distance, in bp, between contig1 and contig2 according to this fasta file's dictionary.  That is,\n     * the number of bp we'd have to traverse to move from the start of contig1 to reach the start of contig2.\n     *\n     * If contig1 occurs before contig2, a negative number is returned.  0 indicates that the contigs are the same.\n     *\n     * Returns Integer.MAX_VALUE if the sequence dictionary cannot be found\n     *\n     * @param contig1\n     * @param contig2\n     * @return distance in bp from the start of contig1 to the start of contig2\n     */\n    public long getDistanceBetweenContigs(final String contig1, final String contig2) {\n        assert contig1 != null;\n        assert contig2 != null;\n\n        final SAMSequenceDictionary seqDict = getSequenceDictionary();\n\n        if ( seqDict == null ) // we couldn't load the reference dictionary\n            return Integer.MAX_VALUE;\n\n        SAMSequenceRecord contig1Rec = seqDict.getSequence(contig1);\n        SAMSequenceRecord contig2Rec = seqDict.getSequence(contig2);\n\n        assert contig1Rec != null : \"Contig1 record is null: \" + contig1;\n        assert contig1Rec != null : \"Contig2 record is null: \" + contig2;\n\n        if ( DEBUG )\n            logger.debug(String.format(\"Contig1=(%s, %d), contig2=(%s, %d)%n\",\n                    contig1, contig1Rec.getSequenceIndex(),\n                    contig2, contig2Rec.getSequenceIndex()));\n\n        int startIndex = Math.min(contig1Rec.getSequenceIndex(), contig2Rec.getSequenceIndex());\n        int lastIndex = Math.max(contig1Rec.getSequenceIndex(), contig2Rec.getSequenceIndex());\n\n        long bytesToTraverse = 0;\n        for ( int i = startIndex; i < lastIndex; i++ ) {\n            SAMSequenceRecord rec = seqDict.getSequence(i);\n            bytesToTraverse += rec.getSequenceLength();\n            if ( DEBUG )\n                logger.debug(String.format(\"  -> Traversing from %15s to %15s requires reading at least %10d bytes to pass contig %15s, total bytes %10d%n\",\n                    contig1, contig2, rec.getSequenceLength(), rec.getSequenceName(), bytesToTraverse));\n        }\n\n        if ( contig1Rec.getSequenceIndex() > contig2Rec.getSequenceIndex() )\n            bytesToTraverse *= -1;  // we are going backward!\n\n        if ( DEBUG ) logger.debug(String.format(\"  -> total distance is %d%n\", bytesToTraverse));\n\n        return bytesToTraverse;\n    }","commit_id":"230c1ad161c25c177b1fa9a4e08c4f0324278aac","url":"https://github.com/broadgsa/gatk"},{"original_method":"/**\n     * Returns the next of the next contig, or null if there are no more contigs. Stateful function, it\n     * remembers the name of the next contig.  Use readNextContigName for stateless operation.  This function\n     * is primarily useful if you need to know what the next contig is in the stream for algorithmic purposes.\n     *\n     * Note that this function assumes the stream is sitting right at the end of the previous contig, or at the\n     * beginning of the file.\n     * \n     * @return the name of the next contig, or null if there is no next contig\n     */\n    public String getNextContigName() {\n        if ( DEBUG ) System.out.printf(\"getNextContigName() => %s%n\", this.nextContigName);\n\n        if ( this.nextContigName == null ) {\n            // If it's not null, we've already looked up the next contig name, just return it and happily continue\n            // Otherwise we need to actually read in the name\n            this.nextContigName = readNextContigName();\n        }\n\n        if ( DEBUG ) System.out.printf(\"nextContigName is now %s%n\", nextContigName);\n        return this.nextContigName;\n    }","id":16225,"modified_method":"/**\n     * Returns the next of the next contig, or null if there are no more contigs. Stateful function, it\n     * remembers the name of the next contig.  Use readNextContigName for stateless operation.  This function\n     * is primarily useful if you need to know what the next contig is in the stream for algorithmic purposes.\n     *\n     * Note that this function assumes the stream is sitting right at the end of the previous contig, or at the\n     * beginning of the file.\n     * \n     * @return the name of the next contig, or null if there is no next contig\n     */\n    public String getNextContigName() {\n        if ( DEBUG ) logger.debug(String.format(\"getNextContigName() => %s%n\", this.nextContigName));\n\n        if ( this.nextContigName == null ) {\n            // If it's not null, we've already looked up the next contig name, just return it and happily continue\n            // Otherwise we need to actually read in the name\n            this.nextContigName = readNextContigName();\n        }\n\n        if ( DEBUG ) logger.debug(String.format(\"nextContigName is now %s%n\", nextContigName));\n        return this.nextContigName;\n    }","commit_id":"230c1ad161c25c177b1fa9a4e08c4f0324278aac","url":"https://github.com/broadgsa/gatk"},{"original_method":"/**\n     * Seeks to seekContig in the fasta file, such that nextSequence() will read the seekContig from the fasta\n     * file.  If enableBacktracking is false, only allows forward seeks, and throws a RuntimeIOException if the\n     * seekContig is before the current contig.  If enableBacktracking is true, then if seekContig is before\n     * the current contig, resets the input stream and seeks to the contig.\n     *\n     * Requires that the fasta file have a SequenceDictionary associated with it.  Otherwises throws an error\n     *\n     * @param seekContig The contig I want to seek to\n     * @param enableBacktracking Should we allow seeks to contigs earlier in the file?\n     * @return true on success\n     */\n    public boolean seekToContig(final String seekContig, boolean enableBacktracking ) {\n        if ( DEBUG ) System.out.printf(\"seekToContig( %s, %b )%n\", seekContig, enableBacktracking);\n\n        String curContig = getContigName();\n        String nextContig = null;\n        \n        if ( curContig == null ) {\n            System.out.printf(\"CurrentContig is null\");\n            if ( this.sequenceDictionary == null )\n                throw new PicardException( String.format(\"Seeking within contigs requires FASTA dictionary, but none was available for %s\", this.file ));\n\n            // We only reach this point when we're seeking before we've read in any of the fasta file,\n            // so assume we are at the start of the file\n            nextContig = this.sequenceDictionary.getSequence(0).getSequenceName();\n        }\n        else\n            nextContig = getNextContigName();\n\n        if ( nextContig == null )   // we're are at the end of the stream\n            return false;\n\n        // we have already read in the current contig, we are jumping from the next contig onwards\n        long dist = getDistanceBetweenContigs(nextContig, seekContig);\n\n        if ( dist == Integer.MAX_VALUE )\n            return false;       // we don't know where to go\n        else if ( dist == 0 )\n            return true;        // We already here!\n        else if ( dist < 0 ) {\n            if ( enableBacktracking ) {\n                // System.out.printf(\"*** Backtracking to %s%n\", seekContig);\n                // restart from the beginning, and try again\n                initializeInputStream();\n                return seekToContig(seekContig, enableBacktracking);\n            } else\n                return false;       // we're not going backwards just yet\n        }\n        else {\n            if ( DEBUG ) System.out.printf(\"Going to seek to contig %s with skip %d%n\", seekContig, dist);\n            // we're actually going to jump somewhere, so prepare the state\n            this.nextContigName = null;         // reset the contig info\n\n            // TODO: this is a dangerous method -- can we get access to the underlying file object seek?\n            long bytesToSkip = dist;\n            while ( bytesToSkip > 0 ) {\n                try {\n                    final long skipped = this.in.skip(bytesToSkip);\n                    bytesToSkip -= skipped;\n                    // System.out.printf(\"  -> skipping %d, %d remaining%n\", skipped, bytesToSkip);\n                } catch (IOException ioe) {\n                    throw new PicardException(\"Error reading from file: \" + this.file.getAbsolutePath(), ioe);\n                }\n            }\n\n            if ( bytesToSkip != 0 ) { // skip dist bytes\n                throw new PicardException(String.format(\"Failed to skip all of the %d bases requested, only got %d\", dist, dist - bytesToSkip * 2));\n            }\n\n            // at this point we're ready to start looking for the next header, so call seekNextContigName()\n            final String next = seekForNextContig(seekContig);\n\n            if ( ! next.equals(seekContig) ) // OMG, what the hell happened, throw a runtime exception\n                throw new PicardException(String.format(\"Failed to seek from %s to %s, ended up at %s\",\n                            curContig, seekContig, next));\n            else {\n                this.currentContigName = next;\n                return true;\n            }\n        }\n    }","id":16226,"modified_method":"/**\n     * Seeks to seekContig in the fasta file, such that nextSequence() will read the seekContig from the fasta\n     * file.  If enableBacktracking is false, only allows forward seeks, and throws a RuntimeIOException if the\n     * seekContig is before the current contig.  If enableBacktracking is true, then if seekContig is before\n     * the current contig, resets the input stream and seeks to the contig.\n     *\n     * Requires that the fasta file have a SequenceDictionary associated with it.  Otherwises throws an error\n     *\n     * @param seekContig The contig I want to seek to\n     * @param enableBacktracking Should we allow seeks to contigs earlier in the file?\n     * @return true on success\n     */\n    public boolean seekToContig(final String seekContig, boolean enableBacktracking ) {\n        if ( DEBUG ) logger.debug(String.format(\"seekToContig( %s, %b )%n\", seekContig, enableBacktracking));\n\n        String curContig = getContigName();\n        String nextContig = null;\n        \n        if ( curContig == null ) {\n            logger.info(String.format(\"CurrentContig is null\"));\n            if ( this.sequenceDictionary == null )\n                throw new PicardException( String.format(\"Seeking within contigs requires FASTA dictionary, but none was available for %s\", this.file ));\n\n            // We only reach this point when we're seeking before we've read in any of the fasta file,\n            // so assume we are at the start of the file\n            nextContig = this.sequenceDictionary.getSequence(0).getSequenceName();\n        }\n        else\n            nextContig = getNextContigName();\n\n        if ( nextContig == null )   // we're are at the end of the stream\n            return false;\n\n        // we have already read in the current contig, we are jumping from the next contig onwards\n        long dist = getDistanceBetweenContigs(nextContig, seekContig);\n\n        if ( dist == Integer.MAX_VALUE )\n            return false;       // we don't know where to go\n        else if ( dist == 0 )\n            return true;        // We already here!\n        else if ( dist < 0 ) {\n            if ( enableBacktracking ) {\n                // System.out.printf(\"*** Backtracking to %s%n\", seekContig);\n                // restart from the beginning, and try again\n                initializeInputStream();\n                return seekToContig(seekContig, enableBacktracking);\n            } else\n                return false;       // we're not going backwards just yet\n        }\n        else {\n            if ( DEBUG ) logger.debug(String.format(\"Going to seek to contig %s with skip %d%n\", seekContig, dist));\n            // we're actually going to jump somewhere, so prepare the state\n            this.nextContigName = null;         // reset the contig info\n\n            // TODO: this is a dangerous method -- can we get access to the underlying file object seek?\n            long bytesToSkip = dist;\n            while ( bytesToSkip > 0 ) {\n                try {\n                    final long skipped = this.in.skip(bytesToSkip);\n                    bytesToSkip -= skipped;\n                    // System.out.printf(\"  -> skipping %d, %d remaining%n\", skipped, bytesToSkip);\n                } catch (IOException ioe) {\n                    throw new PicardException(\"Error reading from file: \" + this.file.getAbsolutePath(), ioe);\n                }\n            }\n\n            if ( bytesToSkip != 0 ) { // skip dist bytes\n                throw new PicardException(String.format(\"Failed to skip all of the %d bases requested, only got %d\", dist, dist - bytesToSkip * 2));\n            }\n\n            // at this point we're ready to start looking for the next header, so call seekNextContigName()\n            final String next = seekForNextContig(seekContig);\n\n            if ( ! next.equals(seekContig) ) // OMG, what the hell happened, throw a runtime exception\n                throw new PicardException(String.format(\"Failed to seek from %s to %s, ended up at %s\",\n                            curContig, seekContig, next));\n            else {\n                this.currentContigName = next;\n                return true;\n            }\n        }\n    }","commit_id":"230c1ad161c25c177b1fa9a4e08c4f0324278aac","url":"https://github.com/broadgsa/gatk"},{"original_method":"/**\n     * Reads the next contig from the fasta file, and returns it as a ReferenceSequence.\n     *  \n     * @return null if there are no more sequences in the fasta stream\n     */\n    public ReferenceSequence nextSequence() {\n        if ( DEBUG ) System.out.printf(\"Calling nextSequence()%n\");\n        \n        // Read the header line\n        currentContigName = getNextContigName();\n        if ( currentContigName == null ) return null; // no more sequences!\n\n        int index = -1;\n        if ( this.sequenceDictionary != null )\n           index = this.sequenceDictionary.getSequenceIndex(currentContigName);\n\n        // Read the sequence\n        byte[] tmp = new byte[4096];\n        int basesRead;\n        int totalBasesRead = 0;\n        final int knownLength = (index == -1) ? -1 : this.sequenceDictionary.getSequence(index).getSequenceLength();\n        final int lengthByteArray = (knownLength != -1) ? knownLength : 250000000;\n        byte[] bases = new byte[lengthByteArray];\n\n        while ((basesRead = readNextLine(bases, totalBasesRead)) != 0) {\n            totalBasesRead += basesRead;\n\n            // Make sure we'll have space for the next iteration if we need it\n            if (totalBasesRead == knownLength) {\n                //System.out.printf(\"Read bases: %s%n\", StringUtil.bytesToString(bases, totalBasesRead - basesRead, basesRead).trim());\n\n                assert peekOneByte() == -1 || peekOneByte() == '>' : \"We somehow managed to read in enough bytes for the contig, but didn't pass through the entire contig\";\n                break;\n            } else {\n                final byte b = peekOneByte();\n                if (b == -1 || b == '>') {\n                    break;\n                }\n                else if (totalBasesRead == bases.length) {\n                    tmp = new byte[bases.length * 2];\n                    System.arraycopy(bases, 0, tmp, 0, totalBasesRead);\n                    bases = tmp;\n                    tmp = null;\n                }\n            }\n        }\n\n        // And lastly resize the array down to the right size\n        if (totalBasesRead != bases.length) {\n            tmp = new byte[totalBasesRead];\n            System.arraycopy(bases, 0, tmp, 0, totalBasesRead);\n            bases = tmp;\n            tmp = null;\n        }\n\n        assert knownLength == -1 || knownLength == bases.length;\n\n        this.nextContigName = null; // we no longer know what the next contig name is\n\n        if ( DEBUG ) System.out.printf(\" => nextSequence() is returning %s, known length = %d%n\", this.currentContigName, knownLength);\n        if ( DEBUG ) System.out.printf(\" => nextSequence() next is %s%n\", this.getNextContigName());\n\n        return new ReferenceSequence(currentContigName, index, bases);\n    }","id":16227,"modified_method":"/**\n     * Reads the next contig from the fasta file, and returns it as a ReferenceSequence.\n     *  \n     * @return null if there are no more sequences in the fasta stream\n     */\n    public ReferenceSequence nextSequence() {\n        if ( DEBUG ) logger.debug(String.format(\"Calling nextSequence()%n\"));\n        \n        // Read the header line\n        currentContigName = getNextContigName();\n        if ( currentContigName == null ) return null; // no more sequences!\n\n        int index = -1;\n        if ( this.sequenceDictionary != null )\n           index = this.sequenceDictionary.getSequenceIndex(currentContigName);\n\n        // Read the sequence\n        byte[] tmp = new byte[4096];\n        int basesRead;\n        int totalBasesRead = 0;\n        final int knownLength = (index == -1) ? -1 : this.sequenceDictionary.getSequence(index).getSequenceLength();\n        final int lengthByteArray = (knownLength != -1) ? knownLength : 250000000;\n        byte[] bases = new byte[lengthByteArray];\n\n        while ((basesRead = readNextLine(bases, totalBasesRead)) != 0) {\n            totalBasesRead += basesRead;\n\n            // Make sure we'll have space for the next iteration if we need it\n            if (totalBasesRead == knownLength) {\n                //System.out.printf(\"Read bases: %s%n\", StringUtil.bytesToString(bases, totalBasesRead - basesRead, basesRead).trim());\n\n                assert peekOneByte() == -1 || peekOneByte() == '>' : \"We somehow managed to read in enough bytes for the contig, but didn't pass through the entire contig\";\n                break;\n            } else {\n                final byte b = peekOneByte();\n                if (b == -1 || b == '>') {\n                    break;\n                }\n                else if (totalBasesRead == bases.length) {\n                    tmp = new byte[bases.length * 2];\n                    System.arraycopy(bases, 0, tmp, 0, totalBasesRead);\n                    bases = tmp;\n                    tmp = null;\n                }\n            }\n        }\n\n        // And lastly resize the array down to the right size\n        if (totalBasesRead != bases.length) {\n            tmp = new byte[totalBasesRead];\n            System.arraycopy(bases, 0, tmp, 0, totalBasesRead);\n            bases = tmp;\n            tmp = null;\n        }\n\n        assert knownLength == -1 || knownLength == bases.length;\n\n        this.nextContigName = null; // we no longer know what the next contig name is\n\n        if ( DEBUG ) logger.debug(String.format(\" => nextSequence() is returning %s, known length = %d%n\", this.currentContigName, knownLength));\n        if ( DEBUG ) logger.debug(String.format(\" => nextSequence() next is %s%n\", this.getNextContigName()));\n\n        return new ReferenceSequence(currentContigName, index, bases);\n    }","commit_id":"230c1ad161c25c177b1fa9a4e08c4f0324278aac","url":"https://github.com/broadgsa/gatk"},{"original_method":"public void printStatus() {\n        System.out.printf(\"FileProgressTracker:%n\");\n        System.out.printf(\"  -> File size is:                                   %d%n\", getFileSize());\n        System.out.printf(\"  -> Sampling depth:                                 %d%n\", historyI);\n        System.out.printf(\"  -> File position:                                  %d%n\", getPosition());\n        System.out.printf(\"  -> Number of records processed:                    %d%n\", nRecordsProcessed());\n        System.out.printf(\"  -> Average record size is                          %d%n\", averageRecordSize());\n        System.out.printf(\"  -> Elapsed time in secs is                         %.2f%n\", elapsedTimeInSecs());\n        System.out.printf(\"  -> Processing rate (records per second)            %.2f%n\", processingRate());\n        System.out.printf(\"  -> Estimated number of records in file             %d%n\", estRecordsInFile());\n        System.out.printf(\"  -> Estimated percent progress through file         %.2f%n\", estFractionProgressThroughFile() * 100.0);\n        System.out.printf(\"  -> Estimated time for entire processing            %.2f hrs / %.2f min / %.2f sec%n\", estTimeTotal() / (60*60), estTimeTotal() / (60), estTimeTotal());\n        System.out.printf(\"  -> Estimated time remaining                        %.2f hrs / %.2f min / %.2f sec%n\", estTimeRemaining() / (60*60), estTimeRemaining() / 60, estTimeRemaining());\n    }","id":16228,"modified_method":"public void printStatus() {\n        logger.debug(String.format(\"FileProgressTracker:%n\"));\n        logger.debug(String.format(\"  -> File size is:                                   %d%n\", getFileSize()));\n        logger.debug(String.format(\"  -> Sampling depth:                                 %d%n\", historyI));\n        logger.debug(String.format(\"  -> File position:                                  %d%n\", getPosition()));\n        logger.debug(String.format(\"  -> Number of records processed:                    %d%n\", nRecordsProcessed()));\n        logger.debug(String.format(\"  -> Average record size is                          %d%n\", averageRecordSize()));\n        logger.debug(String.format(\"  -> Elapsed time in secs is                         %.2f%n\", elapsedTimeInSecs()));\n        logger.debug(String.format(\"  -> Processing rate (records per second)            %.2f%n\", processingRate()));\n        logger.debug(String.format(\"  -> Estimated number of records in file             %d%n\", estRecordsInFile()));\n        logger.debug(String.format(\"  -> Estimated percent progress through file         %.2f%n\", estFractionProgressThroughFile() * 100.0));\n        logger.debug(String.format(\"  -> Estimated time for entire processing            %.2f hrs / %.2f min / %.2f sec%n\", estTimeTotal() / (60*60), estTimeTotal() / (60), estTimeTotal()));\n        logger.debug(String.format(\"  -> Estimated time remaining                        %.2f hrs / %.2f min / %.2f sec%n\", estTimeRemaining() / (60*60), estTimeRemaining() / 60, estTimeRemaining()));\n    }","commit_id":"230c1ad161c25c177b1fa9a4e08c4f0324278aac","url":"https://github.com/broadgsa/gatk"},{"original_method":"public void printState() {\n        System.out.printf(\"Hanger:%n\");\n        for ( Hanger hanger : hangers ) {\n            System.out.printf(\"  -> %s => %s:%n\", hanger.loc, Utils.join(\"/\", hanger.data) );\n       }\n    }","id":16229,"modified_method":"public void printState() {\n        logger.info(\"Hanger: \");\n        for (Hanger hanger : hangers) {\n            logger.info(String.format(\"  -> %s => %s:%n\", hanger.loc, Utils.join(\"/\", hanger.data)));\n        }\n    }","commit_id":"230c1ad161c25c177b1fa9a4e08c4f0324278aac","url":"https://github.com/broadgsa/gatk"},{"original_method":"public static void warnUser(final String msg) {\n        System.out.printf(\"********************************************************************************%n\");\n        System.out.printf(\"* WARNING:%n\");\n        System.out.printf(\"*%n\");\n        System.out.printf(\"* %s%n\", msg);\n        System.out.printf(\"********************************************************************************%n\");                \n    }","id":16230,"modified_method":"public static void warnUser(final String msg) {\n        logger.warn(String.format(\"********************************************************************************%n\"));\n        logger.warn(String.format(\"* WARNING:%n\"));\n        logger.warn(String.format(\"*%n\"));\n        logger.warn(String.format(\"* %s%n\", msg));\n        logger.warn(String.format(\"********************************************************************************%n\"));\n    }","commit_id":"230c1ad161c25c177b1fa9a4e08c4f0324278aac","url":"https://github.com/broadgsa/gatk"},{"original_method":"public static boolean setupRefContigOrdering(final ReferenceSequenceFile refFile) {\n        final SAMSequenceDictionary seqDict = refFile.getSequenceDictionary();\n\n        if ( seqDict == null ) // we couldn't load the reference dictionary\n            return false;\n        \n        List<SAMSequenceRecord> refContigs = seqDict.getSequences();\n        HashMap<String, Integer> refContigOrdering = new HashMap<String, Integer>();\n\n        if ( refContigs != null ) {\n            int i = 0;\n            System.out.printf(\"Prepared reference sequence contig dictionary%n  order ->\");\n            for ( SAMSequenceRecord contig : refContigs ) {\n                System.out.printf(\" %s (%d bp)\", contig.getSequenceName(), contig.getSequenceLength());\n                refContigOrdering.put(contig.getSequenceName(), i);\n                i++;\n            }\n            System.out.printf(\"%n  Total elements -> %d%n\", refContigOrdering.size());\n        }\n        \n        GenomeLoc.setContigOrdering(refContigOrdering);\n        return refContigs != null;\n    }","id":16231,"modified_method":"public static boolean setupRefContigOrdering(final ReferenceSequenceFile refFile) {\n        final SAMSequenceDictionary seqDict = refFile.getSequenceDictionary();\n\n        if (seqDict == null) // we couldn't load the reference dictionary\n            return false;\n\n        List<SAMSequenceRecord> refContigs = seqDict.getSequences();\n        HashMap<String, Integer> refContigOrdering = new HashMap<String, Integer>();\n\n        if (refContigs != null) {\n            int i = 0;\n            logger.info(String.format(\"Prepared reference sequence contig dictionary%n  order ->\"));\n            for (SAMSequenceRecord contig : refContigs) {\n                logger.info(String.format(\" %s (%d bp)\", contig.getSequenceName(), contig.getSequenceLength()));\n                refContigOrdering.put(contig.getSequenceName(), i);\n                i++;\n            }\n            logger.info(String.format(\"%n  Total elements -> %d%n\", refContigOrdering.size()));\n        }\n\n        GenomeLoc.setContigOrdering(refContigOrdering);\n        return refContigs != null;\n    }","commit_id":"230c1ad161c25c177b1fa9a4e08c4f0324278aac","url":"https://github.com/broadgsa/gatk"},{"original_method":"public static void scareUser(final String msg) {\n        System.out.printf(\"********************************************************************************%n\");\n        System.out.printf(\"* ERROR:%n\");\n        System.out.printf(\"*%n\");\n        System.out.printf(\"* %s%n\", msg);\n        System.out.printf(\"********************************************************************************%n\");\n        throw new RuntimeException(msg);\n    }","id":16232,"modified_method":"public static void scareUser(final String msg) {\n        logger.fatal(String.format(\"********************************************************************************%n\"));\n        logger.fatal(String.format(\"* ERROR:%n\"));\n        logger.fatal(String.format(\"*%n\"));\n        logger.fatal(String.format(\"* %s%n\", msg));\n        logger.fatal(String.format(\"********************************************************************************%n\"));\n        throw new RuntimeException(msg);\n    }","commit_id":"230c1ad161c25c177b1fa9a4e08c4f0324278aac","url":"https://github.com/broadgsa/gatk"},{"original_method":"/**\n     * An inappropriately placed validation and performance testing routine for jumping\n     * around in the fasta sequence file.\n     * @param refFileName\n     */\n    private static void testNewReferenceFeatures(final File refFileName) {\n        final FastaSequenceFile2 refFile = new FastaSequenceFile2(refFileName);\n        Utils.setupRefContigOrdering(refFile);\n\n        List<SAMSequenceRecord> refContigs = refFile.getSequenceDictionary().getSequences();\n\n        /*\n        for ( SAMSequenceRecord refContig: refContigs ) {\n            System.out.printf(\"  Traversing from chr1 to %s would require jumping %d bytes%n\",\n                    refContig.getSequenceName(), refFile.getDistanceBetweenContigs(\"chr1\", refContig.getSequenceName()));\n        }\n        */\n\n        String lastContig = null;\n        List<Double> timings = new ArrayList<Double>();\n        for ( SAMSequenceRecord startContig : refFile.getSequenceDictionary().getSequences() ) {\n            final String startContigName = startContig.getSequenceName();\n            for ( SAMSequenceRecord targetContig : refFile.getSequenceDictionary().getSequences() ) {\n                refFile.seekToContig(startContigName, true);\n                System.out.printf(\"Seeking: current=%s, target=%s%n\", startContigName, targetContig.getSequenceName());\n                long lastTime = System.currentTimeMillis();\n                final boolean success = refFile.seekToContig(targetContig.getSequenceName(), true);\n                long curTime = System.currentTimeMillis();\n                final double elapsed = (curTime - lastTime) / 1000.0;\n                timings.add(elapsed);\n                System.out.printf(\"  -> Elapsed time %.2f, averaging %.2f sec / seek for %d seeks%n\",\n                        elapsed, Utils.averageDouble(timings), timings.size());\n\n                if ( ! success ) {\n                    System.out.printf(\"Failured to seek to %s from %s%n\", targetContig.getSequenceName(), lastContig );\n                }\n                //System.exit(1);\n            }\n        }\n        System.exit(1);\n\n        // code for randomly sampling the seeks\n//        Random rnd = new Random();\n//        String lastContig = null;\n//        List<Double> timings = new ArrayList<Double>();\n//        final int N_SAMPLES = 1000;\n//        //try { refFile.seekToContig(\"chr3\"); } catch ( IOException e ) {}\n//        for ( int i = 0; i < N_SAMPLES; i++ ) {\n//            final int nextIndex = rnd.nextInt(refContigs.size());\n//            String nextContig = refFile.getSequenceDictionary().getSequence(nextIndex).getSequenceName();\n//            //nextContig = \"chr2\";\n//            try {\n//                System.out.printf(\"Seeking: current=%s, target=%s%n\", refFile.getContigName(), nextContig);\n//                long lastTime = System.currentTimeMillis();\n//                final boolean success = refFile.seekToContig(nextContig, true);\n//                long curTime = System.currentTimeMillis();\n//                final double elapsed = (curTime - lastTime) / 1000.0;\n//                timings.add(elapsed);\n//                System.out.printf(\"  -> Elapsed time %.2f, averaging %.2f sec / seek for %d seeks%n\",\n//                        elapsed, Utils.averageDouble(timings), timings.size());\n//\n//                if ( ! success ) {\n//                    System.out.printf(\"Failured to seek to %s from %s%n\", nextContig, lastContig );\n//                }\n//                //System.exit(1);\n//            } catch ( IOException e ) {\n//                System.out.printf(\"Failured to seek to %s from %s%n\", nextContig, lastContig );\n//                e.printStackTrace();\n//            }\n//\n//            lastContig = nextContig;\n//        }\n//        System.exit(1);\n\n/*\n        final String targetChr = \"chr10\";\n        try {\n            refFile.seekToContig(targetChr);\n        } catch ( IOException e ){\n            System.out.printf(\"Failured to seek to %s%n\", targetChr);\n            e.printStackTrace();\n        }\n        System.exit(1);\n*/\n\n        //List<Double> timings = new ArrayList<Double>();\n        final long startTime = System.currentTimeMillis();\n        long lastTime = System.currentTimeMillis();\n\n        int i = 0;\n        String prevNextContigName = null;\n        System.out.printf(\"Walking reference sequence:%n\");\n        for ( SAMSequenceRecord refContig: refContigs ) {\n            long curTime = System.currentTimeMillis();\n            ReferenceSequence contig = refFile.nextSequence();\n            final double elapsed = (curTime - lastTime) / 1000.0;\n            timings.add(elapsed);\n            System.out.printf(\"%2d : expected %s contig, found %s with next of %s after %.2f seconds, average is %.2f%n\", i,\n                    refContig.getSequenceName(), contig.getName(), refFile.getNextContigName(), elapsed, Utils.averageDouble(timings));\n            if ( prevNextContigName != null && contig.getName() != null && ! prevNextContigName.equals(contig.getName()) )\n                throw new RuntimeIOException(String.format(\"Unexpected contig ordering %s was expected next, but I found %s?\",\n                        prevNextContigName, contig.getName()));\n\n            prevNextContigName = refFile.getNextContigName();\n            lastTime = curTime;\n            i++;\n\n            System.out.printf(\"  Traversing from chr1 to %s would require jumping %d bytes%n\",\n                    contig.getName(), refFile.getDistanceBetweenContigs(\"chr1\", contig.getName()));\n        }\n    }","id":16233,"modified_method":"/**\n     * An inappropriately placed validation and performance testing routine for jumping\n     * around in the fasta sequence file.\n     * @param refFileName\n     */\n    private static void testNewReferenceFeatures(final File refFileName) {\n        final FastaSequenceFile2 refFile = new FastaSequenceFile2(refFileName);\n        Utils.setupRefContigOrdering(refFile);\n\n        List<SAMSequenceRecord> refContigs = refFile.getSequenceDictionary().getSequences();\n\n        /*\n        for ( SAMSequenceRecord refContig: refContigs ) {\n            System.out.printf(\"  Traversing from chr1 to %s would require jumping %d bytes%n\",\n                    refContig.getSequenceName(), refFile.getDistanceBetweenContigs(\"chr1\", refContig.getSequenceName()));\n        }\n        */\n\n        String lastContig = null;\n        List<Double> timings = new ArrayList<Double>();\n        for ( SAMSequenceRecord startContig : refFile.getSequenceDictionary().getSequences() ) {\n            final String startContigName = startContig.getSequenceName();\n            for ( SAMSequenceRecord targetContig : refFile.getSequenceDictionary().getSequences() ) {\n                refFile.seekToContig(startContigName, true);\n                logger.info(String.format(\"Seeking: current=%s, target=%s%n\", startContigName, targetContig.getSequenceName()));\n                long lastTime = System.currentTimeMillis();\n                final boolean success = refFile.seekToContig(targetContig.getSequenceName(), true);\n                long curTime = System.currentTimeMillis();\n                final double elapsed = (curTime - lastTime) / 1000.0;\n                timings.add(elapsed);\n                logger.info(String.format(\"  -> Elapsed time %.2f, averaging %.2f sec / seek for %d seeks%n\",\n                        elapsed, Utils.averageDouble(timings), timings.size()));\n\n                if ( ! success ) {\n                    logger.error(String.format(\"Failured to seek to %s from %s%n\", targetContig.getSequenceName(), lastContig ));\n                }\n                //System.exit(1);\n            }\n        }\n        System.exit(1);\n\n        // code for randomly sampling the seeks\n//        Random rnd = new Random();\n//        String lastContig = null;\n//        List<Double> timings = new ArrayList<Double>();\n//        final int N_SAMPLES = 1000;\n//        //try { refFile.seekToContig(\"chr3\"); } catch ( IOException e ) {}\n//        for ( int i = 0; i < N_SAMPLES; i++ ) {\n//            final int nextIndex = rnd.nextInt(refContigs.size());\n//            String nextContig = refFile.getSequenceDictionary().getSequence(nextIndex).getSequenceName();\n//            //nextContig = \"chr2\";\n//            try {\n//                System.out.printf(\"Seeking: current=%s, target=%s%n\", refFile.getContigName(), nextContig);\n//                long lastTime = System.currentTimeMillis();\n//                final boolean success = refFile.seekToContig(nextContig, true);\n//                long curTime = System.currentTimeMillis();\n//                final double elapsed = (curTime - lastTime) / 1000.0;\n//                timings.add(elapsed);\n//                System.out.printf(\"  -> Elapsed time %.2f, averaging %.2f sec / seek for %d seeks%n\",\n//                        elapsed, Utils.averageDouble(timings), timings.size());\n//\n//                if ( ! success ) {\n//                    System.out.printf(\"Failured to seek to %s from %s%n\", nextContig, lastContig );\n//                }\n//                //System.exit(1);\n//            } catch ( IOException e ) {\n//                System.out.printf(\"Failured to seek to %s from %s%n\", nextContig, lastContig );\n//                e.printStackTrace();\n//            }\n//\n//            lastContig = nextContig;\n//        }\n//        System.exit(1);\n\n/*\n        final String targetChr = \"chr10\";\n        try {\n            refFile.seekToContig(targetChr);\n        } catch ( IOException e ){\n            System.out.printf(\"Failured to seek to %s%n\", targetChr);\n            e.printStackTrace();\n        }\n        System.exit(1);\n*/\n\n        //List<Double> timings = new ArrayList<Double>();\n        final long startTime = System.currentTimeMillis();\n        long lastTime = System.currentTimeMillis();\n\n        int i = 0;\n        String prevNextContigName = null;\n        logger.info(String.format(\"Walking reference sequence:%n\"));\n        for ( SAMSequenceRecord refContig: refContigs ) {\n            long curTime = System.currentTimeMillis();\n            ReferenceSequence contig = refFile.nextSequence();\n            final double elapsed = (curTime - lastTime) / 1000.0;\n            timings.add(elapsed);\n            logger.info(String.format(\"%2d : expected %s contig, found %s with next of %s after %.2f seconds, average is %.2f%n\", i,\n                    refContig.getSequenceName(), contig.getName(), refFile.getNextContigName(), elapsed, Utils.averageDouble(timings)));\n            if ( prevNextContigName != null && contig.getName() != null && ! prevNextContigName.equals(contig.getName()) )\n                throw new RuntimeIOException(String.format(\"Unexpected contig ordering %s was expected next, but I found %s?\",\n                        prevNextContigName, contig.getName()));\n\n            prevNextContigName = refFile.getNextContigName();\n            lastTime = curTime;\n            i++;\n\n            logger.info(String.format(\"  Traversing from chr1 to %s would require jumping %d bytes%n\",\n                    contig.getName(), refFile.getDistanceBetweenContigs(\"chr1\", contig.getName())));\n        }\n    }","commit_id":"d115209e8602cdeb4aed978e54b5c81d048decf8","url":"https://github.com/broadgsa/gatk"},{"original_method":"protected void hangRead(final SAMRecord read) {\n        GenomeLoc readLoc = new GenomeLoc(read.getReferenceName(), read.getAlignmentStart());\n        //System.out.printf(\"Adding read %s at %d%n\", read.getReadName(), read.getAlignmentStart());\n        \n        /*\n        for ( int i = 0; i < read.getReadLength(); i++ ) {\n            GenomeLoc offset = new GenomeLoc(readLoc.getContig(), readLoc.getStart() + i);\n            readHanger.expandingPut(offset, read);\n            offsetHanger.expandingPut(offset, i);\n        }\n        */\n\n        for ( AlignmentBlock block : read.getAlignmentBlocks() ) {\n            if ( DEBUG )\n                System.out.printf(\"Processing block %s len=%d%n\", block, block.getLength());\n            for ( int i = 0; i < block.getLength(); i++ ) {\n                GenomeLoc offset = new GenomeLoc(readLoc.getContig(), block.getReferenceStart() + i);\n                readHanger.expandingPut(offset, read);\n                offsetHanger.expandingPut(offset, block.getReadStart() + i - 1);\n                if ( DEBUG )\n                    System.out.printf(\"  # Added %s%n\", offset);\n            }\n        }\n    }","id":16234,"modified_method":"protected void hangRead(final SAMRecord read) {\n        GenomeLoc readLoc = new GenomeLoc(read.getReferenceName(), read.getAlignmentStart());\n        //System.out.printf(\"Adding read %s at %d%n\", read.getReadName(), read.getAlignmentStart());\n        \n        /*\n        for ( int i = 0; i < read.getReadLength(); i++ ) {\n            GenomeLoc offset = new GenomeLoc(readLoc.getContig(), readLoc.getStart() + i);\n            readHanger.expandingPut(offset, read);\n            offsetHanger.expandingPut(offset, i);\n        }\n        */\n\n        for ( AlignmentBlock block : read.getAlignmentBlocks() ) {\n            if ( DEBUG )\n                logger.debug(String.format(\"Processing block %s len=%d%n\", block, block.getLength()));\n            for ( int i = 0; i < block.getLength(); i++ ) {\n                GenomeLoc offset = new GenomeLoc(readLoc.getContig(), block.getReferenceStart() + i);\n                readHanger.expandingPut(offset, read);\n                offsetHanger.expandingPut(offset, block.getReadStart() + i - 1);\n                if ( DEBUG )\n                    logger.debug(String.format(\"  # Added %s%n\", offset));\n            }\n        }\n    }","commit_id":"d115209e8602cdeb4aed978e54b5c81d048decf8","url":"https://github.com/broadgsa/gatk"},{"original_method":"private final void expandWindow(final int incrementSize) {\n        if ( DEBUG ) {\n            System.out.printf(\"entering expandWindow..., hasNext=%b%n\", it.hasNext());\n            printState();\n        }\n\n        while ( it.hasNext() ) {\n            if ( DEBUG ) {\n                System.out.printf(\"Expanding window%n\");\n                printState();\n            }\n            \n            SAMRecord read = it.next();\n            justCleared = false;\n\n            GenomeLoc readLoc = Utils.genomicLocationOf(read);\n            if ( DEBUG ) {\n                System.out.printf(\"  Expanding window sizes %d with %d : left=%s, right=%s, readLoc = %s, cmp=%d%n\",\n                        readHanger.size(), incrementSize,\n                        readHanger.hasHangers() ? readHanger.getLeftLoc() : \"NA\",\n                        readHanger.hasHangers() ? readHanger.getRightLoc() : \"NA\",\n                        readLoc,\n                        readHanger.hasHangers() ? readLoc.compareTo(readHanger.getLeftLoc()) : -100);\n            }\n            //if ( readHanger.size() >= incrementSize ) {\n            //if ( readHanger.hasHangers() && readLoc.compareTo(readHanger.getLeftLoc()) == 1) {\n            if ( readHanger.hasHangers() && readLoc.distance(readHanger.getLeftLoc()) >= incrementSize ) {\n                // We've collected up enough reads\n                it.pushback(read);\n                break;\n            }\n            else\n                hangRead(read);\n        }\n    }","id":16235,"modified_method":"private final void expandWindow(final int incrementSize) {\n        if ( DEBUG ) {\n            logger.debug(String.format(\"entering expandWindow..., hasNext=%b%n\", it.hasNext()));\n            printState();\n        }\n\n        while ( it.hasNext() ) {\n            if ( DEBUG ) {\n                logger.debug(String.format(\"Expanding window%n\"));\n                printState();\n            }\n            \n            SAMRecord read = it.next();\n            justCleared = false;\n\n            GenomeLoc readLoc = Utils.genomicLocationOf(read);\n            if ( DEBUG ) {\n                logger.debug(String.format(\"  Expanding window sizes %d with %d : left=%s, right=%s, readLoc = %s, cmp=%d%n\",\n                        readHanger.size(), incrementSize,\n                        readHanger.hasHangers() ? readHanger.getLeftLoc() : \"NA\",\n                        readHanger.hasHangers() ? readHanger.getRightLoc() : \"NA\",\n                        readLoc,\n                        readHanger.hasHangers() ? readLoc.compareTo(readHanger.getLeftLoc()) : -100));\n            }\n            //if ( readHanger.size() >= incrementSize ) {\n            //if ( readHanger.hasHangers() && readLoc.compareTo(readHanger.getLeftLoc()) == 1) {\n            if ( readHanger.hasHangers() && readLoc.distance(readHanger.getLeftLoc()) >= incrementSize ) {\n                // We've collected up enough reads\n                it.pushback(read);\n                break;\n            }\n            else\n                hangRead(read);\n        }\n    }","commit_id":"d115209e8602cdeb4aed978e54b5c81d048decf8","url":"https://github.com/broadgsa/gatk"},{"original_method":"public LocusContext next() {\n//        if ( it.hasNext() && ! readHanger.isEmpty() ) {\n//            // todo: this needs to be deleted\n//            final SAMRecord read = it.peek();\n//            GenomeLoc readLoc = Utils.genomicLocationOf(read);\n//            System.out.printf(\"Comparing %s to %s%n\", readLoc, readHanger.getLeftLoc());\n//            if ( readLoc.compareTo(readHanger.getLeftLoc()) == -1 ) {\n//                clear();\n//                return next();\n//            }\n//        }\n\n        if ( ! currentPositionIsFullyCovered() )\n            expandWindow(INCREMENT_SIZE);\n\n        if ( DEBUG ) {\n            System.out.printf(\"in Next:%n\");\n            printState();\n        }\n\n        RefHanger.Hanger rhanger = readHanger.popLeft();\n        RefHanger.Hanger ohanger = offsetHanger.popLeft();\n\n        return new LocusContext(rhanger.loc, rhanger.data, ohanger.data);\n    }","id":16236,"modified_method":"public LocusContext next() {\n//        if ( it.hasNext() && ! readHanger.isEmpty() ) {\n//            // todo: this needs to be deleted\n//            final SAMRecord read = it.peek();\n//            GenomeLoc readLoc = Utils.genomicLocationOf(read);\n//            System.out.printf(\"Comparing %s to %s%n\", readLoc, readHanger.getLeftLoc());\n//            if ( readLoc.compareTo(readHanger.getLeftLoc()) == -1 ) {\n//                clear();\n//                return next();\n//            }\n//        }\n\n        if ( ! currentPositionIsFullyCovered() )\n            expandWindow(INCREMENT_SIZE);\n\n        if ( DEBUG ) {\n            logger.debug(String.format((\"in Next:%n\")));\n            printState();\n        }\n\n        RefHanger.Hanger rhanger = readHanger.popLeft();\n        RefHanger.Hanger ohanger = offsetHanger.popLeft();\n\n        return new LocusContext(rhanger.loc, rhanger.data, ohanger.data);\n    }","commit_id":"d115209e8602cdeb4aed978e54b5c81d048decf8","url":"https://github.com/broadgsa/gatk"},{"original_method":"public void clear() {\n        System.out.printf(\"clear() called%n\");\n        readHanger.clear();\n        offsetHanger.clear();\n    }","id":16237,"modified_method":"public void clear() {\n        logger.debug(String.format((\"clear() called%n\")));\n        readHanger.clear();\n        offsetHanger.clear();\n    }","commit_id":"d115209e8602cdeb4aed978e54b5c81d048decf8","url":"https://github.com/broadgsa/gatk"},{"original_method":"public void printState() {\n        for ( int i = 0; i < readHanger.size(); i++ ) {\n            RefHanger.Hanger rhanger = readHanger.getHanger(i);\n            RefHanger.Hanger ohanger = offsetHanger.getHanger(i);\n\n            System.out.printf(\"  -> %s:\", rhanger.loc);\n            for ( int j = 0; j < rhanger.size(); j++ ) {\n                SAMRecord read = (SAMRecord)rhanger.get(j);\n                int offset = (Integer)ohanger.get(j);\n                System.out.printf(\" %s(%d)=%s\", read.getReadName(), offset, read.getReadString().charAt(offset) );\n            }\n            System.out.printf(\"%n\");\n\n        }        \n    }","id":16238,"modified_method":"public void printState() {\n        for ( int i = 0; i < readHanger.size(); i++ ) {\n            RefHanger.Hanger rhanger = readHanger.getHanger(i);\n            RefHanger.Hanger ohanger = offsetHanger.getHanger(i);\n\n            logger.debug(String.format(\"  -> %s:\", rhanger.loc));\n            for ( int j = 0; j < rhanger.size(); j++ ) {\n                SAMRecord read = (SAMRecord)rhanger.get(j);\n                int offset = (Integer)ohanger.get(j);\n                logger.debug(String.format(\" %s(%d)=%s\", read.getReadName(), offset, read.getReadString().charAt(offset) ));\n            }\n            logger.debug(String.format(\"%n\"));\n\n        }        \n    }","commit_id":"d115209e8602cdeb4aed978e54b5c81d048decf8","url":"https://github.com/broadgsa/gatk"},{"original_method":"private ReferenceIterator seekForwardOffset(final String seekContigName, final long seekOffset) {\n        assert seekContigName != null : \"seekContigName is null\";\n        assert seekOffset >= 0 : \"seekOffset < 0: \" + seekOffset;\n\n        // jumps us forward in the sequence to the contig / pos\n        if ( currentContig == null )\n            next();\n\n        if ( DEBUG ) System.out.printf(\"  -> Seeking to %s %d from %s %d%n\", seekContigName, seekOffset, currentContig.getName(), offset);\n\n        int cmpContigs = GenomeLoc.compareContigs(seekContigName, currentContig.getName());\n\n        if ( cmpContigs == -1 && false ) {  // todo: fixed\n            // The contig we are looking for is before the currentContig -- it's an error\n            throw new IllegalArgumentException(String.format(\"Invalid seek to %s from %s, which is usually due to out of order reads%n\",\n                    new GenomeLoc(currentContig.getName(), seekOffset), new GenomeLoc(currentContig.getName(), offset)));\n        }\n        else if ( cmpContigs == 1 ) {\n            // we need to jump forward\n            if ( DEBUG ) System.out.printf(\"  -> Seeking in the fasta file to %s from %s%n\", seekContigName, currentContig.getName());\n\n            if ( ! refFile.seekToContig(seekContigName) ) { // ok, do the seek\n                // a false result indicates a failure, throw a somewhat cryptic call\n                throw new RuntimeIOException(String.format(\"Unexpected seek failure from %s from %s%n\",\n                        new GenomeLoc(currentContig.getName(), seekOffset), new GenomeLoc(currentContig.getName(), offset)));\n            }\n\n            readNextContig(); // since we haven't failed, we just read in the next contig (which is seekContigName)\n        }\n\n        // at this point, the current contig is seekContigName, so just do a bit more error checking and be done\n        return seekForwardOffsetOnSameContig( seekContigName, seekOffset );\n    }","id":16239,"modified_method":"private ReferenceIterator seekForwardOffset(final String seekContigName, final long seekOffset) {\n        assert seekContigName != null : \"seekContigName is null\";\n        assert seekOffset >= 0 : \"seekOffset < 0: \" + seekOffset;\n\n        // jumps us forward in the sequence to the contig / pos\n        if ( currentContig == null )\n            next();\n\n        if ( DEBUG ) logger.debug(String.format(\"  -> Seeking to %s %d from %s %d%n\", seekContigName, seekOffset, currentContig.getName(), offset));\n\n        int cmpContigs = GenomeLoc.compareContigs(seekContigName, currentContig.getName());\n\n        if ( cmpContigs == -1 && false ) {  // todo: fixed\n            // The contig we are looking for is before the currentContig -- it's an error\n            throw new IllegalArgumentException(String.format(\"Invalid seek to %s from %s, which is usually due to out of order reads%n\",\n                    new GenomeLoc(currentContig.getName(), seekOffset), new GenomeLoc(currentContig.getName(), offset)));\n        }\n        else if ( cmpContigs == 1 ) {\n            // we need to jump forward\n            if ( DEBUG ) logger.debug(String.format(\"  -> Seeking in the fasta file to %s from %s%n\", seekContigName, currentContig.getName()));\n\n            if ( ! refFile.seekToContig(seekContigName) ) { // ok, do the seek\n                // a false result indicates a failure, throw a somewhat cryptic call\n                throw new RuntimeIOException(String.format(\"Unexpected seek failure from %s from %s%n\",\n                        new GenomeLoc(currentContig.getName(), seekOffset), new GenomeLoc(currentContig.getName(), offset)));\n            }\n\n            readNextContig(); // since we haven't failed, we just read in the next contig (which is seekContigName)\n        }\n\n        // at this point, the current contig is seekContigName, so just do a bit more error checking and be done\n        return seekForwardOffsetOnSameContig( seekContigName, seekOffset );\n    }","commit_id":"d115209e8602cdeb4aed978e54b5c81d048decf8","url":"https://github.com/broadgsa/gatk"},{"original_method":"public ReferenceIterator next() {\n        if ( currentContig != null ) {\n            if ( DEBUG ) System.out.printf(\"  -> %s:%d %d%n\", currentContig.getName(), offset, currentContig.length());\n        }\n        offset++;  // move on to the next position\n\n        if ( currentContig == null || offset >= currentContig.length() ) {\n            // We need to update the contig\n            if ( readNextContig() ){\n                // We sucessfully loaded the next contig, recursively call next\n                return next();\n            }\n            else {\n                throw new NoSuchElementException();\n            }\n        }\n        else {\n            // We're good to go -- we're in the current contig\n            return this;\n        }\n    }","id":16240,"modified_method":"public ReferenceIterator next() {\n        if ( currentContig != null ) {\n            if ( DEBUG ) logger.debug(String.format(\"  -> %s:%d %d%n\", currentContig.getName(), offset, currentContig.length()));\n        }\n        offset++;  // move on to the next position\n\n        if ( currentContig == null || offset >= currentContig.length() ) {\n            // We need to update the contig\n            if ( readNextContig() ){\n                // We sucessfully loaded the next contig, recursively call next\n                return next();\n            }\n            else {\n                throw new NoSuchElementException();\n            }\n        }\n        else {\n            // We're good to go -- we're in the current contig\n            return this;\n        }\n    }","commit_id":"d115209e8602cdeb4aed978e54b5c81d048decf8","url":"https://github.com/broadgsa/gatk"},{"original_method":"/**\n     * Called after a traversal to print out information about the traversal process\n     *\n     * @param type String describing this type of traversal (\"loci\", \"read\")\n     * @param sum  The reduce result of the traversal\n     * @param <T>  ReduceType of the traversal\n     */\n    protected <T> void printOnTraversalDone(final String type, T sum) {\n        printProgress(true, type, null);\n        System.out.println(\"Traversal reduce result is \" + sum); // TODO: fixme -- how do we use this logger?\n        final long curTime = System.currentTimeMillis();\n        final double elapsed = (curTime - startTime) / 1000.0;\n        logger.info(String.format(\"Total runtime %.2f secs, %.2f min, %.2f hours%n\", elapsed, elapsed / 60, elapsed / 3600));\n        logger.info(String.format(\"Traversal skipped %d reads out of %d total (%.2f%%)\", nSkippedReads, nReads, (nSkippedReads * 100.0) / nReads));\n        logger.info(String.format(\"  -> %d unmapped reads\", nUnmappedReads));\n        logger.info(String.format(\"  -> %d non-primary reads\", nNotPrimary));\n        logger.info(String.format(\"  -> %d reads with bad alignments\", nBadAlignments));\n        logger.info(String.format(\"  -> %d reads with indels\", nSkippedIndels));\n    }","id":16241,"modified_method":"/**\n     * Called after a traversal to print out information about the traversal process\n     *\n     * @param type String describing this type of traversal (\"loci\", \"read\")\n     * @param sum  The reduce result of the traversal\n     * @param <T>  ReduceType of the traversal\n     */\n    protected <T> void printOnTraversalDone(final String type, T sum) {\n        printProgress(true, type, null);\n        logger.info(\"Traversal reduce result is \" + sum);\n        final long curTime = System.currentTimeMillis();\n        final double elapsed = (curTime - startTime) / 1000.0;\n        logger.info(String.format(\"Total runtime %.2f secs, %.2f min, %.2f hours%n\", elapsed, elapsed / 60, elapsed / 3600));\n        logger.info(String.format(\"Traversal skipped %d reads out of %d total (%.2f%%)\", nSkippedReads, nReads, (nSkippedReads * 100.0) / nReads));\n        logger.info(String.format(\"  -> %d unmapped reads\", nUnmappedReads));\n        logger.info(String.format(\"  -> %d non-primary reads\", nNotPrimary));\n        logger.info(String.format(\"  -> %d reads with bad alignments\", nBadAlignments));\n        logger.info(String.format(\"  -> %d reads with indels\", nSkippedIndels));\n    }","commit_id":"d115209e8602cdeb4aed978e54b5c81d048decf8","url":"https://github.com/broadgsa/gatk"},{"original_method":"/**\n     * Instantiate the list of walker classes.  Add them to the walker hashmap.\n     * @param walkerClasses Classes to instantiate.\n     * @return map of walker name to walker.\n     */\n    private Map<String,Class> createWalkerDatabase(List<Class> walkerClasses) {\n        Map<String,Class> walkers = new HashMap<String,Class>();\n\n        for(Class<Walker> walkerClass : walkerClasses) {\n            String walkerName = getWalkerName( walkerClass );\n            System.out.printf(\"* Adding module %s%n\", walkerName);            \n            walkers.put(walkerName,walkerClass);\n        }\n\n        return walkers;\n    }","id":16242,"modified_method":"/**\n     * Instantiate the list of walker classes.  Add them to the walker hashmap.\n     *\n     * @param walkerClasses Classes to instantiate.\n     * @return map of walker name to walker.\n     */\n    private Map<String, Class> createWalkerDatabase(List<Class> walkerClasses) {\n        Map<String, Class> walkers = new HashMap<String, Class>();\n\n        for (Class<Walker> walkerClass : walkerClasses) {\n            String walkerName = getWalkerName(walkerClass);\n            logger.info(String.format(\"* Adding module %s%n\", walkerName));\n            walkers.put(walkerName, walkerClass);\n        }\n\n        return walkers;\n    }","commit_id":"d115209e8602cdeb4aed978e54b5c81d048decf8","url":"https://github.com/broadgsa/gatk"},{"original_method":"public WalkerManager( String pluginDirectory ) {\n        try {\n            List<Class> walkerCandidates = new ArrayList<Class>();\n\n            // Load all classes that live in this jar.\n            final File location = getThisLocation();\n            walkerCandidates.addAll( loadClassesFromLocation( location ) );\n\n            // Load all classes that live in the extension path.\n            if(pluginDirectory == null)\n                pluginDirectory = location.getParent() + File.separator + \"walkers\";\n            System.out.println(\"plugin directory: \" + pluginDirectory);\n\n            File extensionPath = new File( pluginDirectory );\n            if(extensionPath.exists()) {\n                List<String> filesInPath = findFilesInPath( extensionPath, \"\", \"class\", false );\n                walkerCandidates.addAll( loadExternalClasses( extensionPath, filesInPath ) );\n            }\n\n            walkerCandidates = filterWalkers(walkerCandidates);\n\n            if(walkerCandidates.isEmpty())\n                throw new RuntimeException(\"No walkers were found.\");            \n\n            walkers = createWalkerDatabase( walkerCandidates );\n        }\n        // IOExceptions here are suspect; they indicate that the WalkerManager can't open its containing jar.\n        // Wrap in a RuntimeException.\n        catch(IOException ex) {\n            throw new RuntimeException(ex);\n        }\n    }","id":16243,"modified_method":"public WalkerManager(String pluginDirectory) {\n        try {\n            List<Class> walkerCandidates = new ArrayList<Class>();\n\n            // Load all classes that live in this jar.\n            final File location = getThisLocation();\n            walkerCandidates.addAll(loadClassesFromLocation(location));\n\n            // Load all classes that live in the extension path.\n            if (pluginDirectory == null)\n                pluginDirectory = location.getParent() + File.separator + \"walkers\";\n            logger.info(\"plugin directory: \" + pluginDirectory);\n\n            File extensionPath = new File(pluginDirectory);\n            if (extensionPath.exists()) {\n                List<String> filesInPath = findFilesInPath(extensionPath, \"\", \"class\", false);\n                walkerCandidates.addAll(loadExternalClasses(extensionPath, filesInPath));\n            }\n\n            walkerCandidates = filterWalkers(walkerCandidates);\n\n            if (walkerCandidates.isEmpty())\n                throw new RuntimeException(\"No walkers were found.\");\n\n            walkers = createWalkerDatabase(walkerCandidates);\n        }\n        // IOExceptions here are suspect; they indicate that the WalkerManager can't open its containing jar.\n        // Wrap in a RuntimeException.\n        catch (IOException ex) {\n            throw new RuntimeException(ex);\n        }\n    }","commit_id":"d115209e8602cdeb4aed978e54b5c81d048decf8","url":"https://github.com/broadgsa/gatk"},{"original_method":"public static boolean isNegation(@Nullable PsiExpression condition,\n                                   boolean ignoreNegatedNullComparison) {\n    condition = ParenthesesUtils.stripParentheses(condition);\n    if (condition instanceof PsiPrefixExpression) {\n      final PsiPrefixExpression prefixExpression =\n        (PsiPrefixExpression)condition;\n      final IElementType tokenType = prefixExpression.getOperationTokenType();\n      return tokenType.equals(JavaTokenType.EXCL);\n    }\n    else if (condition instanceof PsiBinaryExpression) {\n      final PsiBinaryExpression binaryExpression =\n        (PsiBinaryExpression)condition;\n      final PsiExpression lhs = binaryExpression.getLOperand();\n      final PsiExpression rhs = binaryExpression.getROperand();\n      if (rhs == null) {\n        return false;\n      }\n      final IElementType tokenType = binaryExpression.getOperationTokenType();\n      if (tokenType.equals(JavaTokenType.NE)) {\n        if (ignoreNegatedNullComparison) {\n          final String lhsText = lhs.getText();\n          final String rhsText = rhs.getText();\n          return !PsiKeyword.NULL.equals(lhsText) &&\n                 !PsiKeyword.NULL.equals(rhsText);\n        }\n        else {\n          return true;\n        }\n      }\n      else {\n        return false;\n      }\n    }\n    else {\n      return false;\n    }\n  }","id":16244,"modified_method":"public static boolean isNegation(@Nullable PsiExpression condition,\n                                   boolean ignoreNegatedNullComparison, boolean ignoreNegatedZeroComparison) {\n    condition = ParenthesesUtils.stripParentheses(condition);\n    if (condition instanceof PsiPrefixExpression) {\n      final PsiPrefixExpression prefixExpression = (PsiPrefixExpression)condition;\n      final IElementType tokenType = prefixExpression.getOperationTokenType();\n      return tokenType.equals(JavaTokenType.EXCL);\n    }\n    else if (condition instanceof PsiBinaryExpression) {\n      final PsiBinaryExpression binaryExpression = (PsiBinaryExpression)condition;\n      final PsiExpression lhs = ParenthesesUtils.stripParentheses(binaryExpression.getLOperand());\n      final PsiExpression rhs = ParenthesesUtils.stripParentheses(binaryExpression.getROperand());\n      if (lhs == null || rhs == null) {\n        return false;\n      }\n      final IElementType tokenType = binaryExpression.getOperationTokenType();\n      if (tokenType.equals(JavaTokenType.NE)) {\n        if (ignoreNegatedNullComparison) {\n          final String lhsText = lhs.getText();\n          final String rhsText = rhs.getText();\n          if (PsiKeyword.NULL.equals(lhsText) || PsiKeyword.NULL.equals(rhsText)) {\n            return false;\n          }\n        }\n        return !(ignoreNegatedZeroComparison && (isZeroLiteral(lhs) || isZeroLiteral(rhs)));\n      }\n    }\n    return false;\n  }","commit_id":"b8b50a1cd7130de982bbd8c5c453e770d500eca3","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void doFix(Project project,\n                      ProblemDescriptor descriptor)\n      throws IncorrectOperationException {\n      final PsiElement element = descriptor.getPsiElement();\n      final PsiConditionalExpression exp =\n        (PsiConditionalExpression)element.getParent();\n      assert exp != null;\n      final PsiExpression elseBranch = exp.getElseExpression();\n      final PsiExpression thenBranch = exp.getThenExpression();\n      final PsiExpression condition = exp.getCondition();\n      final String negatedCondition =\n        BoolUtils.getNegatedExpressionText(condition);\n      assert elseBranch != null;\n      assert thenBranch != null;\n      final String newStatement =\n        negatedCondition + '?' + elseBranch.getText() + ':' +\n        thenBranch.getText();\n      replaceExpression(exp, newStatement);\n    }","id":16245,"modified_method":"@Override\n    public void doFix(Project project, ProblemDescriptor descriptor)\n      throws IncorrectOperationException {\n      final PsiElement element = descriptor.getPsiElement();\n      final PsiConditionalExpression conditionalExpression = (PsiConditionalExpression)element.getParent();\n      assert conditionalExpression != null;\n      final PsiExpression elseBranch = conditionalExpression.getElseExpression();\n      final PsiExpression thenBranch = conditionalExpression.getThenExpression();\n      final PsiExpression condition = conditionalExpression.getCondition();\n      final String negatedCondition = BoolUtils.getNegatedExpressionText(condition);\n      assert elseBranch != null;\n      assert thenBranch != null;\n      final String newStatement = negatedCondition + '?' + elseBranch.getText() + ':' + thenBranch.getText();\n      replaceExpression(conditionalExpression, newStatement);\n    }","commit_id":"b8b50a1cd7130de982bbd8c5c453e770d500eca3","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Override\n    public void visitConditionalExpression(\n      PsiConditionalExpression expression) {\n      super.visitConditionalExpression(expression);\n      final PsiExpression thenBranch = expression.getThenExpression();\n      if (thenBranch == null) {\n        return;\n      }\n      final PsiExpression elseBranch = expression.getElseExpression();\n      if (elseBranch == null) {\n        return;\n      }\n      final PsiExpression condition = expression.getCondition();\n      if (!ExpressionUtils.isNegation(condition,\n                                      m_ignoreNegatedNullComparison)) {\n        return;\n      }\n      registerError(condition);\n    }","id":16246,"modified_method":"@Override\n    public void visitConditionalExpression(PsiConditionalExpression expression) {\n      super.visitConditionalExpression(expression);\n      final PsiExpression thenBranch = expression.getThenExpression();\n      if (thenBranch == null) {\n        return;\n      }\n      final PsiExpression elseBranch = expression.getElseExpression();\n      if (elseBranch == null) {\n        return;\n      }\n      final PsiExpression condition = expression.getCondition();\n      if (!ExpressionUtils.isNegation(condition, m_ignoreNegatedNullComparison, false)) {\n        return;\n      }\n      registerError(condition);\n    }","commit_id":"b8b50a1cd7130de982bbd8c5c453e770d500eca3","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Override\n    public void visitIfStatement(@NotNull PsiIfStatement statement) {\n      super.visitIfStatement(statement);\n      final PsiStatement thenBranch = statement.getThenBranch();\n      if (thenBranch == null) {\n        return;\n      }\n      final PsiStatement elseBranch = statement.getElseBranch();\n      if (elseBranch == null) {\n        return;\n      }\n      if (elseBranch instanceof PsiIfStatement) {\n        return;\n      }\n\n      final PsiExpression condition = statement.getCondition();\n      if (condition == null) {\n        return;\n      }\n      if (!ExpressionUtils.isNegation(condition,\n                                      m_ignoreNegatedNullComparison)) {\n        return;\n      }\n      final PsiElement parent = statement.getParent();\n      if (parent instanceof PsiIfStatement) {\n        return;\n      }\n      registerStatementError(statement);\n    }","id":16247,"modified_method":"@Override\n    public void visitIfStatement(@NotNull PsiIfStatement statement) {\n      super.visitIfStatement(statement);\n      final PsiStatement thenBranch = statement.getThenBranch();\n      if (thenBranch == null) {\n        return;\n      }\n      final PsiStatement elseBranch = statement.getElseBranch();\n      if (elseBranch == null) {\n        return;\n      }\n      if (elseBranch instanceof PsiIfStatement) {\n        return;\n      }\n      final PsiExpression condition = statement.getCondition();\n      if (condition == null) {\n        return;\n      }\n      if (!ExpressionUtils.isNegation(condition, m_ignoreNegatedNullComparison, m_ignoreNegatedZeroComparison)) {\n        return;\n      }\n      final PsiElement parent = statement.getParent();\n      if (parent instanceof PsiIfStatement) {\n        return;\n      }\n      registerStatementError(statement);\n    }","commit_id":"b8b50a1cd7130de982bbd8c5c453e770d500eca3","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public JComponent createOptionsPanel() {\n    return new SingleCheckboxOptionsPanel(InspectionGadgetsBundle.message(\n      \"negated.if.else.ignore.option\"),\n                                          this, \"m_ignoreNegatedNullComparison\");\n  }","id":16248,"modified_method":"@Override\n  public JComponent createOptionsPanel() {\n    final MultipleCheckboxOptionsPanel panel = new MultipleCheckboxOptionsPanel(this);\n    panel.addCheckbox(InspectionGadgetsBundle.message(\"negated.if.else.ignore.negated.null.option\"), \"m_ignoreNegatedNullComparison\");\n    panel.addCheckbox(InspectionGadgetsBundle.message(\"negated.if.else.ignore.negated.zero.option\"), \"m_ignoreNegatedZeroComparison\");\n    return panel;\n  }","commit_id":"b8b50a1cd7130de982bbd8c5c453e770d500eca3","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public JComponent createOptionsPanel() {\n        return new SingleCheckboxOptionsPanel(\n                InspectionGadgetsBundle.message(\n                        \"parameter.name.differs.from.overridden.parameter.ignore.option\"),\n                this,\n                \"m_ignoreSingleCharacterNames\");\n    }","id":16249,"modified_method":"public JComponent createOptionsPanel() {\n        final MultipleCheckboxOptionsPanel optionsPanel =\n                new MultipleCheckboxOptionsPanel(this);\n        optionsPanel.addCheckbox(InspectionGadgetsBundle.message(\n                \"parameter.name.differs.from.overridden.parameter.ignore.character.option\"),\n                \"m_ignoreSingleCharacterNames\");\n        optionsPanel.addCheckbox(InspectionGadgetsBundle.message(\n                \"parameter.name.differs.from.overridden.parameter.ignore.library.option\"),\n                \"m_ignoreOverridesOfLibraryMethods\");\n        return optionsPanel;\n    }","commit_id":"5344a0e5d203f0ef6f2074c93b443aa26888ee0b","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private void checkParameters(PsiMethod superMethod,\n                                     PsiParameter[] parameters) {\n            final PsiParameterList superParameterList =\n                    superMethod.getParameterList();\n            final PsiParameter[] superParameters =\n                    superParameterList.getParameters();\n            for (int i = 0; i < parameters.length; i++) {\n                final PsiParameter parameter = parameters[i];\n                final String parameterName = parameter.getName();\n                final String superParameterName = superParameters[i].getName();\n                if (superParameterName == null) {\n                    continue;\n                }\n                if (superParameterName.equals(parameterName)) {\n                    continue;\n                }\n                if (m_ignoreSingleCharacterNames &&\n                        superParameterName.length() == 1) {\n                    continue;\n                }\n                registerVariableError(parameter, superParameterName);\n            }\n        }","id":16250,"modified_method":"private void checkParameters(PsiMethod superMethod,\n                                     PsiParameter[] parameters) {\n            if (m_ignoreOverridesOfLibraryMethods) {\n                final PsiClass containingClass =\n                        superMethod.getContainingClass();\n                if (containingClass != null &&\n                        LibraryUtil.classIsInLibrary(containingClass)) {\n                    return;\n                }\n            }\n            final PsiParameterList superParameterList =\n                    superMethod.getParameterList();\n            final PsiParameter[] superParameters =\n                    superParameterList.getParameters();\n            for (int i = 0; i < parameters.length; i++) {\n                final PsiParameter parameter = parameters[i];\n                final String parameterName = parameter.getName();\n                final String superParameterName = superParameters[i].getName();\n                if (superParameterName == null) {\n                    continue;\n                }\n                if (superParameterName.equals(parameterName)) {\n                    continue;\n                }\n                if (m_ignoreSingleCharacterNames &&\n                        superParameterName.length() == 1) {\n                    continue;\n                }\n                registerVariableError(parameter, superParameterName);\n            }\n        }","commit_id":"5344a0e5d203f0ef6f2074c93b443aa26888ee0b","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Nullable\n    public JComponent createOptionsPanel() {\n        return new SingleCheckboxOptionsPanel(\n          InspectionGadgetsBundle.message(\n                  \"field.accessed.synchronized.and.unsynchronized.options.panel.text\"),\n                this, \"countGettersAndSetters\");\n    }","id":16251,"modified_method":"@Nullable\n    public JComponent createOptionsPanel() {\n        return new SingleCheckboxOptionsPanel(\n          InspectionGadgetsBundle.message(\n                  \"field.accessed.synchronized.and.unsynchronized.option\"),\n                this, \"countGettersAndSetters\");\n    }","commit_id":"b1d67ab37d7746990fdbc04db314abf3d90986dd","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Nullable\n    public JComponent createOptionsPanel() {\n        return new SingleCheckboxOptionsPanel(\n                InspectionGadgetsBundle.message(\n                        \"method.only.used.from.inner.class.ignore.option.name\"),\n                this, \"ignoreMethodsAccessedFromAnonymousClass\");\n    }","id":16252,"modified_method":"@Nullable\n    public JComponent createOptionsPanel() {\n        return new SingleCheckboxOptionsPanel(\n                InspectionGadgetsBundle.message(\n                        \"method.only.used.from.inner.class.ignore.option\"),\n                this, \"ignoreMethodsAccessedFromAnonymousClass\");\n    }","commit_id":"b1d67ab37d7746990fdbc04db314abf3d90986dd","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public String getColumnName(int columnIndex){\n            return InspectionGadgetsBundle.message(\n                    \"questionable.name.coulumn.title\");\n        }","id":16253,"modified_method":"public String getColumnName(int columnIndex){\n            return InspectionGadgetsBundle.message(\n                    \"questionable.name.column.title\");\n        }","commit_id":"b1d67ab37d7746990fdbc04db314abf3d90986dd","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Nullable\n    public JComponent createOptionsPanel() {\n        return new SingleCheckboxOptionsPanel(\n          InspectionGadgetsBundle.message(\n                  \"raw.use.of.parameterized.type.ignore.new.objects\"), this,\n                \"ignoreObjectConstruction\");\n    }","id":16254,"modified_method":"@Nullable\n    public JComponent createOptionsPanel() {\n        final MultipleCheckboxOptionsPanel optionsPanel =\n                new MultipleCheckboxOptionsPanel(this);\n        optionsPanel.addCheckbox(\n                InspectionGadgetsBundle.message(\n                        \"raw.use.of.parameterized.type.ignore.new.objects.option\"),\n                \"ignoreObjectConstruction\");\n        optionsPanel.addCheckbox(\n                InspectionGadgetsBundle.message(\n                        \"raw.use.of.parameterized.type.ignore.type.casts.option\"),\n                \"ignoreTypeCasts\");\n        return optionsPanel;\n    }","commit_id":"b1d67ab37d7746990fdbc04db314abf3d90986dd","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void visitTypeElement(@NotNull PsiTypeElement typeElement) {\n            if (!hasNeededLanguageLevel(typeElement)) {\n                return;\n            }\n            super.visitTypeElement(typeElement);\n            final PsiElement parent = typeElement.getParent();\n            if (parent instanceof PsiInstanceOfExpression ||\n                    parent instanceof PsiClassObjectAccessExpression ||\n                    parent instanceof PsiReferenceParameterList) {\n                return;\n            }\n            if (PsiTreeUtil.getParentOfType(typeElement, PsiComment.class)\n                    != null) {\n                return;\n            }\n            final PsiType type = typeElement.getType();\n            if(!(type instanceof PsiClassType)) {\n                return;\n            }\n            final PsiClassType classType = (PsiClassType) type;\n            if(classType.hasParameters()) {\n                return;\n            }\n            final PsiClass aClass = classType.resolve();\n            if(aClass == null) {\n                return;\n            }\n            if(!aClass.hasTypeParameters()) {\n                return;\n            }\n            final PsiElement typeNameElement =\n                    typeElement.getInnermostComponentReferenceElement();\n            registerError(typeNameElement);\n        }","id":16255,"modified_method":"public void visitTypeElement(@NotNull PsiTypeElement typeElement) {\n            if (!hasNeededLanguageLevel(typeElement)) {\n                return;\n            }\n            super.visitTypeElement(typeElement);\n            final PsiElement parent = typeElement.getParent();\n            if (parent instanceof PsiInstanceOfExpression ||\n                    parent instanceof PsiClassObjectAccessExpression ||\n                    parent instanceof PsiReferenceParameterList) {\n                return;\n            }\n            if (ignoreTypeCasts && parent instanceof PsiTypeCastExpression) {\n                return;\n            }\n            if (PsiTreeUtil.getParentOfType(typeElement, PsiComment.class)\n                    != null) {\n                return;\n            }\n            final PsiType type = typeElement.getType();\n            if(!(type instanceof PsiClassType)) {\n                return;\n            }\n            final PsiClassType classType = (PsiClassType) type;\n            if (classType.hasParameters()) {\n                return;\n            }\n            final PsiClass aClass = classType.resolve();\n            if (aClass == null) {\n                return;\n            }\n            if (!aClass.hasTypeParameters()) {\n                return;\n            }\n            final PsiElement typeNameElement =\n                    typeElement.getInnermostComponentReferenceElement();\n            if (typeNameElement == null) {\n                return;\n            }\n            registerError(typeNameElement);\n        }","commit_id":"b1d67ab37d7746990fdbc04db314abf3d90986dd","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void visitNewExpression(\n                @NotNull PsiNewExpression newExpression) {\n            if (!hasNeededLanguageLevel(newExpression)) {\n                return;\n            }\n            super.visitNewExpression(newExpression);\n            if (ignoreObjectConstruction) {\n                return;\n            }\n            if (newExpression.getArrayInitializer() != null ||\n                newExpression.getArrayDimensions().length > 0) {\n                // array creation cannot be generic\n                return;\n            }\n            final PsiJavaCodeReferenceElement classReference =\n                    newExpression.getClassReference();\n            if (classReference == null) {\n                return;\n            }\n            final PsiType[] typeParameters = classReference.getTypeParameters();\n            if (typeParameters.length > 0) {\n                return;\n            }\n            final PsiElement referent = classReference.resolve();\n            if (!(referent instanceof PsiClass)) {\n                return;\n            }\n            final PsiClass referredClass = (PsiClass) referent;\n            if (!referredClass.hasTypeParameters()) {\n                return;\n            }\n            registerError(classReference);\n        }","id":16256,"modified_method":"public void visitNewExpression(\n                @NotNull PsiNewExpression expression) {\n            if (!hasNeededLanguageLevel(expression)) {\n                return;\n            }\n            super.visitNewExpression(expression);\n            if (ignoreObjectConstruction) {\n                return;\n            }\n            if (expression.getArrayInitializer() != null ||\n                expression.getArrayDimensions().length > 0) {\n                // array creation cannot be generic\n                return;\n            }\n            final PsiJavaCodeReferenceElement classReference =\n                    expression.getClassReference();\n            if (classReference == null) {\n                return;\n            }\n            final PsiType[] typeParameters = classReference.getTypeParameters();\n            if (typeParameters.length > 0) {\n                return;\n            }\n            final PsiElement referent = classReference.resolve();\n            if (!(referent instanceof PsiClass)) {\n                return;\n            }\n            final PsiClass referredClass = (PsiClass) referent;\n            if (!referredClass.hasTypeParameters()) {\n                return;\n            }\n            registerError(classReference);\n        }","commit_id":"b1d67ab37d7746990fdbc04db314abf3d90986dd","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public JComponent createOptionsPanel() {\n        //noinspection HardCodedStringLiteral\n        return new SingleCheckboxOptionsPanel(\n                \"<html>\" + InspectionGadgetsBundle.message(\n                        \"reqused.bequest.ignore.empty.super.methods.text\") +\n                        \"<\/html>\", this, \"ignoreEmptySuperMethods\");\n    }","id":16257,"modified_method":"public JComponent createOptionsPanel() {\n        //noinspection HardCodedStringLiteral\n        return new SingleCheckboxOptionsPanel(\n                \"<html>\" + InspectionGadgetsBundle.message(\n                        \"reqused.bequest.ignore.empty.super.methods.option\") +\n                        \"<\/html>\", this, \"ignoreEmptySuperMethods\");\n    }","commit_id":"b1d67ab37d7746990fdbc04db314abf3d90986dd","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@NotNull\n    public String buildErrorString(Object... infos) {\n        return InspectionGadgetsBundle.message(\n                \"array.allocation.zero.length.problem.description\");\n    }","id":16258,"modified_method":"@NotNull\n    public String buildErrorString(Object... infos) {\n        return InspectionGadgetsBundle.message(\n                \"array.allocation.zero.length.problem.descriptor\");\n    }","commit_id":"b1d67ab37d7746990fdbc04db314abf3d90986dd","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Override\n    public void visitMethodCallExpression(\n      @NotNull PsiMethodCallExpression call) {\n      super.visitMethodCallExpression(call);\n      final PsiClass containingClass =\n        ClassUtils.getContainingClass(call);\n      if (containingClass == null) {\n        return;\n      }\n      final PsiMethod method = call.resolveMethod();\n      if (method == null) {\n        return;\n      }\n      if (!containingClass.equals(method.getContainingClass())) {\n        return;\n      }\n      final PsiReferenceExpression methodExpression =\n        call.getMethodExpression();\n      final PsiExpression qualifier =\n        methodExpression.getQualifierExpression();\n      if (qualifier != null &&\n          !(qualifier instanceof PsiThisExpression)) {\n        if (ignoreGetterCallsOnOtherObjects) {\n          return;\n        }\n        final PsiType type = qualifier.getType();\n        if (!(type instanceof PsiClassType)) {\n          return;\n        }\n        final PsiClassType classType = (PsiClassType)type;\n        final PsiClass qualifierClass = classType.resolve();\n        if (!containingClass.equals(qualifierClass)) {\n          return;\n        }\n      }\n      if (!PropertyUtils.isSimpleGetter(method)) {\n        return;\n      }\n      final Query<PsiMethod> query = OverridingMethodsSearch.search(method, true);\n      final PsiMethod overridingMethod = query.findFirst();\n      if (overridingMethod != null) {\n        return;\n      }\n      registerMethodCallError(call);\n    }","id":16259,"modified_method":"@Override\n    public void visitMethodCallExpression(@NotNull PsiMethodCallExpression call) {\n      super.visitMethodCallExpression(call);\n      final PsiClass containingClass = ClassUtils.getContainingClass(call);\n      if (containingClass == null) {\n        return;\n      }\n      final PsiMethod method = call.resolveMethod();\n      if (method == null) {\n        return;\n      }\n      if (!containingClass.equals(method.getContainingClass())) {\n        return;\n      }\n      final PsiReferenceExpression methodExpression = call.getMethodExpression();\n      final PsiExpression qualifier = methodExpression.getQualifierExpression();\n      if (qualifier != null && !(qualifier instanceof PsiThisExpression)) {\n        if (ignoreGetterCallsOnOtherObjects) {\n          return;\n        }\n        final PsiType type = qualifier.getType();\n        if (!(type instanceof PsiClassType)) {\n          return;\n        }\n        final PsiClassType classType = (PsiClassType)type;\n        final PsiClass qualifierClass = classType.resolve();\n        if (!containingClass.equals(qualifierClass)) {\n          return;\n        }\n      }\n      if (!PropertyUtils.isSimpleGetter(method)) {\n        return;\n      }\n      if (onlyReportPrivateGetter && !method.hasModifierProperty(PsiModifier.PRIVATE)) {\n        return;\n      }\n      final Query<PsiMethod> query = OverridingMethodsSearch.search(method, true);\n      final PsiMethod overridingMethod = query.findFirst();\n      if (overridingMethod != null) {\n        return;\n      }\n      registerMethodCallError(call);\n    }","commit_id":"e3c5049e76e608a990ec4439eac7e3b9d8ecdb88","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Override\n  @Nullable\n  public JComponent createOptionsPanel() {\n    return new SingleCheckboxOptionsPanel(InspectionGadgetsBundle.message(\n      \"call.to.simple.getter.in.class.display.name.ignore.option\"),\n                                          this, \"ignoreGetterCallsOnOtherObjects\");\n  }","id":16260,"modified_method":"@Override\n  @Nullable\n  public JComponent createOptionsPanel() {\n    final MultipleCheckboxOptionsPanel optionsPanel = new MultipleCheckboxOptionsPanel(this);\n    optionsPanel.addCheckbox(InspectionGadgetsBundle.message(\"call.to.simple.getter.in.class.ignore.option\"),\n                             \"ignoreGetterCallsOnOtherObjects\");\n    optionsPanel.addCheckbox(InspectionGadgetsBundle.message(\"call.to.private.simple.getter.in.class.option\"),\n                             \"onlyReportPrivateGetter\");\n    return optionsPanel;\n  }","commit_id":"e3c5049e76e608a990ec4439eac7e3b9d8ecdb88","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Nullable\n  public JComponent createOptionsPanel() {\n    return new SingleCheckboxOptionsPanel(InspectionGadgetsBundle.message(\n      \"call.to.simple.setter.in.class.display.name.ignore.option\"),\n                                          this, \"ignoreSetterCallsOnOtherObjects\");\n  }","id":16261,"modified_method":"@Nullable\n  public JComponent createOptionsPanel() {\n    final MultipleCheckboxOptionsPanel optionsPanel = new MultipleCheckboxOptionsPanel(this);\n    optionsPanel.addCheckbox(InspectionGadgetsBundle.message(\"call.to.simple.setter.in.class.ignore.option\"),\n                             \"ignoreSetterCallsOnOtherObjects\");\n    optionsPanel.addCheckbox(InspectionGadgetsBundle.message(\"call.to.private.setter.in.class.option\"),\n                             \"onlyReportPrivateSetter\");\n    return optionsPanel;\n  }","commit_id":"e3c5049e76e608a990ec4439eac7e3b9d8ecdb88","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Override\n    public void visitMethodCallExpression(\n      @NotNull PsiMethodCallExpression call) {\n      super.visitMethodCallExpression(call);\n      final PsiClass containingClass =\n        ClassUtils.getContainingClass(call);\n      if (containingClass == null) {\n        return;\n      }\n      final PsiMethod method = call.resolveMethod();\n      if (method == null) {\n        return;\n      }\n      if (!containingClass.equals(method.getContainingClass())) {\n        return;\n      }\n      final PsiReferenceExpression methodExpression =\n        call.getMethodExpression();\n      final PsiExpression qualifier =\n        methodExpression.getQualifierExpression();\n      if (qualifier != null &&\n          !(qualifier instanceof PsiThisExpression)) {\n        if (ignoreSetterCallsOnOtherObjects) {\n          return;\n        }\n        final PsiType type = qualifier.getType();\n        if (!(type instanceof PsiClassType)) {\n          return;\n        }\n        final PsiClassType classType = (PsiClassType)type;\n        final PsiClass qualifierClass = classType.resolve();\n        if (!containingClass.equals(qualifierClass)) {\n          return;\n        }\n      }\n      if (!PropertyUtils.isSimpleSetter(method)) {\n        return;\n      }\n      final Query<PsiMethod> query = OverridingMethodsSearch.search(method, true);\n      final PsiMethod overridingMethod = query.findFirst();\n      if (overridingMethod != null) {\n        return;\n      }\n      registerMethodCallError(call);\n    }","id":16262,"modified_method":"@Override\n    public void visitMethodCallExpression(@NotNull PsiMethodCallExpression call) {\n      super.visitMethodCallExpression(call);\n      final PsiClass containingClass = ClassUtils.getContainingClass(call);\n      if (containingClass == null) {\n        return;\n      }\n      final PsiMethod method = call.resolveMethod();\n      if (method == null) {\n        return;\n      }\n      if (!containingClass.equals(method.getContainingClass())) {\n        return;\n      }\n      final PsiReferenceExpression methodExpression = call.getMethodExpression();\n      final PsiExpression qualifier = methodExpression.getQualifierExpression();\n      if (qualifier != null && !(qualifier instanceof PsiThisExpression)) {\n        if (ignoreSetterCallsOnOtherObjects) {\n          return;\n        }\n        final PsiType type = qualifier.getType();\n        if (!(type instanceof PsiClassType)) {\n          return;\n        }\n        final PsiClassType classType = (PsiClassType)type;\n        final PsiClass qualifierClass = classType.resolve();\n        if (!containingClass.equals(qualifierClass)) {\n          return;\n        }\n      }\n      if (!PropertyUtils.isSimpleSetter(method)) {\n        return;\n      }\n      if (onlyReportPrivateSetter && !method.hasModifierProperty(PsiModifier.PRIVATE)) {\n        return;\n      }\n      final Query<PsiMethod> query = OverridingMethodsSearch.search(method, true);\n      final PsiMethod overridingMethod = query.findFirst();\n      if (overridingMethod != null) {\n        return;\n      }\n      registerMethodCallError(call);\n    }","commit_id":"e3c5049e76e608a990ec4439eac7e3b9d8ecdb88","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public static void testConcurrentMergeTwoPartitions() throws Exception {\n        JChannel[] channels=null;\n        try {\n            channels=create(\"GMS_MergeTest.testConcurrentMergeTwoPartitions\", \"A\", \"B\", \"C\", \"D\");\n            print(channels);\n            View view=channels[channels.length -1].getView();\n            assert view.size() == channels.length : \"view is \" + view;\n\n            System.out.println(\"\\ncreating partitions: \");\n            String[][] partitions=generate(new String[]{\"A\", \"B\"}, new String[]{\"C\", \"D\"});\n            createPartitions(channels, partitions);\n            print(channels);\n            checkViews(channels, \"A\", \"A\", \"B\");\n            checkViews(channels, \"B\", \"A\", \"B\");\n            checkViews(channels, \"C\", \"C\", \"D\");\n            checkViews(channels, \"D\", \"C\", \"D\");\n\n            System.out.println(\"\\n==== injecting merge event into A and C concurrently ====\");\n            injectMergeEvent(channels, \"C\", \"A\", \"C\");\n            injectMergeEvent(channels, \"A\", \"A\", \"C\");\n            \n            for(int i=0; i < 20; i++) {\n                System.out.print(\".\");\n                if(allChannelsHaveViewOf(channels, 4))\n                    break;\n                Util.sleep(500);\n            }\n            System.out.println(\"\\n\");\n            print(channels);\n            assertAllChannelsHaveViewOf(channels, 4);\n        }\n        finally {\n            close(channels);\n        }\n    }","id":16263,"modified_method":"public static void testConcurrentMergeTwoPartitions() throws Exception {\n        JChannel[] channels=null;\n        try {\n            channels=create(\"GMS_MergeTest.testConcurrentMergeTwoPartitions\", \"A\", \"B\", \"C\", \"D\");\n            print(channels);\n            View view=channels[channels.length -1].getView();\n            assert view.size() == channels.length : \"view is \" + view;\n\n            System.out.println(\"\\ncreating partitions: \");\n            String[][] partitions=generate(new String[]{\"A\", \"B\"}, new String[]{\"C\", \"D\"});\n            createPartitions(channels, partitions);\n            print(channels);\n            checkViews(channels, \"A\", \"A\", \"B\");\n            checkViews(channels, \"B\", \"A\", \"B\");\n            checkViews(channels, \"C\", \"C\", \"D\");\n            checkViews(channels, \"D\", \"C\", \"D\");\n\n            long end_time=System.currentTimeMillis() + 30000;\n            do {\n                System.out.println(\"\\n==== injecting merge events into A and C concurrently ====\");\n                injectMergeEvent(channels, \"C\", \"A\", \"C\");\n                injectMergeEvent(channels, \"A\", \"A\", \"C\");\n                Util.sleep(1000);\n                if(allChannelsHaveViewOf(channels, 4))\n                    break;\n            }\n            while(end_time > System.currentTimeMillis());\n\n            System.out.println(\"\\n\");\n            print(channels);\n            assertAllChannelsHaveViewOf(channels, 4);\n        }\n        finally {\n            close(channels);\n        }\n    }","commit_id":"30defc87a6fa46bdbf857a802228d5d193ad9cee","url":"https://github.com/belaban/JGroups"},{"original_method":"public static void testSimpleMerge() throws Exception {\n        JChannel[] channels=null;\n        try {\n            channels=create(\"GMS_MergeTest.testSimpleMerge()\", \"A\", \"B\", \"C\", \"D\");\n            print(channels);\n            View view=channels[channels.length -1].getView();\n            assert view.size() == channels.length : \"view is \" + view;\n\n            System.out.println(\"\\ncreating partitions: \");\n            String[][] partitions=generate(new String[]{\"A\", \"B\"}, new String[]{\"C\", \"D\"});\n            createPartitions(channels, partitions);\n            print(channels);\n            checkViews(channels, \"A\", \"A\", \"B\");\n            checkViews(channels, \"B\", \"A\", \"B\");\n            checkViews(channels, \"C\", \"C\", \"D\");\n            checkViews(channels, \"D\", \"C\", \"D\");\n\n\n            Address leader=determineLeader(channels, \"A\", \"C\");\n            System.out.println(\"\\n==== injecting merge event into \" + leader + \" ====\");\n            injectMergeEvent(channels, leader, \"A\", \"C\");\n\n            for(int i=0; i < 20; i++) {\n                System.out.print(\".\");\n                if(allChannelsHaveViewOf(channels, 4))\n                    break;\n                Util.sleep(500);\n            }\n            System.out.println(\"\\n\");\n            print(channels);\n            assertAllChannelsHaveViewOf(channels, 4);\n        }\n        finally {\n            close(channels);\n        }\n    }","id":16264,"modified_method":"public static void testSimpleMerge() throws Exception {\n        JChannel[] channels=null;\n        try {\n            channels=create(\"GMS_MergeTest.testSimpleMerge()\", \"A\", \"B\", \"C\", \"D\");\n            print(channels);\n            View view=channels[channels.length -1].getView();\n            assert view.size() == channels.length : \"view is \" + view;\n\n            System.out.println(\"\\ncreating partitions: \");\n            String[][] partitions=generate(new String[]{\"A\", \"B\"}, new String[]{\"C\", \"D\"});\n            createPartitions(channels, partitions);\n            print(channels);\n            checkViews(channels, \"A\", \"A\", \"B\");\n            checkViews(channels, \"B\", \"A\", \"B\");\n            checkViews(channels, \"C\", \"C\", \"D\");\n            checkViews(channels, \"D\", \"C\", \"D\");\n\n            Address leader=determineLeader(channels, \"A\", \"C\");\n            long end_time=System.currentTimeMillis() + 30000;\n            do {\n                System.out.println(\"\\n==== injecting merge events into \" + leader + \" ====\");\n                injectMergeEvent(channels, leader, \"A\", \"C\");\n                Util.sleep(1000);\n                if(allChannelsHaveViewOf(channels, 4))\n                    break;\n            }\n            while(end_time > System.currentTimeMillis());\n            \n            System.out.println(\"\\n\");\n            print(channels);\n            assertAllChannelsHaveViewOf(channels, 4);\n        }\n        finally {\n            close(channels);\n        }\n    }","commit_id":"30defc87a6fa46bdbf857a802228d5d193ad9cee","url":"https://github.com/belaban/JGroups"},{"original_method":"public static void testConcurrentMergeMultiplePartitions() throws Exception {\n        JChannel[] channels=null;\n        try {\n            channels=create(\"GMS_MergeTest.testConcurrentMergeMultiplePartitions\", \"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\", \"H\");\n            print(channels);\n            View view=channels[channels.length -1].getView();\n            assert view.size() == channels.length : \"view is \" + view;\n            assertAllChannelsHaveViewOf(channels, 8);\n\n            System.out.println(\"\\ncreating partitions: \");\n            String[][] partitions=generate(new String[]{\"A\", \"B\"},\n                                           new String[]{\"C\", \"D\"},\n                                           new String[]{\"E\", \"F\"},\n                                           new String[]{\"G\", \"H\"});\n            createPartitions(channels, partitions);\n            print(channels);\n            checkViews(channels, \"A\", \"A\", \"B\");\n            checkViews(channels, \"B\", \"A\", \"B\");\n            checkViews(channels, \"C\", \"C\", \"D\");\n            checkViews(channels, \"D\", \"C\", \"D\");\n            checkViews(channels, \"E\", \"E\", \"F\");\n            checkViews(channels, \"F\", \"E\", \"F\");\n            checkViews(channels, \"G\", \"G\", \"H\");\n            checkViews(channels, \"H\", \"G\", \"H\");\n\n\n            System.out.println(\"\\n==== injecting merge event into A, C, E and G concurrently ====\");\n            injectMergeEvent(channels, \"G\", \"A\", \"C\", \"E\", \"G\");\n            injectMergeEvent(channels, \"E\", \"A\", \"C\", \"E\", \"G\");\n            injectMergeEvent(channels, \"A\", \"A\", \"C\", \"E\", \"G\");\n            injectMergeEvent(channels, \"C\", \"A\", \"C\", \"E\", \"G\");\n\n            for(int i=0; i < 20; i++) {\n                System.out.print(\".\");\n                if(allChannelsHaveViewOf(channels, 8))\n                    break;\n                Util.sleep(1000);\n            }\n            System.out.println(\"\\n\");\n            print(channels);\n            assertAllChannelsHaveViewOf(channels, 8);\n        }\n        finally {\n            close(channels);\n        }\n    }","id":16265,"modified_method":"public static void testConcurrentMergeMultiplePartitions() throws Exception {\n        JChannel[] channels=null;\n        try {\n            channels=create(\"GMS_MergeTest.testConcurrentMergeMultiplePartitions\", \"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\", \"H\");\n            print(channels);\n            View view=channels[channels.length -1].getView();\n            assert view.size() == channels.length : \"view is \" + view;\n            assertAllChannelsHaveViewOf(channels, 8);\n\n            System.out.println(\"\\ncreating partitions: \");\n            String[][] partitions=generate(new String[]{\"A\", \"B\"},\n                                           new String[]{\"C\", \"D\"},\n                                           new String[]{\"E\", \"F\"},\n                                           new String[]{\"G\", \"H\"});\n            createPartitions(channels, partitions);\n            print(channels);\n            checkViews(channels, \"A\", \"A\", \"B\");\n            checkViews(channels, \"B\", \"A\", \"B\");\n            checkViews(channels, \"C\", \"C\", \"D\");\n            checkViews(channels, \"D\", \"C\", \"D\");\n            checkViews(channels, \"E\", \"E\", \"F\");\n            checkViews(channels, \"F\", \"E\", \"F\");\n            checkViews(channels, \"G\", \"G\", \"H\");\n            checkViews(channels, \"H\", \"G\", \"H\");\n\n            long end_time=System.currentTimeMillis() + 30000;\n            do {\n                System.out.println(\"\\n==== injecting merge event into A, C, E and G concurrently ====\");\n                injectMergeEvent(channels, \"G\", \"A\", \"C\", \"E\", \"G\");\n                injectMergeEvent(channels, \"E\", \"A\", \"C\", \"E\", \"G\");\n                injectMergeEvent(channels, \"A\", \"A\", \"C\", \"E\", \"G\");\n                injectMergeEvent(channels, \"C\", \"A\", \"C\", \"E\", \"G\");\n                Util.sleep(1000);\n                if(allChannelsHaveViewOf(channels, 8))\n                    break;\n            }\n            while(end_time > System.currentTimeMillis());\n\n            print(channels);\n            assertAllChannelsHaveViewOf(channels, 8);\n        }\n        finally {\n            close(channels);\n        }\n    }","commit_id":"30defc87a6fa46bdbf857a802228d5d193ad9cee","url":"https://github.com/belaban/JGroups"},{"original_method":"public static void testConcurrentMergeTwoPartitions() throws Exception {\n        JChannel[] channels=null;\n        try {\n            channels=create(\"GMS_MergeTest.testConcurrentMergeTwoPartitions\", \"A\", \"B\", \"C\", \"D\");\n            print(channels);\n            View view=channels[channels.length -1].getView();\n            assert view.size() == channels.length : \"view is \" + view;\n\n            System.out.println(\"\\ncreating partitions: \");\n            String[][] partitions=generate(new String[]{\"A\", \"B\"}, new String[]{\"C\", \"D\"});\n            createPartitions(channels, partitions);\n            print(channels);\n            checkViews(channels, \"A\", \"A\", \"B\");\n            checkViews(channels, \"B\", \"A\", \"B\");\n            checkViews(channels, \"C\", \"C\", \"D\");\n            checkViews(channels, \"D\", \"C\", \"D\");\n\n            System.out.println(\"\\n==== injecting merge event into A and C concurrently ====\");\n            injectMergeEvent(channels, \"C\", \"A\", \"C\");\n            injectMergeEvent(channels, \"A\", \"A\", \"C\");\n            \n            for(int i=0; i < 20; i++) {\n                System.out.print(\".\");\n                if(allChannelsHaveViewOf(channels, 4))\n                    break;\n                Util.sleep(500);\n            }\n            System.out.println(\"\\n\");\n            print(channels);\n            assertAllChannelsHaveViewOf(channels, 4);\n        }\n        finally {\n            close(channels);\n        }\n    }","id":16266,"modified_method":"public static void testConcurrentMergeTwoPartitions() throws Exception {\n        JChannel[] channels=null;\n        try {\n            channels=create(\"GMS_MergeTest.testConcurrentMergeTwoPartitions\", \"A\", \"B\", \"C\", \"D\");\n            print(channels);\n            View view=channels[channels.length -1].getView();\n            assert view.size() == channels.length : \"view is \" + view;\n\n            System.out.println(\"\\ncreating partitions: \");\n            String[][] partitions=generate(new String[]{\"A\", \"B\"}, new String[]{\"C\", \"D\"});\n            createPartitions(channels, partitions);\n            print(channels);\n            checkViews(channels, \"A\", \"A\", \"B\");\n            checkViews(channels, \"B\", \"A\", \"B\");\n            checkViews(channels, \"C\", \"C\", \"D\");\n            checkViews(channels, \"D\", \"C\", \"D\");\n\n            long end_time=System.currentTimeMillis() + 30000;\n            do {\n                System.out.println(\"\\n==== injecting merge events into A and C concurrently ====\");\n                injectMergeEvent(channels, \"C\", \"A\", \"C\");\n                injectMergeEvent(channels, \"A\", \"A\", \"C\");\n                Util.sleep(1000);\n                if(allChannelsHaveViewOf(channels, 4))\n                    break;\n            }\n            while(end_time > System.currentTimeMillis());\n\n            System.out.println(\"\\n\");\n            print(channels);\n            assertAllChannelsHaveViewOf(channels, 4);\n        }\n        finally {\n            close(channels);\n        }\n    }","commit_id":"c591291035a6cdde1ba282cd9e780bcf4dc03a4c","url":"https://github.com/belaban/JGroups"},{"original_method":"public static void testConcurrentMergeMultiplePartitions() throws Exception {\n        JChannel[] channels=null;\n        try {\n            channels=create(\"GMS_MergeTest.testConcurrentMergeMultiplePartitions\", \"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\", \"H\");\n            print(channels);\n            View view=channels[channels.length -1].getView();\n            assert view.size() == channels.length : \"view is \" + view;\n            assertAllChannelsHaveViewOf(channels, 8);\n\n            System.out.println(\"\\ncreating partitions: \");\n            String[][] partitions=generate(new String[]{\"A\", \"B\"},\n                                           new String[]{\"C\", \"D\"},\n                                           new String[]{\"E\", \"F\"},\n                                           new String[]{\"G\", \"H\"});\n            createPartitions(channels, partitions);\n            print(channels);\n            checkViews(channels, \"A\", \"A\", \"B\");\n            checkViews(channels, \"B\", \"A\", \"B\");\n            checkViews(channels, \"C\", \"C\", \"D\");\n            checkViews(channels, \"D\", \"C\", \"D\");\n            checkViews(channels, \"E\", \"E\", \"F\");\n            checkViews(channels, \"F\", \"E\", \"F\");\n            checkViews(channels, \"G\", \"G\", \"H\");\n            checkViews(channels, \"H\", \"G\", \"H\");\n\n\n            System.out.println(\"\\n==== injecting merge event into A, C, E and G concurrently ====\");\n            injectMergeEvent(channels, \"G\", \"A\", \"C\", \"E\", \"G\");\n            injectMergeEvent(channels, \"E\", \"A\", \"C\", \"E\", \"G\");\n            injectMergeEvent(channels, \"A\", \"A\", \"C\", \"E\", \"G\");\n            injectMergeEvent(channels, \"C\", \"A\", \"C\", \"E\", \"G\");\n\n            for(int i=0; i < 20; i++) {\n                System.out.print(\".\");\n                if(allChannelsHaveViewOf(channels, 8))\n                    break;\n                Util.sleep(1000);\n            }\n            System.out.println(\"\\n\");\n            print(channels);\n            assertAllChannelsHaveViewOf(channels, 8);\n        }\n        finally {\n            close(channels);\n        }\n    }","id":16267,"modified_method":"public static void testConcurrentMergeMultiplePartitions() throws Exception {\n        JChannel[] channels=null;\n        try {\n            channels=create(\"GMS_MergeTest.testConcurrentMergeMultiplePartitions\", \"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\", \"H\");\n            print(channels);\n            View view=channels[channels.length -1].getView();\n            assert view.size() == channels.length : \"view is \" + view;\n            assertAllChannelsHaveViewOf(channels, 8);\n\n            System.out.println(\"\\ncreating partitions: \");\n            String[][] partitions=generate(new String[]{\"A\", \"B\"},\n                                           new String[]{\"C\", \"D\"},\n                                           new String[]{\"E\", \"F\"},\n                                           new String[]{\"G\", \"H\"});\n            createPartitions(channels, partitions);\n            print(channels);\n            checkViews(channels, \"A\", \"A\", \"B\");\n            checkViews(channels, \"B\", \"A\", \"B\");\n            checkViews(channels, \"C\", \"C\", \"D\");\n            checkViews(channels, \"D\", \"C\", \"D\");\n            checkViews(channels, \"E\", \"E\", \"F\");\n            checkViews(channels, \"F\", \"E\", \"F\");\n            checkViews(channels, \"G\", \"G\", \"H\");\n            checkViews(channels, \"H\", \"G\", \"H\");\n\n            long end_time=System.currentTimeMillis() + 30000;\n            do {\n                System.out.println(\"\\n==== injecting merge event into A, C, E and G concurrently ====\");\n                injectMergeEvent(channels, \"G\", \"A\", \"C\", \"E\", \"G\");\n                injectMergeEvent(channels, \"E\", \"A\", \"C\", \"E\", \"G\");\n                injectMergeEvent(channels, \"A\", \"A\", \"C\", \"E\", \"G\");\n                injectMergeEvent(channels, \"C\", \"A\", \"C\", \"E\", \"G\");\n                Util.sleep(1000);\n                if(allChannelsHaveViewOf(channels, 8))\n                    break;\n            }\n            while(end_time > System.currentTimeMillis());\n\n            print(channels);\n            assertAllChannelsHaveViewOf(channels, 8);\n        }\n        finally {\n            close(channels);\n        }\n    }","commit_id":"c591291035a6cdde1ba282cd9e780bcf4dc03a4c","url":"https://github.com/belaban/JGroups"},{"original_method":"public static void testSimpleMerge() throws Exception {\n        JChannel[] channels=null;\n        try {\n            channels=create(\"GMS_MergeTest.testSimpleMerge()\", \"A\", \"B\", \"C\", \"D\");\n            print(channels);\n            View view=channels[channels.length -1].getView();\n            assert view.size() == channels.length : \"view is \" + view;\n\n            System.out.println(\"\\ncreating partitions: \");\n            String[][] partitions=generate(new String[]{\"A\", \"B\"}, new String[]{\"C\", \"D\"});\n            createPartitions(channels, partitions);\n            print(channels);\n            checkViews(channels, \"A\", \"A\", \"B\");\n            checkViews(channels, \"B\", \"A\", \"B\");\n            checkViews(channels, \"C\", \"C\", \"D\");\n            checkViews(channels, \"D\", \"C\", \"D\");\n\n\n            Address leader=determineLeader(channels, \"A\", \"C\");\n            System.out.println(\"\\n==== injecting merge event into \" + leader + \" ====\");\n            injectMergeEvent(channels, leader, \"A\", \"C\");\n\n            for(int i=0; i < 20; i++) {\n                System.out.print(\".\");\n                if(allChannelsHaveViewOf(channels, 4))\n                    break;\n                Util.sleep(500);\n            }\n            System.out.println(\"\\n\");\n            print(channels);\n            assertAllChannelsHaveViewOf(channels, 4);\n        }\n        finally {\n            close(channels);\n        }\n    }","id":16268,"modified_method":"public static void testSimpleMerge() throws Exception {\n        JChannel[] channels=null;\n        try {\n            channels=create(\"GMS_MergeTest.testSimpleMerge()\", \"A\", \"B\", \"C\", \"D\");\n            print(channels);\n            View view=channels[channels.length -1].getView();\n            assert view.size() == channels.length : \"view is \" + view;\n\n            System.out.println(\"\\ncreating partitions: \");\n            String[][] partitions=generate(new String[]{\"A\", \"B\"}, new String[]{\"C\", \"D\"});\n            createPartitions(channels, partitions);\n            print(channels);\n            checkViews(channels, \"A\", \"A\", \"B\");\n            checkViews(channels, \"B\", \"A\", \"B\");\n            checkViews(channels, \"C\", \"C\", \"D\");\n            checkViews(channels, \"D\", \"C\", \"D\");\n\n            Address leader=determineLeader(channels, \"A\", \"C\");\n            long end_time=System.currentTimeMillis() + 30000;\n            do {\n                System.out.println(\"\\n==== injecting merge events into \" + leader + \" ====\");\n                injectMergeEvent(channels, leader, \"A\", \"C\");\n                Util.sleep(1000);\n                if(allChannelsHaveViewOf(channels, 4))\n                    break;\n            }\n            while(end_time > System.currentTimeMillis());\n            \n            System.out.println(\"\\n\");\n            print(channels);\n            assertAllChannelsHaveViewOf(channels, 4);\n        }\n        finally {\n            close(channels);\n        }\n    }","commit_id":"c591291035a6cdde1ba282cd9e780bcf4dc03a4c","url":"https://github.com/belaban/JGroups"},{"original_method":"/**\n     * Adds an action to upgrade installed packages on the system.\n     *\n     * @param sk Session key (token)\n     * @param serverId System ID\n     * @param packages List of packages\n     * @param chainName Name of the action chain\n     * @return True or false in XML-RPC representation (1 or 0 respectively)\n     *\n     * @xmlrpc.doc Adds an action to upgrade installed packages on the system.\n     * @xmlrpc.param #param_desc(\"string\", \"sessionKey\", \"Session token, issued at login\")\n     * @xmlrpc.param #param_desc(\"int\", \"serverId\", \"System ID\")\n     * @xmlrpc.param #array_single(\"int\", \"packageId\")\n     * @xmlrpc.param #param_desc(\"string\", \"chainName\", \"Label of the chain\")\n     * @xmlrpc.returntype #int\n     */\n    public int addPackageUpgrade(String sk,\n                                 Integer serverId,\n                                 List<Integer> packages,\n                                 String chainName) {\n        Collector c = new Collector(sk, serverId, chainName);\n        if (!c.isValid()) {\n            return BaseHandler.INVALID;\n        }\n\n        List<Map<String, Long>> selectedPackages = this.acUtil.selectPackages(\n                PackageManager.upgradable(c.getServer().getId(), null), packages);\n        if (!selectedPackages.isEmpty()) {\n            return this.bool(ActionChainManager.schedulePackageUpgrade(\n                c.getUser(), c.getServer(), selectedPackages,\n                new Date(), c.getChain()) != null);\n        }\n\n        return BaseHandler.INVALID;\n    }","id":16269,"modified_method":"/**\n     * Adds an action to upgrade installed packages on the system.\n     *\n     * @param sk Session key (token)\n     * @param serverId System ID\n     * @param packages List of packages\n     * @param chainName Name of the action chain\n     * @return True or false in XML-RPC representation (1 or 0 respectively)\n     *\n     * @xmlrpc.doc Adds an action to upgrade installed packages on the system.\n     * @xmlrpc.param #param_desc(\"string\", \"sessionKey\", \"Session token, issued at login\")\n     * @xmlrpc.param #param_desc(\"int\", \"serverId\", \"System ID\")\n     * @xmlrpc.param #array_single(\"int\", \"packageId\")\n     * @xmlrpc.param #param_desc(\"string\", \"chainName\", \"Label of the chain\")\n     * @xmlrpc.returntype #int\n     */\n    public int addPackageUpgrade(String sk,\n                                 Integer serverId,\n                                 List<Integer> packages,\n                                 String chainName) {\n        Collector c = new Collector(sk, serverId, chainName);\n        if (c.isValid()) {\n            List<Map<String, Long>> selectedPackages = this.acUtil.selectPackages(\n                    PackageManager.upgradable(c.getServer().getId(), null), packages);\n            if (!selectedPackages.isEmpty()) {\n                return c.cleanup(this.bool(ActionChainManager.schedulePackageUpgrade(\n                        c.getUser(), c.getServer(), selectedPackages,\n                                                    new Date(), c.getChain()) != null));\n            }\n        }\n\n        return c.cleanup(BaseHandler.INVALID);\n    }","commit_id":"25ff8f4a5d6fb2f0c01b391b9636fb8657cb9c55","url":"https://github.com/spacewalkproject/spacewalk"},{"original_method":"/**\n     * Add a remote command as a script.\n     *\n     * @param sk Session key (token)\n     * @param serverId System ID\n     * @param chainName Name of the action chain.\n     * @param uid User ID on the remote system.\n     * @param scriptBody Base64 encoded script.\n     * @param gid Group ID on the remote system.\n     * @param timeout Timeout\n     * @return True or false in XML-RPC representation (1 or 0 respectively)\n     *\n     * @xmlrpc.doc Add a remote command as a script.\n     *             NOTE: The script body must be Base64 encoded!\n     *\n     * @xmlrpc.param #param_desc(\"string\", \"sessionKey\", \"Session token, issued at login\")\n     * @xmlrpc.param #param_desc(\"int\", \"serverId\", \"System ID\")\n     * @xmlrpc.param #param_desc(\"string\", \"chainName\", \"Label of the chain\")\n     * @xmlrpc.param #param_desc(\"string\", \"uid\", \"User ID on the particular system\")\n     * @xmlrpc.param #param_desc(\"string\", \"gid\", \"Group ID on the particular system\")\n     * @xmlrpc.param #param_desc(\"int\", \"timeout\", \"Timeout cannot exceed 1200 seconds\")\n     * @xmlrpc.param #param_desc(\"string\", \"scriptBodyBase64\", \"Base64 encoded script body\")\n     * @xmlrpc.returntype #int\n     */\n    public int addRemoteCommand(String sk,\n                                Integer serverId,\n                                String chainName,\n                                String uid,\n                                String gid,\n                                Integer timeout,\n                                String scriptBody) {\n        Collector c = new Collector(sk, serverId, chainName);\n\n        List<Long> systems = new ArrayList<Long>();\n        systems.add((long) serverId);\n\n        if (timeout > 1200) {\n            timeout = 1200;\n        }\n\n        if (timeout < 1) {\n            timeout = 120;\n        }\n\n        ScriptActionDetails script = ActionManager.createScript(uid, gid, (long) timeout,\n            new String(DatatypeConverter.parseBase64Binary(scriptBody)));\n\n        Date date = new Date();\n\n        return this.bool(ActionChainManager.scheduleScriptRuns(\n            c.getUser(), systems,\n            String.format(\"Remote Script at %s\",\n                          SimpleDateFormat.getDateInstance(\n                              SimpleDateFormat.MEDIUM).format(date)),\n            script, date, c.getChain()) != null);\n    }","id":16270,"modified_method":"/**\n     * Add a remote command as a script.\n     *\n     * @param sk Session key (token)\n     * @param serverId System ID\n     * @param chainName Name of the action chain.\n     * @param uid User ID on the remote system.\n     * @param scriptBody Base64 encoded script.\n     * @param gid Group ID on the remote system.\n     * @param timeout Timeout\n     * @return True or false in XML-RPC representation (1 or 0 respectively)\n     *\n     * @xmlrpc.doc Add a remote command as a script.\n     *             NOTE: The script body must be Base64 encoded!\n     *\n     * @xmlrpc.param #param_desc(\"string\", \"sessionKey\", \"Session token, issued at login\")\n     * @xmlrpc.param #param_desc(\"int\", \"serverId\", \"System ID\")\n     * @xmlrpc.param #param_desc(\"string\", \"chainName\", \"Label of the chain\")\n     * @xmlrpc.param #param_desc(\"string\", \"uid\", \"User ID on the particular system\")\n     * @xmlrpc.param #param_desc(\"string\", \"gid\", \"Group ID on the particular system\")\n     * @xmlrpc.param #param_desc(\"int\", \"timeout\", \"Timeout cannot exceed 1200 seconds\")\n     * @xmlrpc.param #param_desc(\"string\", \"scriptBodyBase64\", \"Base64 encoded script body\")\n     * @xmlrpc.returntype #int\n     */\n    public int addRemoteCommand(String sk,\n                                Integer serverId,\n                                String chainName,\n                                String uid,\n                                String gid,\n                                Integer timeout,\n                                String scriptBody) {\n        if (StringUtil.nullOrValue(scriptBody) == null) {\n            return BaseHandler.INVALID;\n        }\n\n        Collector c = new Collector(sk, serverId, chainName);\n\n        List<Long> systems = new ArrayList<Long>();\n        systems.add((long) serverId);\n\n        if (timeout > 1200) {\n            timeout = 1200;\n        }\n\n        if (timeout < 1) {\n            timeout = 120;\n        }\n\n        ScriptActionDetails script = ActionManager.createScript(uid, gid, (long) timeout,\n            new String(DatatypeConverter.parseBase64Binary(scriptBody)));\n\n        Date date = new Date();\n\n        return c.cleanup(this.bool(ActionChainManager.scheduleScriptRuns(\n                             c.getUser(), systems,\n                             String.format(\"Remote Script at %s\",\n                                           SimpleDateFormat.getDateInstance(\n                                                   SimpleDateFormat.MEDIUM).format(date)),\n                             script, date, c.getChain()) != null));\n    }","commit_id":"25ff8f4a5d6fb2f0c01b391b9636fb8657cb9c55","url":"https://github.com/spacewalkproject/spacewalk"},{"original_method":"/**\n     * Adds an action to upgrade installed packages on the system.\n     *\n     * @param sk Session key (token)\n     * @param serverName Name of the server (without the domain name)\n     * @param serverIp IP address.\n     * @param packages List of packages\n     * @param chainName Name of the action chain\n     * @return True or false in XML-RPC representation (1 or 0 respectively)\n     *\n     * @xmlrpc.doc Adds an action to upgrade installed packages on the system.\n     * @xmlrpc.param #param_desc(\"string\", \"sessionKey\", \"Session token, issued at login\")\n     * @xmlrpc.param #param_desc(\"string\", \"serverName\", \"Hostname without domain name\")\n     * @xmlrpc.param #param_desc(\"string\", \"serverIp\", \"IP address of the machine\")\n     * @xmlrpc.param\n     *    #array()\n     *       #struct(\"packages\")\n     *          #prop_desc(\"string\", \"name\", \"Package name\")\n     *          #prop_desc(\"string\", \"version\", \"Package version\")\n     *       #struct_end()\n     *    #array_end()\n     * @xmlrpc.param #param_desc(\"string\", \"chainName\", \"Label of the chain\")\n     * @xmlrpc.returntype #int\n     */\n    public int addPackageUpgrade(String sk,\n                                 String serverName,\n                                 String serverIp,\n                                 List<Map<String, String>> packages,\n                                 String chainName) {\n        Collector c = new Collector(sk, serverName, serverIp, chainName);\n        if (c.getServer() == null) {\n            return BaseHandler.INVALID;\n        }\n\n        List<Map<String, Long>> selectedPackages = this.acUtil.selectPackages(\n                PackageManager.upgradable(c.getServer().getId(), null), packages, c);\n        if (!selectedPackages.isEmpty()) {\n            return this.bool(ActionChainManager.schedulePackageUpgrade(\n                c.getUser(), c.getServer(), selectedPackages,\n                new Date(), c.getChain()) != null);\n        }\n\n        return BaseHandler.INVALID;\n    }","id":16271,"modified_method":"/**\n     * Adds an action to upgrade installed packages on the system.\n     *\n     * @param sk Session key (token)\n     * @param serverName Name of the server (without the domain name)\n     * @param serverIp IP address.\n     * @param packages List of packages\n     * @param chainName Name of the action chain\n     * @return True or false in XML-RPC representation (1 or 0 respectively)\n     *\n     * @xmlrpc.doc Adds an action to upgrade installed packages on the system.\n     * @xmlrpc.param #param_desc(\"string\", \"sessionKey\", \"Session token, issued at login\")\n     * @xmlrpc.param #param_desc(\"string\", \"serverName\", \"Hostname without domain name\")\n     * @xmlrpc.param #param_desc(\"string\", \"serverIp\", \"IP address of the machine\")\n     * @xmlrpc.param\n     *    #array()\n     *       #struct(\"packages\")\n     *          #prop_desc(\"string\", \"name\", \"Package name\")\n     *          #prop_desc(\"string\", \"version\", \"Package version\")\n     *       #struct_end()\n     *    #array_end()\n     * @xmlrpc.param #param_desc(\"string\", \"chainName\", \"Label of the chain\")\n     * @xmlrpc.returntype #int\n     */\n    public int addPackageUpgrade(String sk,\n                                 String serverName,\n                                 String serverIp,\n                                 List<Map<String, String>> packages,\n                                 String chainName) {\n        Collector c = new Collector(sk, serverName, serverIp, chainName);\n        if (c.getServer() != null) {\n            List<Map<String, Long>> selectedPackages = this.acUtil.selectPackages(\n                    PackageManager.upgradable(c.getServer().getId(), null), packages, c);\n            if (!selectedPackages.isEmpty()) {\n                return c.cleanup(this.bool(ActionChainManager.schedulePackageUpgrade(\n                        c.getUser(), c.getServer(), selectedPackages,\n                                                    new Date(), c.getChain()) != null));\n            }\n        }\n\n        return c.cleanup(BaseHandler.INVALID);\n    }","commit_id":"25ff8f4a5d6fb2f0c01b391b9636fb8657cb9c55","url":"https://github.com/spacewalkproject/spacewalk"},{"original_method":"/**\n     * Adds an action to verify installed packages on the system.\n     *\n     * @param sk Session key (token)\n     * @param serverId System ID\n     * @param packages List of packages\n     * @param chainName Name of the action chain\n     * @return True or false in XML-RPC representation (1 or 0 respectively)\n     *\n     * @xmlrpc.doc Adds an action to verify installed packages on the system.\n     * @xmlrpc.param #param_desc(\"string\", \"sessionKey\", \"Session token, issued at login\")\n     * @xmlrpc.param #param_desc(\"int\", \"serverId\", \"System ID\")\n     * @xmlrpc.param #array_single(\"int\", \"packageId\")\n     * @xmlrpc.param #param_desc(\"string\", \"chainName\", \"Label of the chain\")\n     * @xmlrpc.returntype #int\n     */\n    public int addPackageVerify(String sk,\n                                Integer serverId,\n                                List<Integer> packages,\n                                String chainName) {\n        Collector c = new Collector(sk, serverId, chainName);\n        if (!c.isValid()) {\n            return BaseHandler.INVALID;\n        }\n        List<Map<String, Long>> selectedPackages = this.acUtil.selectPackages(\n                PackageManager.systemPackageList(c.getServer().getId(), null), packages);\n        if (!selectedPackages.isEmpty()) {\n            return this.bool(ActionChainManager.schedulePackageVerify(\n                c.getUser(), c.getServer(), selectedPackages,\n                new Date(), c.getChain()) != null);\n        }\n\n        return BaseHandler.INVALID;\n    }","id":16272,"modified_method":"/**\n     * Adds an action to verify installed packages on the system.\n     *\n     * @param sk Session key (token)\n     * @param serverId System ID\n     * @param packages List of packages\n     * @param chainName Name of the action chain\n     * @return True or false in XML-RPC representation (1 or 0 respectively)\n     *\n     * @xmlrpc.doc Adds an action to verify installed packages on the system.\n     * @xmlrpc.param #param_desc(\"string\", \"sessionKey\", \"Session token, issued at login\")\n     * @xmlrpc.param #param_desc(\"int\", \"serverId\", \"System ID\")\n     * @xmlrpc.param #array_single(\"int\", \"packageId\")\n     * @xmlrpc.param #param_desc(\"string\", \"chainName\", \"Label of the chain\")\n     * @xmlrpc.returntype #int\n     */\n    public int addPackageVerify(String sk,\n                                Integer serverId,\n                                List<Integer> packages,\n                                String chainName) {\n        Collector c = new Collector(sk, serverId, chainName);\n        if (c.isValid()) {\n            List<Map<String, Long>> selectedPackages = this.acUtil.selectPackages(\n                PackageManager.systemPackageList(c.getServer().getId(), null), packages);\n            if (!selectedPackages.isEmpty()) {\n                return c.cleanup(this.bool(ActionChainManager.schedulePackageVerify(\n                        c.getUser(), c.getServer(), selectedPackages,\n                                                    new Date(), c.getChain()) != null));\n            }\n        }\n\n        return c.cleanup(BaseHandler.INVALID);\n    }","commit_id":"25ff8f4a5d6fb2f0c01b391b9636fb8657cb9c55","url":"https://github.com/spacewalkproject/spacewalk"},{"original_method":"/**\n     * Schedule system reboot.\n     *\n     * @param sk Session key (token)\n     * @param serverId Server ID.\n     * @param chainName Name of the action chain\n     * @return list of action ids, exception thrown otherwise\n     *\n     * @xmlrpc.doc Schedule system reboot.\n     * @xmlrpc.param #param_desc(\"string\", \"sessionKey\", \"Session token, issued at login\")\n     * @xmlrpc.param #param(\"int\", \"serverId\")\n     * @xmlrpc.param #param_desc(\"string\", \"chainName\", \"Label of the chain\")\n     * @xmlrpc.returntype #int\n     */\n    public int addSystemReboot(String sk, Integer serverId, String chainName) {\n        Collector c = new Collector(sk, serverId, chainName);\n        if (!c.isValid()) {\n            return BaseHandler.INVALID;\n        }\n\n        return this.bool(ActionChainManager.scheduleRebootAction(c.getUser(),\n                                                            c.getServer(),\n                                                            new Date(),\n                                                            c.getChain()) != null);\n    }","id":16273,"modified_method":"/**\n     * Schedule system reboot.\n     *\n     * @param sk Session key (token)\n     * @param serverId Server ID.\n     * @param chainName Name of the action chain\n     * @return list of action ids, exception thrown otherwise\n     *\n     * @xmlrpc.doc Schedule system reboot.\n     * @xmlrpc.param #param_desc(\"string\", \"sessionKey\", \"Session token, issued at login\")\n     * @xmlrpc.param #param(\"int\", \"serverId\")\n     * @xmlrpc.param #param_desc(\"string\", \"chainName\", \"Label of the chain\")\n     * @xmlrpc.returntype #int\n     */\n    public int addSystemReboot(String sk, Integer serverId, String chainName) {\n        Collector c = new Collector(sk, serverId, chainName);\n        if (!c.isValid()) {\n            return c.cleanup(BaseHandler.INVALID);\n        }\n\n        return c.cleanup(this.bool(ActionChainManager.scheduleRebootAction(\n                c.getUser(), c.getServer(), new Date(), c.getChain()) != null));\n    }","commit_id":"25ff8f4a5d6fb2f0c01b391b9636fb8657cb9c55","url":"https://github.com/spacewalkproject/spacewalk"},{"original_method":"/**\n     * Schedule package installation to an Action Chain.\n     *\n     * @param sk Session key (token)\n     * @param serverId System ID.\n     * @param packages List of packages.\n     * @param chainName Name (label) of the Action Chain.\n     * @return True or false in XML-RPC representation: 1 or 0 respectively.\n     *\n     * @xmlrpc.doc Schedule package installation to an Action Chain.\n     * @xmlrpc.param #param_desc(\"string\", \"sessionKey\", \"Session token, issued at login\")\n     * @xmlrpc.param #param_desc(\"int\", \"serverId\", \"System ID\")\n     * @xmlrpc.param #array_single(\"int\", \"Package ID\")\n     * @xmlrpc.param #param(\"string\", \"chainName\")\n     * @xmlrpc.returntype #int\n     */\n    public int addPackageInstall(String sk,\n                                 Integer serverId,\n                                 List<Integer> packages,\n                                 String chainName) {\n        Collector c = new Collector(sk, serverId, chainName);\n        if (!c.isValid()) {\n            return BaseHandler.INVALID;\n        }\n\n        List<Map<String, Long>> selectedPackages = this.acUtil.selectPackages(\n            PackageManager.systemAvailablePackages(c.getServer().getId(), null), packages);\n        if (!selectedPackages.isEmpty()) {\n            return this.bool(ActionChainManager.schedulePackageInstall(\n                c.getUser(), c.getServer(), selectedPackages,\n                new Date(), c.getChain()) != null);\n        }\n\n        return BaseHandler.INVALID;\n    }","id":16274,"modified_method":"/**\n     * Schedule package installation to an Action Chain.\n     *\n     * @param sk Session key (token)\n     * @param serverId System ID.\n     * @param packages List of packages.\n     * @param chainName Name (label) of the Action Chain.\n     * @return True or false in XML-RPC representation: 1 or 0 respectively.\n     *\n     * @xmlrpc.doc Schedule package installation to an Action Chain.\n     * @xmlrpc.param #param_desc(\"string\", \"sessionKey\", \"Session token, issued at login\")\n     * @xmlrpc.param #param_desc(\"int\", \"serverId\", \"System ID\")\n     * @xmlrpc.param #array_single(\"int\", \"Package ID\")\n     * @xmlrpc.param #param(\"string\", \"chainName\")\n     * @xmlrpc.returntype #int\n     */\n    public int addPackageInstall(String sk,\n                                 Integer serverId,\n                                 List<Integer> packages,\n                                 String chainName) {\n        Collector c = new Collector(sk, serverId, chainName);\n        if (c.isValid()) {\n            List<Map<String, Long>> selectedPackages = this.acUtil.selectPackages(\n                PackageManager.systemAvailablePackages(\n                        c.getServer().getId(), null), packages);\n            if (!selectedPackages.isEmpty()) {\n                return c.cleanup(this.bool(ActionChainManager.schedulePackageInstall(\n                        c.getUser(), c.getServer(), selectedPackages,\n                                                    new Date(), c.getChain()) != null));\n            }\n        }\n\n        return c.cleanup(BaseHandler.INVALID);\n    }","commit_id":"25ff8f4a5d6fb2f0c01b391b9636fb8657cb9c55","url":"https://github.com/spacewalkproject/spacewalk"},{"original_method":"/**\n     * Schedule an action to install desired packages on the system.\n     *\n     * @param sk Session key (token)\n     * @param serverName Name of the server (without the domain name)\n     * @param serverIp IP address.\n     * @param packages List of packages\n     * @param chainName Name of the action chain\n     * @return list of action ids, exception thrown otherwise\n     *\n     * @xmlrpc.doc Schedule an action to install desired packages on the system.\n     * @xmlrpc.param #param_desc(\"string\", \"sessionKey\", \"Session token, issued at login\")\n     * @xmlrpc.param #param_desc(\"string\", \"serverName\", \"Hostname without domain name\")\n     * @xmlrpc.param #param_desc(\"string\", \"serverIp\", \"IP address of the machine\")\n     * @xmlrpc.param\n     *    #array()\n     *       #struct(\"packages\")\n     *          #prop_desc(\"string\", \"name\", \"Package name\")\n     *          #prop_desc(\"string\", \"version\", \"Package version\")\n     *       #struct_end()\n     *    #array_end()\n     * @xmlrpc.param #param_desc(\"string\", \"chainName\", \"Label of the chain\")\n     * @xmlrpc.returntype #int\n     */\n    public int addPackageInstall(String sk,\n                                 String serverName,\n                                 String serverIp,\n                                 List<Map<String, String>> packages,\n                                 String chainName) {\n        Collector c = new Collector(sk, serverName, serverIp, chainName);\n        if (!c.isValid()) {\n            return BaseHandler.INVALID;\n        }\n\n        List<Map<String, Long>> selectedPackages = this.acUtil.selectPackages(\n                PackageManager.systemAvailablePackages(\n                        c.getServer().getId(), null), packages, c);\n        if (!selectedPackages.isEmpty()) {\n            return this.bool(ActionChainManager.schedulePackageInstall(\n                c.getUser(), c.getServer(), selectedPackages,\n                new Date(), c.getChain()) != null);\n        }\n\n        return BaseHandler.INVALID;\n    }","id":16275,"modified_method":"/**\n     * Schedule an action to install desired packages on the system.\n     *\n     * @param sk Session key (token)\n     * @param serverName Name of the server (without the domain name)\n     * @param serverIp IP address.\n     * @param packages List of packages\n     * @param chainName Name of the action chain\n     * @return list of action ids, exception thrown otherwise\n     *\n     * @xmlrpc.doc Schedule an action to install desired packages on the system.\n     * @xmlrpc.param #param_desc(\"string\", \"sessionKey\", \"Session token, issued at login\")\n     * @xmlrpc.param #param_desc(\"string\", \"serverName\", \"Hostname without domain name\")\n     * @xmlrpc.param #param_desc(\"string\", \"serverIp\", \"IP address of the machine\")\n     * @xmlrpc.param\n     *    #array()\n     *       #struct(\"packages\")\n     *          #prop_desc(\"string\", \"name\", \"Package name\")\n     *          #prop_desc(\"string\", \"version\", \"Package version\")\n     *       #struct_end()\n     *    #array_end()\n     * @xmlrpc.param #param_desc(\"string\", \"chainName\", \"Label of the chain\")\n     * @xmlrpc.returntype #int\n     */\n    public int addPackageInstall(String sk,\n                                 String serverName,\n                                 String serverIp,\n                                 List<Map<String, String>> packages,\n                                 String chainName) {\n        Collector c = new Collector(sk, serverName, serverIp, chainName);\n        if (c.isValid()) {\n            List<Map<String, Long>> selectedPackages = this.acUtil.selectPackages(\n                    PackageManager.systemAvailablePackages(\n                            c.getServer().getId(), null), packages, c);\n            if (!selectedPackages.isEmpty()) {\n                return c.cleanup(this.bool(ActionChainManager.schedulePackageInstall(\n                        c.getUser(), c.getServer(), selectedPackages,\n                                                    new Date(), c.getChain()) != null));\n            }\n        }\n\n        return c.cleanup(BaseHandler.INVALID);\n    }","commit_id":"25ff8f4a5d6fb2f0c01b391b9636fb8657cb9c55","url":"https://github.com/spacewalkproject/spacewalk"},{"original_method":"/**\n     * Add a remote command as a script.\n     *\n     * @param sk Session key (token)\n     * @param serverName Name of the server (without the domain name)\n     * @param serverIp IP address.\n     * @param chainName Name of the action chain.\n     * @param uid User ID on the remote system.\n     * @param scriptBody Base64 encoded script.\n     * @param gid Group ID on the remote system.\n     * @param timeout Timeout\n     * @return True or false in XML-RPC representation (1 or 0 respectively)\n     *\n     * @xmlrpc.doc Add a remote command as a script.\n     *             NOTE: The script body must be Base64 encoded!\n     *\n     * @xmlrpc.param #param_desc(\"string\", \"sessionKey\", \"Session token, issued at login\")\n     * @xmlrpc.param #param_desc(\"string\", \"serverName\", \"Hostname without domain name\")\n     * @xmlrpc.param #param_desc(\"string\", \"serverIp\", \"IP address of the machine\")\n     * @xmlrpc.param #param_desc(\"string\", \"chainName\", \"Label of the chain\")\n     * @xmlrpc.param #param_desc(\"string\", \"uid\", \"User ID on the particular system\")\n     * @xmlrpc.param #param_desc(\"string\", \"gid\", \"Group ID on the particular system\")\n     * @xmlrpc.param #param_desc(\"int\", \"timeout\", \"Timeout cannot exceed 1200 seconds\")\n     * @xmlrpc.param #param_desc(\"string\", \"scriptBodyBase64\", \"Base64 encoded script body\")\n     * @xmlrpc.returntype #int\n     */\n    public int addRemoteCommand(String sk,\n                                String serverName,\n                                String serverIp,\n                                String chainName,\n                                String uid,\n                                String gid,\n                                Integer timeout,\n                                String scriptBody) {\n        Collector c = new Collector(sk, serverName, serverIp, chainName);\n        if (!c.isValid()) {\n            return BaseHandler.INVALID;\n        }\n\n        List<Long> systems = new ArrayList<Long>();\n        systems.add(c.getServer().getId());\n\n        if (timeout > 1200) {\n            timeout = 1200;\n        }\n\n        if (timeout < 1) {\n            timeout = 120;\n        }\n\n        ScriptActionDetails script = ActionManager.createScript(uid, gid, (long) timeout,\n            new String(DatatypeConverter.parseBase64Binary(scriptBody)));\n\n        Date date = new Date();\n\n        return this.bool(ActionChainManager.scheduleScriptRuns(\n            c.getUser(), systems,\n            String.format(\"Remote Script at %s\",\n                          SimpleDateFormat.getDateInstance(\n                              SimpleDateFormat.MEDIUM).format(date)),\n            script, date, c.getChain()) != null);\n    }","id":16276,"modified_method":"/**\n     * Add a remote command as a script.\n     *\n     * @param sk Session key (token)\n     * @param serverName Name of the server (without the domain name)\n     * @param serverIp IP address.\n     * @param chainName Name of the action chain.\n     * @param uid User ID on the remote system.\n     * @param scriptBody Base64 encoded script.\n     * @param gid Group ID on the remote system.\n     * @param timeout Timeout\n     * @return True or false in XML-RPC representation (1 or 0 respectively)\n     *\n     * @xmlrpc.doc Add a remote command as a script.\n     *             NOTE: The script body must be Base64 encoded!\n     *\n     * @xmlrpc.param #param_desc(\"string\", \"sessionKey\", \"Session token, issued at login\")\n     * @xmlrpc.param #param_desc(\"string\", \"serverName\", \"Hostname without domain name\")\n     * @xmlrpc.param #param_desc(\"string\", \"serverIp\", \"IP address of the machine\")\n     * @xmlrpc.param #param_desc(\"string\", \"chainName\", \"Label of the chain\")\n     * @xmlrpc.param #param_desc(\"string\", \"uid\", \"User ID on the particular system\")\n     * @xmlrpc.param #param_desc(\"string\", \"gid\", \"Group ID on the particular system\")\n     * @xmlrpc.param #param_desc(\"int\", \"timeout\", \"Timeout cannot exceed 1200 seconds\")\n     * @xmlrpc.param #param_desc(\"string\", \"scriptBodyBase64\", \"Base64 encoded script body\")\n     * @xmlrpc.returntype #int\n     */\n    public int addRemoteCommand(String sk,\n                                String serverName,\n                                String serverIp,\n                                String chainName,\n                                String uid,\n                                String gid,\n                                Integer timeout,\n                                String scriptBody) {\n        Collector c = new Collector(sk, serverName, serverIp, chainName);\n        if (!c.isValid()) {\n            return c.cleanup(BaseHandler.INVALID);\n        }\n\n        List<Long> systems = new ArrayList<Long>();\n        systems.add(c.getServer().getId());\n\n        if (timeout > 1200) {\n            timeout = 1200;\n        }\n\n        if (timeout < 1) {\n            timeout = 120;\n        }\n\n        ScriptActionDetails script = ActionManager.createScript(uid, gid, (long) timeout,\n            new String(DatatypeConverter.parseBase64Binary(scriptBody)));\n\n        Date date = new Date();\n\n        return c.cleanup(this.bool(ActionChainManager.scheduleScriptRuns(\n                c.getUser(), systems,\n                             String.format(\"Remote Script at %s\",\n                                           SimpleDateFormat.getDateInstance(\n                                                   SimpleDateFormat.MEDIUM).format(date)),\n                             script, date, c.getChain()) != null));\n    }","commit_id":"25ff8f4a5d6fb2f0c01b391b9636fb8657cb9c55","url":"https://github.com/spacewalkproject/spacewalk"},{"original_method":"/**\n     * Adds an action to verify installed packages on the system.\n     *\n     * @param sk Session key (token)\n     * @param serverName Name of the server (without the domain name)\n     * @param serverIp IP address.\n     * @param packages List of packages.\n     * @param chainName Name of the action chain.\n     * @return True or false in XML-RPC representation (1 or 0 respectively).\n     *\n     * @xmlrpc.doc Adds an action to verify installed packages on the system.\n     * @xmlrpc.param #param_desc(\"string\", \"sessionKey\", \"Session token, issued at login\")\n     * @xmlrpc.param #param_desc(\"string\", \"serverName\", \"Hostname without domain name\")\n     * @xmlrpc.param #param_desc(\"string\", \"serverIp\", \"IP address of the machine\")\n     * @xmlrpc.param\n     *    #array()\n     *       #struct(\"packages\")\n     *          #prop_desc(\"string\", \"name\", \"Package name\")\n     *          #prop_desc(\"string\", \"version\", \"Package version\")\n     *       #struct_end()\n     *    #array_end()\n     * @xmlrpc.param #param_desc(\"string\", \"chainName\", \"Label of the chain\")\n     * @xmlrpc.returntype #int\n     */\n    public int addPackageVerify(String sk,\n                                String serverName, String serverIp,\n                                List<Map<String, String>> packages,\n                                String chainName) {\n        Collector c = new Collector(sk, serverName, serverIp, chainName);\n        if (!c.isValid()) {\n            return BaseHandler.INVALID;\n        }\n\n        List<Map<String, Long>> selectedPackages = this.acUtil.selectPackages(\n                PackageManager.systemPackageList(c.getServer().getId(), null), packages, c);\n        if (!selectedPackages.isEmpty()) {\n            return this.bool(ActionChainManager.schedulePackageVerify(\n                c.getUser(), c.getServer(), selectedPackages,\n                new Date(), c.getChain()) != null);\n        }\n\n        return BaseHandler.INVALID;\n    }","id":16277,"modified_method":"/**\n     * Adds an action to verify installed packages on the system.\n     *\n     * @param sk Session key (token)\n     * @param serverName Name of the server (without the domain name)\n     * @param serverIp IP address.\n     * @param packages List of packages.\n     * @param chainName Name of the action chain.\n     * @return True or false in XML-RPC representation (1 or 0 respectively).\n     *\n     * @xmlrpc.doc Adds an action to verify installed packages on the system.\n     * @xmlrpc.param #param_desc(\"string\", \"sessionKey\", \"Session token, issued at login\")\n     * @xmlrpc.param #param_desc(\"string\", \"serverName\", \"Hostname without domain name\")\n     * @xmlrpc.param #param_desc(\"string\", \"serverIp\", \"IP address of the machine\")\n     * @xmlrpc.param\n     *    #array()\n     *       #struct(\"packages\")\n     *          #prop_desc(\"string\", \"name\", \"Package name\")\n     *          #prop_desc(\"string\", \"version\", \"Package version\")\n     *       #struct_end()\n     *    #array_end()\n     * @xmlrpc.param #param_desc(\"string\", \"chainName\", \"Label of the chain\")\n     * @xmlrpc.returntype #int\n     */\n    public int addPackageVerify(String sk,\n                                String serverName, String serverIp,\n                                List<Map<String, String>> packages,\n                                String chainName) {\n        Collector c = new Collector(sk, serverName, serverIp, chainName);\n        if (c.isValid()) {\n            List<Map<String, Long>> selectedPackages = this.acUtil.selectPackages(\n                PackageManager.systemPackageList(c.getServer().getId(), null), packages, c);\n            if (!selectedPackages.isEmpty()) {\n                return c.cleanup(this.bool(ActionChainManager.schedulePackageVerify(\n                        c.getUser(), c.getServer(), selectedPackages,\n                                                    new Date(), c.getChain()) != null));\n            }\n        }\n\n        return c.cleanup(BaseHandler.INVALID);\n    }","commit_id":"25ff8f4a5d6fb2f0c01b391b9636fb8657cb9c55","url":"https://github.com/spacewalkproject/spacewalk"},{"original_method":"/**\n     * Adds an action to remove installed packages on the system.\n     *\n     * @param sk Session key (token)\n     * @param serverId System ID\n     * @param packages List of packages\n     * @param chainName Name of the action chain\n     * @return list of action ids, exception thrown otherwise\n     *\n     * @xmlrpc.doc Adds an action to remove installed packages on the system.\n     * @xmlrpc.param #param_desc(\"string\", \"sessionKey\", \"Session token, issued at login\")\n     * @xmlrpc.param #param_desc(\"int\", \"serverId\", \"System ID\")\n     * @xmlrpc.param\n     *    #array()\n     *       #struct(\"packages\")\n     *          #prop_desc(\"string\", \"name\", \"Package name\")\n     *          #prop_desc(\"string\", \"version\", \"Package version\")\n     *       #struct_end()\n     *    #array_end()\n     * @xmlrpc.param #param_desc(\"string\", \"chainName\", \"Label of the chain\")\n     * @xmlrpc.returntype #int\n     */\n    public int addPackageRemoval(String sk,\n                                 Integer serverId,\n                                 List<Map<String, String>> packages,\n                                 String chainName) {\n        Collector c = new Collector(sk, serverId, chainName);\n        if (!c.isValid()) {\n            return BaseHandler.INVALID;\n        }\n\n        List<Map<String, Long>> selectedPackages = this.acUtil.selectPackages(\n            SystemManager.installedPackages(c.getServer().getId(), true), packages, c);\n        if (!selectedPackages.isEmpty()) {\n            return this.bool(ActionChainManager.schedulePackageRemoval(\n                c.getUser(), c.getServer(), selectedPackages,\n                new Date(), c.getChain()) != null);\n        }\n\n        return BaseHandler.INVALID;\n    }","id":16278,"modified_method":"/**\n     * Adds an action to remove installed packages on the system.\n     *\n     * @param sk Session key (token)\n     * @param serverId System ID\n     * @param packages List of packages\n     * @param chainName Name of the action chain\n     * @return list of action ids, exception thrown otherwise\n     *\n     * @xmlrpc.doc Adds an action to remove installed packages on the system.\n     * @xmlrpc.param #param_desc(\"string\", \"sessionKey\", \"Session token, issued at login\")\n     * @xmlrpc.param #param_desc(\"int\", \"serverId\", \"System ID\")\n     * @xmlrpc.param\n     *    #array()\n     *       #struct(\"packages\")\n     *          #prop_desc(\"string\", \"name\", \"Package name\")\n     *          #prop_desc(\"string\", \"version\", \"Package version\")\n     *       #struct_end()\n     *    #array_end()\n     * @xmlrpc.param #param_desc(\"string\", \"chainName\", \"Label of the chain\")\n     * @xmlrpc.returntype #int\n     */\n    public int addPackageRemoval(String sk,\n                                 Integer serverId,\n                                 List<Map<String, String>> packages,\n                                 String chainName) {\n        Collector c = new Collector(sk, serverId, chainName);\n        if (c.isValid()) {\n            List<Map<String, Long>> selectedPackages = this.acUtil.selectPackages(\n                SystemManager.installedPackages(c.getServer().getId(), true), packages, c);\n            if (!selectedPackages.isEmpty()) {\n                return c.cleanup(this.bool(ActionChainManager.schedulePackageRemoval(\n                        c.getUser(), c.getServer(), selectedPackages,\n                                                    new Date(), c.getChain()) != null));\n            }\n        }\n\n        return c.cleanup(BaseHandler.INVALID);\n    }","commit_id":"25ff8f4a5d6fb2f0c01b391b9636fb8657cb9c55","url":"https://github.com/spacewalkproject/spacewalk"},{"original_method":"/**\n     * Adds an action to remove installed packages on the system.\n     *\n     * @param sk Session key (token)\n     * @param serverName Name of the server (without the domain name)\n     * @param serverIp IP address.\n     * @param packages List of packages\n     * @param chainName Name of the action chain\n     * @return list of action ids, exception thrown otherwise\n     *\n     * @xmlrpc.doc Adds an action to remove installed packages on the system.\n     *             Server IP and/or name is required. Both name and IP cannot be empty.\n     *             Server name should be exact, without the domain name.\n     * @xmlrpc.param #param_desc(\"string\", \"sessionKey\", \"Session token, issued at login\")\n     * @xmlrpc.param #param_desc(\"string\", \"serverName\", \"Hostname without domain name\")\n     * @xmlrpc.param #param_desc(\"string\", \"serverIp\", \"IP address of the machine\")\n     * @xmlrpc.param\n     *    #array()\n     *       #struct(\"packages\")\n     *          #prop_desc(\"string\", \"name\", \"Package name\")\n     *          #prop_desc(\"string\", \"version\", \"Package version\")\n     *       #struct_end()\n     *    #array_end()\n     * @xmlrpc.param #param_desc(\"string\", \"chainName\", \"Label of the chain\")\n     * @xmlrpc.returntype #int\n     */\n    public int addPackageRemoval(String sk,\n                                 String serverName,\n                                 String serverIp,\n                                 List<Map<String, String>> packages,\n                                 String chainName) {\n        ActionChainRPCCommon.Collector c = new ActionChainRPCCommon.Collector(sk, serverName, serverIp, chainName);\n        if (!c.isValid()) {\n            return BaseHandler.INVALID;\n        }\n\n        List<Map<String, Long>> selectedPackages = this.acUtil.selectPackages(\n            SystemManager.installedPackages(c.getServer().getId(), true), packages, c);\n        if (!selectedPackages.isEmpty()) {\n            return this.bool(ActionChainManager.schedulePackageRemoval(\n                c.getUser(), c.getServer(), selectedPackages,\n                new Date(), c.getChain()) != null);\n        }\n\n        return BaseHandler.INVALID;\n    }","id":16279,"modified_method":"/**\n     * Adds an action to remove installed packages on the system.\n     *\n     * @param sk Session key (token)\n     * @param serverName Name of the server (without the domain name)\n     * @param serverIp IP address.\n     * @param packages List of packages\n     * @param chainName Name of the action chain\n     * @return list of action ids, exception thrown otherwise\n     *\n     * @xmlrpc.doc Adds an action to remove installed packages on the system.\n     *             Server IP and/or name is required. Both name and IP cannot be empty.\n     *             Server name should be exact, without the domain name.\n     * @xmlrpc.param #param_desc(\"string\", \"sessionKey\", \"Session token, issued at login\")\n     * @xmlrpc.param #param_desc(\"string\", \"serverName\", \"Hostname without domain name\")\n     * @xmlrpc.param #param_desc(\"string\", \"serverIp\", \"IP address of the machine\")\n     * @xmlrpc.param\n     *    #array()\n     *       #struct(\"packages\")\n     *          #prop_desc(\"string\", \"name\", \"Package name\")\n     *          #prop_desc(\"string\", \"version\", \"Package version\")\n     *       #struct_end()\n     *    #array_end()\n     * @xmlrpc.param #param_desc(\"string\", \"chainName\", \"Label of the chain\")\n     * @xmlrpc.returntype #int\n     */\n    public int addPackageRemoval(String sk,\n                                 String serverName,\n                                 String serverIp,\n                                 List<Map<String, String>> packages,\n                                 String chainName) {\n        ActionChainRPCCommon.Collector c = new ActionChainRPCCommon.Collector(\n                sk, serverName, serverIp, chainName);\n        if (c.isValid()) {\n            List<Map<String, Long>> selectedPackages = this.acUtil.selectPackages(\n                SystemManager.installedPackages(c.getServer().getId(), true), packages, c);\n            if (!selectedPackages.isEmpty()) {\n                return c.cleanup(this.bool(ActionChainManager.schedulePackageRemoval(\n                        c.getUser(), c.getServer(), selectedPackages,\n                                                    new Date(), c.getChain()) != null));\n            }\n        }\n\n        return c.cleanup(BaseHandler.INVALID);\n    }","commit_id":"25ff8f4a5d6fb2f0c01b391b9636fb8657cb9c55","url":"https://github.com/spacewalkproject/spacewalk"},{"original_method":"/**\n         * Collector constructor.\n         * @param sessionToken\n         * @param serverId\n         * @param chainName\n         */\n        public Collector(String sessionToken,\n                         Integer serverId,\n                         String chainName) {\n            if (StringUtil.nullOrValue(sessionToken) == null) {\n                this.user = null;\n            }\n            else {\n                this.user = ActionChainHandler.getLoggedInUser(sessionToken);\n            }\n\n            Server system;\n            try {\n                system = SystemManager.lookupByIdAndUser((long) serverId, user);\n            }\n            catch (Exception ex) {\n                system = null;\n            }\n            this.server = system;\n\n            if (StringUtil.nullOrValue(chainName) == null) {\n                this.chain = null;\n            }\n            else {\n                this.chain = ActionChainFactory.getOrCreateActionChain(\n                    chainName, this.user);\n            }\n        }","id":16280,"modified_method":"/**\n         * Collector constructor.\n         * @param sessionToken\n         * @param serverId\n         * @param chainName\n         */\n        public Collector(String sessionToken,\n                         Integer serverId,\n                         String chainName) {\n            this.freshChain = false;\n            if (StringUtil.nullOrValue(sessionToken) == null) {\n                this.user = null;\n            }\n            else {\n                this.user = ActionChainHandler.getLoggedInUser(sessionToken);\n            }\n\n            Server system;\n            try {\n                system = SystemManager.lookupByIdAndUser((long) serverId, user);\n            }\n            catch (Exception ex) {\n                system = null;\n            }\n            this.server = system;\n\n            if (StringUtil.nullOrValue(chainName) == null) {\n                this.chain = null;\n            }\n            else {\n                this.freshChain = ActionChainFactory.getActionChain(chainName) == null;\n                this.chain = ActionChainFactory.getOrCreateActionChain(\n                    chainName, this.user);\n            }\n        }","commit_id":"25ff8f4a5d6fb2f0c01b391b9636fb8657cb9c55","url":"https://github.com/spacewalkproject/spacewalk"},{"original_method":"/**\r\n     * createFormulasFromInstructions adds any formulas that exist in the list of formulaNames\r\n     * but do not already exist in the question\r\n     * @param item\r\n     * @param formulaNames\r\n     */\r\n    private void createFormulasFromInstructions(ItemBean item, List<String> formulaNames) {\r\n        Map<String, CalculatedQuestionFormulaBean> formulas = item.getCalculatedQuestion().getFormulas();\r\n        Map<String, CalculatedQuestionVariableBean> variables = item.getCalculatedQuestion().getVariables();\r\n          \r\n        // add any missing formulas\r\n        for (String formulaName : formulaNames) {\r\n            if (!formulas.containsKey(formulaName)) {\r\n                CalculatedQuestionFormulaBean bean = new CalculatedQuestionFormulaBean();\r\n                bean.setName(formulaName);\r\n                bean.setSequence(new Long(variables.size() + formulas.size() + 1));\r\n                item.getCalculatedQuestion().addFormula(bean);\r\n            } else {\r\n                CalculatedQuestionFormulaBean bean = formulas.get(formulaName);\r\n                bean.setActive(true);\r\n            }\r\n        }                 \r\n    }","id":16281,"modified_method":"/**\r\n     * createFormulasFromInstructions adds any formulas that exist in the list of formulaNames\r\n     * but do not already exist in the question\r\n     * @param item\r\n     * @param formulaNames\r\n     */\r\n    private List<String> createFormulasFromInstructions(ItemBean item, List<String> formulaNames) {\r\n        List<String> errors = new ArrayList<String>();\r\n        Map<String, CalculatedQuestionFormulaBean> formulas = item.getCalculatedQuestion().getFormulas();\r\n        Map<String, CalculatedQuestionVariableBean> variables = item.getCalculatedQuestion().getVariables();\r\n          \r\n        // add any missing formulas\r\n        for (String formulaName : formulaNames) {\r\n            if (!formulas.containsKey(formulaName)) {\r\n                CalculatedQuestionFormulaBean bean = new CalculatedQuestionFormulaBean();\r\n                bean.setName(formulaName);\r\n                bean.setSequence(new Long(variables.size() + formulas.size() + 1));\r\n                item.getCalculatedQuestion().addFormula(bean);\r\n            } else {\r\n                CalculatedQuestionFormulaBean bean = formulas.get(formulaName);\r\n                bean.setActive(true);\r\n            }\r\n        }                 \r\n        if (item.getCalculatedQuestion().getActiveFormulas().size() == 0) {\r\n            errors.add(getErrorMessage(\"no_formulas\"));\r\n        }\r\n        return errors;\r\n    }","commit_id":"858428fd14b5dd5e461b136a43dd0b9c7cdd4f8f","url":"https://github.com/sakaiproject/sakai"},{"original_method":"/**\r\n     * isNegativeSqrt() looks at the incoming expression and looks specifically\r\n     * to see if it executes the SQRT function.  If it does, it evaluates it.  If\r\n     * it has an error, it assumes that the SQRT function tried to evaluate a \r\n     * negative number and evaluated to NaN.\r\n     * @param expression a mathematical formula, with all variables replaced by\r\n     * real values, to be evaluated\r\n     * @return true if the function uses the SQRT function, and the SQRT function\r\n     * evaluates as an error; else false\r\n     * @throws SamigoExpressionError if the evaluation of the SQRT function throws\r\n     * som other parse error\r\n     */\r\n    private boolean isNegativeSqrt(String expression) throws SamigoExpressionError {\r\n        final String SQRT = \"sqrt(\";\r\n        boolean isNegative = false;\r\n        GradingService service = new GradingService();\r\n        \r\n        expression = expression.toLowerCase();\r\n        int startIndex = expression.indexOf(SQRT);\r\n        if (startIndex > -1) {\r\n            int endIndex = expression.indexOf(')', startIndex);\r\n            String sqrtExpression = expression.substring(startIndex, endIndex + 1);\r\n            SamigoExpressionParser parser = new SamigoExpressionParser();\r\n            String numericAnswerString = parser.parse(sqrtExpression);\r\n            if (!service.isAnswerValid(numericAnswerString)) {\r\n                isNegative = true;\r\n            }            \r\n        }\r\n        return isNegative;\r\n    }","id":16282,"modified_method":"/**\r\n     * isNegativeSqrt() looks at the incoming expression and looks specifically\r\n     * to see if it executes the SQRT function.  If it does, it evaluates it.  If\r\n     * it has an error, it assumes that the SQRT function tried to evaluate a \r\n     * negative number and evaluated to NaN.\r\n     * <p>Note - the incoming expression should have no variables.  They should \r\n     * have been replaced before this function was called\r\n     * @param expression a mathematical formula, with all variables replaced by\r\n     * real values, to be evaluated\r\n     * @return true if the function uses the SQRT function, and the SQRT function\r\n     * evaluates as an error; else false\r\n     * @throws SamigoExpressionError if the evaluation of the SQRT function throws\r\n     * som other parse error\r\n     */\r\n    private boolean isNegativeSqrt(String expression, GradingService service) throws SamigoExpressionError {\r\n        final String SQRT = \"sqrt(\";\r\n        boolean isNegative = false;\r\n        if (expression == null) {\r\n            expression = \"\";\r\n        }\r\n        if (service == null) {\r\n            service = new GradingService();\r\n        }\r\n        expression = expression.toLowerCase();\r\n        int startIndex = expression.indexOf(SQRT);\r\n        if (startIndex > -1) {\r\n            int endIndex = expression.indexOf(')', startIndex);\r\n            String sqrtExpression = expression.substring(startIndex, endIndex + 1);\r\n            SamigoExpressionParser parser = new SamigoExpressionParser();\r\n            String numericAnswerString = parser.parse(sqrtExpression);\r\n            if (!service.isAnswerValid(numericAnswerString)) {\r\n                isNegative = true;\r\n            }            \r\n        }\r\n        return isNegative;\r\n    }","commit_id":"858428fd14b5dd5e461b136a43dd0b9c7cdd4f8f","url":"https://github.com/sakaiproject/sakai"},{"original_method":"/**\r\n     * validateFormulas() iterates through all of the formula definitions.  It \r\n     * creates valid dummy values for all of the defined variables, substitutes those\r\n     * variables into the formula, then executes the formula to determine if a value\r\n     * is returned.  This is a syntax checker; a syntactically valid formula can\r\n     * definitely return the wrong value if the author enters a wrong formula.\r\n     * @param item\r\n     * @return a map of errors.  The Key is an integer value, set by the SamigoExpressionParser, the\r\n     * value is the string result of that error message.\r\n     */\r\n    private Map<Integer, String> validateFormulas(ItemBean item) {\r\n        Map<Integer, String> errors = new HashMap<Integer, String>();\r\n        GradingService service = new GradingService();\r\n        SamigoExpressionParser parser = new SamigoExpressionParser();\r\n        \r\n        // list of variables to substitute\r\n        Map<String, String> variableRangeMap = new HashMap<String, String>();\r\n        for (CalculatedQuestionVariableBean variable : item.getCalculatedQuestion().getActiveVariables().values()) {\r\n            String match = variable.getMin() + \"|\" + variable.getMax() + \",\" + variable.getDecimalPlaces();\r\n            variableRangeMap.put(variable.getName(), match);\r\n        }\r\n        \r\n        // dummy variables needed to generate random values within ranges for the variables\r\n        long dummyItemId = 1;\r\n        long dummyGradingId = 1;\r\n        String dummyAgentId = \"dummy\";\r\n        \r\n        for (int attemptCnt = 0; attemptCnt < 100; attemptCnt++) {\r\n        \r\n            // create random values for the variables to substitute into the formulas\r\n            Map<String, String> answersMap = service.determineRandomValuesForRanges(variableRangeMap, dummyItemId, \r\n                    dummyGradingId, dummyAgentId, attemptCnt);\r\n            \r\n            // evaluate each formula\r\n            for (CalculatedQuestionFormulaBean formulaBean : item.getCalculatedQuestion().getActiveFormulas().values()) {\r\n                String formulaStr = formulaBean.getText();\r\n                formulaBean.setValidated(true);\r\n                String substitutedFormulaStr = service.replaceMappedVariablesWithNumbers(formulaStr, answersMap);\r\n                \r\n                // look for wrapped variables that haven't been replaced (undefined variable)\r\n                List<String> unwrappedVariables = service.extractVariables(substitutedFormulaStr);\r\n                if (unwrappedVariables.size() > 0) {\r\n                    formulaBean.setValidated(false);\r\n                    errors.put(9, \"Wrapped variable not found\");\r\n                } else {\r\n                    try {\r\n                        if (isNegativeSqrt(substitutedFormulaStr)) {\r\n                            formulaBean.setValidated(false);\r\n                            errors.put(8, \"Negative Squrare Root\");\r\n                        } else {\r\n                            String numericAnswerString = parser.parse(substitutedFormulaStr);\r\n                            if (!service.isAnswerValid(numericAnswerString)) {                                \r\n                                throw new Exception(\"invalid answer, try again\");\r\n                            }\r\n                        }\r\n                    } catch (SamigoExpressionError e) {\r\n                        formulaBean.setValidated(false);\r\n                        errors.put(Integer.valueOf(e.get_id()), e.get());\r\n                    } catch (Exception e) {\r\n                        formulaBean.setValidated(false);\r\n                        errors.put(500, e.getMessage());\r\n                    }\r\n                }\r\n            }\r\n            if (errors.size() > 0) {\r\n                break;\r\n            }\r\n        }\r\n        return errors;\r\n    }","id":16283,"modified_method":"/**\r\n     * validateFormulas() iterates through all of the formula definitions.  It \r\n     * creates valid dummy values for all of the defined variables, substitutes those\r\n     * variables into the formula, then executes the formula to determine if a value\r\n     * is returned.  This is a syntax checker; a syntactically valid formula can\r\n     * definitely return the wrong value if the author enters a wrong formula.\r\n     * @param item\r\n     * @return a map of errors.  The Key is an integer value, set by the SamigoExpressionParser, the\r\n     * value is the string result of that error message.\r\n     */\r\n    private List<String> validateFormulas(ItemBean item, GradingService service) {\r\n        List<String> errors = new ArrayList<String>();\r\n        SamigoExpressionParser parser = new SamigoExpressionParser();\r\n        if (service == null) {\r\n            service = new GradingService();\r\n        }\r\n        \r\n        // list of variables to substitute\r\n        Map<String, String> variableRangeMap = new HashMap<String, String>();\r\n        for (CalculatedQuestionVariableBean variable : item.getCalculatedQuestion().getActiveVariables().values()) {\r\n            String match = variable.getMin() + \"|\" + variable.getMax() + \",\" + variable.getDecimalPlaces();\r\n            variableRangeMap.put(variable.getName(), match);\r\n        }\r\n        \r\n        // dummy variables needed to generate random values within ranges for the variables\r\n        long dummyItemId = 1;\r\n        long dummyGradingId = 1;\r\n        String dummyAgentId = \"dummy\";\r\n        \r\n        int attemptCnt = 0;\r\n        while (attemptCnt < 100 && errors.size() == 0) {\r\n        \r\n            // create random values for the variables to substitute into the formulas\r\n            Map<String, String> answersMap = service.determineRandomValuesForRanges(variableRangeMap, dummyItemId, \r\n                    dummyGradingId, dummyAgentId, attemptCnt);\r\n            \r\n            // evaluate each formula\r\n            for (CalculatedQuestionFormulaBean formulaBean : item.getCalculatedQuestion().getActiveFormulas().values()) {\r\n                String formulaStr = formulaBean.getText();\r\n                \r\n                if (formulaStr == null || formulaStr.length() == 0) {\r\n                    formulaBean.setValidFormula(false);\r\n                    errors.add(getErrorMessage(\"empty_field\"));                    \r\n                } else {\r\n                    String substitutedFormulaStr = service.replaceMappedVariablesWithNumbers(formulaStr, answersMap);\r\n                    \r\n                    // look for wrapped variables that haven't been replaced (undefined variable)\r\n                    List<String> unwrappedVariables = service.extractVariables(substitutedFormulaStr);\r\n                    if (unwrappedVariables.size() > 0) {\r\n                        formulaBean.setValidFormula(false);\r\n                        errors.add(getErrorMessage(\"samigo_formula_error_9\"));\r\n                    } else {\r\n                        try {\r\n                            if (isNegativeSqrt(substitutedFormulaStr, service)) {\r\n                                formulaBean.setValidFormula(false);\r\n                                errors.add(getErrorMessage(\"samigo_formula_error_8\"));\r\n                            } else {\r\n                                String numericAnswerString = parser.parse(substitutedFormulaStr);\r\n                                if (!service.isAnswerValid(numericAnswerString)) {                                \r\n                                    throw new Exception(\"invalid answer, try again\");\r\n                                }\r\n                            }\r\n                        } catch (SamigoExpressionError e) {\r\n                            formulaBean.setValidFormula(false);\r\n                            errors.add(getErrorMessage(\"samigo_formula_error_\" + Integer.valueOf(e.get_id())));\r\n                        } catch (Exception e) {\r\n                            formulaBean.setValidFormula(false);\r\n                            errors.add(getErrorMessage(\"samigo_formula_error_500\"));\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            attemptCnt++;\r\n        }\r\n        return errors;\r\n    }","commit_id":"858428fd14b5dd5e461b136a43dd0b9c7cdd4f8f","url":"https://github.com/sakaiproject/sakai"},{"original_method":"/**\r\n     * This listener will read in the instructions, parse any variables and \r\n     * formula names it finds, and then check to see if there are any errors \r\n     * in the configuration for the question.  \r\n     * \r\n     * <p>Errors include <ul><li>no variables or formulas named in the instructions<\/li>\r\n     * <li>variables and formulas sharing a name<\/li>\r\n     * <li>variables with invalid ranges of values<\/li>\r\n     * <li>formulas that are syntactically wrong<\/li><\/ul>\r\n     * Any errors are written to the context messager\r\n     * <p>The validate formula is also called directly from the ItemAddListner, before\r\n     * saving a calculated question, to ensure any last minute changes are caught.\r\n     */\r\n    public void processAction(ActionEvent arg0) throws AbortProcessingException {\r\n        ItemAuthorBean itemauthorbean = (ItemAuthorBean) ContextUtil.lookupBean(\"itemauthor\");\r\n        ItemBean item = itemauthorbean.getCurrentItem();\r\n        FacesContext context=FacesContext.getCurrentInstance();\r\n                \r\n        List<String> errors = this.validate(item);        \r\n        \r\n        if (errors.size() > 0) {\r\n            item.setOutcome(\"calculatedQuestion\");\r\n            item.setPoolOutcome(\"calculatedQuestion\");\r\n            for (String error : errors) {\r\n                context.addMessage(null, new FacesMessage(error));\r\n            }\r\n            context.renderResponse();                         \r\n        }\r\n    }","id":16284,"modified_method":"/**\r\n     * This listener will read in the instructions, parse any variables and \r\n     * formula names it finds, and then check to see if there are any errors \r\n     * in the configuration for the question.  \r\n     * \r\n     * <p>Errors include <ul><li>no variables or formulas named in the instructions<\/li>\r\n     * <li>variables and formulas sharing a name<\/li>\r\n     * <li>variables with invalid ranges of values<\/li>\r\n     * <li>formulas that are syntactically wrong<\/li><\/ul>\r\n     * Any errors are written to the context messager\r\n     * <p>The validate formula is also called directly from the ItemAddListner, before\r\n     * saving a calculated question, to ensure any last minute changes are caught.\r\n     */\r\n    public void processAction(ActionEvent arg0) throws AbortProcessingException {\r\n        ItemAuthorBean itemauthorbean = (ItemAuthorBean) ContextUtil.lookupBean(\"itemauthor\");\r\n        ItemBean item = itemauthorbean.getCurrentItem();\r\n                \r\n        List<String> errors = this.validate(item);        \r\n        \r\n        if (errors.size() > 0) {\r\n            item.setOutcome(\"calculatedQuestion\");\r\n            item.setPoolOutcome(\"calculatedQuestion\");\r\n            FacesContext context=FacesContext.getCurrentInstance();\r\n            for (String error : errors) {\r\n                context.addMessage(null, new FacesMessage(error));\r\n            }\r\n            context.renderResponse();                         \r\n        }\r\n    }","commit_id":"858428fd14b5dd5e461b136a43dd0b9c7cdd4f8f","url":"https://github.com/sakaiproject/sakai"},{"original_method":"/**\r\n     * initializeVariables() prepares any previously defined variables for updates\r\n     * that occur when extracting new variables from instructions\r\n     * @param item\r\n     */\r\n    private void initializeVariables(ItemBean item) {\r\n        Map<String, CalculatedQuestionVariableBean> variables = item.getCalculatedQuestion().getVariables();\r\n        for (CalculatedQuestionVariableBean bean : variables.values()) {\r\n            bean.setActive(false);\r\n        }        \r\n    }","id":16285,"modified_method":"/**\r\n     * initializeVariables() prepares any previously defined variables for updates\r\n     * that occur when extracting new variables from instructions\r\n     * @param item\r\n     */\r\n    private void initializeVariables(ItemBean item) {\r\n        Map<String, CalculatedQuestionVariableBean> variables = item.getCalculatedQuestion().getVariables();\r\n        for (CalculatedQuestionVariableBean bean : variables.values()) {\r\n            bean.setActive(false);\r\n            bean.setValidMax(true);\r\n            bean.setValidMin(true);\r\n        }        \r\n    }","commit_id":"858428fd14b5dd5e461b136a43dd0b9c7cdd4f8f","url":"https://github.com/sakaiproject/sakai"},{"original_method":"/**\r\n     * createVariablesFromInstructions adds any variables that exist in the list of variableNames\r\n     * but do not already exist in the question\r\n     * @param item\r\n     * @param variableNames\r\n     */\r\n    private void createVariablesFromInstructions(ItemBean item, List<String> variableNames) {\r\n        Map<String, CalculatedQuestionFormulaBean> formulas = item.getCalculatedQuestion().getFormulas();\r\n        Map<String, CalculatedQuestionVariableBean> variables = item.getCalculatedQuestion().getVariables();\r\n        \r\n        // add any missing variables\r\n        for (String variableName : variableNames) {\r\n            if (!variables.containsKey(variableName)) {\r\n                CalculatedQuestionVariableBean bean = new CalculatedQuestionVariableBean();\r\n                bean.setName(variableName);\r\n                bean.setSequence(new Long(variables.size() + formulas.size() + 1));\r\n                item.getCalculatedQuestion().addVariable(bean);\r\n            } else {\r\n                CalculatedQuestionVariableBean bean = variables.get(variableName);\r\n                bean.setActive(true);\r\n            }\r\n        }         \r\n    }","id":16286,"modified_method":"/**\r\n     * createVariablesFromInstructions adds any variables that exist in the list of variableNames\r\n     * but do not already exist in the question\r\n     * @param item\r\n     * @param variableNames\r\n     */\r\n    private List<String> createVariablesFromInstructions(ItemBean item, List<String> variableNames) {\r\n        List<String> errors = new ArrayList<String>();\r\n        Map<String, CalculatedQuestionFormulaBean> formulas = item.getCalculatedQuestion().getFormulas();\r\n        Map<String, CalculatedQuestionVariableBean> variables = item.getCalculatedQuestion().getVariables();\r\n        \r\n        // add any missing variables\r\n        for (String variableName : variableNames) {\r\n            if (!variables.containsKey(variableName)) {\r\n                CalculatedQuestionVariableBean bean = new CalculatedQuestionVariableBean();\r\n                bean.setName(variableName);\r\n                bean.setSequence(new Long(variables.size() + formulas.size() + 1));\r\n                item.getCalculatedQuestion().addVariable(bean);\r\n            } else {\r\n                CalculatedQuestionVariableBean bean = variables.get(variableName);\r\n                bean.setActive(true);\r\n            }\r\n        }         \r\n        if (item.getCalculatedQuestion().getActiveVariables().size() == 0) {\r\n            errors.add(getErrorMessage(\"no_variables\"));\r\n        }\r\n        return errors;\r\n    }","commit_id":"858428fd14b5dd5e461b136a43dd0b9c7cdd4f8f","url":"https://github.com/sakaiproject/sakai"},{"original_method":"/**\r\n     * initializeFormulas() prepares any previously defined formulas for updates\r\n     * that occur when extracting new formulas from instructions \r\n     * @param item\r\n     */\r\n    private void initializeFormulas(ItemBean item) {\r\n        Map<String, CalculatedQuestionFormulaBean> formulas = item.getCalculatedQuestion().getFormulas();\r\n        for (CalculatedQuestionFormulaBean bean : formulas.values()) {\r\n            bean.setActive(false);\r\n            bean.setValidated(true);\r\n        }        \r\n    }","id":16287,"modified_method":"/**\r\n     * initializeFormulas() prepares any previously defined formulas for updates\r\n     * that occur when extracting new formulas from instructions \r\n     * @param item\r\n     */\r\n    private void initializeFormulas(ItemBean item) {\r\n        Map<String, CalculatedQuestionFormulaBean> formulas = item.getCalculatedQuestion().getFormulas();\r\n        for (CalculatedQuestionFormulaBean bean : formulas.values()) {\r\n            bean.setActive(false);\r\n            bean.setValidFormula(true);\r\n            bean.setValidTolerance(true);\r\n        }        \r\n    }","commit_id":"858428fd14b5dd5e461b136a43dd0b9c7cdd4f8f","url":"https://github.com/sakaiproject/sakai"},{"original_method":"/**\r\n     * validate() returns a list of error strings to display to the context.\r\n     * <p>Errors include <ul><li>no variables or formulas named in the instructions<\/li>\r\n     * <li>variables and formulas sharing a name<\/li>\r\n     * <li>variables with invalid ranges of values<\/li>\r\n     * <li>formulas that are syntactically wrong<\/li><\/ul>\r\n     * Any errors are written to the context messager\r\n     * <p>The validate formula is also called directly from the ItemAddListner, before\r\n     * saving a calculated question, to ensure any last minute changes are caught.\r\n     * @param item - an ItemBean, which contains all of the needed information \r\n     * about the CalculatedQuestion\r\n     * @returns a List<String> of error messages to be displayed in the context messager.\r\n     */\r\n    public List<String> validate(ItemBean item) {\r\n        List<String> errors = new ArrayList<String>();\r\n        \r\n        // prepare any already existing variables and formula for new extracts\r\n        this.initializeVariables(item);\r\n        this.initializeFormulas(item);\r\n        \r\n        // extract variable and formula names defined in the instructions\r\n        String instructions = item.getInstruction();\r\n        GradingService gs = new GradingService();\r\n        List<String> formulaNames = gs.extractFormulas(instructions);\r\n        List<String> variableNames = gs.extractVariables(instructions);\r\n\r\n        // throw an error if variables and formulas share any names\r\n        // don't continue processing if there are problems with the extract\r\n        if (!Collections.disjoint(formulaNames, variableNames)) {\r\n            String err=ContextUtil.getLocalizedString(\"org.sakaiproject.tool.assessment.bundle.AuthorMessages\",\"unique_names\");\r\n            errors.add(err);\r\n        } else {\r\n        \r\n            \r\n            // add any new variables/formulas\r\n            createFormulasFromInstructions(item, formulaNames);\r\n            createVariablesFromInstructions(item, variableNames);       \r\n            \r\n            CalculatedQuestionBean question = item.getCalculatedQuestion();\r\n            \r\n            // question must have at least on variable and one formula\r\n            if (question.getActiveVariables().size() == 0) {\r\n                String err=ContextUtil.getLocalizedString(\"org.sakaiproject.tool.assessment.bundle.AuthorMessages\",\"no_variables\");\r\n                errors.add(err);\r\n            }\r\n            if (question.getActiveFormulas().size() == 0) {\r\n                String err=ContextUtil.getLocalizedString(\"org.sakaiproject.tool.assessment.bundle.AuthorMessages\",\"no_formulas\");\r\n                errors.add(err);\r\n            }\r\n                        \r\n            // variable mins and maxes must be numbers, and max must be greater than min\r\n            for (CalculatedQuestionVariableBean variable : question.getActiveVariables().values()) {\r\n                double min = 0d;\r\n                try {\r\n                    min = Double.parseDouble(variable.getMin());\r\n                } catch (NumberFormatException n) {\r\n                    String err = ContextUtil.getLocalizedString(\"org.sakaiproject.tool.assessment.bundle.AuthorMessages\", \"invalid_min\");\r\n                    errors.add(err);                    \r\n                }\r\n                double max = 0d;\r\n                try {\r\n                    max = Double.parseDouble(variable.getMax());\r\n                } catch (NumberFormatException n) {\r\n                    String err = ContextUtil.getLocalizedString(\"org.sakaiproject.tool.assessment.bundle.AuthorMessages\", \"invalid_max\");\r\n                    errors.add(err);                    \r\n                }\r\n                if (max < min) {\r\n                    String err=ContextUtil.getLocalizedString(\"org.sakaiproject.tool.assessment.bundle.AuthorMessages\",\"max_less_than_min\");\r\n                    errors.add(err);                    \r\n                }\r\n            }\r\n            \r\n            // formula tolerances must be numbers or percentages\r\n            for (CalculatedQuestionFormulaBean formula : question.getActiveFormulas().values()) {\r\n                String tolerance = formula.getTolerance();\r\n                if (!tolerance.matches(\"^\\\\s*[0-9]+\\\\.?[0-9]*\\\\%\\\\s*$\")) {\r\n                    try {\r\n                        Double.parseDouble(tolerance);\r\n                    } catch (NumberFormatException n) {\r\n                        String err = ContextUtil.getLocalizedString(\"org.sakaiproject.tool.assessment.bundle.AuthorMessages\", \"invalid_tolerance\");\r\n                        errors.add(err);\r\n                    }\r\n                }\r\n            }\r\n            \r\n            // don't bother looking at formulas if any data validations have failed.\r\n            if (errors.size() == 0) {\r\n                // capture formula errors\r\n                // TODO - there is more information available in the SamigoExpressionError \r\n                // object that we are not using, may want to return the Error object, instead\r\n                // of the string here.\r\n                Map<Integer, String> formulaErrors = this.validateFormulas(item);\r\n                if (formulaErrors.size() > 0) {\r\n                    for (Map.Entry<Integer, String> error : formulaErrors.entrySet()) {\r\n                        Integer key = error.getKey();\r\n                        String err = ContextUtil.getLocalizedString(\"org.sakaiproject.tool.assessment.bundle.AuthorMessages\", \r\n                                \"samigo_formula_error_\" + key.toString());\r\n                        errors.add(err);\r\n                    };\r\n                }\r\n            } else {\r\n                String err = ContextUtil.getLocalizedString(\"org.sakaiproject.tool.assessment.bundle.AuthorMessages\", \r\n                        \"formulas_not_validated\");\r\n                errors.add(err);\r\n            }\r\n        }\r\n        return errors;\r\n    }","id":16288,"modified_method":"/**\r\n     * validate() returns a list of error strings to display to the context.\r\n     * <p>Errors include <ul><li>no variables or formulas named in the instructions<\/li>\r\n     * <li>variables and formulas sharing a name<\/li>\r\n     * <li>variables with invalid ranges of values<\/li>\r\n     * <li>formulas that are syntactically wrong<\/li><\/ul>\r\n     * Any errors are written to the context messager\r\n     * <p>The validate formula is also called directly from the ItemAddListner, before\r\n     * saving a calculated question, to ensure any last minute changes are caught.\r\n     * @param item - an ItemBean, which contains all of the needed information \r\n     * about the CalculatedQuestion\r\n     * @returns a List<String> of error messages to be displayed in the context messager.\r\n     */\r\n    public List<String> validate(ItemBean item) {\r\n        List<String> errors = new ArrayList<String>();\r\n        \r\n        // prepare any already existing variables and formula for new extracts\r\n        this.initializeVariables(item);\r\n        this.initializeFormulas(item);\r\n        \r\n        GradingService service = new GradingService();\r\n        String instructions = item.getInstruction();        \r\n        List<String> formulaNames = service.extractFormulas(instructions);\r\n        List<String> variableNames = service.extractVariables(instructions);        \r\n        \r\n        errors.addAll(validateExtractedNames(variableNames, formulaNames));\r\n        \r\n        // add new variables and formulas\r\n        // verify that at least one variable and formula are defined\r\n        if (errors.size() == 0) {\r\n            errors.addAll(createFormulasFromInstructions(item, formulaNames));\r\n            errors.addAll(createVariablesFromInstructions(item, variableNames));       \r\n        }\r\n        \r\n        // validate variable min and max and formula tolerance\r\n        if (errors.size() == 0) {\r\n            errors.addAll(validateMinMax(item));\r\n            errors.addAll(validateTolerance(item));\r\n        }\r\n            \r\n        // don't bother looking at formulas if any data validations have failed for far.\r\n        if (errors.size() == 0) {\r\n            errors.addAll(validateFormulas(item, service));\r\n        } else {\r\n            errors.add(getErrorMessage(\"formulas_not_validated\"));\r\n        }\r\n        return errors;\r\n    }","commit_id":"858428fd14b5dd5e461b136a43dd0b9c7cdd4f8f","url":"https://github.com/sakaiproject/sakai"},{"original_method":"public CalculatedQuestionFormulaBean() {\r\n        this.formula = DEFAULT_FORMULA;\r\n        this.decimalPlaces = DEFAULT_DECIMAL_PLACES;\r\n        this.tolerance = DEFAULT_TOLERANCE;\r\n        this.active = true;\r\n        this.validated = true;\r\n    }","id":16289,"modified_method":"public CalculatedQuestionFormulaBean() {\r\n        this.formula = DEFAULT_FORMULA;\r\n        this.decimalPlaces = DEFAULT_DECIMAL_PLACES;\r\n        this.tolerance = DEFAULT_TOLERANCE;\r\n        this.active = true;\r\n        this.validatedFormula = true;\r\n        this.validatedTolerance = true;\r\n    }","commit_id":"858428fd14b5dd5e461b136a43dd0b9c7cdd4f8f","url":"https://github.com/sakaiproject/sakai"},{"original_method":"/**\r\n     * setValidated() controls whether the formula has been successfully\r\n     * validated for syntax and returns a real answer\r\n     * @param validated true if the formula passes all syntax checks and returns\r\n     * a valid value, otherwise false\r\n     */\r\n    public void setValidated(boolean validated) {\r\n        this.validated = validated;\r\n    }","id":16290,"modified_method":"/**\r\n     * setValidTolerance() controls whether the tolerance has been successfully\r\n     * validated for syntax and returns a real answer\r\n     * @param validatedTolerance\r\n     */\r\n    public void setValidTolerance(boolean validatedTolerance) {\r\n        this.validatedTolerance = validatedTolerance;\r\n    }","commit_id":"858428fd14b5dd5e461b136a43dd0b9c7cdd4f8f","url":"https://github.com/sakaiproject/sakai"},{"original_method":"public CalculatedQuestionVariableBean() {\r\n        this.decimalPlaces = DEFAULT_DECIMAL_PLACES;\r\n        this.active = true;\r\n        this.min = DEFAULT_MIN;\r\n        this.max = DEFAULT_MAX;\r\n    }","id":16291,"modified_method":"public CalculatedQuestionVariableBean() {\r\n        this.decimalPlaces = DEFAULT_DECIMAL_PLACES;\r\n        this.active = true;\r\n        this.min = DEFAULT_MIN;\r\n        this.max = DEFAULT_MAX;\r\n        this.validMin = true;\r\n        this.validMax = true;\r\n    }","commit_id":"858428fd14b5dd5e461b136a43dd0b9c7cdd4f8f","url":"https://github.com/sakaiproject/sakai"},{"original_method":"public String getGroup() {\n            return mergedResolvedDependencies.iterator().next().getGroup();\n        }","id":16292,"modified_method":"public String getModuleGroup() {\n            return mergedResolvedDependencies.iterator().next().getModuleGroup();\n        }","commit_id":"bb5f8b219023f206de72e0e4d5e05df154580d77","url":"https://github.com/gradle/gradle"},{"original_method":"public String getVersion() {\n            return mergedResolvedDependencies.iterator().next().getVersion();\n        }","id":16293,"modified_method":"public String getModuleVersion() {\n            return mergedResolvedDependencies.iterator().next().getModuleVersion();\n        }","commit_id":"bb5f8b219023f206de72e0e4d5e05df154580d77","url":"https://github.com/gradle/gradle"},{"original_method":"private void render(ResolvedDependency resolvedDependency, int depth) throws IOException\n    {\n        getFormatter().format(getIndent(depth));\n\t\tgetFormatter().format(\"%s:%s:%s:%s%n\", resolvedDependency.getGroup(), resolvedDependency.getName(), resolvedDependency.getVersion(),\n                resolvedDependency.getConfiguration());\n\n        Collection<ResolvedDependency> mergedChildren = mergeChildren(resolvedDependency.getChildren());\n\n\t\tfor(ResolvedDependency childResolvedDependency : mergedChildren)\n\t\t{\n\t\t\trender(childResolvedDependency, depth + 1);\n\t\t}\n    }","id":16294,"modified_method":"private void render(ResolvedDependency resolvedDependency, int depth) throws IOException\n    {\n        getFormatter().format(getIndent(depth));\n\t\tgetFormatter().format(\"%s:%s%n\", resolvedDependency.getName(),\n                resolvedDependency.getConfiguration());\n\n        Collection<ResolvedDependency> mergedChildren = mergeChildren(resolvedDependency.getChildren());\n\n\t\tfor(ResolvedDependency childResolvedDependency : mergedChildren)\n\t\t{\n\t\t\trender(childResolvedDependency, depth + 1);\n\t\t}\n    }","commit_id":"bb5f8b219023f206de72e0e4d5e05df154580d77","url":"https://github.com/gradle/gradle"},{"original_method":"private DefaultResolvedDependency createResolvedDependency(IvyNode ivyNode, ResolveReport resolveReport, String configuration) {\n        ModuleRevisionId moduleRevisionId = ivyNode.getId();\n        Set<String> configurations = getConfigurationHierarchy(ivyNode, configuration);\n        DefaultResolvedDependency resolvedDependency = new DefaultResolvedDependency(\n                moduleRevisionId.getOrganisation(), moduleRevisionId.getName(), moduleRevisionId.getRevision(),\n                configuration,\n                configurations,\n                getArtifacts(ivyNode));\n        for (ResolvedArtifact resolvedArtifact : resolvedDependency.getModuleArtifacts()) {\n            ((DefaultResolvedArtifact) resolvedArtifact).setResolvedDependency(resolvedDependency);\n        }\n        return resolvedDependency;\n    }","id":16295,"modified_method":"private DefaultResolvedDependency createResolvedDependency(IvyNode ivyNode, ResolveReport resolveReport, String configuration) {\n        ModuleRevisionId moduleRevisionId = ivyNode.getId();\n        Set<String> configurations = getConfigurationHierarchy(ivyNode, configuration);\n        DefaultResolvedDependency resolvedDependency;\n        if (moduleRevisionId.getAttribute(DependencyDescriptorFactory.PROJECT_PATH_KEY) != null) {\n            resolvedDependency = new DefaultResolvedDependency(\n                    moduleRevisionId.getAttribute(DependencyDescriptorFactory.PROJECT_PATH_KEY),\n                    moduleRevisionId.getOrganisation(), moduleRevisionId.getName(), moduleRevisionId.getRevision(),\n                    configuration,\n                    configurations,\n                    getArtifacts(ivyNode));\n        } else {\n            resolvedDependency = new DefaultResolvedDependency(\n                    moduleRevisionId.getOrganisation(), moduleRevisionId.getName(), moduleRevisionId.getRevision(),\n                    configuration,\n                    configurations,\n                    getArtifacts(ivyNode));\n        }\n        for (ResolvedArtifact resolvedArtifact : resolvedDependency.getModuleArtifacts()) {\n            ((DefaultResolvedArtifact) resolvedArtifact).setResolvedDependency(resolvedDependency);\n        }\n        return resolvedDependency;\n    }","commit_id":"bb5f8b219023f206de72e0e4d5e05df154580d77","url":"https://github.com/gradle/gradle"},{"original_method":"public String getVersion() {\n        return getResolvedDependency() == null ? null : getResolvedDependency().getVersion();\n    }","id":16296,"modified_method":"public String getVersion() {\n        return getResolvedDependency() == null ? null : getResolvedDependency().getModuleVersion();\n    }","commit_id":"bb5f8b219023f206de72e0e4d5e05df154580d77","url":"https://github.com/gradle/gradle"},{"original_method":"public String getDependencyName() {\n        return getResolvedDependency() == null ? null : getResolvedDependency().getName();\n    }","id":16297,"modified_method":"public String getDependencyName() {\n        return getResolvedDependency() == null ? null : getResolvedDependency().getModuleName();\n    }","commit_id":"bb5f8b219023f206de72e0e4d5e05df154580d77","url":"https://github.com/gradle/gradle"},{"original_method":"@Test\n    public void setResolvedDependency() {\n        final String someVersion = \"someVersion\";\n        final String someDependencyName = \"someDependencyName\";\n        final ResolvedDependency resolvedDependencyStub = context.mock(ResolvedDependency.class);\n        context.checking(new Expectations() {{\n            allowing(resolvedDependencyStub).getVersion();\n            will(returnValue(someVersion));\n            allowing(resolvedDependencyStub).getName();\n            will(returnValue(someDependencyName));\n        }});\n        DefaultResolvedArtifact resolvedArtifact = createResolvedArtifact(context, \"someName\", \"someType\", \"someExtension\", new File(\"someFile\"));\n        resolvedArtifact.setResolvedDependency(resolvedDependencyStub);\n        assertThat(resolvedArtifact.getResolvedDependency(), sameInstance(resolvedDependencyStub));\n        assertThat(resolvedArtifact.getVersion(), equalTo(someVersion));\n        assertThat(resolvedArtifact.getDependencyName(), equalTo(someDependencyName));\n    }","id":16298,"modified_method":"@Test\n    public void setResolvedDependency() {\n        final String someVersion = \"someVersion\";\n        final String someDependencyName = \"someDependencyName\";\n        final ResolvedDependency resolvedDependencyStub = context.mock(ResolvedDependency.class);\n        context.checking(new Expectations() {{\n            allowing(resolvedDependencyStub).getModuleVersion();\n            will(returnValue(someVersion));\n            allowing(resolvedDependencyStub).getModuleName();\n            will(returnValue(someDependencyName));\n        }});\n        DefaultResolvedArtifact resolvedArtifact = createResolvedArtifact(context, \"someName\", \"someType\", \"someExtension\", new File(\"someFile\"));\n        resolvedArtifact.setResolvedDependency(resolvedDependencyStub);\n        assertThat(resolvedArtifact.getResolvedDependency(), sameInstance(resolvedDependencyStub));\n        assertThat(resolvedArtifact.getVersion(), equalTo(someVersion));\n        assertThat(resolvedArtifact.getDependencyName(), equalTo(someDependencyName));\n    }","commit_id":"bb5f8b219023f206de72e0e4d5e05df154580d77","url":"https://github.com/gradle/gradle"},{"original_method":"public DefaultResolvedDependency(String group, String name, String version, String configuration, Set<String> configurationHierarchy,\n                                     Set<ResolvedArtifact> moduleArtifacts) {\n        this.group = group;\n        this.version = version;\n        this.configurationHierarchy = configurationHierarchy;\n        assert moduleArtifacts != null;\n        this.name = name;\n        this.configuration = configuration;\n        this.moduleArtifacts = moduleArtifacts;\n    }","id":16299,"modified_method":"public DefaultResolvedDependency(String moduleGroup, String moduleName, String moduleVersion, String configuration, Set<String> configurationHierarchy, Set<ResolvedArtifact> moduleArtifacts) {\n        this(moduleGroup + \":\" + moduleName + \":\" + moduleVersion, moduleGroup, moduleName, moduleVersion, configuration, configurationHierarchy, moduleArtifacts);\n    }","commit_id":"bb5f8b219023f206de72e0e4d5e05df154580d77","url":"https://github.com/gradle/gradle"},{"original_method":"public String getGroup() {\n        return group;\n    }","id":16300,"modified_method":"public String getModuleGroup() {\n        return moduleGroup;\n    }","commit_id":"bb5f8b219023f206de72e0e4d5e05df154580d77","url":"https://github.com/gradle/gradle"},{"original_method":"@Override\n    public int hashCode() {\n        int result = configuration != null ? configuration.hashCode() : 0;\n        result = 31 * result + (name != null ? name.hashCode() : 0);\n        return result;\n    }","id":16301,"modified_method":"@Override\n    public int hashCode() {\n        return name.hashCode();\n    }","commit_id":"bb5f8b219023f206de72e0e4d5e05df154580d77","url":"https://github.com/gradle/gradle"},{"original_method":"@Override\n    public boolean equals(Object o) {\n        if (this == o) return true;\n        if (o == null || getClass() != o.getClass()) return false;\n\n        DefaultResolvedDependency that = (DefaultResolvedDependency) o;\n\n        if (configuration != null ? !configuration.equals(that.configuration) : that.configuration != null)\n            return false;\n        if (name != null ? !name.equals(that.name) : that.name != null) return false;\n\n        return true;\n    }","id":16302,"modified_method":"@Override\n    public boolean equals(Object o) {\n        if (this == o) return true;\n        if (o == null || getClass() != o.getClass()) return false;\n\n        DefaultResolvedDependency that = (DefaultResolvedDependency) o;\n\n        if (!name.equals(that.name)) return false;\n\n        return true;\n    }","commit_id":"bb5f8b219023f206de72e0e4d5e05df154580d77","url":"https://github.com/gradle/gradle"},{"original_method":"public String getVersion() {\n        return version;\n    }","id":16303,"modified_method":"public String getModuleVersion() {\n        return moduleVersion;\n    }","commit_id":"bb5f8b219023f206de72e0e4d5e05df154580d77","url":"https://github.com/gradle/gradle"},{"original_method":"@Test\n    public void init() {\n        String someGroup = \"someGroup\";\n        String someName = \"someName\";\n        String someVersion = \"someVersion\";\n        String someConfiguration = \"someConfiguration\";\n        Set<ResolvedArtifact> someArtifacts = WrapUtil.<ResolvedArtifact>toSet(createArtifact(\"someName\"));\n        DefaultResolvedDependency resolvedDependency = new DefaultResolvedDependency(someGroup, someName, someVersion, someConfiguration, SOME_CONFIGURATION_HIERARCHY, someArtifacts);\n        assertThat(resolvedDependency.getGroup(), equalTo(someGroup));\n        assertThat(resolvedDependency.getName(), equalTo(someName));\n        assertThat(resolvedDependency.getVersion(), equalTo(someVersion));\n        assertThat(resolvedDependency.getConfiguration(), equalTo(someConfiguration));\n        assertThat(resolvedDependency.getModuleArtifacts(), equalTo(someArtifacts));\n        assertThat(resolvedDependency.getConfigurationHierarchy(), equalTo(SOME_CONFIGURATION_HIERARCHY));\n        assertThat(resolvedDependency.getChildren(), equalTo(Collections.<ResolvedDependency>emptySet()));\n        assertThat(resolvedDependency.getParents(), equalTo(Collections.<ResolvedDependency>emptySet()));\n    }","id":16304,"modified_method":"@Test\n    public void init() {\n        String someGroup = \"someGroup\";\n        String someName = \"someName\";\n        String someVersion = \"someVersion\";\n        String someConfiguration = \"someConfiguration\";\n        Set<ResolvedArtifact> someArtifacts = WrapUtil.toSet(createArtifact(\"someName\"));\n        DefaultResolvedDependency resolvedDependency = new DefaultResolvedDependency(someGroup, someName, someVersion, someConfiguration, SOME_CONFIGURATION_HIERARCHY, someArtifacts);\n        assertThat(resolvedDependency.getName(), equalTo(someGroup + \":\" + someName + \":\" + someVersion));\n        assertThat(resolvedDependency.getModuleGroup(), equalTo(someGroup));\n        assertThat(resolvedDependency.getModuleName(), equalTo(someName));\n        assertThat(resolvedDependency.getModuleVersion(), equalTo(someVersion));\n        assertThat(resolvedDependency.getConfiguration(), equalTo(someConfiguration));\n        assertThat(resolvedDependency.getModuleArtifacts(), equalTo(someArtifacts));\n        assertThat(resolvedDependency.getConfigurationHierarchy(), equalTo(SOME_CONFIGURATION_HIERARCHY));\n        assertThat(resolvedDependency.getChildren(), equalTo(Collections.<ResolvedDependency>emptySet()));\n        assertThat(resolvedDependency.getParents(), equalTo(Collections.<ResolvedDependency>emptySet()));\n    }","commit_id":"bb5f8b219023f206de72e0e4d5e05df154580d77","url":"https://github.com/gradle/gradle"},{"original_method":"public List<KeySlice> get_range_slice(String keyspace, ColumnParent column_parent, SlicePredicate predicate, String start_key, String finish_key, int maxRows, ConsistencyLevel consistency_level)\n    throws InvalidRequestException, UnavailableException, TException, TimedOutException\n    {\n        if (logger.isDebugEnabled())\n            logger.debug(\"range_slice\");\n\n        checkLoginDone();\n\n        ThriftValidation.validateColumnParent(keyspace, column_parent);\n        ThriftValidation.validatePredicate(keyspace, column_parent, predicate);\n        if (!StorageService.getPartitioner().preservesOrder())\n        {\n            throw new InvalidRequestException(\"range queries may only be performed against an order-preserving partitioner\");\n        }\n        if (maxRows <= 0)\n        {\n            throw new InvalidRequestException(\"maxRows must be positive\");\n        }\n\n        List<Pair<String, ColumnFamily>> rows;\n        try\n        {\n            DecoratedKey startKey = StorageService.getPartitioner().decorateKey(start_key);\n            DecoratedKey finishKey = StorageService.getPartitioner().decorateKey(finish_key);\n            rows = StorageProxy.getRangeSlice(new RangeSliceCommand(keyspace, column_parent, predicate, startKey, finishKey, maxRows), consistency_level);\n            assert rows != null;\n        }\n        catch (TimeoutException e)\n        {\n        \tthrow new TimedOutException();\n        }\n        catch (IOException e)\n        {\n            throw new RuntimeException(e);\n        }\n\n        List<KeySlice> keySlices = new ArrayList<KeySlice>(rows.size());\n        boolean reversed = predicate.slice_range != null && predicate.slice_range.reversed;\n        for (Pair<String, ColumnFamily> row : rows)\n        {\n            List<ColumnOrSuperColumn> thriftifiedColumns = thriftifyColumnFamily(row.right, column_parent.super_column != null, reversed);\n            keySlices.add(new KeySlice(row.left, thriftifiedColumns));\n        }\n\n        return keySlices;\n    }","id":16305,"modified_method":"public List<KeySlice> get_range_slice(String keyspace, ColumnParent column_parent, SlicePredicate predicate, String start_key, String finish_key, int maxRows, ConsistencyLevel consistency_level)\n    throws InvalidRequestException, UnavailableException, TException, TimedOutException\n    {\n        if (logger.isDebugEnabled())\n            logger.debug(\"range_slice\");\n\n        checkLoginDone();\n\n        ThriftValidation.validateColumnParent(keyspace, column_parent);\n        ThriftValidation.validatePredicate(keyspace, column_parent, predicate);\n        if (maxRows <= 0)\n        {\n            throw new InvalidRequestException(\"maxRows must be positive\");\n        }\n\n        List<Pair<String, ColumnFamily>> rows;\n        try\n        {\n            DecoratedKey startKey = StorageService.getPartitioner().decorateKey(start_key);\n            DecoratedKey finishKey = StorageService.getPartitioner().decorateKey(finish_key);\n            rows = StorageProxy.getRangeSlice(new RangeSliceCommand(keyspace, column_parent, predicate, startKey, finishKey, maxRows), consistency_level);\n            assert rows != null;\n        }\n        catch (TimeoutException e)\n        {\n        \tthrow new TimedOutException();\n        }\n        catch (IOException e)\n        {\n            throw new RuntimeException(e);\n        }\n\n        List<KeySlice> keySlices = new ArrayList<KeySlice>(rows.size());\n        boolean reversed = predicate.slice_range != null && predicate.slice_range.reversed;\n        for (Pair<String, ColumnFamily> row : rows)\n        {\n            List<ColumnOrSuperColumn> thriftifiedColumns = thriftifyColumnFamily(row.right, column_parent.super_column != null, reversed);\n            keySlices.add(new KeySlice(row.left, thriftifiedColumns));\n        }\n\n        return keySlices;\n    }","commit_id":"d6c2bb0907efd2514a03d117ac1cc4fa60d3bfc4","url":"https://github.com/apache/cassandra"},{"original_method":"public BytesToken getToken(String key)\n    {\n        return new BytesToken(collator.getCollationKey(key).toByteArray());\n    }","id":16306,"modified_method":"public BytesToken getToken(String key)\n    {\n        if (key.isEmpty())\n            return MINIMUM;\n        return new BytesToken(collator.getCollationKey(key).toByteArray());\n    }","commit_id":"d6c2bb0907efd2514a03d117ac1cc4fa60d3bfc4","url":"https://github.com/apache/cassandra"},{"original_method":"@Test\n    public void testCompactions() throws IOException, ExecutionException, InterruptedException\n    {\n        CompactionManager.instance.disableAutoCompaction();\n\n        // this test does enough rows to force multiple block indexes to be used\n        Table table = Table.open(TABLE1);\n        ColumnFamilyStore store = table.getColumnFamilyStore(\"Standard1\");\n        DecoratedKey emptyKey = StorageService.getPartitioner().decorateKey(\"\");\n\n        final int ROWS_PER_SSTABLE = 10;\n        Set<String> inserted = new HashSet<String>();\n        for (int j = 0; j < (SSTableReader.indexInterval() * 3) / ROWS_PER_SSTABLE; j++) {\n            for (int i = 0; i < ROWS_PER_SSTABLE; i++) {\n                String key = String.valueOf(i % 2);\n                RowMutation rm = new RowMutation(TABLE1, key);\n                rm.add(new QueryPath(\"Standard1\", null, String.valueOf(i / 2).getBytes()), new byte[0], j * ROWS_PER_SSTABLE + i);\n                rm.apply();\n                inserted.add(key);\n            }\n            store.forceBlockingFlush();\n            assertEquals(inserted.size(), table.getColumnFamilyStore(\"Standard1\").getKeyRange(emptyKey, emptyKey, 10000).keys.size());\n        }\n        while (true)\n        {\n            Future<Integer> ft = CompactionManager.instance.submitMinorIfNeeded(store);\n            if (ft.get() == 0)\n                break;\n        }\n        if (store.getSSTables().size() > 1)\n        {\n            CompactionManager.instance.submitMajor(store).get();\n        }\n        assertEquals(inserted.size(), table.getColumnFamilyStore(\"Standard1\").getKeyRange(emptyKey, emptyKey, 10000).keys.size());\n    }","id":16307,"modified_method":"@Test\n    public void testCompactions() throws IOException, ExecutionException, InterruptedException\n    {\n        CompactionManager.instance.disableAutoCompaction();\n\n        // this test does enough rows to force multiple block indexes to be used\n        Table table = Table.open(TABLE1);\n        ColumnFamilyStore store = table.getColumnFamilyStore(\"Standard1\");\n        DecoratedKey emptyKey = StorageService.getPartitioner().decorateKey(\"\");\n        assert emptyKey.token.equals(StorageService.getPartitioner().getMinimumToken());\n\n        final int ROWS_PER_SSTABLE = 10;\n        Set<String> inserted = new HashSet<String>();\n        for (int j = 0; j < (SSTableReader.indexInterval() * 3) / ROWS_PER_SSTABLE; j++) {\n            for (int i = 0; i < ROWS_PER_SSTABLE; i++) {\n                String key = String.valueOf(i % 2);\n                RowMutation rm = new RowMutation(TABLE1, key);\n                rm.add(new QueryPath(\"Standard1\", null, String.valueOf(i / 2).getBytes()), new byte[0], j * ROWS_PER_SSTABLE + i);\n                rm.apply();\n                inserted.add(key);\n            }\n            store.forceBlockingFlush();\n            assertEquals(inserted.size(), table.getColumnFamilyStore(\"Standard1\").getKeyRange(emptyKey, emptyKey, 10000).keys.size());\n        }\n        while (true)\n        {\n            Future<Integer> ft = CompactionManager.instance.submitMinorIfNeeded(store);\n            if (ft.get() == 0)\n                break;\n        }\n        if (store.getSSTables().size() > 1)\n        {\n            CompactionManager.instance.submitMajor(store).get();\n        }\n        assertEquals(inserted.size(), table.getColumnFamilyStore(\"Standard1\").getKeyRange(emptyKey, emptyKey, 10000).keys.size());\n    }","commit_id":"d6c2bb0907efd2514a03d117ac1cc4fa60d3bfc4","url":"https://github.com/apache/cassandra"},{"original_method":"@Override\n    public int hashCode()\n    {\n        final int prime = 31;\n        int result = 1;\n        result = prime * result + ((key == null) ? 0 : key.hashCode());\n        result = prime * result + ((token == null) ? 0 : token.hashCode());\n        return result;\n    }","id":16308,"modified_method":"@Override\n    public int hashCode()\n    {\n        return token.hashCode();\n    }","commit_id":"d6c2bb0907efd2514a03d117ac1cc4fa60d3bfc4","url":"https://github.com/apache/cassandra"},{"original_method":"public boolean isEmpty()\n    {\n        return key != null && key.isEmpty();\n    }","id":16309,"modified_method":"public boolean isEmpty()\n    {\n        return token.equals(partitioner.getMinimumToken());\n    }","commit_id":"d6c2bb0907efd2514a03d117ac1cc4fa60d3bfc4","url":"https://github.com/apache/cassandra"},{"original_method":"public BigIntegerToken getToken(String key)\n    {\n        return new BigIntegerToken(FBUtilities.hash(key));\n    }","id":16310,"modified_method":"public BigIntegerToken getToken(String key)\n    {\n        if (key.isEmpty())\n            return MINIMUM;\n        return new BigIntegerToken(FBUtilities.hash(key));\n    }","commit_id":"d6c2bb0907efd2514a03d117ac1cc4fa60d3bfc4","url":"https://github.com/apache/cassandra"},{"original_method":"protected void performBoottime(NewOperationContext context, ModelNode operation, ModelNode model, ServiceVerificationHandler verificationHandler, List<ServiceController<?>> newControllers) {\n        context.addStep(new AbstractDeploymentChainStep() {\n            protected void execute(DeploymentProcessorTarget processorTarget) {\n                    // add the metadata parser deployment processor\n                    processorTarget.addDeploymentProcessor(Phase.PARSE, Phase.PARSE_EJB_DEPLOYMENT, new EjbJarParsingDeploymentUnitProcessor());\n                    processorTarget.addDeploymentProcessor(Phase.PARSE, Phase.PARSE_EJB_CREATE_COMPONENT_DESCRIPTIONS, new EJBComponentDescriptionFactory());\n                    processorTarget.addDeploymentProcessor(Phase.PARSE, Phase.PARSE_EJB_SESSION_BEAN_DD, new SessionBeanXmlDescriptorProcessor());\n                    processorTarget.addDeploymentProcessor(Phase.PARSE, Phase.PARSE_EJB_MDB_DD, new MessageDrivenBeanXmlDescriptorProcessor());\n                    //processorTarget.addDeploymentProcessor(Phase.PARSE, Phase.PARSE_EJB_ANNOTATION, new EjbAnnotationProcessor());\n                    //processorTarget.addDeploymentProcessor(Phase.PARSE, Phase.PARSE_MESSAGE_DRIVEN_ANNOTATION, new MessageDrivenAnnotationProcessor());\n                    // Process @DependsOn after the @Singletons have been registered.\n                    processorTarget.addDeploymentProcessor(Phase.PARSE, Phase.PARSE_EJB_CONTEXT_BINDING, new EjbContextJndiBindingProcessor());\n                    processorTarget.addDeploymentProcessor(Phase.PARSE, Phase.PARSE_EJB_TIMERSERVICE_BINDING, new TimerServiceJndiBindingProcessor());\n                    processorTarget.addDeploymentProcessor(Phase.PARSE, Phase.PARSE_EJB_TRANSACTION_MANAGEMENT, new TransactionManagementAnnotationProcessor());\n                    processorTarget.addDeploymentProcessor(Phase.PARSE, Phase.PARSE_EJB_BUSINESS_VIEW_ANNOTATION, new BusinessViewAnnotationProcessor());\n                    processorTarget.addDeploymentProcessor(Phase.PARSE, Phase.PARSE_EJB_INJECTION_ANNOTATION, new EjbResourceInjectionAnnotationProcessor());\n                    processorTarget.addDeploymentProcessor(Phase.PARSE, Phase.PARSE_EJB_STARTUP_ANNOTATION, new StartupAnnotationProcessor());\n                    processorTarget.addDeploymentProcessor(Phase.PARSE, Phase.PARSE_EJB_CONCURRENCY_MANAGEMENT_ANNOTATION, new ConcurrencyManagementAnnotationProcessor());\n                    processorTarget.addDeploymentProcessor(Phase.PARSE, Phase.PARSE_EJB_LOCK_ANNOTATION, new LockAnnotationProcessor());\n                    processorTarget.addDeploymentProcessor(Phase.PARSE, Phase.PARSE_EJB_DECLARE_ROLES_ANNOTATION, new DeclareRolesProcessor());\n                    processorTarget.addDeploymentProcessor(Phase.PARSE, Phase.PARSE_EJB_RUN_AS_ANNOTATION, new RunAsProcessor());\n                    processorTarget.addDeploymentProcessor(Phase.PARSE, Phase.PARSE_EJB_DENY_ALL_ANNOTATION, new DenyAllProcessor());\n                    processorTarget.addDeploymentProcessor(Phase.PARSE, Phase.PARSE_EJB_ROLES_ALLOWED_ANNOTATION, new RolesAllowedProcessor());\n                    processorTarget.addDeploymentProcessor(Phase.PARSE, Phase.PARSE_EJB_STATEFUL_TIMEOUT_ANNOTATION, new StatefulTimeoutAnnotationProcessor());\n                    processorTarget.addDeploymentProcessor(Phase.PARSE, Phase.PARSE_EJB_ACCESS_TIMEOUT_ANNOTATION, new AccessTimeoutAnnotationProcessor());\n                    processorTarget.addDeploymentProcessor(Phase.PARSE, Phase.PARSE_EJB_TRANSACTION_ATTR_ANNOTATION, new TransactionAttributeAnnotationProcessor());\n                    processorTarget.addDeploymentProcessor(Phase.PARSE, Phase.PARSE_EJB_SESSION_SYNCHRONIZATION, new SessionSynchronizationProcessor());\n                    processorTarget.addDeploymentProcessor(Phase.PARSE, Phase.PARSE_EJB_RESOURCE_ADAPTER_ANNOTATION, new ResourceAdapterAnnotationProcessor());\n                    processorTarget.addDeploymentProcessor(Phase.PARSE, Phase.PARSE_EJB_ASYNCHRONOUS_ANNOTATION, new AsynchronousAnnotationProcessor());\n                    processorTarget.addDeploymentProcessor(Phase.PARSE, Phase.PARSE_EJB_APPLICATION_EXCEPTION_ANNOTATION, new ApplicationExceptionAnnotationProcessor());\n                    processorTarget.addDeploymentProcessor(Phase.PARSE, Phase.PARSE_REMOVE_METHOD_ANNOTAION, new RemoveAnnotationProcessor());\n                    processorTarget.addDeploymentProcessor(Phase.PARSE, Phase.PARSE_EJB_DD_INTERCEPTORS, new InterceptorClassDeploymentDescriptorProcessor());\n                    processorTarget.addDeploymentProcessor(Phase.PARSE, Phase.PARSE_EJB_ASSEMBLY_DESC_DD, new AssemblyDescriptorProcessor());\n                    processorTarget.addDeploymentProcessor(Phase.PARSE, Phase.PARSE_EJB_SECURITY_ROLE_REF_DD, new SecurityRoleRefDDProcessor());\n                    processorTarget.addDeploymentProcessor(Phase.PARSE, Phase.PARSE_EJB_SECURITY_IDENTITY_DD, new SecurityIdentityDDProcessor());\n                    processorTarget.addDeploymentProcessor(Phase.PARSE, Phase.PARSE_EJB_SECURITY_DOMAIN_ANNOTATION, new SecurityDomainProcessor());\n                    processorTarget.addDeploymentProcessor(Phase.PARSE, Phase.PARSE_EJB_PERMIT_ALL_ANNOTATION, new PermitAllProcessor());\n\n\n                    processorTarget.addDeploymentProcessor(Phase.DEPENDENCIES, Phase.DEPENDENCIES_EJB, new EjbDependencyDeploymentUnitProcessor());\n\n                    processorTarget.addDeploymentProcessor(Phase.POST_MODULE, Phase.POST_MODULE_EJB_IMPLICIT_NO_INTERFACE_VIEW, new ImplicitLocalViewProcessor());\n                    processorTarget.addDeploymentProcessor(Phase.POST_MODULE, Phase.POST_MODULE_EJB_JNDI_BINDINGS, new EjbJndiBindingsDeploymentUnitProcessor());\n                    processorTarget.addDeploymentProcessor(Phase.POST_MODULE, Phase.POST_MODULE_EJB_MODULE_CONFIGURATION, new EjbJarConfigurationProcessor());\n                    processorTarget.addDeploymentProcessor(Phase.POST_MODULE, Phase.POST_MODULE_EJB_DD_INTERCEPTORS, new DeploymentDescriptorInterceptorBindingsProcessor());\n                    processorTarget.addDeploymentProcessor(Phase.POST_MODULE, Phase.POST_MODULE_EJB_DD_CONCURRENCY, new EjbConcurrencyProcessor());\n                    processorTarget.addDeploymentProcessor(Phase.POST_MODULE, Phase.POST_MODULE_EJB_DD_METHOD_RESOLUTION, new DeploymentDescriptorMethodProcessor());\n                    processorTarget.addDeploymentProcessor(Phase.POST_MODULE, Phase.POST_MODULE_EJB_DD_REMOVE_METHOD, new RemoveMethodDeploymentDescriptorProcessor());\n                    processorTarget.addDeploymentProcessor(Phase.POST_MODULE, Phase.POST_MODULE_EJB_EXCLUDE_LIST_DD, new ExcludeListDDProcessor());\n                    processorTarget.addDeploymentProcessor(Phase.POST_MODULE, Phase.POST_MODULE_EJB_METHOD_PERMISSION_DD, new MethodPermissionDDProcessor());\n                    processorTarget.addDeploymentProcessor(Phase.POST_MODULE, Phase.POST_MODULE_EJB_REF, new EjbRefProcessor());\n\n                    processorTarget.addDeploymentProcessor(Phase.INSTALL, Phase.INSTALL_DEPENDS_ON_ANNOTATION, new EjbDependsOnAnnotationProcessor());\n\n\n                    // add the real deployment processor\n                    // TODO: add the proper deployment processors\n                    // processorTarget.addDeploymentProcessor(processor, priority);\n            }\n        }, NewOperationContext.Stage.RUNTIME);\n\n        final ServiceTarget serviceTarget = context.getServiceTarget();\n        final EJBUtilities utilities = new EJBUtilities();\n        newControllers.add(serviceTarget.addService(EJBUtilities.SERVICE_NAME, utilities)\n                .addDependency(SimpleSecurityManagerService.SERVICE_NAME, SimpleSecurityManager.class, utilities.getSecurityManagerInjector())\n                .addDependency(TxnServices.JBOSS_TXN_TRANSACTION_MANAGER, TransactionManager.class, utilities.getTransactionManagerInjector())\n                .addDependency(TxnServices.JBOSS_TXN_SYNCHRONIZATION_REGISTRY, TransactionSynchronizationRegistry.class, utilities.getTransactionSynchronizationRegistryInjector())\n                .addDependency(TxnServices.JBOSS_TXN_USER_TRANSACTION, UserTransaction.class, utilities.getUserTransactionInjector())\n                .addListener(verificationHandler)\n                .setInitialMode(ServiceController.Mode.ACTIVE)\n                .install());\n\n    }","id":16311,"modified_method":"protected void performBoottime(NewOperationContext context, ModelNode operation, ModelNode model, ServiceVerificationHandler verificationHandler, List<ServiceController<?>> newControllers) {\n        context.addStep(new AbstractDeploymentChainStep() {\n            protected void execute(DeploymentProcessorTarget processorTarget) {\n                    // add the metadata parser deployment processor\n                    processorTarget.addDeploymentProcessor(Phase.PARSE, Phase.PARSE_EJB_DEPLOYMENT, new EjbJarParsingDeploymentUnitProcessor());\n                    processorTarget.addDeploymentProcessor(Phase.PARSE, Phase.PARSE_EJB_CREATE_COMPONENT_DESCRIPTIONS, new EJBComponentDescriptionFactory());\n                    processorTarget.addDeploymentProcessor(Phase.PARSE, Phase.PARSE_EJB_SESSION_BEAN_DD, new SessionBeanXmlDescriptorProcessor());\n                    processorTarget.addDeploymentProcessor(Phase.PARSE, Phase.PARSE_EJB_MDB_DD, new MessageDrivenBeanXmlDescriptorProcessor());\n                    //processorTarget.addDeploymentProcessor(Phase.PARSE, Phase.PARSE_EJB_ANNOTATION, new EjbAnnotationProcessor());\n                    //processorTarget.addDeploymentProcessor(Phase.PARSE, Phase.PARSE_MESSAGE_DRIVEN_ANNOTATION, new MessageDrivenAnnotationProcessor());\n                    // Process @DependsOn after the @Singletons have been registered.\n                    processorTarget.addDeploymentProcessor(Phase.PARSE, Phase.PARSE_EJB_CONTEXT_BINDING, new EjbContextJndiBindingProcessor());\n                    processorTarget.addDeploymentProcessor(Phase.PARSE, Phase.PARSE_EJB_TIMERSERVICE_BINDING, new TimerServiceJndiBindingProcessor());\n                    processorTarget.addDeploymentProcessor(Phase.PARSE, Phase.PARSE_EJB_TRANSACTION_MANAGEMENT, new TransactionManagementAnnotationProcessor());\n                    processorTarget.addDeploymentProcessor(Phase.PARSE, Phase.PARSE_EJB_BUSINESS_VIEW_ANNOTATION, new BusinessViewAnnotationProcessor());\n                    processorTarget.addDeploymentProcessor(Phase.PARSE, Phase.PARSE_EJB_INJECTION_ANNOTATION, new EjbResourceInjectionAnnotationProcessor());\n                    processorTarget.addDeploymentProcessor(Phase.PARSE, Phase.PARSE_EJB_STARTUP_ANNOTATION, new StartupAnnotationProcessor());\n                    processorTarget.addDeploymentProcessor(Phase.PARSE, Phase.PARSE_EJB_CONCURRENCY_MANAGEMENT_ANNOTATION, new ConcurrencyManagementAnnotationProcessor());\n                    processorTarget.addDeploymentProcessor(Phase.PARSE, Phase.PARSE_EJB_LOCK_ANNOTATION, new LockAnnotationProcessor());\n                    processorTarget.addDeploymentProcessor(Phase.PARSE, Phase.PARSE_EJB_DECLARE_ROLES_ANNOTATION, new DeclareRolesProcessor());\n                    processorTarget.addDeploymentProcessor(Phase.PARSE, Phase.PARSE_EJB_RUN_AS_ANNOTATION, new RunAsProcessor());\n                    processorTarget.addDeploymentProcessor(Phase.PARSE, Phase.PARSE_EJB_DENY_ALL_ANNOTATION, new DenyAllProcessor());\n                    processorTarget.addDeploymentProcessor(Phase.PARSE, Phase.PARSE_EJB_ROLES_ALLOWED_ANNOTATION, new RolesAllowedProcessor());\n                    processorTarget.addDeploymentProcessor(Phase.PARSE, Phase.PARSE_EJB_STATEFUL_TIMEOUT_ANNOTATION, new StatefulTimeoutAnnotationProcessor());\n                    processorTarget.addDeploymentProcessor(Phase.PARSE, Phase.PARSE_EJB_ACCESS_TIMEOUT_ANNOTATION, new AccessTimeoutAnnotationProcessor());\n                    processorTarget.addDeploymentProcessor(Phase.PARSE, Phase.PARSE_EJB_TRANSACTION_ATTR_ANNOTATION, new TransactionAttributeAnnotationProcessor());\n                    processorTarget.addDeploymentProcessor(Phase.PARSE, Phase.PARSE_EJB_SESSION_SYNCHRONIZATION, new SessionSynchronizationProcessor());\n                    processorTarget.addDeploymentProcessor(Phase.PARSE, Phase.PARSE_EJB_RESOURCE_ADAPTER_ANNOTATION, new ResourceAdapterAnnotationProcessor());\n                    processorTarget.addDeploymentProcessor(Phase.PARSE, Phase.PARSE_EJB_ASYNCHRONOUS_ANNOTATION, new AsynchronousAnnotationProcessor());\n                    processorTarget.addDeploymentProcessor(Phase.PARSE, Phase.PARSE_EJB_APPLICATION_EXCEPTION_ANNOTATION, new ApplicationExceptionAnnotationProcessor());\n                    processorTarget.addDeploymentProcessor(Phase.PARSE, Phase.PARSE_REMOVE_METHOD_ANNOTAION, new RemoveAnnotationProcessor());\n                    processorTarget.addDeploymentProcessor(Phase.PARSE, Phase.PARSE_EJB_DD_INTERCEPTORS, new InterceptorClassDeploymentDescriptorProcessor());\n                    processorTarget.addDeploymentProcessor(Phase.PARSE, Phase.PARSE_EJB_ASSEMBLY_DESC_DD, new AssemblyDescriptorProcessor());\n                    processorTarget.addDeploymentProcessor(Phase.PARSE, Phase.PARSE_EJB_SECURITY_ROLE_REF_DD, new SecurityRoleRefDDProcessor());\n                    processorTarget.addDeploymentProcessor(Phase.PARSE, Phase.PARSE_EJB_SECURITY_IDENTITY_DD, new SecurityIdentityDDProcessor());\n                    processorTarget.addDeploymentProcessor(Phase.PARSE, Phase.PARSE_EJB_SECURITY_DOMAIN_ANNOTATION, new SecurityDomainProcessor());\n                    processorTarget.addDeploymentProcessor(Phase.PARSE, Phase.PARSE_EJB_PERMIT_ALL_ANNOTATION, new PermitAllProcessor());\n\n\n                    processorTarget.addDeploymentProcessor(Phase.DEPENDENCIES, Phase.DEPENDENCIES_EJB, new EjbDependencyDeploymentUnitProcessor());\n\n                    processorTarget.addDeploymentProcessor(Phase.POST_MODULE, Phase.POST_MODULE_EJB_IMPLICIT_NO_INTERFACE_VIEW, new ImplicitLocalViewProcessor());\n                    processorTarget.addDeploymentProcessor(Phase.POST_MODULE, Phase.POST_MODULE_EJB_JNDI_BINDINGS, new EjbJndiBindingsDeploymentUnitProcessor());\n                    processorTarget.addDeploymentProcessor(Phase.POST_MODULE, Phase.POST_MODULE_EJB_MODULE_CONFIGURATION, new EjbJarConfigurationProcessor());\n                    processorTarget.addDeploymentProcessor(Phase.POST_MODULE, Phase.POST_MODULE_EJB_DD_INTERCEPTORS, new DeploymentDescriptorInterceptorBindingsProcessor());\n                    processorTarget.addDeploymentProcessor(Phase.POST_MODULE, Phase.POST_MODULE_EJB_DD_CONCURRENCY, new EjbConcurrencyProcessor());\n                    processorTarget.addDeploymentProcessor(Phase.POST_MODULE, Phase.POST_MODULE_EJB_DD_METHOD_RESOLUTION, new DeploymentDescriptorMethodProcessor());\n                    processorTarget.addDeploymentProcessor(Phase.POST_MODULE, Phase.POST_MODULE_EJB_DD_REMOVE_METHOD, new RemoveMethodDeploymentDescriptorProcessor());\n                    processorTarget.addDeploymentProcessor(Phase.POST_MODULE, Phase.POST_MODULE_EJB_EXCLUDE_LIST_DD, new ExcludeListDDProcessor());\n                    processorTarget.addDeploymentProcessor(Phase.POST_MODULE, Phase.POST_MODULE_EJB_METHOD_PERMISSION_DD, new MethodPermissionDDProcessor());\n                    processorTarget.addDeploymentProcessor(Phase.POST_MODULE, Phase.POST_MODULE_EJB_REF, new EjbRefProcessor());\n                    processorTarget.addDeploymentProcessor(Phase.POST_MODULE, Phase.POST_MODULE_RESOLVE_EJB_INJECTIONS, new EjbInjectionResolutionProcessor());\n\n                    processorTarget.addDeploymentProcessor(Phase.INSTALL, Phase.INSTALL_DEPENDS_ON_ANNOTATION, new EjbDependsOnAnnotationProcessor());\n\n\n                    // add the real deployment processor\n                    // TODO: add the proper deployment processors\n                    // processorTarget.addDeploymentProcessor(processor, priority);\n            }\n        }, NewOperationContext.Stage.RUNTIME);\n\n        final ServiceTarget serviceTarget = context.getServiceTarget();\n        final EJBUtilities utilities = new EJBUtilities();\n        newControllers.add(serviceTarget.addService(EJBUtilities.SERVICE_NAME, utilities)\n                .addDependency(SimpleSecurityManagerService.SERVICE_NAME, SimpleSecurityManager.class, utilities.getSecurityManagerInjector())\n                .addDependency(TxnServices.JBOSS_TXN_TRANSACTION_MANAGER, TransactionManager.class, utilities.getTransactionManagerInjector())\n                .addDependency(TxnServices.JBOSS_TXN_SYNCHRONIZATION_REGISTRY, TransactionSynchronizationRegistry.class, utilities.getTransactionSynchronizationRegistryInjector())\n                .addDependency(TxnServices.JBOSS_TXN_USER_TRANSACTION, UserTransaction.class, utilities.getUserTransactionInjector())\n                .addListener(verificationHandler)\n                .setInitialMode(ServiceController.Mode.ACTIVE)\n                .install());\n\n    }","commit_id":"4ad40a6a69c40ecca2e591160a8882191e2621fc","url":"https://github.com/wildfly/wildfly"},{"original_method":"public boolean equals(Object o) {\n        if (this == o)\n            return true;\n\n        if (!(o instanceof EjbInjectionSource))\n            return false;\n\n        EjbInjectionSource other = (EjbInjectionSource)o;\n        return eq(beanName, other.beanName) && eq(typeName, other.typeName) && eq(resolvedViewName, other.resolvedViewName);\n    }","id":16312,"modified_method":"public boolean equals(Object o) {\n        if (this == o)\n            return true;\n\n        if (!(o instanceof EjbInjectionSource))\n            return false;\n        if(error != null) {\n            //we can't do a real equals comparison in this case, so throw the original error\n            throw new RuntimeException(error);\n        }\n        if(resolvedViewName == null) {\n            throw new RuntimeException(\"Error equals() cannot be called before resolve()\");\n        }\n\n        EjbInjectionSource other = (EjbInjectionSource) o;\n        return eq(typeName, other.typeName) && eq(resolvedViewName, other.resolvedViewName);\n    }","commit_id":"4ad40a6a69c40ecca2e591160a8882191e2621fc","url":"https://github.com/wildfly/wildfly"},{"original_method":"public void getResourceValue(final ResolutionContext resolutionContext, final ServiceBuilder<?> serviceBuilder, final DeploymentPhaseContext phaseContext, final Injector<ManagedReferenceFactory> injector) throws DeploymentUnitProcessingException {\n        final Set<ViewDescription> componentsForViewName = getViews(phaseContext);\n        if (componentsForViewName.isEmpty()) {\n            throw new DeploymentUnitProcessingException(\"No component found for type '\" + typeName + \"' with name \" + beanName);\n        }\n        if (componentsForViewName.size() > 1) {\n            throw new DeploymentUnitProcessingException(\"More than 1 component found for type '\" + typeName + \"' and bean name \" + beanName);\n        }\n        ViewDescription description = componentsForViewName.iterator().next();\n        ServiceName serviceName = description.getServiceName();\n        resolvedViewName = serviceName;\n        serviceBuilder.addDependency(serviceName, ComponentView.class, new ViewManagedReferenceFactory.Injector(injector));\n\n    }","id":16313,"modified_method":"public void getResourceValue(final ResolutionContext resolutionContext, final ServiceBuilder<?> serviceBuilder, final DeploymentPhaseContext phaseContext, final Injector<ManagedReferenceFactory> injector) throws DeploymentUnitProcessingException {\n        if(error != null) {\n            throw new DeploymentUnitProcessingException(error);\n        }\n        serviceBuilder.addDependency(resolvedViewName, ComponentView.class, new ViewManagedReferenceFactory.Injector(injector));\n\n    }","commit_id":"4ad40a6a69c40ecca2e591160a8882191e2621fc","url":"https://github.com/wildfly/wildfly"},{"original_method":"public int hashCode() {\n        int result = beanName != null ? beanName.hashCode() : 0;\n        result = 31 * result + (typeName != null ? typeName.hashCode() : 0);\n        result = 31 * result + (resolvedViewName != null ? resolvedViewName.hashCode() : 0);\n        return result;\n    }","id":16314,"modified_method":"public int hashCode() {\n        return typeName.hashCode();\n    }","commit_id":"4ad40a6a69c40ecca2e591160a8882191e2621fc","url":"https://github.com/wildfly/wildfly"},{"original_method":"/**\n     * Resolves ejb-ref and ejb-local-ref elements\n     *\n     * @param deploymentUnit\n     * @param environment               The environment to resolve the elements for\n     * @param classLoader               The deployment class loader\n     * @param deploymentReflectionIndex The reflection index\n     * @return The bindings for the environment entries\n     */\n    protected List<BindingConfiguration> processDescriptorEntries(DeploymentUnit deploymentUnit, DeploymentDescriptorEnvironment environment, EEModuleDescription moduleDescription, ComponentDescription componentDescription, ClassLoader classLoader, DeploymentReflectionIndex deploymentReflectionIndex) throws DeploymentUnitProcessingException {\n        EJBLocalReferencesMetaData ejbLocalRefs = environment.getEnvironment().getEjbLocalReferences();\n        List<BindingConfiguration> bindingDescriptions = new ArrayList<BindingConfiguration>();\n        //TODO: this needs a lot more work\n        if (ejbLocalRefs != null) {\n            for (EJBLocalReferenceMetaData ejbRef : ejbLocalRefs) {\n                String name = ejbRef.getEjbRefName();\n                String ejbName = ejbRef.getLink();\n                String lookup = ejbRef.getLookupName();\n                String localInterface = ejbRef.getLocal();\n                Class<?> localInterfaceType = null;\n\n                if (!isEmpty(localInterface)) {\n                    try {\n                        classLoader.loadClass(localInterface);\n                    } catch (ClassNotFoundException e) {\n                        throw new DeploymentUnitProcessingException(\"Could not load local interface type \" + localInterface, e);\n                    }\n                }\n\n                if (!name.startsWith(\"java:\")) {\n                    name = environment.getDefaultContext() + name;\n                }\n\n                // our injection (source) comes from the local (ENC) lookup, no matter what.\n                LookupInjectionSource injectionSource = new LookupInjectionSource(name);\n\n                //add any injection targets\n                localInterfaceType = processInjectionTargets(moduleDescription, injectionSource, classLoader, deploymentReflectionIndex, ejbRef, localInterfaceType);\n\n                if (localInterfaceType == null) {\n                    throw new DeploymentUnitProcessingException(\"Could not determine type of ejb-local-ref \" + name + \" for component \" + componentDescription);\n                }\n                final BindingConfiguration bindingConfiguration;\n                if (!isEmpty(lookup)) {\n                    bindingConfiguration = new BindingConfiguration(name, new LookupInjectionSource(lookup));\n                } else if (!isEmpty(ejbName)) {\n                    //TODO: implement cross deployment references\n                    final ServiceName beanServiceName = deploymentUnit.getServiceName()\n                            .append(\"component\").append(ejbName).append(\"VIEW\").append(localInterfaceType.getName()).append(MethodIntf.LOCAL.toString());\n                    bindingConfiguration = new BindingConfiguration(name, new ViewBindingInjectionSource(beanServiceName));\n                } else {\n                    throw new RuntimeException(\"Support for ejb-local-ref without lookup or ejb-link isn't yet implemented\");\n                }\n                bindingDescriptions.add(bindingConfiguration);\n            }\n        }\n        return bindingDescriptions;\n    }","id":16315,"modified_method":"/**\n     * Resolves ejb-ref and ejb-local-ref elements\n     *\n     * @param deploymentUnit\n     * @param environment               The environment to resolve the elements for\n     * @param classLoader               The deployment class loader\n     * @param deploymentReflectionIndex The reflection index\n     * @return The bindings for the environment entries\n     */\n    protected List<BindingConfiguration> processDescriptorEntries(DeploymentUnit deploymentUnit, DeploymentDescriptorEnvironment environment, EEModuleDescription moduleDescription, ComponentDescription componentDescription, ClassLoader classLoader, DeploymentReflectionIndex deploymentReflectionIndex) throws DeploymentUnitProcessingException {\n        EJBLocalReferencesMetaData ejbLocalRefs = environment.getEnvironment().getEjbLocalReferences();\n        List<BindingConfiguration> bindingDescriptions = new ArrayList<BindingConfiguration>();\n        //TODO: this needs a lot more work\n        if (ejbLocalRefs != null) {\n            for (EJBLocalReferenceMetaData ejbRef : ejbLocalRefs) {\n                String name = ejbRef.getEjbRefName();\n                String ejbName = ejbRef.getLink();\n                String lookup = ejbRef.getLookupName();\n                String localInterface = ejbRef.getLocal();\n                Class<?> localInterfaceType = null;\n\n                if (!isEmpty(localInterface)) {\n                    try {\n                        classLoader.loadClass(localInterface);\n                    } catch (ClassNotFoundException e) {\n                        throw new DeploymentUnitProcessingException(\"Could not load local interface type \" + localInterface, e);\n                    }\n                }\n\n                if (!name.startsWith(\"java:\")) {\n                    name = environment.getDefaultContext() + name;\n                }\n\n                // our injection (source) comes from the local (ENC) lookup, no matter what.\n                LookupInjectionSource injectionSource = new LookupInjectionSource(name);\n\n                //add any injection targets\n                localInterfaceType = processInjectionTargets(moduleDescription, injectionSource, classLoader, deploymentReflectionIndex, ejbRef, localInterfaceType);\n\n                if (localInterfaceType == null) {\n                    throw new DeploymentUnitProcessingException(\"Could not determine type of ejb-local-ref \" + name + \" for component \" + componentDescription);\n                }\n                final BindingConfiguration bindingConfiguration;\n                EjbInjectionSource ejbInjectionSource = null;\n\n                if (!isEmpty(lookup)) {\n                    bindingConfiguration = new BindingConfiguration(name, new LookupInjectionSource(lookup));\n                } else if (!isEmpty(ejbName)) {\n                    //TODO: implement cross deployment references\n                    final ServiceName beanServiceName = deploymentUnit.getServiceName()\n                            .append(\"component\").append(ejbName).append(\"VIEW\").append(localInterfaceType.getName()).append(MethodIntf.LOCAL.toString());\n                    bindingConfiguration = new BindingConfiguration(name, ejbInjectionSource = new EjbInjectionSource(ejbName, localInterfaceType.getName()));\n                } else {\n                    bindingConfiguration = new BindingConfiguration(name, ejbInjectionSource = new EjbInjectionSource(localInterfaceType.getName()));\n                }\n                if(ejbInjectionSource != null) {\n                    deploymentUnit.addToAttachmentList(EjbDeploymentAttachmentKeys.EJB_INJECTIONS, ejbInjectionSource);\n                }\n                bindingDescriptions.add(bindingConfiguration);\n            }\n        }\n        return bindingDescriptions;\n    }","commit_id":"4ad40a6a69c40ecca2e591160a8882191e2621fc","url":"https://github.com/wildfly/wildfly"},{"original_method":"public void deploy(DeploymentPhaseContext phaseContext) throws DeploymentUnitProcessingException {\n        final DeploymentUnit deploymentUnit = phaseContext.getDeploymentUnit();\n        final EEModuleDescription eeModuleDescription = deploymentUnit.getAttachment(Attachments.EE_MODULE_DESCRIPTION);\n        final CompositeIndex index = deploymentUnit.getAttachment(org.jboss.as.server.deployment.Attachments.COMPOSITE_ANNOTATION_INDEX);\n        final List<AnnotationInstance> resourceAnnotations = index.getAnnotations(EJB_ANNOTATION_NAME);\n        for (AnnotationInstance annotation : resourceAnnotations) {\n            final AnnotationTarget annotationTarget = annotation.target();\n            final EJBResourceWrapper annotationWrapper = new EJBResourceWrapper(annotation);\n            if (annotationTarget instanceof FieldInfo) {\n                processField(eeModuleDescription, annotationWrapper, (FieldInfo) annotationTarget);\n            } else if (annotationTarget instanceof MethodInfo) {\n                processMethod(eeModuleDescription, annotationWrapper, (MethodInfo) annotationTarget);\n            } else if (annotationTarget instanceof ClassInfo) {\n                processClass(eeModuleDescription, annotationWrapper, (ClassInfo) annotationTarget);\n            }\n        }\n        final List<AnnotationInstance> ejbsAnnotations = index.getAnnotations(EJBS_ANNOTATION_NAME);\n        for (AnnotationInstance annotation : ejbsAnnotations) {\n            final AnnotationTarget annotationTarget = annotation.target();\n            if (annotationTarget instanceof ClassInfo) {\n                final AnnotationValue annotationValue = annotation.value();\n                final AnnotationInstance[] ejbAnnotations = annotationValue.asNestedArray();\n                for (AnnotationInstance ejbAnnotation : ejbAnnotations) {\n                    final EJBResourceWrapper annotationWrapper = new EJBResourceWrapper(ejbAnnotation);\n                    processClass(eeModuleDescription, annotationWrapper, (ClassInfo) annotationTarget);\n                }\n            } else {\n                throw new DeploymentUnitProcessingException(\"EJBs annotation can only be placed on classes \" + annotation.target());\n            }\n        }\n    }","id":16316,"modified_method":"public void deploy(DeploymentPhaseContext phaseContext) throws DeploymentUnitProcessingException {\n        final DeploymentUnit deploymentUnit = phaseContext.getDeploymentUnit();\n        final EEModuleDescription eeModuleDescription = deploymentUnit.getAttachment(Attachments.EE_MODULE_DESCRIPTION);\n        final CompositeIndex index = deploymentUnit.getAttachment(org.jboss.as.server.deployment.Attachments.COMPOSITE_ANNOTATION_INDEX);\n        final List<AnnotationInstance> resourceAnnotations = index.getAnnotations(EJB_ANNOTATION_NAME);\n        for (AnnotationInstance annotation : resourceAnnotations) {\n            final AnnotationTarget annotationTarget = annotation.target();\n            final EJBResourceWrapper annotationWrapper = new EJBResourceWrapper(annotation);\n            if (annotationTarget instanceof FieldInfo) {\n                processField(deploymentUnit, eeModuleDescription, annotationWrapper, (FieldInfo) annotationTarget);\n            } else if (annotationTarget instanceof MethodInfo) {\n                processMethod(deploymentUnit, eeModuleDescription, annotationWrapper, (MethodInfo) annotationTarget);\n            } else if (annotationTarget instanceof ClassInfo) {\n                processClass(deploymentUnit, eeModuleDescription, annotationWrapper, (ClassInfo) annotationTarget);\n            }\n        }\n        final List<AnnotationInstance> ejbsAnnotations = index.getAnnotations(EJBS_ANNOTATION_NAME);\n        for (AnnotationInstance annotation : ejbsAnnotations) {\n            final AnnotationTarget annotationTarget = annotation.target();\n            if (annotationTarget instanceof ClassInfo) {\n                final AnnotationValue annotationValue = annotation.value();\n                final AnnotationInstance[] ejbAnnotations = annotationValue.asNestedArray();\n                for (AnnotationInstance ejbAnnotation : ejbAnnotations) {\n                    final EJBResourceWrapper annotationWrapper = new EJBResourceWrapper(ejbAnnotation);\n                    processClass(deploymentUnit, eeModuleDescription, annotationWrapper, (ClassInfo) annotationTarget);\n                }\n            } else {\n                throw new DeploymentUnitProcessingException(\"EJBs annotation can only be placed on classes \" + annotation.target());\n            }\n        }\n    }","commit_id":"4ad40a6a69c40ecca2e591160a8882191e2621fc","url":"https://github.com/wildfly/wildfly"},{"original_method":"private void processMethod(final EEModuleDescription eeModuleDescription, final EJBResourceWrapper annotation, final MethodInfo methodInfo) {\n        final String methodName = methodInfo.name();\n        if (!methodName.startsWith(\"set\") || methodInfo.args().length != 1) {\n            throw new IllegalArgumentException(\"@EJB injection target is invalid.  Only setter methods are allowed: \" + methodInfo);\n        }\n        final String methodParamType = methodInfo.args()[0].name().toString();\n        final InjectionTarget targetDescription = new MethodInjectionTarget(methodInfo.declaringClass().name().toString(), methodName, methodParamType);\n\n        final String localContextName = isEmpty(annotation.name()) ? methodInfo.declaringClass().name().toString() + \"/\" + methodName.substring(3, 4).toLowerCase() + methodName.substring(4) : annotation.name();\n        final String beanInterfaceType = isEmpty(annotation.beanInterface()) || annotation.beanInterface().equals(Object.class.getName()) ? methodParamType : annotation.beanInterface();\n        process(eeModuleDescription, beanInterfaceType, annotation.beanName(), annotation.lookup(), methodInfo.declaringClass(), targetDescription, localContextName);\n    }","id":16317,"modified_method":"private void processMethod(final DeploymentUnit deploymentUnit, final EEModuleDescription eeModuleDescription, final EJBResourceWrapper annotation, final MethodInfo methodInfo) {\n        final String methodName = methodInfo.name();\n        if (!methodName.startsWith(\"set\") || methodInfo.args().length != 1) {\n            throw new IllegalArgumentException(\"@EJB injection target is invalid.  Only setter methods are allowed: \" + methodInfo);\n        }\n        final String methodParamType = methodInfo.args()[0].name().toString();\n        final InjectionTarget targetDescription = new MethodInjectionTarget(methodInfo.declaringClass().name().toString(), methodName, methodParamType);\n\n        final String localContextName = isEmpty(annotation.name()) ? methodInfo.declaringClass().name().toString() + \"/\" + methodName.substring(3, 4).toLowerCase() + methodName.substring(4) : annotation.name();\n        final String beanInterfaceType = isEmpty(annotation.beanInterface()) || annotation.beanInterface().equals(Object.class.getName()) ? methodParamType : annotation.beanInterface();\n        process(deploymentUnit, eeModuleDescription, beanInterfaceType, annotation.beanName(), annotation.lookup(), methodInfo.declaringClass(), targetDescription, localContextName);\n    }","commit_id":"4ad40a6a69c40ecca2e591160a8882191e2621fc","url":"https://github.com/wildfly/wildfly"},{"original_method":"private void processClass(final EEModuleDescription eeModuleDescription, final EJBResourceWrapper annotation, final ClassInfo classInfo) throws DeploymentUnitProcessingException {\n        if (isEmpty(annotation.name())) {\n            throw new DeploymentUnitProcessingException(\"@EJB attribute 'name' is required fo class level annotations. Class: \" + classInfo.name());\n        }\n        if (isEmpty(annotation.beanInterface())) {\n            throw new DeploymentUnitProcessingException(\"@EJB attribute 'beanInterface' is required fo class level annotations. Class: \" + classInfo.name());\n        }\n        process(eeModuleDescription, annotation.beanInterface(), annotation.beanName(), annotation.lookup(), classInfo, null, annotation.name());\n    }","id":16318,"modified_method":"private void processClass(final DeploymentUnit deploymentUnit, final EEModuleDescription eeModuleDescription, final EJBResourceWrapper annotation, final ClassInfo classInfo) throws DeploymentUnitProcessingException {\n        if (isEmpty(annotation.name())) {\n            throw new DeploymentUnitProcessingException(\"@EJB attribute 'name' is required fo class level annotations. Class: \" + classInfo.name());\n        }\n        if (isEmpty(annotation.beanInterface())) {\n            throw new DeploymentUnitProcessingException(\"@EJB attribute 'beanInterface' is required fo class level annotations. Class: \" + classInfo.name());\n        }\n        process(deploymentUnit, eeModuleDescription, annotation.beanInterface(), annotation.beanName(), annotation.lookup(), classInfo, null, annotation.name());\n    }","commit_id":"4ad40a6a69c40ecca2e591160a8882191e2621fc","url":"https://github.com/wildfly/wildfly"},{"original_method":"private void processField(final EEModuleDescription eeModuleDescription, final EJBResourceWrapper annotation, final FieldInfo fieldInfo) {\n        final String fieldName = fieldInfo.name();\n        final String fieldType = fieldInfo.type().name().toString();\n        final InjectionTarget targetDescription = new FieldInjectionTarget(fieldInfo.declaringClass().name().toString(), fieldName, fieldType);\n        final String localContextName = isEmpty(annotation.name()) ? fieldInfo.declaringClass().name().toString() + \"/\" + fieldInfo.name() : annotation.name();\n        final String beanInterfaceType = isEmpty(annotation.beanInterface()) || annotation.beanInterface().equals(Object.class.getName()) ? fieldType : annotation.beanInterface();\n        process(eeModuleDescription, beanInterfaceType, annotation.beanName(), annotation.lookup(), fieldInfo.declaringClass(), targetDescription, localContextName);\n    }","id":16319,"modified_method":"private void processField(final DeploymentUnit deploymentUnit, final EEModuleDescription eeModuleDescription, final EJBResourceWrapper annotation, final FieldInfo fieldInfo) {\n        final String fieldName = fieldInfo.name();\n        final String fieldType = fieldInfo.type().name().toString();\n        final InjectionTarget targetDescription = new FieldInjectionTarget(fieldInfo.declaringClass().name().toString(), fieldName, fieldType);\n        final String localContextName = isEmpty(annotation.name()) ? fieldInfo.declaringClass().name().toString() + \"/\" + fieldInfo.name() : annotation.name();\n        final String beanInterfaceType = isEmpty(annotation.beanInterface()) || annotation.beanInterface().equals(Object.class.getName()) ? fieldType : annotation.beanInterface();\n        process(deploymentUnit, eeModuleDescription, beanInterfaceType, annotation.beanName(), annotation.lookup(), fieldInfo.declaringClass(), targetDescription, localContextName);\n    }","commit_id":"4ad40a6a69c40ecca2e591160a8882191e2621fc","url":"https://github.com/wildfly/wildfly"},{"original_method":"private void process(final EEModuleDescription eeModuleDescription, final String beanInterface, final String beanName, final String lookup, final ClassInfo classInfo, final InjectionTarget targetDescription, final String localContextName) {\n\n        if (!isEmpty(lookup) && !isEmpty(beanName)) {\n            logger.debug(\"Both beanName = \" + beanName + \" and lookup = \" + lookup + \" have been specified in @EJB annotation.\" +\n                    \" lookup will be given preference. Class: \" + classInfo.name());\n        }\n\n        final EEModuleClassDescription classDescription = eeModuleDescription.getOrAddClassByName(classInfo.name().toString());\n\n        final InjectionSource valueSource;\n        //give preference to lookup\n        if (!isEmpty(lookup)) {\n            valueSource = new LookupInjectionSource(lookup);\n        } else if (!isEmpty(beanName)) {\n            valueSource = new EjbInjectionSource(beanName, beanInterface);\n        } else {\n            valueSource = new EjbInjectionSource(beanInterface);\n        }\n\n        // our injection comes from the local lookup, no matter what.\n        final ResourceInjectionConfiguration injectionConfiguration = targetDescription != null ?\n                new ResourceInjectionConfiguration(targetDescription, new LookupInjectionSource(localContextName)) : null;\n\n        // Create the binding from whence our injection comes.\n        final BindingConfiguration bindingConfiguration = new BindingConfiguration(localContextName, valueSource);\n\n        // TODO: class hierarchies? shared bindings?\n        classDescription.getConfigurators().add(new ClassConfigurator() {\n            public void configure(final DeploymentPhaseContext context, final EEModuleClassDescription description, final EEModuleClassConfiguration configuration) throws DeploymentUnitProcessingException {\n                configuration.getBindingConfigurations().add(bindingConfiguration);\n                if (injectionConfiguration != null) {\n                    configuration.getInjectionConfigurations().add(injectionConfiguration);\n                }\n            }\n        });\n    }","id":16320,"modified_method":"private void process(final DeploymentUnit deploymentUnit, final EEModuleDescription eeModuleDescription, final String beanInterface, final String beanName, final String lookup, final ClassInfo classInfo, final InjectionTarget targetDescription, final String localContextName) {\n\n        if (!isEmpty(lookup) && !isEmpty(beanName)) {\n            logger.debug(\"Both beanName = \" + beanName + \" and lookup = \" + lookup + \" have been specified in @EJB annotation.\" +\n                    \" lookup will be given preference. Class: \" + classInfo.name());\n        }\n\n        final EEModuleClassDescription classDescription = eeModuleDescription.getOrAddClassByName(classInfo.name().toString());\n\n        final InjectionSource valueSource;\n        EjbInjectionSource ejbInjectionSource = null;\n        //give preference to lookup\n        if (!isEmpty(lookup)) {\n            valueSource = new LookupInjectionSource(lookup);\n        } else if (!isEmpty(beanName)) {\n            valueSource = ejbInjectionSource = new EjbInjectionSource(beanName, beanInterface);\n        } else {\n            valueSource = ejbInjectionSource = new EjbInjectionSource(beanInterface);\n        }\n        if (ejbInjectionSource != null) {\n            deploymentUnit.addToAttachmentList(EjbDeploymentAttachmentKeys.EJB_INJECTIONS, ejbInjectionSource);\n        }\n        // our injection comes from the local lookup, no matter what.\n        final ResourceInjectionConfiguration injectionConfiguration = targetDescription != null ?\n                new ResourceInjectionConfiguration(targetDescription, new LookupInjectionSource(localContextName)) : null;\n\n        // Create the binding from whence our injection comes.\n        final BindingConfiguration bindingConfiguration = new BindingConfiguration(localContextName, valueSource);\n\n        // TODO: class hierarchies? shared bindings?\n        classDescription.getConfigurators().add(new ClassConfigurator() {\n            public void configure(final DeploymentPhaseContext context, final EEModuleClassDescription description, final EEModuleClassConfiguration configuration) throws DeploymentUnitProcessingException {\n                configuration.getBindingConfigurations().add(bindingConfiguration);\n                if (injectionConfiguration != null) {\n                    configuration.getInjectionConfigurations().add(injectionConfiguration);\n                }\n            }\n        });\n    }","commit_id":"4ad40a6a69c40ecca2e591160a8882191e2621fc","url":"https://github.com/wildfly/wildfly"},{"original_method":"private void _addEditMenuItem(List<MenuItem> menuItems)\n\t\tthrows PortalException {\n\n\t\tif (!isEditButtonVisible()) {\n\t\t\treturn;\n\t\t}\n\n\t\tPortletURL portletURL = _getRenderURL(\n\t\t\t\"/document_library/edit_file_entry\");\n\n\t\tportletURL.setParameter(\"backURL\", _getCurrentURL());\n\n\t\t_addURLMenuItem(\n\t\t\tmenuItems, \"icon-edit\", DLMenuItemKeys.EDIT, \"edit\",\n\t\t\tportletURL.toString());\n\t}","id":16321,"modified_method":"private void _addEditMenuItem(List<MenuItem> menuItems)\n\t\tthrows PortalException {\n\n\t\tif (!isEditButtonVisible()) {\n\t\t\treturn;\n\t\t}\n\n\t\tPortletURL portletURL = _getRenderURL(\n\t\t\t\"/document_library/edit_file_entry\");\n\n\t\tportletURL.setParameter(\"backURL\", _getCurrentURL());\n\n\t\t_addURLUIItem(\n\t\t\tnew URLMenuItem(), menuItems, DLMenuItemKeys.EDIT, \"icon-edit\",\n\t\t\t\"edit\", portletURL.toString());\n\t}","commit_id":"bff68c32907e28fc8047d108947a3aef28b3295f","url":"https://github.com/liferay/liferay-portal"},{"original_method":"private void _addCancelCheckoutToolbarItem(List<ToolbarItem> toolbarItems)\n\t\tthrows PortalException {\n\n\t\tif (!isCancelCheckoutDocumentButtonVisible()) {\n\t\t\treturn;\n\t\t}\n\n\t\tJavascriptToolbarItem javascriptToolbarItem =\n\t\t\tnew JavascriptToolbarItem();\n\n\t\tjavascriptToolbarItem.setKey(DLToolbarItemKeys.CANCEL_CHECKOUT);\n\t\tjavascriptToolbarItem.setIcon(\"icon-undo\");\n\t\tjavascriptToolbarItem.setLabel(\n\t\t\tUnicodeLanguageUtil.get(_request, \"cancel-checkout[document]\"));\n\n\t\tjavascriptToolbarItem.setOnClick(\n\t\t\tgetSubmitFormJavascript(Constants.CANCEL_CHECKOUT, null));\n\n\t\ttoolbarItems.add(javascriptToolbarItem);\n\t}","id":16322,"modified_method":"private void _addCancelCheckoutToolbarItem(List<ToolbarItem> toolbarItems)\n\t\tthrows PortalException {\n\n\t\tif (!isCancelCheckoutDocumentButtonVisible()) {\n\t\t\treturn;\n\t\t}\n\n\t\t_addJavascriptUIItem(\n\t\t\tnew JavascriptToolbarItem(), toolbarItems,\n\t\t\tDLToolbarItemKeys.CANCEL_CHECKOUT, \"icon-undo\",\n\t\t\tUnicodeLanguageUtil.get(_request, \"cancel-checkout[document]\"),\n\t\t\tgetSubmitFormJavascript(Constants.CANCEL_CHECKOUT, null));\n\t}","commit_id":"bff68c32907e28fc8047d108947a3aef28b3295f","url":"https://github.com/liferay/liferay-portal"},{"original_method":"private URLMenuItem _addURLMenuItem(\n\t\tList<MenuItem> menuItems, String iconCssClass, String key,\n\t\tString message, String url) {\n\n\t\tURLMenuItem urlMenuItem = new URLMenuItem();\n\n\t\turlMenuItem.setIcon(iconCssClass);\n\t\turlMenuItem.setKey(key);\n\t\turlMenuItem.setLabel(message);\n\t\turlMenuItem.setURL(url);\n\n\t\tmenuItems.add(urlMenuItem);\n\n\t\treturn urlMenuItem;\n\t}","id":16323,"modified_method":"private <T extends URLUIItem> T _addURLUIItem(\n\t\tT urluiItem, List<? super T> urluiItems, String key, String icon,\n\t\tString label, String url ) {\n\n\t\turluiItem.setKey(key);\n\t\turluiItem.setIcon(icon);\n\t\turluiItem.setLabel(label);\n\t\turluiItem.setURL(url);\n\n\t\turluiItems.add(urluiItem);\n\n\t\treturn urluiItem;\n\t}","commit_id":"bff68c32907e28fc8047d108947a3aef28b3295f","url":"https://github.com/liferay/liferay-portal"},{"original_method":"private void _addCheckoutToolbarItem(List<ToolbarItem> toolbarItems)\n\t\tthrows PortalException {\n\n\t\tif (!isCheckoutDocumentButtonVisible()) {\n\t\t\treturn;\n\t\t}\n\n\t\tJavascriptToolbarItem javascriptToolbarItem =\n\t\t\tnew JavascriptToolbarItem();\n\n\t\tjavascriptToolbarItem.setKey(DLToolbarItemKeys.CHECKOUT);\n\t\tjavascriptToolbarItem.setIcon(\"icon-unlock\");\n\t\tjavascriptToolbarItem.setLabel(\n\t\t\tUnicodeLanguageUtil.get(_request, \"checkout[document]\"));\n\n\t\tjavascriptToolbarItem.setOnClick(\n\t\t\tgetSubmitFormJavascript(Constants.CHECKOUT, null));\n\n\t\ttoolbarItems.add(javascriptToolbarItem);\n\t}","id":16324,"modified_method":"private void _addCheckoutToolbarItem(List<ToolbarItem> toolbarItems)\n\t\tthrows PortalException {\n\n\t\tif (!isCheckoutDocumentButtonVisible()) {\n\t\t\treturn;\n\t\t}\n\n\t\t_addJavascriptUIItem(\n\t\t\tnew JavascriptToolbarItem(), toolbarItems,\n\t\t\tDLToolbarItemKeys.CHECKOUT, \"icon-unlock\",\n\t\t\tUnicodeLanguageUtil.get(_request, \"checkout[document]\"),\n\t\t\tgetSubmitFormJavascript(Constants.CHECKOUT, null));\n\t}","commit_id":"bff68c32907e28fc8047d108947a3aef28b3295f","url":"https://github.com/liferay/liferay-portal"},{"original_method":"private void _addCheckoutMenuItem(List<MenuItem> menuItems)\n\t\tthrows PortalException {\n\n\t\tif (!_fileEntryDisplayContextHelper.isCheckoutDocumentButtonVisible()) {\n\t\t\treturn;\n\t\t}\n\n\t\tURLMenuItem urlMenuItem = new URLMenuItem();\n\n\t\turlMenuItem.setIcon(\"icon-unlock\");\n\t\turlMenuItem.setKey(DLMenuItemKeys.CHECKOUT);\n\t\turlMenuItem.setLabel(\"checkout[document]\");\n\t\turlMenuItem.setURL(\n\t\t\t_getActionURL(\n\t\t\t\t\"/document_library/edit_file_entry\", Constants.CHECKOUT));\n\n\t\tmenuItems.add(urlMenuItem);\n\t}","id":16325,"modified_method":"private void _addCheckoutMenuItem(List<MenuItem> menuItems)\n\t\tthrows PortalException {\n\n\t\tif (!_fileEntryDisplayContextHelper.isCheckoutDocumentButtonVisible()) {\n\t\t\treturn;\n\t\t}\n\n\t\t_addURLUIItem(\n\t\t\tnew URLMenuItem(), menuItems, DLMenuItemKeys.CHECKOUT,\n\t\t\t\"icon-unlock\", \"checkout[document]\",\n\t\t\t_getActionURL(\n\t\t\t\t\"/document_library/edit_file_entry\", Constants.CHECKOUT));\n\t}","commit_id":"bff68c32907e28fc8047d108947a3aef28b3295f","url":"https://github.com/liferay/liferay-portal"},{"original_method":"private void _addOpenInMsOfficeToolbarItem(List<ToolbarItem> toolbarItems)\n\t\tthrows PortalException {\n\n\t\tif (!isOpenInMsOfficeButtonVisible()) {\n\t\t\treturn;\n\t\t}\n\n\t\tString webDavURL = DLUtil.getWebDavURL(\n\t\t\t_themeDisplay, _fileEntry.getFolder(), _fileEntry,\n\t\t\tPropsValues.\n\t\t\t\tDL_FILE_ENTRY_OPEN_IN_MS_OFFICE_MANUAL_CHECK_IN_REQUIRED);\n\n\t\tLiferayPortletResponse liferayPortletResponse =\n\t\t\t_getLiferayPortletResponse();\n\n\t\tString namespace = liferayPortletResponse.getNamespace();\n\n\t\tStringBundler sb = new StringBundler(4);\n\n\t\tsb.append(namespace);\n\t\tsb.append(\"openDocument('\");\n\t\tsb.append(webDavURL);\n\t\tsb.append(\"');\");\n\n\t\t_addJavascriptToolbarItem(\n\t\t\ttoolbarItems, DLToolbarItemKeys.OPEN_IN_MS_OFFICE, \"icon-file-alt\",\n\t\t\tUnicodeLanguageUtil.get(_request, \"open-in-ms-office\"),\n\t\t\tsb.toString());\n\t}","id":16326,"modified_method":"private void _addOpenInMsOfficeToolbarItem(List<ToolbarItem> toolbarItems)\n\t\tthrows PortalException {\n\n\t\tif (!isOpenInMsOfficeButtonVisible()) {\n\t\t\treturn;\n\t\t}\n\n\t\tString webDavURL = DLUtil.getWebDavURL(\n\t\t\t_themeDisplay, _fileEntry.getFolder(), _fileEntry,\n\t\t\tPropsValues.\n\t\t\t\tDL_FILE_ENTRY_OPEN_IN_MS_OFFICE_MANUAL_CHECK_IN_REQUIRED);\n\n\t\tLiferayPortletResponse liferayPortletResponse =\n\t\t\t_getLiferayPortletResponse();\n\n\t\tString namespace = liferayPortletResponse.getNamespace();\n\n\t\tStringBundler sb = new StringBundler(4);\n\n\t\tsb.append(namespace);\n\t\tsb.append(\"openDocument('\");\n\t\tsb.append(webDavURL);\n\t\tsb.append(\"');\");\n\n\t\t_addJavascriptUIItem(\n\t\t\tnew JavascriptToolbarItem(), toolbarItems,\n\t\t\tDLToolbarItemKeys.OPEN_IN_MS_OFFICE, \"icon-file-alt\",\n\t\t\tUnicodeLanguageUtil.get(_request, \"open-in-ms-office\"),\n\t\t\tsb.toString());\n\t}","commit_id":"bff68c32907e28fc8047d108947a3aef28b3295f","url":"https://github.com/liferay/liferay-portal"},{"original_method":"private void _addDownloadMenuItem(List<MenuItem> menuItems)\n\t\tthrows PortalException {\n\n\t\tif (!isDownloadButtonVisible()) {\n\t\t\treturn;\n\t\t}\n\n\t\tString message = TextFormatter.formatStorageSize(\n\t\t\t_fileEntry.getSize(), _themeDisplay.getLocale());\n\n\t\tmessage = _themeDisplay.translate(\"download\") + \" (\" + message + \")\";\n\n\t\tString url = DLUtil.getDownloadURL(\n\t\t\t_fileEntry, _fileVersion, _themeDisplay, StringPool.BLANK, false,\n\t\t\ttrue);\n\n\t\tURLMenuItem urlMenuItem = _addURLMenuItem(\n\t\t\tmenuItems, \"icon-download\", DLMenuItemKeys.DOWNLOAD, message, url);\n\n\t\turlMenuItem.setTarget(\"_blank\");\n\t}","id":16327,"modified_method":"private void _addDownloadMenuItem(List<MenuItem> menuItems)\n\t\tthrows PortalException {\n\n\t\tif (!isDownloadButtonVisible()) {\n\t\t\treturn;\n\t\t}\n\n\t\tString message = TextFormatter.formatStorageSize(\n\t\t\t_fileEntry.getSize(), _themeDisplay.getLocale());\n\n\t\tmessage = _themeDisplay.translate(\"download\") + \" (\" + message + \")\";\n\n\t\tString url = DLUtil.getDownloadURL(\n\t\t\t_fileEntry, _fileVersion, _themeDisplay, StringPool.BLANK, false,\n\t\t\ttrue);\n\n\t\tURLMenuItem urlMenuItem = _addURLUIItem(\n\t\t\tnew URLMenuItem(), menuItems, DLMenuItemKeys.DOWNLOAD,\n\t\t\t\"icon-download\", message, url);\n\n\t\turlMenuItem.setTarget(\"_blank\");\n\t}","commit_id":"bff68c32907e28fc8047d108947a3aef28b3295f","url":"https://github.com/liferay/liferay-portal"},{"original_method":"private void _addEditToolbarItem(List<ToolbarItem> toolbarItems)\n\t\tthrows PortalException {\n\n\t\tif (!isEditButtonVisible()) {\n\t\t\treturn;\n\t\t}\n\n\t\tPortletURL portletURL = _getRenderURL(\n\t\t\t\"/document_library/edit_file_entry\");\n\n\t\t_addURLToolbarItem(\n\t\t\ttoolbarItems, DLToolbarItemKeys.EDIT, \"icon-edit\",\n\t\t\tUnicodeLanguageUtil.get(_request, \"edit\"), portletURL.toString());\n\t}","id":16328,"modified_method":"private void _addEditToolbarItem(List<ToolbarItem> toolbarItems)\n\t\tthrows PortalException {\n\n\t\tif (!isEditButtonVisible()) {\n\t\t\treturn;\n\t\t}\n\n\t\tPortletURL portletURL = _getRenderURL(\n\t\t\t\"/document_library/edit_file_entry\");\n\n\t\t_addURLUIItem(\n\t\t\tnew URLToolbarItem(), toolbarItems, DLToolbarItemKeys.EDIT,\n\t\t\t\"icon-edit\", UnicodeLanguageUtil.get(_request, \"edit\"),\n\t\t\tportletURL.toString());\n\t}","commit_id":"bff68c32907e28fc8047d108947a3aef28b3295f","url":"https://github.com/liferay/liferay-portal"},{"original_method":"private void _addCancelCheckoutMenuItem(List<MenuItem> menuItems)\n\t\tthrows PortalException {\n\n\t\tif (!_fileEntryDisplayContextHelper.\n\t\t\t\tisCancelCheckoutDocumentButtonVisible()) {\n\n\t\t\treturn;\n\t\t}\n\n\t\tURLMenuItem urlMenuItem = new URLMenuItem();\n\n\t\turlMenuItem.setIcon(\"icon-remove\");\n\t\turlMenuItem.setKey(DLMenuItemKeys.CANCEL_CHECKOUT);\n\t\turlMenuItem.setLabel(\"cancel-checkout[document]\");\n\t\turlMenuItem.setURL(\n\t\t\t_getActionURL(\n\t\t\t\t\"/document_library/edit_file_entry\",\n\t\t\t\tConstants.CANCEL_CHECKOUT));\n\n\t\tmenuItems.add(urlMenuItem);\n\t}","id":16329,"modified_method":"private void _addCancelCheckoutMenuItem(List<MenuItem> menuItems)\n\t\tthrows PortalException {\n\n\t\tif (!_fileEntryDisplayContextHelper.\n\t\t\t\tisCancelCheckoutDocumentButtonVisible()) {\n\n\t\t\treturn;\n\t\t}\n\n\t\t_addURLUIItem(\n\t\t\tnew URLMenuItem(), menuItems, DLMenuItemKeys.CANCEL_CHECKOUT,\n\t\t\t\"icon-remove\", \"cancel-checkout[document]\",\n\t\t\t_getActionURL(\n\t\t\t\t\"/document_library/edit_file_entry\",\n\t\t\t\tConstants.CANCEL_CHECKOUT));\n\t}","commit_id":"bff68c32907e28fc8047d108947a3aef28b3295f","url":"https://github.com/liferay/liferay-portal"},{"original_method":"private void _addPermissionsToolbarItem(List<ToolbarItem> toolbarItems)\n\t\tthrows PortalException {\n\n\t\tif (!isPermissionsButtonVisible()) {\n\t\t\treturn;\n\t\t}\n\n\t\tString permissionsURL = null;\n\n\t\ttry {\n\t\t\tpermissionsURL = PermissionsURLTag.doTag(\n\t\t\t\tnull, DLFileEntryConstants.getClassName(),\n\t\t\t\tHtmlUtil.unescape(_fileEntry.getTitle()), null,\n\t\t\t\tString.valueOf(_fileEntry.getFileEntryId()),\n\t\t\t\tLiferayWindowState.POP_UP.toString(), null, _request\n\t\t\t);\n\t\t}\n\t\tcatch (Exception e) {\n\t\t\tthrow new SystemException(\"Unable to create permissions URL\", e);\n\t\t}\n\n\t\tStringBundler sb = new StringBundler(6);\n\n\t\tsb.append(\"Liferay.Util.openWindow({\");\n\t\tsb.append(\"title: '\");\n\t\tsb.append(UnicodeLanguageUtil.get(_request, \"permissions\"));\n\t\tsb.append(\"', uri: '\");\n\t\tsb.append(permissionsURL);\n\t\tsb.append(\"'});\");\n\n\t\t_addJavascriptToolbarItem(\n\t\t\ttoolbarItems, DLToolbarItemKeys.PERMISSIONS, \"icon-lock\",\n\t\t\tUnicodeLanguageUtil.get(_request, \"permissions\"),\n\t\t\tsb.toString());\n\t}","id":16330,"modified_method":"private void _addPermissionsToolbarItem(List<ToolbarItem> toolbarItems)\n\t\tthrows PortalException {\n\n\t\tif (!isPermissionsButtonVisible()) {\n\t\t\treturn;\n\t\t}\n\n\t\tString permissionsURL = null;\n\n\t\ttry {\n\t\t\tpermissionsURL = PermissionsURLTag.doTag(\n\t\t\t\tnull, DLFileEntryConstants.getClassName(),\n\t\t\t\tHtmlUtil.unescape(_fileEntry.getTitle()), null,\n\t\t\t\tString.valueOf(_fileEntry.getFileEntryId()),\n\t\t\t\tLiferayWindowState.POP_UP.toString(), null, _request\n\t\t\t);\n\t\t}\n\t\tcatch (Exception e) {\n\t\t\tthrow new SystemException(\"Unable to create permissions URL\", e);\n\t\t}\n\n\t\tStringBundler sb = new StringBundler(6);\n\n\t\tsb.append(\"Liferay.Util.openWindow({\");\n\t\tsb.append(\"title: '\");\n\t\tsb.append(UnicodeLanguageUtil.get(_request, \"permissions\"));\n\t\tsb.append(\"', uri: '\");\n\t\tsb.append(permissionsURL);\n\t\tsb.append(\"'});\");\n\n\t\t_addJavascriptUIItem(\n\t\t\tnew JavascriptToolbarItem(), toolbarItems,\n\t\t\tDLToolbarItemKeys.PERMISSIONS, \"icon-lock\",\n\t\t\tUnicodeLanguageUtil.get(_request, \"permissions\"), sb.toString());\n\t}","commit_id":"bff68c32907e28fc8047d108947a3aef28b3295f","url":"https://github.com/liferay/liferay-portal"},{"original_method":"private void _addDeleteToolbarItem(List<ToolbarItem> toolbarItems)\n\t\tthrows PortalException {\n\n\t\tif (!isDeleteButtonVisible()) {\n\t\t\treturn;\n\t\t}\n\n\t\tJavascriptToolbarItem javascriptToolbarItem =\n\t\t\tnew JavascriptToolbarItem();\n\n\t\tjavascriptToolbarItem.setKey(DLToolbarItemKeys.DELETE);\n\t\tjavascriptToolbarItem.setIcon(\"icon-remove\");\n\t\tjavascriptToolbarItem.setLabel(\n\t\t\tUnicodeLanguageUtil.get(_request, \"delete\"));\n\n\t\tLiferayPortletResponse liferayPortletResponse =\n\t\t\t_getLiferayPortletResponse();\n\n\t\tPortletURL portletURL = liferayPortletResponse.createRenderURL();\n\n\t\tportletURL.setParameter(\"struts_action\", \"/document_library/view\");\n\t\tportletURL.setParameter(\n\t\t\t\"folderId\", String.valueOf(_fileEntry.getFolderId()));\n\n\t\tStringBundler sb = new StringBundler(5);\n\n\t\tsb.append(\"if (confirm('\");\n\t\tsb.append(\n\t\t\tUnicodeLanguageUtil.get(\n\t\t\t\t_request, \"are-you-sure-you-want-to-delete-this\"));\n\t\tsb.append(\"')) {\");\n\t\tsb.append(\n\t\t\tgetSubmitFormJavascript(Constants.DELETE, portletURL.toString()));\n\t\tsb.append(\"}\");\n\n\t\tjavascriptToolbarItem.setOnClick(sb.toString());\n\n\t\ttoolbarItems.add(javascriptToolbarItem);\n\t}","id":16331,"modified_method":"private void _addDeleteToolbarItem(List<ToolbarItem> toolbarItems)\n\t\tthrows PortalException {\n\n\t\tif (!isDeleteButtonVisible()) {\n\t\t\treturn;\n\t\t}\n\n\t\tLiferayPortletResponse liferayPortletResponse =\n\t\t\t_getLiferayPortletResponse();\n\n\t\tPortletURL portletURL = liferayPortletResponse.createRenderURL();\n\n\t\tportletURL.setParameter(\"struts_action\", \"/document_library/view\");\n\t\tportletURL.setParameter(\n\t\t\t\"folderId\", String.valueOf(_fileEntry.getFolderId()));\n\n\t\tStringBundler sb = new StringBundler(5);\n\n\t\tsb.append(\"if (confirm('\");\n\t\tsb.append(\n\t\t\tUnicodeLanguageUtil.get(\n\t\t\t\t_request, \"are-you-sure-you-want-to-delete-this\"));\n\t\tsb.append(\"')) {\");\n\t\tsb.append(\n\t\t\tgetSubmitFormJavascript(Constants.DELETE, portletURL.toString()));\n\t\tsb.append(\"}\");\n\n\t\t_addJavascriptUIItem(\n\t\t\tnew JavascriptToolbarItem(), toolbarItems, DLToolbarItemKeys.DELETE,\n\t\t\t\"icon-remove\", UnicodeLanguageUtil.get(_request, \"delete\"),\n\t\t\tsb.toString());\n\t}","commit_id":"bff68c32907e28fc8047d108947a3aef28b3295f","url":"https://github.com/liferay/liferay-portal"},{"original_method":"private void _addCheckinMenuItem(List<MenuItem> menuItems)\n\t\tthrows PortalException {\n\n\t\tif (!_fileEntryDisplayContextHelper.isCheckinButtonVisible()) {\n\t\t\treturn;\n\t\t}\n\n\t\tURLMenuItem urlMenuItem = new URLMenuItem();\n\n\t\turlMenuItem.setIcon(\"icon-lock\");\n\t\turlMenuItem.setKey(DLMenuItemKeys.CHECKIN);\n\t\turlMenuItem.setLabel(\"checkin\");\n\t\turlMenuItem.setURL(\n\t\t\t_getActionURL(\n\t\t\t\t\"/document_library/edit_file_entry\", Constants.CHECKIN));\n\n\t\tmenuItems.add(urlMenuItem);\n\t}","id":16332,"modified_method":"private void _addCheckinMenuItem(List<MenuItem> menuItems)\n\t\tthrows PortalException {\n\n\t\tif (!_fileEntryDisplayContextHelper.isCheckinButtonVisible()) {\n\t\t\treturn;\n\t\t}\n\n\t\t_addURLUIItem(\n\t\t\tnew URLMenuItem(), menuItems, DLMenuItemKeys.CHECKIN, \"icon-lock\",\n\t\t\t\"checkin\",\n\t\t\t_getActionURL(\n\t\t\t\t\"/document_library/edit_file_entry\", Constants.CHECKIN));\n\t}","commit_id":"bff68c32907e28fc8047d108947a3aef28b3295f","url":"https://github.com/liferay/liferay-portal"},{"original_method":"private JavascriptToolbarItem _addJavascriptToolbarItem(\n\t\tList<ToolbarItem> toolbarItems, String key, String icon, String label,\n\t\tString onClick) {\n\n\t\tJavascriptToolbarItem javascriptToolbarItem =\n\t\t\tnew JavascriptToolbarItem();\n\n\t\tjavascriptToolbarItem.setKey(key);\n\t\tjavascriptToolbarItem.setIcon(icon);\n\t\tjavascriptToolbarItem.setLabel(label);\n\t\tjavascriptToolbarItem.setOnClick(onClick);\n\n\t\ttoolbarItems.add(javascriptToolbarItem);\n\n\t\treturn javascriptToolbarItem;\n\t}","id":16333,"modified_method":"private <T extends JavascriptUIItem> T _addJavascriptUIItem(\n\t\tT javascriptUIItem, List<? super T> javascriptUIItems, String key,\n\tString icon, String label, String onClick ) {\n\n\t\tjavascriptUIItem.setKey(key);\n\t\tjavascriptUIItem.setIcon(icon);\n\t\tjavascriptUIItem.setLabel(label);\n\t\tjavascriptUIItem.setOnClick(onClick);\n\n\t\tjavascriptUIItems.add(javascriptUIItem);\n\n\t\treturn javascriptUIItem;\n\t}","commit_id":"bff68c32907e28fc8047d108947a3aef28b3295f","url":"https://github.com/liferay/liferay-portal"},{"original_method":"private void _addCheckinToolbarItem(List<ToolbarItem> toolbarItems)\n\t\tthrows PortalException {\n\n\t\tif (!isCheckinButtonVisible()) {\n\t\t\treturn;\n\t\t}\n\n\t\tJavascriptToolbarItem javascriptToolbarItem =\n\t\t\tnew JavascriptToolbarItem();\n\n\t\tjavascriptToolbarItem.setKey(DLToolbarItemKeys.CHECKIN);\n\t\tjavascriptToolbarItem.setIcon(\"icon-lock\");\n\t\tjavascriptToolbarItem.setLabel(\n\t\t\tUnicodeLanguageUtil.get(_request, \"checkin\"));\n\n\t\tjavascriptToolbarItem.setOnClick(\n\t\t\tgetSubmitFormJavascript(Constants.CHECKIN, null));\n\n\t\ttoolbarItems.add(javascriptToolbarItem);\n\t}","id":16334,"modified_method":"private void _addCheckinToolbarItem(List<ToolbarItem> toolbarItems)\n\t\tthrows PortalException {\n\n\t\tif (!isCheckinButtonVisible()) {\n\t\t\treturn;\n\t\t}\n\n\t\t_addJavascriptUIItem(\n\t\t\tnew JavascriptToolbarItem(), toolbarItems,\n\t\t\tDLToolbarItemKeys.CHECKIN, \"icon-lock\",\n\t\t\tUnicodeLanguageUtil.get(_request, \"checkin\"),\n\t\t\tgetSubmitFormJavascript(Constants.CHECKIN, null));\n\t}","commit_id":"bff68c32907e28fc8047d108947a3aef28b3295f","url":"https://github.com/liferay/liferay-portal"},{"original_method":"private void _addOpenInMsOfficeMenuItem(List<MenuItem> menuItems)\n\t\tthrows PortalException {\n\n\t\tif (!isOpenInMsOfficeButtonVisible()) {\n\t\t\treturn;\n\t\t}\n\n\t\tJavascriptMenuItem javaScriptMenuItem = new JavascriptMenuItem();\n\n\t\tjavaScriptMenuItem.setIcon(\"icon-file-alt\");\n\t\tjavaScriptMenuItem.setKey(DLMenuItemKeys.OPEN_IN_MS_OFFICE);\n\n\t\tMap<String, String> context = new HashMap<>();\n\n\t\tLiferayPortletResponse liferayPortletResponse =\n\t\t\t_getLiferayPortletResponse();\n\n\t\tcontext.put(\n\t\t\t\"errorMessage\", UnicodeLanguageUtil.get(\n\t\t\t\t_request,\n\t\t\t\t\"cannot-open-the-requested-document-due-to-the-following-\" +\n\t\t\t\t\t\"reason\"));\n\t\tcontext.put(\"namespace\", liferayPortletResponse.getNamespace());\n\n\t\tString javaScript = _processFreeMarkerTemplate(\n\t\t\t\"/com/liferay/portlet/documentlibrary/context/dependencies\" +\n\t\t\t\t\"open_in_ms_office_js.ftl\",\n\t\t\tcontext);\n\n\t\tjavaScriptMenuItem.setJavascript(javaScript);\n\n\t\tjavaScriptMenuItem.setLabel(\"open-in-ms-office\");\n\n\t\tString webDavURL = DLUtil.getWebDavURL(\n\t\t\t_themeDisplay, _fileEntry.getFolder(), _fileEntry,\n\t\t\tPropsValues.\n\t\t\t\tDL_FILE_ENTRY_OPEN_IN_MS_OFFICE_MANUAL_CHECK_IN_REQUIRED,\n\t\t\ttrue);\n\n\t\tString onClick =\n\t\t\tliferayPortletResponse.getNamespace() + \"openDocument('\" +\n\t\t\t\twebDavURL + \"');\";\n\n\t\tjavaScriptMenuItem.setOnClick(onClick);\n\n\t\tmenuItems.add(javaScriptMenuItem);\n\t}","id":16335,"modified_method":"private void _addOpenInMsOfficeMenuItem(List<MenuItem> menuItems)\n\t\tthrows PortalException {\n\n\t\tif (!isOpenInMsOfficeButtonVisible()) {\n\t\t\treturn;\n\t\t}\n\n\t\tLiferayPortletResponse liferayPortletResponse =\n\t\t\t_getLiferayPortletResponse();\n\n\t\tString webDavURL = DLUtil.getWebDavURL(\n\t\t\t_themeDisplay, _fileEntry.getFolder(), _fileEntry,\n\t\t\tPropsValues.\n\t\t\t\tDL_FILE_ENTRY_OPEN_IN_MS_OFFICE_MANUAL_CHECK_IN_REQUIRED,\n\t\t\ttrue);\n\n\t\tString onClick =\n\t\t\tliferayPortletResponse.getNamespace() + \"openDocument('\" +\n\t\t\t\twebDavURL + \"');\";\n\n\t\tJavascriptMenuItem javascriptMenuItem = _addJavascriptUIItem(\n\t\t\tnew JavascriptMenuItem(), menuItems,\n\t\t\tDLMenuItemKeys.OPEN_IN_MS_OFFICE, \"icon-file-alt\",\n\t\t\t\"open-in-ms-office\", onClick);\n\n\t\tMap<String, String> context = new HashMap<>();\n\n\t\tcontext.put(\n\t\t\t\"errorMessage\", UnicodeLanguageUtil.get(\n\t\t\t\t_request,\n\t\t\t\t\"cannot-open-the-requested-document-due-to-the-following-\" +\n\t\t\t\t\t\"reason\"));\n\t\tcontext.put(\"namespace\", liferayPortletResponse.getNamespace());\n\n\t\tString javaScript = _processFreeMarkerTemplate(\n\t\t\t\"/com/liferay/portlet/documentlibrary/context/dependencies\" +\n\t\t\t\t\"open_in_ms_office_js.ftl\",\n\t\t\tcontext);\n\n\t\tjavascriptMenuItem.setJavascript(javaScript);\n\t}","commit_id":"bff68c32907e28fc8047d108947a3aef28b3295f","url":"https://github.com/liferay/liferay-portal"},{"original_method":"private void _addPermissionsMenuItem(List<MenuItem> menuItems)\n\t\tthrows PortalException {\n\n\t\tif (!isPermissionsButtonVisible()) {\n\t\t\treturn;\n\t\t}\n\n\t\tString url = null;\n\n\t\ttry {\n\t\t\turl = PermissionsURLTag.doTag(\n\t\t\t\tnull, DLFileEntryConstants.getClassName(),\n\t\t\t\tHtmlUtil.unescape(_fileEntry.getTitle()), null,\n\t\t\t\tString.valueOf(_fileEntry.getFileEntryId()),\n\t\t\t\tLiferayWindowState.POP_UP.toString(), null, _request);\n\t\t}\n\t\tcatch (Exception e) {\n\t\t\tthrow new SystemException(\"Unable to create permissions URL\", e);\n\t\t}\n\n\t\tURLMenuItem urlMenuItem = _addURLMenuItem(\n\t\t\tmenuItems, \"icon-lock\", DLMenuItemKeys.PERMISSIONS, \"permissions\",\n\t\t\turl);\n\n\t\turlMenuItem.setMethod(\"get\");\n\t\turlMenuItem.setUseDialog(true);\n\t}","id":16336,"modified_method":"private void _addPermissionsMenuItem(List<MenuItem> menuItems)\n\t\tthrows PortalException {\n\n\t\tif (!isPermissionsButtonVisible()) {\n\t\t\treturn;\n\t\t}\n\n\t\tString url = null;\n\n\t\ttry {\n\t\t\turl = PermissionsURLTag.doTag(\n\t\t\t\tnull, DLFileEntryConstants.getClassName(),\n\t\t\t\tHtmlUtil.unescape(_fileEntry.getTitle()), null,\n\t\t\t\tString.valueOf(_fileEntry.getFileEntryId()),\n\t\t\t\tLiferayWindowState.POP_UP.toString(), null, _request);\n\t\t}\n\t\tcatch (Exception e) {\n\t\t\tthrow new SystemException(\"Unable to create permissions URL\", e);\n\t\t}\n\n\t\tURLMenuItem urlMenuItem = _addURLUIItem(\n\t\t\tnew URLMenuItem(), menuItems, \"icon-lock\",\n\t\t\tDLMenuItemKeys.PERMISSIONS, \"permissions\", url);\n\n\t\turlMenuItem.setMethod(\"get\");\n\t\turlMenuItem.setUseDialog(true);\n\t}","commit_id":"bff68c32907e28fc8047d108947a3aef28b3295f","url":"https://github.com/liferay/liferay-portal"},{"original_method":"private void _addMoveMenuItem(List<MenuItem> menuItems)\n\t\tthrows PortalException {\n\n\t\tif (!isMoveButtonVisible()) {\n\t\t\treturn;\n\t\t}\n\n\t\tLiferayPortletResponse liferayPortletResponse =\n\t\t\t_getLiferayPortletResponse();\n\n\t\tPortletURL portletURL = liferayPortletResponse.createRenderURL();\n\n\t\tportletURL.setParameter(\n\t\t\t\"struts_action\", \"/document_library/move_entry\");\n\n\t\tPortletURL redirectURL = liferayPortletResponse.createRenderURL();\n\n\t\tredirectURL.setParameter(\"struts_action\", \"/document_library/view\");\n\t\tredirectURL.setParameter(\"folderId\", String.valueOf(_folderId));\n\n\t\tportletURL.setParameter(\"redirect\", redirectURL.toString());\n\n\t\tportletURL.setParameter(\n\t\t\t\"fileEntryIds\", String.valueOf(_fileEntry.getFileEntryId()));\n\n\t\t_addURLMenuItem(\n\t\t\tmenuItems, \"icon-move\", DLMenuItemKeys.MOVE, \"move\",\n\t\t\tportletURL.toString());\n\t}","id":16337,"modified_method":"private void _addMoveMenuItem(List<MenuItem> menuItems)\n\t\tthrows PortalException {\n\n\t\tif (!isMoveButtonVisible()) {\n\t\t\treturn;\n\t\t}\n\n\t\tLiferayPortletResponse liferayPortletResponse =\n\t\t\t_getLiferayPortletResponse();\n\n\t\tPortletURL portletURL = liferayPortletResponse.createRenderURL();\n\n\t\tportletURL.setParameter(\n\t\t\t\"struts_action\", \"/document_library/move_entry\");\n\n\t\tPortletURL redirectURL = liferayPortletResponse.createRenderURL();\n\n\t\tredirectURL.setParameter(\"struts_action\", \"/document_library/view\");\n\t\tredirectURL.setParameter(\"folderId\", String.valueOf(_folderId));\n\n\t\tportletURL.setParameter(\"redirect\", redirectURL.toString());\n\n\t\tportletURL.setParameter(\n\t\t\t\"fileEntryIds\", String.valueOf(_fileEntry.getFileEntryId()));\n\n\t\t_addURLUIItem(\n\t\t\tnew URLMenuItem(), menuItems, \"icon-move\", DLMenuItemKeys.MOVE,\n\t\t\t\"move\", portletURL.toString());\n\t}","commit_id":"bff68c32907e28fc8047d108947a3aef28b3295f","url":"https://github.com/liferay/liferay-portal"},{"original_method":"private void _addMoveToTheRecycleBinToolbarItem(\n\t\t\tList<ToolbarItem> toolbarItems)\n\t\tthrows PortalException {\n\n\t\tif (!isMoveToTheRecycleBinButtonVisible()) {\n\t\t\treturn;\n\t\t}\n\n\t\tLiferayPortletResponse liferayPortletResponse =\n\t\t\t_getLiferayPortletResponse();\n\n\t\tPortletURL portletURL = liferayPortletResponse.createRenderURL();\n\n\t\tportletURL.setParameter(\"struts_action\", \"/document_library/view\");\n\t\tportletURL.setParameter(\n\t\t\t\"folderId\", String.valueOf(_fileEntry.getFolderId()));\n\n\t\t_addJavascriptToolbarItem(\n\t\t\ttoolbarItems, DLToolbarItemKeys.MOVE_TO_THE_RECYCLE_BIN,\n\t\t\t\"icon-trash\",\n\t\t\tUnicodeLanguageUtil.get(_request, \"move-to-the-recycle-bin\"),\n\t\t\tgetSubmitFormJavascript(\n\t\t\t\tConstants.MOVE_TO_TRASH, portletURL.toString()));\n\t}","id":16338,"modified_method":"private void _addMoveToTheRecycleBinToolbarItem(\n\t\t\tList<ToolbarItem> toolbarItems)\n\t\tthrows PortalException {\n\n\t\tif (!isMoveToTheRecycleBinButtonVisible()) {\n\t\t\treturn;\n\t\t}\n\n\t\tLiferayPortletResponse liferayPortletResponse =\n\t\t\t_getLiferayPortletResponse();\n\n\t\tPortletURL portletURL = liferayPortletResponse.createRenderURL();\n\n\t\tportletURL.setParameter(\"struts_action\", \"/document_library/view\");\n\t\tportletURL.setParameter(\n\t\t\t\"folderId\", String.valueOf(_fileEntry.getFolderId()));\n\n\t\t_addJavascriptUIItem(\n\t\t\tnew JavascriptToolbarItem(), toolbarItems,\n\t\t\tDLToolbarItemKeys.MOVE_TO_THE_RECYCLE_BIN, \"icon-trash\",\n\t\t\tUnicodeLanguageUtil.get(_request, \"move-to-the-recycle-bin\"),\n\t\t\tgetSubmitFormJavascript(\n\t\t\t\tConstants.MOVE_TO_TRASH, portletURL.toString()));\n\t}","commit_id":"bff68c32907e28fc8047d108947a3aef28b3295f","url":"https://github.com/liferay/liferay-portal"},{"original_method":"private void _addDownloadToolbarItem(List<ToolbarItem> toolbarItems)\n\t\tthrows PortalException {\n\n\t\tif (!isDownloadButtonVisible()) {\n\t\t\treturn;\n\t\t}\n\n\t\t_addURLToolbarItem(\n\t\t\ttoolbarItems, DLToolbarItemKeys.DOWNLOAD, \"icon-download\",\n\t\t\tUnicodeLanguageUtil.get(_request, \"download\"),\n\t\t\tDLUtil.getDownloadURL(\n\t\t\t\t_fileEntry, _fileVersion, _themeDisplay, StringPool.BLANK));\n\t}","id":16339,"modified_method":"private void _addDownloadToolbarItem(List<ToolbarItem> toolbarItems)\n\t\tthrows PortalException {\n\n\t\tif (!isDownloadButtonVisible()) {\n\t\t\treturn;\n\t\t}\n\n\t\t_addURLUIItem(\n\t\t\tnew URLToolbarItem(), toolbarItems, DLToolbarItemKeys.DOWNLOAD,\n\t\t\t\"icon-download\", UnicodeLanguageUtil.get(_request, \"download\"),\n\t\t\tDLUtil.getDownloadURL(\n\t\t\t\t_fileEntry, _fileVersion, _themeDisplay, StringPool.BLANK));\n\t}","commit_id":"bff68c32907e28fc8047d108947a3aef28b3295f","url":"https://github.com/liferay/liferay-portal"},{"original_method":"private void _addMoveToolbarItem(List<ToolbarItem> toolbarItems)\n\t\tthrows PortalException {\n\n\t\tif (!isMoveButtonVisible()) {\n\t\t\treturn;\n\t\t}\n\n\t\tPortletURL portletURL = _getRenderURL(\"/document_library/move_entry\");\n\n\t\t_addURLToolbarItem(\n\t\t\ttoolbarItems, DLToolbarItemKeys.MOVE, \"icon-move\",\n\t\t\tUnicodeLanguageUtil.get(_request, \"move\"), portletURL.toString());\n\t}","id":16340,"modified_method":"private void _addMoveToolbarItem(List<ToolbarItem> toolbarItems)\n\t\tthrows PortalException {\n\n\t\tif (!isMoveButtonVisible()) {\n\t\t\treturn;\n\t\t}\n\n\t\tPortletURL portletURL = _getRenderURL(\"/document_library/move_entry\");\n\n\t\t_addURLUIItem(\n\t\t\tnew URLToolbarItem(), toolbarItems, DLToolbarItemKeys.MOVE,\n\t\t\t\"icon-move\", UnicodeLanguageUtil.get(_request, \"move\"),\n\t\t\tportletURL.toString());\n\t}","commit_id":"bff68c32907e28fc8047d108947a3aef28b3295f","url":"https://github.com/liferay/liferay-portal"},{"original_method":"private void _addCheckoutMenuItem(List<MenuItem> menuItems)\n\t\tthrows PortalException {\n\n\t\tif (_dlActionsDisplayContext.isShowActions() &&\n\t\t\tisCheckoutDocumentButtonVisible()) {\n\n\t\t\tPortletURL checkoutURL = _liferayPortletResponse.createActionURL();\n\n\t\t\tcheckoutURL.setParameter(\n\t\t\t\t\"struts_action\", \"/document_library/edit_file_entry\");\n\t\t\tcheckoutURL.setParameter(Constants.CMD, Constants.CHECKOUT);\n\t\t\tcheckoutURL.setParameter(\"redirect\", _currentURL);\n\t\t\tcheckoutURL.setParameter(\n\t\t\t\t\"fileEntryId\", String.valueOf(_fileEntry.getFileEntryId()));\n\n\t\t\tmenuItems.add(\n\t\t\t\tnew URLMenuItem(\n\t\t\t\t\tDLMenuItems.MENU_ITEM_ID_CHECKOUT, \"icon-unlock\",\n\t\t\t\t\t\"checkout[document]\", checkoutURL.toString()));\n\t\t}\n\t}","id":16341,"modified_method":"private void _addCheckoutMenuItem(List<MenuItem> menuItems)\n\t\tthrows PortalException {\n\n\t\tif (_dlActionsDisplayContext.isShowActions() &&\n\t\t\tisCheckoutDocumentButtonVisible()) {\n\n\t\t\tPortletURL checkoutURL = _liferayPortletResponse.createActionURL();\n\n\t\t\tcheckoutURL.setParameter(\n\t\t\t\t\"struts_action\", \"/document_library/edit_file_entry\");\n\t\t\tcheckoutURL.setParameter(Constants.CMD, Constants.CHECKOUT);\n\t\t\tcheckoutURL.setParameter(\"redirect\", _currentURL);\n\t\t\tcheckoutURL.setParameter(\n\t\t\t\t\"fileEntryId\", String.valueOf(_fileEntry.getFileEntryId()));\n\n\t\t\tURLMenuItem urlMenuItem = new URLMenuItem();\n\n\t\t\turlMenuItem.setIconCssClass(\"icon-unlock\");\n\t\t\turlMenuItem.setId(DLMenuItems.MENU_ITEM_ID_CHECKOUT);\n\t\t\turlMenuItem.setMessage(\"checkout[document]\");\n\t\t\turlMenuItem.setURL(checkoutURL.toString());\n\n\t\t\tmenuItems.add(urlMenuItem);\n\t\t}\n\t}","commit_id":"f6f3e82ff20336fe325ec9325cd3cceb1fd92b84","url":"https://github.com/liferay/liferay-portal"},{"original_method":"private void _addOpenDocumentMenuItem(List<MenuItem> menuItems)\n\t\tthrows PortalException {\n\n\t\tif (isOpenInMsOfficeButtonVisible()) {\n\t\t\tString webDavURL = DLUtil.getWebDavURL(\n\t\t\t\t_themeDisplay, _fileEntry.getFolder(), _fileEntry,\n\t\t\t\tPropsValues.\n\t\t\t\t\tDL_FILE_ENTRY_OPEN_IN_MS_OFFICE_MANUAL_CHECK_IN_REQUIRED,\n\t\t\t\ttrue);\n\n\t\t\tString onClick =\n\t\t\t\t_liferayPortletResponse.getNamespace() + \"openDocument('\" +\n\t\t\t\t\twebDavURL + \"');\";\n\n\t\t\tMap<String, String> context = new HashMap<String, String>();\n\n\t\t\tcontext.put(\"namespace\", _liferayPortletResponse.getNamespace());\n\n\t\t\tcontext.put(\n\t\t\t\t\"errorMessage\", UnicodeLanguageUtil.get(\n\t\t\t\t\t_request,\n\t\t\t\t\t\"cannot-open-the-requested-document-due-to-the-following-\" +\n\t\t\t\t\t\t\"reason\"));\n\n\t\t\tString javascript = _processFreeMarkerTemplate(\n\t\t\t\t\"/com/liferay/portlet/documentlibrary/context/\" +\n\t\t\t\t\t\"open_document_js.ftl\", context);\n\n\t\t\tmenuItems.add(\n\t\t\t\tnew JavascriptMenuItem(\n\t\t\t\t\tDLMenuItems.MENU_ITEM_ID_OPEN_DOCUMENT, \"icon-file-alt\",\n\t\t\t\t\t\"open-in-ms-office\", onClick, javascript));\n\t\t}\n\t}","id":16342,"modified_method":"private void _addOpenDocumentMenuItem(List<MenuItem> menuItems)\n\t\tthrows PortalException {\n\n\t\tif (isOpenInMsOfficeButtonVisible()) {\n\t\t\tString webDavURL = DLUtil.getWebDavURL(\n\t\t\t\t_themeDisplay, _fileEntry.getFolder(), _fileEntry,\n\t\t\t\tPropsValues.\n\t\t\t\t\tDL_FILE_ENTRY_OPEN_IN_MS_OFFICE_MANUAL_CHECK_IN_REQUIRED,\n\t\t\t\ttrue);\n\n\t\t\tString onClick =\n\t\t\t\t_liferayPortletResponse.getNamespace() + \"openDocument('\" +\n\t\t\t\t\twebDavURL + \"');\";\n\n\t\t\tMap<String, String> context = new HashMap<String, String>();\n\n\t\t\tcontext.put(\"namespace\", _liferayPortletResponse.getNamespace());\n\n\t\t\tcontext.put(\n\t\t\t\t\"errorMessage\", UnicodeLanguageUtil.get(\n\t\t\t\t\t_request,\n\t\t\t\t\t\"cannot-open-the-requested-document-due-to-the-following-\" +\n\t\t\t\t\t\t\"reason\"));\n\n\t\t\tString javaScript = _processFreeMarkerTemplate(\n\t\t\t\t\"/com/liferay/portlet/documentlibrary/context/\" +\n\t\t\t\t\t\"open_document_js.ftl\", context);\n\n\t\t\tJavascriptMenuItem javaScriptMenuItem = new JavascriptMenuItem();\n\n\t\t\tjavaScriptMenuItem.setIconCssClass(\"icon-file-alt\");\n\t\t\tjavaScriptMenuItem.setId(DLMenuItems.MENU_ITEM_ID_OPEN_DOCUMENT);\n\t\t\tjavaScriptMenuItem.setJavascript(javaScript);\n\t\t\tjavaScriptMenuItem.setMessage(\"open-in-ms-office\");\n\t\t\tjavaScriptMenuItem.setOnClick(onClick);\n\n\t\t\tmenuItems.add(javaScriptMenuItem);\n\t\t}\n\t}","commit_id":"f6f3e82ff20336fe325ec9325cd3cceb1fd92b84","url":"https://github.com/liferay/liferay-portal"},{"original_method":"private void _addCancelCheckoutMenuItem(List<MenuItem> menuItems)\n\t\tthrows PortalException {\n\n\t\tif (_dlActionsDisplayContext.isShowActions() &&\n\t\t\tisCancelCheckoutDocumentButtonVisible()) {\n\n\t\t\tPortletURL cancelCheckoutURL =\n\t\t\t\t_liferayPortletResponse.createActionURL();\n\n\t\t\tcancelCheckoutURL.setParameter(\n\t\t\t\t\"struts_action\", \"/document_library/edit_file_entry\");\n\t\t\tcancelCheckoutURL.setParameter(\n\t\t\t\tConstants.CMD, Constants.CANCEL_CHECKOUT);\n\t\t\tcancelCheckoutURL.setParameter(\"redirect\", _currentURL);\n\t\t\tcancelCheckoutURL.setParameter(\n\t\t\t\t\"fileEntryId\", String.valueOf(_fileEntry.getFileEntryId()));\n\n\t\t\tmenuItems.add(\n\t\t\t\tnew URLMenuItem(\n\t\t\t\t\tDLMenuItems.MENU_ITEM_ID_CANCEL_CHECKOUT, \"icon-remove\",\n\t\t\t\t\t\"cancel-checkout[document]\", cancelCheckoutURL.toString()));\n\t\t}\n\t}","id":16343,"modified_method":"private void _addCancelCheckoutMenuItem(List<MenuItem> menuItems)\n\t\tthrows PortalException {\n\n\t\tif (_dlActionsDisplayContext.isShowActions() &&\n\t\t\tisCancelCheckoutDocumentButtonVisible()) {\n\n\t\t\tPortletURL cancelCheckoutURL =\n\t\t\t\t_liferayPortletResponse.createActionURL();\n\n\t\t\tcancelCheckoutURL.setParameter(\n\t\t\t\t\"struts_action\", \"/document_library/edit_file_entry\");\n\t\t\tcancelCheckoutURL.setParameter(\n\t\t\t\tConstants.CMD, Constants.CANCEL_CHECKOUT);\n\t\t\tcancelCheckoutURL.setParameter(\"redirect\", _currentURL);\n\t\t\tcancelCheckoutURL.setParameter(\n\t\t\t\t\"fileEntryId\", String.valueOf(_fileEntry.getFileEntryId()));\n\n\t\t\tURLMenuItem urlMenuItem = new URLMenuItem();\n\n\t\t\turlMenuItem.setIconCssClass(\"icon-remove\");\n\t\t\turlMenuItem.setId(DLMenuItems.MENU_ITEM_ID_CANCEL_CHECKOUT);\n\t\t\turlMenuItem.setMessage(\"cancel-checkout[document]\");\n\t\t\turlMenuItem.setURL(cancelCheckoutURL.toString());\n\n\t\t\tmenuItems.add(urlMenuItem);\n\t\t}\n\t}","commit_id":"f6f3e82ff20336fe325ec9325cd3cceb1fd92b84","url":"https://github.com/liferay/liferay-portal"},{"original_method":"private void _addCheckinMenuItem(List<MenuItem> menuItems)\n\t\tthrows PortalException {\n\n\t\tif (_dlActionsDisplayContext.isShowActions() &&\n\t\t\tisCheckinButtonVisible()) {\n\n\t\t\tPortletURL checkinURL = _liferayPortletResponse.createActionURL();\n\n\t\t\tcheckinURL.setParameter(\n\t\t\t\t\"struts_action\", \"/document_library/edit_file_entry\");\n\t\t\tcheckinURL.setParameter(Constants.CMD, Constants.CHECKIN);\n\t\t\tcheckinURL.setParameter(\"redirect\", _currentURL);\n\t\t\tcheckinURL.setParameter(\n\t\t\t\t\"fileEntryId\", String.valueOf(_fileEntry.getFileEntryId()));\n\n\t\t\tmenuItems.add(\n\t\t\t\tnew URLMenuItem(\n\t\t\t\t\tDLMenuItems.MENU_ITEM_ID_CHECKIN, \"icon-lock\", \"checkin\",\n\t\t\t\t\tcheckinURL.toString()));\n\t\t}\n\t}","id":16344,"modified_method":"private void _addCheckinMenuItem(List<MenuItem> menuItems)\n\t\tthrows PortalException {\n\n\t\tif (_dlActionsDisplayContext.isShowActions() &&\n\t\t\tisCheckinButtonVisible()) {\n\n\t\t\tPortletURL checkinURL = _liferayPortletResponse.createActionURL();\n\n\t\t\tcheckinURL.setParameter(\n\t\t\t\t\"struts_action\", \"/document_library/edit_file_entry\");\n\t\t\tcheckinURL.setParameter(Constants.CMD, Constants.CHECKIN);\n\t\t\tcheckinURL.setParameter(\"redirect\", _currentURL);\n\t\t\tcheckinURL.setParameter(\n\t\t\t\t\"fileEntryId\", String.valueOf(_fileEntry.getFileEntryId()));\n\n\t\t\tURLMenuItem urlMenuItem = new URLMenuItem();\n\n\t\t\turlMenuItem.setIconCssClass(\"icon-lock\");\n\t\t\turlMenuItem.setId(DLMenuItems.MENU_ITEM_ID_CHECKIN);\n\t\t\turlMenuItem.setMessage(\"checkin\");\n\t\t\turlMenuItem.setURL(checkinURL.toString());\n\n\t\t\tmenuItems.add(urlMenuItem);\n\t\t}\n\t}","commit_id":"f6f3e82ff20336fe325ec9325cd3cceb1fd92b84","url":"https://github.com/liferay/liferay-portal"},{"original_method":"private void _addDeleteMenuItem(List<MenuItem> menuItems)\n\t\tthrows PortalException {\n\n\t\tif (_dlActionsDisplayContext.isShowActions()) {\n\t\t\tif (isDeleteButtonVisible()) {\n\t\t\t\tPortletURL deleteURL =\n\t\t\t\t\t_liferayPortletResponse.createActionURL();\n\n\t\t\t\tdeleteURL.setParameter(\n\t\t\t\t\t\"struts_action\", \"/document_library/edit_file_entry\");\n\n\t\t\t\tdeleteURL.setParameter(Constants.CMD, Constants.DELETE);\n\t\t\t\tdeleteURL.setParameter(\"redirect\", _currentURL);\n\t\t\t\tdeleteURL.setParameter(\n\t\t\t\t\t\"fileEntryId\", String.valueOf(_fileEntry.getFileEntryId()));\n\n\t\t\t\tmenuItems.add(\n\t\t\t\t\tnew DeleteMenuItem(\n\t\t\t\t\t\tDLMenuItems.MENU_ITEM_ID_DELETE, deleteURL.toString()));\n\t\t\t}\n\n\t\t\tif (isMoveToTheRecycleBinButtonVisible()) {\n\t\t\t\tPortletURL deleteURL =\n\t\t\t\t\t_liferayPortletResponse.createActionURL();\n\n\t\t\t\tdeleteURL.setParameter(\n\t\t\t\t\t\"struts_action\", \"/document_library/edit_file_entry\");\n\n\t\t\t\tdeleteURL.setParameter(Constants.CMD, Constants.MOVE_TO_TRASH);\n\t\t\t\tdeleteURL.setParameter(\"redirect\", _currentURL);\n\t\t\t\tdeleteURL.setParameter(\n\t\t\t\t\t\"fileEntryId\", String.valueOf(_fileEntry.getFileEntryId()));\n\n\t\t\t\tmenuItems.add(\n\t\t\t\t\tnew DeleteMenuItem(\n\t\t\t\t\t\tDLMenuItems.MENU_ITEM_ID_DELETE, deleteURL.toString(),\n\t\t\t\t\t\ttrue));\n\t\t\t}\n\t\t}\n\t}","id":16345,"modified_method":"private void _addDeleteMenuItem(List<MenuItem> menuItems)\n\t\tthrows PortalException {\n\n\t\tif (_dlActionsDisplayContext.isShowActions()) {\n\t\t\tif (isDeleteButtonVisible()) {\n\t\t\t\tPortletURL deleteURL =\n\t\t\t\t\t_liferayPortletResponse.createActionURL();\n\n\t\t\t\tdeleteURL.setParameter(\n\t\t\t\t\t\"struts_action\", \"/document_library/edit_file_entry\");\n\n\t\t\t\tdeleteURL.setParameter(Constants.CMD, Constants.DELETE);\n\t\t\t\tdeleteURL.setParameter(\"redirect\", _currentURL);\n\t\t\t\tdeleteURL.setParameter(\n\t\t\t\t\t\"fileEntryId\", String.valueOf(_fileEntry.getFileEntryId()));\n\n\t\t\t\tDeleteMenuItem deleteMenuItem = new DeleteMenuItem();\n\n\t\t\t\tdeleteMenuItem.setId(DLMenuItems.MENU_ITEM_ID_DELETE);\n\t\t\t\tdeleteMenuItem.setURL(deleteURL.toString());\n\n\t\t\t\tmenuItems.add(deleteMenuItem);\n\t\t\t}\n\n\t\t\tif (isMoveToTheRecycleBinButtonVisible()) {\n\t\t\t\tPortletURL deleteURL =\n\t\t\t\t\t_liferayPortletResponse.createActionURL();\n\n\t\t\t\tdeleteURL.setParameter(\n\t\t\t\t\t\"struts_action\", \"/document_library/edit_file_entry\");\n\n\t\t\t\tdeleteURL.setParameter(Constants.CMD, Constants.MOVE_TO_TRASH);\n\t\t\t\tdeleteURL.setParameter(\"redirect\", _currentURL);\n\t\t\t\tdeleteURL.setParameter(\n\t\t\t\t\t\"fileEntryId\", String.valueOf(_fileEntry.getFileEntryId()));\n\n\t\t\t\tDeleteMenuItem deleteMenuItem = new DeleteMenuItem();\n\n\t\t\t\tdeleteMenuItem.setId(DLMenuItems.MENU_ITEM_ID_DELETE);\n\t\t\t\tdeleteMenuItem.setTrash(true);\n\t\t\t\tdeleteMenuItem.setURL(deleteURL.toString());\n\n\t\t\t\tmenuItems.add(deleteMenuItem);\n\t\t\t}\n\t\t}\n\t}","commit_id":"f6f3e82ff20336fe325ec9325cd3cceb1fd92b84","url":"https://github.com/liferay/liferay-portal"},{"original_method":"private void _addDownloadMenuItem(List<MenuItem> menuItems)\n\t\tthrows PortalException {\n\n\t\tif (isDownloadButtonVisible()) {\n\t\t\tString message =\n\t\t\t\tLanguageUtil.get(_request, \"download\") + \" (\" +\n\t\t\t\t\tTextFormatter.formatStorageSize(\n\t\t\t\t\t\t_fileEntry.getSize(), _themeDisplay.getLocale()) + \")\";\n\n\t\t\tString url = DLUtil.getDownloadURL(\n\t\t\t\t_fileEntry, _fileVersion, _themeDisplay, StringPool.BLANK,\n\t\t\t\tfalse, true);\n\n\t\t\tmenuItems.add(\n\t\t\t\tnew URLMenuItem(\n\t\t\t\t\tDLMenuItems.MENU_ITEM_ID_DOWNLOAD, \"icon-download\", message,\n\t\t\t\t\turl, \"_blank\"));\n\t\t}\n\t}","id":16346,"modified_method":"private void _addDownloadMenuItem(List<MenuItem> menuItems)\n\t\tthrows PortalException {\n\n\t\tif (isDownloadButtonVisible()) {\n\t\t\tString message =\n\t\t\t\tLanguageUtil.get(_request, \"download\") + \" (\" +\n\t\t\t\t\tTextFormatter.formatStorageSize(\n\t\t\t\t\t\t_fileEntry.getSize(), _themeDisplay.getLocale()) + \")\";\n\n\t\t\tString url = DLUtil.getDownloadURL(\n\t\t\t\t_fileEntry, _fileVersion, _themeDisplay, StringPool.BLANK,\n\t\t\t\tfalse, true);\n\n\t\t\tURLMenuItem urlMenuItem = new URLMenuItem();\n\n\t\t\turlMenuItem.setIconCssClass(\"icon-download\");\n\t\t\turlMenuItem.setId(DLMenuItems.MENU_ITEM_ID_DOWNLOAD);\n\t\t\turlMenuItem.setMessage(message);\n\t\t\turlMenuItem.setTarget(\"_blank\");\n\t\t\turlMenuItem.setURL(url);\n\n\t\t\tmenuItems.add(urlMenuItem);\n\t\t}\n\t}","commit_id":"f6f3e82ff20336fe325ec9325cd3cceb1fd92b84","url":"https://github.com/liferay/liferay-portal"},{"original_method":"private void _addEditMenuItem(List<MenuItem> menuItems)\n\t\tthrows PortalException {\n\n\t\tif (_dlActionsDisplayContext.isShowActions()) {\n\t\t\tif (isEditButtonVisible()) {\n\t\t\t\tPortletURL editURL = _liferayPortletResponse.createRenderURL();\n\n\t\t\t\teditURL.setParameter(\n\t\t\t\t\t\"struts_action\", \"/document_library/edit_file_entry\");\n\t\t\t\teditURL.setParameter(\"redirect\", _currentURL);\n\t\t\t\teditURL.setParameter(\"backURL\", _currentURL);\n\t\t\t\teditURL.setParameter(\n\t\t\t\t\t\"fileEntryId\", String.valueOf(_fileEntry.getFileEntryId()));\n\n\t\t\t\tmenuItems.add(\n\t\t\t\t\tnew URLMenuItem(\n\t\t\t\t\t\tDLMenuItems.MENU_ITEM_ID_EDIT, \"icon-edit\", \"edit\",\n\t\t\t\t\t\teditURL.toString()));\n\t\t\t}\n\t\t}\n\t}","id":16347,"modified_method":"private void _addEditMenuItem(List<MenuItem> menuItems)\n\t\tthrows PortalException {\n\n\t\tif (_dlActionsDisplayContext.isShowActions()) {\n\t\t\tif (isEditButtonVisible()) {\n\t\t\t\tPortletURL editURL = _liferayPortletResponse.createRenderURL();\n\n\t\t\t\teditURL.setParameter(\n\t\t\t\t\t\"struts_action\", \"/document_library/edit_file_entry\");\n\t\t\t\teditURL.setParameter(\"redirect\", _currentURL);\n\t\t\t\teditURL.setParameter(\"backURL\", _currentURL);\n\t\t\t\teditURL.setParameter(\n\t\t\t\t\t\"fileEntryId\", String.valueOf(_fileEntry.getFileEntryId()));\n\n\t\t\t\tURLMenuItem urlMenuItem = new URLMenuItem();\n\n\t\t\t\turlMenuItem.setIconCssClass(\"icon-edit\");\n\t\t\t\turlMenuItem.setId(DLMenuItems.MENU_ITEM_ID_EDIT);\n\t\t\t\turlMenuItem.setMessage(\"edit\");\n\t\t\t\turlMenuItem.setURL(editURL.toString());\n\n\t\t\t\tmenuItems.add(urlMenuItem);\n\t\t\t}\n\t\t}\n\t}","commit_id":"f6f3e82ff20336fe325ec9325cd3cceb1fd92b84","url":"https://github.com/liferay/liferay-portal"},{"original_method":"private void _addMoveMenuItem(List<MenuItem> menuItems)\n\t\tthrows PortalException {\n\n\t\tif (_dlActionsDisplayContext.isShowActions() && isMoveButtonVisible()) {\n\t\t\tPortletURL moveURL = _liferayPortletResponse.createRenderURL();\n\n\t\t\tmoveURL.setParameter(\n\t\t\t\t\"struts_action\", \"/document_library/move_entry\");\n\t\t\tmoveURL.setParameter(\n\t\t\t\t\"fileEntryIds\", String.valueOf(_fileEntry.getFileEntryId()));\n\n\t\t\tPortletURL viewFolderURL =\n\t\t\t\t_liferayPortletResponse.createRenderURL();\n\n\t\t\tviewFolderURL.setParameter(\n\t\t\t\t\"struts_action\", \"/document_library/view\");\n\t\t\tviewFolderURL.setParameter(\"folderId\", String.valueOf(_folderId));\n\n\t\t\tmoveURL.setParameter(\"redirect\", viewFolderURL.toString());\n\n\t\t\tmenuItems.add(\n\t\t\t\tnew URLMenuItem(\n\t\t\t\t\tDLMenuItems.MENU_ITEM_ID_MOVE, \"icon-move\", \"move\",\n\t\t\t\t\tmoveURL.toString()));\n\t\t}\n\t}","id":16348,"modified_method":"private void _addMoveMenuItem(List<MenuItem> menuItems)\n\t\tthrows PortalException {\n\n\t\tif (_dlActionsDisplayContext.isShowActions() && isMoveButtonVisible()) {\n\t\t\tPortletURL moveURL = _liferayPortletResponse.createRenderURL();\n\n\t\t\tmoveURL.setParameter(\n\t\t\t\t\"struts_action\", \"/document_library/move_entry\");\n\t\t\tmoveURL.setParameter(\n\t\t\t\t\"fileEntryIds\", String.valueOf(_fileEntry.getFileEntryId()));\n\n\t\t\tPortletURL viewFolderURL =\n\t\t\t\t_liferayPortletResponse.createRenderURL();\n\n\t\t\tviewFolderURL.setParameter(\n\t\t\t\t\"struts_action\", \"/document_library/view\");\n\t\t\tviewFolderURL.setParameter(\"folderId\", String.valueOf(_folderId));\n\n\t\t\tmoveURL.setParameter(\"redirect\", viewFolderURL.toString());\n\n\t\t\tURLMenuItem urlMenuItem = new URLMenuItem();\n\n\t\t\turlMenuItem.setIconCssClass(\"icon-move\");\n\t\t\turlMenuItem.setId(DLMenuItems.MENU_ITEM_ID_MOVE);\n\t\t\turlMenuItem.setMessage(\"move\");\n\t\t\turlMenuItem.setTarget(\"_blank\");\n\t\t\turlMenuItem.setURL(moveURL.toString());\n\n\t\t\tmenuItems.add(urlMenuItem);\n\t\t}\n\t}","commit_id":"f6f3e82ff20336fe325ec9325cd3cceb1fd92b84","url":"https://github.com/liferay/liferay-portal"},{"original_method":"private void _addPermissionsMenuItem(List<MenuItem> menuItems)\n\t\tthrows PortalException {\n\n\t\tif (_dlActionsDisplayContext.isShowActions() &&\n\t\t\tisPermissionsButtonVisible()) {\n\n\t\t\tString permissionsURL = null;\n\n\t\t\ttry {\n\t\t\t\tpermissionsURL = PermissionsURLTag.doTag(\n\t\t\t\t\tnull, DLFileEntryConstants.getClassName(),\n\t\t\t\t\tHtmlUtil.unescape(_fileEntry.getTitle()), null,\n\t\t\t\t\tString.valueOf(_fileEntry.getFileEntryId()),\n\t\t\t\t\tLiferayWindowState.POP_UP.toString(), null, _request);\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t\tthrow new SystemException(\n\t\t\t\t\t\"Unable to create permissions URL\", e);\n\t\t\t}\n\n\t\t\tURLMenuItem urlMenuItem = new URLMenuItem(\n\t\t\t\tDLMenuItems.MENU_ITEM_ID_PERMISSIONS, \"icon-lock\",\n\t\t\t\t\"permissions\", permissionsURL);\n\n\t\t\turlMenuItem.setMethod(\"get\");\n\t\t\turlMenuItem.setUseDialog(true);\n\n\t\t\tmenuItems.add(urlMenuItem);\n\t\t}\n\t}","id":16349,"modified_method":"private void _addPermissionsMenuItem(List<MenuItem> menuItems)\n\t\tthrows PortalException {\n\n\t\tif (_dlActionsDisplayContext.isShowActions() &&\n\t\t\tisPermissionsButtonVisible()) {\n\n\t\t\tString permissionsURL = null;\n\n\t\t\ttry {\n\t\t\t\tpermissionsURL = PermissionsURLTag.doTag(\n\t\t\t\t\tnull, DLFileEntryConstants.getClassName(),\n\t\t\t\t\tHtmlUtil.unescape(_fileEntry.getTitle()), null,\n\t\t\t\t\tString.valueOf(_fileEntry.getFileEntryId()),\n\t\t\t\t\tLiferayWindowState.POP_UP.toString(), null, _request);\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t\tthrow new SystemException(\n\t\t\t\t\t\"Unable to create permissions URL\", e);\n\t\t\t}\n\n\t\t\tURLMenuItem urlMenuItem = new URLMenuItem();\n\n\t\t\turlMenuItem.setIconCssClass(\"icon-lock\");\n\t\t\turlMenuItem.setId(DLMenuItems.MENU_ITEM_ID_PERMISSIONS);\n\t\t\turlMenuItem.setMessage(\"permissions\");\n\t\t\turlMenuItem.setMethod(\"get\");\n\t\t\turlMenuItem.setURL(permissionsURL.toString());\n\t\t\turlMenuItem.setUseDialog(true);\n\n\t\t\tmenuItems.add(urlMenuItem);\n\t\t}\n\t}","commit_id":"f6f3e82ff20336fe325ec9325cd3cceb1fd92b84","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public boolean getTrash() {\n\t\treturn _trash;\n\t}","id":16350,"modified_method":"public boolean isTrash() {\n\t\treturn _trash;\n\t}","commit_id":"f6f3e82ff20336fe325ec9325cd3cceb1fd92b84","url":"https://github.com/liferay/liferay-portal"},{"original_method":"@Test\n    public void testSortNestedWithNestedFilter() throws Exception {\n        client.admin().indices().prepareDelete().execute().actionGet();\n        client.admin().indices().prepareCreate(\"test\")\n                .setSettings(ImmutableSettings.settingsBuilder().put(\"index.number_of_shards\", 1).put(\"index.number_of_replicas\", 0))\n                .addMapping(\"type1\", XContentFactory.jsonBuilder().startObject()\n                        .startObject(\"type1\")\n                        .startObject(\"properties\")\n                        .startObject(\"grand_parent_values\").field(\"type\", \"long\").endObject()\n                        .startObject(\"parent\").field(\"type\", \"nested\")\n                        .startObject(\"properties\")\n                        .startObject(\"parent_values\").field(\"type\", \"long\").endObject()\n                        .startObject(\"child\").field(\"type\", \"nested\")\n                        .startObject(\"properties\")\n                        .startObject(\"child_values\").field(\"type\", \"long\").endObject()\n                        .endObject()\n                        .endObject()\n                        .endObject()\n                        .endObject()\n                        .endObject()\n                        .endObject()\n                        .endObject())\n                .execute().actionGet();\n        client.admin().cluster().prepareHealth().setWaitForGreenStatus().execute().actionGet();\n\n        client.prepareIndex(\"test\", \"type1\", Integer.toString(1)).setSource(jsonBuilder().startObject()\n                .field(\"grand_parent_values\", 1l)\n                .startObject(\"parent\")\n                .field(\"filter\", false)\n                .field(\"parent_values\", 1l)\n                .startObject(\"child\")\n                .field(\"filter\", true)\n                .field(\"child_values\", 1l)\n                .endObject()\n                .startObject(\"child\")\n                .field(\"filter\", false)\n                .field(\"child_values\", 6l)\n                .endObject()\n                .endObject()\n                .startObject(\"parent\")\n                .field(\"filter\", true)\n                .field(\"parent_values\", 2l)\n                .startObject(\"child\")\n                .field(\"filter\", false)\n                .field(\"child_values\", -1l)\n                .endObject()\n                .startObject(\"child\")\n                .field(\"filter\", false)\n                .field(\"child_values\", 5l)\n                .endObject()\n                .endObject()\n                .endObject()).execute().actionGet();\n\n        client.prepareIndex(\"test\", \"type1\", Integer.toString(2)).setSource(jsonBuilder().startObject()\n                .field(\"grand_parent_values\", 2l)\n                .startObject(\"parent\")\n                .field(\"filter\", false)\n                .field(\"parent_values\", 2l)\n                .startObject(\"child\")\n                .field(\"filter\", true)\n                .field(\"child_values\", 2l)\n                .endObject()\n                .startObject(\"child\")\n                .field(\"filter\", false)\n                .field(\"child_values\", 4l)\n                .endObject()\n                .endObject()\n                .startObject(\"parent\")\n                .field(\"parent_values\", 3l)\n                .field(\"filter\", true)\n                .startObject(\"child\")\n                .field(\"child_values\", -2l)\n                .field(\"filter\", false)\n                .endObject()\n                .startObject(\"child\")\n                .field(\"filter\", false)\n                .field(\"child_values\", 3l)\n                .endObject()\n                .endObject()\n                .endObject()).execute().actionGet();\n\n        client.prepareIndex(\"test\", \"type1\", Integer.toString(3)).setSource(jsonBuilder().startObject()\n                .field(\"grand_parent_values\", 3l)\n                .startObject(\"parent\")\n                .field(\"parent_values\", 3l)\n                .field(\"filter\", false)\n                .startObject(\"child\")\n                .field(\"filter\", true)\n                .field(\"child_values\", 3l)\n                .endObject()\n                .startObject(\"child\")\n                .field(\"filter\", false)\n                .field(\"child_values\", 1l)\n                .endObject()\n                .endObject()\n                .startObject(\"parent\")\n                .field(\"parent_values\", 4l)\n                .field(\"filter\", true)\n                .startObject(\"child\")\n                .field(\"filter\", false)\n                .field(\"child_values\", -3l)\n                .endObject()\n                .startObject(\"child\")\n                .field(\"filter\", false)\n                .field(\"child_values\", 1l)\n                .endObject()\n                .endObject()\n                .endObject()).execute().actionGet();\n        client.admin().indices().prepareRefresh().execute().actionGet();\n\n        // Without nested filter\n        SearchResponse searchResponse = client.prepareSearch()\n                .setQuery(matchAllQuery())\n                .addSort(\n                        SortBuilders.fieldSort(\"parent.child.child_values\")\n                                .setNestedPath(\"parent.child\")\n                                .order(SortOrder.ASC)\n                )\n                .execute().actionGet();\n        assertThat(searchResponse.getHits().totalHits(), equalTo(3l));\n        assertThat(searchResponse.getHits().getHits().length, equalTo(3));\n        assertThat(searchResponse.getHits().getHits()[0].getId(), equalTo(\"3\"));\n        assertThat(searchResponse.getHits().getHits()[0].sortValues()[0].toString(), equalTo(\"-3\"));\n        assertThat(searchResponse.getHits().getHits()[1].getId(), equalTo(\"2\"));\n        assertThat(searchResponse.getHits().getHits()[1].sortValues()[0].toString(), equalTo(\"-2\"));\n        assertThat(searchResponse.getHits().getHits()[2].getId(), equalTo(\"1\"));\n        assertThat(searchResponse.getHits().getHits()[2].sortValues()[0].toString(), equalTo(\"-1\"));\n\n        // With nested filter\n        searchResponse = client.prepareSearch()\n                .setQuery(matchAllQuery())\n                .addSort(\n                        SortBuilders.fieldSort(\"parent.child.child_values\")\n                                .setNestedPath(\"parent.child\")\n                                .setNestedFilter(FilterBuilders.termFilter(\"parent.child.filter\", true))\n                                .order(SortOrder.ASC)\n                )\n                .execute().actionGet();\n        assertThat(searchResponse.getHits().totalHits(), equalTo(3l));\n        assertThat(searchResponse.getHits().getHits().length, equalTo(3));\n        assertThat(searchResponse.getHits().getHits()[0].getId(), equalTo(\"1\"));\n        assertThat(searchResponse.getHits().getHits()[0].sortValues()[0].toString(), equalTo(\"1\"));\n        assertThat(searchResponse.getHits().getHits()[1].getId(), equalTo(\"2\"));\n        assertThat(searchResponse.getHits().getHits()[1].sortValues()[0].toString(), equalTo(\"2\"));\n        assertThat(searchResponse.getHits().getHits()[2].getId(), equalTo(\"3\"));\n        assertThat(searchResponse.getHits().getHits()[2].sortValues()[0].toString(), equalTo(\"3\"));\n\n        // Nested path should be automatically detected, expect same results as above search request\n        searchResponse = client.prepareSearch()\n                .setQuery(matchAllQuery())\n                .addSort(\n                        SortBuilders.fieldSort(\"parent.child.child_values\")\n                                .setNestedFilter(FilterBuilders.termFilter(\"parent.child.filter\", true))\n                                .order(SortOrder.ASC)\n                )\n                .execute().actionGet();\n\n        assertThat(searchResponse.getHits().totalHits(), equalTo(3l));\n        assertThat(searchResponse.getHits().totalHits(), equalTo(3l));\n        assertThat(searchResponse.getHits().getHits().length, equalTo(3));\n        assertThat(searchResponse.getHits().getHits()[0].getId(), equalTo(\"1\"));\n        assertThat(searchResponse.getHits().getHits()[0].sortValues()[0].toString(), equalTo(\"1\"));\n        assertThat(searchResponse.getHits().getHits()[1].getId(), equalTo(\"2\"));\n        assertThat(searchResponse.getHits().getHits()[1].sortValues()[0].toString(), equalTo(\"2\"));\n        assertThat(searchResponse.getHits().getHits()[2].getId(), equalTo(\"3\"));\n        assertThat(searchResponse.getHits().getHits()[2].sortValues()[0].toString(), equalTo(\"3\"));\n\n        searchResponse = client.prepareSearch()\n                .setQuery(matchAllQuery())\n                .addSort(\n                        SortBuilders.fieldSort(\"parent.parent_values\")\n                                .setNestedPath(\"parent.child\")\n                                .setNestedFilter(FilterBuilders.termFilter(\"parent.filter\", false))\n                                .order(SortOrder.ASC)\n                )\n                .execute().actionGet();\n        assertThat(searchResponse.getHits().totalHits(), equalTo(3l));\n        assertThat(searchResponse.getHits().getHits().length, equalTo(3));\n        assertThat(searchResponse.getHits().getHits()[0].getId(), equalTo(\"1\"));\n        assertThat(searchResponse.getHits().getHits()[0].sortValues()[0].toString(), equalTo(\"1\"));\n        assertThat(searchResponse.getHits().getHits()[1].getId(), equalTo(\"2\"));\n        assertThat(searchResponse.getHits().getHits()[1].sortValues()[0].toString(), equalTo(\"2\"));\n        assertThat(searchResponse.getHits().getHits()[2].getId(), equalTo(\"3\"));\n        assertThat(searchResponse.getHits().getHits()[2].sortValues()[0].toString(), equalTo(\"3\"));\n\n        searchResponse = client.prepareSearch()\n                .setQuery(matchAllQuery())\n                .addSort(\n                        SortBuilders.fieldSort(\"parent.child.child_values\")\n                                .setNestedPath(\"parent.child\")\n                                .setNestedFilter(FilterBuilders.termFilter(\"parent.filter\", false))\n                                .order(SortOrder.ASC)\n                )\n                .execute().actionGet();\n        assertThat(searchResponse.getHits().totalHits(), equalTo(3l));\n        assertThat(searchResponse.getHits().getHits().length, equalTo(3));\n        // TODO: If we expose ToChildBlockJoinQuery we can filter sort values based on a higher level nested objects\n//        assertThat(searchResponse.getHits().getHits()[0].getId(), equalTo(\"3\"));\n//        assertThat(searchResponse.getHits().getHits()[0].sortValues()[0].toString(), equalTo(\"-3\"));\n//        assertThat(searchResponse.getHits().getHits()[1].getId(), equalTo(\"2\"));\n//        assertThat(searchResponse.getHits().getHits()[1].sortValues()[0].toString(), equalTo(\"-2\"));\n//        assertThat(searchResponse.getHits().getHits()[2].getId(), equalTo(\"1\"));\n//        assertThat(searchResponse.getHits().getHits()[2].sortValues()[0].toString(), equalTo(\"-1\"));\n    }","id":16351,"modified_method":"@Test\n    public void testSortNestedWithNestedFilter() throws Exception {\n        client.admin().indices().prepareDelete().execute().actionGet();\n        client.admin().indices().prepareCreate(\"test\")\n                .setSettings(ImmutableSettings.settingsBuilder().put(\"index.number_of_shards\", 1).put(\"index.number_of_replicas\", 0))\n                .addMapping(\"type1\", XContentFactory.jsonBuilder().startObject()\n                        .startObject(\"type1\")\n                        .startObject(\"properties\")\n                        .startObject(\"grand_parent_values\").field(\"type\", \"long\").endObject()\n                        .startObject(\"parent\").field(\"type\", \"nested\")\n                        .startObject(\"properties\")\n                        .startObject(\"parent_values\").field(\"type\", \"long\").endObject()\n                        .startObject(\"child\").field(\"type\", \"nested\")\n                        .startObject(\"properties\")\n                        .startObject(\"child_values\").field(\"type\", \"long\").endObject()\n                        .endObject()\n                        .endObject()\n                        .endObject()\n                        .endObject()\n                        .endObject()\n                        .endObject()\n                        .endObject())\n                .execute().actionGet();\n        client.admin().cluster().prepareHealth().setWaitForGreenStatus().execute().actionGet();\n\n        client.prepareIndex(\"test\", \"type1\", Integer.toString(1)).setSource(jsonBuilder().startObject()\n                .field(\"grand_parent_values\", 1l)\n                .startObject(\"parent\")\n                .field(\"filter\", false)\n                .field(\"parent_values\", 1l)\n                .startObject(\"child\")\n                .field(\"filter\", true)\n                .field(\"child_values\", 1l)\n                .startObject(\"child_obj\")\n                .field(\"value\", 1l)\n                .endObject()\n                .endObject()\n                .startObject(\"child\")\n                .field(\"filter\", false)\n                .field(\"child_values\", 6l)\n                .endObject()\n                .endObject()\n                .startObject(\"parent\")\n                .field(\"filter\", true)\n                .field(\"parent_values\", 2l)\n                .startObject(\"child\")\n                .field(\"filter\", false)\n                .field(\"child_values\", -1l)\n                .endObject()\n                .startObject(\"child\")\n                .field(\"filter\", false)\n                .field(\"child_values\", 5l)\n                .endObject()\n                .endObject()\n                .endObject()).execute().actionGet();\n\n        client.prepareIndex(\"test\", \"type1\", Integer.toString(2)).setSource(jsonBuilder().startObject()\n                .field(\"grand_parent_values\", 2l)\n                .startObject(\"parent\")\n                .field(\"filter\", false)\n                .field(\"parent_values\", 2l)\n                .startObject(\"child\")\n                .field(\"filter\", true)\n                .field(\"child_values\", 2l)\n                .startObject(\"child_obj\")\n                .field(\"value\", 2l)\n                .endObject()\n                .endObject()\n                .startObject(\"child\")\n                .field(\"filter\", false)\n                .field(\"child_values\", 4l)\n                .endObject()\n                .endObject()\n                .startObject(\"parent\")\n                .field(\"parent_values\", 3l)\n                .field(\"filter\", true)\n                .startObject(\"child\")\n                .field(\"child_values\", -2l)\n                .field(\"filter\", false)\n                .endObject()\n                .startObject(\"child\")\n                .field(\"filter\", false)\n                .field(\"child_values\", 3l)\n                .endObject()\n                .endObject()\n                .endObject()).execute().actionGet();\n\n        client.prepareIndex(\"test\", \"type1\", Integer.toString(3)).setSource(jsonBuilder().startObject()\n                .field(\"grand_parent_values\", 3l)\n                .startObject(\"parent\")\n                .field(\"parent_values\", 3l)\n                .field(\"filter\", false)\n                .startObject(\"child\")\n                .field(\"filter\", true)\n                .field(\"child_values\", 3l)\n                .startObject(\"child_obj\")\n                .field(\"value\", 3l)\n                .endObject()\n                .endObject()\n                .startObject(\"child\")\n                .field(\"filter\", false)\n                .field(\"child_values\", 1l)\n                .endObject()\n                .endObject()\n                .startObject(\"parent\")\n                .field(\"parent_values\", 4l)\n                .field(\"filter\", true)\n                .startObject(\"child\")\n                .field(\"filter\", false)\n                .field(\"child_values\", -3l)\n                .endObject()\n                .startObject(\"child\")\n                .field(\"filter\", false)\n                .field(\"child_values\", 1l)\n                .endObject()\n                .endObject()\n                .endObject()).execute().actionGet();\n        client.admin().indices().prepareRefresh().execute().actionGet();\n\n        // Without nested filter\n        SearchResponse searchResponse = client.prepareSearch()\n                .setQuery(matchAllQuery())\n                .addSort(\n                        SortBuilders.fieldSort(\"parent.child.child_values\")\n                                .setNestedPath(\"parent.child\")\n                                .order(SortOrder.ASC)\n                )\n                .execute().actionGet();\n        assertThat(searchResponse.getHits().totalHits(), equalTo(3l));\n        assertThat(searchResponse.getHits().getHits().length, equalTo(3));\n        assertThat(searchResponse.getHits().getHits()[0].getId(), equalTo(\"3\"));\n        assertThat(searchResponse.getHits().getHits()[0].sortValues()[0].toString(), equalTo(\"-3\"));\n        assertThat(searchResponse.getHits().getHits()[1].getId(), equalTo(\"2\"));\n        assertThat(searchResponse.getHits().getHits()[1].sortValues()[0].toString(), equalTo(\"-2\"));\n        assertThat(searchResponse.getHits().getHits()[2].getId(), equalTo(\"1\"));\n        assertThat(searchResponse.getHits().getHits()[2].sortValues()[0].toString(), equalTo(\"-1\"));\n\n        // With nested filter\n        searchResponse = client.prepareSearch()\n                .setQuery(matchAllQuery())\n                .addSort(\n                        SortBuilders.fieldSort(\"parent.child.child_values\")\n                                .setNestedPath(\"parent.child\")\n                                .setNestedFilter(FilterBuilders.termFilter(\"parent.child.filter\", true))\n                                .order(SortOrder.ASC)\n                )\n                .execute().actionGet();\n        assertThat(searchResponse.getHits().totalHits(), equalTo(3l));\n        assertThat(searchResponse.getHits().getHits().length, equalTo(3));\n        assertThat(searchResponse.getHits().getHits()[0].getId(), equalTo(\"1\"));\n        assertThat(searchResponse.getHits().getHits()[0].sortValues()[0].toString(), equalTo(\"1\"));\n        assertThat(searchResponse.getHits().getHits()[1].getId(), equalTo(\"2\"));\n        assertThat(searchResponse.getHits().getHits()[1].sortValues()[0].toString(), equalTo(\"2\"));\n        assertThat(searchResponse.getHits().getHits()[2].getId(), equalTo(\"3\"));\n        assertThat(searchResponse.getHits().getHits()[2].sortValues()[0].toString(), equalTo(\"3\"));\n\n        // Nested path should be automatically detected, expect same results as above search request\n        searchResponse = client.prepareSearch()\n                .setQuery(matchAllQuery())\n                .addSort(\n                        SortBuilders.fieldSort(\"parent.child.child_values\")\n                                .setNestedFilter(FilterBuilders.termFilter(\"parent.child.filter\", true))\n                                .order(SortOrder.ASC)\n                )\n                .execute().actionGet();\n\n        assertThat(searchResponse.getHits().totalHits(), equalTo(3l));\n        assertThat(searchResponse.getHits().totalHits(), equalTo(3l));\n        assertThat(searchResponse.getHits().getHits().length, equalTo(3));\n        assertThat(searchResponse.getHits().getHits()[0].getId(), equalTo(\"1\"));\n        assertThat(searchResponse.getHits().getHits()[0].sortValues()[0].toString(), equalTo(\"1\"));\n        assertThat(searchResponse.getHits().getHits()[1].getId(), equalTo(\"2\"));\n        assertThat(searchResponse.getHits().getHits()[1].sortValues()[0].toString(), equalTo(\"2\"));\n        assertThat(searchResponse.getHits().getHits()[2].getId(), equalTo(\"3\"));\n        assertThat(searchResponse.getHits().getHits()[2].sortValues()[0].toString(), equalTo(\"3\"));\n\n        searchResponse = client.prepareSearch()\n                .setQuery(matchAllQuery())\n                .addSort(\n                        SortBuilders.fieldSort(\"parent.parent_values\")\n                                .setNestedPath(\"parent.child\")\n                                .setNestedFilter(FilterBuilders.termFilter(\"parent.filter\", false))\n                                .order(SortOrder.ASC)\n                )\n                .execute().actionGet();\n        assertThat(searchResponse.getHits().totalHits(), equalTo(3l));\n        assertThat(searchResponse.getHits().getHits().length, equalTo(3));\n        assertThat(searchResponse.getHits().getHits()[0].getId(), equalTo(\"1\"));\n        assertThat(searchResponse.getHits().getHits()[0].sortValues()[0].toString(), equalTo(\"1\"));\n        assertThat(searchResponse.getHits().getHits()[1].getId(), equalTo(\"2\"));\n        assertThat(searchResponse.getHits().getHits()[1].sortValues()[0].toString(), equalTo(\"2\"));\n        assertThat(searchResponse.getHits().getHits()[2].getId(), equalTo(\"3\"));\n        assertThat(searchResponse.getHits().getHits()[2].sortValues()[0].toString(), equalTo(\"3\"));\n\n        searchResponse = client.prepareSearch()\n                .setQuery(matchAllQuery())\n                .addSort(\n                        SortBuilders.fieldSort(\"parent.child.child_values\")\n                                .setNestedPath(\"parent.child\")\n                                .setNestedFilter(FilterBuilders.termFilter(\"parent.filter\", false))\n                                .order(SortOrder.ASC)\n                )\n                .execute().actionGet();\n        assertThat(searchResponse.getHits().totalHits(), equalTo(3l));\n        assertThat(searchResponse.getHits().getHits().length, equalTo(3));\n        // TODO: If we expose ToChildBlockJoinQuery we can filter sort values based on a higher level nested objects\n//        assertThat(searchResponse.getHits().getHits()[0].getId(), equalTo(\"3\"));\n//        assertThat(searchResponse.getHits().getHits()[0].sortValues()[0].toString(), equalTo(\"-3\"));\n//        assertThat(searchResponse.getHits().getHits()[1].getId(), equalTo(\"2\"));\n//        assertThat(searchResponse.getHits().getHits()[1].sortValues()[0].toString(), equalTo(\"-2\"));\n//        assertThat(searchResponse.getHits().getHits()[2].getId(), equalTo(\"1\"));\n//        assertThat(searchResponse.getHits().getHits()[2].sortValues()[0].toString(), equalTo(\"-1\"));\n\n        // Check if closest nested type is resolved\n        searchResponse = client.prepareSearch()\n                .setQuery(matchAllQuery())\n                .addSort(\n                        SortBuilders.fieldSort(\"parent.child.child_obj.value\")\n                                .setNestedFilter(FilterBuilders.termFilter(\"parent.child.filter\", true))\n                                .order(SortOrder.ASC)\n                )\n                .execute().actionGet();\n        assertThat(searchResponse.getHits().totalHits(), equalTo(3l));\n        assertThat(searchResponse.getHits().getHits().length, equalTo(3));\n        assertThat(searchResponse.getHits().getHits()[0].getId(), equalTo(\"1\"));\n        assertThat(searchResponse.getHits().getHits()[0].sortValues()[0].toString(), equalTo(\"1\"));\n        assertThat(searchResponse.getHits().getHits()[1].getId(), equalTo(\"2\"));\n        assertThat(searchResponse.getHits().getHits()[1].sortValues()[0].toString(), equalTo(\"2\"));\n        assertThat(searchResponse.getHits().getHits()[2].getId(), equalTo(\"3\"));\n        assertThat(searchResponse.getHits().getHits()[2].sortValues()[0].toString(), equalTo(\"3\"));\n    }","commit_id":"2b5e3f5586ad0c71dcf404a166e18529a960eb00","url":"https://github.com/elastic/elasticsearch"},{"original_method":"private static ObjectMapper resolveClosestNestedObjectMapper(String fieldName, SearchContext context) {\n        int indexOf = fieldName.lastIndexOf('.');\n        if (indexOf == -1) {\n            return null;\n        }\n\n        String objectPath = fieldName.substring(0, indexOf);\n        ObjectMappers objectMappers = context.mapperService().objectMapper(objectPath);\n        if (objectMappers == null) {\n            return null;\n        }\n\n        for (ObjectMapper objectMapper : objectMappers) {\n            if (objectMapper.nested().isNested()) {\n                return objectMapper;\n            }\n        }\n\n        return null;\n    }","id":16352,"modified_method":"private static ObjectMapper resolveClosestNestedObjectMapper(String fieldName, SearchContext context) {\n        int indexOf = fieldName.lastIndexOf('.');\n        if (indexOf == -1) {\n            return null;\n        } else {\n            do {\n                String objectPath = fieldName.substring(0, indexOf);\n                ObjectMappers objectMappers = context.mapperService().objectMapper(objectPath);\n                if (objectMappers == null) {\n                    return null;\n                }\n\n                if (objectMappers.hasNested()) {\n                    for (ObjectMapper objectMapper : objectMappers) {\n                        if (objectMapper.nested().isNested()) {\n                            return objectMapper;\n                        }\n                    }\n                }\n\n                indexOf = objectPath.lastIndexOf('.');\n            } while (indexOf != -1);\n        }\n\n        return null;\n    }","commit_id":"2b5e3f5586ad0c71dcf404a166e18529a960eb00","url":"https://github.com/elastic/elasticsearch"},{"original_method":"/**\n     * Returns the mail receivers in a string as string array.<p>\n     * \n     * The receivers are separated by a semicolon.<p>\n     *\n     * @param receivers The string that contains the receivers\n     * @return String[] The receivers as elements in an string array\n     */\n    private String[] getReceiverArray(String receivers) {\n        String[] retArray = null;\n        if (receivers != null) {\n            if (!\"\".equals(receivers.trim())) {\n                StringTokenizer tokens = new StringTokenizer(receivers, \";\");\n                Vector vec = new Vector();\n                while (tokens.hasMoreElements()) {\n                    vec.addElement(tokens.nextElement());\n                }\n                retArray = new String[vec.size()];\n                vec.copyInto(retArray);\n            } else {\n                retArray = new String[] {};\n            }\n        } else {\n            retArray = new String[] {};\n        }\n        return retArray;\n    }","id":16353,"modified_method":"/**\n     * Returns the mail receivers in a string as string array.<p>\n     * \n     * The receivers are separated by a semicolon.<p>\n     *\n     * @param receivers The string that contains the receivers\n     * @return String[] The receivers as elements in an string array\n     */\n    private List getReceiverList(String receivers) {\n        List retArray = new ArrayList();\n        if (receivers != null) {\n            if (!\"\".equals(receivers.trim())) {\n                StringTokenizer tokens = new StringTokenizer(receivers, \";\");\n                retArray = new ArrayList();\n                while (tokens.hasMoreElements()) {\n                    try {\n                        retArray.add(new InternetAddress((String)tokens.nextElement()));\n                    } catch (AddressException e) {\n                        if (OpenCms.getLog(this).isErrorEnabled()) {\n                            OpenCms.getLog(this).error(e);\n                        }   \n                    }\n                }\n            }\n        }\n        return retArray;\n    }","commit_id":"256e736e48ad2a3069f023bca3b1ffd77337d27a","url":"https://github.com/alkacon/opencms-core"},{"original_method":"/**\n     * Checks all existing external links.<p>\n     *\n     * @param cms a OpenCms context object\n     * @param parameter link check parameters\n     * @throws CmsException if something goes wrong \n     */\n    public void linksUrlCheck(CmsObject cms, String parameter) throws CmsException {\n        // hashtable that contains the urls that are not available and the resourcenames of the links\n        // where this url is referenced\n        Hashtable notAvailable = new Hashtable();\n\n        // vector that contains all external links from the database\n        Vector linkList = new Vector();\n\n        // vector and hashtable that contains the links of an owner that are not available,\n        // so there can be created a mail to the owner with all the broken links\n        Hashtable ownerLinkList = new Hashtable();\n\n        // get the hashtable with the last check result from the system table\n        Hashtable linkckecktable = CmsLinkCheck.readLinkCheckTable();\n\n        Hashtable newLinkchecktable = new Hashtable();\n        // get the values for email from the registry\n        // TODO: check REGISTRY \"checklink\"  \n        int warning = 0;\n        Hashtable emailValues = CmsRegistry.getInstance().getSystemValues(\"checklink\");\n        // Hashtable emailValues = new Hashtable();\n        // get templateFile this way because there is no actual file if\n        // method is called from scheduler ...\n        CmsXmlTemplateFile template = getOwnTemplateFile(cms, (String)emailValues.get(\"mailtemplate\"), \"\", null, \"\");\n\n        // set the current date and time\n        GregorianCalendar actDate = new GregorianCalendar();\n        String actDateString = getDateString(actDate);\n        template.setData(\"actdate\", actDateString);\n        newLinkchecktable.put(I_CmsConstants.C_LINKCHECKTABLE_DATE, actDateString);\n\n        StringBuffer mailContent = new StringBuffer(template.getProcessedDataValue(\"single_message\"));\n\n        // get all links from the database\n        linkList = new Vector(cms.readFilesByType(1, CmsResourceTypePointer.C_RESOURCE_TYPE_ID));\n        for (int i = 0; i < linkList.size(); i++) {\n            CmsFile linkElement = (CmsFile)linkList.elementAt(i);\n            String linkName = cms.getSitePath(linkElement);\n            String linkUrl = new String(linkElement.getContents());\n            // do not check internal links\n            if (!linkUrl.startsWith(\"/\")) {\n                // get the number of failed checks for the link\n                int failedCheck = 0;\n                String numFromTable = (String)linkckecktable.get(linkName + \", \" + linkUrl);\n                if ((numFromTable != null) && (!\"\".equals(numFromTable.trim()))) {\n                    failedCheck = Integer.parseInt(numFromTable);\n                }\n\n                // check the url,\n                // if the url is not readable add it to the list of not available urls\n                if (!checkUrl(linkUrl)) {\n                    // get the vector of resourcenames from the hashtable of urls\n                    Vector inList = null;\n                    inList = (Vector)notAvailable.get(linkUrl);\n                    if (inList == null) {\n                        inList = new Vector();\n                    }\n                    inList.addElement(linkName);\n                    notAvailable.put(linkUrl, inList);\n\n                    // create the hashtable for the owner mails if requested\n                    if ((parameter != null) && (\"owneremail\".equals(parameter.trim()))) {\n                        // add the failed link to the links of the owner\n                        // first try to get the email\n                        String ownerEmail = null;\n                        if ((ownerEmail == null) || (\"\".equals(ownerEmail.trim()))) {\n                            ownerEmail = (String)emailValues.get(\"mailto\");\n                        }\n                        Hashtable ownerLinks = null;\n                        ownerLinks = (Hashtable)ownerLinkList.get(ownerEmail);\n                        if (ownerLinks == null) {\n                            ownerLinks = new Hashtable();\n                        }\n                        ownerLinks.put(linkName, linkUrl);\n                        ownerLinkList.put(ownerEmail, ownerLinks);\n                    }\n\n                    // add the failed link to the new linkchecktable\n                    newLinkchecktable.put(linkName + \", \" + linkUrl, \"\" + (failedCheck + 1));\n                }\n            }\n        }\n        // write the linkchecktable to database\n        CmsLinkCheck.writeLinkCheckTable(newLinkchecktable);\n\n        // get the information for the output\n        if ((parameter != null) && (!\"\".equals(parameter.trim()))) {\n            // send an email to the owner of the link\n            if (\"owneremail\".equals(parameter.trim())) {\n                // get the owners from the owner list\n                if (ownerLinkList.size() > 0) {\n                    Enumeration ownerKeys = ownerLinkList.keys();\n                    while (ownerKeys.hasMoreElements()) {\n                        StringBuffer ownerContent = new StringBuffer();\n                        ownerContent.append(mailContent.toString());\n                        String mailTo = (String)ownerKeys.nextElement();\n                        Hashtable linknames = (Hashtable)ownerLinkList.get(mailTo);\n                        // get all failed links of the owner\n                        Enumeration linkKeys = linknames.keys();\n                        String singleLink = \"\";\n                        while (linkKeys.hasMoreElements()) {\n                            // set the data for the link\n                            singleLink = (String)linkKeys.nextElement();\n                            template.setData(\"ownerlinkname\", singleLink);\n                            template.setData(\"ownerlinkurl\", (String)linknames.get(singleLink));\n                            ownerContent.append(template.getProcessedDataValue(\"ownermail_link\"));\n                        }\n                        // get the email data\n                        String mailSubject = template.getProcessedDataValue(\"emailsubject\");\n                        String mailFrom = (String)emailValues.get(\"mailfrom\");\n                        String[] mailCc = getReceiverArray(template.getDataValue(\"emailcc\"));\n                        String[] mailBcc = getReceiverArray(template.getDataValue(\"emailbcc\"));\n                        String mailType = template.getDataValue(\"emailtype\");\n                        generateEmail(mailFrom, getReceiverArray(mailTo), mailCc, mailBcc, mailSubject, ownerContent.toString(), mailType);\n                    }\n                }\n            } else {\n                // if there are not readable urls create the content of the eMail\n                // and send it to the specified user(s)\n                if (notAvailable.size() > 0) {\n                    Enumeration linkKeys = notAvailable.keys();\n                    StringBuffer mailUrls = new StringBuffer();\n                    while (linkKeys.hasMoreElements()) {\n                        String url = (String)linkKeys.nextElement();\n                        template.setData(\"url\", url);\n                        Vector linknames = (Vector)notAvailable.get(url);\n                        StringBuffer mailLinks = new StringBuffer();\n                        for (int j = 0; j < linknames.size(); j++) {\n                            String nextLink = (String)linknames.elementAt(j);\n                            template.setData(\"linkname\", nextLink);\n                            mailLinks.append(template.getProcessedDataValue(\"single_link\"));\n                        }\n                        template.setData(\"links\", mailLinks.toString());\n                        mailUrls.append(template.getProcessedDataValue(\"single_url\"));\n                    }\n                    mailContent.append(mailUrls.toString());\n                    if (\"email\".equals(parameter.trim())) {\n                        // get the eMail information\n                        String mailSubject = template.getProcessedDataValue(\"emailsubject\");\n                        String mailFrom = (String)emailValues.get(\"mailfrom\");\n                        String[] mailTo = getReceiverArray((String)emailValues.get(\"mailto\"));\n                        String[] mailCc = getReceiverArray(template.getDataValue(\"emailcc\"));\n                        String[] mailBcc = getReceiverArray(template.getDataValue(\"emailbcc\"));\n                        String mailType = template.getDataValue(\"emailtype\");\n                        generateEmail(mailFrom, mailTo, mailCc, mailBcc, mailSubject, mailContent.toString(), mailType);\n                    } else {\n                        generateFile(mailContent.toString(), parameter, actDate);\n                    }\n                }\n            }\n        }\n    }","id":16354,"modified_method":"/**\n     * Checks all existing external links.<p>\n     *\n     * @param cms a OpenCms context object\n     * @param parameter link check parameters\n     * @throws CmsException if something goes wrong \n     */\n    public void linksUrlCheck(CmsObject cms, String parameter) throws CmsException {\n        // hashtable that contains the urls that are not available and the resourcenames of the links\n        // where this url is referenced\n        Hashtable notAvailable = new Hashtable();\n\n        // vector that contains all external links from the database\n        Vector linkList = new Vector();\n\n        // vector and hashtable that contains the links of an owner that are not available,\n        // so there can be created a mail to the owner with all the broken links\n        Hashtable ownerLinkList = new Hashtable();\n\n        // get the hashtable with the last check result from the system table\n        Hashtable linkckecktable = CmsLinkCheck.readLinkCheckTable();\n\n        Hashtable newLinkchecktable = new Hashtable();\n        // get the values for email from the registry\n        // TODO: check REGISTRY \"checklink\"  \n        int warning = 0;\n        Hashtable emailValues = CmsRegistry.getInstance().getSystemValues(\"checklink\");\n        // Hashtable emailValues = new Hashtable();\n        // get templateFile this way because there is no actual file if\n        // method is called from scheduler ...\n        CmsXmlTemplateFile template = getOwnTemplateFile(cms, (String)emailValues.get(\"mailtemplate\"), \"\", null, \"\");\n\n        // set the current date and time\n        GregorianCalendar actDate = new GregorianCalendar();\n        String actDateString = getDateString(actDate);\n        template.setData(\"actdate\", actDateString);\n        newLinkchecktable.put(I_CmsConstants.C_LINKCHECKTABLE_DATE, actDateString);\n\n        StringBuffer mailContent = new StringBuffer(template.getProcessedDataValue(\"single_message\"));\n\n        // get all links from the database\n        linkList = new Vector(cms.readFilesByType(1, CmsResourceTypePointer.C_RESOURCE_TYPE_ID));\n        for (int i = 0; i < linkList.size(); i++) {\n            CmsFile linkElement = (CmsFile)linkList.elementAt(i);\n            String linkName = cms.getSitePath(linkElement);\n            String linkUrl = new String(linkElement.getContents());\n            // do not check internal links\n            if (!linkUrl.startsWith(\"/\")) {\n                // get the number of failed checks for the link\n                int failedCheck = 0;\n                String numFromTable = (String)linkckecktable.get(linkName + \", \" + linkUrl);\n                if ((numFromTable != null) && (!\"\".equals(numFromTable.trim()))) {\n                    failedCheck = Integer.parseInt(numFromTable);\n                }\n\n                // check the url,\n                // if the url is not readable add it to the list of not available urls\n                if (!checkUrl(linkUrl)) {\n                    // get the vector of resourcenames from the hashtable of urls\n                    Vector inList = null;\n                    inList = (Vector)notAvailable.get(linkUrl);\n                    if (inList == null) {\n                        inList = new Vector();\n                    }\n                    inList.addElement(linkName);\n                    notAvailable.put(linkUrl, inList);\n\n                    // create the hashtable for the owner mails if requested\n                    if ((parameter != null) && (\"owneremail\".equals(parameter.trim()))) {\n                        // add the failed link to the links of the owner\n                        // first try to get the email\n                        String ownerEmail = null;\n                        if ((ownerEmail == null) || (\"\".equals(ownerEmail.trim()))) {\n                            ownerEmail = (String)emailValues.get(\"mailto\");\n                        }\n                        Hashtable ownerLinks = null;\n                        ownerLinks = (Hashtable)ownerLinkList.get(ownerEmail);\n                        if (ownerLinks == null) {\n                            ownerLinks = new Hashtable();\n                        }\n                        ownerLinks.put(linkName, linkUrl);\n                        ownerLinkList.put(ownerEmail, ownerLinks);\n                    }\n\n                    // add the failed link to the new linkchecktable\n                    newLinkchecktable.put(linkName + \", \" + linkUrl, \"\" + (failedCheck + 1));\n                }\n            }\n        }\n        // write the linkchecktable to database\n        CmsLinkCheck.writeLinkCheckTable(newLinkchecktable);\n\n        // get the information for the output\n        if ((parameter != null) && (!\"\".equals(parameter.trim()))) {\n            // send an email to the owner of the link\n            if (\"owneremail\".equals(parameter.trim())) {\n                // get the owners from the owner list\n                if (ownerLinkList.size() > 0) {\n                    Enumeration ownerKeys = ownerLinkList.keys();\n                    while (ownerKeys.hasMoreElements()) {\n                        StringBuffer ownerContent = new StringBuffer();\n                        ownerContent.append(mailContent.toString());\n                        String mailTo = (String)ownerKeys.nextElement();\n                        Hashtable linknames = (Hashtable)ownerLinkList.get(mailTo);\n                        // get all failed links of the owner\n                        Enumeration linkKeys = linknames.keys();\n                        String singleLink = \"\";\n                        while (linkKeys.hasMoreElements()) {\n                            // set the data for the link\n                            singleLink = (String)linkKeys.nextElement();\n                            template.setData(\"ownerlinkname\", singleLink);\n                            template.setData(\"ownerlinkurl\", (String)linknames.get(singleLink));\n                            ownerContent.append(template.getProcessedDataValue(\"ownermail_link\"));\n                        }\n                        // get the email data\n                        String mailSubject = template.getProcessedDataValue(\"emailsubject\");\n                        String mailFrom = (String)emailValues.get(\"mailfrom\");\n                        List mailCc = getReceiverList(template.getDataValue(\"emailcc\"));\n                        List mailBcc = getReceiverList(template.getDataValue(\"emailbcc\"));\n                        String mailType = template.getDataValue(\"emailtype\");\n                        generateEmail(mailFrom, getReceiverList(mailTo), mailCc, mailBcc, mailSubject, ownerContent.toString(), mailType);\n                    }\n                }\n            } else {\n                // if there are not readable urls create the content of the eMail\n                // and send it to the specified user(s)\n                if (notAvailable.size() > 0) {\n                    Enumeration linkKeys = notAvailable.keys();\n                    StringBuffer mailUrls = new StringBuffer();\n                    while (linkKeys.hasMoreElements()) {\n                        String url = (String)linkKeys.nextElement();\n                        template.setData(\"url\", url);\n                        Vector linknames = (Vector)notAvailable.get(url);\n                        StringBuffer mailLinks = new StringBuffer();\n                        for (int j = 0; j < linknames.size(); j++) {\n                            String nextLink = (String)linknames.elementAt(j);\n                            template.setData(\"linkname\", nextLink);\n                            mailLinks.append(template.getProcessedDataValue(\"single_link\"));\n                        }\n                        template.setData(\"links\", mailLinks.toString());\n                        mailUrls.append(template.getProcessedDataValue(\"single_url\"));\n                    }\n                    mailContent.append(mailUrls.toString());\n                    if (\"email\".equals(parameter.trim())) {\n                        // get the eMail information\n                        String mailSubject = template.getProcessedDataValue(\"emailsubject\");\n                        String mailFrom = (String)emailValues.get(\"mailfrom\");\n                        List mailTo = getReceiverList((String)emailValues.get(\"mailto\"));\n                        List mailCc = getReceiverList(template.getDataValue(\"emailcc\"));\n                        List mailBcc = getReceiverList(template.getDataValue(\"emailbcc\"));\n                        String mailType = template.getDataValue(\"emailtype\");\n                        generateEmail(mailFrom, mailTo, mailCc, mailBcc, mailSubject, mailContent.toString(), mailType);\n                    } else {\n                        generateFile(mailContent.toString(), parameter, actDate);\n                    }\n                }\n            }\n        }\n    }","commit_id":"256e736e48ad2a3069f023bca3b1ffd77337d27a","url":"https://github.com/alkacon/opencms-core"},{"original_method":"/**\n     * Generates a warning email message.<p>\n     *\n     * @param mailFrom the email adress of the sender\n     * @param mailTo the email adress(es) of the receiver(s)\n     * @param mailCc the email adress(es) of the CC-receiver(s)\n     * @param mailBcc the email adress(es) of the BCC-receiver(s)\n     * @param mailSubject the subject of the mail\n     * @param mailContent the content of the mail\n     * @param mailType the type of the mail\n     * @throws CmsException if something goes wrong \n     */\n    private void generateEmail(\n        String mailFrom, \n        String[] mailTo, \n        String[] mailCc, \n        String[] mailBcc, \n        String mailSubject, \n        String mailContent, \n        String mailType\n    ) throws CmsException {\n        // create a new CmsMail object and start sending the mails\n        CmsMail mail = null;\n        if (CmsMail.checkEmail(mailFrom)) {\n            if (CmsMail.checkEmail(mailTo[0])) {\n                if (mailCc.length > 0 && mailBcc.length > 0) {\n                    mail = new CmsMail(mailFrom, mailTo, mailCc, mailBcc, mailSubject, mailContent, mailType);\n                    mail.start();\n                } else if (mailBcc.length > 0) {\n                    mail = new CmsMail(mailFrom, mailTo, mailBcc, mailSubject, mailContent, mailType);\n                    mail.start();\n                } else {\n                    mail = new CmsMail(mailFrom, mailTo, mailSubject, mailContent, mailType);\n                    mail.start();\n                }\n            } else {\n                // do nothing\n            }\n        }\n    }","id":16355,"modified_method":"/**\n     * Generates a warning email message.<p>\n     *\n     * @param mailFrom the email adress of the sender\n     * @param mailTo the email adress(es) of the receiver(s)\n     * @param mailCc the email adress(es) of the CC-receiver(s)\n     * @param mailBcc the email adress(es) of the BCC-receiver(s)\n     * @param mailSubject the subject of the mail\n     * @param mailContent the content of the mail\n     * @param mailType the type of the mail\n     * @throws CmsException if something goes wrong \n     */\n    private void generateEmail(\n        String mailFrom, \n        List mailTo, \n        List mailCc, \n        List mailBcc, \n        String mailSubject, \n        String mailContent, \n        String mailType\n    ) throws CmsException {\n        // create a new CmsMail object and start sending the mails        \n        if (mailType.toLowerCase().indexOf(\"html\") != -1) {\n            CmsHtmlMail mail = new CmsHtmlMail();\n            try {\n                mail.setFrom(mailFrom);\n            } catch (MessagingException e) {\n                throw new CmsException(\"[\" + this.getClass().getName() + \"] \" + \"Error in sending email, invalid recipient email address.\", CmsException.C_BAD_NAME);\n            }\n            mail.setSubject(mailSubject);\n            mail.setHtmlMsg(mailContent);\n            mail.setTextMsg(mailContent);\n            if (mailTo != null) {\n                mail.setTo(mailTo);    \n            }\n            if (mailCc != null) {\n                mail.setCc(mailCc);\n            }\n            if (mailBcc != null) {\n                mail.setCc(mailBcc);\n            }\n            new CmsMailTransport(mail).send();\n        } else {\n            CmsSimpleMail mail = new CmsSimpleMail();\n            try {\n                mail.setFrom(mailFrom);\n            } catch (MessagingException e) {\n                throw new CmsException(\"[\" + this.getClass().getName() + \"] \" + \"Error in sending email, invalid recipient email address.\", CmsException.C_BAD_NAME);\n            }\n            mail.setSubject(mailSubject);\n            mail.setMsg(mailContent);\n            if (mailTo != null) {\n                mail.setTo(mailTo);    \n            }\n            if (mailCc != null) {\n                mail.setCc(mailCc);\n            }\n            if (mailBcc != null) {\n                mail.setCc(mailBcc);\n            }\n            new CmsMailTransport(mail).send();\n        }       \n    }","commit_id":"256e736e48ad2a3069f023bca3b1ffd77337d27a","url":"https://github.com/alkacon/opencms-core"},{"original_method":"/**\n     * Sends a warning or status email with OpenCms Memory information.<p>\n     * \n     * @param warning if true, send a memory warning email \n     */\n    private void monitorSendEmail(boolean warning) {\n        if ((m_emailSender == null) || (m_emailReceiver == null)) {\n            // send no mails if not fully configured\n            return;\n        } else if (warning && (m_warningSendSinceLastStatus && !((m_intervalEmail <= 0) && (System.currentTimeMillis() < (m_lastEmailWarning + m_intervalWarning))))) {\n            // send no warning email if no status email has been send since the last warning\n            // if status is disabled, send no warn email if warn interval has not passed\n            return;\n        } else if ((! warning) && (m_intervalEmail <= 0)) {\n            // if email iterval is <= 0 status email is disabled\n            return;\n        }\n        String date = CmsDateUtil.getDateTimeShort(System.currentTimeMillis());\n        String subject;\n        String content = \"\";\n        if (warning) {\n            m_warningSendSinceLastStatus = true;\n            m_lastEmailWarning = System.currentTimeMillis(); \n            subject = \"OpenCms Memory W A R N I N G [\" + OpenCms.getSystemInfo().getServerName().toUpperCase() + \"/\" + date + \"]\";\n            content += \"W A R N I N G !\\nOpenCms memory consumption on server \" + OpenCms.getSystemInfo().getServerName().toUpperCase() + \" has reached a critical level !\\n\\n\"\n                    + \"The configured limit is \" + m_maxUsagePercent + \"%\\n\\n\";\n        } else {\n            m_warningSendSinceLastStatus = false;\n            m_lastEmailStatus = System.currentTimeMillis();\n            subject = \"OpenCms Memory Status [\" + OpenCms.getSystemInfo().getServerName().toUpperCase() + \"/\" + date + \"]\";\n        }\n        \n        long maxMemory = Runtime.getRuntime().maxMemory() / 1048576;\n        long totalMemory = Runtime.getRuntime().totalMemory() / 1048576;\n        long usedMemory = (Runtime.getRuntime().totalMemory() - Runtime.getRuntime().freeMemory()) / 1048576;\n        long freeMemory = maxMemory - usedMemory;\n        long usage = usedMemory * 100 / maxMemory;\n        \n        content += \"Memory usage report of OpenCms server \" + OpenCms.getSystemInfo().getServerName().toUpperCase() + \" at \" + date + \"\\n\\n\" \n            + \"Memory maximum heap size: \" + maxMemory + \" mb\\n\" \n            + \"Memory current heap size: \" + totalMemory + \" mb\\n\\n\" \n            + \"Memory currently used   : \" + usedMemory + \" mb (\" + usage + \"%)\\n\"\n            + \"Memory currently unused : \" + freeMemory + \" mb\\n\\n\\n\";\n\n        if (warning) {\n            content += \"*** Please take action NOW to ensure that no OutOfMemoryException occurs.\\n\\n\\n\";\n        }\n        \n        OpenCmsSessionManager sm = OpenCmsCore.getInstance().getSessionManager();\n        CmsSessionInfoManager cs = OpenCms.getSessionInfoManager();\n        \n        if ((sm != null) && (cs != null)) {\n            content += \"Current status of the sessions:\\n\\n\";\n            content += \"Logged in users          : \" + cs.getLoggedInUsers().size() + \"\\n\";\n            content += \"Currently active sessions: \" + sm.getCurrentSessions() + \"\\n\";\n            content += \"Total created sessions   : \" + sm.getTotalSessions() + \"\\n\\n\\n\";\n        }\n        \n        sm = null;\n        cs = null;\n        \n        content += \"Current status of the caches:\\n\\n\";        \n        List keyList = Arrays.asList(m_monitoredObjects.keySet().toArray());\n        Collections.sort(keyList);\n        long totalSize = 0;\n        for (Iterator keys = keyList.iterator(); keys.hasNext();) {\n            String key = (String)keys.next();        \n            String shortKeys[] = key.split(\"\\\\.\");\n            String shortKey = shortKeys[shortKeys.length - 2] + \".\" + shortKeys[shortKeys.length - 1];\n            PrintfFormat form = new PrintfFormat(\"%9s\");\n            Object obj = m_monitoredObjects.get(key);\n            \n            long size = getKeySize(obj) + getValueSize(obj) + getCosts(obj);\n            totalSize += size;\n            \n            content += new PrintfFormat(\"%-42.42s\").sprintf(shortKey) + \"  \" \n                    + \"Entries: \" + form.sprintf(getItems(obj)) + \"   \" \n                    + \"Limit: \" + form.sprintf(getLimit(obj)) + \"   \"\n                    + \"Size: \" + form.sprintf(Long.toString(size)) + \"\\n\";\n        }\n        content += \"\\nTotal size of cache memory monitored: \" + totalSize + \" (\" + totalSize / 1048576 + \")\\n\\n\";\n        \n        String from = m_emailSender;\n        String[] to = m_emailReceiver;        \n        try {\n            if (from != null && to != null) {\n                CmsMail email = new CmsMail(from, to, subject, content, \"text/plain\");\n                email.start();                \n            }            \n            if (OpenCms.getLog(this).isInfoEnabled()) {\n                OpenCms.getLog(this).info(\", Memory Monitor \" + (warning?\"warning\":\"status\") + \" email send\");\n            }\n        } catch (CmsException e) {\n            e.printStackTrace();\n        }\n    }","id":16356,"modified_method":"/**\n     * Sends a warning or status email with OpenCms Memory information.<p>\n     * \n     * @param warning if true, send a memory warning email \n     */\n    private void monitorSendEmail(boolean warning) {\n        if ((m_emailSender == null) || (m_emailReceiver == null)) {\n            // send no mails if not fully configured\n            return;\n        } else if (warning && (m_warningSendSinceLastStatus && !((m_intervalEmail <= 0) && (System.currentTimeMillis() < (m_lastEmailWarning + m_intervalWarning))))) {\n            // send no warning email if no status email has been send since the last warning\n            // if status is disabled, send no warn email if warn interval has not passed\n            return;\n        } else if ((! warning) && (m_intervalEmail <= 0)) {\n            // if email iterval is <= 0 status email is disabled\n            return;\n        }\n        String date = CmsDateUtil.getDateTimeShort(System.currentTimeMillis());\n        String subject;\n        String content = \"\";\n        if (warning) {\n            m_warningSendSinceLastStatus = true;\n            m_lastEmailWarning = System.currentTimeMillis(); \n            subject = \"OpenCms Memory W A R N I N G [\" + OpenCms.getSystemInfo().getServerName().toUpperCase() + \"/\" + date + \"]\";\n            content += \"W A R N I N G !\\nOpenCms memory consumption on server \" + OpenCms.getSystemInfo().getServerName().toUpperCase() + \" has reached a critical level !\\n\\n\"\n                    + \"The configured limit is \" + m_maxUsagePercent + \"%\\n\\n\";\n        } else {\n            m_warningSendSinceLastStatus = false;\n            m_lastEmailStatus = System.currentTimeMillis();\n            subject = \"OpenCms Memory Status [\" + OpenCms.getSystemInfo().getServerName().toUpperCase() + \"/\" + date + \"]\";\n        }\n        \n        long maxMemory = Runtime.getRuntime().maxMemory() / 1048576;\n        long totalMemory = Runtime.getRuntime().totalMemory() / 1048576;\n        long usedMemory = (Runtime.getRuntime().totalMemory() - Runtime.getRuntime().freeMemory()) / 1048576;\n        long freeMemory = maxMemory - usedMemory;\n        long usage = usedMemory * 100 / maxMemory;\n        \n        content += \"Memory usage report of OpenCms server \" + OpenCms.getSystemInfo().getServerName().toUpperCase() + \" at \" + date + \"\\n\\n\" \n            + \"Memory maximum heap size: \" + maxMemory + \" mb\\n\" \n            + \"Memory current heap size: \" + totalMemory + \" mb\\n\\n\" \n            + \"Memory currently used   : \" + usedMemory + \" mb (\" + usage + \"%)\\n\"\n            + \"Memory currently unused : \" + freeMemory + \" mb\\n\\n\\n\";\n\n        if (warning) {\n            content += \"*** Please take action NOW to ensure that no OutOfMemoryException occurs.\\n\\n\\n\";\n        }\n        \n        OpenCmsSessionManager sm = OpenCmsCore.getInstance().getSessionManager();\n        CmsSessionInfoManager cs = OpenCms.getSessionInfoManager();\n        \n        if ((sm != null) && (cs != null)) {\n            content += \"Current status of the sessions:\\n\\n\";\n            content += \"Logged in users          : \" + cs.getLoggedInUsers().size() + \"\\n\";\n            content += \"Currently active sessions: \" + sm.getCurrentSessions() + \"\\n\";\n            content += \"Total created sessions   : \" + sm.getTotalSessions() + \"\\n\\n\\n\";\n        }\n        \n        sm = null;\n        cs = null;\n        \n        content += \"Current status of the caches:\\n\\n\";        \n        List keyList = Arrays.asList(m_monitoredObjects.keySet().toArray());\n        Collections.sort(keyList);\n        long totalSize = 0;\n        for (Iterator keys = keyList.iterator(); keys.hasNext();) {\n            String key = (String)keys.next();        \n            String shortKeys[] = key.split(\"\\\\.\");\n            String shortKey = shortKeys[shortKeys.length - 2] + \".\" + shortKeys[shortKeys.length - 1];\n            PrintfFormat form = new PrintfFormat(\"%9s\");\n            Object obj = m_monitoredObjects.get(key);\n            \n            long size = getKeySize(obj) + getValueSize(obj) + getCosts(obj);\n            totalSize += size;\n            \n            content += new PrintfFormat(\"%-42.42s\").sprintf(shortKey) + \"  \" \n                    + \"Entries: \" + form.sprintf(getItems(obj)) + \"   \" \n                    + \"Limit: \" + form.sprintf(getLimit(obj)) + \"   \"\n                    + \"Size: \" + form.sprintf(Long.toString(size)) + \"\\n\";\n        }\n        content += \"\\nTotal size of cache memory monitored: \" + totalSize + \" (\" + totalSize / 1048576 + \")\\n\\n\";\n        \n        String from = m_emailSender;\n        String[] to = m_emailReceiver;   \n        try {\n            if (from != null && to != null) {\n                List receivers = new ArrayList(to.length);\n                for (int i=0; i<to.length; i++) {\n                    receivers.add(new InternetAddress(to[i]));    \n                }               \n                CmsSimpleMail email =  new CmsSimpleMail();\n                email.setFrom(from);\n                email.setTo(receivers);\n                email.setSubject(subject);\n                email.setMsg(content);\n                new CmsMailTransport(email).send();                \n            }            \n            if (OpenCms.getLog(this).isInfoEnabled()) {\n                OpenCms.getLog(this).info(\", Memory Monitor \" + (warning?\"warning\":\"status\") + \" email send\");\n            }\n        } catch (Exception e) {\n            e.printStackTrace();\n        }\n    }","commit_id":"256e736e48ad2a3069f023bca3b1ffd77337d27a","url":"https://github.com/alkacon/opencms-core"},{"original_method":"/**\n     * Reaktivates a task.\n     * @param cms The cms-object.\n     * @param int taskid The id of the task.\n     * @param agentName The name of the new editor for this task.\n     * @param roleName The name of the new role for the user.\n     * @param taskName The new name of the task.\n     * @param taskcomment The new comment for this task.\n     * @param timeoutString The new timeout-date as a string in the following format:\n     * \"dd.mm.yyyy\"\n     * @param priorityString the new priority as String (\"1\" = high,\n     * \"2\" = normal or \"3\" = low)\n     * @param paraAcceptation controls if a message should be send by acceptation. (\"checked\" | \"\")\n     * @param paraAll controls if a message should be send to all users in a role. (\"checked\" | \"\")\n     * @param paraCompletion controls if a message should be send by completing this task. (\"checked\" | \"\")\n     * @param paraDelivery controls if a message should be send by delivering a task. (\"checked\" | \"\")\n     * @throws CmsException Throws CmsExceptions, that are be\n     * thrown in calling methods.\n     */\n\n    public static void reakt(CmsObject cms, int taskid, String agentName, String roleName, String taskName,\n            String taskcomment, String timeoutString, String priorityString,\n            String paraAcceptation, String paraAll, String paraCompletion, String paraDelivery) throws CmsException {\n        CmsXmlLanguageFile lang = new CmsXmlLanguageFile(cms);\n        CmsTask task = cms.readTask(taskid);\n        if(roleName.equals(C_ALL_ROLES)) {\n            roleName = cms.readUser(agentName).getDefaultGroup().getName();\n        }\n        cms.setName(taskid, taskName);\n\n        // try to reaktivate the task\n        cms.reaktivateTask(taskid);\n        int priority = Integer.parseInt(priorityString);\n        cms.setPriority(taskid, priority);\n\n        // create a long from the overgiven date.\n        String splittetDate[] = CmsStringUtil.split(timeoutString, \".\");\n        GregorianCalendar cal = new GregorianCalendar(Integer.parseInt(splittetDate[2]), Integer.parseInt(splittetDate[1]) - 1,\n                Integer.parseInt(splittetDate[0]), 0, 0, 0);\n        long timeout = cal.getTime().getTime();\n        cms.setTimeout(taskid, timeout);\n        cms.setTaskPar(taskid, C_TASKPARA_ACCEPTATION, paraAcceptation);\n        cms.setTaskPar(taskid, C_TASKPARA_ALL, paraAll);\n        cms.setTaskPar(taskid, C_TASKPARA_COMPLETION, paraCompletion);\n        cms.setTaskPar(taskid, C_TASKPARA_DELIVERY, paraDelivery);\n        cms.forwardTask(taskid, roleName, agentName);\n        String comment = lang.getLanguageValue(\"task.label.forrole\") + \": \" + roleName + \"\\n\";\n        comment += lang.getLanguageValue(\"task.label.editor\") + \": \" + CmsUser.getFullName(cms.readUser(agentName)) + \"\\n\";\n        comment += taskcomment;\n        cms.writeTaskLog(task.getId(), comment, C_TASKLOGTYPE_REACTIVATED);\n\n        // send an email\n        StringBuffer contentBuf = new StringBuffer(lang.getLanguageValue(\"task.email.reakt.content\"));\n        contentBuf.append(\"\\n\");\n        contentBuf.append(lang.getLanguageValue(\"task.label.project\"));\n        contentBuf.append(\": \");\n        String projectname = \"?\";\n        try {\n            projectname = cms.readTask(task.getRoot()).getName();\n        }\n        catch(Exception exc) {\n\n\n        // no root?!\n        }\n        contentBuf.append(projectname);\n        contentBuf.append(\"\\n\");\n        contentBuf.append(lang.getLanguageValue(\"task.label.task\"));\n        contentBuf.append(\": \");\n        contentBuf.append(task.getName());\n        int projectid = cms.readProject(task).getId();\n        contentBuf.append(\"\\n\\n\\n\" + getTaskUrl(cms, task.getId(), projectid));\n        String subject = lang.getLanguageValue(\"task.email.reakt.subject\") + \" \" + CmsUser.getFullName(cms.readUser(task.getAgentUser())) + \" / \" + roleName;\n        CmsUser[] users =  {\n            cms.readAgent(task)\n        };\n        org.opencms.util.CmsMail mail;\n        mail = new org.opencms.util.CmsMail(cms, cms.readOwner(task), users, subject, contentBuf.toString(), \"text/plain\");\n\n        // if \"Alle Rollenmitglieder von Aufgabe Benachrichtigen\" checkbox is selected.\n        if(cms.getTaskPar(task.getId(), C_TASKPARA_ALL) != null) {\n            mail = new org.opencms.util.CmsMail(cms, cms.readOwner(task), cms.readGroup(task),\n                    subject, contentBuf.toString(), \"text/plain\");\n        }\n        try {\n            mail.start();\n        }\n        catch(Exception exc) {\n            if(OpenCms.getLog(CmsTaskAction.class).isWarnEnabled()) {\n                OpenCms.getLog(CmsTaskAction.class).warn(\"Error while sending task mail\", exc);\n            }\n        }\n    }","id":16357,"modified_method":"/**\n     * Reaktivates a task.\n     * @param cms The cms-object.\n     * @param int taskid The id of the task.\n     * @param agentName The name of the new editor for this task.\n     * @param roleName The name of the new role for the user.\n     * @param taskName The new name of the task.\n     * @param taskcomment The new comment for this task.\n     * @param timeoutString The new timeout-date as a string in the following format:\n     * \"dd.mm.yyyy\"\n     * @param priorityString the new priority as String (\"1\" = high,\n     * \"2\" = normal or \"3\" = low)\n     * @param paraAcceptation controls if a message should be send by acceptation. (\"checked\" | \"\")\n     * @param paraAll controls if a message should be send to all users in a role. (\"checked\" | \"\")\n     * @param paraCompletion controls if a message should be send by completing this task. (\"checked\" | \"\")\n     * @param paraDelivery controls if a message should be send by delivering a task. (\"checked\" | \"\")\n     * @throws CmsException Throws CmsExceptions, that are be\n     * thrown in calling methods.\n     */\n\n    public static void reakt(CmsObject cms, int taskid, String agentName, String roleName, String taskName,\n            String taskcomment, String timeoutString, String priorityString,\n            String paraAcceptation, String paraAll, String paraCompletion, String paraDelivery) throws CmsException {\n        CmsXmlLanguageFile lang = new CmsXmlLanguageFile(cms);\n        CmsTask task = cms.readTask(taskid);\n        if(roleName.equals(C_ALL_ROLES)) {\n            roleName = cms.readUser(agentName).getDefaultGroup().getName();\n        }\n        cms.setName(taskid, taskName);\n\n        // try to reaktivate the task\n        cms.reaktivateTask(taskid);\n        int priority = Integer.parseInt(priorityString);\n        cms.setPriority(taskid, priority);\n\n        // create a long from the overgiven date.\n        String splittetDate[] = CmsStringUtil.split(timeoutString, \".\");\n        GregorianCalendar cal = new GregorianCalendar(Integer.parseInt(splittetDate[2]), Integer.parseInt(splittetDate[1]) - 1,\n                Integer.parseInt(splittetDate[0]), 0, 0, 0);\n        long timeout = cal.getTime().getTime();\n        cms.setTimeout(taskid, timeout);\n        cms.setTaskPar(taskid, C_TASKPARA_ACCEPTATION, paraAcceptation);\n        cms.setTaskPar(taskid, C_TASKPARA_ALL, paraAll);\n        cms.setTaskPar(taskid, C_TASKPARA_COMPLETION, paraCompletion);\n        cms.setTaskPar(taskid, C_TASKPARA_DELIVERY, paraDelivery);\n        cms.forwardTask(taskid, roleName, agentName);\n        String comment = lang.getLanguageValue(\"task.label.forrole\") + \": \" + roleName + \"\\n\";\n        comment += lang.getLanguageValue(\"task.label.editor\") + \": \" + CmsUser.getFullName(cms.readUser(agentName)) + \"\\n\";\n        comment += taskcomment;\n        cms.writeTaskLog(task.getId(), comment, C_TASKLOGTYPE_REACTIVATED);\n\n        // send an email\n        StringBuffer contentBuf = new StringBuffer(lang.getLanguageValue(\"task.email.reakt.content\"));\n        contentBuf.append(\"\\n\");\n        contentBuf.append(lang.getLanguageValue(\"task.label.project\"));\n        contentBuf.append(\": \");\n        String projectname = \"?\";\n        try {\n            projectname = cms.readTask(task.getRoot()).getName();\n        }\n        catch(Exception exc) {\n\n\n        // no root?!\n        }\n        contentBuf.append(projectname);\n        contentBuf.append(\"\\n\");\n        contentBuf.append(lang.getLanguageValue(\"task.label.task\"));\n        contentBuf.append(\": \");\n        contentBuf.append(task.getName());\n        int projectid = cms.readProject(task).getId();\n        contentBuf.append(\"\\n\\n\\n\" + getTaskUrl(cms, task.getId(), projectid));\n        String subject = lang.getLanguageValue(\"task.email.reakt.subject\") + \" \" + CmsUser.getFullName(cms.readUser(task.getAgentUser())) + \" / \" + roleName;\n        CmsUser[] users =  {\n            cms.readAgent(task)\n        };\n        CmsSimpleMail mail;\n        mail = createMail(cms.readOwner(task), users, subject, contentBuf.toString());\n\n        // if \"Alle Rollenmitglieder von Aufgabe Benachrichtigen\" checkbox is selected.\n        if(cms.getTaskPar(task.getId(), C_TASKPARA_ALL) != null) {\n            CmsGroup group = cms.readGroup(task);\n            Vector groupUsers = cms.getUsersOfGroup(group.getName());\n            mail = createMail(cms.readOwner(task), groupUsers,\n                    subject, contentBuf.toString(), true);\n        }\n        try {\n            new CmsMailTransport(mail).send();\n        }\n        catch(Exception exc) {\n            if(OpenCms.getLog(CmsTaskAction.class).isWarnEnabled()) {\n                OpenCms.getLog(CmsTaskAction.class).warn(\"Error while sending task mail\", exc);\n            }\n        }\n    }","commit_id":"256e736e48ad2a3069f023bca3b1ffd77337d27a","url":"https://github.com/alkacon/opencms-core"},{"original_method":"/**\n     * Takes a task. The calling user is now the agent for this task.\n     * @param cms The cms-object.\n     * @param int taskid The id of the task.\n     * @throws CmsException Throws CmsExceptions, that are be\n     * thrown in calling methods.\n     */\n\n    public static void take(CmsObject cms, int taskid) throws CmsException {\n        CmsXmlLanguageFile lang = new CmsXmlLanguageFile(cms);\n        CmsRequestContext context = cms.getRequestContext();\n        CmsTask task = cms.readTask(taskid);\n        CmsUser newEditor = context.currentUser();\n        CmsGroup oldRole = cms.readGroup(task);\n\n        // has the user the correct role?\n        if(cms.userInGroup(newEditor.getName(), oldRole.getName())) {\n            cms.forwardTask(taskid, oldRole.getName(), newEditor.getName());\n            cms.acceptTask(taskid);\n            String comment = lang.getLanguageValue(\"task.dialog.take.logmessage\");\n            comment += \" \" + CmsUser.getFullName(newEditor);\n            cms.writeTaskLog(taskid, comment, C_TASKLOGTYPE_TAKE);\n        }\n\n        // send an email\n        StringBuffer contentBuf = new StringBuffer(lang.getLanguageValue(\"task.email.take.content\"));\n        contentBuf.append(\"\\n\");\n        contentBuf.append(lang.getLanguageValue(\"task.label.project\"));\n        contentBuf.append(\": \");\n        String projectname = \"?\";\n        try {\n            projectname = cms.readTask(task.getRoot()).getName();\n        }\n        catch(Exception exc) {\n\n\n        // no root?!\n        }\n        contentBuf.append(projectname);\n        contentBuf.append(\"\\n\");\n        contentBuf.append(lang.getLanguageValue(\"task.label.task\"));\n        contentBuf.append(\": \");\n        contentBuf.append(task.getName());\n        contentBuf.append(\"\\n\");\n        contentBuf.append(lang.getLanguageValue(\"task.label.taskfor\"));\n        contentBuf.append(\": \");\n        contentBuf.append(CmsUser.getFullName(cms.readAgent(task)));\n        int projectid = cms.readProject(task).getId();\n        contentBuf.append(\"\\n\\n\\n\" + getTaskUrl(cms, task.getId(), projectid));\n        String subject = lang.getLanguageValue(\"task.email.take.subject\") + \" \" + CmsUser.getFullName(newEditor);\n        CmsUser[] users =  {\n            cms.readAgent(task)\n        };\n        try {\n            org.opencms.util.CmsMail mail = new org.opencms.util.CmsMail(cms, cms.readOwner(task),\n                    users, subject, contentBuf.toString(), \"text/plain\");\n            mail.start();\n        }\n        catch(Exception exc) {\n            if(OpenCms.getLog(CmsTaskAction.class).isWarnEnabled()) {\n                OpenCms.getLog(CmsTaskAction.class).warn(\"Error while sending task mail\", exc);\n            }\n        }\n    }","id":16358,"modified_method":"/**\n     * Takes a task. The calling user is now the agent for this task.\n     * @param cms The cms-object.\n     * @param int taskid The id of the task.\n     * @throws CmsException Throws CmsExceptions, that are be\n     * thrown in calling methods.\n     */\n\n    public static void take(CmsObject cms, int taskid) throws CmsException {\n        CmsXmlLanguageFile lang = new CmsXmlLanguageFile(cms);\n        CmsRequestContext context = cms.getRequestContext();\n        CmsTask task = cms.readTask(taskid);\n        CmsUser newEditor = context.currentUser();\n        CmsGroup oldRole = cms.readGroup(task);\n\n        // has the user the correct role?\n        if(cms.userInGroup(newEditor.getName(), oldRole.getName())) {\n            cms.forwardTask(taskid, oldRole.getName(), newEditor.getName());\n            cms.acceptTask(taskid);\n            String comment = lang.getLanguageValue(\"task.dialog.take.logmessage\");\n            comment += \" \" + CmsUser.getFullName(newEditor);\n            cms.writeTaskLog(taskid, comment, C_TASKLOGTYPE_TAKE);\n        }\n\n        // send an email\n        StringBuffer contentBuf = new StringBuffer(lang.getLanguageValue(\"task.email.take.content\"));\n        contentBuf.append(\"\\n\");\n        contentBuf.append(lang.getLanguageValue(\"task.label.project\"));\n        contentBuf.append(\": \");\n        String projectname = \"?\";\n        try {\n            projectname = cms.readTask(task.getRoot()).getName();\n        }\n        catch(Exception exc) {\n\n\n        // no root?!\n        }\n        contentBuf.append(projectname);\n        contentBuf.append(\"\\n\");\n        contentBuf.append(lang.getLanguageValue(\"task.label.task\"));\n        contentBuf.append(\": \");\n        contentBuf.append(task.getName());\n        contentBuf.append(\"\\n\");\n        contentBuf.append(lang.getLanguageValue(\"task.label.taskfor\"));\n        contentBuf.append(\": \");\n        contentBuf.append(CmsUser.getFullName(cms.readAgent(task)));\n        int projectid = cms.readProject(task).getId();\n        contentBuf.append(\"\\n\\n\\n\" + getTaskUrl(cms, task.getId(), projectid));\n        String subject = lang.getLanguageValue(\"task.email.take.subject\") + \" \" + CmsUser.getFullName(newEditor);\n        CmsUser[] users =  {\n            cms.readAgent(task)\n        };\n        try {\n            CmsSimpleMail mail = createMail(cms.readOwner(task),\n                    users, subject, contentBuf.toString());\n            new CmsMailTransport(mail).send();\n        }\n        catch(Exception exc) {\n            if(OpenCms.getLog(CmsTaskAction.class).isWarnEnabled()) {\n                OpenCms.getLog(CmsTaskAction.class).warn(\"Error while sending task mail\", exc);\n            }\n        }\n    }","commit_id":"256e736e48ad2a3069f023bca3b1ffd77337d27a","url":"https://github.com/alkacon/opencms-core"},{"original_method":"/**\n     * Sends a message to the editor of the task.\n     * @param cms The cms-object.\n     * @param int taskid The id of the task.\n     * @param message The text of the message.\n     * @throws CmsException Throws CmsExceptions, that are be\n     * thrown in calling methods.\n     */\n\n    public static void message(CmsObject cms, int taskid, String message) throws CmsException {\n        CmsXmlLanguageFile lang = new CmsXmlLanguageFile(cms);\n        CmsTask task = cms.readTask(taskid);\n        String comment = lang.getLanguageValue(\"task.dialog.message.head\") + \" \";\n        if((message != null) && (message.length() != 0)) {\n            comment += CmsUser.getFullName(cms.readAgent(task)) + \"\\n\";\n            comment += message;\n            cms.writeTaskLog(taskid, comment, C_TASKLOGTYPE_CALL);\n        }\n\n        // send an email\n        StringBuffer contentBuf = new StringBuffer(lang.getLanguageValue(\"task.email.message.content\"));\n        contentBuf.append(\"\\n\");\n        contentBuf.append(lang.getLanguageValue(\"task.label.project\"));\n        contentBuf.append(\": \");\n        String projectname = \"?\";\n        try {\n            projectname = cms.readTask(task.getRoot()).getName();\n        }\n        catch(Exception exc) {\n\n\n        // no root?!\n        }\n        contentBuf.append(projectname);\n        contentBuf.append(\"\\n\");\n        contentBuf.append(lang.getLanguageValue(\"task.label.task\"));\n        contentBuf.append(\": \");\n        contentBuf.append(task.getName());\n        contentBuf.append(\"\\n\");\n        contentBuf.append(lang.getLanguageValue(\"task.label.actuator\"));\n        contentBuf.append(\": \");\n        contentBuf.append(CmsUser.getFullName(cms.readOwner(task)));\n        int projectid = cms.readProject(task).getId();\n        contentBuf.append(\"\\n\\n\\n\" + getTaskUrl(cms, task.getId(), projectid));\n        String subject = lang.getLanguageValue(\"task.email.message.subject\") + \" \" + CmsUser.getFullName(cms.readOwner(task));\n        CmsUser[] users =  {\n            cms.readAgent(task)\n        };\n        try {\n            org.opencms.util.CmsMail mail = new org.opencms.util.CmsMail(cms,\n                    cms.readOwner(task), users, subject, contentBuf.toString(), \"text/plain\");\n            mail.start();\n        }\n        catch(Exception exc) {\n            if(OpenCms.getLog(CmsTaskAction.class).isWarnEnabled()) {\n                OpenCms.getLog(CmsTaskAction.class).warn(\"Error while sending task mail\", exc);\n            }\n        }\n    }","id":16359,"modified_method":"/**\n     * Sends a message to the editor of the task.\n     * @param cms The cms-object.\n     * @param int taskid The id of the task.\n     * @param message The text of the message.\n     * @throws CmsException Throws CmsExceptions, that are be\n     * thrown in calling methods.\n     */\n\n    public static void message(CmsObject cms, int taskid, String message) throws CmsException {\n        CmsXmlLanguageFile lang = new CmsXmlLanguageFile(cms);\n        CmsTask task = cms.readTask(taskid);\n        String comment = lang.getLanguageValue(\"task.dialog.message.head\") + \" \";\n        if((message != null) && (message.length() != 0)) {\n            comment += CmsUser.getFullName(cms.readAgent(task)) + \"\\n\";\n            comment += message;\n            cms.writeTaskLog(taskid, comment, C_TASKLOGTYPE_CALL);\n        }\n\n        // send an email\n        StringBuffer contentBuf = new StringBuffer(lang.getLanguageValue(\"task.email.message.content\"));\n        contentBuf.append(\"\\n\");\n        contentBuf.append(lang.getLanguageValue(\"task.label.project\"));\n        contentBuf.append(\": \");\n        String projectname = \"?\";\n        try {\n            projectname = cms.readTask(task.getRoot()).getName();\n        }\n        catch(Exception exc) {\n\n\n        // no root?!\n        }\n        contentBuf.append(projectname);\n        contentBuf.append(\"\\n\");\n        contentBuf.append(lang.getLanguageValue(\"task.label.task\"));\n        contentBuf.append(\": \");\n        contentBuf.append(task.getName());\n        contentBuf.append(\"\\n\");\n        contentBuf.append(lang.getLanguageValue(\"task.label.actuator\"));\n        contentBuf.append(\": \");\n        contentBuf.append(CmsUser.getFullName(cms.readOwner(task)));\n        int projectid = cms.readProject(task).getId();\n        contentBuf.append(\"\\n\\n\\n\" + getTaskUrl(cms, task.getId(), projectid));\n        String subject = lang.getLanguageValue(\"task.email.message.subject\") + \" \" + CmsUser.getFullName(cms.readOwner(task));\n        CmsUser[] users =  {\n            cms.readAgent(task)\n        };\n        try {\n            CmsSimpleMail mail = createMail(cms.readOwner(task), users, subject, contentBuf.toString());\n            new CmsMailTransport(mail).send();\n        }\n        catch(Exception exc) {\n            if(OpenCms.getLog(CmsTaskAction.class).isWarnEnabled()) {\n                OpenCms.getLog(CmsTaskAction.class).warn(\"Error while sending task mail\", exc);\n            }\n        }\n    }","commit_id":"256e736e48ad2a3069f023bca3b1ffd77337d27a","url":"https://github.com/alkacon/opencms-core"},{"original_method":"/**\n     * Forwards a task. The task is forwarded to a new editor in a new role.\n     * @param cms The cms-object.\n     * @param int taskid The id of the task.\n     * @param newEditorName The name of the new editor for this task.\n     * @param newRoleName The name of the new role for the user.\n     * @throws CmsException Throws CmsExceptions, that are be\n     * thrown in calling methods.\n     */\n\n    public static void forward(CmsObject cms, int taskid, String newEditorName, String newRoleName) throws CmsException {\n        CmsXmlLanguageFile lang = new CmsXmlLanguageFile(cms);\n        CmsUser newEditor = cms.readUser(newEditorName);\n        if(newRoleName.equals(C_ALL_ROLES)) {\n            newRoleName = cms.readUser(newEditorName).getDefaultGroup().getName();\n        }\n        CmsGroup oldRole = cms.readGroup(newRoleName);\n        cms.forwardTask(taskid, oldRole.getName(), newEditor.getName());\n        String comment = lang.getLanguageValue(\"task.dialog.forward.logmessage\");\n        comment += \" \" + CmsUser.getFullName(newEditor);\n        cms.writeTaskLog(taskid, comment, C_TASKLOGTYPE_FORWARDED);\n\n        // send an email if \"Benachrichtigung bei Weiterleitung\" was selected.\n        CmsTask task = cms.readTask(taskid);\n        if(cms.getTaskPar(task.getId(), C_TASKPARA_DELIVERY) != null) {\n            StringBuffer contentBuf = new StringBuffer(lang.getLanguageValue(\"task.email.forward.content\"));\n            contentBuf.append(\"\\n\");\n            contentBuf.append(lang.getLanguageValue(\"task.label.project\"));\n            contentBuf.append(\": \");\n            String projectname = \"?\";\n            try {\n                projectname = cms.readTask(task.getRoot()).getName();\n            }\n            catch(Exception exc) {\n\n\n            // no root?!\n            }\n            contentBuf.append(projectname);\n            contentBuf.append(\"\\n\");\n            contentBuf.append(lang.getLanguageValue(\"task.label.task\"));\n            contentBuf.append(\": \");\n            contentBuf.append(task.getName());\n            contentBuf.append(\"\\n\");\n            contentBuf.append(lang.getLanguageValue(\"task.label.actuator\"));\n            contentBuf.append(\": \");\n            contentBuf.append(CmsUser.getFullName(cms.readOwner(task)));\n            contentBuf.append(\"\\n\");\n            contentBuf.append(lang.getLanguageValue(\"task.label.taskfor\"));\n            contentBuf.append(\": \");\n            contentBuf.append(CmsUser.getFullName(cms.readOriginalAgent(task)));\n            contentBuf.append(\"\\n\");\n            contentBuf.append(lang.getLanguageValue(\"task.label.editor\"));\n            contentBuf.append(\": \");\n            contentBuf.append(CmsUser.getFullName(cms.readAgent(task)));\n            int projectid = cms.readProject(task).getId();\n            contentBuf.append(\"\\n\\n\\n\" + getTaskUrl(cms, task.getId(), projectid));\n            String subject = lang.getLanguageValue(\"task.email.forward.subject\") + \" \" + CmsUser.getFullName(cms.readUser(task.getAgentUser())) + \" / \" + newRoleName;\n\n            // if \"Alle Rollenmitglieder von Aufgabe Benachrichtigen\" checkbox is selected.\n            if(cms.getTaskPar(task.getId(), C_TASKPARA_ALL) != null) {\n                try {\n                    org.opencms.util.CmsMail mail = new org.opencms.util.CmsMail(cms, cms.getRequestContext().currentUser(),\n                            cms.readGroup(task), subject, contentBuf.toString(), \"text/plain\");\n                    mail.start();\n                }\n                catch(Exception exc) {\n                    if(OpenCms.getLog(CmsTaskAction.class).isWarnEnabled()) {\n                        OpenCms.getLog(CmsTaskAction.class).warn(\"Error while sending task mail\", exc);\n                    }\n                }\n            }\n            else {\n\n                // send a mail to user\n                CmsUser[] user =  {\n                    cms.readAgent(task)\n                };\n                try {\n                    org.opencms.util.CmsMail mail1 = new org.opencms.util.CmsMail(cms,\n                            cms.getRequestContext().currentUser(), user, subject, contentBuf.toString(), \"text/plain\");\n                    mail1.start();\n                }\n                catch(Exception exc) {\n                    if(OpenCms.getLog(CmsTaskAction.class).isWarnEnabled()) {\n                        OpenCms.getLog(CmsTaskAction.class).warn(\"Error while sending task mail\", exc);\n                    }\n                }\n\n                // send a mail to owner\n                CmsUser[] owner =  {\n                    cms.readOwner(task)\n                };\n                try {\n                    org.opencms.util.CmsMail mail2 = new org.opencms.util.CmsMail(cms, cms.getRequestContext().currentUser(),\n                            owner, subject, contentBuf.toString(), \"text/plain\");\n                    mail2.start();\n                }\n                catch(Exception exc) {\n                    if(OpenCms.getLog(CmsTaskAction.class).isWarnEnabled()) {\n                        OpenCms.getLog(CmsTaskAction.class).warn(\"Error while sending task mail\", exc);\n                    }\n                }\n            }\n        }\n    }","id":16360,"modified_method":"/**\n     * Forwards a task. The task is forwarded to a new editor in a new role.\n     * @param cms The cms-object.\n     * @param int taskid The id of the task.\n     * @param newEditorName The name of the new editor for this task.\n     * @param newRoleName The name of the new role for the user.\n     * @throws CmsException Throws CmsExceptions, that are be\n     * thrown in calling methods.\n     */\n\n    public static void forward(CmsObject cms, int taskid, String newEditorName, String newRoleName) throws CmsException {\n        CmsXmlLanguageFile lang = new CmsXmlLanguageFile(cms);\n        CmsUser newEditor = cms.readUser(newEditorName);\n        if(newRoleName.equals(C_ALL_ROLES)) {\n            newRoleName = cms.readUser(newEditorName).getDefaultGroup().getName();\n        }\n        CmsGroup oldRole = cms.readGroup(newRoleName);\n        cms.forwardTask(taskid, oldRole.getName(), newEditor.getName());\n        String comment = lang.getLanguageValue(\"task.dialog.forward.logmessage\");\n        comment += \" \" + CmsUser.getFullName(newEditor);\n        cms.writeTaskLog(taskid, comment, C_TASKLOGTYPE_FORWARDED);\n\n        // send an email if \"Benachrichtigung bei Weiterleitung\" was selected.\n        CmsTask task = cms.readTask(taskid);\n        if(cms.getTaskPar(task.getId(), C_TASKPARA_DELIVERY) != null) {\n            StringBuffer contentBuf = new StringBuffer(lang.getLanguageValue(\"task.email.forward.content\"));\n            contentBuf.append(\"\\n\");\n            contentBuf.append(lang.getLanguageValue(\"task.label.project\"));\n            contentBuf.append(\": \");\n            String projectname = \"?\";\n            try {\n                projectname = cms.readTask(task.getRoot()).getName();\n            }\n            catch(Exception exc) {\n\n\n            // no root?!\n            }\n            contentBuf.append(projectname);\n            contentBuf.append(\"\\n\");\n            contentBuf.append(lang.getLanguageValue(\"task.label.task\"));\n            contentBuf.append(\": \");\n            contentBuf.append(task.getName());\n            contentBuf.append(\"\\n\");\n            contentBuf.append(lang.getLanguageValue(\"task.label.actuator\"));\n            contentBuf.append(\": \");\n            contentBuf.append(CmsUser.getFullName(cms.readOwner(task)));\n            contentBuf.append(\"\\n\");\n            contentBuf.append(lang.getLanguageValue(\"task.label.taskfor\"));\n            contentBuf.append(\": \");\n            contentBuf.append(CmsUser.getFullName(cms.readOriginalAgent(task)));\n            contentBuf.append(\"\\n\");\n            contentBuf.append(lang.getLanguageValue(\"task.label.editor\"));\n            contentBuf.append(\": \");\n            contentBuf.append(CmsUser.getFullName(cms.readAgent(task)));\n            int projectid = cms.readProject(task).getId();\n            contentBuf.append(\"\\n\\n\\n\" + getTaskUrl(cms, task.getId(), projectid));\n            String subject = lang.getLanguageValue(\"task.email.forward.subject\") + \" \" + CmsUser.getFullName(cms.readUser(task.getAgentUser())) + \" / \" + newRoleName;\n\n            // if \"Alle Rollenmitglieder von Aufgabe Benachrichtigen\" checkbox is selected.\n            if(cms.getTaskPar(task.getId(), C_TASKPARA_ALL) != null) {\n                try {\n                    CmsGroup group = cms.readGroup(task);\n                    Vector users = cms.getUsersOfGroup(group.getName());\n                    CmsSimpleMail mail = createMail(cms.getRequestContext().currentUser(),\n                        users, subject, contentBuf.toString(), true);\n                    new CmsMailTransport(mail).send();\n                }\n                catch(Exception exc) {\n                    if(OpenCms.getLog(CmsTaskAction.class).isWarnEnabled()) {\n                        OpenCms.getLog(CmsTaskAction.class).warn(\"Error while sending task mail\", exc);\n                    }\n                }\n            }\n            else {\n\n                // send a mail to user\n                CmsUser[] user =  {\n                    cms.readAgent(task)\n                };\n                try {\n                    CmsSimpleMail mail1 = createMail(cms.getRequestContext().currentUser(), \n                            user, subject, contentBuf.toString());\n                    new CmsMailTransport(mail1).send();\n                }\n                catch(Exception exc) {\n                    if(OpenCms.getLog(CmsTaskAction.class).isWarnEnabled()) {\n                        OpenCms.getLog(CmsTaskAction.class).warn(\"Error while sending task mail\", exc);\n                    }\n                }\n\n                // send a mail to owner\n                CmsUser[] owner =  {\n                    cms.readOwner(task)\n                };\n                try {\n                    CmsSimpleMail mail2 = createMail(cms.getRequestContext().currentUser(),\n                            owner, subject, contentBuf.toString());\n                    new CmsMailTransport(mail2).send();\n                }\n                catch(Exception exc) {\n                    if(OpenCms.getLog(CmsTaskAction.class).isWarnEnabled()) {\n                        OpenCms.getLog(CmsTaskAction.class).warn(\"Error while sending task mail\", exc);\n                    }\n                }\n            }\n        }\n    }","commit_id":"256e736e48ad2a3069f023bca3b1ffd77337d27a","url":"https://github.com/alkacon/opencms-core"},{"original_method":"/**\n     * Sends a message to the initiator (owner) of the task.\n     * @param cms The cms-object.\n     * @param int taskid The id of the task.\n     * @param message The text of the message.\n     * @throws CmsException Throws CmsExceptions, that are be\n     * thrown in calling methods.\n     */\n\n    public static void query(CmsObject cms, int taskid, String message) throws CmsException {\n        CmsXmlLanguageFile lang = new CmsXmlLanguageFile(cms);\n        CmsTask task = cms.readTask(taskid);\n        String comment = lang.getLanguageValue(\"task.dialog.query.head\") + \" \";\n        if((message != null) && (message.length() != 0)) {\n            comment += CmsUser.getFullName(cms.readOwner(task)) + \"\\n\";\n            comment += message;\n            cms.writeTaskLog(taskid, comment, C_TASKLOGTYPE_CALL);\n        }\n\n        // send an email.\n        StringBuffer contentBuf = new StringBuffer(lang.getLanguageValue(\"task.email.query.content\"));\n        contentBuf.append(\"\\n\");\n        contentBuf.append(lang.getLanguageValue(\"task.label.project\"));\n        contentBuf.append(\": \");\n        String projectname = \"?\";\n        try {\n            projectname = cms.readTask(task.getRoot()).getName();\n        }\n        catch(Exception exc) {\n\n\n        // no root?!\n        }\n        contentBuf.append(projectname);\n        contentBuf.append(\"\\n\");\n        contentBuf.append(lang.getLanguageValue(\"task.label.task\"));\n        contentBuf.append(\": \");\n        contentBuf.append(task.getName());\n        contentBuf.append(\"\\n\");\n        contentBuf.append(lang.getLanguageValue(\"task.label.editor\"));\n        contentBuf.append(\": \");\n        contentBuf.append(CmsUser.getFullName(cms.readAgent(task)));\n        int projectid = cms.readProject(task).getId();\n        contentBuf.append(\"\\n\\n\\n\" + getTaskUrl(cms, task.getId(), projectid));\n        String subject = lang.getLanguageValue(\"task.email.query.subject\") + \" \" + CmsUser.getFullName(cms.readAgent(task));\n        CmsUser[] users =  {\n            cms.readOwner(task)\n        };\n        try {\n            org.opencms.util.CmsMail mail = new org.opencms.util.CmsMail(cms, cms.readAgent(task),\n                    users, subject, contentBuf.toString(), \"text/plain\");\n            mail.start();\n        }\n        catch(Exception exc) {\n            if(OpenCms.getLog(CmsTaskAction.class).isWarnEnabled()) {\n                OpenCms.getLog(CmsTaskAction.class).warn(\"Error while sending task mail\", exc);\n            }\n        }\n    }","id":16361,"modified_method":"/**\n     * Sends a message to the initiator (owner) of the task.\n     * @param cms The cms-object.\n     * @param int taskid The id of the task.\n     * @param message The text of the message.\n     * @throws CmsException Throws CmsExceptions, that are be\n     * thrown in calling methods.\n     */\n\n    public static void query(CmsObject cms, int taskid, String message) throws CmsException {\n        CmsXmlLanguageFile lang = new CmsXmlLanguageFile(cms);\n        CmsTask task = cms.readTask(taskid);\n        String comment = lang.getLanguageValue(\"task.dialog.query.head\") + \" \";\n        if((message != null) && (message.length() != 0)) {\n            comment += CmsUser.getFullName(cms.readOwner(task)) + \"\\n\";\n            comment += message;\n            cms.writeTaskLog(taskid, comment, C_TASKLOGTYPE_CALL);\n        }\n\n        // send an email.\n        StringBuffer contentBuf = new StringBuffer(lang.getLanguageValue(\"task.email.query.content\"));\n        contentBuf.append(\"\\n\");\n        contentBuf.append(lang.getLanguageValue(\"task.label.project\"));\n        contentBuf.append(\": \");\n        String projectname = \"?\";\n        try {\n            projectname = cms.readTask(task.getRoot()).getName();\n        }\n        catch(Exception exc) {\n\n\n        // no root?!\n        }\n        contentBuf.append(projectname);\n        contentBuf.append(\"\\n\");\n        contentBuf.append(lang.getLanguageValue(\"task.label.task\"));\n        contentBuf.append(\": \");\n        contentBuf.append(task.getName());\n        contentBuf.append(\"\\n\");\n        contentBuf.append(lang.getLanguageValue(\"task.label.editor\"));\n        contentBuf.append(\": \");\n        contentBuf.append(CmsUser.getFullName(cms.readAgent(task)));\n        int projectid = cms.readProject(task).getId();\n        contentBuf.append(\"\\n\\n\\n\" + getTaskUrl(cms, task.getId(), projectid));\n        String subject = lang.getLanguageValue(\"task.email.query.subject\") + \" \" + CmsUser.getFullName(cms.readAgent(task));\n        CmsUser[] users =  {\n            cms.readOwner(task)\n        };\n        try {\n            CmsSimpleMail mail = createMail(cms.readAgent(task),\n                    users, subject, contentBuf.toString());\n            new CmsMailTransport(mail).send();\n        }\n        catch(Exception exc) {\n            if(OpenCms.getLog(CmsTaskAction.class).isWarnEnabled()) {\n                OpenCms.getLog(CmsTaskAction.class).warn(\"Error while sending task mail\", exc);\n            }\n        }\n    }","commit_id":"256e736e48ad2a3069f023bca3b1ffd77337d27a","url":"https://github.com/alkacon/opencms-core"},{"original_method":"/**\n     * Creates a new task.\n     * @param cms The cms-object.\n     * @param agentName The name of the new editor for this task.\n     * @param roleName The name of the new role for the user.\n     * @param taskName The new name of the task.\n     * @param taskcomment The new comment for this task.\n     * @param timeoutString The new timeout-date as a string in the following format:\n     * \"dd.mm.yyyy\"\n     * @param priorityString the new priority as String (\"1\" = high,\n     * \"2\" = normal or \"3\" = low)\n     * @param paraAcceptation controls if a message should be send by acceptation. (\"checked\" | \"\")\n     * @param paraAll controls if a message should be send to all users in a role. (\"checked\" | \"\")\n     * @param paraCompletion controls if a message should be send by completing this task. (\"checked\" | \"\")\n     * @param paraDelivery controls if a message should be send by delivering a task. (\"checked\" | \"\")\n     * @throws CmsException Throws CmsExceptions, that are be\n     * thrown in calling methods.\n     */\n\n    public static void create(CmsObject cms, String agentName, String roleName, String taskName,\n            String taskcomment, String timeoutString, String priorityString, String paraAcceptation,\n            String paraAll, String paraCompletion, String paraDelivery) throws CmsException {\n        CmsXmlLanguageFile lang = new CmsXmlLanguageFile(cms);\n        if(roleName.equals(C_ALL_ROLES)) {\n            roleName = cms.readUser(agentName).getDefaultGroup().getName();\n        }\n\n        // try to create the task\n        int priority = Integer.parseInt(priorityString);\n\n        // create a long from the overgiven date.\n        String splittetDate[] = CmsStringUtil.split(timeoutString, \".\");\n        GregorianCalendar cal = new GregorianCalendar(Integer.parseInt(splittetDate[2]),\n                Integer.parseInt(splittetDate[1]) - 1, Integer.parseInt(splittetDate[0]), 0, 0, 0);\n        long timeout = cal.getTime().getTime();\n        CmsTask task = cms.createTask(agentName, roleName, taskName, timeout, priority);\n        cms.setTaskPar(task.getId(), C_TASKPARA_ACCEPTATION, paraAcceptation);\n        cms.setTaskPar(task.getId(), C_TASKPARA_ALL, paraAll);\n        cms.setTaskPar(task.getId(), C_TASKPARA_COMPLETION, paraCompletion);\n        cms.setTaskPar(task.getId(), C_TASKPARA_DELIVERY, paraDelivery);\n        String comment = lang.getLanguageValue(\"task.label.forrole\") + \": \" + roleName + \"\\n\";\n        comment += lang.getLanguageValue(\"task.label.editor\") + \": \" + CmsUser.getFullName(cms.readUser(task.getAgentUser())) + \"\\n\";\n        comment += taskcomment;\n        cms.writeTaskLog(task.getId(), comment, C_TASKLOGTYPE_CREATED);\n\n        // send an email\n        // per default send a mail from task's organizer to task's recipient.\n        StringBuffer contentBuf = new StringBuffer(lang.getLanguageValue(\"task.email.create.content\"));\n        contentBuf.append(\"\\n\");\n        contentBuf.append(lang.getLanguageValue(\"task.label.project\"));\n        contentBuf.append(\": \");\n        String projectname = \"?\";\n        try {\n            projectname = cms.readTask(task.getRoot()).getName();\n        }\n        catch(Exception exc) {\n\n\n        // no root?!\n        }\n        contentBuf.append(projectname);\n        contentBuf.append(\"\\n\");\n        contentBuf.append(lang.getLanguageValue(\"task.label.task\"));\n        contentBuf.append(\": \");\n        contentBuf.append(task.getName());\n        contentBuf.append(\"\\n\");\n        contentBuf.append(lang.getLanguageValue(\"task.label.actuator\"));\n        contentBuf.append(\": \");\n        contentBuf.append(CmsUser.getFullName(cms.readOwner(task)));\n        int projectid = cms.readProject(task).getId();\n        contentBuf.append(\"\\n\\n\\n\" + getTaskUrl(cms, task.getId(), projectid));\n        String subject = lang.getLanguageValue(\"task.email.create.subject\") + \" \" + CmsUser.getFullName(cms.readUser(task.getAgentUser())) + \" / \" + roleName;\n        CmsUser[] users =  {\n            cms.readAgent(task)\n        };\n        org.opencms.util.CmsMail mail = null;\n        try {\n            mail = new org.opencms.util.CmsMail(cms, cms.readOwner(task), users, subject, contentBuf.toString(), \"text/plain\");\n        }\n        catch(CmsException e) {\n            if(OpenCms.getLog(CmsTaskAction.class).isWarnEnabled()) {\n                OpenCms.getLog(CmsTaskAction.class).warn(\"Could not generate mail while creating task for \"\n                        + cms.readOwner(task).getName(), e);\n            }\n        }\n\n        // if \"Alle Rollenmitglieder von Aufgabe Benachrichtigen\" checkbox is selected.\n        if(cms.getTaskPar(task.getId(), C_TASKPARA_ALL) != null) {\n\n            // the news deliver always \"checked\" or \"\"\n            if(cms.getTaskPar(task.getId(), C_TASKPARA_ALL).equals(\"checked\")) {\n                try {\n                    mail = new org.opencms.util.CmsMail(cms, cms.readOwner(task), cms.readGroup(task),\n                            subject, contentBuf.toString(), \"text/plain\");\n                }\n                catch(CmsException e) {\n                    if(OpenCms.getLog(CmsTaskAction.class).isWarnEnabled()) {\n                        OpenCms.getLog(CmsTaskAction.class).warn(\"Could not generate mail while creating task for \"\n                                + cms.readOwner(task).getName(), e);\n                    }\n                }\n            }\n        }\n        if(mail != null) {\n            mail.start();\n        }\n    }","id":16362,"modified_method":"/**\n     * Creates a new task.\n     * @param cms The cms-object.\n     * @param agentName The name of the new editor for this task.\n     * @param roleName The name of the new role for the user.\n     * @param taskName The new name of the task.\n     * @param taskcomment The new comment for this task.\n     * @param timeoutString The new timeout-date as a string in the following format:\n     * \"dd.mm.yyyy\"\n     * @param priorityString the new priority as String (\"1\" = high,\n     * \"2\" = normal or \"3\" = low)\n     * @param paraAcceptation controls if a message should be send by acceptation. (\"checked\" | \"\")\n     * @param paraAll controls if a message should be send to all users in a role. (\"checked\" | \"\")\n     * @param paraCompletion controls if a message should be send by completing this task. (\"checked\" | \"\")\n     * @param paraDelivery controls if a message should be send by delivering a task. (\"checked\" | \"\")\n     * @throws CmsException Throws CmsExceptions, that are be\n     * thrown in calling methods.\n     */\n\n    public static void create(CmsObject cms, String agentName, String roleName, String taskName,\n            String taskcomment, String timeoutString, String priorityString, String paraAcceptation,\n            String paraAll, String paraCompletion, String paraDelivery) throws CmsException {\n        CmsXmlLanguageFile lang = new CmsXmlLanguageFile(cms);\n        if(roleName.equals(C_ALL_ROLES)) {\n            roleName = cms.readUser(agentName).getDefaultGroup().getName();\n        }\n\n        // try to create the task\n        int priority = Integer.parseInt(priorityString);\n\n        // create a long from the overgiven date.\n        String splittetDate[] = CmsStringUtil.split(timeoutString, \".\");\n        GregorianCalendar cal = new GregorianCalendar(Integer.parseInt(splittetDate[2]),\n                Integer.parseInt(splittetDate[1]) - 1, Integer.parseInt(splittetDate[0]), 0, 0, 0);\n        long timeout = cal.getTime().getTime();\n        CmsTask task = cms.createTask(agentName, roleName, taskName, timeout, priority);\n        cms.setTaskPar(task.getId(), C_TASKPARA_ACCEPTATION, paraAcceptation);\n        cms.setTaskPar(task.getId(), C_TASKPARA_ALL, paraAll);\n        cms.setTaskPar(task.getId(), C_TASKPARA_COMPLETION, paraCompletion);\n        cms.setTaskPar(task.getId(), C_TASKPARA_DELIVERY, paraDelivery);\n        String comment = lang.getLanguageValue(\"task.label.forrole\") + \": \" + roleName + \"\\n\";\n        comment += lang.getLanguageValue(\"task.label.editor\") + \": \" + CmsUser.getFullName(cms.readUser(task.getAgentUser())) + \"\\n\";\n        comment += taskcomment;\n        cms.writeTaskLog(task.getId(), comment, C_TASKLOGTYPE_CREATED);\n\n        // send an email\n        // per default send a mail from task's organizer to task's recipient.\n        StringBuffer contentBuf = new StringBuffer(lang.getLanguageValue(\"task.email.create.content\"));\n        contentBuf.append(\"\\n\");\n        contentBuf.append(lang.getLanguageValue(\"task.label.project\"));\n        contentBuf.append(\": \");\n        String projectname = \"?\";\n        try {\n            projectname = cms.readTask(task.getRoot()).getName();\n        }\n        catch(Exception exc) {\n\n\n        // no root?!\n        }\n        contentBuf.append(projectname);\n        contentBuf.append(\"\\n\");\n        contentBuf.append(lang.getLanguageValue(\"task.label.task\"));\n        contentBuf.append(\": \");\n        contentBuf.append(task.getName());\n        contentBuf.append(\"\\n\");\n        contentBuf.append(lang.getLanguageValue(\"task.label.actuator\"));\n        contentBuf.append(\": \");\n        contentBuf.append(CmsUser.getFullName(cms.readOwner(task)));\n        int projectid = cms.readProject(task).getId();\n        contentBuf.append(\"\\n\\n\\n\" + getTaskUrl(cms, task.getId(), projectid));\n        String subject = lang.getLanguageValue(\"task.email.create.subject\") + \" \" + CmsUser.getFullName(cms.readUser(task.getAgentUser())) + \" / \" + roleName;\n        CmsUser[] users =  {\n            cms.readAgent(task)\n        };\n        CmsSimpleMail mail = null;\n        try {\n            mail = createMail(cms.readOwner(task), users, subject, contentBuf.toString());\n        }\n        catch(CmsException e) {\n            if(OpenCms.getLog(CmsTaskAction.class).isWarnEnabled()) {\n                OpenCms.getLog(CmsTaskAction.class).warn(\"Could not generate mail while creating task for \"\n                        + cms.readOwner(task).getName(), e);\n            }\n        }\n\n        // if \"Alle Rollenmitglieder von Aufgabe Benachrichtigen\" checkbox is selected.\n        if(cms.getTaskPar(task.getId(), C_TASKPARA_ALL) != null) {\n\n            // the news deliver always \"checked\" or \"\"\n            if(cms.getTaskPar(task.getId(), C_TASKPARA_ALL).equals(\"checked\")) {\n                try {\n                    CmsGroup group = cms.readGroup(task);\n                    Vector groupUser = cms.getUsersOfGroup(group.getName());\n                    mail = createMail(cms.readOwner(task), groupUser,\n                            subject, contentBuf.toString(), true);\n                }\n                catch(CmsException e) {\n                    if(OpenCms.getLog(CmsTaskAction.class).isWarnEnabled()) {\n                        OpenCms.getLog(CmsTaskAction.class).warn(\"Could not generate mail while creating task for \"\n                                + cms.readOwner(task).getName(), e);\n                    }\n                }\n            }\n        }\n        if (mail != null) {\n            new CmsMailTransport(mail).send();\n        }\n    }","commit_id":"256e736e48ad2a3069f023bca3b1ffd77337d27a","url":"https://github.com/alkacon/opencms-core"},{"original_method":"/**\n     * Ends a task.\n     * @param cms The cms-object.\n     * @param int taskid The id of the task.\n     * @throws CmsException Throws CmsExceptions, that are be\n     * thrown in calling methods.\n     */\n\n    public static void end(CmsObject cms, int taskid) throws CmsException {\n        cms.endTask(taskid);\n        String comment = \"\";\n        cms.writeTaskLog(taskid, comment, C_TASKLOGTYPE_OK);\n\n        // send an email if \"Benachrichtigung bei Abhacken\" was selected.\n        CmsXmlLanguageFile lang = new CmsXmlLanguageFile(cms);\n        CmsTask task = cms.readTask(taskid);\n        if(cms.getTaskPar(task.getId(), C_TASKPARA_COMPLETION) != null) {\n            StringBuffer contentBuf = new StringBuffer(lang.getLanguageValue(\"task.email.end.content\"));\n            contentBuf.append(\"\\n\");\n            contentBuf.append(lang.getLanguageValue(\"task.label.project\"));\n            contentBuf.append(\": \");\n            String projectname = \"?\";\n            try {\n                projectname = cms.readTask(task.getRoot()).getName();\n            }\n            catch(Exception exc) {\n\n\n            // no root?!\n            }\n            contentBuf.append(projectname);\n            contentBuf.append(\"\\n\");\n            contentBuf.append(lang.getLanguageValue(\"task.label.task\"));\n            contentBuf.append(\": \");\n            contentBuf.append(task.getName());\n            contentBuf.append(\"\\n\");\n            contentBuf.append(lang.getLanguageValue(\"task.label.taskfor\"));\n            contentBuf.append(\": \");\n            contentBuf.append(CmsUser.getFullName(cms.readOriginalAgent(task)));\n            contentBuf.append(\"\\n\");\n            contentBuf.append(lang.getLanguageValue(\"task.label.editor\"));\n            contentBuf.append(\": \");\n            contentBuf.append(CmsUser.getFullName(cms.readAgent(task)));\n            int projectid = cms.readProject(task).getId();\n            contentBuf.append(\"\\n\\n\\n\" + getTaskUrl(cms, task.getId(), projectid));\n            String subject = lang.getLanguageValue(\"task.email.end.subject\") + \" \" + CmsUser.getFullName(cms.readAgent(task));\n            CmsUser[] users =  {\n                cms.readOwner(task)\n            };\n            try {\n                org.opencms.util.CmsMail mail = new org.opencms.util.CmsMail(cms, cms.readAgent(task),\n                        users, subject, contentBuf.toString(), \"text/plain\");\n                mail.start();\n            }\n            catch(Exception exc) {\n                if(OpenCms.getLog(CmsTaskAction.class).isWarnEnabled()) {\n                    OpenCms.getLog(CmsTaskAction.class).warn(\"Error while sending task mail\", exc);\n                }\n            }\n        }\n    }","id":16363,"modified_method":"/**\n     * Ends a task.\n     * @param cms The cms-object.\n     * @param int taskid The id of the task.\n     * @throws CmsException Throws CmsExceptions, that are be\n     * thrown in calling methods.\n     */\n\n    public static void end(CmsObject cms, int taskid) throws CmsException {\n        cms.endTask(taskid);\n        String comment = \"\";\n        cms.writeTaskLog(taskid, comment, C_TASKLOGTYPE_OK);\n\n        // send an email if \"Benachrichtigung bei Abhacken\" was selected.\n        CmsXmlLanguageFile lang = new CmsXmlLanguageFile(cms);\n        CmsTask task = cms.readTask(taskid);\n        if(cms.getTaskPar(task.getId(), C_TASKPARA_COMPLETION) != null) {\n            StringBuffer contentBuf = new StringBuffer(lang.getLanguageValue(\"task.email.end.content\"));\n            contentBuf.append(\"\\n\");\n            contentBuf.append(lang.getLanguageValue(\"task.label.project\"));\n            contentBuf.append(\": \");\n            String projectname = \"?\";\n            try {\n                projectname = cms.readTask(task.getRoot()).getName();\n            }\n            catch(Exception exc) {\n\n\n            // no root?!\n            }\n            contentBuf.append(projectname);\n            contentBuf.append(\"\\n\");\n            contentBuf.append(lang.getLanguageValue(\"task.label.task\"));\n            contentBuf.append(\": \");\n            contentBuf.append(task.getName());\n            contentBuf.append(\"\\n\");\n            contentBuf.append(lang.getLanguageValue(\"task.label.taskfor\"));\n            contentBuf.append(\": \");\n            contentBuf.append(CmsUser.getFullName(cms.readOriginalAgent(task)));\n            contentBuf.append(\"\\n\");\n            contentBuf.append(lang.getLanguageValue(\"task.label.editor\"));\n            contentBuf.append(\": \");\n            contentBuf.append(CmsUser.getFullName(cms.readAgent(task)));\n            int projectid = cms.readProject(task).getId();\n            contentBuf.append(\"\\n\\n\\n\" + getTaskUrl(cms, task.getId(), projectid));\n            String subject = lang.getLanguageValue(\"task.email.end.subject\") + \" \" + CmsUser.getFullName(cms.readAgent(task));\n            CmsUser[] users =  {\n                cms.readOwner(task)\n            };\n            try {\n                CmsSimpleMail mail = createMail(cms.readAgent(task),\n                        users, subject, contentBuf.toString());\n                new CmsMailTransport(mail).send();\n            }\n            catch(Exception exc) {\n                if(OpenCms.getLog(CmsTaskAction.class).isWarnEnabled()) {\n                    OpenCms.getLog(CmsTaskAction.class).warn(\"Error while sending task mail\", exc);\n                }\n            }\n        }\n    }","commit_id":"256e736e48ad2a3069f023bca3b1ffd77337d27a","url":"https://github.com/alkacon/opencms-core"},{"original_method":"/**\n     * Accepts a task.\n     * @param cms The cms-object.\n     * @param int taskid The id of the task.\n     * @throws CmsException Throws CmsExceptions, that are be\n     * thrown in calling methods.\n     */\n\n    public static void accept(CmsObject cms, int taskid) throws CmsException {\n        cms.acceptTask(taskid);\n        String comment = \"\";\n        cms.writeTaskLog(taskid, comment, C_TASKLOGTYPE_ACCEPTED);\n\n        // send an email if \"Benachrichtigung bei Annahme\" was selected.\n        CmsXmlLanguageFile lang = new CmsXmlLanguageFile(cms);\n        CmsTask task = cms.readTask(taskid);\n        if(cms.getTaskPar(task.getId(), C_TASKPARA_ACCEPTATION) != null) {\n            StringBuffer contentBuf = new StringBuffer(lang.getLanguageValue(\"task.email.accept.content\"));\n            contentBuf.append(\"\\n\");\n            contentBuf.append(lang.getLanguageValue(\"task.label.project\"));\n            contentBuf.append(\": \");\n            String projectname = \"?\";\n            try {\n                projectname = cms.readTask(task.getRoot()).getName();\n            }\n            catch(Exception exc) {\n\n\n            // no root?!\n            }\n            contentBuf.append(projectname);\n            contentBuf.append(\"\\n\");\n            contentBuf.append(lang.getLanguageValue(\"task.label.task\"));\n            contentBuf.append(\": \");\n            contentBuf.append(task.getName());\n            int projectid = cms.readProject(task).getId();\n            contentBuf.append(\"\\n\\n\\n\" + getTaskUrl(cms, taskid, projectid));\n            String subject = lang.getLanguageValue(\"task.email.accept.subject\") + \" \" + CmsUser.getFullName(cms.readAgent(task));\n            CmsUser[] users =  {\n                cms.readOwner(task)\n            };\n            try {\n                org.opencms.util.CmsMail mail = new org.opencms.util.CmsMail(cms, cms.readAgent(task),\n                        users, subject, contentBuf.toString(), \"text/plain\");\n                mail.start();\n            }\n            catch(Exception exc) {\n                if(OpenCms.getLog(CmsTaskAction.class).isWarnEnabled()) {\n                    OpenCms.getLog(CmsTaskAction.class).warn(\"Error while sending task mail\", exc);\n                }\n            }\n        }\n    }","id":16364,"modified_method":"/**\n     * Accepts a task.\n     * @param cms The cms-object.\n     * @param int taskid The id of the task.\n     * @throws CmsException Throws CmsExceptions, that are be\n     * thrown in calling methods.\n     */\n\n    public static void accept(CmsObject cms, int taskid) throws CmsException {\n        cms.acceptTask(taskid);\n        String comment = \"\";\n        cms.writeTaskLog(taskid, comment, C_TASKLOGTYPE_ACCEPTED);\n\n        // send an email if \"Benachrichtigung bei Annahme\" was selected.\n        CmsXmlLanguageFile lang = new CmsXmlLanguageFile(cms);\n        CmsTask task = cms.readTask(taskid);\n        if(cms.getTaskPar(task.getId(), C_TASKPARA_ACCEPTATION) != null) {\n            StringBuffer contentBuf = new StringBuffer(lang.getLanguageValue(\"task.email.accept.content\"));\n            contentBuf.append(\"\\n\");\n            contentBuf.append(lang.getLanguageValue(\"task.label.project\"));\n            contentBuf.append(\": \");\n            String projectname = \"?\";\n            try {\n                projectname = cms.readTask(task.getRoot()).getName();\n            }\n            catch(Exception exc) {\n\n\n            // no root?!\n            }\n            contentBuf.append(projectname);\n            contentBuf.append(\"\\n\");\n            contentBuf.append(lang.getLanguageValue(\"task.label.task\"));\n            contentBuf.append(\": \");\n            contentBuf.append(task.getName());\n            int projectid = cms.readProject(task).getId();\n            contentBuf.append(\"\\n\\n\\n\" + getTaskUrl(cms, taskid, projectid));\n            String subject = lang.getLanguageValue(\"task.email.accept.subject\") + \" \" + CmsUser.getFullName(cms.readAgent(task));\n            CmsUser[] users =  {\n                cms.readOwner(task)\n            };\n            try {\n                CmsSimpleMail mail = createMail(cms.readAgent(task),\n                        users, subject, contentBuf.toString());\n                new CmsMailTransport(mail).send();\n            }\n            catch(Exception exc) {\n                if(OpenCms.getLog(CmsTaskAction.class).isWarnEnabled()) {\n                    OpenCms.getLog(CmsTaskAction.class).warn(\"Error while sending task mail\", exc);\n                }\n            }\n        }\n    }","commit_id":"256e736e48ad2a3069f023bca3b1ffd77337d27a","url":"https://github.com/alkacon/opencms-core"},{"original_method":"@Override\n    public void onMessage(Message message) {\n        logger.info(\"Received message \" + message + \" in MDB \" + this.getClass().getName());\n        try {\n            if (message.getStringProperty(\"MessageFormat\") != null)\n                logger.info(\"MessageFormat property = \" + message.getStringProperty(\"MessageFormat\"));\n\n            Queue destination = (Queue) message.getJMSReplyTo();\n            if (destination == null) {\n                try {\n                    destination = (Queue) this.ctx.lookup(\"jms/replyQueue\");\n                } catch (Throwable optional) {}\n            }\n            if (destination != null) {\n                logger.info(\"replying to \" + destination);\n                final TextMessage tm = (TextMessage) message;\n                final String text = tm.getText() + \"processed by: \" + hashCode();\n                final QueueSender sender = session.createSender(destination);\n                final TextMessage reply = session.createTextMessage(text);\n                reply.setJMSCorrelationID(message.getJMSMessageID());\n                sender.send(reply);\n                sender.close();\n            }\n        } catch (Exception e) {\n            logger.error(e);\n            throw new EJBException(e);\n        }\n    }","id":16365,"modified_method":"@Override\n    public void onMessage(Message message) {\n        logger.info(\"Received message \" + message + \" in MDB \" + this.getClass().getName());\n        try {\n            if (message.getStringProperty(\"MessageFormat\") != null)\n                logger.info(\"MessageFormat property = \" + message.getStringProperty(\"MessageFormat\"));\n\n            Destination replyTo = message.getJMSReplyTo();\n            if (replyTo == null) {\n                try {\n                    System.out.println(\"mdbContext = \" + mdbContext);\n                    replyTo = (Destination) mdbContext.lookup(\"jms/replyQueue\");\n                } catch (Throwable e) {\n                    logger.warn(e);\n                }\n            } else {\n                logger.info(\"Using replyTo from message JMSReplyTo: \" + replyTo);\n            }\n            if (replyTo == null) {\n                throw new EJBException(\"no replyTo Destination\");\n            }\n\n            final TextMessage tm = (TextMessage) message;\n            final String reply = tm.getText() + \"processed by: \" + hashCode();\n            try (JMSContext context = cf.createContext()) {\n                context.createProducer()\n                        .setJMSCorrelationID(message.getJMSMessageID())\n                        .send(replyTo, reply);\n            }\n        } catch (Exception e) {\n            logger.error(e);\n            throw new EJBException(e);\n        }\n    }","commit_id":"4553bdfa906b88fbdfba1d9465494b903cf16c08","url":"https://github.com/wildfly/wildfly"},{"original_method":"@Override\n    public void ejbRemove() {\n        ctx = null;\n        try {\n            if (session != null) {\n                session.close();\n            }\n            if (connection != null) {\n                connection.close();\n            }\n        } catch (JMSException e) {\n            e.printStackTrace();\n        }\n    }","id":16366,"modified_method":"@Override\n    public void ejbRemove() throws EJBException {\n    }","commit_id":"4553bdfa906b88fbdfba1d9465494b903cf16c08","url":"https://github.com/wildfly/wildfly"},{"original_method":"public void ejbCreate() {\n        try {\n            final InitialContext iniCtx = new InitialContext();\n            final QueueConnectionFactory factory = (QueueConnectionFactory) iniCtx.lookup(\"java:/ConnectionFactory\");\n            connection = factory.createQueueConnection();\n            session = connection.createQueueSession(false, QueueSession.AUTO_ACKNOWLEDGE);\n            connection.start();\n        } catch (Exception e) {\n            throw new EJBException(\"Failed to init EJB2xMDB\", e);\n        }\n    }","id":16367,"modified_method":"public void ejbCreate() {\n        InitialContext iniCtx = null;\n        try {\n            iniCtx = new InitialContext();\n            cf = (ConnectionFactory) iniCtx.lookup(\"java:/ConnectionFactory\");\n        } catch (NamingException e) {\n            throw new EJBException(e);\n        }\n    }","commit_id":"4553bdfa906b88fbdfba1d9465494b903cf16c08","url":"https://github.com/wildfly/wildfly"},{"original_method":"@Override\n    public void setMessageDrivenContext(MessageDrivenContext ctx) {\n        this.ctx = ctx;\n    }","id":16368,"modified_method":"@Override\n    public void setMessageDrivenContext(MessageDrivenContext ctx) throws EJBException {\n        this.mdbContext = ctx;\n    }","commit_id":"4553bdfa906b88fbdfba1d9465494b903cf16c08","url":"https://github.com/wildfly/wildfly"},{"original_method":"@Override\n        public void setup(ManagementClient managementClient, String containerId) throws Exception {\n            jmsAdminOperations = JMSOperationsProvider.getInstance(managementClient);\n            jmsAdminOperations.createJmsTopic(\"ejb2x/topic\", \"java:jboss/ejb2x/topic\");\n            jmsAdminOperations.createJmsQueue(\"ejb2x/replyQueueA\", \"java:jboss/ejb2x/replyQueueA\");\n            jmsAdminOperations.createJmsQueue(\"ejb2x/replyQueueB\", \"java:jboss/ejb2x/replyQueueB\");\n        }","id":16369,"modified_method":"@Override\n        public void setup(ManagementClient managementClient, String containerId) throws Exception {\n            jmsAdminOperations = JMSOperationsProvider.getInstance(managementClient.getControllerClient());\n            jmsAdminOperations.createJmsTopic(\"ejb2x/topic\", \"java:jboss/ejb2x/topic\");\n            jmsAdminOperations.createJmsQueue(\"ejb2x/replyQueueA\", \"java:jboss/ejb2x/replyQueueA\");\n            jmsAdminOperations.createJmsQueue(\"ejb2x/replyQueueB\", \"java:jboss/ejb2x/replyQueueB\");\n        }","commit_id":"4553bdfa906b88fbdfba1d9465494b903cf16c08","url":"https://github.com/wildfly/wildfly"},{"original_method":"/**\n     * Test the collection of resources for given categories in a given folder sorted by the date.<p>\n     * \n     * @throws Throwable if something goes wrong\n     */\n    public void testCollectAllInFolderSortByDate() throws Throwable {\n\n        CmsObject cms = getCmsObject();\n        echo(\"Testing allInFolderSortByDate resource collector\");\n\n        I_CmsResourceCollector collector = new CmsCategoryResourceCollector();\n\n        List resources = collector.getResults(\n            cms,\n            \"allKeyValuePairFiltered\",\n            \"resource=/folder1/|categoryTypes=business/,sports/|sortBy=date\");\n\n        CmsResource res;\n\n        assertEquals(4, resources.size());\n\n        res = (CmsResource)resources.get(0);\n        assertEquals(\"/sites/default/folder1/file3\", res.getRootPath());\n\n        resources = collector.getResults(\n            cms,\n            \"allKeyValuePairFiltered\",\n            \"resource=/folder1/|categoryTypes=business/,sports/|sortBy=date|sortAsc=false\");\n\n        assertEquals(4, resources.size());\n\n        res = (CmsResource)resources.get(0);\n        assertEquals(\"/sites/default/folder1/file3\", res.getRootPath());\n\n        resources = collector.getResults(\n            cms,\n            \"allKeyValuePairFiltered\",\n            \"resource=/folder1/|categoryTypes=business/,sports/|sortBy=date|sortAsc=true\");\n\n        assertEquals(4, resources.size());\n\n        res = (CmsResource)resources.get(0);\n        assertEquals(\"/sites/default/folder1/file2\", res.getRootPath());\n    }","id":16370,"modified_method":"/**\n     * Test the collection of resources for given categories in a given folder sorted by the date.<p>\n     * \n     * @throws Throwable if something goes wrong\n     */\n    public void testCollectAllInFolderSortByDate() throws Throwable {\n\n        CmsObject cms = getCmsObject();\n        echo(\"Testing allInFolderSortByDate resource collector\");\n\n        I_CmsResourceCollector collector = new CmsCategoryResourceCollector();\n\n        List resources = collector.getResults(\n            cms,\n            \"allKeyValuePairFiltered\",\n            \"resource=/folder1/|categoryTypes=business/,sports/|sortBy=date\");\n\n        CmsResource res;\n\n        printResults(resources);\n        assertEquals(4, resources.size());\n\n        res = (CmsResource)resources.get(0);\n        assertEquals(\"/sites/default/folder1/file3\", res.getRootPath());\n\n        resources = collector.getResults(\n            cms,\n            \"allKeyValuePairFiltered\",\n            \"resource=/folder1/|categoryTypes=business/,sports/|sortBy=date|sortAsc=false\");\n\n        printResults(resources);\n        assertEquals(4, resources.size());\n\n        res = (CmsResource)resources.get(0);\n        assertEquals(\"/sites/default/folder1/file3\", res.getRootPath());\n\n        resources = collector.getResults(\n            cms,\n            \"allKeyValuePairFiltered\",\n            \"resource=/folder1/|categoryTypes=business/,sports/|sortBy=date|sortAsc=true\");\n\n        printResults(resources);\n        assertEquals(4, resources.size());\n\n        res = (CmsResource)resources.get(0);\n        assertEquals(\"/sites/default/folder1/file2\", res.getRootPath());\n    }","commit_id":"9525d2d95c2747024686b3ec4c99933dd5637c55","url":"https://github.com/alkacon/opencms-core"},{"original_method":"/**\n     * Test the collection of resources for given categories sorted by date.<p>\n     * \n     * @throws Throwable if something goes wrong\n     */\n    public void testCollectAllResourcesSortByDate() throws Throwable {\n\n        CmsObject cms = getCmsObject();\n        echo(\"Testing allInFolderSortByDate resource collector\");\n\n        I_CmsResourceCollector collector = new CmsCategoryResourceCollector();\n\n        List resources = collector.getResults(\n            cms,\n            \"allKeyValuePairFiltered\",\n            \"categoryTypes=business/,sports/|sortBy=date\");\n\n        assertEquals(9, resources.size());\n\n        CmsResource res = (CmsResource)resources.get(0);\n        assertEquals(\"/sites/default/file1\", res.getRootPath());\n\n        resources = collector.getResults(\n            cms,\n            \"allKeyValuePairFiltered\",\n            \"categoryTypes=business/,sports/|sortBy=date|sortAsc=false\");\n\n        assertEquals(9, resources.size());\n\n        res = (CmsResource)resources.get(0);\n        assertEquals(\"/sites/default/file1\", res.getRootPath());\n\n        resources = collector.getResults(\n            cms,\n            \"allKeyValuePairFiltered\",\n            \"categoryTypes=business/,sports/|sortBy=date|sortAsc=true\");\n\n        assertEquals(9, resources.size());\n\n        res = (CmsResource)resources.get(0);\n        assertEquals(\"/sites/default/folder1/file2\", res.getRootPath());\n    }","id":16371,"modified_method":"/**\n     * Test the collection of resources for given categories sorted by date.<p>\n     * \n     * @throws Throwable if something goes wrong\n     */\n    public void testCollectAllResourcesSortByDate() throws Throwable {\n\n        CmsObject cms = getCmsObject();\n        echo(\"Testing allInFolderSortByDate resource collector\");\n\n        I_CmsResourceCollector collector = new CmsCategoryResourceCollector();\n\n        List resources = collector.getResults(\n            cms,\n            \"allKeyValuePairFiltered\",\n            \"categoryTypes=business/,sports/|sortBy=date\");\n\n        printResults(resources);\n        assertEquals(9, resources.size());\n\n        CmsResource res = (CmsResource)resources.get(0);\n        assertEquals(\"/sites/default/file1\", res.getRootPath());\n\n        resources = collector.getResults(\n            cms,\n            \"allKeyValuePairFiltered\",\n            \"categoryTypes=business/,sports/|sortBy=date|sortAsc=false\");\n\n        printResults(resources);\n        assertEquals(9, resources.size());\n\n        res = (CmsResource)resources.get(0);\n        assertEquals(\"/sites/default/file1\", res.getRootPath());\n\n        resources = collector.getResults(\n            cms,\n            \"allKeyValuePairFiltered\",\n            \"categoryTypes=business/,sports/|sortBy=date|sortAsc=true\");\n\n        printResults(resources);\n        assertEquals(9, resources.size());\n\n        res = (CmsResource)resources.get(0);\n        assertEquals(\"/sites/default/folder1/file2\", res.getRootPath());\n    }","commit_id":"9525d2d95c2747024686b3ec4c99933dd5637c55","url":"https://github.com/alkacon/opencms-core"},{"original_method":"/**\n     * Initializes the resources needed for the tests.<p>\n     * \n     * @param cms the cms object\n     * \n     * @throws Exception if something goes wrong\n     */\n    public static synchronized void initResources(CmsObject cms) throws Exception {\n\n        synchronized (cms) {\n            cms.createResource(\"/folder1\", CmsResourceTypeFolder.getStaticTypeId());\n            cms.wait(100); // this is needed for testing the date sorting collector\n\n            // jsps\n            cms.createResource(\"/file1\", CmsResourceTypeJsp.getStaticTypeId(), null, null);\n            cms.wait(100);\n            cms.createResource(\"/folder1/file3\", CmsResourceTypeJsp.getStaticTypeId(), null, null);\n            cms.wait(100);\n            cms.createResource(\"/file3\", CmsResourceTypeJsp.getStaticTypeId(), null, null);\n            cms.wait(100);\n            cms.createResource(\"/folder1/file1\", CmsResourceTypeJsp.getStaticTypeId(), null, null);\n            cms.wait(100);\n            cms.createResource(\"/file5\", CmsResourceTypeJsp.getStaticTypeId(), null, null);\n            cms.wait(100);\n\n            // plains\n            cms.createResource(\"/file2\", CmsResourceTypePlain.getStaticTypeId(), null, null);\n            cms.wait(100);\n            cms.createResource(\"/folder1/file4\", CmsResourceTypePlain.getStaticTypeId(), null, null);\n            cms.wait(100);\n            cms.createResource(\"/folder1/file2\", CmsResourceTypePlain.getStaticTypeId(), null, null);\n            cms.wait(100);\n            cms.createResource(\"/file4\", CmsResourceTypePlain.getStaticTypeId(), null, null);\n        }\n        CmsCategoryService service = CmsCategoryService.getInstance();\n        CmsCategory catBusiness = service.createCategory(\n            cms,\n            null,\n            \"business\",\n            \"business title\",\n            \"business description\",\n            null);\n        CmsCategory catSports = service.createCategory(cms, null, \"sports\", \"sports title\", \"sports description\", null);\n\n        // business\n        service.addResourceToCategory(cms, \"/file1\", catBusiness.getPath());\n        service.addResourceToCategory(cms, \"/file5\", catBusiness.getPath());\n        service.addResourceToCategory(cms, \"/folder1/file3\", catBusiness.getPath());\n        service.addResourceToCategory(cms, \"/file4\", catBusiness.getPath());\n        service.addResourceToCategory(cms, \"/folder1/file4\", catBusiness.getPath());\n\n        // sports\n        service.addResourceToCategory(cms, \"/file3\", catSports.getPath());\n        service.addResourceToCategory(cms, \"/folder1/file1\", catSports.getPath());\n        service.addResourceToCategory(cms, \"/file2\", catSports.getPath());\n        service.addResourceToCategory(cms, \"/folder1/file2\", catSports.getPath());\n    }","id":16372,"modified_method":"/**\n     * Initializes the resources needed for the tests.<p>\n     * \n     * @param cms the cms object\n     * \n     * @throws Exception if something goes wrong\n     */\n    public static void initResources(CmsObject cms) throws Exception {\n\n        cms.createResource(\"/folder1\", CmsResourceTypeFolder.getStaticTypeId());\n        Thread.sleep(100); // this is needed for testing the date sorting collector\n\n        // jsps\n        cms.createResource(\"/file1\", CmsResourceTypeJsp.getStaticTypeId(), null, null);\n        Thread.sleep(100);\n        cms.createResource(\"/folder1/file3\", CmsResourceTypeJsp.getStaticTypeId(), null, null);\n        Thread.sleep(100);\n        cms.createResource(\"/file3\", CmsResourceTypeJsp.getStaticTypeId(), null, null);\n        Thread.sleep(100);\n        cms.createResource(\"/folder1/file1\", CmsResourceTypeJsp.getStaticTypeId(), null, null);\n        Thread.sleep(100);\n        cms.createResource(\"/file5\", CmsResourceTypeJsp.getStaticTypeId(), null, null);\n        Thread.sleep(100);\n\n        // plains\n        cms.createResource(\"/file2\", CmsResourceTypePlain.getStaticTypeId(), null, null);\n        Thread.sleep(100);\n        cms.createResource(\"/folder1/file4\", CmsResourceTypePlain.getStaticTypeId(), null, null);\n        Thread.sleep(100);\n        cms.createResource(\"/folder1/file2\", CmsResourceTypePlain.getStaticTypeId(), null, null);\n        Thread.sleep(100);\n        cms.createResource(\"/file4\", CmsResourceTypePlain.getStaticTypeId(), null, null);\n        CmsCategoryService service = CmsCategoryService.getInstance();\n        CmsCategory catBusiness = service.createCategory(\n            cms,\n            null,\n            \"business\",\n            \"business title\",\n            \"business description\",\n            null);\n        Thread.sleep(100);\n        CmsCategory catSports = service.createCategory(cms, null, \"sports\", \"sports title\", \"sports description\", null);\n        Thread.sleep(100);\n\n        // business\n        service.addResourceToCategory(cms, \"/file1\", catBusiness.getPath());\n        Thread.sleep(100);\n        service.addResourceToCategory(cms, \"/file5\", catBusiness.getPath());\n        Thread.sleep(100);\n        service.addResourceToCategory(cms, \"/folder1/file3\", catBusiness.getPath());\n        Thread.sleep(100);\n        service.addResourceToCategory(cms, \"/file4\", catBusiness.getPath());\n        Thread.sleep(100);\n        service.addResourceToCategory(cms, \"/folder1/file4\", catBusiness.getPath());\n        Thread.sleep(100);\n\n        // sports\n        service.addResourceToCategory(cms, \"/file3\", catSports.getPath());\n        Thread.sleep(100);\n        service.addResourceToCategory(cms, \"/folder1/file1\", catSports.getPath());\n        Thread.sleep(100);\n        service.addResourceToCategory(cms, \"/file2\", catSports.getPath());\n        Thread.sleep(100);\n        service.addResourceToCategory(cms, \"/folder1/file2\", catSports.getPath());\n        Thread.sleep(100);\n    }","commit_id":"9525d2d95c2747024686b3ec4c99933dd5637c55","url":"https://github.com/alkacon/opencms-core"},{"original_method":"/**\n     * This test can go wrong if the external sites in the WWW not exists anymore or \n     * no connect to the WWW exists.<p>\n     * \n     * Please remove sites, which not exists anymore.<p>\n     * \n     * @throws Exception if test fails\n     */\n    public void testExternalLinksOutside() throws Exception {\n\n        CmsObject cms = getCmsObject();\n\n        List list = new ArrayList();\n        list.add(\"http://www.energinet.dk/da/servicemenu/Bibliotek/Nyhedsbreve/Markedsrapporter/Markedsrapporter.htm#\");\n        list.add(\"http://www.deloitte.com/dtt/section_node/0,1042,sid%253D62862,00.html\");\n        list.add(\"http://www.ddc.dk/DESIGNVIDEN/DESIGNnyt#\");\n        // TODO: the following link seems to be dead\n        list.add(\"http://www.horesta.dk/Service/Om Horesta/Medier/Dialog.aspx\");\n        list.add(\"http://www.dsb.dk/servlet/Satellite?pagename=Millenium/Page/StandardForside&c=Page&cid=1002806878464\");\n        list.add(\"http://www.kbht.dk:80/Emner/klub_1_raekke/1 raekke nr 1.aspx?pagename=Millenium/Page/StandardForside&c=Page&cid=1002806878464\");\n        list.add(\"http://www.nbi.dk/%7Enatphil/hug/hug.intro.html\");\n        list.add(\"http://www.si-folkesundhed.dk/Forskning/Sygdomme og tilskadekomst/Ulykker/Nyhedsbrev.aspx\");\n        list.add(\"http://www.mim.dk/Udgivelser/Milj%F8Danmark/\");\n        list.add(\"http://www.ug.dk/Videnscenter for vejledning/Forside/Virtuelt tidsskrift.aspx\");\n        list.add(\"http://www.energinet.dk/da/servicemenu/Bibliotek/Nyhedsbreve/OmEnergi/OmEnergi.htm#\");\n        list.add(\"http://www.energinet.dk/da/servicemenu/Bibliotek/Nyhedsbreve/Nyhedsbrev fra Magnetfeltudvalget/Nyhedsbrev fra Magnetfeltudvalget.htm#\");\n        list.add(\"http://www.kbht.dk:80/Emner/klub_1_raekke/1 raekke nr 1.aspx?a=b#test\");\n        list.add(\"http://www.kbht.dk/Emner/klub_1_raekke/1%20raekke%20nr%201.aspx\");\n\n        // checks the list of external links\n        for (int i = 0; i < list.size(); i++) {\n            String url = (String)list.get(i);\n            System.out.println(\"Checking external link: \" + url);\n            System.out.println(\"  Extenal link encoded: \" + new CmsUriSplitter(url, true).toURI().toURL());\n            assertTrue(\"External link check failed:\" + url, CmsExternalLinksValidator.checkUrl(cms, url));\n        }\n    }","id":16373,"modified_method":"/**\n     * This test can go wrong if the external sites in the WWW not exists anymore or \n     * no connect to the WWW exists.<p>\n     * \n     * Please remove sites, which not exists anymore.<p>\n     * \n     * @throws Exception if test fails\n     */\n    public void testExternalLinksOutside() throws Exception {\n\n        CmsObject cms = getCmsObject();\n\n        List list = new ArrayList();\n        list.add(\"http://www.energinet.dk/da/servicemenu/Bibliotek/Nyhedsbreve/Markedsrapporter/Markedsrapporter.htm#\");\n        list.add(\"http://www.deloitte.com/dtt/section_node/0,1042,sid%253D62862,00.html\");\n        list.add(\"http://www.dsb.dk/servlet/Satellite?pagename=Millenium/Page/StandardForside&c=Page&cid=1002806878464\");\n        list.add(\"http://www.nbi.dk/%7Enatphil/hug/hug.intro.html\");\n        list.add(\"http://www.si-folkesundhed.dk/Forskning/Sygdomme og tilskadekomst/Ulykker/Nyhedsbrev.aspx\");\n        list.add(\"http://www.mim.dk/Udgivelser/Milj%F8Danmark/\");\n        list.add(\"http://www.ug.dk/Videnscenter for vejledning/Forside/Virtuelt tidsskrift.aspx\");\n        list.add(\"http://www.energinet.dk/da/servicemenu/Bibliotek/Nyhedsbreve/OmEnergi/OmEnergi.htm#\");\n        list.add(\"http://www.energinet.dk/da/servicemenu/Bibliotek/Nyhedsbreve/Nyhedsbrev fra Magnetfeltudvalget/Nyhedsbrev fra Magnetfeltudvalget.htm#\");\n\n        // the following links seems to be dead:\n        // list.add(\"http://www.horesta.dk/Service/Om Horesta/Medier/Dialog.aspx\");\n        // list.add(\"http://www.kbht.dk:80/Emner/klub_1_raekke/1 raekke nr 1.aspx?a=b#test\");\n        // list.add(\"http://www.kbht.dk:80/Emner/klub_1_raekke/1 raekke nr 1.aspx?pagename=Millenium/Page/StandardForside&c=Page&cid=1002806878464\");\n        // list.add(\"http://www.kbht.dk/Emner/klub_1_raekke/1%20raekke%20nr%201.aspx\");\n        // list.add(\"http://www.ddc.dk/DESIGNVIDEN/DESIGNnyt#\");\n\n        // checks the list of external links\n        for (int i = 0; i < list.size(); i++) {\n            String url = (String)list.get(i);\n            System.out.println(\"Checking external link: \" + url);\n            System.out.println(\"  Extenal link encoded: \" + new CmsUriSplitter(url, true).toURI().toURL());\n            assertTrue(\"External link check failed:\" + url, CmsExternalLinksValidator.checkUrl(cms, url));\n        }\n    }","commit_id":"9525d2d95c2747024686b3ec4c99933dd5637c55","url":"https://github.com/alkacon/opencms-core"},{"original_method":"/**\n     * Tests the import of a resource in the wrong site.<p>\n     * \n     * @throws Exception if something goes wrong\n     */\n    public void testImportWrongSite() throws Exception {\n\n        CmsObject cms = getCmsObject();\n        echo(\"Testing the import of a resource in the wrong site.\");\n\n        String site = \"/sites/default\";\n        String filename = \"/newfileWrongSite.html\";\n        String zipExportFilename = OpenCms.getSystemInfo().getAbsoluteRfsPathRelativeToWebInf(\n            \"packages/testImportWrongSite.zip\");\n\n        try {\n            cms.getRequestContext().setSiteRoot(\"\");\n\n            // create file\n            CmsResource res = cms.createResource(site + filename, CmsResourceTypePlain.getStaticTypeId());\n\n            // publish the file\n            cms.unlockResource(site + filename);\n            OpenCms.getPublishManager().publishResource(cms, site + filename);\n            OpenCms.getPublishManager().waitWhileRunning();\n\n            // export the file\n            CmsVfsImportExportHandler vfsExportHandler = new CmsVfsImportExportHandler();\n            List exportPaths = new ArrayList(1);\n            exportPaths.add(site + filename);\n            CmsExportParameters params = new CmsExportParameters(\n                zipExportFilename,\n                null,\n                true,\n                false,\n                false,\n                exportPaths,\n                false,\n                true,\n                0,\n                true,\n                false);\n            vfsExportHandler.setExportParams(params);\n            OpenCms.getImportExportManager().exportData(\n                cms,\n                vfsExportHandler,\n                new CmsShellReport(cms.getRequestContext().getLocale()));\n\n            // now import the file in a different site\n            cms.getRequestContext().setSiteRoot(site);\n\n            // re-import the exported files\n            OpenCms.getImportExportManager().importData(\n                cms,\n                new CmsShellReport(cms.getRequestContext().getLocale()),\n                new CmsImportParameters(zipExportFilename, \"/\", true));\n\n            // now check \n            cms.getRequestContext().setSiteRoot(\"\");\n            cms.readResource(res.getStructureId());\n\n            String path = \"/\";\n            Iterator itPath = CmsStringUtil.splitAsList(site + filename, \"/\").iterator();\n            while (itPath.hasNext()) {\n                String pathPart = (String)itPath.next();\n                path += pathPart + \"/\";\n                assertTrue(cms.existsResource(path)); // the old file\n                assertFalse(cms.existsResource(site + path)); // the new file\n            }\n        } finally {\n            try {\n                if (zipExportFilename != null) {\n                    File file = new File(zipExportFilename);\n                    if (file.exists()) {\n                        file.delete();\n                    }\n                }\n            } catch (Throwable t) {\n                // intentionally left blank\n            }\n        }\n    }","id":16374,"modified_method":"/**\n     * Tests the import of a resource in the wrong site.<p>\n     * \n     * @throws Exception if something goes wrong\n     */\n    public void testImportWrongSite() throws Exception {\n\n        CmsObject cms = getCmsObject();\n        echo(\"Testing the import of a resource in the wrong site.\");\n\n        String site = \"/sites/default\";\n        String filename = \"/newfileWrongSite.html\";\n        String zipExportFilename = OpenCms.getSystemInfo().getAbsoluteRfsPathRelativeToWebInf(\n            \"packages/testImportWrongSite.zip\");\n\n        try {\n            cms.getRequestContext().setSiteRoot(\"\");\n\n            // create file\n            CmsResource res = cms.createResource(site + filename, CmsResourceTypePlain.getStaticTypeId());\n\n            // publish the file\n            cms.unlockResource(site + filename);\n            OpenCms.getPublishManager().publishResource(cms, site + filename);\n            OpenCms.getPublishManager().waitWhileRunning();\n\n            // export the file\n            CmsVfsImportExportHandler vfsExportHandler = new CmsVfsImportExportHandler();\n            List exportPaths = new ArrayList(1);\n            exportPaths.add(site + filename);\n            CmsExportParameters params = new CmsExportParameters(\n                zipExportFilename,\n                null,\n                true,\n                false,\n                false,\n                exportPaths,\n                false,\n                true,\n                0,\n                true,\n                false);\n            vfsExportHandler.setExportParams(params);\n            OpenCms.getImportExportManager().exportData(\n                cms,\n                vfsExportHandler,\n                new CmsShellReport(cms.getRequestContext().getLocale()));\n\n            // now import the file in a different site\n            cms.getRequestContext().setSiteRoot(site);\n\n            // re-import the exported files\n            OpenCms.getImportExportManager().importData(\n                cms,\n                new CmsShellReport(cms.getRequestContext().getLocale()),\n                new CmsImportParameters(zipExportFilename, \"/\", true));\n\n            // now check \n            cms.getRequestContext().setSiteRoot(\"\");\n            cms.readResource(res.getStructureId());\n\n            String path = \"/\";\n            Iterator itPath = CmsStringUtil.splitAsList(site + filename, \"/\").iterator();\n            while (itPath.hasNext()) {\n                String pathPart = (String)itPath.next();\n                path += pathPart;\n                if (itPath.hasNext()) {\n                    // dont add slash after the file name\n                    path += \"/\";\n                }\n                assertTrue(\"Path \" + path + \" does not exist as expected\", cms.existsResource(path)); // the old file\n                assertFalse(\"Path \" + site + path + \" should not exist\", cms.existsResource(site + path)); // the new file\n            }\n        } finally {\n            try {\n                if (zipExportFilename != null) {\n                    File file = new File(zipExportFilename);\n                    if (file.exists()) {\n                        file.delete();\n                    }\n                }\n            } catch (Throwable t) {\n                // intentionally left blank\n            }\n        }\n    }","commit_id":"9525d2d95c2747024686b3ec4c99933dd5637c55","url":"https://github.com/alkacon/opencms-core"},{"original_method":"/**\n     * Tests the memory monitor.<p>\n     * \n     * @throws Exception if something goes wrong\n     */\n    public void testMemoryMonitor() throws Exception {\n\n        System.out.println(\"Testing the OpenCms memory monitor.\");\n\n        // generate job description \n        CmsScheduledJobInfo jobInfo = new CmsScheduledJobInfo();\n        CmsContextInfo contextInfo = new CmsContextInfo(OpenCms.getDefaultUsers().getUserAdmin());\n        jobInfo.setContextInfo(contextInfo);\n        jobInfo.setJobName(\"Memory monitor\");\n        jobInfo.setClassName(CmsMemoryMonitor.class.getName());\n        jobInfo.setReuseInstance(true);\n        jobInfo.setCronExpression(\"0/4 * * * * ?\");\n\n        // add the job to the manager\n        OpenCms.getScheduleManager().scheduleJob(getCmsObject(), jobInfo);\n\n        int seconds = 0;\n        do {\n            try {\n                Thread.sleep(1000);\n            } catch (InterruptedException e) {\n                fail(\"Something caused the waiting test thread to interrupt!\");\n            }\n            seconds++;\n        } while (seconds < 18);\n\n        assertEquals(5, OpenCms.getMemoryMonitor().getLogCount());\n    }","id":16375,"modified_method":"/**\n     * Tests the memory monitor.<p>\n     * \n     * @throws Exception if something goes wrong\n     */\n    public void testMemoryMonitor() throws Exception {\n\n        System.out.println(\"Testing the OpenCms memory monitor.\");\n\n        // generate job description \n        CmsScheduledJobInfo jobInfo = new CmsScheduledJobInfo();\n        CmsContextInfo contextInfo = new CmsContextInfo(OpenCms.getDefaultUsers().getUserAdmin());\n        jobInfo.setContextInfo(contextInfo);\n        jobInfo.setJobName(\"Memory monitor\");\n        jobInfo.setClassName(CmsMemoryMonitor.class.getName());\n        jobInfo.setReuseInstance(true);\n        jobInfo.setCronExpression(\"0/4 * * * * ?\");\n\n        // wait until we are close to a first job execution in order to have the required count in the end\n        do {\n            try {\n                Thread.sleep(250);\n            } catch (InterruptedException e) {\n                // NOOP - Test might still work\n            }\n        } while ((System.currentTimeMillis() % 4000) > 1000);\n\n        // add the job to the manager\n        OpenCms.getScheduleManager().scheduleJob(getCmsObject(), jobInfo);\n\n        int seconds = 0;\n        do {\n            try {\n                Thread.sleep(1000);\n            } catch (InterruptedException e) {\n                fail(\"Something caused the waiting test thread to interrupt!\");\n            }\n            seconds++;\n        } while (seconds < 18);\n\n        assertEquals(5, OpenCms.getMemoryMonitor().getLogCount());\n    }","commit_id":"9525d2d95c2747024686b3ec4c99933dd5637c55","url":"https://github.com/alkacon/opencms-core"},{"original_method":"/**\n         * Parses the additional configuration data from the collector param.<p>\n         *\n         * @param data the configuration data.\n         *\n         * @throws CmsLoaderException if something goes wrong\n         */\n        private void parseExtendedData(String data) throws CmsLoaderException {\n\n            String[] keyValueTokens = CmsStringUtil.splitAsArray(data, '|');\n\n            for (int i = keyValueTokens.length - 1; i >= 0; i--) {\n                String relation = keyValueTokens[i];\n                String[] keyValuePair = CmsStringUtil.splitAsArray(relation, '=');\n\n                String key = keyValuePair[0];\n                String value = keyValuePair[1];\n\n                if (PARAM_KEY_CATEGORY_TYPES.equals(key)) {\n                    m_categoryTypes = CmsStringUtil.splitAsList(value, ',');\n                } else if (PARAM_KEY_RESOURCE.equals(key)) {\n                    setFileName(value);\n                } else if (PARAM_KEY_RESOURCE_TYPE.equals(key)) {\n                    I_CmsResourceType type = OpenCms.getResourceManager().getResourceType(value);\n                    if (type != null) {\n                        setType(type.getTypeId());\n                    }\n                } else if (PARAM_KEY_SORT_ASC.equals(key)) {\n                    m_sortAsc = Boolean.valueOf(value).booleanValue();\n                } else if (PARAM_KEY_SORT_BY.equals(key)) {\n                    m_sortBy = value;\n                } else if (PARAM_KEY_SUB_TREE.equals(key)) {\n                    m_subTree = Boolean.valueOf(value).booleanValue();\n                } else if (PARAM_KEY_COUNT.equals(key)) {\n                    int count = 0;\n                    try {\n                        count = Integer.parseInt(value);\n                    } catch (NumberFormatException e) {\n                        // ignore\n                    }\n                    setCount(count);\n                } else {\n                    LOG.error(\"Unknow key found in collector parameters.\");\n                }\n            }\n        }","id":16376,"modified_method":"/**\n         * Parses the additional configuration data from the collector param.<p>\n         *\n         * @param data the configuration data.\n         *\n         * @throws CmsLoaderException if something goes wrong\n         */\n        private void parseExtendedData(String data) throws CmsLoaderException {\n\n            String[] keyValueTokens = CmsStringUtil.splitAsArray(data, '|');\n            setType(-1);\n            for (int i = keyValueTokens.length - 1; i >= 0; i--) {\n                String relation = keyValueTokens[i];\n                String[] keyValuePair = CmsStringUtil.splitAsArray(relation, '=');\n\n                String key = keyValuePair[0];\n                String value = keyValuePair[1];\n\n                if (PARAM_KEY_CATEGORY_TYPES.equals(key)) {\n                    m_categoryTypes = CmsStringUtil.splitAsList(value, ',');\n                } else if (PARAM_KEY_RESOURCE.equals(key)) {\n                    setFileName(value);\n                } else if (PARAM_KEY_RESOURCE_TYPE.equals(key)) {\n                    I_CmsResourceType type = OpenCms.getResourceManager().getResourceType(value);\n                    if (type != null) {\n                        setType(type.getTypeId());\n                    }\n                } else if (PARAM_KEY_SORT_ASC.equals(key)) {\n                    m_sortAsc = Boolean.valueOf(value).booleanValue();\n                } else if (PARAM_KEY_SORT_BY.equals(key)) {\n                    m_sortBy = value;\n                } else if (PARAM_KEY_SUB_TREE.equals(key)) {\n                    m_subTree = Boolean.valueOf(value).booleanValue();\n                } else if (PARAM_KEY_COUNT.equals(key)) {\n                    int count = 0;\n                    try {\n                        count = Integer.parseInt(value);\n                    } catch (NumberFormatException e) {\n                        // ignore\n                    }\n                    setCount(count);\n                } else {\n                    LOG.error(\"Unknow key found in collector parameters.\");\n                }\n            }\n        }","commit_id":"5e1428ff665a20b02bcb680fde97e13e61918051","url":"https://github.com/alkacon/opencms-core"},{"original_method":"/**\n     * Initializes the resources needed for the tests.<p>\n     * \n     * @param cms the cms object\n     * \n     * @throws Exception if something goes wrong\n     */\n    public static synchronized void initResources(CmsObject cms) throws Exception {\n\n        synchronized (cms) {\n            cms.createResource(\"/folder1\", CmsResourceTypeFolder.getStaticTypeId());\n            cms.wait(100);\n\n            // jsps\n            cms.createResource(\"/file1\", CmsResourceTypeJsp.getStaticTypeId(), null, null);\n            cms.wait(100);\n            cms.createResource(\"/folder1/file3\", CmsResourceTypeJsp.getStaticTypeId(), null, null);\n            cms.wait(100);\n            cms.createResource(\"/file3\", CmsResourceTypeJsp.getStaticTypeId(), null, null);\n            cms.wait(100);\n            cms.createResource(\"/folder1/file1\", CmsResourceTypeJsp.getStaticTypeId(), null, null);\n            cms.wait(100);\n            cms.createResource(\"/file5\", CmsResourceTypeJsp.getStaticTypeId(), null, null);\n            cms.wait(100);\n\n            // plains\n            cms.createResource(\"/file2\", CmsResourceTypePlain.getStaticTypeId(), null, null);\n            cms.wait(100);\n            cms.createResource(\"/folder1/file4\", CmsResourceTypePlain.getStaticTypeId(), null, null);\n            cms.wait(100);\n            cms.createResource(\"/folder1/file2\", CmsResourceTypePlain.getStaticTypeId(), null, null);\n            cms.wait(100);\n            cms.createResource(\"/file4\", CmsResourceTypePlain.getStaticTypeId(), null, null);\n        }\n        CmsCategoryService service = CmsCategoryService.getInstance();\n        CmsCategory catBusiness = service.createCategory(\n            cms,\n            null,\n            \"business\",\n            \"business title\",\n            \"business description\");\n        CmsCategory catSports = service.createCategory(cms, null, \"sports\", \"sports title\", \"sports description\");\n\n        // business\n        service.addResourceToCategory(cms, \"/file1\", catBusiness.getPath());\n        service.addResourceToCategory(cms, \"/file5\", catBusiness.getPath());\n        service.addResourceToCategory(cms, \"/folder1/file3\", catBusiness.getPath());\n        service.addResourceToCategory(cms, \"/file4\", catBusiness.getPath());\n        service.addResourceToCategory(cms, \"/folder1/file4\", catBusiness.getPath());\n\n        // sports\n        service.addResourceToCategory(cms, \"/file3\", catSports.getPath());\n        service.addResourceToCategory(cms, \"/folder1/file1\", catSports.getPath());\n        service.addResourceToCategory(cms, \"/file2\", catSports.getPath());\n        service.addResourceToCategory(cms, \"/folder1/file2\", catSports.getPath());\n    }","id":16377,"modified_method":"/**\n     * Initializes the resources needed for the tests.<p>\n     * \n     * @param cms the cms object\n     * \n     * @throws Exception if something goes wrong\n     */\n    public static synchronized void initResources(CmsObject cms) throws Exception {\n\n        cms.createResource(\"/folder1\", CmsResourceTypeFolder.getStaticTypeId());\n\n        // jsps\n        cms.createResource(\"/file1\", CmsResourceTypeJsp.getStaticTypeId(), null, null);\n        cms.createResource(\"/folder1/file3\", CmsResourceTypeJsp.getStaticTypeId(), null, null);\n        cms.createResource(\"/file3\", CmsResourceTypeJsp.getStaticTypeId(), null, null);\n        cms.createResource(\"/folder1/file1\", CmsResourceTypeJsp.getStaticTypeId(), null, null);\n        cms.createResource(\"/file5\", CmsResourceTypeJsp.getStaticTypeId(), null, null);\n\n        // plains\n        cms.createResource(\"/file2\", CmsResourceTypePlain.getStaticTypeId(), null, null);\n        cms.createResource(\"/folder1/file4\", CmsResourceTypePlain.getStaticTypeId(), null, null);\n        cms.createResource(\"/folder1/file2\", CmsResourceTypePlain.getStaticTypeId(), null, null);\n        cms.createResource(\"/file4\", CmsResourceTypePlain.getStaticTypeId(), null, null);\n\n        CmsCategoryService service = CmsCategoryService.getInstance();\n        CmsCategory catBusiness = service.createCategory(\n            cms,\n            null,\n            \"business\",\n            \"business title\",\n            \"business description\");\n        CmsCategory catSports = service.createCategory(cms, null, \"sports\", \"sports title\", \"sports description\");\n\n        // business\n        service.addResourceToCategory(cms, \"/file1\", catBusiness.getPath());\n        service.addResourceToCategory(cms, \"/file5\", catBusiness.getPath());\n        service.addResourceToCategory(cms, \"/folder1/file3\", catBusiness.getPath());\n        service.addResourceToCategory(cms, \"/file4\", catBusiness.getPath());\n        service.addResourceToCategory(cms, \"/folder1/file4\", catBusiness.getPath());\n\n        // sports\n        service.addResourceToCategory(cms, \"/file3\", catSports.getPath());\n        service.addResourceToCategory(cms, \"/folder1/file1\", catSports.getPath());\n        service.addResourceToCategory(cms, \"/file2\", catSports.getPath());\n        service.addResourceToCategory(cms, \"/folder1/file2\", catSports.getPath());\n    }","commit_id":"5e1428ff665a20b02bcb680fde97e13e61918051","url":"https://github.com/alkacon/opencms-core"},{"original_method":"public List<String> featurize(State state) {\n    List<String> features = Generics.newArrayList();\n\n    final TreeShapedStack<Tree> stack = state.stack;\n    final List<Tree> sentence = state.sentence;\n    final int tokenPosition = state.tokenPosition;\n\n    CoreLabel s0Label = getStackLabel(stack, 0); // current top of stack\n    CoreLabel s1Label = getStackLabel(stack, 1); // one previous\n    CoreLabel s2Label = getStackLabel(stack, 2); // two previous\n    CoreLabel s3Label = getStackLabel(stack, 3); // three previous\n\n    CoreLabel s0LLabel = getStackLabel(stack, 0, Transition.LEFT);\n    CoreLabel s0RLabel = getStackLabel(stack, 0, Transition.RIGHT);\n    CoreLabel s0ULabel = getStackLabel(stack, 0, Transition.UNARY);\n\n    CoreLabel s0LLLabel = getStackLabel(stack, 0, Transition.LEFT, Transition.LEFT);\n    CoreLabel s0LRLabel = getStackLabel(stack, 0, Transition.LEFT, Transition.RIGHT);\n    CoreLabel s0LULabel = getStackLabel(stack, 0, Transition.LEFT, Transition.UNARY);\n\n    CoreLabel s0RLLabel = getStackLabel(stack, 0, Transition.RIGHT, Transition.LEFT);\n    CoreLabel s0RRLabel = getStackLabel(stack, 0, Transition.RIGHT, Transition.RIGHT);\n    CoreLabel s0RULabel = getStackLabel(stack, 0, Transition.RIGHT, Transition.UNARY);\n\n    CoreLabel s0ULLabel = getStackLabel(stack, 0, Transition.UNARY, Transition.LEFT);\n    CoreLabel s0URLabel = getStackLabel(stack, 0, Transition.UNARY, Transition.RIGHT);\n    CoreLabel s0UULabel = getStackLabel(stack, 0, Transition.UNARY, Transition.UNARY);\n\n    CoreLabel s1LLabel = getStackLabel(stack, 1, Transition.LEFT);\n    CoreLabel s1RLabel = getStackLabel(stack, 1, Transition.RIGHT);\n    CoreLabel s1ULabel = getStackLabel(stack, 1, Transition.UNARY);\n\n    CoreLabel q0Label = getQueueLabel(sentence, tokenPosition, 0); // current location in queue\n    CoreLabel q1Label = getQueueLabel(sentence, tokenPosition, 1); // next location in queue\n    CoreLabel q2Label = getQueueLabel(sentence, tokenPosition, 2); // two locations later in queue\n    CoreLabel q3Label = getQueueLabel(sentence, tokenPosition, 3); // three locations later in queue\n    CoreLabel qP1Label = getQueueLabel(sentence, tokenPosition, -1); // previous location in queue\n    CoreLabel qP2Label = getQueueLabel(sentence, tokenPosition, -2); // two locations prior in queue\n\n    addUnaryStackFeatures(features, s0Label, \"S0C-\", \"S0WT-\", \"S0T-\", \"S0WC-\", \"S0TC-\");\n    addUnaryStackFeatures(features, s1Label, \"S1C-\", \"S1WT-\", \"S1T-\", \"S1WC-\", \"S1TC-\");\n    addUnaryStackFeatures(features, s2Label, \"S2C-\", \"S2WT-\", \"S2T-\", \"S2WC-\", \"S2TC-\");\n    addUnaryStackFeatures(features, s3Label, \"S3C-\", \"S3WT-\", \"S3T-\", \"S3WC-\", \"S3TC-\");\n\n    addUnaryStackFeatures(features, s0LLabel, \"S0LC-\", \"S0LWT-\", \"S0LT-\", \"S0LWC-\", \"S0LTC-\");\n    addUnaryStackFeatures(features, s0RLabel, \"S0RC-\", \"S0RWT-\", \"S0RT-\", \"S0RWC-\", \"S0RTC-\");\n    addUnaryStackFeatures(features, s0ULabel, \"S0UC-\", \"S0UWT-\", \"S0UT-\", \"S0UWC-\", \"S0UTC-\");\n\n    addUnaryStackFeatures(features, s0LLLabel, \"S0LLC-\", \"S0LLWT-\", \"S0LLT-\", \"S0LLWC-\", \"S0LLTC-\");\n    addUnaryStackFeatures(features, s0LRLabel, \"S0LRC-\", \"S0LRWT-\", \"S0LRT-\", \"S0LRWC-\", \"S0LRTC-\");\n    addUnaryStackFeatures(features, s0LULabel, \"S0LUC-\", \"S0LUWT-\", \"S0LUT-\", \"S0LUWC-\", \"S0LUTC-\");\n\n    addUnaryStackFeatures(features, s0RLLabel, \"S0RLC-\", \"S0RLWT-\", \"S0RLT-\", \"S0RLWC-\", \"S0RLTC-\");\n    addUnaryStackFeatures(features, s0RRLabel, \"S0RRC-\", \"S0RRWT-\", \"S0RRT-\", \"S0RRWC-\", \"S0RRTC-\");\n    addUnaryStackFeatures(features, s0RULabel, \"S0RUC-\", \"S0RUWT-\", \"S0RUT-\", \"S0RUWC-\", \"S0RUTC-\");\n\n    addUnaryStackFeatures(features, s0ULLabel, \"S0ULC-\", \"S0ULWT-\", \"S0ULT-\", \"S0ULWC-\", \"S0ULTC-\");\n    addUnaryStackFeatures(features, s0URLabel, \"S0URC-\", \"S0URWT-\", \"S0URT-\", \"S0URWC-\", \"S0URTC-\");\n    addUnaryStackFeatures(features, s0UULabel, \"S0UUC-\", \"S0UUWT-\", \"S0UUT-\", \"S0UUWC-\", \"S0UUTC-\");\n\n    addUnaryStackFeatures(features, s1LLabel, \"S1LC-\", \"S1LWT-\", \"S1LT-\", \"S1LWC-\", \"S1LTC-\");\n    addUnaryStackFeatures(features, s1RLabel, \"S1RC-\", \"S1RWT-\", \"S1RT-\", \"S1RWC-\", \"S1RTC-\");\n    addUnaryStackFeatures(features, s1ULabel, \"S1UC-\", \"S1UWT-\", \"S1UT-\", \"S1UWC-\", \"S1UTC-\");\n\n    addUnaryQueueFeatures(features, q0Label, \"Q0WT-\");\n    addUnaryQueueFeatures(features, q1Label, \"Q1WT-\");\n    addUnaryQueueFeatures(features, q2Label, \"Q2WT-\");\n    addUnaryQueueFeatures(features, q3Label, \"Q3WT-\");\n    addUnaryQueueFeatures(features, qP1Label, \"QP1WT-\");\n    addUnaryQueueFeatures(features, qP2Label, \"QP2WT-\");\n\n    // Figure out which are the most recent left and right node\n    // attachments to the heads of the given nodes.  It seems like it\n    // should be more efficient to keep track of this in the state, as\n    // that would have a constant cost per transformation, but it is\n    // actually faster to find it by walking down the tree each time\n    CoreLabel recentL0Label = getRecentDependent(stack, Transition.LEFT, 0);\n    CoreLabel recentR0Label = getRecentDependent(stack, Transition.RIGHT, 0);\n    CoreLabel recentL1Label = getRecentDependent(stack, Transition.LEFT, 1);\n    CoreLabel recentR1Label = getRecentDependent(stack, Transition.RIGHT, 1);\n    addUnaryFeature(features, \"recL0-\", recentL0Label, FeatureComponent.HEADWORD);\n    addUnaryFeature(features, \"recR0-\", recentR0Label, FeatureComponent.HEADWORD);\n    addUnaryFeature(features, \"recL1-\", recentL1Label, FeatureComponent.HEADWORD);\n    addUnaryFeature(features, \"recR1-\", recentR1Label, FeatureComponent.HEADWORD);\n\n    addBinaryFeatures(features, \"S0WS1n-\", \"S0CS1n-\", \"S0WS1W-\", \"S0WS1C-\", \"S0CS1W-\", \"S0CS1C-\", s0Label, s1Label);\n\n    addBinaryFeature(features, \"S0WQ0W-\", s0Label, FeatureComponent.HEADWORD, q0Label, FeatureComponent.HEADWORD);\n    addBinaryFeature(features, \"S0WQ0T-\", s0Label, FeatureComponent.HEADWORD, q0Label, FeatureComponent.HEADTAG);\n    addBinaryFeature(features, \"S0CQ0W-\", s0Label, FeatureComponent.VALUE, q0Label, FeatureComponent.HEADWORD);\n    addBinaryFeature(features, \"S0CQ0T-\", s0Label, FeatureComponent.VALUE, q0Label, FeatureComponent.HEADTAG);\n\n    addBinaryFeature(features, \"Q0WQ1W-\", q0Label, FeatureComponent.HEADWORD, q1Label, FeatureComponent.HEADWORD);\n    addBinaryFeature(features, \"Q0WQ1T-\", q0Label, FeatureComponent.HEADWORD, q1Label, FeatureComponent.HEADTAG);\n    addBinaryFeature(features, \"Q0TQ1W-\", q0Label, FeatureComponent.HEADTAG, q1Label, FeatureComponent.HEADWORD);\n    addBinaryFeature(features, \"Q0TQ1T-\", q0Label, FeatureComponent.HEADTAG, q1Label, FeatureComponent.HEADTAG);\n\n    addBinaryFeature(features, \"S1WQ0W-\", s1Label, FeatureComponent.HEADWORD, q0Label, FeatureComponent.HEADWORD);\n    addBinaryFeature(features, \"S1WQ0T-\", s1Label, FeatureComponent.HEADWORD, q0Label, FeatureComponent.HEADTAG);\n    addBinaryFeature(features, \"S1CQ0W-\", s1Label, FeatureComponent.VALUE, q0Label, FeatureComponent.HEADWORD);\n    addBinaryFeature(features, \"S1CQ0T-\", s1Label, FeatureComponent.VALUE, q0Label, FeatureComponent.HEADTAG);\n\n    addTrigramFeature(features, \"S0cS1cS2c-\", s0Label, FeatureComponent.VALUE, s1Label, FeatureComponent.VALUE, s2Label, FeatureComponent.VALUE);\n    addTrigramFeature(features, \"S0wS1cS2c-\", s0Label, FeatureComponent.HEADWORD, s1Label, FeatureComponent.VALUE, s2Label, FeatureComponent.VALUE);\n    addTrigramFeature(features, \"S0cS1wS2c-\", s0Label, FeatureComponent.VALUE, s1Label, FeatureComponent.HEADWORD, s2Label, FeatureComponent.VALUE);\n    addTrigramFeature(features, \"S0cS1cS2w-\", s0Label, FeatureComponent.VALUE, s1Label, FeatureComponent.VALUE, s2Label, FeatureComponent.HEADWORD);\n    addTrigramFeature(features, \"S0cS1cQ0t-\", s0Label, FeatureComponent.VALUE, s1Label, FeatureComponent.VALUE, q0Label, FeatureComponent.HEADTAG);\n    addTrigramFeature(features, \"S0wS1cQ0t-\", s0Label, FeatureComponent.HEADWORD, s1Label, FeatureComponent.VALUE, q0Label, FeatureComponent.HEADTAG);\n    addTrigramFeature(features, \"S0cS1wQ0t-\", s0Label, FeatureComponent.VALUE, s1Label, FeatureComponent.HEADWORD, q0Label, FeatureComponent.HEADTAG);\n    addTrigramFeature(features, \"S0cS1cQ0w-\", s0Label, FeatureComponent.VALUE, s1Label, FeatureComponent.VALUE, q0Label, FeatureComponent.HEADWORD);\n\n    addPositionFeatures(features, state);\n\n    State.HeadPosition s0Separator = getSeparator(state.separators, 0);\n    State.HeadPosition s1Separator = getSeparator(state.separators, 1);\n    addSeparatorFeatures(features, s0Label, s1Label, s0Separator, s1Separator);\n\n    return features;\n  }","id":16378,"modified_method":"public List<String> featurize(State state) {\n    List<String> features = Generics.newArrayList();\n\n    final TreeShapedStack<Tree> stack = state.stack;\n    final List<Tree> sentence = state.sentence;\n    final int tokenPosition = state.tokenPosition;\n\n    CoreLabel s0Label = getStackLabel(stack, 0); // current top of stack\n    CoreLabel s1Label = getStackLabel(stack, 1); // one previous\n    CoreLabel s2Label = getStackLabel(stack, 2); // two previous\n    CoreLabel s3Label = getStackLabel(stack, 3); // three previous\n\n    CoreLabel s0LLabel = getStackLabel(stack, 0, Transition.LEFT);\n    CoreLabel s0RLabel = getStackLabel(stack, 0, Transition.RIGHT);\n    CoreLabel s0ULabel = getStackLabel(stack, 0, Transition.UNARY);\n\n    CoreLabel s0LLLabel = getStackLabel(stack, 0, Transition.LEFT, Transition.LEFT);\n    CoreLabel s0LRLabel = getStackLabel(stack, 0, Transition.LEFT, Transition.RIGHT);\n    CoreLabel s0LULabel = getStackLabel(stack, 0, Transition.LEFT, Transition.UNARY);\n\n    CoreLabel s0RLLabel = getStackLabel(stack, 0, Transition.RIGHT, Transition.LEFT);\n    CoreLabel s0RRLabel = getStackLabel(stack, 0, Transition.RIGHT, Transition.RIGHT);\n    CoreLabel s0RULabel = getStackLabel(stack, 0, Transition.RIGHT, Transition.UNARY);\n\n    CoreLabel s0ULLabel = getStackLabel(stack, 0, Transition.UNARY, Transition.LEFT);\n    CoreLabel s0URLabel = getStackLabel(stack, 0, Transition.UNARY, Transition.RIGHT);\n    CoreLabel s0UULabel = getStackLabel(stack, 0, Transition.UNARY, Transition.UNARY);\n\n    CoreLabel s1LLabel = getStackLabel(stack, 1, Transition.LEFT);\n    CoreLabel s1RLabel = getStackLabel(stack, 1, Transition.RIGHT);\n    CoreLabel s1ULabel = getStackLabel(stack, 1, Transition.UNARY);\n\n    CoreLabel q0Label = getQueueLabel(sentence, tokenPosition, 0); // current location in queue\n    CoreLabel q1Label = getQueueLabel(sentence, tokenPosition, 1); // next location in queue\n    CoreLabel q2Label = getQueueLabel(sentence, tokenPosition, 2); // two locations later in queue\n    CoreLabel q3Label = getQueueLabel(sentence, tokenPosition, 3); // three locations later in queue\n    CoreLabel qP1Label = getQueueLabel(sentence, tokenPosition, -1); // previous location in queue\n    CoreLabel qP2Label = getQueueLabel(sentence, tokenPosition, -2); // two locations prior in queue\n\n    addUnaryStackFeatures(features, s0Label, \"S0C-\", \"S0WT-\", \"S0T-\", \"S0WC-\", \"S0TC-\");\n    addUnaryStackFeatures(features, s1Label, \"S1C-\", \"S1WT-\", \"S1T-\", \"S1WC-\", \"S1TC-\");\n    addUnaryStackFeatures(features, s2Label, \"S2C-\", \"S2WT-\", \"S2T-\", \"S2WC-\", \"S2TC-\");\n    addUnaryStackFeatures(features, s3Label, \"S3C-\", \"S3WT-\", \"S3T-\", \"S3WC-\", \"S3TC-\");\n\n    addUnaryStackFeatures(features, s0LLabel, \"S0LC-\", \"S0LWT-\", \"S0LT-\", \"S0LWC-\", \"S0LTC-\");\n    addUnaryStackFeatures(features, s0RLabel, \"S0RC-\", \"S0RWT-\", \"S0RT-\", \"S0RWC-\", \"S0RTC-\");\n    addUnaryStackFeatures(features, s0ULabel, \"S0UC-\", \"S0UWT-\", \"S0UT-\", \"S0UWC-\", \"S0UTC-\");\n\n    addUnaryStackFeatures(features, s0LLLabel, \"S0LLC-\", \"S0LLWT-\", \"S0LLT-\", \"S0LLWC-\", \"S0LLTC-\");\n    addUnaryStackFeatures(features, s0LRLabel, \"S0LRC-\", \"S0LRWT-\", \"S0LRT-\", \"S0LRWC-\", \"S0LRTC-\");\n    addUnaryStackFeatures(features, s0LULabel, \"S0LUC-\", \"S0LUWT-\", \"S0LUT-\", \"S0LUWC-\", \"S0LUTC-\");\n\n    addUnaryStackFeatures(features, s0RLLabel, \"S0RLC-\", \"S0RLWT-\", \"S0RLT-\", \"S0RLWC-\", \"S0RLTC-\");\n    addUnaryStackFeatures(features, s0RRLabel, \"S0RRC-\", \"S0RRWT-\", \"S0RRT-\", \"S0RRWC-\", \"S0RRTC-\");\n    addUnaryStackFeatures(features, s0RULabel, \"S0RUC-\", \"S0RUWT-\", \"S0RUT-\", \"S0RUWC-\", \"S0RUTC-\");\n\n    addUnaryStackFeatures(features, s0ULLabel, \"S0ULC-\", \"S0ULWT-\", \"S0ULT-\", \"S0ULWC-\", \"S0ULTC-\");\n    addUnaryStackFeatures(features, s0URLabel, \"S0URC-\", \"S0URWT-\", \"S0URT-\", \"S0URWC-\", \"S0URTC-\");\n    addUnaryStackFeatures(features, s0UULabel, \"S0UUC-\", \"S0UUWT-\", \"S0UUT-\", \"S0UUWC-\", \"S0UUTC-\");\n\n    addUnaryStackFeatures(features, s1LLabel, \"S1LC-\", \"S1LWT-\", \"S1LT-\", \"S1LWC-\", \"S1LTC-\");\n    addUnaryStackFeatures(features, s1RLabel, \"S1RC-\", \"S1RWT-\", \"S1RT-\", \"S1RWC-\", \"S1RTC-\");\n    addUnaryStackFeatures(features, s1ULabel, \"S1UC-\", \"S1UWT-\", \"S1UT-\", \"S1UWC-\", \"S1UTC-\");\n\n    addUnaryQueueFeatures(features, q0Label, \"Q0WT-\");\n    addUnaryQueueFeatures(features, q1Label, \"Q1WT-\");\n    addUnaryQueueFeatures(features, q2Label, \"Q2WT-\");\n    addUnaryQueueFeatures(features, q3Label, \"Q3WT-\");\n    addUnaryQueueFeatures(features, qP1Label, \"QP1WT-\");\n    addUnaryQueueFeatures(features, qP2Label, \"QP2WT-\");\n\n    // Figure out which are the most recent left and right node\n    // attachments to the heads of the given nodes.  It seems like it\n    // should be more efficient to keep track of this in the state, as\n    // that would have a constant cost per transformation, but it is\n    // actually faster to find it by walking down the tree each time\n    CoreLabel recentL0Label = getRecentDependent(stack, Transition.LEFT, 0);\n    CoreLabel recentR0Label = getRecentDependent(stack, Transition.RIGHT, 0);\n    CoreLabel recentL1Label = getRecentDependent(stack, Transition.LEFT, 1);\n    CoreLabel recentR1Label = getRecentDependent(stack, Transition.RIGHT, 1);\n    addUnaryFeature(features, \"recL0-\", recentL0Label, FeatureComponent.HEADWORD);\n    addUnaryFeature(features, \"recR0-\", recentR0Label, FeatureComponent.HEADWORD);\n    addUnaryFeature(features, \"recL1-\", recentL1Label, FeatureComponent.HEADWORD);\n    addUnaryFeature(features, \"recR1-\", recentR1Label, FeatureComponent.HEADWORD);\n\n    addBinaryFeature(features, \"S0WS1W-\", s0Label, FeatureComponent.HEADWORD, s1Label, FeatureComponent.HEADWORD);\n    addBinaryFeature(features, \"S0WS1C-\", s0Label, FeatureComponent.HEADWORD, s1Label, FeatureComponent.VALUE);\n    addBinaryFeature(features, \"S0CS1W-\", s0Label, FeatureComponent.VALUE, s1Label, FeatureComponent.HEADWORD);\n    addBinaryFeature(features, \"S0CS1C-\", s0Label, FeatureComponent.VALUE, s1Label, FeatureComponent.VALUE);\n\n    addBinaryFeature(features, \"S0WQ0W-\", s0Label, FeatureComponent.HEADWORD, q0Label, FeatureComponent.HEADWORD);\n    addBinaryFeature(features, \"S0WQ0T-\", s0Label, FeatureComponent.HEADWORD, q0Label, FeatureComponent.HEADTAG);\n    addBinaryFeature(features, \"S0CQ0W-\", s0Label, FeatureComponent.VALUE, q0Label, FeatureComponent.HEADWORD);\n    addBinaryFeature(features, \"S0CQ0T-\", s0Label, FeatureComponent.VALUE, q0Label, FeatureComponent.HEADTAG);\n\n    addBinaryFeature(features, \"Q0WQ1W-\", q0Label, FeatureComponent.HEADWORD, q1Label, FeatureComponent.HEADWORD);\n    addBinaryFeature(features, \"Q0WQ1T-\", q0Label, FeatureComponent.HEADWORD, q1Label, FeatureComponent.HEADTAG);\n    addBinaryFeature(features, \"Q0TQ1W-\", q0Label, FeatureComponent.HEADTAG, q1Label, FeatureComponent.HEADWORD);\n    addBinaryFeature(features, \"Q0TQ1T-\", q0Label, FeatureComponent.HEADTAG, q1Label, FeatureComponent.HEADTAG);\n\n    addBinaryFeature(features, \"S1WQ0W-\", s1Label, FeatureComponent.HEADWORD, q0Label, FeatureComponent.HEADWORD);\n    addBinaryFeature(features, \"S1WQ0T-\", s1Label, FeatureComponent.HEADWORD, q0Label, FeatureComponent.HEADTAG);\n    addBinaryFeature(features, \"S1CQ0W-\", s1Label, FeatureComponent.VALUE, q0Label, FeatureComponent.HEADWORD);\n    addBinaryFeature(features, \"S1CQ0T-\", s1Label, FeatureComponent.VALUE, q0Label, FeatureComponent.HEADTAG);\n\n    addTrigramFeature(features, \"S0cS1cS2c-\", s0Label, FeatureComponent.VALUE, s1Label, FeatureComponent.VALUE, s2Label, FeatureComponent.VALUE);\n    addTrigramFeature(features, \"S0wS1cS2c-\", s0Label, FeatureComponent.HEADWORD, s1Label, FeatureComponent.VALUE, s2Label, FeatureComponent.VALUE);\n    addTrigramFeature(features, \"S0cS1wS2c-\", s0Label, FeatureComponent.VALUE, s1Label, FeatureComponent.HEADWORD, s2Label, FeatureComponent.VALUE);\n    addTrigramFeature(features, \"S0cS1cS2w-\", s0Label, FeatureComponent.VALUE, s1Label, FeatureComponent.VALUE, s2Label, FeatureComponent.HEADWORD);\n    addTrigramFeature(features, \"S0cS1cQ0t-\", s0Label, FeatureComponent.VALUE, s1Label, FeatureComponent.VALUE, q0Label, FeatureComponent.HEADTAG);\n    addTrigramFeature(features, \"S0wS1cQ0t-\", s0Label, FeatureComponent.HEADWORD, s1Label, FeatureComponent.VALUE, q0Label, FeatureComponent.HEADTAG);\n    addTrigramFeature(features, \"S0cS1wQ0t-\", s0Label, FeatureComponent.VALUE, s1Label, FeatureComponent.HEADWORD, q0Label, FeatureComponent.HEADTAG);\n    addTrigramFeature(features, \"S0cS1cQ0w-\", s0Label, FeatureComponent.VALUE, s1Label, FeatureComponent.VALUE, q0Label, FeatureComponent.HEADWORD);\n\n    addPositionFeatures(features, state);\n\n    State.HeadPosition s0Separator = getSeparator(state.separators, 0);\n    State.HeadPosition s1Separator = getSeparator(state.separators, 1);\n    addSeparatorFeatures(features, s0Label, s1Label, s0Separator, s1Separator);\n\n    return features;\n  }","commit_id":"d7ab38389afaa357f0a306795fc4af39ca03c989","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"public static void addUnaryQueueFeatures(List<String> features, CoreLabel label, String wtFeature) {\n    if (label == null) {\n      features.add(wtFeature + NULL);\n      return;\n    }\n    String tag = label.get(TreeCoreAnnotations.HeadTagAnnotation.class).label().value();\n    String word = label.get(TreeCoreAnnotations.HeadWordAnnotation.class).label().value();\n\n    // TODO: check to see if this is slow because of the string concat\n    features.add(wtFeature + tag + \"-\" + word);\n  }","id":16379,"modified_method":"public static void addUnaryQueueFeatures(List<String> features, CoreLabel label, String wtFeature) {\n    String tag = (label == null) ? NULL : label.get(TreeCoreAnnotations.HeadTagAnnotation.class).label().value();\n    String word = (label == null) ? NULL : label.get(TreeCoreAnnotations.HeadWordAnnotation.class).label().value();\n\n    // TODO: check to see if this is slow because of the string concat\n    features.add(wtFeature + tag + \"-\" + word);\n  }","commit_id":"d7ab38389afaa357f0a306795fc4af39ca03c989","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"public List<String> featurize(State state) {\n    List<String> features = Generics.newArrayList();\n\n    final TreeShapedStack<Tree> stack = state.stack;\n    final List<Tree> sentence = state.sentence;\n    final int tokenPosition = state.tokenPosition;\n\n    CoreLabel s0Label = getStackLabel(stack, 0); // current top of stack\n    CoreLabel s1Label = getStackLabel(stack, 1); // one previous\n    CoreLabel s2Label = getStackLabel(stack, 2); // two previous\n    CoreLabel s3Label = getStackLabel(stack, 3); // three previous\n\n    CoreLabel s0LLabel = getStackLabel(stack, 0, Transition.LEFT);\n    CoreLabel s0RLabel = getStackLabel(stack, 0, Transition.RIGHT);\n    CoreLabel s0ULabel = getStackLabel(stack, 0, Transition.UNARY);\n\n    CoreLabel s0LLLabel = getStackLabel(stack, 0, Transition.LEFT, Transition.LEFT);\n    CoreLabel s0LRLabel = getStackLabel(stack, 0, Transition.LEFT, Transition.RIGHT);\n    CoreLabel s0LULabel = getStackLabel(stack, 0, Transition.LEFT, Transition.UNARY);\n\n    CoreLabel s0RLLabel = getStackLabel(stack, 0, Transition.RIGHT, Transition.LEFT);\n    CoreLabel s0RRLabel = getStackLabel(stack, 0, Transition.RIGHT, Transition.RIGHT);\n    CoreLabel s0RULabel = getStackLabel(stack, 0, Transition.RIGHT, Transition.UNARY);\n\n    CoreLabel s0ULLabel = getStackLabel(stack, 0, Transition.UNARY, Transition.LEFT);\n    CoreLabel s0URLabel = getStackLabel(stack, 0, Transition.UNARY, Transition.RIGHT);\n    CoreLabel s0UULabel = getStackLabel(stack, 0, Transition.UNARY, Transition.UNARY);\n\n    CoreLabel s1LLabel = getStackLabel(stack, 1, Transition.LEFT);\n    CoreLabel s1RLabel = getStackLabel(stack, 1, Transition.RIGHT);\n    CoreLabel s1ULabel = getStackLabel(stack, 1, Transition.UNARY);\n\n    CoreLabel q0Label = getQueueLabel(sentence, tokenPosition, 0); // current location in queue\n    CoreLabel q1Label = getQueueLabel(sentence, tokenPosition, 1); // next location in queue\n    CoreLabel q2Label = getQueueLabel(sentence, tokenPosition, 2); // two locations later in queue\n    CoreLabel q3Label = getQueueLabel(sentence, tokenPosition, 3); // three locations later in queue\n    CoreLabel qP1Label = getQueueLabel(sentence, tokenPosition, -1); // previous location in queue\n    CoreLabel qP2Label = getQueueLabel(sentence, tokenPosition, -2); // two locations prior in queue\n\n    addUnaryStackFeatures(features, s0Label, \"S0C-\", \"S0WT-\", \"S0T-\", \"S0WC-\", \"S0TC-\");\n    addUnaryStackFeatures(features, s1Label, \"S1C-\", \"S1WT-\", \"S1T-\", \"S1WC-\", \"S1TC-\");\n    addUnaryStackFeatures(features, s2Label, \"S2C-\", \"S2WT-\", \"S2T-\", \"S2WC-\", \"S2TC-\");\n    addUnaryStackFeatures(features, s3Label, \"S3C-\", \"S3WT-\", \"S3T-\", \"S3WC-\", \"S3TC-\");\n\n    addUnaryStackFeatures(features, s0LLabel, \"S0LC-\", \"S0LWT-\", \"S0LT-\", \"S0LWC-\", \"S0LTC-\");\n    addUnaryStackFeatures(features, s0RLabel, \"S0RC-\", \"S0RWT-\", \"S0RT-\", \"S0RWC-\", \"S0RTC-\");\n    addUnaryStackFeatures(features, s0ULabel, \"S0UC-\", \"S0UWT-\", \"S0UT-\", \"S0UWC-\", \"S0UTC-\");\n\n    addUnaryStackFeatures(features, s0LLLabel, \"S0LLC-\", \"S0LLWT-\", \"S0LLT-\", \"S0LLWC-\", \"S0LLTC-\");\n    addUnaryStackFeatures(features, s0LRLabel, \"S0LRC-\", \"S0LRWT-\", \"S0LRT-\", \"S0LRWC-\", \"S0LRTC-\");\n    addUnaryStackFeatures(features, s0LULabel, \"S0LUC-\", \"S0LUWT-\", \"S0LUT-\", \"S0LUWC-\", \"S0LUTC-\");\n\n    addUnaryStackFeatures(features, s0RLLabel, \"S0RLC-\", \"S0RLWT-\", \"S0RLT-\", \"S0RLWC-\", \"S0RLTC-\");\n    addUnaryStackFeatures(features, s0RRLabel, \"S0RRC-\", \"S0RRWT-\", \"S0RRT-\", \"S0RRWC-\", \"S0RRTC-\");\n    addUnaryStackFeatures(features, s0RULabel, \"S0RUC-\", \"S0RUWT-\", \"S0RUT-\", \"S0RUWC-\", \"S0RUTC-\");\n\n    addUnaryStackFeatures(features, s0ULLabel, \"S0ULC-\", \"S0ULWT-\", \"S0ULT-\", \"S0ULWC-\", \"S0ULTC-\");\n    addUnaryStackFeatures(features, s0URLabel, \"S0URC-\", \"S0URWT-\", \"S0URT-\", \"S0URWC-\", \"S0URTC-\");\n    addUnaryStackFeatures(features, s0UULabel, \"S0UUC-\", \"S0UUWT-\", \"S0UUT-\", \"S0UUWC-\", \"S0UUTC-\");\n\n    addUnaryStackFeatures(features, s1LLabel, \"S1LC-\", \"S1LWT-\", \"S1LT-\", \"S1LWC-\", \"S1LTC-\");\n    addUnaryStackFeatures(features, s1RLabel, \"S1RC-\", \"S1RWT-\", \"S1RT-\", \"S1RWC-\", \"S1RTC-\");\n    addUnaryStackFeatures(features, s1ULabel, \"S1UC-\", \"S1UWT-\", \"S1UT-\", \"S1UWC-\", \"S1UTC-\");\n\n    addUnaryQueueFeatures(features, q0Label, \"Q0WT-\");\n    addUnaryQueueFeatures(features, q1Label, \"Q1WT-\");\n    addUnaryQueueFeatures(features, q2Label, \"Q2WT-\");\n    addUnaryQueueFeatures(features, q3Label, \"Q3WT-\");\n    addUnaryQueueFeatures(features, qP1Label, \"QP1WT-\");\n    addUnaryQueueFeatures(features, qP2Label, \"QP2WT-\");\n\n    // Figure out which are the most recent left and right node\n    // attachments to the heads of the given nodes.  It seems like it\n    // should be more efficient to keep track of this in the state, as\n    // that would have a constant cost per transformation, but it is\n    // actually faster to find it by walking down the tree each time\n    CoreLabel recentL0Label = getRecentDependent(stack, Transition.LEFT, 0);\n    CoreLabel recentR0Label = getRecentDependent(stack, Transition.RIGHT, 0);\n    CoreLabel recentL1Label = getRecentDependent(stack, Transition.LEFT, 1);\n    CoreLabel recentR1Label = getRecentDependent(stack, Transition.RIGHT, 1);\n    addUnaryFeature(features, \"recL0-\", recentL0Label, FeatureComponent.HEADWORD);\n    addUnaryFeature(features, \"recR0-\", recentR0Label, FeatureComponent.HEADWORD);\n    addUnaryFeature(features, \"recL1-\", recentL1Label, FeatureComponent.HEADWORD);\n    addUnaryFeature(features, \"recR1-\", recentR1Label, FeatureComponent.HEADWORD);\n\n    addBinaryFeatures(features, \"S0WS1n-\", \"S0CS1n-\", \"S0WS1W-\", \"S0WS1C-\", \"S0CS1W-\", \"S0CS1C-\", s0Label, s1Label);\n\n    addBinaryFeature(features, \"S0WQ0W-\", s0Label, FeatureComponent.HEADWORD, q0Label, FeatureComponent.HEADWORD);\n    addBinaryFeature(features, \"S0WQ0T-\", s0Label, FeatureComponent.HEADWORD, q0Label, FeatureComponent.HEADTAG);\n    addBinaryFeature(features, \"S0CQ0W-\", s0Label, FeatureComponent.VALUE, q0Label, FeatureComponent.HEADWORD);\n    addBinaryFeature(features, \"S0CQ0T-\", s0Label, FeatureComponent.VALUE, q0Label, FeatureComponent.HEADTAG);\n\n    addBinaryFeature(features, \"Q0WQ1W-\", q0Label, FeatureComponent.HEADWORD, q1Label, FeatureComponent.HEADWORD);\n    addBinaryFeature(features, \"Q0WQ1T-\", q0Label, FeatureComponent.HEADWORD, q1Label, FeatureComponent.HEADTAG);\n    addBinaryFeature(features, \"Q0TQ1W-\", q0Label, FeatureComponent.HEADTAG, q1Label, FeatureComponent.HEADWORD);\n    addBinaryFeature(features, \"Q0TQ1T-\", q0Label, FeatureComponent.HEADTAG, q1Label, FeatureComponent.HEADTAG);\n\n    addBinaryFeature(features, \"S1WQ0W-\", s1Label, FeatureComponent.HEADWORD, q0Label, FeatureComponent.HEADWORD);\n    addBinaryFeature(features, \"S1WQ0T-\", s1Label, FeatureComponent.HEADWORD, q0Label, FeatureComponent.HEADTAG);\n    addBinaryFeature(features, \"S1CQ0W-\", s1Label, FeatureComponent.VALUE, q0Label, FeatureComponent.HEADWORD);\n    addBinaryFeature(features, \"S1CQ0T-\", s1Label, FeatureComponent.VALUE, q0Label, FeatureComponent.HEADTAG);\n\n    addTrigramFeature(features, \"S0cS1cS2c-\", s0Label, FeatureComponent.VALUE, s1Label, FeatureComponent.VALUE, s2Label, FeatureComponent.VALUE);\n    addTrigramFeature(features, \"S0wS1cS2c-\", s0Label, FeatureComponent.HEADWORD, s1Label, FeatureComponent.VALUE, s2Label, FeatureComponent.VALUE);\n    addTrigramFeature(features, \"S0cS1wS2c-\", s0Label, FeatureComponent.VALUE, s1Label, FeatureComponent.HEADWORD, s2Label, FeatureComponent.VALUE);\n    addTrigramFeature(features, \"S0cS1cS2w-\", s0Label, FeatureComponent.VALUE, s1Label, FeatureComponent.VALUE, s2Label, FeatureComponent.HEADWORD);\n    addTrigramFeature(features, \"S0cS1cQ0t-\", s0Label, FeatureComponent.VALUE, s1Label, FeatureComponent.VALUE, q0Label, FeatureComponent.HEADTAG);\n    addTrigramFeature(features, \"S0wS1cQ0t-\", s0Label, FeatureComponent.HEADWORD, s1Label, FeatureComponent.VALUE, q0Label, FeatureComponent.HEADTAG);\n    addTrigramFeature(features, \"S0cS1wQ0t-\", s0Label, FeatureComponent.VALUE, s1Label, FeatureComponent.HEADWORD, q0Label, FeatureComponent.HEADTAG);\n    addTrigramFeature(features, \"S0cS1cQ0w-\", s0Label, FeatureComponent.VALUE, s1Label, FeatureComponent.VALUE, q0Label, FeatureComponent.HEADWORD);\n\n    addPositionFeatures(features, state);\n\n    State.HeadPosition s0Separator = getSeparator(state.separators, 0);\n    State.HeadPosition s1Separator = getSeparator(state.separators, 1);\n    addSeparatorFeatures(features, s0Label, s1Label, s0Separator, s1Separator);\n\n    return features;\n  }","id":16380,"modified_method":"public List<String> featurize(State state) {\n    List<String> features = Generics.newArrayList();\n\n    final TreeShapedStack<Tree> stack = state.stack;\n    final List<Tree> sentence = state.sentence;\n    final int tokenPosition = state.tokenPosition;\n\n    CoreLabel s0Label = getStackLabel(stack, 0); // current top of stack\n    CoreLabel s1Label = getStackLabel(stack, 1); // one previous\n    CoreLabel s2Label = getStackLabel(stack, 2); // two previous\n    CoreLabel s3Label = getStackLabel(stack, 3); // three previous\n\n    CoreLabel s0LLabel = getStackLabel(stack, 0, Transition.LEFT);\n    CoreLabel s0RLabel = getStackLabel(stack, 0, Transition.RIGHT);\n    CoreLabel s0ULabel = getStackLabel(stack, 0, Transition.UNARY);\n\n    CoreLabel s0LLLabel = getStackLabel(stack, 0, Transition.LEFT, Transition.LEFT);\n    CoreLabel s0LRLabel = getStackLabel(stack, 0, Transition.LEFT, Transition.RIGHT);\n    CoreLabel s0LULabel = getStackLabel(stack, 0, Transition.LEFT, Transition.UNARY);\n\n    CoreLabel s0RLLabel = getStackLabel(stack, 0, Transition.RIGHT, Transition.LEFT);\n    CoreLabel s0RRLabel = getStackLabel(stack, 0, Transition.RIGHT, Transition.RIGHT);\n    CoreLabel s0RULabel = getStackLabel(stack, 0, Transition.RIGHT, Transition.UNARY);\n\n    CoreLabel s0ULLabel = getStackLabel(stack, 0, Transition.UNARY, Transition.LEFT);\n    CoreLabel s0URLabel = getStackLabel(stack, 0, Transition.UNARY, Transition.RIGHT);\n    CoreLabel s0UULabel = getStackLabel(stack, 0, Transition.UNARY, Transition.UNARY);\n\n    CoreLabel s1LLabel = getStackLabel(stack, 1, Transition.LEFT);\n    CoreLabel s1RLabel = getStackLabel(stack, 1, Transition.RIGHT);\n    CoreLabel s1ULabel = getStackLabel(stack, 1, Transition.UNARY);\n\n    CoreLabel q0Label = getQueueLabel(sentence, tokenPosition, 0); // current location in queue\n    CoreLabel q1Label = getQueueLabel(sentence, tokenPosition, 1); // next location in queue\n    CoreLabel q2Label = getQueueLabel(sentence, tokenPosition, 2); // two locations later in queue\n    CoreLabel q3Label = getQueueLabel(sentence, tokenPosition, 3); // three locations later in queue\n    CoreLabel qP1Label = getQueueLabel(sentence, tokenPosition, -1); // previous location in queue\n    CoreLabel qP2Label = getQueueLabel(sentence, tokenPosition, -2); // two locations prior in queue\n\n    addUnaryStackFeatures(features, s0Label, \"S0C-\", \"S0WT-\", \"S0T-\", \"S0WC-\", \"S0TC-\");\n    addUnaryStackFeatures(features, s1Label, \"S1C-\", \"S1WT-\", \"S1T-\", \"S1WC-\", \"S1TC-\");\n    addUnaryStackFeatures(features, s2Label, \"S2C-\", \"S2WT-\", \"S2T-\", \"S2WC-\", \"S2TC-\");\n    addUnaryStackFeatures(features, s3Label, \"S3C-\", \"S3WT-\", \"S3T-\", \"S3WC-\", \"S3TC-\");\n\n    addUnaryStackFeatures(features, s0LLabel, \"S0LC-\", \"S0LWT-\", \"S0LT-\", \"S0LWC-\", \"S0LTC-\");\n    addUnaryStackFeatures(features, s0RLabel, \"S0RC-\", \"S0RWT-\", \"S0RT-\", \"S0RWC-\", \"S0RTC-\");\n    addUnaryStackFeatures(features, s0ULabel, \"S0UC-\", \"S0UWT-\", \"S0UT-\", \"S0UWC-\", \"S0UTC-\");\n\n    addUnaryStackFeatures(features, s0LLLabel, \"S0LLC-\", \"S0LLWT-\", \"S0LLT-\", \"S0LLWC-\", \"S0LLTC-\");\n    addUnaryStackFeatures(features, s0LRLabel, \"S0LRC-\", \"S0LRWT-\", \"S0LRT-\", \"S0LRWC-\", \"S0LRTC-\");\n    addUnaryStackFeatures(features, s0LULabel, \"S0LUC-\", \"S0LUWT-\", \"S0LUT-\", \"S0LUWC-\", \"S0LUTC-\");\n\n    addUnaryStackFeatures(features, s0RLLabel, \"S0RLC-\", \"S0RLWT-\", \"S0RLT-\", \"S0RLWC-\", \"S0RLTC-\");\n    addUnaryStackFeatures(features, s0RRLabel, \"S0RRC-\", \"S0RRWT-\", \"S0RRT-\", \"S0RRWC-\", \"S0RRTC-\");\n    addUnaryStackFeatures(features, s0RULabel, \"S0RUC-\", \"S0RUWT-\", \"S0RUT-\", \"S0RUWC-\", \"S0RUTC-\");\n\n    addUnaryStackFeatures(features, s0ULLabel, \"S0ULC-\", \"S0ULWT-\", \"S0ULT-\", \"S0ULWC-\", \"S0ULTC-\");\n    addUnaryStackFeatures(features, s0URLabel, \"S0URC-\", \"S0URWT-\", \"S0URT-\", \"S0URWC-\", \"S0URTC-\");\n    addUnaryStackFeatures(features, s0UULabel, \"S0UUC-\", \"S0UUWT-\", \"S0UUT-\", \"S0UUWC-\", \"S0UUTC-\");\n\n    addUnaryStackFeatures(features, s1LLabel, \"S1LC-\", \"S1LWT-\", \"S1LT-\", \"S1LWC-\", \"S1LTC-\");\n    addUnaryStackFeatures(features, s1RLabel, \"S1RC-\", \"S1RWT-\", \"S1RT-\", \"S1RWC-\", \"S1RTC-\");\n    addUnaryStackFeatures(features, s1ULabel, \"S1UC-\", \"S1UWT-\", \"S1UT-\", \"S1UWC-\", \"S1UTC-\");\n\n    addUnaryQueueFeatures(features, q0Label, \"Q0WT-\");\n    addUnaryQueueFeatures(features, q1Label, \"Q1WT-\");\n    addUnaryQueueFeatures(features, q2Label, \"Q2WT-\");\n    addUnaryQueueFeatures(features, q3Label, \"Q3WT-\");\n    addUnaryQueueFeatures(features, qP1Label, \"QP1WT-\");\n    addUnaryQueueFeatures(features, qP2Label, \"QP2WT-\");\n\n    // Figure out which are the most recent left and right node\n    // attachments to the heads of the given nodes.  It seems like it\n    // should be more efficient to keep track of this in the state, as\n    // that would have a constant cost per transformation, but it is\n    // actually faster to find it by walking down the tree each time\n    CoreLabel recentL0Label = getRecentDependent(stack, Transition.LEFT, 0);\n    CoreLabel recentR0Label = getRecentDependent(stack, Transition.RIGHT, 0);\n    CoreLabel recentL1Label = getRecentDependent(stack, Transition.LEFT, 1);\n    CoreLabel recentR1Label = getRecentDependent(stack, Transition.RIGHT, 1);\n    addUnaryFeature(features, \"recL0-\", recentL0Label, FeatureComponent.HEADWORD);\n    addUnaryFeature(features, \"recR0-\", recentR0Label, FeatureComponent.HEADWORD);\n    addUnaryFeature(features, \"recL1-\", recentL1Label, FeatureComponent.HEADWORD);\n    addUnaryFeature(features, \"recR1-\", recentR1Label, FeatureComponent.HEADWORD);\n\n    addBinaryFeature(features, \"S0WS1W-\", s0Label, FeatureComponent.HEADWORD, s1Label, FeatureComponent.HEADWORD);\n    addBinaryFeature(features, \"S0WS1C-\", s0Label, FeatureComponent.HEADWORD, s1Label, FeatureComponent.VALUE);\n    addBinaryFeature(features, \"S0CS1W-\", s0Label, FeatureComponent.VALUE, s1Label, FeatureComponent.HEADWORD);\n    addBinaryFeature(features, \"S0CS1C-\", s0Label, FeatureComponent.VALUE, s1Label, FeatureComponent.VALUE);\n\n    addBinaryFeature(features, \"S0WQ0W-\", s0Label, FeatureComponent.HEADWORD, q0Label, FeatureComponent.HEADWORD);\n    addBinaryFeature(features, \"S0WQ0T-\", s0Label, FeatureComponent.HEADWORD, q0Label, FeatureComponent.HEADTAG);\n    addBinaryFeature(features, \"S0CQ0W-\", s0Label, FeatureComponent.VALUE, q0Label, FeatureComponent.HEADWORD);\n    addBinaryFeature(features, \"S0CQ0T-\", s0Label, FeatureComponent.VALUE, q0Label, FeatureComponent.HEADTAG);\n\n    addBinaryFeature(features, \"Q0WQ1W-\", q0Label, FeatureComponent.HEADWORD, q1Label, FeatureComponent.HEADWORD);\n    addBinaryFeature(features, \"Q0WQ1T-\", q0Label, FeatureComponent.HEADWORD, q1Label, FeatureComponent.HEADTAG);\n    addBinaryFeature(features, \"Q0TQ1W-\", q0Label, FeatureComponent.HEADTAG, q1Label, FeatureComponent.HEADWORD);\n    addBinaryFeature(features, \"Q0TQ1T-\", q0Label, FeatureComponent.HEADTAG, q1Label, FeatureComponent.HEADTAG);\n\n    addBinaryFeature(features, \"S1WQ0W-\", s1Label, FeatureComponent.HEADWORD, q0Label, FeatureComponent.HEADWORD);\n    addBinaryFeature(features, \"S1WQ0T-\", s1Label, FeatureComponent.HEADWORD, q0Label, FeatureComponent.HEADTAG);\n    addBinaryFeature(features, \"S1CQ0W-\", s1Label, FeatureComponent.VALUE, q0Label, FeatureComponent.HEADWORD);\n    addBinaryFeature(features, \"S1CQ0T-\", s1Label, FeatureComponent.VALUE, q0Label, FeatureComponent.HEADTAG);\n\n    addTrigramFeature(features, \"S0cS1cS2c-\", s0Label, FeatureComponent.VALUE, s1Label, FeatureComponent.VALUE, s2Label, FeatureComponent.VALUE);\n    addTrigramFeature(features, \"S0wS1cS2c-\", s0Label, FeatureComponent.HEADWORD, s1Label, FeatureComponent.VALUE, s2Label, FeatureComponent.VALUE);\n    addTrigramFeature(features, \"S0cS1wS2c-\", s0Label, FeatureComponent.VALUE, s1Label, FeatureComponent.HEADWORD, s2Label, FeatureComponent.VALUE);\n    addTrigramFeature(features, \"S0cS1cS2w-\", s0Label, FeatureComponent.VALUE, s1Label, FeatureComponent.VALUE, s2Label, FeatureComponent.HEADWORD);\n    addTrigramFeature(features, \"S0cS1cQ0t-\", s0Label, FeatureComponent.VALUE, s1Label, FeatureComponent.VALUE, q0Label, FeatureComponent.HEADTAG);\n    addTrigramFeature(features, \"S0wS1cQ0t-\", s0Label, FeatureComponent.HEADWORD, s1Label, FeatureComponent.VALUE, q0Label, FeatureComponent.HEADTAG);\n    addTrigramFeature(features, \"S0cS1wQ0t-\", s0Label, FeatureComponent.VALUE, s1Label, FeatureComponent.HEADWORD, q0Label, FeatureComponent.HEADTAG);\n    addTrigramFeature(features, \"S0cS1cQ0w-\", s0Label, FeatureComponent.VALUE, s1Label, FeatureComponent.VALUE, q0Label, FeatureComponent.HEADWORD);\n\n    addPositionFeatures(features, state);\n\n    State.HeadPosition s0Separator = getSeparator(state.separators, 0);\n    State.HeadPosition s1Separator = getSeparator(state.separators, 1);\n    addSeparatorFeatures(features, s0Label, s1Label, s0Separator, s1Separator);\n\n    return features;\n  }","commit_id":"b975c8a25210865bde36abf2a0b01e4be400ca48","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"public static void addUnaryQueueFeatures(List<String> features, CoreLabel label, String wtFeature) {\n    if (label == null) {\n      features.add(wtFeature + NULL);\n      return;\n    }\n    String tag = label.get(TreeCoreAnnotations.HeadTagAnnotation.class).label().value();\n    String word = label.get(TreeCoreAnnotations.HeadWordAnnotation.class).label().value();\n\n    // TODO: check to see if this is slow because of the string concat\n    features.add(wtFeature + tag + \"-\" + word);\n  }","id":16381,"modified_method":"public static void addUnaryQueueFeatures(List<String> features, CoreLabel label, String wtFeature) {\n    String tag = (label == null) ? NULL : label.get(TreeCoreAnnotations.HeadTagAnnotation.class).label().value();\n    String word = (label == null) ? NULL : label.get(TreeCoreAnnotations.HeadWordAnnotation.class).label().value();\n\n    // TODO: check to see if this is slow because of the string concat\n    features.add(wtFeature + tag + \"-\" + word);\n  }","commit_id":"b975c8a25210865bde36abf2a0b01e4be400ca48","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"public static void main(String[] args) {\n    List<String> remainingArgs = Generics.newArrayList();\n\n    String trainTreebankPath = null;\n    FileFilter trainTreebankFilter = null;\n    String testTreebankPath = null;\n    FileFilter testTreebankFilter = null;\n    String devTreebankPath = null;\n    FileFilter devTreebankFilter = null;\n\n    String serializedPath = null;\n\n    String tlppClass = null;\n\n    for (int argIndex = 0; argIndex < args.length; ) {\n      if (args[argIndex].equalsIgnoreCase(\"-trainTreebank\")) {\n        Pair<String, FileFilter> treebankDescription = ArgUtils.getTreebankDescription(args, argIndex, \"-trainTreebank\");\n        argIndex = argIndex + ArgUtils.numSubArgs(args, argIndex) + 1;\n        trainTreebankPath = treebankDescription.first();\n        trainTreebankFilter = treebankDescription.second();\n      } else if (args[argIndex].equalsIgnoreCase(\"-testTreebank\")) {\n        Pair<String, FileFilter> treebankDescription = ArgUtils.getTreebankDescription(args, argIndex, \"-testTreebank\");\n        argIndex = argIndex + ArgUtils.numSubArgs(args, argIndex) + 1;\n        testTreebankPath = treebankDescription.first();\n        testTreebankFilter = treebankDescription.second();\n      } else if (args[argIndex].equalsIgnoreCase(\"-devTreebank\")) {\n        Pair<String, FileFilter> treebankDescription = ArgUtils.getTreebankDescription(args, argIndex, \"-devTreebank\");\n        argIndex = argIndex + ArgUtils.numSubArgs(args, argIndex) + 1;\n        devTreebankPath = treebankDescription.first();\n        devTreebankFilter = treebankDescription.second();\n      } else if (args[argIndex].equalsIgnoreCase(\"-serializedPath\")) {\n        serializedPath = args[argIndex + 1];\n        argIndex += 2;\n      } else if (args[argIndex].equalsIgnoreCase(\"-tlpp\")) {\n        tlppClass = args[argIndex] + 1;\n        argIndex += 2;\n      } else {\n        remainingArgs.add(args[argIndex]);\n        ++argIndex;\n      }\n    }\n\n    String[] newArgs = new String[remainingArgs.size()];\n    newArgs = remainingArgs.toArray(newArgs);\n\n    if (trainTreebankPath == null && serializedPath == null) {\n      throw new IllegalArgumentException(\"Must specify a treebank to train from with -trainTreebank\");\n    }\n\n    ShiftReduceParser parser = null;\n\n    if (trainTreebankPath != null) {\n      ShiftReduceOptions op = buildTrainingOptions(tlppClass, newArgs);\n      parser = new ShiftReduceParser(op);\n      List<Tree> binarizedTrees = parser.readBinarizedTreebank(trainTreebankPath, trainTreebankFilter);\n\n      Index<Transition> transitionIndex = parser.transitionIndex;\n\n      MaxentTagger tagger = null;\n      if (op.testOptions.preTag) {\n        Timing retagTimer = new Timing();\n        tagger = new MaxentTagger(op.testOptions.taggerSerializedFile);\n        redoTags(binarizedTrees, tagger, op.trainOptions.trainingThreads);\n        retagTimer.done(\"Retagging\");\n      }\n      List<List<Transition>> transitionLists = parser.createTransitionSequences(binarizedTrees);\n      for (List<Transition> transitions : transitionLists) {\n        transitionIndex.addAll(transitions);\n      }\n\n      FeatureFactory featureFactory = parser.featureFactory;\n      Index<String> featureIndex = new HashIndex<String>();\n      for (int i = 0; i < binarizedTrees.size(); ++i) {\n        Tree tree = binarizedTrees.get(i);\n        List<Transition> transitions = transitionLists.get(i);\n        State state = ShiftReduceParser.initialStateFromGoldTagTree(tree);\n        for (Transition transition : transitions) {\n          featureIndex.addAll(featureFactory.featurize(state));\n          state = transition.apply(state);\n        }\n      }\n\n      Map<String, List<ScoredObject<Integer>>> featureWeights = parser.featureWeights;\n      for (String feature : featureIndex) {\n        List<ScoredObject<Integer>> weights = Generics.newArrayList();\n        featureWeights.put(feature, weights);\n      }\n\n      System.err.println(\"Number of unique features: \" + featureWeights.size());\n      System.err.println(\"Number of transitions: \" + transitionIndex.size());\n      System.err.println(\"Total number of weights: \" + (featureWeights.size() * transitionIndex.size()));\n      System.err.println(\"(Note: if training with a beam, additional features may be added for incorrect states)\");\n      \n      Random random = new Random(parser.op.trainOptions.randomSeed);\n\n      Treebank devTreebank = null;\n      if (devTreebankPath != null) {\n        devTreebank = parser.readTreebank(devTreebankPath, devTreebankFilter);\n      }\n\n      double bestScore = 0.0;\n      int bestIteration = 0;\n      PriorityQueue<ScoredObject<ShiftReduceParser>> bestModels = null;\n      if (parser.op.averagedModels > 0) {\n        bestModels = new PriorityQueue<ScoredObject<ShiftReduceParser>>(parser.op.averagedModels + 1, ScoredComparator.ASCENDING_COMPARATOR);\n      }\n\n      List<Integer> indices = Generics.newArrayList();\n      for (int i = 0; i < binarizedTrees.size(); ++i) {\n        indices.add(i);\n      }\n\n      for (int iteration = 1; iteration <= parser.op.trainOptions.trainingIterations; ++iteration) {\n        Timing trainingTimer = new Timing();\n        int numCorrect = 0;\n        int numWrong = 0;\n        Collections.shuffle(indices, random);\n        for (int i = 0; i < indices.size(); ++i) {\n          int index = indices.get(i);\n          Tree tree = binarizedTrees.get(index);\n          List<Transition> transitions = transitionLists.get(index);\n          State state = ShiftReduceParser.initialStateFromGoldTagTree(tree);\n          for (Transition transition : transitions) {\n            int transitionNum = transitionIndex.indexOf(transition);\n            List<String> features = featureFactory.featurize(state);\n            int predictedNum = parser.findHighestScoringTransition(state, features, false).object();\n            Transition predicted = transitionIndex.get(predictedNum);\n            if (transitionNum == predictedNum) {\n              numCorrect++;\n            } else {\n              numWrong++;\n              for (String feature : features) {\n                List<ScoredObject<Integer>> weights = featureWeights.get(feature);\n                // TODO: allow weighted features, weighted training, etc\n                ShiftReduceParser.updateWeight(weights, transitionNum, 1.0);\n                ShiftReduceParser.updateWeight(weights, predictedNum, -1.0);\n              }\n            }\n            state = transition.apply(state);\n          }\n        }\n        trainingTimer.done(\"Iteration \" + iteration);\n        System.err.println(\"While training, got \" + numCorrect + \" transitions correct and \" + numWrong + \" transitions wrong\");\n\n\n        double labelF1 = 0.0;\n        if (devTreebank != null) {\n          EvaluateTreebank evaluator = new EvaluateTreebank(parser.op, null, parser, tagger);\n          evaluator.testOnTreebank(devTreebank);\n          labelF1 = evaluator.getLBScore();\n          System.err.println(\"Label F1 after \" + iteration + \" iterations: \" + labelF1);\n\n          if (labelF1 > bestScore) {\n            System.err.println(\"New best dev score (previous best \" + bestScore + \")\");\n            bestScore = labelF1;\n            bestIteration = iteration;\n          } else {\n            System.err.println(\"Failed to improve for \" + (iteration - bestIteration) + \" iteration(s) on previous best score of \" + bestScore);\n            if (op.trainOptions.stalledIterationLimit > 0 && (iteration - bestIteration >= op.trainOptions.stalledIterationLimit)) {\n              System.err.println(\"Failed to improve for too long, stopping training\");\n              break;\n            }\n          }\n\n          if (bestModels != null) {\n            bestModels.add(new ScoredObject<ShiftReduceParser>(parser.deepCopy(), labelF1));\n            if (bestModels.size() > parser.op.averagedModels) {\n              bestModels.poll();\n            }\n          }\n        }\n        if (serializedPath != null && parser.op.trainOptions.debugOutputFrequency > 0) {\n          String tempName = serializedPath.substring(0, serializedPath.length() - 7) + \"-\" + FILENAME.format(iteration) + \"-\" + NF.format(labelF1) + \".ser.gz\";\n          try {\n            IOUtils.writeObjectToFile(parser, tempName);\n          } catch (IOException e) {\n            throw new RuntimeIOException(e);\n          }\n        }\n      }\n\n      if (bestModels != null) {\n        if (op.cvAveragedModels && devTreebank != null) {\n          List<ScoredObject<ShiftReduceParser>> models = Generics.newArrayList();\n          while (bestModels.size() > 0) {\n            models.add(bestModels.poll());\n          }\n          Collections.reverse(models);\n          double bestF1 = 0.0;\n          int bestSize = 0;\n          for (int i = 1; i < models.size(); ++i) {\n            System.err.println(\"Testing with \" + i + \" models averaged together\");\n            parser = averageModels(models.subList(0, i));\n            EvaluateTreebank evaluator = new EvaluateTreebank(parser.op, null, parser);\n            evaluator.testOnTreebank(devTreebank);\n            double labelF1 = evaluator.getLBScore();\n            System.err.println(\"Label F1 for \" + i + \" models: \" + labelF1);\n            if (labelF1 > bestF1) {\n              bestF1 = labelF1;\n              bestSize = i;\n            }\n          }\n          parser = averageModels(models.subList(0, bestSize));\n        } else {\n          parser = ShiftReduceParser.averageModels(bestModels);\n        }\n      }\n\n      parser.condenseFeatures();\n\n      if (serializedPath != null) {\n        try {\n          IOUtils.writeObjectToFile(parser, serializedPath);\n        } catch (IOException e) {\n          throw new RuntimeIOException(e);\n        }\n      }\n    }\n\n    if (serializedPath != null && parser == null) {\n      try {\n        parser = IOUtils.readObjectFromFile(serializedPath);\n        parser.op.setOptions(\"-forceTags\");\n      } catch (IOException e) {\n        throw new RuntimeIOException(e);\n      } catch (ClassNotFoundException e) {\n        throw new RuntimeIOException(e);\n      }\n      parser.op.setOptions(newArgs);\n    }\n\n    //parser.outputStats();\n\n    if (testTreebankPath != null) {\n      System.err.println(\"Loading test trees from \" + testTreebankPath);\n      Treebank testTreebank = parser.op.tlpParams.memoryTreebank();\n      testTreebank.loadPath(testTreebankPath, testTreebankFilter);\n      System.err.println(\"Loaded \" + testTreebank.size() + \" trees\");\n\n      EvaluateTreebank evaluator = new EvaluateTreebank(parser.op, null, parser);\n      evaluator.testOnTreebank(testTreebank);\n\n      // System.err.println(\"Input tree: \" + tree);\n      // System.err.println(\"Debinarized tree: \" + query.getBestParse());\n      // System.err.println(\"Parsed binarized tree: \" + query.getBestBinarizedParse());\n      // System.err.println(\"Predicted transition sequence: \" + query.getBestTransitionSequence());\n    }\n  }","id":16382,"modified_method":"public static void main(String[] args) {\n    List<String> remainingArgs = Generics.newArrayList();\n\n    String trainTreebankPath = null;\n    FileFilter trainTreebankFilter = null;\n    String testTreebankPath = null;\n    FileFilter testTreebankFilter = null;\n    String devTreebankPath = null;\n    FileFilter devTreebankFilter = null;\n\n    String serializedPath = null;\n\n    String tlppClass = null;\n\n    for (int argIndex = 0; argIndex < args.length; ) {\n      if (args[argIndex].equalsIgnoreCase(\"-trainTreebank\")) {\n        Pair<String, FileFilter> treebankDescription = ArgUtils.getTreebankDescription(args, argIndex, \"-trainTreebank\");\n        argIndex = argIndex + ArgUtils.numSubArgs(args, argIndex) + 1;\n        trainTreebankPath = treebankDescription.first();\n        trainTreebankFilter = treebankDescription.second();\n      } else if (args[argIndex].equalsIgnoreCase(\"-testTreebank\")) {\n        Pair<String, FileFilter> treebankDescription = ArgUtils.getTreebankDescription(args, argIndex, \"-testTreebank\");\n        argIndex = argIndex + ArgUtils.numSubArgs(args, argIndex) + 1;\n        testTreebankPath = treebankDescription.first();\n        testTreebankFilter = treebankDescription.second();\n      } else if (args[argIndex].equalsIgnoreCase(\"-devTreebank\")) {\n        Pair<String, FileFilter> treebankDescription = ArgUtils.getTreebankDescription(args, argIndex, \"-devTreebank\");\n        argIndex = argIndex + ArgUtils.numSubArgs(args, argIndex) + 1;\n        devTreebankPath = treebankDescription.first();\n        devTreebankFilter = treebankDescription.second();\n      } else if (args[argIndex].equalsIgnoreCase(\"-serializedPath\")) {\n        serializedPath = args[argIndex + 1];\n        argIndex += 2;\n      } else if (args[argIndex].equalsIgnoreCase(\"-tlpp\")) {\n        tlppClass = args[argIndex] + 1;\n        argIndex += 2;\n      } else {\n        remainingArgs.add(args[argIndex]);\n        ++argIndex;\n      }\n    }\n\n    String[] newArgs = new String[remainingArgs.size()];\n    newArgs = remainingArgs.toArray(newArgs);\n\n    if (trainTreebankPath == null && serializedPath == null) {\n      throw new IllegalArgumentException(\"Must specify a treebank to train from with -trainTreebank\");\n    }\n\n    ShiftReduceParser parser = null;\n\n    if (trainTreebankPath != null) {\n      ShiftReduceOptions op = buildTrainingOptions(tlppClass, newArgs);\n      parser = new ShiftReduceParser(op);\n      List<Tree> binarizedTrees = parser.readBinarizedTreebank(trainTreebankPath, trainTreebankFilter);\n\n      Index<Transition> transitionIndex = parser.transitionIndex;\n\n      MaxentTagger tagger = null;\n      if (op.testOptions.preTag) {\n        Timing retagTimer = new Timing();\n        tagger = new MaxentTagger(op.testOptions.taggerSerializedFile);\n        redoTags(binarizedTrees, tagger, op.trainOptions.trainingThreads);\n        retagTimer.done(\"Retagging\");\n      }\n\n      Timing transitionTimer = new Timing();\n      List<List<Transition>> transitionLists = parser.createTransitionSequences(binarizedTrees);\n      for (List<Transition> transitions : transitionLists) {\n        transitionIndex.addAll(transitions);\n      }\n      transitionTimer.done(\"Converting trees into transition lists\");\n\n      Timing featureTimer = new Timing();\n      FeatureFactory featureFactory = parser.featureFactory;\n      Index<String> featureIndex = new HashIndex<String>();\n      for (int i = 0; i < binarizedTrees.size(); ++i) {\n        Tree tree = binarizedTrees.get(i);\n        List<Transition> transitions = transitionLists.get(i);\n        State state = ShiftReduceParser.initialStateFromGoldTagTree(tree);\n        for (Transition transition : transitions) {\n          featureIndex.addAll(featureFactory.featurize(state));\n          state = transition.apply(state);\n        }\n      }\n      featureTimer.done(\"Building an initial index of feature types\");\n\n      Map<String, List<ScoredObject<Integer>>> featureWeights = parser.featureWeights;\n      for (String feature : featureIndex) {\n        List<ScoredObject<Integer>> weights = Generics.newArrayList();\n        featureWeights.put(feature, weights);\n      }\n\n      System.err.println(\"Number of unique features: \" + featureWeights.size());\n      System.err.println(\"Number of transitions: \" + transitionIndex.size());\n      System.err.println(\"Total number of weights: \" + (featureWeights.size() * transitionIndex.size()));\n      System.err.println(\"(Note: if training with a beam, additional features may be added for incorrect states)\");\n      \n      Random random = new Random(parser.op.trainOptions.randomSeed);\n\n      Treebank devTreebank = null;\n      if (devTreebankPath != null) {\n        devTreebank = parser.readTreebank(devTreebankPath, devTreebankFilter);\n      }\n\n      double bestScore = 0.0;\n      int bestIteration = 0;\n      PriorityQueue<ScoredObject<ShiftReduceParser>> bestModels = null;\n      if (parser.op.averagedModels > 0) {\n        bestModels = new PriorityQueue<ScoredObject<ShiftReduceParser>>(parser.op.averagedModels + 1, ScoredComparator.ASCENDING_COMPARATOR);\n      }\n\n      List<Integer> indices = Generics.newArrayList();\n      for (int i = 0; i < binarizedTrees.size(); ++i) {\n        indices.add(i);\n      }\n\n      for (int iteration = 1; iteration <= parser.op.trainOptions.trainingIterations; ++iteration) {\n        Timing trainingTimer = new Timing();\n        int numCorrect = 0;\n        int numWrong = 0;\n        Collections.shuffle(indices, random);\n        for (int i = 0; i < indices.size(); ++i) {\n          int index = indices.get(i);\n          Tree tree = binarizedTrees.get(index);\n          List<Transition> transitions = transitionLists.get(index);\n          State state = ShiftReduceParser.initialStateFromGoldTagTree(tree);\n          for (Transition transition : transitions) {\n            int transitionNum = transitionIndex.indexOf(transition);\n            List<String> features = featureFactory.featurize(state);\n            int predictedNum = parser.findHighestScoringTransition(state, features, false).object();\n            Transition predicted = transitionIndex.get(predictedNum);\n            if (transitionNum == predictedNum) {\n              numCorrect++;\n            } else {\n              numWrong++;\n              for (String feature : features) {\n                List<ScoredObject<Integer>> weights = featureWeights.get(feature);\n                // TODO: allow weighted features, weighted training, etc\n                ShiftReduceParser.updateWeight(weights, transitionNum, 1.0);\n                ShiftReduceParser.updateWeight(weights, predictedNum, -1.0);\n              }\n            }\n            state = transition.apply(state);\n          }\n        }\n        trainingTimer.done(\"Iteration \" + iteration);\n        System.err.println(\"While training, got \" + numCorrect + \" transitions correct and \" + numWrong + \" transitions wrong\");\n\n\n        double labelF1 = 0.0;\n        if (devTreebank != null) {\n          EvaluateTreebank evaluator = new EvaluateTreebank(parser.op, null, parser, tagger);\n          evaluator.testOnTreebank(devTreebank);\n          labelF1 = evaluator.getLBScore();\n          System.err.println(\"Label F1 after \" + iteration + \" iterations: \" + labelF1);\n\n          if (labelF1 > bestScore) {\n            System.err.println(\"New best dev score (previous best \" + bestScore + \")\");\n            bestScore = labelF1;\n            bestIteration = iteration;\n          } else {\n            System.err.println(\"Failed to improve for \" + (iteration - bestIteration) + \" iteration(s) on previous best score of \" + bestScore);\n            if (op.trainOptions.stalledIterationLimit > 0 && (iteration - bestIteration >= op.trainOptions.stalledIterationLimit)) {\n              System.err.println(\"Failed to improve for too long, stopping training\");\n              break;\n            }\n          }\n\n          if (bestModels != null) {\n            bestModels.add(new ScoredObject<ShiftReduceParser>(parser.deepCopy(), labelF1));\n            if (bestModels.size() > parser.op.averagedModels) {\n              bestModels.poll();\n            }\n          }\n        }\n        if (serializedPath != null && parser.op.trainOptions.debugOutputFrequency > 0) {\n          String tempName = serializedPath.substring(0, serializedPath.length() - 7) + \"-\" + FILENAME.format(iteration) + \"-\" + NF.format(labelF1) + \".ser.gz\";\n          try {\n            IOUtils.writeObjectToFile(parser, tempName);\n          } catch (IOException e) {\n            throw new RuntimeIOException(e);\n          }\n        }\n      }\n\n      if (bestModels != null) {\n        if (op.cvAveragedModels && devTreebank != null) {\n          List<ScoredObject<ShiftReduceParser>> models = Generics.newArrayList();\n          while (bestModels.size() > 0) {\n            models.add(bestModels.poll());\n          }\n          Collections.reverse(models);\n          double bestF1 = 0.0;\n          int bestSize = 0;\n          for (int i = 1; i < models.size(); ++i) {\n            System.err.println(\"Testing with \" + i + \" models averaged together\");\n            parser = averageModels(models.subList(0, i));\n            EvaluateTreebank evaluator = new EvaluateTreebank(parser.op, null, parser);\n            evaluator.testOnTreebank(devTreebank);\n            double labelF1 = evaluator.getLBScore();\n            System.err.println(\"Label F1 for \" + i + \" models: \" + labelF1);\n            if (labelF1 > bestF1) {\n              bestF1 = labelF1;\n              bestSize = i;\n            }\n          }\n          parser = averageModels(models.subList(0, bestSize));\n        } else {\n          parser = ShiftReduceParser.averageModels(bestModels);\n        }\n      }\n\n      parser.condenseFeatures();\n\n      if (serializedPath != null) {\n        try {\n          IOUtils.writeObjectToFile(parser, serializedPath);\n        } catch (IOException e) {\n          throw new RuntimeIOException(e);\n        }\n      }\n    }\n\n    if (serializedPath != null && parser == null) {\n      try {\n        parser = IOUtils.readObjectFromFile(serializedPath);\n        parser.op.setOptions(\"-forceTags\");\n      } catch (IOException e) {\n        throw new RuntimeIOException(e);\n      } catch (ClassNotFoundException e) {\n        throw new RuntimeIOException(e);\n      }\n      parser.op.setOptions(newArgs);\n    }\n\n    //parser.outputStats();\n\n    if (testTreebankPath != null) {\n      System.err.println(\"Loading test trees from \" + testTreebankPath);\n      Treebank testTreebank = parser.op.tlpParams.memoryTreebank();\n      testTreebank.loadPath(testTreebankPath, testTreebankFilter);\n      System.err.println(\"Loaded \" + testTreebank.size() + \" trees\");\n\n      EvaluateTreebank evaluator = new EvaluateTreebank(parser.op, null, parser);\n      evaluator.testOnTreebank(testTreebank);\n\n      // System.err.println(\"Input tree: \" + tree);\n      // System.err.println(\"Debinarized tree: \" + query.getBestParse());\n      // System.err.println(\"Parsed binarized tree: \" + query.getBestBinarizedParse());\n      // System.err.println(\"Predicted transition sequence: \" + query.getBestTransitionSequence());\n    }\n  }","commit_id":"b975c8a25210865bde36abf2a0b01e4be400ca48","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"public static void addUnaryQueueFeatures(List<String> features, CoreLabel label, String wtFeature) {\n    if (label == null) {\n      features.add(wtFeature + NULL);\n      return;\n    }\n    String tag = label.get(TreeCoreAnnotations.HeadTagAnnotation.class).label().value();\n    String word = label.get(TreeCoreAnnotations.HeadWordAnnotation.class).label().value();\n\n    // TODO: check to see if this is slow because of the string concat\n    features.add(wtFeature + tag + \"-\" + word);\n  }","id":16383,"modified_method":"public static void addUnaryQueueFeatures(List<String> features, CoreLabel label, String wtFeature) {\n    String tag = (label == null) ? NULL : label.get(TreeCoreAnnotations.HeadTagAnnotation.class).label().value();\n    String word = (label == null) ? NULL : label.get(TreeCoreAnnotations.HeadWordAnnotation.class).label().value();\n\n    // TODO: check to see if this is slow because of the string concat\n    features.add(wtFeature + tag + \"-\" + word);\n  }","commit_id":"c1644324e6cb480fb438f243f12cda1445da05cf","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"public List<String> featurize(State state) {\n    List<String> features = Generics.newArrayList();\n\n    final TreeShapedStack<Tree> stack = state.stack;\n    final List<Tree> sentence = state.sentence;\n    final int tokenPosition = state.tokenPosition;\n\n    CoreLabel s0Label = getStackLabel(stack, 0); // current top of stack\n    CoreLabel s1Label = getStackLabel(stack, 1); // one previous\n    CoreLabel s2Label = getStackLabel(stack, 2); // two previous\n    CoreLabel s3Label = getStackLabel(stack, 3); // three previous\n\n    CoreLabel s0LLabel = getStackLabel(stack, 0, Transition.LEFT);\n    CoreLabel s0RLabel = getStackLabel(stack, 0, Transition.RIGHT);\n    CoreLabel s0ULabel = getStackLabel(stack, 0, Transition.UNARY);\n\n    CoreLabel s0LLLabel = getStackLabel(stack, 0, Transition.LEFT, Transition.LEFT);\n    CoreLabel s0LRLabel = getStackLabel(stack, 0, Transition.LEFT, Transition.RIGHT);\n    CoreLabel s0LULabel = getStackLabel(stack, 0, Transition.LEFT, Transition.UNARY);\n\n    CoreLabel s0RLLabel = getStackLabel(stack, 0, Transition.RIGHT, Transition.LEFT);\n    CoreLabel s0RRLabel = getStackLabel(stack, 0, Transition.RIGHT, Transition.RIGHT);\n    CoreLabel s0RULabel = getStackLabel(stack, 0, Transition.RIGHT, Transition.UNARY);\n\n    CoreLabel s0ULLabel = getStackLabel(stack, 0, Transition.UNARY, Transition.LEFT);\n    CoreLabel s0URLabel = getStackLabel(stack, 0, Transition.UNARY, Transition.RIGHT);\n    CoreLabel s0UULabel = getStackLabel(stack, 0, Transition.UNARY, Transition.UNARY);\n\n    CoreLabel s1LLabel = getStackLabel(stack, 1, Transition.LEFT);\n    CoreLabel s1RLabel = getStackLabel(stack, 1, Transition.RIGHT);\n    CoreLabel s1ULabel = getStackLabel(stack, 1, Transition.UNARY);\n\n    CoreLabel q0Label = getQueueLabel(sentence, tokenPosition, 0); // current location in queue\n    CoreLabel q1Label = getQueueLabel(sentence, tokenPosition, 1); // next location in queue\n    CoreLabel q2Label = getQueueLabel(sentence, tokenPosition, 2); // two locations later in queue\n    CoreLabel q3Label = getQueueLabel(sentence, tokenPosition, 3); // three locations later in queue\n    CoreLabel qP1Label = getQueueLabel(sentence, tokenPosition, -1); // previous location in queue\n    CoreLabel qP2Label = getQueueLabel(sentence, tokenPosition, -2); // two locations prior in queue\n\n    addUnaryStackFeatures(features, s0Label, \"S0C-\", \"S0WT-\", \"S0T-\", \"S0WC-\", \"S0TC-\");\n    addUnaryStackFeatures(features, s1Label, \"S1C-\", \"S1WT-\", \"S1T-\", \"S1WC-\", \"S1TC-\");\n    addUnaryStackFeatures(features, s2Label, \"S2C-\", \"S2WT-\", \"S2T-\", \"S2WC-\", \"S2TC-\");\n    addUnaryStackFeatures(features, s3Label, \"S3C-\", \"S3WT-\", \"S3T-\", \"S3WC-\", \"S3TC-\");\n\n    addUnaryStackFeatures(features, s0LLabel, \"S0LC-\", \"S0LWT-\", \"S0LT-\", \"S0LWC-\", \"S0LTC-\");\n    addUnaryStackFeatures(features, s0RLabel, \"S0RC-\", \"S0RWT-\", \"S0RT-\", \"S0RWC-\", \"S0RTC-\");\n    addUnaryStackFeatures(features, s0ULabel, \"S0UC-\", \"S0UWT-\", \"S0UT-\", \"S0UWC-\", \"S0UTC-\");\n\n    addUnaryStackFeatures(features, s0LLLabel, \"S0LLC-\", \"S0LLWT-\", \"S0LLT-\", \"S0LLWC-\", \"S0LLTC-\");\n    addUnaryStackFeatures(features, s0LRLabel, \"S0LRC-\", \"S0LRWT-\", \"S0LRT-\", \"S0LRWC-\", \"S0LRTC-\");\n    addUnaryStackFeatures(features, s0LULabel, \"S0LUC-\", \"S0LUWT-\", \"S0LUT-\", \"S0LUWC-\", \"S0LUTC-\");\n\n    addUnaryStackFeatures(features, s0RLLabel, \"S0RLC-\", \"S0RLWT-\", \"S0RLT-\", \"S0RLWC-\", \"S0RLTC-\");\n    addUnaryStackFeatures(features, s0RRLabel, \"S0RRC-\", \"S0RRWT-\", \"S0RRT-\", \"S0RRWC-\", \"S0RRTC-\");\n    addUnaryStackFeatures(features, s0RULabel, \"S0RUC-\", \"S0RUWT-\", \"S0RUT-\", \"S0RUWC-\", \"S0RUTC-\");\n\n    addUnaryStackFeatures(features, s0ULLabel, \"S0ULC-\", \"S0ULWT-\", \"S0ULT-\", \"S0ULWC-\", \"S0ULTC-\");\n    addUnaryStackFeatures(features, s0URLabel, \"S0URC-\", \"S0URWT-\", \"S0URT-\", \"S0URWC-\", \"S0URTC-\");\n    addUnaryStackFeatures(features, s0UULabel, \"S0UUC-\", \"S0UUWT-\", \"S0UUT-\", \"S0UUWC-\", \"S0UUTC-\");\n\n    addUnaryStackFeatures(features, s1LLabel, \"S1LC-\", \"S1LWT-\", \"S1LT-\", \"S1LWC-\", \"S1LTC-\");\n    addUnaryStackFeatures(features, s1RLabel, \"S1RC-\", \"S1RWT-\", \"S1RT-\", \"S1RWC-\", \"S1RTC-\");\n    addUnaryStackFeatures(features, s1ULabel, \"S1UC-\", \"S1UWT-\", \"S1UT-\", \"S1UWC-\", \"S1UTC-\");\n\n    addUnaryQueueFeatures(features, q0Label, \"Q0WT-\");\n    addUnaryQueueFeatures(features, q1Label, \"Q1WT-\");\n    addUnaryQueueFeatures(features, q2Label, \"Q2WT-\");\n    addUnaryQueueFeatures(features, q3Label, \"Q3WT-\");\n    addUnaryQueueFeatures(features, qP1Label, \"QP1WT-\");\n    addUnaryQueueFeatures(features, qP2Label, \"QP2WT-\");\n\n    // Figure out which are the most recent left and right node\n    // attachments to the heads of the given nodes.  It seems like it\n    // should be more efficient to keep track of this in the state, as\n    // that would have a constant cost per transformation, but it is\n    // actually faster to find it by walking down the tree each time\n    CoreLabel recentL0Label = getRecentDependent(stack, Transition.LEFT, 0);\n    CoreLabel recentR0Label = getRecentDependent(stack, Transition.RIGHT, 0);\n    CoreLabel recentL1Label = getRecentDependent(stack, Transition.LEFT, 1);\n    CoreLabel recentR1Label = getRecentDependent(stack, Transition.RIGHT, 1);\n    addUnaryFeature(features, \"recL0-\", recentL0Label, FeatureComponent.HEADWORD);\n    addUnaryFeature(features, \"recR0-\", recentR0Label, FeatureComponent.HEADWORD);\n    addUnaryFeature(features, \"recL1-\", recentL1Label, FeatureComponent.HEADWORD);\n    addUnaryFeature(features, \"recR1-\", recentR1Label, FeatureComponent.HEADWORD);\n\n    addBinaryFeatures(features, \"S0WS1n-\", \"S0CS1n-\", \"S0WS1W-\", \"S0WS1C-\", \"S0CS1W-\", \"S0CS1C-\", s0Label, s1Label);\n\n    addBinaryFeature(features, \"S0WQ0W-\", s0Label, FeatureComponent.HEADWORD, q0Label, FeatureComponent.HEADWORD);\n    addBinaryFeature(features, \"S0WQ0T-\", s0Label, FeatureComponent.HEADWORD, q0Label, FeatureComponent.HEADTAG);\n    addBinaryFeature(features, \"S0CQ0W-\", s0Label, FeatureComponent.VALUE, q0Label, FeatureComponent.HEADWORD);\n    addBinaryFeature(features, \"S0CQ0T-\", s0Label, FeatureComponent.VALUE, q0Label, FeatureComponent.HEADTAG);\n\n    addBinaryFeature(features, \"Q0WQ1W-\", q0Label, FeatureComponent.HEADWORD, q1Label, FeatureComponent.HEADWORD);\n    addBinaryFeature(features, \"Q0WQ1T-\", q0Label, FeatureComponent.HEADWORD, q1Label, FeatureComponent.HEADTAG);\n    addBinaryFeature(features, \"Q0TQ1W-\", q0Label, FeatureComponent.HEADTAG, q1Label, FeatureComponent.HEADWORD);\n    addBinaryFeature(features, \"Q0TQ1T-\", q0Label, FeatureComponent.HEADTAG, q1Label, FeatureComponent.HEADTAG);\n\n    addBinaryFeature(features, \"S1WQ0W-\", s1Label, FeatureComponent.HEADWORD, q0Label, FeatureComponent.HEADWORD);\n    addBinaryFeature(features, \"S1WQ0T-\", s1Label, FeatureComponent.HEADWORD, q0Label, FeatureComponent.HEADTAG);\n    addBinaryFeature(features, \"S1CQ0W-\", s1Label, FeatureComponent.VALUE, q0Label, FeatureComponent.HEADWORD);\n    addBinaryFeature(features, \"S1CQ0T-\", s1Label, FeatureComponent.VALUE, q0Label, FeatureComponent.HEADTAG);\n\n    addTrigramFeature(features, \"S0cS1cS2c-\", s0Label, FeatureComponent.VALUE, s1Label, FeatureComponent.VALUE, s2Label, FeatureComponent.VALUE);\n    addTrigramFeature(features, \"S0wS1cS2c-\", s0Label, FeatureComponent.HEADWORD, s1Label, FeatureComponent.VALUE, s2Label, FeatureComponent.VALUE);\n    addTrigramFeature(features, \"S0cS1wS2c-\", s0Label, FeatureComponent.VALUE, s1Label, FeatureComponent.HEADWORD, s2Label, FeatureComponent.VALUE);\n    addTrigramFeature(features, \"S0cS1cS2w-\", s0Label, FeatureComponent.VALUE, s1Label, FeatureComponent.VALUE, s2Label, FeatureComponent.HEADWORD);\n    addTrigramFeature(features, \"S0cS1cQ0t-\", s0Label, FeatureComponent.VALUE, s1Label, FeatureComponent.VALUE, q0Label, FeatureComponent.HEADTAG);\n    addTrigramFeature(features, \"S0wS1cQ0t-\", s0Label, FeatureComponent.HEADWORD, s1Label, FeatureComponent.VALUE, q0Label, FeatureComponent.HEADTAG);\n    addTrigramFeature(features, \"S0cS1wQ0t-\", s0Label, FeatureComponent.VALUE, s1Label, FeatureComponent.HEADWORD, q0Label, FeatureComponent.HEADTAG);\n    addTrigramFeature(features, \"S0cS1cQ0w-\", s0Label, FeatureComponent.VALUE, s1Label, FeatureComponent.VALUE, q0Label, FeatureComponent.HEADWORD);\n\n    addPositionFeatures(features, state);\n\n    State.HeadPosition s0Separator = getSeparator(state.separators, 0);\n    State.HeadPosition s1Separator = getSeparator(state.separators, 1);\n    addSeparatorFeatures(features, s0Label, s1Label, s0Separator, s1Separator);\n\n    return features;\n  }","id":16384,"modified_method":"public List<String> featurize(State state) {\n    List<String> features = Generics.newArrayList();\n\n    final TreeShapedStack<Tree> stack = state.stack;\n    final List<Tree> sentence = state.sentence;\n    final int tokenPosition = state.tokenPosition;\n\n    CoreLabel s0Label = getStackLabel(stack, 0); // current top of stack\n    CoreLabel s1Label = getStackLabel(stack, 1); // one previous\n    CoreLabel s2Label = getStackLabel(stack, 2); // two previous\n    CoreLabel s3Label = getStackLabel(stack, 3); // three previous\n\n    CoreLabel s0LLabel = getStackLabel(stack, 0, Transition.LEFT);\n    CoreLabel s0RLabel = getStackLabel(stack, 0, Transition.RIGHT);\n    CoreLabel s0ULabel = getStackLabel(stack, 0, Transition.UNARY);\n\n    CoreLabel s0LLLabel = getStackLabel(stack, 0, Transition.LEFT, Transition.LEFT);\n    CoreLabel s0LRLabel = getStackLabel(stack, 0, Transition.LEFT, Transition.RIGHT);\n    CoreLabel s0LULabel = getStackLabel(stack, 0, Transition.LEFT, Transition.UNARY);\n\n    CoreLabel s0RLLabel = getStackLabel(stack, 0, Transition.RIGHT, Transition.LEFT);\n    CoreLabel s0RRLabel = getStackLabel(stack, 0, Transition.RIGHT, Transition.RIGHT);\n    CoreLabel s0RULabel = getStackLabel(stack, 0, Transition.RIGHT, Transition.UNARY);\n\n    CoreLabel s0ULLabel = getStackLabel(stack, 0, Transition.UNARY, Transition.LEFT);\n    CoreLabel s0URLabel = getStackLabel(stack, 0, Transition.UNARY, Transition.RIGHT);\n    CoreLabel s0UULabel = getStackLabel(stack, 0, Transition.UNARY, Transition.UNARY);\n\n    CoreLabel s1LLabel = getStackLabel(stack, 1, Transition.LEFT);\n    CoreLabel s1RLabel = getStackLabel(stack, 1, Transition.RIGHT);\n    CoreLabel s1ULabel = getStackLabel(stack, 1, Transition.UNARY);\n\n    CoreLabel q0Label = getQueueLabel(sentence, tokenPosition, 0); // current location in queue\n    CoreLabel q1Label = getQueueLabel(sentence, tokenPosition, 1); // next location in queue\n    CoreLabel q2Label = getQueueLabel(sentence, tokenPosition, 2); // two locations later in queue\n    CoreLabel q3Label = getQueueLabel(sentence, tokenPosition, 3); // three locations later in queue\n    CoreLabel qP1Label = getQueueLabel(sentence, tokenPosition, -1); // previous location in queue\n    CoreLabel qP2Label = getQueueLabel(sentence, tokenPosition, -2); // two locations prior in queue\n\n    addUnaryStackFeatures(features, s0Label, \"S0C-\", \"S0WT-\", \"S0T-\", \"S0WC-\", \"S0TC-\");\n    addUnaryStackFeatures(features, s1Label, \"S1C-\", \"S1WT-\", \"S1T-\", \"S1WC-\", \"S1TC-\");\n    addUnaryStackFeatures(features, s2Label, \"S2C-\", \"S2WT-\", \"S2T-\", \"S2WC-\", \"S2TC-\");\n    addUnaryStackFeatures(features, s3Label, \"S3C-\", \"S3WT-\", \"S3T-\", \"S3WC-\", \"S3TC-\");\n\n    addUnaryStackFeatures(features, s0LLabel, \"S0LC-\", \"S0LWT-\", \"S0LT-\", \"S0LWC-\", \"S0LTC-\");\n    addUnaryStackFeatures(features, s0RLabel, \"S0RC-\", \"S0RWT-\", \"S0RT-\", \"S0RWC-\", \"S0RTC-\");\n    addUnaryStackFeatures(features, s0ULabel, \"S0UC-\", \"S0UWT-\", \"S0UT-\", \"S0UWC-\", \"S0UTC-\");\n\n    addUnaryStackFeatures(features, s0LLLabel, \"S0LLC-\", \"S0LLWT-\", \"S0LLT-\", \"S0LLWC-\", \"S0LLTC-\");\n    addUnaryStackFeatures(features, s0LRLabel, \"S0LRC-\", \"S0LRWT-\", \"S0LRT-\", \"S0LRWC-\", \"S0LRTC-\");\n    addUnaryStackFeatures(features, s0LULabel, \"S0LUC-\", \"S0LUWT-\", \"S0LUT-\", \"S0LUWC-\", \"S0LUTC-\");\n\n    addUnaryStackFeatures(features, s0RLLabel, \"S0RLC-\", \"S0RLWT-\", \"S0RLT-\", \"S0RLWC-\", \"S0RLTC-\");\n    addUnaryStackFeatures(features, s0RRLabel, \"S0RRC-\", \"S0RRWT-\", \"S0RRT-\", \"S0RRWC-\", \"S0RRTC-\");\n    addUnaryStackFeatures(features, s0RULabel, \"S0RUC-\", \"S0RUWT-\", \"S0RUT-\", \"S0RUWC-\", \"S0RUTC-\");\n\n    addUnaryStackFeatures(features, s0ULLabel, \"S0ULC-\", \"S0ULWT-\", \"S0ULT-\", \"S0ULWC-\", \"S0ULTC-\");\n    addUnaryStackFeatures(features, s0URLabel, \"S0URC-\", \"S0URWT-\", \"S0URT-\", \"S0URWC-\", \"S0URTC-\");\n    addUnaryStackFeatures(features, s0UULabel, \"S0UUC-\", \"S0UUWT-\", \"S0UUT-\", \"S0UUWC-\", \"S0UUTC-\");\n\n    addUnaryStackFeatures(features, s1LLabel, \"S1LC-\", \"S1LWT-\", \"S1LT-\", \"S1LWC-\", \"S1LTC-\");\n    addUnaryStackFeatures(features, s1RLabel, \"S1RC-\", \"S1RWT-\", \"S1RT-\", \"S1RWC-\", \"S1RTC-\");\n    addUnaryStackFeatures(features, s1ULabel, \"S1UC-\", \"S1UWT-\", \"S1UT-\", \"S1UWC-\", \"S1UTC-\");\n\n    addUnaryQueueFeatures(features, q0Label, \"Q0WT-\");\n    addUnaryQueueFeatures(features, q1Label, \"Q1WT-\");\n    addUnaryQueueFeatures(features, q2Label, \"Q2WT-\");\n    addUnaryQueueFeatures(features, q3Label, \"Q3WT-\");\n    addUnaryQueueFeatures(features, qP1Label, \"QP1WT-\");\n    addUnaryQueueFeatures(features, qP2Label, \"QP2WT-\");\n\n    // Figure out which are the most recent left and right node\n    // attachments to the heads of the given nodes.  It seems like it\n    // should be more efficient to keep track of this in the state, as\n    // that would have a constant cost per transformation, but it is\n    // actually faster to find it by walking down the tree each time\n    CoreLabel recentL0Label = getRecentDependent(stack, Transition.LEFT, 0);\n    CoreLabel recentR0Label = getRecentDependent(stack, Transition.RIGHT, 0);\n    CoreLabel recentL1Label = getRecentDependent(stack, Transition.LEFT, 1);\n    CoreLabel recentR1Label = getRecentDependent(stack, Transition.RIGHT, 1);\n    addUnaryFeature(features, \"recL0-\", recentL0Label, FeatureComponent.HEADWORD);\n    addUnaryFeature(features, \"recR0-\", recentR0Label, FeatureComponent.HEADWORD);\n    addUnaryFeature(features, \"recL1-\", recentL1Label, FeatureComponent.HEADWORD);\n    addUnaryFeature(features, \"recR1-\", recentR1Label, FeatureComponent.HEADWORD);\n\n    addBinaryFeature(features, \"S0WS1W-\", s0Label, FeatureComponent.HEADWORD, s1Label, FeatureComponent.HEADWORD);\n    addBinaryFeature(features, \"S0WS1C-\", s0Label, FeatureComponent.HEADWORD, s1Label, FeatureComponent.VALUE);\n    addBinaryFeature(features, \"S0CS1W-\", s0Label, FeatureComponent.VALUE, s1Label, FeatureComponent.HEADWORD);\n    addBinaryFeature(features, \"S0CS1C-\", s0Label, FeatureComponent.VALUE, s1Label, FeatureComponent.VALUE);\n\n    addBinaryFeature(features, \"S0WQ0W-\", s0Label, FeatureComponent.HEADWORD, q0Label, FeatureComponent.HEADWORD);\n    addBinaryFeature(features, \"S0WQ0T-\", s0Label, FeatureComponent.HEADWORD, q0Label, FeatureComponent.HEADTAG);\n    addBinaryFeature(features, \"S0CQ0W-\", s0Label, FeatureComponent.VALUE, q0Label, FeatureComponent.HEADWORD);\n    addBinaryFeature(features, \"S0CQ0T-\", s0Label, FeatureComponent.VALUE, q0Label, FeatureComponent.HEADTAG);\n\n    addBinaryFeature(features, \"Q0WQ1W-\", q0Label, FeatureComponent.HEADWORD, q1Label, FeatureComponent.HEADWORD);\n    addBinaryFeature(features, \"Q0WQ1T-\", q0Label, FeatureComponent.HEADWORD, q1Label, FeatureComponent.HEADTAG);\n    addBinaryFeature(features, \"Q0TQ1W-\", q0Label, FeatureComponent.HEADTAG, q1Label, FeatureComponent.HEADWORD);\n    addBinaryFeature(features, \"Q0TQ1T-\", q0Label, FeatureComponent.HEADTAG, q1Label, FeatureComponent.HEADTAG);\n\n    addBinaryFeature(features, \"S1WQ0W-\", s1Label, FeatureComponent.HEADWORD, q0Label, FeatureComponent.HEADWORD);\n    addBinaryFeature(features, \"S1WQ0T-\", s1Label, FeatureComponent.HEADWORD, q0Label, FeatureComponent.HEADTAG);\n    addBinaryFeature(features, \"S1CQ0W-\", s1Label, FeatureComponent.VALUE, q0Label, FeatureComponent.HEADWORD);\n    addBinaryFeature(features, \"S1CQ0T-\", s1Label, FeatureComponent.VALUE, q0Label, FeatureComponent.HEADTAG);\n\n    addTrigramFeature(features, \"S0cS1cS2c-\", s0Label, FeatureComponent.VALUE, s1Label, FeatureComponent.VALUE, s2Label, FeatureComponent.VALUE);\n    addTrigramFeature(features, \"S0wS1cS2c-\", s0Label, FeatureComponent.HEADWORD, s1Label, FeatureComponent.VALUE, s2Label, FeatureComponent.VALUE);\n    addTrigramFeature(features, \"S0cS1wS2c-\", s0Label, FeatureComponent.VALUE, s1Label, FeatureComponent.HEADWORD, s2Label, FeatureComponent.VALUE);\n    addTrigramFeature(features, \"S0cS1cS2w-\", s0Label, FeatureComponent.VALUE, s1Label, FeatureComponent.VALUE, s2Label, FeatureComponent.HEADWORD);\n    addTrigramFeature(features, \"S0cS1cQ0t-\", s0Label, FeatureComponent.VALUE, s1Label, FeatureComponent.VALUE, q0Label, FeatureComponent.HEADTAG);\n    addTrigramFeature(features, \"S0wS1cQ0t-\", s0Label, FeatureComponent.HEADWORD, s1Label, FeatureComponent.VALUE, q0Label, FeatureComponent.HEADTAG);\n    addTrigramFeature(features, \"S0cS1wQ0t-\", s0Label, FeatureComponent.VALUE, s1Label, FeatureComponent.HEADWORD, q0Label, FeatureComponent.HEADTAG);\n    addTrigramFeature(features, \"S0cS1cQ0w-\", s0Label, FeatureComponent.VALUE, s1Label, FeatureComponent.VALUE, q0Label, FeatureComponent.HEADWORD);\n\n    addPositionFeatures(features, state);\n\n    State.HeadPosition s0Separator = getSeparator(state.separators, 0);\n    State.HeadPosition s1Separator = getSeparator(state.separators, 1);\n    addSeparatorFeatures(features, s0Label, s1Label, s0Separator, s1Separator);\n\n    return features;\n  }","commit_id":"c1644324e6cb480fb438f243f12cda1445da05cf","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"public static void main(String[] args) {\n    List<String> remainingArgs = Generics.newArrayList();\n\n    String trainTreebankPath = null;\n    FileFilter trainTreebankFilter = null;\n    String testTreebankPath = null;\n    FileFilter testTreebankFilter = null;\n    String devTreebankPath = null;\n    FileFilter devTreebankFilter = null;\n\n    String serializedPath = null;\n\n    String tlppClass = null;\n\n    for (int argIndex = 0; argIndex < args.length; ) {\n      if (args[argIndex].equalsIgnoreCase(\"-trainTreebank\")) {\n        Pair<String, FileFilter> treebankDescription = ArgUtils.getTreebankDescription(args, argIndex, \"-trainTreebank\");\n        argIndex = argIndex + ArgUtils.numSubArgs(args, argIndex) + 1;\n        trainTreebankPath = treebankDescription.first();\n        trainTreebankFilter = treebankDescription.second();\n      } else if (args[argIndex].equalsIgnoreCase(\"-testTreebank\")) {\n        Pair<String, FileFilter> treebankDescription = ArgUtils.getTreebankDescription(args, argIndex, \"-testTreebank\");\n        argIndex = argIndex + ArgUtils.numSubArgs(args, argIndex) + 1;\n        testTreebankPath = treebankDescription.first();\n        testTreebankFilter = treebankDescription.second();\n      } else if (args[argIndex].equalsIgnoreCase(\"-devTreebank\")) {\n        Pair<String, FileFilter> treebankDescription = ArgUtils.getTreebankDescription(args, argIndex, \"-devTreebank\");\n        argIndex = argIndex + ArgUtils.numSubArgs(args, argIndex) + 1;\n        devTreebankPath = treebankDescription.first();\n        devTreebankFilter = treebankDescription.second();\n      } else if (args[argIndex].equalsIgnoreCase(\"-serializedPath\")) {\n        serializedPath = args[argIndex + 1];\n        argIndex += 2;\n      } else if (args[argIndex].equalsIgnoreCase(\"-tlpp\")) {\n        tlppClass = args[argIndex] + 1;\n        argIndex += 2;\n      } else {\n        remainingArgs.add(args[argIndex]);\n        ++argIndex;\n      }\n    }\n\n    String[] newArgs = new String[remainingArgs.size()];\n    newArgs = remainingArgs.toArray(newArgs);\n\n    if (trainTreebankPath == null && serializedPath == null) {\n      throw new IllegalArgumentException(\"Must specify a treebank to train from with -trainTreebank\");\n    }\n\n    ShiftReduceParser parser = null;\n\n    if (trainTreebankPath != null) {\n      ShiftReduceOptions op = buildTrainingOptions(tlppClass, newArgs);\n      parser = new ShiftReduceParser(op);\n      List<Tree> binarizedTrees = parser.readBinarizedTreebank(trainTreebankPath, trainTreebankFilter);\n\n      Index<Transition> transitionIndex = parser.transitionIndex;\n\n      MaxentTagger tagger = null;\n      if (op.testOptions.preTag) {\n        Timing retagTimer = new Timing();\n        tagger = new MaxentTagger(op.testOptions.taggerSerializedFile);\n        redoTags(binarizedTrees, tagger, op.trainOptions.trainingThreads);\n        retagTimer.done(\"Retagging\");\n      }\n      List<List<Transition>> transitionLists = parser.createTransitionSequences(binarizedTrees);\n      for (List<Transition> transitions : transitionLists) {\n        transitionIndex.addAll(transitions);\n      }\n\n      FeatureFactory featureFactory = parser.featureFactory;\n      Index<String> featureIndex = new HashIndex<String>();\n      for (int i = 0; i < binarizedTrees.size(); ++i) {\n        Tree tree = binarizedTrees.get(i);\n        List<Transition> transitions = transitionLists.get(i);\n        State state = ShiftReduceParser.initialStateFromGoldTagTree(tree);\n        for (Transition transition : transitions) {\n          featureIndex.addAll(featureFactory.featurize(state));\n          state = transition.apply(state);\n        }\n      }\n\n      Map<String, List<ScoredObject<Integer>>> featureWeights = parser.featureWeights;\n      for (String feature : featureIndex) {\n        List<ScoredObject<Integer>> weights = Generics.newArrayList();\n        featureWeights.put(feature, weights);\n      }\n\n      System.err.println(\"Number of unique features: \" + featureWeights.size());\n      System.err.println(\"Number of transitions: \" + transitionIndex.size());\n      System.err.println(\"Total number of weights: \" + (featureWeights.size() * transitionIndex.size()));\n      System.err.println(\"(Note: if training with a beam, additional features may be added for incorrect states)\");\n      \n      Random random = new Random(parser.op.trainOptions.randomSeed);\n\n      Treebank devTreebank = null;\n      if (devTreebankPath != null) {\n        devTreebank = parser.readTreebank(devTreebankPath, devTreebankFilter);\n      }\n\n      double bestScore = 0.0;\n      int bestIteration = 0;\n      PriorityQueue<ScoredObject<ShiftReduceParser>> bestModels = null;\n      if (parser.op.averagedModels > 0) {\n        bestModels = new PriorityQueue<ScoredObject<ShiftReduceParser>>(parser.op.averagedModels + 1, ScoredComparator.ASCENDING_COMPARATOR);\n      }\n\n      List<Integer> indices = Generics.newArrayList();\n      for (int i = 0; i < binarizedTrees.size(); ++i) {\n        indices.add(i);\n      }\n\n      for (int iteration = 1; iteration <= parser.op.trainOptions.trainingIterations; ++iteration) {\n        Timing trainingTimer = new Timing();\n        int numCorrect = 0;\n        int numWrong = 0;\n        Collections.shuffle(indices, random);\n        for (int i = 0; i < indices.size(); ++i) {\n          int index = indices.get(i);\n          Tree tree = binarizedTrees.get(index);\n          List<Transition> transitions = transitionLists.get(index);\n          State state = ShiftReduceParser.initialStateFromGoldTagTree(tree);\n          for (Transition transition : transitions) {\n            int transitionNum = transitionIndex.indexOf(transition);\n            List<String> features = featureFactory.featurize(state);\n            int predictedNum = parser.findHighestScoringTransition(state, features, false).object();\n            Transition predicted = transitionIndex.get(predictedNum);\n            if (transitionNum == predictedNum) {\n              numCorrect++;\n            } else {\n              numWrong++;\n              for (String feature : features) {\n                List<ScoredObject<Integer>> weights = featureWeights.get(feature);\n                // TODO: allow weighted features, weighted training, etc\n                ShiftReduceParser.updateWeight(weights, transitionNum, 1.0);\n                ShiftReduceParser.updateWeight(weights, predictedNum, -1.0);\n              }\n            }\n            state = transition.apply(state);\n          }\n        }\n        trainingTimer.done(\"Iteration \" + iteration);\n        System.err.println(\"While training, got \" + numCorrect + \" transitions correct and \" + numWrong + \" transitions wrong\");\n\n\n        double labelF1 = 0.0;\n        if (devTreebank != null) {\n          EvaluateTreebank evaluator = new EvaluateTreebank(parser.op, null, parser, tagger);\n          evaluator.testOnTreebank(devTreebank);\n          labelF1 = evaluator.getLBScore();\n          System.err.println(\"Label F1 after \" + iteration + \" iterations: \" + labelF1);\n\n          if (labelF1 > bestScore) {\n            System.err.println(\"New best dev score (previous best \" + bestScore + \")\");\n            bestScore = labelF1;\n            bestIteration = iteration;\n          } else {\n            System.err.println(\"Failed to improve for \" + (iteration - bestIteration) + \" iteration(s) on previous best score of \" + bestScore);\n            if (op.trainOptions.stalledIterationLimit > 0 && (iteration - bestIteration >= op.trainOptions.stalledIterationLimit)) {\n              System.err.println(\"Failed to improve for too long, stopping training\");\n              break;\n            }\n          }\n\n          if (bestModels != null) {\n            bestModels.add(new ScoredObject<ShiftReduceParser>(parser.deepCopy(), labelF1));\n            if (bestModels.size() > parser.op.averagedModels) {\n              bestModels.poll();\n            }\n          }\n        }\n        if (serializedPath != null && parser.op.trainOptions.debugOutputFrequency > 0) {\n          String tempName = serializedPath.substring(0, serializedPath.length() - 7) + \"-\" + FILENAME.format(iteration) + \"-\" + NF.format(labelF1) + \".ser.gz\";\n          try {\n            IOUtils.writeObjectToFile(parser, tempName);\n          } catch (IOException e) {\n            throw new RuntimeIOException(e);\n          }\n        }\n      }\n\n      if (bestModels != null) {\n        if (op.cvAveragedModels && devTreebank != null) {\n          List<ScoredObject<ShiftReduceParser>> models = Generics.newArrayList();\n          while (bestModels.size() > 0) {\n            models.add(bestModels.poll());\n          }\n          Collections.reverse(models);\n          double bestF1 = 0.0;\n          int bestSize = 0;\n          for (int i = 1; i < models.size(); ++i) {\n            System.err.println(\"Testing with \" + i + \" models averaged together\");\n            parser = averageModels(models.subList(0, i));\n            EvaluateTreebank evaluator = new EvaluateTreebank(parser.op, null, parser);\n            evaluator.testOnTreebank(devTreebank);\n            double labelF1 = evaluator.getLBScore();\n            System.err.println(\"Label F1 for \" + i + \" models: \" + labelF1);\n            if (labelF1 > bestF1) {\n              bestF1 = labelF1;\n              bestSize = i;\n            }\n          }\n          parser = averageModels(models.subList(0, bestSize));\n        } else {\n          parser = ShiftReduceParser.averageModels(bestModels);\n        }\n      }\n\n      parser.condenseFeatures();\n\n      if (serializedPath != null) {\n        try {\n          IOUtils.writeObjectToFile(parser, serializedPath);\n        } catch (IOException e) {\n          throw new RuntimeIOException(e);\n        }\n      }\n    }\n\n    if (serializedPath != null && parser == null) {\n      try {\n        parser = IOUtils.readObjectFromFile(serializedPath);\n        parser.op.setOptions(\"-forceTags\");\n      } catch (IOException e) {\n        throw new RuntimeIOException(e);\n      } catch (ClassNotFoundException e) {\n        throw new RuntimeIOException(e);\n      }\n      parser.op.setOptions(newArgs);\n    }\n\n    //parser.outputStats();\n\n    if (testTreebankPath != null) {\n      System.err.println(\"Loading test trees from \" + testTreebankPath);\n      Treebank testTreebank = parser.op.tlpParams.memoryTreebank();\n      testTreebank.loadPath(testTreebankPath, testTreebankFilter);\n      System.err.println(\"Loaded \" + testTreebank.size() + \" trees\");\n\n      EvaluateTreebank evaluator = new EvaluateTreebank(parser.op, null, parser);\n      evaluator.testOnTreebank(testTreebank);\n\n      // System.err.println(\"Input tree: \" + tree);\n      // System.err.println(\"Debinarized tree: \" + query.getBestParse());\n      // System.err.println(\"Parsed binarized tree: \" + query.getBestBinarizedParse());\n      // System.err.println(\"Predicted transition sequence: \" + query.getBestTransitionSequence());\n    }\n  }","id":16385,"modified_method":"public static void main(String[] args) {\n    List<String> remainingArgs = Generics.newArrayList();\n\n    String trainTreebankPath = null;\n    FileFilter trainTreebankFilter = null;\n    String testTreebankPath = null;\n    FileFilter testTreebankFilter = null;\n    String devTreebankPath = null;\n    FileFilter devTreebankFilter = null;\n\n    String serializedPath = null;\n\n    String tlppClass = null;\n\n    for (int argIndex = 0; argIndex < args.length; ) {\n      if (args[argIndex].equalsIgnoreCase(\"-trainTreebank\")) {\n        Pair<String, FileFilter> treebankDescription = ArgUtils.getTreebankDescription(args, argIndex, \"-trainTreebank\");\n        argIndex = argIndex + ArgUtils.numSubArgs(args, argIndex) + 1;\n        trainTreebankPath = treebankDescription.first();\n        trainTreebankFilter = treebankDescription.second();\n      } else if (args[argIndex].equalsIgnoreCase(\"-testTreebank\")) {\n        Pair<String, FileFilter> treebankDescription = ArgUtils.getTreebankDescription(args, argIndex, \"-testTreebank\");\n        argIndex = argIndex + ArgUtils.numSubArgs(args, argIndex) + 1;\n        testTreebankPath = treebankDescription.first();\n        testTreebankFilter = treebankDescription.second();\n      } else if (args[argIndex].equalsIgnoreCase(\"-devTreebank\")) {\n        Pair<String, FileFilter> treebankDescription = ArgUtils.getTreebankDescription(args, argIndex, \"-devTreebank\");\n        argIndex = argIndex + ArgUtils.numSubArgs(args, argIndex) + 1;\n        devTreebankPath = treebankDescription.first();\n        devTreebankFilter = treebankDescription.second();\n      } else if (args[argIndex].equalsIgnoreCase(\"-serializedPath\")) {\n        serializedPath = args[argIndex + 1];\n        argIndex += 2;\n      } else if (args[argIndex].equalsIgnoreCase(\"-tlpp\")) {\n        tlppClass = args[argIndex] + 1;\n        argIndex += 2;\n      } else {\n        remainingArgs.add(args[argIndex]);\n        ++argIndex;\n      }\n    }\n\n    String[] newArgs = new String[remainingArgs.size()];\n    newArgs = remainingArgs.toArray(newArgs);\n\n    if (trainTreebankPath == null && serializedPath == null) {\n      throw new IllegalArgumentException(\"Must specify a treebank to train from with -trainTreebank\");\n    }\n\n    ShiftReduceParser parser = null;\n\n    if (trainTreebankPath != null) {\n      ShiftReduceOptions op = buildTrainingOptions(tlppClass, newArgs);\n      parser = new ShiftReduceParser(op);\n      List<Tree> binarizedTrees = parser.readBinarizedTreebank(trainTreebankPath, trainTreebankFilter);\n\n      Index<Transition> transitionIndex = parser.transitionIndex;\n\n      MaxentTagger tagger = null;\n      if (op.testOptions.preTag) {\n        Timing retagTimer = new Timing();\n        tagger = new MaxentTagger(op.testOptions.taggerSerializedFile);\n        redoTags(binarizedTrees, tagger, op.trainOptions.trainingThreads);\n        retagTimer.done(\"Retagging\");\n      }\n\n      Timing transitionTimer = new Timing();\n      List<List<Transition>> transitionLists = parser.createTransitionSequences(binarizedTrees);\n      for (List<Transition> transitions : transitionLists) {\n        transitionIndex.addAll(transitions);\n      }\n      transitionTimer.done(\"Converting trees into transition lists\");\n\n      Timing featureTimer = new Timing();\n      FeatureFactory featureFactory = parser.featureFactory;\n      Index<String> featureIndex = new HashIndex<String>();\n      for (int i = 0; i < binarizedTrees.size(); ++i) {\n        Tree tree = binarizedTrees.get(i);\n        List<Transition> transitions = transitionLists.get(i);\n        State state = ShiftReduceParser.initialStateFromGoldTagTree(tree);\n        for (Transition transition : transitions) {\n          featureIndex.addAll(featureFactory.featurize(state));\n          state = transition.apply(state);\n        }\n      }\n      featureTimer.done(\"Building an initial index of feature types\");\n\n      Map<String, List<ScoredObject<Integer>>> featureWeights = parser.featureWeights;\n      for (String feature : featureIndex) {\n        List<ScoredObject<Integer>> weights = Generics.newArrayList();\n        featureWeights.put(feature, weights);\n      }\n\n      System.err.println(\"Number of unique features: \" + featureWeights.size());\n      System.err.println(\"Number of transitions: \" + transitionIndex.size());\n      System.err.println(\"Total number of weights: \" + (featureWeights.size() * transitionIndex.size()));\n      System.err.println(\"(Note: if training with a beam, additional features may be added for incorrect states)\");\n      \n      Random random = new Random(parser.op.trainOptions.randomSeed);\n\n      Treebank devTreebank = null;\n      if (devTreebankPath != null) {\n        devTreebank = parser.readTreebank(devTreebankPath, devTreebankFilter);\n      }\n\n      double bestScore = 0.0;\n      int bestIteration = 0;\n      PriorityQueue<ScoredObject<ShiftReduceParser>> bestModels = null;\n      if (parser.op.averagedModels > 0) {\n        bestModels = new PriorityQueue<ScoredObject<ShiftReduceParser>>(parser.op.averagedModels + 1, ScoredComparator.ASCENDING_COMPARATOR);\n      }\n\n      List<Integer> indices = Generics.newArrayList();\n      for (int i = 0; i < binarizedTrees.size(); ++i) {\n        indices.add(i);\n      }\n\n      for (int iteration = 1; iteration <= parser.op.trainOptions.trainingIterations; ++iteration) {\n        Timing trainingTimer = new Timing();\n        int numCorrect = 0;\n        int numWrong = 0;\n        Collections.shuffle(indices, random);\n        for (int i = 0; i < indices.size(); ++i) {\n          int index = indices.get(i);\n          Tree tree = binarizedTrees.get(index);\n          List<Transition> transitions = transitionLists.get(index);\n          State state = ShiftReduceParser.initialStateFromGoldTagTree(tree);\n          for (Transition transition : transitions) {\n            int transitionNum = transitionIndex.indexOf(transition);\n            List<String> features = featureFactory.featurize(state);\n            int predictedNum = parser.findHighestScoringTransition(state, features, false).object();\n            Transition predicted = transitionIndex.get(predictedNum);\n            if (transitionNum == predictedNum) {\n              numCorrect++;\n            } else {\n              numWrong++;\n              for (String feature : features) {\n                List<ScoredObject<Integer>> weights = featureWeights.get(feature);\n                // TODO: allow weighted features, weighted training, etc\n                ShiftReduceParser.updateWeight(weights, transitionNum, 1.0);\n                ShiftReduceParser.updateWeight(weights, predictedNum, -1.0);\n              }\n            }\n            state = transition.apply(state);\n          }\n        }\n        trainingTimer.done(\"Iteration \" + iteration);\n        System.err.println(\"While training, got \" + numCorrect + \" transitions correct and \" + numWrong + \" transitions wrong\");\n\n\n        double labelF1 = 0.0;\n        if (devTreebank != null) {\n          EvaluateTreebank evaluator = new EvaluateTreebank(parser.op, null, parser, tagger);\n          evaluator.testOnTreebank(devTreebank);\n          labelF1 = evaluator.getLBScore();\n          System.err.println(\"Label F1 after \" + iteration + \" iterations: \" + labelF1);\n\n          if (labelF1 > bestScore) {\n            System.err.println(\"New best dev score (previous best \" + bestScore + \")\");\n            bestScore = labelF1;\n            bestIteration = iteration;\n          } else {\n            System.err.println(\"Failed to improve for \" + (iteration - bestIteration) + \" iteration(s) on previous best score of \" + bestScore);\n            if (op.trainOptions.stalledIterationLimit > 0 && (iteration - bestIteration >= op.trainOptions.stalledIterationLimit)) {\n              System.err.println(\"Failed to improve for too long, stopping training\");\n              break;\n            }\n          }\n\n          if (bestModels != null) {\n            bestModels.add(new ScoredObject<ShiftReduceParser>(parser.deepCopy(), labelF1));\n            if (bestModels.size() > parser.op.averagedModels) {\n              bestModels.poll();\n            }\n          }\n        }\n        if (serializedPath != null && parser.op.trainOptions.debugOutputFrequency > 0) {\n          String tempName = serializedPath.substring(0, serializedPath.length() - 7) + \"-\" + FILENAME.format(iteration) + \"-\" + NF.format(labelF1) + \".ser.gz\";\n          try {\n            IOUtils.writeObjectToFile(parser, tempName);\n          } catch (IOException e) {\n            throw new RuntimeIOException(e);\n          }\n        }\n      }\n\n      if (bestModels != null) {\n        if (op.cvAveragedModels && devTreebank != null) {\n          List<ScoredObject<ShiftReduceParser>> models = Generics.newArrayList();\n          while (bestModels.size() > 0) {\n            models.add(bestModels.poll());\n          }\n          Collections.reverse(models);\n          double bestF1 = 0.0;\n          int bestSize = 0;\n          for (int i = 1; i < models.size(); ++i) {\n            System.err.println(\"Testing with \" + i + \" models averaged together\");\n            parser = averageModels(models.subList(0, i));\n            EvaluateTreebank evaluator = new EvaluateTreebank(parser.op, null, parser);\n            evaluator.testOnTreebank(devTreebank);\n            double labelF1 = evaluator.getLBScore();\n            System.err.println(\"Label F1 for \" + i + \" models: \" + labelF1);\n            if (labelF1 > bestF1) {\n              bestF1 = labelF1;\n              bestSize = i;\n            }\n          }\n          parser = averageModels(models.subList(0, bestSize));\n        } else {\n          parser = ShiftReduceParser.averageModels(bestModels);\n        }\n      }\n\n      parser.condenseFeatures();\n\n      if (serializedPath != null) {\n        try {\n          IOUtils.writeObjectToFile(parser, serializedPath);\n        } catch (IOException e) {\n          throw new RuntimeIOException(e);\n        }\n      }\n    }\n\n    if (serializedPath != null && parser == null) {\n      try {\n        parser = IOUtils.readObjectFromFile(serializedPath);\n        parser.op.setOptions(\"-forceTags\");\n      } catch (IOException e) {\n        throw new RuntimeIOException(e);\n      } catch (ClassNotFoundException e) {\n        throw new RuntimeIOException(e);\n      }\n      parser.op.setOptions(newArgs);\n    }\n\n    //parser.outputStats();\n\n    if (testTreebankPath != null) {\n      System.err.println(\"Loading test trees from \" + testTreebankPath);\n      Treebank testTreebank = parser.op.tlpParams.memoryTreebank();\n      testTreebank.loadPath(testTreebankPath, testTreebankFilter);\n      System.err.println(\"Loaded \" + testTreebank.size() + \" trees\");\n\n      EvaluateTreebank evaluator = new EvaluateTreebank(parser.op, null, parser);\n      evaluator.testOnTreebank(testTreebank);\n\n      // System.err.println(\"Input tree: \" + tree);\n      // System.err.println(\"Debinarized tree: \" + query.getBestParse());\n      // System.err.println(\"Parsed binarized tree: \" + query.getBestBinarizedParse());\n      // System.err.println(\"Predicted transition sequence: \" + query.getBestTransitionSequence());\n    }\n  }","commit_id":"c1644324e6cb480fb438f243f12cda1445da05cf","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"/**\n   * Performs an XSL transformation.\n   * @param xmlDoc a DOM object representing the xml document\n   * @param sslUri the URI of the stylesheet list file (.ssl)\n   * @param out a document handler\n   * @param stylesheetTitle the title that identifies the stylsheet in the stylesheet list file (.ssl)\n   * @param browserInfo the browser information\n   * @throws org.xml.sax.SAXException\n   * @throws java.io.IOException\n   * @throws org.jasig.portal.PortalException\n   * @deprecated the preferred way to use org.jasig.portal.utils.XSLT is to instatiate it, call its set methods and then {@link #transform()}\n   */\n  public static void transform (Document xmlDoc, URL sslUri, DocumentHandler out, String stylesheetTitle, BrowserInfo browserInfo) throws SAXException, IOException, PortalException {\n    transform(xmlDoc, sslUri, out, (Hashtable)null, stylesheetTitle, browserInfo);\n  }","id":16386,"modified_method":"/**\n   * Performs an XSL transformation.\n   * @param xmlNode a DOM node of the document to be transformed\n   * @param sslUri the URI of the stylesheet list file (.ssl)\n   * @param out a content handler\n   * @param stylesheetTitle the title that identifies the stylsheet in the stylesheet list file (.ssl)\n   * @param browserInfo the browser information\n   * @throws org.jasig.portal.PortalException if something goes wrong\n   * @deprecated the preferred way to use org.jasig.portal.utils.XSLT is to instatiate it, call its set methods and then {@link #transform()}\n   */\n  public static void transform (Node xmlNode, URL sslUri, ContentHandler out, String stylesheetTitle, BrowserInfo browserInfo) throws PortalException {\n    transform(xmlNode, sslUri, out, (Hashtable)null, stylesheetTitle, browserInfo);\n  }","commit_id":"b6e708dc547f477b6ad69c7aab6c8901ecafbf8b","url":"https://github.com/Jasig/uPortal"},{"original_method":"/**\n   * Constructs an XSLT object. \n   */  \n  public XSLT () {\n    processor = XSLTProcessorFactory.getProcessor(new org.apache.xalan.xpath.xdom.XercesLiaison());\n    xmlInputSource = new XSLTInputSource();\n    xslInputSource = new XSLTInputSource();\n    resultTarget = new XSLTResultTarget();\n    stylesheetParams = new HashMap();\n  }","id":16387,"modified_method":"/**\n   * Constructs an XSLT object. \n   */  \n  public XSLT () {\n      stylesheetParams = new HashMap();\n  }","commit_id":"b6e708dc547f477b6ad69c7aab6c8901ecafbf8b","url":"https://github.com/Jasig/uPortal"},{"original_method":"/**\n   * Performs an XSL transformation.\n   * @param xml a string representing the xml document\n   * @param xslUri the URI of the stylesheet file\n   * @param out a document handler\n   * @throws org.xml.sax.SAXException\n   * @throws java.io.IOException\n   * @throws org.jasig.portal.ResourceMissingException\n   * @deprecated the preferred way to use org.jasig.portal.utils.XSLT is to instatiate it, call its set methods and then {@link #transform()}\n   */\n  public static void transform (String xml, URL xslUri, DocumentHandler out) throws SAXException, IOException, ResourceMissingException {\n    transform(xml, xslUri, out, (Hashtable)null);\n  }","id":16388,"modified_method":"/**\n   * Performs an XSL transformation.\n   * @param xml a string representing the xml document\n   * @param xslUri the URI of the stylesheet file\n   * @param out a content handler\n   * @throws org.jasig.portal.PortalException if something goes wrong\n   * @deprecated the preferred way to use org.jasig.portal.utils.XSLT is to instatiate it, call its set methods and then {@link #transform()}\n   */\n  public static void transform (String xml, URL xslUri, ContentHandler out) throws PortalException {\n    transform(xml, xslUri, out, (Hashtable)null);\n  }","commit_id":"b6e708dc547f477b6ad69c7aab6c8901ecafbf8b","url":"https://github.com/Jasig/uPortal"},{"original_method":"/**\n   * Performs an XSL transformation. Accepts stylesheet parameters\n   * (key, value pairs) stored in a Hashtable.\n   * @param xmlDoc a DOM object representing the xml document\n   * @param sslUri the URI of the stylesheet list file (.ssl)\n   * @param out a document handler\n   * @param stylesheetParams a Hashtable of key/value pairs or <code>null<\/code> if no parameters\n   * @param media the media type\n   * @throws org.xml.sax.SAXException\n   * @throws java.io.IOException\n   * @throws org.jasig.portal.PortalException\n   * @deprecated replaced by {@link #transform(Document, URL, DocumentHandler, Hashtable, String)}\n   */\n  public static void transform (Document xmlDoc, URL sslUri, DocumentHandler out, Hashtable stylesheetParams, String media) throws SAXException, IOException, PortalException {\n    transform(xmlDoc, sslUri, out, stylesheetParams, (String)null, media);\n  }","id":16389,"modified_method":"/**\n   * Performs an XSL transformation. Accepts stylesheet parameters\n   * (key, value pairs) stored in a Hashtable.\n   * @param xmlNode a DOM node of the document to be transformed\n   * @param sslUri the URI of the stylesheet list file (.ssl)\n   * @param out a content handler\n   * @param stylesheetParams a Hashtable of key/value pairs or <code>null<\/code> if no parameters\n   * @param media the media type\n   * @throws org.jasig.portal.PortalException if something goes wrong\n   * @deprecated replaced by {@link #transform(Node, URL, ContentHandler, Hashtable, String)}\n   */\n  public static void transform (Node xmlNode, URL sslUri, ContentHandler out, Hashtable stylesheetParams, String media) throws PortalException {\n    transform(xmlNode, sslUri, out, stylesheetParams, (String)null, media);\n  }","commit_id":"b6e708dc547f477b6ad69c7aab6c8901ecafbf8b","url":"https://github.com/Jasig/uPortal"},{"original_method":"/**\n   * Performs an XSL transformation.\n   * @param xmlDoc a DOM object representing the xml document\n   * @param sslUri the URI of the stylesheet list file (.ssl)\n   * @param out a document handler\n   * @param browserInfo the browser information\n   * @throws org.xml.sax.SAXException\n   * @throws java.io.IOException\n   * @throws org.jasig.portal.PortalException\n   * @deprecated the preferred way to use org.jasig.portal.utils.XSLT is to instatiate it, call its set methods and then {@link #transform()}\n   */\n  public static void transform (Document xmlDoc, URL sslUri, DocumentHandler out, BrowserInfo browserInfo) throws SAXException, IOException, PortalException {\n    transform(xmlDoc, sslUri, out, (Hashtable)null, (String)null, browserInfo);\n  }","id":16390,"modified_method":"/**\n   * Performs an XSL transformation.\n   * @param xmlNode a DOM node of the document to be transformed\n   * @param sslUri the URI of the stylesheet list file (.ssl)\n   * @param out a content handler\n   * @param browserInfo the browser information\n   * @throws org.jasig.portal.PortalException if something goes wrong\n   * @deprecated the preferred way to use org.jasig.portal.utils.XSLT is to instatiate it, call its set methods and then {@link #transform()}\n   */\n  public static void transform (Node xmlNode, URL sslUri, ContentHandler out, BrowserInfo browserInfo) throws PortalException {\n    transform(xmlNode, sslUri, out, (Hashtable)null, (String)null, browserInfo);\n  }","commit_id":"b6e708dc547f477b6ad69c7aab6c8901ecafbf8b","url":"https://github.com/Jasig/uPortal"},{"original_method":"/**\n   * Performs an XSL transformation.\n   * @param xmlDoc a DOM object representing the xml document\n   * @param sslUri the URI of the stylesheet list file (.ssl)\n   * @param out a document handler\n   * @param stylesheetTitle the title that identifies the stylsheet in the stylesheet list file (.ssl)\n   * @param media the media type\n   * @throws org.xml.sax.SAXException\n   * @throws java.io.IOException\n   * @throws org.jasig.portal.PortalException\n   * @deprecated replaced by {@link #transform(Document, URL, DocumentHandler, String, String)}\n   */\n  public static void transform (Document xmlDoc, URL sslUri, DocumentHandler out, String stylesheetTitle, String media) throws SAXException, IOException, PortalException {\n    transform(xmlDoc, sslUri, out, (Hashtable)null, stylesheetTitle, media);\n  }","id":16391,"modified_method":"/**\n   * Performs an XSL transformation.\n   * @param xmlNode a DOM node of the document to be transformed\n   * @param sslUri the URI of the stylesheet list file (.ssl)\n   * @param out a content handler\n   * @param stylesheetTitle the title that identifies the stylsheet in the stylesheet list file (.ssl)\n   * @param media the media type\n   * @throws org.jasig.portal.PortalException if something goes wrong\n   * @deprecated replaced by {@link #transform(Node, URL, ContentHandler, String, String)}\n   */\n  public static void transform (Node xmlNode, URL sslUri, ContentHandler out, String stylesheetTitle, String media) throws PortalException {\n    transform(xmlNode, sslUri, out, (Hashtable)null, stylesheetTitle, media);\n  }","commit_id":"b6e708dc547f477b6ad69c7aab6c8901ecafbf8b","url":"https://github.com/Jasig/uPortal"},{"original_method":"/**\n   * Performs a transformation.  Assumes that the XML, XSL, and result targets\n   * have already been set.\n   * @throws org.jasig.portal.PortalException\n   */  \n  public void transform() throws PortalException {\n    try {\n      StylesheetRoot stylesheetRoot = getStylesheetRoot(xslInputSource.getSystemId());\n      processor.reset();\n      setStylesheetParams(processor, stylesheetParams);\n      stylesheetRoot.process(processor, xmlInputSource, resultTarget);\n    } catch (Exception e) {\n      throw new GeneralRenderingException(e.getMessage());\n    }\n  }","id":16392,"modified_method":"/**\n   * Performs a transformation.  Assumes that the XML, XSL, and result targets\n   * have already been set.\n   * @throws org.jasig.portal.PortalException\n   */  \n  public void transform() throws PortalException {\n    try {\n        try {\n            Transformer trans = getTransformer(this.xslURI);\n            setStylesheetParams(trans, stylesheetParams);\n            trans.transform(xmlSource, xmlResult);\n        } catch (PortalException pe) {\n            throw pe;\n        }\n    } catch (Exception e) {\n      throw new GeneralRenderingException(e.getMessage());\n    }\n  }","commit_id":"b6e708dc547f477b6ad69c7aab6c8901ecafbf8b","url":"https://github.com/Jasig/uPortal"},{"original_method":"/**\n   * Performs an XSL transformation. Accepts stylesheet parameters\n   * (key, value pairs) stored in a Hashtable.\n   * @param xml a string representing the xml document\n   * @param sslUri the URI of the stylesheet list file (.ssl)\n   * @param out a document handler\n   * @param stylesheetParams a Hashtable of key/value pairs or <code>null<\/code> if no parameters\n   * @param stylesheetTitle the title that identifies the stylesheet in the stylesheet list file (.ssl), <code>null<\/code> if no title\n   * @param browserInfo the browser information\n   * @throws org.xml.sax.SAXException\n   * @throws java.io.IOException\n   * @throws org.jasig.portal.PortalException\n   */\n  public static void transform (String xml, URL sslUri, DocumentHandler out, Hashtable stylesheetParams, String stylesheetTitle, BrowserInfo browserInfo) throws SAXException, IOException, PortalException {\n    XSLTInputSource xmlSource = new XSLTInputSource(new StringReader(xml));\n    XSLTResultTarget xmlResult = new XSLTResultTarget(out);\n    StylesheetSet set = getStylesheetSet(sslUri.toExternalForm());\n    set.setMediaProps(mediaProps);\n    XSLTProcessor processor = XSLTProcessorFactory.getProcessor();\n    StylesheetRoot stylesheetRoot = getStylesheetRoot(set.getStylesheetURI(stylesheetTitle, browserInfo));\n    processor.reset();\n    setStylesheetParams(processor, stylesheetParams);\n    stylesheetRoot.process(processor, xmlSource, xmlResult);\n  }","id":16393,"modified_method":"/**\n   * Performs an XSL transformation. Accepts stylesheet parameters\n   * (key, value pairs) stored in a Hashtable.\n   * @param xml a string representing the xml document\n   * @param sslUri the URI of the stylesheet list file (.ssl)\n   * @param out a content handler\n   * @param stylesheetParams a Hashtable of key/value pairs or <code>null<\/code> if no parameters\n   * @param stylesheetTitle the title that identifies the stylesheet in the stylesheet list file (.ssl), <code>null<\/code> if no title\n   * @param browserInfo the browser information\n   * @throws org.jasig.portal.PortalException if something goes wrong\n   */\n    public static void transform (String xml, URL sslUri, ContentHandler out, Hashtable stylesheetParams, String stylesheetTitle, BrowserInfo browserInfo) throws PortalException {\n      try {\n          StylesheetSet set = getStylesheetSet(sslUri.toExternalForm());\n          set.setMediaProps(mediaProps);\n          transform(new StreamSource(new StringReader(xml)), new SAXResult(out), stylesheetParams, set.getStylesheetURI(stylesheetTitle, browserInfo));\n      } catch (Exception e) {\n          throw new GeneralRenderingException(e.getMessage());\n      } \n  }","commit_id":"b6e708dc547f477b6ad69c7aab6c8901ecafbf8b","url":"https://github.com/Jasig/uPortal"},{"original_method":"/**\n   * Performs an XSL transformation. Accepts stylesheet parameters\n   * (key, value pairs) stored in a Hashtable.\n   * @param xml a string representing the xml document\n   * @param sslUri the URI of the stylesheet list file (.ssl)\n   * @param out a document handler\n   * @param stylesheetParams a Hashtable of key/value pairs or <code>null<\/code> if no parameters\n   * @param browserInfo the browser information\n   * @throws org.xml.sax.SAXException\n   * @throws java.io.IOException\n   * @throws org.jasig.portal.PortalException\n   * @deprecated the preferred way to use org.jasig.portal.utils.XSLT is to instatiate it, call its set methods and then {@link #transform()}\n   */\n  public static void transform (String xml, URL sslUri, DocumentHandler out, Hashtable stylesheetParams, BrowserInfo browserInfo) throws SAXException, IOException, PortalException {\n    transform(xml, sslUri, out, stylesheetParams, (String)null, browserInfo);\n  }","id":16394,"modified_method":"/**\n   * Performs an XSL transformation. Accepts stylesheet parameters\n   * (key, value pairs) stored in a Hashtable.\n   * @param xml a string representing the xml document\n   * @param sslUri the URI of the stylesheet list file (.ssl)\n   * @param out a content handler\n   * @param stylesheetParams a Hashtable of key/value pairs or <code>null<\/code> if no parameters\n   * @param browserInfo the browser information\n   * @throws org.jasig.portal.PortalException if something goes wrong\n   * @deprecated the preferred way to use org.jasig.portal.utils.XSLT is to instatiate it, call its set methods and then {@link #transform()}\n   */\n  public static void transform (String xml, URL sslUri, ContentHandler out, Hashtable stylesheetParams, BrowserInfo browserInfo) throws PortalException {\n    transform(xml, sslUri, out, stylesheetParams, (String)null, browserInfo);\n  }","commit_id":"b6e708dc547f477b6ad69c7aab6c8901ecafbf8b","url":"https://github.com/Jasig/uPortal"},{"original_method":"/**\n   * Performs an XSL transformation. Accepts stylesheet parameters\n   * (key, value pairs) stored in a Hashtable.\n   * @param xml a string representing the xml document\n   * @param sslUri the URI of the stylesheet list file (.ssl)\n   * @param out a document handler\n   * @param stylesheetParams a Hashtable of key/value pairs or <code>null<\/code> if no parameters\n   * @param stylesheetTitle the title that identifies the stylesheet in the stylesheet list file (.ssl), <code>null<\/code> if no title\n   * @param media the media type\n   * @throws org.xml.sax.SAXException\n   * @throws java.io.IOException\n   * @throws org.jasig.portal.PortalException\n   * @deprecated replaced by {@link #transform(String, URL, DocumentHandler, Hashtable, String, BrowserInfo)}\n   */\n  public static void transform (String xml, URL sslUri, DocumentHandler out, Hashtable stylesheetParams, String stylesheetTitle, String media) throws SAXException, IOException, PortalException {\n    XSLTInputSource xmlSource = new XSLTInputSource(new StringReader(xml));\n    XSLTResultTarget xmlResult = new XSLTResultTarget(out);\n    StylesheetSet set = getStylesheetSet(sslUri.toExternalForm());\n    set.setMediaProps(mediaProps);\n    XSLTProcessor processor = XSLTProcessorFactory.getProcessor();\n    StylesheetRoot stylesheetRoot = getStylesheetRoot(set.getStylesheetURI(stylesheetTitle, media));\n    processor.reset();\n    setStylesheetParams(processor, stylesheetParams);\n    stylesheetRoot.process(processor, xmlSource, xmlResult);\n  }","id":16395,"modified_method":"/**\n   * Performs an XSL transformation. Accepts stylesheet parameters\n   * (key, value pairs) stored in a Hashtable.\n   * @param xml a string representing the xml document\n   * @param sslUri the URI of the stylesheet list file (.ssl)\n   * @param out a content handler\n   * @param stylesheetParams a Hashtable of key/value pairs or <code>null<\/code> if no parameters\n   * @param stylesheetTitle the title that identifies the stylesheet in the stylesheet list file (.ssl), <code>null<\/code> if no title\n   * @param media the media type\n   * @throws org.jasig.portal.PortalException if something goes wrong\n   * @deprecated replaced by {@link #transform(String, URL, ContentHandler, Hashtable, String, BrowserInfo)}\n   */\n  public static void transform (String xml, URL sslUri, ContentHandler out, Hashtable stylesheetParams, String stylesheetTitle, String media) throws PortalException {\n      try {\n          StylesheetSet set = getStylesheetSet(sslUri.toExternalForm());\n          set.setMediaProps(mediaProps);\n          transform(new StreamSource(new StringReader(xml)), new SAXResult(out), stylesheetParams, set.getStylesheetURI(stylesheetTitle, media));\n      } catch (Exception e) {\n          throw new GeneralRenderingException(e.getMessage());\n      } \n  }","commit_id":"b6e708dc547f477b6ad69c7aab6c8901ecafbf8b","url":"https://github.com/Jasig/uPortal"},{"original_method":"/**\n   * Performs an XSL transformation. Accepts stylesheet parameters\n   * (key, value pairs) stored in a Hashtable.\n   * @param xmlDoc a DOM object representing the xml document\n   * @param xslUri the URI of the stylesheet file (.xsl)\n   * @param out a string writer\n   * @param stylesheetParams a Hashtable of key/value pairs or <code>null<\/code> if no parameters\n   * @throws org.xml.sax.SAXException\n   * @throws java.io.IOException\n   * @throws org.jasig.portal.ResourceMissingException\n   * @deprecated the preferred way to use org.jasig.portal.utils.XSLT is to instatiate it, call its set methods and then {@link #transform()}\n   */\n  public static void transform (Document xmlDoc, URL xslUri, StringWriter out, Hashtable stylesheetParams) throws SAXException, IOException, ResourceMissingException {\n    XSLTInputSource xmlSource = new XSLTInputSource(xmlDoc);\n    XSLTResultTarget xmlResult = new XSLTResultTarget(out);\n    XSLTProcessor processor = XSLTProcessorFactory.getProcessor(new org.apache.xalan.xpath.xdom.XercesLiaison());\n    StylesheetRoot stylesheetRoot = getStylesheetRoot(xslUri.toExternalForm());\n    processor.reset();\n    setStylesheetParams(processor, stylesheetParams);\n    stylesheetRoot.process(processor, xmlSource, xmlResult);\n  }","id":16396,"modified_method":"/**\n   * Performs an XSL transformation. Accepts stylesheet parameters\n   * (key, value pairs) stored in a Hashtable.\n   * @param xmlNode a DOM object representing the xml document\n   * @param xslUri the URI of the stylesheet file (.xsl)\n   * @param out a string writer\n   * @param stylesheetParams a Hashtable of key/value pairs or <code>null<\/code> if no parameters\n   * @throws org.jasig.portal.PortalException if something goes wrong\n   * @deprecated the preferred way to use org.jasig.portal.utils.XSLT is to instatiate it, call its set methods and then {@link #transform()}\n   */\n  public static void transform (Node xmlNode, URL xslUri, StringWriter out, Hashtable stylesheetParams) throws PortalException {\n      transform(new DOMSource(xmlNode), new StreamResult(out), stylesheetParams, xslUri.toString());\n  }","commit_id":"b6e708dc547f477b6ad69c7aab6c8901ecafbf8b","url":"https://github.com/Jasig/uPortal"},{"original_method":"/**\n   * Performs an XSL transformation.\n   * @param xml a string representing the xml document\n   * @param sslUri the URI of the stylesheet list file (.ssl)\n   * @param out a document handler\n   * @param stylesheetTitle the title that identifies the stylsheet in the stylesheet list file (.ssl)\n   * @param browserInfo the browser information\n   * @throws org.xml.sax.SAXException\n   * @throws java.io.IOException\n   * @throws org.jasig.portal.PortalException\n   * @deprecated the preferred way to use org.jasig.portal.utils.XSLT is to instatiate it, call its set methods and then {@link #transform()}\n   */\n  public static void transform (String xml, URL sslUri, DocumentHandler out, String stylesheetTitle, BrowserInfo browserInfo) throws SAXException, IOException, PortalException {\n    transform(xml, sslUri, out, (Hashtable)null, stylesheetTitle, browserInfo);\n  }","id":16397,"modified_method":"/**\n   * Performs an XSL transformation.\n   * @param xml a string representing the xml document\n   * @param sslUri the URI of the stylesheet list file (.ssl)\n   * @param out a content handler\n   * @param stylesheetTitle the title that identifies the stylsheet in the stylesheet list file (.ssl)\n   * @param browserInfo the browser information\n   * @throws org.jasig.portal.PortalException if something goes wrong\n   * @deprecated the preferred way to use org.jasig.portal.utils.XSLT is to instatiate it, call its set methods and then {@link #transform()}\n   */\n  public static void transform (String xml, URL sslUri, ContentHandler out, String stylesheetTitle, BrowserInfo browserInfo) throws PortalException {\n    transform(xml, sslUri, out, (Hashtable)null, stylesheetTitle, browserInfo);\n  }","commit_id":"b6e708dc547f477b6ad69c7aab6c8901ecafbf8b","url":"https://github.com/Jasig/uPortal"},{"original_method":"/**\n   * Performs an XSL transformation. Accepts stylesheet parameters\n   * (key, value pairs) stored in a Hashtable.\n   * @param xml a string representing the xml document\n   * @param xslUri the URI of the stylesheet file (.xsl)\n   * @param out a document handler\n   * @param stylesheetParams a Hashtable of key/value pairs or <code>null<\/code> if no parameters\n   * @throws org.xml.sax.SAXException\n   * @throws java.io.IOException\n   * @throws org.jasig.portal.ResourceMissingException\n   * @deprecated the preferred way to use org.jasig.portal.utils.XSLT is to instatiate it, call its set methods and then {@link #transform()}\n   */\n  public static void transform (String xml, URL xslUri, DocumentHandler out, Hashtable stylesheetParams) throws SAXException, IOException, ResourceMissingException {\n    XSLTInputSource xmlSource = new XSLTInputSource(new StringReader(xml));\n    XSLTResultTarget xmlResult = new XSLTResultTarget(out);\n    XSLTProcessor processor = XSLTProcessorFactory.getProcessor();\n    StylesheetRoot stylesheetRoot = getStylesheetRoot(xslUri.toExternalForm());\n    processor.reset();\n    setStylesheetParams(processor, stylesheetParams);\n    stylesheetRoot.process(processor, xmlSource, xmlResult);\n  }","id":16398,"modified_method":"/**\n   * Performs an XSL transformation. Accepts stylesheet parameters\n   * (key, value pairs) stored in a Hashtable.\n   * @param xml a string representing the xml document\n   * @param xslUri the URI of the stylesheet file (.xsl)\n   * @param out a content handler\n   * @param stylesheetParams a Hashtable of key/value pairs or <code>null<\/code> if no parameters\n   * @throws org.jasig.portal.PortalException if something goes wrong\n   * @deprecated the preferred way to use org.jasig.portal.utils.XSLT is to instatiate it, call its set methods and then {@link #transform()}\n   */\n  public static void transform (String xml, URL xslUri, ContentHandler out, Hashtable stylesheetParams) throws PortalException {\n      transform(new StreamSource(new StringReader(xml)), new SAXResult(out), stylesheetParams, xslUri.toString());\n  }","commit_id":"b6e708dc547f477b6ad69c7aab6c8901ecafbf8b","url":"https://github.com/Jasig/uPortal"},{"original_method":"/**\n   * Configures the xslt target.\n   * @param documentHandler the document handler\n   */  \n  public void setTarget(DocumentHandler documentHandler) {\n    resultTarget.setDocumentHandler(documentHandler);\n  }","id":16399,"modified_method":"/**\n   * Configures the xslt target.\n   * @param contentHandler the content handler\n   */  \n  public void setTarget(ContentHandler contentHandler) {\n      xmlResult=new SAXResult(contentHandler);\n  }","commit_id":"b6e708dc547f477b6ad69c7aab6c8901ecafbf8b","url":"https://github.com/Jasig/uPortal"},{"original_method":"/**\n   * Performs an XSL transformation. Accepts stylesheet parameters\n   * (key, value pairs) stored in a Hashtable.\n   * @param xml a string representing the xml document\n   * @param sslUri the URI of the stylesheet list file (.ssl)\n   * @param out a StringWriter\n   * @param stylesheetParams a Hashtable of key/value pairs or <code>null<\/code> if no parameters\n   * @param stylesheetTitle the title that identifies the stylesheet in the stylesheet list file (.ssl), <code>null<\/code> if no title\n   * @param media the media type\n   * @throws org.xml.sax.SAXException\n   * @throws java.io.IOException\n   * @throws org.jasig.portal.PortalException\n   * @deprecated replaced by {@link #transform(String, URL, StringWriter, Hashtable, String, BrowserInfo)}\n   */\n  public static void transform (String xml, URL sslUri, StringWriter out, Hashtable stylesheetParams, String stylesheetTitle, String media) throws SAXException, IOException, PortalException {\n    XSLTInputSource xmlSource = new XSLTInputSource(new StringReader(xml));\n    XSLTResultTarget xmlResult = new XSLTResultTarget(out);\n    StylesheetSet set = getStylesheetSet(sslUri.toExternalForm());\n    set.setMediaProps(mediaProps);\n    XSLTProcessor processor = XSLTProcessorFactory.getProcessor();\n    StylesheetRoot stylesheetRoot = getStylesheetRoot(set.getStylesheetURI(stylesheetTitle, media));\n    processor.reset();\n    setStylesheetParams(processor, stylesheetParams);\n    // Make sure to generate XML in order to cache it\n    stylesheetRoot.setOutputMethod(\"xml\");\n    // Process the XML/XSLT and store the result in the StringWriter\n    stylesheetRoot.process(processor, xmlSource, xmlResult);\n  }","id":16400,"modified_method":"/**\n   * Performs an XSL transformation. Accepts stylesheet parameters\n   * (key, value pairs) stored in a Hashtable.\n   * @param xml a string representing the xml document\n   * @param sslUri the URI of the stylesheet list file (.ssl)\n   * @param out a StringWriter\n   * @param stylesheetParams a Hashtable of key/value pairs or <code>null<\/code> if no parameters\n   * @param stylesheetTitle the title that identifies the stylesheet in the stylesheet list file (.ssl), <code>null<\/code> if no title\n   * @param media the media type\n   * @throws org.jasig.portal.PortalException if something goes wrong\n   * @deprecated replaced by {@link #transform(String, URL, StringWriter, Hashtable, String, BrowserInfo)}\n   */\n  public static void transform (String xml, URL sslUri, StringWriter out, Hashtable stylesheetParams, String stylesheetTitle, String media) throws PortalException {\n      try {\n          StylesheetSet set = getStylesheetSet(sslUri.toExternalForm());\n          set.setMediaProps(mediaProps);\n          transform(new StreamSource(new StringReader(xml)), new StreamResult(out), stylesheetParams, set.getStylesheetURI(stylesheetTitle, media));\n      } catch (Exception e) {\n          throw new GeneralRenderingException(e.getMessage());\n      } \n  }","commit_id":"b6e708dc547f477b6ad69c7aab6c8901ecafbf8b","url":"https://github.com/Jasig/uPortal"},{"original_method":"/**\n   * Performs an XSL transformation. Accepts stylesheet parameters\n   * (key, value pairs) stored in a Hashtable.\n   * @param xml a string representing the xml document\n   * @param sslUri the URI of the stylesheet list file (.ssl)\n   * @param out a document handler\n   * @param stylesheetParams a Hashtable of key/value pairs or <code>null<\/code> if no parameters\n   * @param media the media type\n   * @throws org.xml.sax.SAXException\n   * @throws java.io.IOException\n   * @throws org.jasig.portal.PortalException\n   * @deprecated replaced by {@link #transform(String, URL, DocumentHandler, Hashtable, String)}\n   */\n  public static void transform (String xml, URL sslUri, DocumentHandler out, Hashtable stylesheetParams, String media) throws SAXException, IOException, PortalException {\n    transform(xml, sslUri, out, stylesheetParams, (String)null, media);\n  }","id":16401,"modified_method":"/**\n   * Performs an XSL transformation. Accepts stylesheet parameters\n   * (key, value pairs) stored in a Hashtable.\n   * @param xml a string representing the xml document\n   * @param sslUri the URI of the stylesheet list file (.ssl)\n   * @param out a content handler\n   * @param stylesheetParams a Hashtable of key/value pairs or <code>null<\/code> if no parameters\n   * @param media the media type\n   * @throws org.jasig.portal.PortalException if something goes wrong\n   * @deprecated replaced by {@link #transform(String, URL, ContentHandler, Hashtable, String)}\n   */\n  public static void transform (String xml, URL sslUri, ContentHandler out, Hashtable stylesheetParams, String media) throws PortalException {\n    transform(xml, sslUri, out, stylesheetParams, (String)null, media);\n  }","commit_id":"b6e708dc547f477b6ad69c7aab6c8901ecafbf8b","url":"https://github.com/Jasig/uPortal"},{"original_method":"/**\n   * Performs an XSL transformation. Accepts stylesheet parameters\n   * (key, value pairs) stored in a Hashtable.\n   * @param xmlDoc a DOM object representing the xml document\n   * @param sslUri the URI of the stylesheet list file (.ssl)\n   * @param out a string writer\n   * @param stylesheetParams a Hashtable of key/value pairs or <code>null<\/code> if no parameters\n   * @param stylesheetTitle the title that identifies the stylesheet in the stylesheet list file (.ssl), <code>null<\/code> if no title\n   * @param media the media type\n   * @throws org.xml.sax.SAXException\n   * @throws java.io.IOException\n   * @throws org.jasig.portal.PortalException\n   * @deprecated replaced by {@link #transform(Document, URL, StringWriter, Hashtable, String, String)}\n   */\n  public static void transform (Document xmlDoc, URL sslUri, StringWriter out, Hashtable stylesheetParams, String stylesheetTitle, String media) throws SAXException, IOException, PortalException {\n    XSLTInputSource xmlSource = new XSLTInputSource(xmlDoc);\n    XSLTResultTarget xmlResult = new XSLTResultTarget(out);\n    StylesheetSet set = getStylesheetSet(sslUri.toExternalForm());\n    set.setMediaProps(mediaProps);\n    XSLTProcessor processor = XSLTProcessorFactory.getProcessor(new org.apache.xalan.xpath.xdom.XercesLiaison());\n    StylesheetRoot stylesheetRoot = getStylesheetRoot(set.getStylesheetURI(stylesheetTitle, media));\n    processor.reset();\n    setStylesheetParams(processor, stylesheetParams);\n    stylesheetRoot.process(processor, xmlSource, xmlResult);\n  }","id":16402,"modified_method":"/**\n   * Performs an XSL transformation. Accepts stylesheet parameters\n   * (key, value pairs) stored in a Hashtable.\n   * @param xmlNode a DOM node of the document to be transformed\n   * @param sslUri the URI of the stylesheet list file (.ssl)\n   * @param out a string writer\n   * @param stylesheetParams a Hashtable of key/value pairs or <code>null<\/code> if no parameters\n   * @param stylesheetTitle the title that identifies the stylesheet in the stylesheet list file (.ssl), <code>null<\/code> if no title\n   * @param media the media type\n   * @throws org.jasig.portal.PortalException if something goes wrong\n   * @deprecated replaced by {@link #transform(Node, URL, StringWriter, Hashtable, String, String)}\n   */\n  public static void transform (Node xmlNode, URL sslUri, StringWriter out, Hashtable stylesheetParams, String stylesheetTitle, String media) throws PortalException {\n      try {\n          StylesheetSet set = getStylesheetSet(sslUri.toExternalForm());\n          set.setMediaProps(mediaProps);\n          transform(new DOMSource(xmlNode), new StreamResult(out), stylesheetParams, set.getStylesheetURI(stylesheetTitle, media));\n      } catch (Exception e) {\n          throw new GeneralRenderingException(e.getMessage());\n      } \n  }","commit_id":"b6e708dc547f477b6ad69c7aab6c8901ecafbf8b","url":"https://github.com/Jasig/uPortal"},{"original_method":"/**\n   * Extracts name/value pairs from a Hashtable and uses them to create stylesheet parameters\n   * @param processor the XSLT processor\n   * @param stylesheetParams name/value pairs used as stylesheet parameters\n   */\n  private static void setStylesheetParams (XSLTProcessor processor, HashMap stylesheetParams) {\n    if (stylesheetParams != null) {      \n      Iterator iterator = stylesheetParams.keySet().iterator();\n      while (iterator.hasNext()) {\n        String key = (String)iterator.next();\n        Object o = stylesheetParams.get(key);\n        if (o instanceof String) {\n          processor.setStylesheetParam(key, processor.createXString((String)o));\n        }\n        else if (o.getClass().getName().equals(\"[Ljava.lang.String;\")) {\n          // This situation occurs for some requests from cell phones\n          String[] sa = (String[])o;\n          processor.setStylesheetParam(key, processor.createXString(sa[0]));\n        }\n        else if (o instanceof Boolean) {\n          processor.setStylesheetParam(key, processor.createXBoolean(((Boolean)o).booleanValue()));\n        }\n        else if (o instanceof Double) {\n          processor.setStylesheetParam(key, processor.createXNumber(((Double)o).doubleValue()));\n        }\n      }\n    }\n  }","id":16403,"modified_method":"/**\n   * Extracts name/value pairs from a Hashtable and uses them to create stylesheet parameters\n   * @param processor the XSLT processor\n   * @param stylesheetParams name/value pairs used as stylesheet parameters\n   */\n  private static void setStylesheetParams (Transformer transformer, HashMap stylesheetParams) {\n    if (stylesheetParams != null) {      \n      Iterator iterator = stylesheetParams.keySet().iterator();\n      while (iterator.hasNext()) {\n        String key = (String)iterator.next();\n        Object o = stylesheetParams.get(key);\n        if (o.getClass().getName().equals(\"[Ljava.lang.String;\")) {\n          // This situation occurs for some requests from cell phones\n          o = ((String[])o)[0];\n        }\n        transformer.setParameter(key,o);\n      }\n    }\n  }","commit_id":"b6e708dc547f477b6ad69c7aab6c8901ecafbf8b","url":"https://github.com/Jasig/uPortal"},{"original_method":"/**\n   * Performs an XSL transformation. Accepts stylesheet parameters\n   * (key, value pairs) stored in a Hashtable.\n   * @param xmlDoc a DOM object representing the xml document\n   * @param sslUri the URI of the stylesheet list file (.ssl)\n   * @param out a document handler\n   * @param stylesheetParams a Hashtable of key/value pairs or <code>null<\/code> if no parameters\n   * @param stylesheetTitle the title that identifies the stylesheet in the stylesheet list file (.ssl), <code>null<\/code> if no title\n   * @param media the media type\n   * @throws org.xml.sax.SAXException\n   * @throws java.io.IOException\n   * @throws org.jasig.portal.PortalException\n   * @deprecated replaced by {@link #transform(Document, URL, DocumentHandler, Hashtable, String, String)}\n   */\n  public static void transform (Document xmlDoc, URL sslUri, DocumentHandler out, Hashtable stylesheetParams, String stylesheetTitle, String media) throws SAXException, IOException, PortalException {\n    XSLTInputSource xmlSource = new XSLTInputSource(xmlDoc);\n    XSLTResultTarget xmlResult = new XSLTResultTarget(out);\n    StylesheetSet set = getStylesheetSet(sslUri.toExternalForm());\n    set.setMediaProps(mediaProps);\n    XSLTProcessor processor = XSLTProcessorFactory.getProcessor(new org.apache.xalan.xpath.xdom.XercesLiaison());\n    StylesheetRoot stylesheetRoot = getStylesheetRoot(set.getStylesheetURI(stylesheetTitle, media));\n    processor.reset();\n    setStylesheetParams(processor, stylesheetParams);\n    stylesheetRoot.process(processor, xmlSource, xmlResult);\n  }","id":16404,"modified_method":"/**\n   * Performs an XSL transformation. Accepts stylesheet parameters\n   * (key, value pairs) stored in a Hashtable.\n   * @param xmlNode a DOM node of the document to be transformed\n   * @param sslUri the URI of the stylesheet list file (.ssl)\n   * @param out a content handler\n   * @param stylesheetParams a Hashtable of key/value pairs or <code>null<\/code> if no parameters\n   * @param stylesheetTitle the title that identifies the stylesheet in the stylesheet list file (.ssl), <code>null<\/code> if no title\n   * @param media the media type\n   * @throws org.jasig.portal.PortalException if something goes wrong\n   * @deprecated replaced by {@link #transform(Node, URL, ContentHandler, Hashtable, String, String)}\n   */\n  public static void transform (Node xmlNode, URL sslUri, ContentHandler out, Hashtable stylesheetParams, String stylesheetTitle, String media) throws PortalException {\n      try {\n          StylesheetSet set = getStylesheetSet(sslUri.toExternalForm());\n          set.setMediaProps(mediaProps);\n          transform(new DOMSource(xmlNode), new SAXResult(out), stylesheetParams, set.getStylesheetURI(stylesheetTitle, media));\n      } catch (Exception e) {\n          throw new GeneralRenderingException(e.getMessage());\n      } \n  }","commit_id":"b6e708dc547f477b6ad69c7aab6c8901ecafbf8b","url":"https://github.com/Jasig/uPortal"},{"original_method":"/**\n   * Performs an XSL transformation. Accepts stylesheet parameters\n   * (key, value pairs) stored in a Hashtable.\n   * @param xmlDoc a DOM object representing the xml document\n   * @param xslUri the URI of the stylesheet file (.xsl)\n   * @param out a document handler\n   * @throws org.xml.sax.SAXException\n   * @throws java.io.IOException\n   * @throws org.jasig.portal.ResourceMissingException\n   * @deprecated the preferred way to use org.jasig.portal.utils.XSLT is to instatiate it, call its set methods and then {@link #transform()}\n   */\n  public static void transform (Document xmlDoc, URL xslUri, DocumentHandler out) throws SAXException, IOException, ResourceMissingException {\n    transform(xmlDoc, xslUri, out, (Hashtable)null);\n  }","id":16405,"modified_method":"/**\n   * Performs an XSL transformation. Accepts stylesheet parameters\n   * (key, value pairs) stored in a Hashtable.\n   * @param xmlNode a DOM object representing the xml document\n   * @param xslUri the URI of the stylesheet file (.xsl)\n   * @param out a content handler\n   * @throws org.jasig.portal.PortalException if something goes wrong\n   * @deprecated the preferred way to use org.jasig.portal.utils.XSLT is to instatiate it, call its set methods and then {@link #transform()}\n   */\n  public static void transform (Node xmlNode, URL xslUri, ContentHandler out) throws PortalException {\n    transform(xmlNode, xslUri, out, (Hashtable)null);\n  }","commit_id":"b6e708dc547f477b6ad69c7aab6c8901ecafbf8b","url":"https://github.com/Jasig/uPortal"},{"original_method":"/**\n   * Performs an XSL transformation. Accepts stylesheet parameters\n   * (key, value pairs) stored in a Hashtable.\n   * @param xml a string representing the xml document\n   * @param sslUri the URI of the stylesheet list file (.ssl)\n   * @param out a StringWriter\n   * @param stylesheetParams a Hashtable of key/value pairs or <code>null<\/code> if no parameters\n   * @param stylesheetTitle the title that identifies the stylesheet in the stylesheet list file (.ssl), <code>null<\/code> if no title\n   * @param browserInfo the browser information\n   * @throws org.xml.sax.SAXException\n   * @throws java.io.IOException\n   * @throws org.jasig.portal.PortalException\n   * @deprecated the preferred way to use org.jasig.portal.utils.XSLT is to instatiate it, call its set methods and then {@link #transform()}\n   */\n  public static void transform (String xml, URL sslUri, StringWriter out, Hashtable stylesheetParams, String stylesheetTitle, BrowserInfo browserInfo) throws SAXException, IOException, PortalException {\n    XSLTInputSource xmlSource = new XSLTInputSource(new StringReader(xml));\n    XSLTResultTarget xmlResult = new XSLTResultTarget(out);\n    StylesheetSet set = getStylesheetSet(sslUri.toExternalForm());\n    set.setMediaProps(mediaProps);\n    XSLTProcessor processor = XSLTProcessorFactory.getProcessor();\n    StylesheetRoot stylesheetRoot = getStylesheetRoot(set.getStylesheetURI(stylesheetTitle, browserInfo));\n    processor.reset();\n    setStylesheetParams(processor, stylesheetParams);\n    // Make sure to generate XML in order to cache it\n    stylesheetRoot.setOutputMethod(\"xml\");\n    // Process the XML/XSLT and store the result in the StringWriter\n    stylesheetRoot.process(processor, xmlSource, xmlResult);\n  }","id":16406,"modified_method":"/**\n   * Performs an XSL transformation. Accepts stylesheet parameters\n   * (key, value pairs) stored in a Hashtable.\n   * @param xml a string representing the xml document\n   * @param sslUri the URI of the stylesheet list file (.ssl)\n   * @param out a StringWriter\n   * @param stylesheetParams a Hashtable of key/value pairs or <code>null<\/code> if no parameters\n   * @param stylesheetTitle the title that identifies the stylesheet in the stylesheet list file (.ssl), <code>null<\/code> if no title\n   * @param browserInfo the browser information\n   * @throws org.jasig.portal.PortalException if something goes wrong\n   * @deprecated the preferred way to use org.jasig.portal.utils.XSLT is to instatiate it, call its set methods and then {@link #transform()}\n   */\n  public static void transform (String xml, URL sslUri, StringWriter out, Hashtable stylesheetParams, String stylesheetTitle, BrowserInfo browserInfo) throws PortalException {\n      try {\n          StylesheetSet set = getStylesheetSet(sslUri.toExternalForm());\n          set.setMediaProps(mediaProps);\n          transform(new StreamSource(new StringReader(xml)), new StreamResult(out), stylesheetParams, set.getStylesheetURI(stylesheetTitle, browserInfo));\n      } catch (Exception e) {\n          throw new GeneralRenderingException(e.getMessage());\n      } \n  }","commit_id":"b6e708dc547f477b6ad69c7aab6c8901ecafbf8b","url":"https://github.com/Jasig/uPortal"},{"original_method":"/**\n   * Performs an XSL transformation. Accepts stylesheet parameters\n   * (key, value pairs) stored in a Hashtable.\n   * @param xmlDoc a DOM object representing the xml document\n   * @param sslUri the URI of the stylesheet list file (.ssl)\n   * @param out a StringWriter\n   * @param stylesheetParams a Hashtable of key/value pairs or <code>null<\/code> if no parameters\n   * @param media the media type\n   * @throws org.xml.sax.SAXException\n   * @throws java.io.IOException\n   * @throws org.jasig.portal.PortalException\n   * @deprecated replaced by {@link #transform(Document, URL, StringWriter, Hashtable, String)}\n   */\n  public static void transform (Document xmlDoc, URL sslUri, StringWriter out, Hashtable stylesheetParams, String media) throws SAXException, IOException, PortalException {\n    transform(xmlDoc, sslUri, out, stylesheetParams, (String)null, media);\n  }","id":16407,"modified_method":"/**\n   * Performs an XSL transformation. Accepts stylesheet parameters\n   * (key, value pairs) stored in a Hashtable.\n   * @param xmlNode a DOM node of the document to be transformed\n   * @param sslUri the URI of the stylesheet list file (.ssl)\n   * @param out a StringWriter\n   * @param stylesheetParams a Hashtable of key/value pairs or <code>null<\/code> if no parameters\n   * @param media the media type\n   * @throws org.jasig.portal.PortalException if something goes wrong\n   * @deprecated replaced by {@link #transform(Node, URL, StringWriter, Hashtable, String)}\n   */\n  public static void transform (Node xmlNode, URL sslUri, StringWriter out, Hashtable stylesheetParams, String media) throws PortalException {\n    transform(xmlNode, sslUri, out, stylesheetParams, (String)null, media);\n  }","commit_id":"b6e708dc547f477b6ad69c7aab6c8901ecafbf8b","url":"https://github.com/Jasig/uPortal"},{"original_method":"/**\n   * Performs an XSL transformation.\n   * @param xml a string representing the xml document\n   * @param sslUri the URI of the stylesheet list file (.ssl)\n   * @param out a document handler\n   * @param browserInfo the browser information\n   * @throws org.xml.sax.SAXException\n   * @throws java.io.IOException\n   * @throws org.jasig.portal.PortalException\n   * @deprecated the preferred way to use org.jasig.portal.utils.XSLT is to instatiate it, call its set methods and then {@link #transform()}\n   */\n  public static void transform (String xml, URL sslUri, DocumentHandler out, BrowserInfo browserInfo) throws SAXException, IOException, PortalException {\n    transform(xml, sslUri, out, (Hashtable)null, (String)null, browserInfo);\n  }","id":16408,"modified_method":"/**\n   * Performs an XSL transformation.\n   * @param xml a string representing the xml document\n   * @param sslUri the URI of the stylesheet list file (.ssl)\n   * @param out a content handler\n   * @param browserInfo the browser information\n   * @throws org.jasig.portal.PortalException if something goes wrong\n   * @deprecated the preferred way to use org.jasig.portal.utils.XSLT is to instatiate it, call its set methods and then {@link #transform()}\n   */\n  public static void transform (String xml, URL sslUri, ContentHandler out, BrowserInfo browserInfo) throws PortalException {\n    transform(xml, sslUri, out, (Hashtable)null, (String)null, browserInfo);\n  }","commit_id":"b6e708dc547f477b6ad69c7aab6c8901ecafbf8b","url":"https://github.com/Jasig/uPortal"},{"original_method":"/**\n   * Performs an XSL transformation. Accepts stylesheet parameters\n   * (key, value pairs) stored in a Hashtable.\n   * @param xmlDoc a DOM object representing the xml document\n   * @param sslUri the URI of the stylesheet list file (.ssl)\n   * @param out a string writer\n   * @param stylesheetParams a Hashtable of key/value pairs or <code>null<\/code> if no parameters\n   * @param stylesheetTitle the title that identifies the stylesheet in the stylesheet list file (.ssl), <code>null<\/code> if no title\n   * @param browserInfo the browser information\n   * @throws org.xml.sax.SAXException\n   * @throws java.io.IOException\n   * @throws org.jasig.portal.PortalException\n   * @deprecated the preferred way to use org.jasig.portal.utils.XSLT is to instatiate it, call its set methods and then {@link #transform()}\n   */\n  public static void transform (Document xmlDoc, URL sslUri, StringWriter out, Hashtable stylesheetParams, String stylesheetTitle, BrowserInfo browserInfo) throws SAXException, IOException, PortalException {\n    XSLTInputSource xmlSource = new XSLTInputSource(xmlDoc);\n    XSLTResultTarget xmlResult = new XSLTResultTarget(out);\n    StylesheetSet set = getStylesheetSet(sslUri.toExternalForm());\n    set.setMediaProps(mediaProps);\n    XSLTProcessor processor = XSLTProcessorFactory.getProcessor(new org.apache.xalan.xpath.xdom.XercesLiaison());\n    StylesheetRoot stylesheetRoot = getStylesheetRoot(set.getStylesheetURI(stylesheetTitle, browserInfo));\n    processor.reset();\n    setStylesheetParams(processor, stylesheetParams);\n    stylesheetRoot.process(processor, xmlSource, xmlResult);\n  }","id":16409,"modified_method":"/**\n   * Performs an XSL transformation. Accepts stylesheet parameters\n   * (key, value pairs) stored in a Hashtable.\n   * @param xmlNode a DOM node of the document to be transformed\n   * @param sslUri the URI of the stylesheet list file (.ssl)\n   * @param out a string writer\n   * @param stylesheetParams a Hashtable of key/value pairs or <code>null<\/code> if no parameters\n   * @param stylesheetTitle the title that identifies the stylesheet in the stylesheet list file (.ssl), <code>null<\/code> if no title\n   * @param browserInfo the browser information\n   * @throws org.jasig.portal.PortalException if something goes wrong\n   * @deprecated the preferred way to use org.jasig.portal.utils.XSLT is to instatiate it, call its set methods and then {@link #transform()}\n   */\n  public static void transform (Node xmlNode, URL sslUri, StringWriter out, Hashtable stylesheetParams, String stylesheetTitle, BrowserInfo browserInfo) throws PortalException {\n      try {\n          StylesheetSet set = getStylesheetSet(sslUri.toExternalForm());\n          set.setMediaProps(mediaProps);\n          transform(new DOMSource(xmlNode), new StreamResult(out), stylesheetParams, set.getStylesheetURI(stylesheetTitle, browserInfo));\n      } catch (Exception e) {\n          throw new GeneralRenderingException(e.getMessage());\n      } \n  }","commit_id":"b6e708dc547f477b6ad69c7aab6c8901ecafbf8b","url":"https://github.com/Jasig/uPortal"},{"original_method":"/**\n   * Performs an XSL transformation.\n   * @param xml a string representing the xml document\n   * @param sslUri the URI of the stylesheet list file (.ssl)\n   * @param out a document handler\n   * @param stylesheetTitle the title that identifies the stylsheet in the stylesheet list file (.ssl)\n   * @param media the media type\n   * @throws org.xml.sax.SAXException\n   * @throws java.io.IOException\n   * @throws org.jasig.portal.PortalException\n   * @deprecated replaced by {@link #transform(String, URL, DocumentHandler, String, String)}\n   */\n  public static void transform (String xml, URL sslUri, DocumentHandler out, String stylesheetTitle, String media) throws SAXException, IOException, PortalException {\n    transform(xml, sslUri, out, (Hashtable)null, stylesheetTitle, media);\n  }","id":16410,"modified_method":"/**\n   * Performs an XSL transformation.\n   * @param xml a string representing the xml document\n   * @param sslUri the URI of the stylesheet list file (.ssl)\n   * @param out a content handler\n   * @param stylesheetTitle the title that identifies the stylsheet in the stylesheet list file (.ssl)\n   * @param media the media type\n   * @throws org.jasig.portal.PortalException if something goes wrong\n   * @deprecated replaced by {@link #transform(String, URL, ContentHandler, String, String)}\n   */\n  public static void transform (String xml, URL sslUri, ContentHandler out, String stylesheetTitle, String media) throws PortalException {\n    transform(xml, sslUri, out, (Hashtable)null, stylesheetTitle, media);\n  }","commit_id":"b6e708dc547f477b6ad69c7aab6c8901ecafbf8b","url":"https://github.com/Jasig/uPortal"},{"original_method":"/**\n   * Extracts name/value pairs from a Hashtable and uses them to create stylesheet parameters\n   * @param processor the XSLT processor\n   * @param stylesheetParams name/value pairs used as stylesheet parameters\n   * @deprecated replaced by {@link #setStylesheetParams(XSLTProcessor, HashMap)}\n   */\n  private static void setStylesheetParams (XSLTProcessor processor, Hashtable stylesheetParams) {\n    if (stylesheetParams != null) {\n      HashMap stylesheetParamsHashMap = new HashMap();\n      stylesheetParamsHashMap.putAll(stylesheetParams);\n      setStylesheetParams(processor, stylesheetParamsHashMap);\n    }\n  }","id":16411,"modified_method":"/**\n   * Extracts name/value pairs from a Hashtable and uses them to create stylesheet parameters\n   * @param processor the XSLT processor\n   * @param stylesheetParams name/value pairs used as stylesheet parameters\n   * @deprecated replaced by {@link #setStylesheetParams(XSLTProcessor, HashMap)}\n   */\n  private static void setStylesheetParams (Transformer transformer, Hashtable stylesheetParams) {\n    if (stylesheetParams != null) {\n      HashMap stylesheetParamsHashMap = new HashMap();\n      stylesheetParamsHashMap.putAll(stylesheetParams);\n      setStylesheetParams(transformer, stylesheetParamsHashMap);\n    }\n  }","commit_id":"b6e708dc547f477b6ad69c7aab6c8901ecafbf8b","url":"https://github.com/Jasig/uPortal"},{"original_method":"/**\n   * Configures the xsl source.\n   * @param xslUri the URL of an XSLT stylesheet\n   */    \n  public void setXSL(String xslUri) {\n    xslInputSource.setSystemId(xslUri);\n  }","id":16412,"modified_method":"/**\n   * Configures the xsl source.\n   * @param xslUri the URL of an XSLT stylesheet\n   */    \n  public void setXSL(String xslUri) {\n      this.xslURI=xslUri;\n  }","commit_id":"b6e708dc547f477b6ad69c7aab6c8901ecafbf8b","url":"https://github.com/Jasig/uPortal"},{"original_method":"/**\n   * Performs an XSL transformation.\n   * @param xml a string representing the xml document\n   * @param sslUri the URI of the stylesheet list file (.ssl)\n   * @param out a document handler\n   * @param media the media type\n   * @throws org.xml.sax.SAXException\n   * @throws java.io.IOException\n   * @throws org.jasig.portal.PortalException\n   * @deprecated replaced by {@link #transform(String, URL, DocumentHandler, String)}\n   */\n  public static void transform (String xml, URL sslUri, DocumentHandler out, String media) throws SAXException, IOException, PortalException {\n    transform(xml, sslUri, out, (Hashtable)null, (String)null, media);\n  }","id":16413,"modified_method":"/**\n   * Performs an XSL transformation.\n   * @param xml a string representing the xml document\n   * @param sslUri the URI of the stylesheet list file (.ssl)\n   * @param out a content handler\n   * @param media the media type\n   * @throws org.jasig.portal.PortalException if something goes wrong\n   * @deprecated replaced by {@link #transform(String, URL, ContentHandler, String)}\n   */\n  public static void transform (String xml, URL sslUri, ContentHandler out, String media) throws PortalException {\n    transform(xml, sslUri, out, (Hashtable)null, (String)null, media);\n  }","commit_id":"b6e708dc547f477b6ad69c7aab6c8901ecafbf8b","url":"https://github.com/Jasig/uPortal"},{"original_method":"/**\n   * Performs an XSL transformation.\n   * @param xmlDoc a DOM object representing the xml document\n   * @param sslUri the URI of the stylesheet list file (.ssl)\n   * @param out a document handler\n   * @param media the media type\n   * @throws org.xml.sax.SAXException\n   * @throws java.io.IOException\n   * @throws org.jasig.portal.PortalException\n   * @deprecated replaced by {@link #transform(Document, URL, DocumentHandler, String)}\n   */\n  public static void transform (Document xmlDoc, URL sslUri, DocumentHandler out, String media) throws SAXException, IOException, PortalException {\n    transform(xmlDoc, sslUri, out, (Hashtable)null, (String)null, media);\n  }","id":16414,"modified_method":"/**\n   * Performs an XSL transformation.\n   * @param xmlNode a DOM node of the document to be transformed\n   * @param sslUri the URI of the stylesheet list file (.ssl)\n   * @param out a content handler\n   * @param media the media type\n   * @throws org.jasig.portal.PortalException if something goes wrong\n   * @deprecated replaced by {@link #transform(Node, URL, ContentHandler, String)}\n   */\n  public static void transform (Node xmlNode, URL sslUri, ContentHandler out, String media) throws PortalException {\n    transform(xmlNode, sslUri, out, (Hashtable)null, (String)null, media);\n  }","commit_id":"b6e708dc547f477b6ad69c7aab6c8901ecafbf8b","url":"https://github.com/Jasig/uPortal"},{"original_method":"/**\n   * Configures the xml source.\n   * @param xml a string representing the xml document\n   */  \n  public void setXML(String xml) {\n    xmlInputSource.setCharacterStream(new StringReader(xml));\n  }","id":16415,"modified_method":"/**\n   * Configures the xml source.\n   * @param xml a string representing the xml document\n   */  \n  public void setXML(String xml) {\n      xmlSource=new StreamSource(new StringReader(xml));\n  }","commit_id":"b6e708dc547f477b6ad69c7aab6c8901ecafbf8b","url":"https://github.com/Jasig/uPortal"},{"original_method":"/**\n   * Performs an XSL transformation. Accepts stylesheet parameters\n   * (key, value pairs) stored in a Hashtable.\n   * @param xmlDoc a DOM object representing the xml document\n   * @param sslUri the URI of the stylesheet list file (.ssl)\n   * @param out a StringWriter\n   * @param stylesheetParams a Hashtable of key/value pairs or <code>null<\/code> if no parameters\n   * @param browserInfo the browser information\n   * @throws org.xml.sax.SAXException\n   * @throws java.io.IOException\n   * @throws org.jasig.portal.PortalException\n   * @deprecated the preferred way to use org.jasig.portal.utils.XSLT is to instatiate it, call its set methods and then {@link #transform()}\n   */\n  public static void transform (Document xmlDoc, URL sslUri, StringWriter out, Hashtable stylesheetParams, BrowserInfo browserInfo) throws SAXException, IOException, PortalException {\n    transform(xmlDoc, sslUri, out, stylesheetParams, (String)null, browserInfo);\n  }","id":16416,"modified_method":"/**\n   * Performs an XSL transformation. Accepts stylesheet parameters\n   * (key, value pairs) stored in a Hashtable.\n   * @param xmlNode a DOM node of the document to be transformed\n   * @param sslUri the URI of the stylesheet list file (.ssl)\n   * @param out a StringWriter\n   * @param stylesheetParams a Hashtable of key/value pairs or <code>null<\/code> if no parameters\n   * @param browserInfo the browser information\n   * @throws org.jasig.portal.PortalException if something goes wrong\n   * @deprecated the preferred way to use org.jasig.portal.utils.XSLT is to instatiate it, call its set methods and then {@link #transform()}\n   */\n  public static void transform (Node xmlNode, URL sslUri, StringWriter out, Hashtable stylesheetParams, BrowserInfo browserInfo) throws PortalException {\n    transform(xmlNode, sslUri, out, stylesheetParams, (String)null, browserInfo);\n  }","commit_id":"b6e708dc547f477b6ad69c7aab6c8901ecafbf8b","url":"https://github.com/Jasig/uPortal"},{"original_method":"/**\n   * Performs an XSL transformation. Accepts stylesheet parameters\n   * (key, value pairs) stored in a Hashtable.\n   * @param xmlDoc a DOM object representing the xml document\n   * @param sslUri the URI of the stylesheet list file (.ssl)\n   * @param out a document handler\n   * @param stylesheetParams a Hashtable of key/value pairs or <code>null<\/code> if no parameters\n   * @param browserInfo the browser information\n   * @throws org.xml.sax.SAXException\n   * @throws java.io.IOException\n   * @throws org.jasig.portal.PortalException\n   * @deprecated the preferred way to use org.jasig.portal.utils.XSLT is to instatiate it, call its set methods and then {@link #transform()}\n   */\n  public static void transform (Document xmlDoc, URL sslUri, DocumentHandler out, Hashtable stylesheetParams, BrowserInfo browserInfo) throws SAXException, IOException, PortalException {\n    transform(xmlDoc, sslUri, out, stylesheetParams, (String)null, browserInfo);\n  }","id":16417,"modified_method":"/**\n   * Performs an XSL transformation. Accepts stylesheet parameters\n   * (key, value pairs) stored in a Hashtable.\n   * @param xmlNode a DOM node of the document to be transformed\n   * @param sslUri the URI of the stylesheet list file (.ssl)\n   * @param out a content handler\n   * @param stylesheetParams a Hashtable of key/value pairs or <code>null<\/code> if no parameters\n   * @param browserInfo the browser information\n   * @throws org.jasig.portal.PortalException if something goes wrong\n   * @deprecated the preferred way to use org.jasig.portal.utils.XSLT is to instatiate it, call its set methods and then {@link #transform()}\n   */\n  public static void transform (Node xmlNode, URL sslUri, ContentHandler out, Hashtable stylesheetParams, BrowserInfo browserInfo) throws PortalException {\n    transform(xmlNode, sslUri, out, stylesheetParams, (String)null, browserInfo);\n  }","commit_id":"b6e708dc547f477b6ad69c7aab6c8901ecafbf8b","url":"https://github.com/Jasig/uPortal"},{"original_method":"/**\n   * Configures the xml source.\n   * @param xml a node representing the xml document\n   */  \n  public void setXML(Node xml) {\n    xmlInputSource.setNode(xml);\n  }","id":16418,"modified_method":"/**\n   * Configures the xml source.\n   * @param xml a node representing the xml document\n   */  \n  public void setXML(Node xml) {\n      xmlSource=new DOMSource(xml);\n  }","commit_id":"b6e708dc547f477b6ad69c7aab6c8901ecafbf8b","url":"https://github.com/Jasig/uPortal"},{"original_method":"/**\n   * Performs an XSL transformation. Accepts stylesheet parameters\n   * (key, value pairs) stored in a Hashtable.\n   * @param xmlDoc a DOM object representing the xml document\n   * @param sslUri the URI of the stylesheet list file (.ssl)\n   * @param out a document handler\n   * @param stylesheetParams a Hashtable of key/value pairs or <code>null<\/code> if no parameters\n   * @param stylesheetTitle the title that identifies the stylesheet in the stylesheet list file (.ssl), <code>null<\/code> if no title\n   * @param browserInfo the browser information\n   * @throws org.xml.sax.SAXException\n   * @throws java.io.IOException\n   * @throws org.jasig.portal.PortalException\n   * @deprecated the preferred way to use org.jasig.portal.utils.XSLT is to instatiate it, call its set methods and then {@link #transform()}\n   */\n  public static void transform (Document xmlDoc, URL sslUri, DocumentHandler out, Hashtable stylesheetParams, String stylesheetTitle, BrowserInfo browserInfo) throws SAXException, IOException, PortalException {\n    XSLTInputSource xmlSource = new XSLTInputSource(xmlDoc);\n    XSLTResultTarget xmlResult = new XSLTResultTarget(out);\n    StylesheetSet set = getStylesheetSet(sslUri.toExternalForm());\n    set.setMediaProps(mediaProps);\n    XSLTProcessor processor = XSLTProcessorFactory.getProcessor(new org.apache.xalan.xpath.xdom.XercesLiaison());\n    StylesheetRoot stylesheetRoot = getStylesheetRoot(set.getStylesheetURI(stylesheetTitle, browserInfo));\n    processor.reset();\n    setStylesheetParams(processor, stylesheetParams);\n    stylesheetRoot.process(processor, xmlSource, xmlResult);\n  }","id":16419,"modified_method":"/**\n   * Performs an XSL transformation. Accepts stylesheet parameters\n   * (key, value pairs) stored in a Hashtable.\n   * @param xmlNode a DOM node of the document to be transformed\n   * @param sslUri the URI of the stylesheet list file (.ssl)\n   * @param out a content handler\n   * @param stylesheetParams a Hashtable of key/value pairs or <code>null<\/code> if no parameters\n   * @param stylesheetTitle the title that identifies the stylesheet in the stylesheet list file (.ssl), <code>null<\/code> if no title\n   * @param browserInfo the browser information\n   * @throws org.jasig.portal.PortalException if something goes wrong\n   * @deprecated the preferred way to use org.jasig.portal.utils.XSLT is to instatiate it, call its set methods and then {@link #transform()}\n   */\n  public static void transform (Node xmlNode, URL sslUri, ContentHandler out, Hashtable stylesheetParams, String stylesheetTitle, BrowserInfo browserInfo) throws PortalException {\n      try {\n          StylesheetSet set = getStylesheetSet(sslUri.toExternalForm());\n          set.setMediaProps(mediaProps);\n          transform(new DOMSource(xmlNode), new SAXResult(out), stylesheetParams, set.getStylesheetURI(stylesheetTitle, browserInfo));\n      } catch (Exception e) {\n          throw new GeneralRenderingException(e.getMessage());\n      } \n  }","commit_id":"b6e708dc547f477b6ad69c7aab6c8901ecafbf8b","url":"https://github.com/Jasig/uPortal"},{"original_method":"/**\n   * Performs an XSL transformation. Accepts stylesheet parameters\n   * (key, value pairs) stored in a Hashtable.\n   * @param xmlDoc a DOM object representing the xml document\n   * @param xslUri the URI of the stylesheet file (.xsl)\n   * @param out a document handler\n   * @param stylesheetParams a Hashtable of key/value pairs or <code>null<\/code> if no parameters\n   * @throws org.xml.sax.SAXException\n   * @throws java.io.IOException\n   * @throws org.jasig.portal.ResourceMissingException\n   * @deprecated the preferred way to use org.jasig.portal.utils.XSLT is to instatiate it, call its set methods and then {@link #transform()}\n   */\n  public static void transform (Document xmlDoc, URL xslUri, DocumentHandler out, Hashtable stylesheetParams) throws SAXException, IOException, ResourceMissingException {\n    XSLTInputSource xmlSource = new XSLTInputSource(xmlDoc);\n    XSLTResultTarget xmlResult = new XSLTResultTarget(out);\n    XSLTProcessor processor = XSLTProcessorFactory.getProcessor(new org.apache.xalan.xpath.xdom.XercesLiaison());\n    StylesheetRoot stylesheetRoot = getStylesheetRoot(xslUri.toExternalForm());\n    processor.reset();\n    setStylesheetParams(processor, stylesheetParams);\n    stylesheetRoot.process(processor, xmlSource, xmlResult);\n  }","id":16420,"modified_method":"/**\n   * Performs an XSL transformation. Accepts stylesheet parameters\n   * (key, value pairs) stored in a Hashtable.\n   * @param xmlNode a DOM object representing the xml document\n   * @param xslUri the URI of the stylesheet file (.xsl)\n   * @param out a content handler\n   * @param stylesheetParams a Hashtable of key/value pairs or <code>null<\/code> if no parameters\n   * @throws org.jasig.portal.PortalException if something goes wrong\n   * @deprecated the preferred way to use org.jasig.portal.utils.XSLT is to instatiate it, call its set methods and then {@link #transform()}\n   */\n  public static void transform (Node xmlNode, URL xslUri, ContentHandler out, Hashtable stylesheetParams) throws PortalException {\n      transform(new DOMSource(xmlNode), new SAXResult(out), stylesheetParams, xslUri.toString());\n  }","commit_id":"b6e708dc547f477b6ad69c7aab6c8901ecafbf8b","url":"https://github.com/Jasig/uPortal"},{"original_method":"/**\r\n     * @see org.opencms.workplace.CmsWidgetDialog#createDialogHtml(java.lang.String)\r\n     */\r\n    @Override\r\n    protected String createDialogHtml(String dialog) {\r\n\r\n        StringBuffer result = new StringBuffer(1024);\r\n        result.append(createWidgetTableStart());\r\n\r\n        // show error header once if there were validation errors\r\n        result.append(createWidgetErrorHeader());\r\n\r\n        String title = m_site.getTitle();\r\n        int count = 3;\r\n        // site info\r\n        result.append(dialogBlockStart(Messages.get().getBundle().key(Messages.GUI_SITES_DETAIL_INFO_1, title)));\r\n        result.append(createWidgetTableStart());\r\n        result.append(createDialogRowsHtml(0, count));\r\n        result.append(createWidgetTableEnd());\r\n        result.append(dialogBlockEnd());\r\n        if (m_site.getSecureUrl() != null) {\r\n            // secure site\r\n            result.append(dialogBlockStart(Messages.get().getBundle().key(Messages.GUI_SITES_DETAIL_SECURE_1, title)));\r\n            result.append(createWidgetTableStart());\r\n            result.append(createDialogRowsHtml(++count, count + 2));\r\n            result.append(createWidgetTableEnd());\r\n            result.append(dialogBlockEnd());\r\n            count += 2;\r\n        }\r\n        if (!m_site.getAliases().isEmpty()) {\r\n            // aliases\r\n            result.append(dialogBlockStart(Messages.get().getBundle().key(Messages.GUI_SITES_DETAIL_ALIASES_1, title)));\r\n            result.append(createWidgetTableStart());\r\n            if (DIALOG_EDIT.equals(getParamEditAction()) || DIALOG_NEW.equals(getParamEditAction())) {\r\n                result.append(createDialogRowsHtml(++count, count));\r\n            } else {\r\n                result.append(createDialogRowsHtml(++count, (count + m_site.getAliases().size()) - 1));\r\n            }\r\n            result.append(createWidgetTableEnd());\r\n            result.append(dialogBlockEnd());\r\n        }\r\n        result.append(createWidgetTableEnd());\r\n        return result.toString();\r\n    }","id":16421,"modified_method":"/**\r\n     * @see org.opencms.workplace.CmsWidgetDialog#createDialogHtml(java.lang.String)\r\n     */\r\n    @Override\r\n    protected String createDialogHtml(String dialog) {\r\n\r\n        StringBuffer result = new StringBuffer(1024);\r\n        result.append(createWidgetTableStart());\r\n\r\n        // show error header once if there were validation errors\r\n        result.append(createWidgetErrorHeader());\r\n\r\n        String title = m_site.getTitle();\r\n        int count = 3;\r\n\r\n        // site info\r\n        result.append(dialogBlockStart(Messages.get().getBundle().key(Messages.GUI_SITES_DETAIL_INFO_1, title)));\r\n        result.append(createWidgetTableStart());\r\n        result.append(createDialogRowsHtml(0, count));\r\n        result.append(createWidgetTableEnd());\r\n        result.append(dialogBlockEnd());\r\n        if (CmsStringUtil.isNotEmptyOrWhitespaceOnly(m_site.getSecureUrl())) {\r\n            // secure site\r\n            result.append(dialogBlockStart(Messages.get().getBundle().key(Messages.GUI_SITES_DETAIL_SECURE_1, title)));\r\n            result.append(createWidgetTableStart());\r\n            result.append(createDialogRowsHtml(++count, count + 2));\r\n            result.append(createWidgetTableEnd());\r\n            result.append(dialogBlockEnd());\r\n            count += 2;\r\n        }\r\n\r\n        // site aliases\r\n        if ((DIALOG_EDIT.equals(getParamEditAction()) || DIALOG_NEW.equals(getParamEditAction()))\r\n            || !m_site.getAliases().isEmpty()) {\r\n            result.append(dialogBlockStart(Messages.get().getBundle().key(Messages.GUI_SITES_DETAIL_ALIASES_1, title)));\r\n            result.append(createWidgetTableStart());\r\n            if (DIALOG_EDIT.equals(getParamEditAction()) || DIALOG_NEW.equals(getParamEditAction())) {\r\n                result.append(createDialogRowsHtml(++count, count));\r\n            } else if (!m_site.getAliases().isEmpty()) {\r\n                result.append(createDialogRowsHtml(++count, (count + m_site.getAliases().size()) - 1));\r\n            }\r\n            result.append(createWidgetTableEnd());\r\n            result.append(dialogBlockEnd());\r\n        }\r\n\r\n        // close the beginning table\r\n        result.append(createWidgetTableEnd());\r\n        return result.toString();\r\n    }","commit_id":"bcb351df5832264a8e54a60f414c17a622efbf44","url":"https://github.com/alkacon/opencms-core"},{"original_method":"/**\r\n     * Build select options for the position.<p>\r\n     * \r\n     * @param currSite the current selected site \r\n     * \r\n     * @return the select options\r\n     */\r\n    private List<CmsSelectWidgetOption> createNavigationSelectOptions(CmsSiteDialogObject currSite) {\r\n\r\n        List<CmsSite> sites = new ArrayList<CmsSite>();\r\n        for (CmsSite site : OpenCms.getSiteManager().getAvailableSites(getCms(), true)) {\r\n            if (site.getSiteMatcher() != null) {\r\n                sites.add(site);\r\n            }\r\n        }\r\n\r\n        float maxValue = 0;\r\n        float nextPos = 0;\r\n\r\n        // calculate value for the first navigation position\r\n        float firstValue = 1;\r\n        if (sites.size() > 0) {\r\n            try {\r\n                maxValue = sites.get(0).getPosition();\r\n            } catch (Exception e) {\r\n                // should usually never happen\r\n            }\r\n        }\r\n\r\n        if (maxValue != 0) {\r\n            firstValue = maxValue / 2;\r\n        }\r\n\r\n        List<String> options = new ArrayList<String>(sites.size() + 1);\r\n        List<String> values = new ArrayList<String>(sites.size() + 1);\r\n\r\n        // add the first entry: before first element\r\n        options.add(getMessages().key(org.opencms.workplace.commons.Messages.GUI_CHNAV_POS_FIRST_0));\r\n        values.add(firstValue + \"\");\r\n\r\n        // show all present navigation elements in box\r\n        for (int i = 0; i < sites.size(); i++) {\r\n            String navText = sites.get(i).getTitle();\r\n            float navPos = sites.get(i).getPosition();\r\n            String siteRoot = sites.get(i).getSiteRoot();\r\n            // get position of next nav element\r\n            nextPos = navPos + 2;\r\n            if ((i + 1) < sites.size()) {\r\n                nextPos = sites.get(i + 1).getPosition();\r\n            }\r\n            // calculate new position of current nav element\r\n            float newPos;\r\n            if ((nextPos - navPos) > 1) {\r\n                newPos = navPos + 1;\r\n            } else {\r\n                newPos = (navPos + nextPos) / 2;\r\n            }\r\n            // check new maxValue of positions and increase it\r\n            if (navPos > maxValue) {\r\n                maxValue = navPos;\r\n            }\r\n            // if the element is the current file, mark it in select box\r\n            if ((currSite != null) && (currSite.getSiteRoot() != null) && currSite.getSiteRoot().equals(siteRoot)) {\r\n                options.add(CmsEncoder.escapeHtml(getMessages().key(\r\n                    org.opencms.workplace.commons.Messages.GUI_CHNAV_POS_CURRENT_1,\r\n                    new Object[] {sites.get(i).getSiteRoot()})));\r\n                values.add(\"-1\");\r\n            } else {\r\n                options.add(CmsEncoder.escapeHtml(navText + \" [\" + sites.get(i).getSiteRoot() + \"/]\"));\r\n                values.add(newPos + \"\");\r\n            }\r\n        }\r\n\r\n        // add the entry: at the last position\r\n        options.add(getMessages().key(org.opencms.workplace.commons.Messages.GUI_CHNAV_POS_LAST_0));\r\n        values.add((maxValue + 1) + \"\");\r\n\r\n        // add the entry: no change\r\n        options.add(getMessages().key(org.opencms.workplace.commons.Messages.GUI_CHNAV_NO_CHANGE_0));\r\n        if ((currSite != null) && (currSite.getPosition() == Float.MAX_VALUE)) {\r\n            // current resource has no valid position, use \"last position\"\r\n            values.add((maxValue + 1) + \"\");\r\n        } else {\r\n            // current resource has valid position, use \"-1\" for no change\r\n            values.add(\"-1\");\r\n        }\r\n        List<CmsSelectWidgetOption> result = new ArrayList<CmsSelectWidgetOption>();\r\n        for (int i = 0; i < values.size(); i++) {\r\n            String val = values.get(i);\r\n            String opt = options.get(i);\r\n            result.add(new CmsSelectWidgetOption(val, false, opt));\r\n        }\r\n        return result;\r\n    }","id":16422,"modified_method":"/**\r\n     * Build select options for the position.<p>\r\n     * \r\n     * @param currSite the current selected site \r\n     * \r\n     * @return the select options\r\n     */\r\n    private List<CmsSelectWidgetOption> createNavOpts(CmsSiteDialogObject currSite) {\r\n\r\n        List<CmsSite> sites = new ArrayList<CmsSite>();\r\n        for (CmsSite site : OpenCms.getSiteManager().getAvailableSites(getCms(), true)) {\r\n            if (site.getSiteMatcher() != null) {\r\n                sites.add(site);\r\n            }\r\n        }\r\n\r\n        float maxValue = 0;\r\n        float nextPos = 0;\r\n\r\n        // calculate value for the first navigation position\r\n        float firstValue = 1;\r\n        if (sites.size() > 0) {\r\n            try {\r\n                maxValue = sites.get(0).getPosition();\r\n            } catch (Exception e) {\r\n                // should usually never happen\r\n            }\r\n        }\r\n\r\n        if (maxValue != 0) {\r\n            firstValue = maxValue / 2;\r\n        }\r\n\r\n        List<String> options = new ArrayList<String>(sites.size() + 1);\r\n        List<String> values = new ArrayList<String>(sites.size() + 1);\r\n\r\n        // add the first entry: before first element\r\n        options.add(getMessages().key(org.opencms.workplace.commons.Messages.GUI_CHNAV_POS_FIRST_0));\r\n        values.add(firstValue + \"\");\r\n\r\n        // show all present navigation elements in box\r\n        for (int i = 0; i < sites.size(); i++) {\r\n            String navText = sites.get(i).getTitle();\r\n            float navPos = sites.get(i).getPosition();\r\n            String siteRoot = sites.get(i).getSiteRoot();\r\n            // get position of next nav element\r\n            nextPos = navPos + 2;\r\n            if ((i + 1) < sites.size()) {\r\n                nextPos = sites.get(i + 1).getPosition();\r\n            }\r\n            // calculate new position of current nav element\r\n            float newPos;\r\n            if ((nextPos - navPos) > 1) {\r\n                newPos = navPos + 1;\r\n            } else {\r\n                newPos = (navPos + nextPos) / 2;\r\n            }\r\n            // check new maxValue of positions and increase it\r\n            if (navPos > maxValue) {\r\n                maxValue = navPos;\r\n            }\r\n            // if the element is the current file, mark it in select box\r\n            if ((currSite != null) && (currSite.getSiteRoot() != null) && currSite.getSiteRoot().equals(siteRoot)) {\r\n                options.add(CmsEncoder.escapeHtml(getMessages().key(\r\n                    org.opencms.workplace.commons.Messages.GUI_CHNAV_POS_CURRENT_1,\r\n                    new Object[] {sites.get(i).getSiteRoot()})));\r\n                values.add(\"-1\");\r\n            } else {\r\n                options.add(CmsEncoder.escapeHtml(navText + \" [\" + sites.get(i).getSiteRoot() + \"/]\"));\r\n                values.add(newPos + \"\");\r\n            }\r\n        }\r\n\r\n        // add the entry: at the last position\r\n        options.add(getMessages().key(org.opencms.workplace.commons.Messages.GUI_CHNAV_POS_LAST_0));\r\n        values.add((maxValue + 1) + \"\");\r\n\r\n        // add the entry: no change\r\n        options.add(getMessages().key(org.opencms.workplace.commons.Messages.GUI_CHNAV_NO_CHANGE_0));\r\n        if ((currSite != null) && (currSite.getPosition() == Float.MAX_VALUE)) {\r\n            // current resource has no valid position, use \"last position\"\r\n            values.add((maxValue + 1) + \"\");\r\n        } else {\r\n            // current resource has valid position, use \"-1\" for no change\r\n            values.add(\"-1\");\r\n        }\r\n        List<CmsSelectWidgetOption> result = new ArrayList<CmsSelectWidgetOption>();\r\n        for (int i = 0; i < values.size(); i++) {\r\n            String val = values.get(i);\r\n            String opt = options.get(i);\r\n            result.add(new CmsSelectWidgetOption(val, false, opt));\r\n        }\r\n        return result;\r\n    }","commit_id":"bcb351df5832264a8e54a60f414c17a622efbf44","url":"https://github.com/alkacon/opencms-core"},{"original_method":"/**\r\n     * Initializes the dialog site object.<p>\r\n     */\r\n    private void initSite() {\r\n\r\n        Object o = null;\r\n        if (CmsStringUtil.isEmpty(getParamAction()) || CmsDialog.DIALOG_INITIAL.equals(getParamAction())) {\r\n            // this is the initial dialog call\r\n            if (CmsStringUtil.isNotEmpty(m_paramSites)) {\r\n                // edit an existing module, get it from manager\r\n                o = OpenCms.getSiteManager().getSiteForSiteRoot(m_paramSites);\r\n            }\r\n        } else {\r\n            // this is not the initial call, get site from session\r\n            o = getDialogObject();\r\n        }\r\n        if (o instanceof CmsSite) {\r\n            // reuse site stored in session\r\n            m_site = new CmsSiteDialogObject((CmsSite)o);\r\n        } else if (o instanceof CmsSiteDialogObject) {\r\n            // create a new site\r\n            m_site = (CmsSiteDialogObject)o;\r\n        } else if (DIALOG_NEW.equals(getParamEditAction())) {\r\n            m_site = new CmsSiteDialogObject();\r\n        } else {\r\n            try {\r\n                getToolManager().jspForwardTool(this, \"/sites\", new HashMap<String, String[]>());\r\n            } catch (Exception e) {\r\n                // noop\r\n            }\r\n        }\r\n\r\n        m_aliases = new ArrayList<String>();\r\n        for (CmsSiteMatcher siteMatcher : m_site.getAliases()) {\r\n            if ((siteMatcher != null) && (siteMatcher.getUrl() != null)) {\r\n                m_aliases.add(siteMatcher.getUrl());\r\n            }\r\n        }\r\n\r\n        setDialogObject(m_site);\r\n    }","id":16423,"modified_method":"/**\r\n     * Initializes the dialog site object.<p>\r\n     */\r\n    private void initSite() {\r\n\r\n        Object o = null;\r\n        if (CmsStringUtil.isEmpty(getParamAction()) || CmsDialog.DIALOG_INITIAL.equals(getParamAction())) {\r\n            // this is the initial dialog call\r\n            if (CmsStringUtil.isNotEmpty(m_paramSites)) {\r\n                // edit an existing module, get it from manager\r\n                o = OpenCms.getSiteManager().getSiteForSiteRoot(m_paramSites);\r\n            }\r\n        } else {\r\n            // this is not the initial call, get site from session\r\n            o = getDialogObject();\r\n        }\r\n        if (o instanceof CmsSite) {\r\n            // reuse site stored in session\r\n            m_site = new CmsSiteDialogObject((CmsSite)o);\r\n        } else if (o instanceof CmsSiteDialogObject) {\r\n            // create a new site\r\n            m_site = (CmsSiteDialogObject)o;\r\n        } else if (DIALOG_NEW.equals(getParamEditAction())) {\r\n            m_site = new CmsSiteDialogObject();\r\n        } else {\r\n            try {\r\n                getToolManager().jspForwardTool(this, \"/sites\", new HashMap<String, String[]>());\r\n            } catch (Exception e) {\r\n                // noop\r\n            }\r\n        }\r\n\r\n        m_aliases = new ArrayList<String>();\r\n        for (CmsSiteMatcher siteMatcher : m_site.getAliases()) {\r\n            if ((siteMatcher != null) && (siteMatcher.getUrl() != null)) {\r\n                m_aliases.add(siteMatcher.getUrl());\r\n            }\r\n        }\r\n        if (!m_site.hasSecureServer()) {\r\n            m_site.setSecureUrl(\"\");\r\n        }\r\n\r\n        setDialogObject(m_site);\r\n    }","commit_id":"bcb351df5832264a8e54a60f414c17a622efbf44","url":"https://github.com/alkacon/opencms-core"},{"original_method":"/**\r\n     * @see org.opencms.workplace.CmsWidgetDialog#defineWidgets()\r\n     */\r\n    @Override\r\n    protected void defineWidgets() {\r\n\r\n        initSite();\r\n        setKeyPrefix(CmsSiteDialogObject.KEY_PREFIX_SITES);\r\n\r\n        CmsSelectWidget sel = new CmsSelectWidget(createNavigationSelectOptions(m_site));\r\n\r\n        if (DIALOG_NEW.equals(getParamEditAction())) {\r\n            // new site\r\n            addWidget(new CmsWidgetDialogParameter(m_site, \"siteRoot\", PAGES[0], new CmsVfsFileWidget(\r\n                false,\r\n                \"/sites\",\r\n                false,\r\n                false)));\r\n            addWidget(new CmsWidgetDialogParameter(m_site, \"title\", PAGES[0], new CmsInputWidget()));\r\n            addWidget(new CmsWidgetDialogParameter(m_site, \"position\", PAGES[0], sel));\r\n            addWidget(new CmsWidgetDialogParameter(m_site, \"server\", PAGES[0], new CmsInputWidget()));\r\n            m_site.setSecureUrl(\"\");\r\n            addWidget(new CmsWidgetDialogParameter(m_site, \"secureUrl\", PAGES[0], new CmsInputWidget()));\r\n            addWidget(new CmsWidgetDialogParameter(m_site, \"exclusiveUrl\", PAGES[0], new CmsCheckboxWidget()));\r\n            addWidget(new CmsWidgetDialogParameter(m_site, \"exclusiveError\", PAGES[0], new CmsCheckboxWidget()));\r\n        } else if (DIALOG_EDIT.equals(getParamEditAction())) {\r\n            // edit site\r\n            addWidget(new CmsWidgetDialogParameter(m_site, \"siteRoot\", PAGES[0], new CmsDisplayWidget()));\r\n            addWidget(new CmsWidgetDialogParameter(m_site, \"title\", PAGES[0], new CmsInputWidget()));\r\n            addWidget(new CmsWidgetDialogParameter(m_site, \"position\", PAGES[0], sel));\r\n            addWidget(new CmsWidgetDialogParameter(m_site, \"server\", PAGES[0], new CmsInputWidget()));\r\n            if (m_site.hasSecureServer()) {\r\n                addWidget(new CmsWidgetDialogParameter(m_site, \"secureUrl\", PAGES[0], new CmsInputWidget()));\r\n                addWidget(new CmsWidgetDialogParameter(m_site, \"exclusiveUrl\", PAGES[0], new CmsCheckboxWidget()));\r\n                addWidget(new CmsWidgetDialogParameter(m_site, \"exclusiveError\", PAGES[0], new CmsCheckboxWidget()));\r\n            }\r\n        } else {\r\n            // display site\r\n            addWidget(new CmsWidgetDialogParameter(m_site, \"siteRoot\", PAGES[0], new CmsDisplayWidget()));\r\n            CmsWidgetDialogParameter t = new CmsWidgetDialogParameter(m_site, \"title\", PAGES[0], new CmsDisplayWidget());\r\n            t.setStringValue(getCms(), resolveMacros(m_site.getTitle()));\r\n            addWidget(t);\r\n            addWidget(new CmsWidgetDialogParameter(m_site, \"position\", PAGES[0], new CmsDisplayWidget()));\r\n            addWidget(new CmsWidgetDialogParameter(m_site, \"server\", PAGES[0], new CmsDisplayWidget()));\r\n            if (m_site.hasSecureServer()) {\r\n                addWidget(new CmsWidgetDialogParameter(m_site, \"secureUrl\", PAGES[0], new CmsDisplayWidget()));\r\n                addWidget(new CmsWidgetDialogParameter(m_site, \"exclusiveUrl\", PAGES[0], new CmsDisplayWidget()));\r\n                addWidget(new CmsWidgetDialogParameter(m_site, \"exclusiveError\", PAGES[0], new CmsDisplayWidget()));\r\n            }\r\n        }\r\n\r\n        if (DIALOG_EDIT.equals(getParamEditAction()) || DIALOG_NEW.equals(getParamEditAction())) {\r\n            addWidget(new CmsWidgetDialogParameter(this, \"aliases\", PAGES[0], new CmsInputWidget()));\r\n        } else {\r\n            int count = 0;\r\n            for (CmsSiteMatcher siteMatcher : m_site.getAliases()) {\r\n                CmsWidgetDialogParameter alias = new CmsWidgetDialogParameter(\r\n                    siteMatcher.getUrl(),\r\n                    siteMatcher.getUrl(),\r\n                    Messages.get().getBundle().key(Messages.GUI_SITES_DETAIL_LABEL_ALIAS_0) + \" [\" + (count + 1) + \"]\",\r\n                    new CmsDisplayWidget(),\r\n                    PAGES[0],\r\n                    1,\r\n                    1,\r\n                    count);\r\n                addWidget(alias);\r\n                count++;\r\n            }\r\n            addWidget(new CmsWidgetDialogParameter(this, \"aliases\", PAGES[0], new CmsDisplayWidget()));\r\n        }\r\n    }","id":16424,"modified_method":"/**\r\n     * @see org.opencms.workplace.CmsWidgetDialog#defineWidgets()\r\n     */\r\n    @Override\r\n    protected void defineWidgets() {\r\n\r\n        initSite();\r\n        setKeyPrefix(CmsSiteDialogObject.KEY_PREFIX_SITES);\r\n\r\n        if (DIALOG_NEW.equals(getParamEditAction()) || DIALOG_EDIT.equals(getParamEditAction())) {\r\n            // edit or new\r\n            // site info\r\n            addWidget(new CmsWidgetDialogParameter(m_site, \"siteRoot\", PAGES[0], new CmsVfsFileWidget(\r\n                false,\r\n                \"/sites\",\r\n                false,\r\n                false)));\r\n            addWidget(new CmsWidgetDialogParameter(m_site, \"title\", PAGES[0], new CmsInputWidget()));\r\n            addWidget(new CmsWidgetDialogParameter(m_site, \"position\", PAGES[0], new CmsSelectWidget(\r\n                createNavOpts(m_site))));\r\n            addWidget(new CmsWidgetDialogParameter(m_site, \"server\", PAGES[0], new CmsInputWidget()));\r\n\r\n            // secure site\r\n            addWidget(new CmsWidgetDialogParameter(m_site, \"secureUrl\", PAGES[0], new CmsInputWidget()));\r\n            addWidget(new CmsWidgetDialogParameter(m_site, \"exclusiveUrl\", PAGES[0], new CmsCheckboxWidget()));\r\n            addWidget(new CmsWidgetDialogParameter(m_site, \"exclusiveError\", PAGES[0], new CmsCheckboxWidget()));\r\n\r\n            // site aliases\r\n            addWidget(new CmsWidgetDialogParameter(this, \"aliases\", PAGES[0], new CmsInputWidget()));\r\n        } else {\r\n            // display site\r\n            addWidget(new CmsWidgetDialogParameter(m_site, \"siteRoot\", PAGES[0], new CmsDisplayWidget()));\r\n            CmsWidgetDialogParameter t = new CmsWidgetDialogParameter(m_site, \"title\", PAGES[0], new CmsDisplayWidget());\r\n            t.setStringValue(getCms(), resolveMacros(m_site.getTitle()));\r\n            addWidget(t);\r\n            addWidget(new CmsWidgetDialogParameter(m_site, \"position\", PAGES[0], new CmsDisplayWidget()));\r\n            addWidget(new CmsWidgetDialogParameter(m_site, \"server\", PAGES[0], new CmsDisplayWidget()));\r\n            if (m_site.hasSecureServer()) {\r\n                addWidget(new CmsWidgetDialogParameter(m_site, \"secureUrl\", PAGES[0], new CmsDisplayWidget()));\r\n                addWidget(new CmsWidgetDialogParameter(m_site, \"exclusiveUrl\", PAGES[0], new CmsDisplayWidget()));\r\n                addWidget(new CmsWidgetDialogParameter(m_site, \"exclusiveError\", PAGES[0], new CmsDisplayWidget()));\r\n            }\r\n            int count = 0;\r\n            for (CmsSiteMatcher siteMatcher : m_site.getAliases()) {\r\n                CmsWidgetDialogParameter alias = new CmsWidgetDialogParameter(\r\n                    siteMatcher.getUrl(),\r\n                    siteMatcher.getUrl(),\r\n                    Messages.get().getBundle().key(Messages.GUI_SITES_DETAIL_LABEL_ALIAS_0) + \" [\" + (count + 1) + \"]\",\r\n                    new CmsDisplayWidget(),\r\n                    PAGES[0],\r\n                    1,\r\n                    1,\r\n                    count);\r\n                addWidget(alias);\r\n                count++;\r\n            }\r\n            addWidget(new CmsWidgetDialogParameter(this, \"aliases\", PAGES[0], new CmsDisplayWidget()));\r\n        }\r\n    }","commit_id":"bcb351df5832264a8e54a60f414c17a622efbf44","url":"https://github.com/alkacon/opencms-core"},{"original_method":"protected Map<EObject, URI> createExportedElementsMap(Resource resource) {\n\t\tURI uri = EcoreUtil2.getNormalizedURI(resource);\n\t\tIResourceServiceProvider resourceServiceProvider = serviceProviderRegistry.getResourceServiceProvider(uri);\n\t\tIResourceDescription resourceDescription = resourceServiceProvider.getResourceDescriptionManager()\n\t\t\t\t.getResourceDescription(resource);\n\t\tMap<EObject, URI> exportedElementMap = newIdentityHashMap();\n\t\tif (resourceDescription != null) {\n\t\t\tfor (IEObjectDescription exportedEObjectDescription : resourceDescription.getExportedObjects()) {\n\t\t\t\tEObject eObject = resource.getEObject(exportedEObjectDescription.getEObjectURI().fragment());\n\t\t\t\tif (eObject != null)\n\t\t\t\t\texportedElementMap.put(eObject, exportedEObjectDescription.getEObjectURI());\n\t\t\t}\n\t\t}\n\t\treturn exportedElementMap;\n\t}","id":16425,"modified_method":"protected Map<EObject, URI> createExportedElementsMap(Resource resource) {\n\t\tURI uri = EcoreUtil2.getNormalizedURI(resource);\n\t\tIResourceServiceProvider resourceServiceProvider = serviceProviderRegistry.getResourceServiceProvider(uri);\n\t\tif (resourceServiceProvider == null) {\n\t\t\treturn Collections.emptyMap();\n\t\t}\n\t\tIResourceDescription.Manager resourceDescriptionManager = resourceServiceProvider.getResourceDescriptionManager();\n\t\tif (resourceDescriptionManager == null) {\n\t\t\treturn Collections.emptyMap();\n\t\t}\n\t\tIResourceDescription resourceDescription = resourceDescriptionManager.getResourceDescription(resource);\n\t\tMap<EObject, URI> exportedElementMap = newIdentityHashMap();\n\t\tif (resourceDescription != null) {\n\t\t\tfor (IEObjectDescription exportedEObjectDescription : resourceDescription.getExportedObjects()) {\n\t\t\t\tEObject eObject = resource.getEObject(exportedEObjectDescription.getEObjectURI().fragment());\n\t\t\t\tif (eObject != null)\n\t\t\t\t\texportedElementMap.put(eObject, exportedEObjectDescription.getEObjectURI());\n\t\t\t}\n\t\t}\n\t\treturn exportedElementMap;\n\t}","commit_id":"18dedd8d054ffeb3f42d88648c765cb11333dc82","url":"https://github.com/eclipse/xtext"},{"original_method":"protected Map<EObject, URI> createExportedElementsMap(Resource resource) {\n\t\tURI uri = EcoreUtil2.getNormalizedURI(resource);\n\t\tIResourceServiceProvider resourceServiceProvider = serviceProviderRegistry.getResourceServiceProvider(uri);\n\t\tIResourceDescription resourceDescription = resourceServiceProvider.getResourceDescriptionManager()\n\t\t\t\t.getResourceDescription(resource);\n\t\tMap<EObject, URI> exportedElementMap = newIdentityHashMap();\n\t\tif (resourceDescription != null) {\n\t\t\tfor (IEObjectDescription exportedEObjectDescription : resourceDescription.getExportedObjects()) {\n\t\t\t\tEObject eObject = resource.getEObject(exportedEObjectDescription.getEObjectURI().fragment());\n\t\t\t\tif (eObject != null)\n\t\t\t\t\texportedElementMap.put(eObject, exportedEObjectDescription.getEObjectURI());\n\t\t\t}\n\t\t}\n\t\treturn exportedElementMap;\n\t}","id":16426,"modified_method":"protected Map<EObject, URI> createExportedElementsMap(Resource resource) {\n\t\tURI uri = EcoreUtil2.getNormalizedURI(resource);\n\t\tIResourceServiceProvider resourceServiceProvider = serviceProviderRegistry.getResourceServiceProvider(uri);\n\t\tif (resourceServiceProvider == null) {\n\t\t\treturn Collections.emptyMap();\n\t\t}\n\t\tIResourceDescription.Manager resourceDescriptionManager = resourceServiceProvider.getResourceDescriptionManager();\n\t\tif (resourceDescriptionManager == null) {\n\t\t\treturn Collections.emptyMap();\n\t\t}\n\t\tIResourceDescription resourceDescription = resourceDescriptionManager.getResourceDescription(resource);\n\t\tMap<EObject, URI> exportedElementMap = newIdentityHashMap();\n\t\tif (resourceDescription != null) {\n\t\t\tfor (IEObjectDescription exportedEObjectDescription : resourceDescription.getExportedObjects()) {\n\t\t\t\tEObject eObject = resource.getEObject(exportedEObjectDescription.getEObjectURI().fragment());\n\t\t\t\tif (eObject != null)\n\t\t\t\t\texportedElementMap.put(eObject, exportedEObjectDescription.getEObjectURI());\n\t\t\t}\n\t\t}\n\t\treturn exportedElementMap;\n\t}","commit_id":"37b398ce1d1924c36ffa7005ec372aaeb9294bc6","url":"https://github.com/eclipse/xtext"},{"original_method":"protected Map<EObject, URI> createExportedElementsMap(Resource resource) {\n\t\tURI uri = EcoreUtil2.getNormalizedURI(resource);\n\t\tIResourceServiceProvider resourceServiceProvider = serviceProviderRegistry.getResourceServiceProvider(uri);\n\t\tIResourceDescription resourceDescription = resourceServiceProvider.getResourceDescriptionManager()\n\t\t\t\t.getResourceDescription(resource);\n\t\tMap<EObject, URI> exportedElementMap = newIdentityHashMap();\n\t\tif (resourceDescription != null) {\n\t\t\tfor (IEObjectDescription exportedEObjectDescription : resourceDescription.getExportedObjects()) {\n\t\t\t\tEObject eObject = resource.getEObject(exportedEObjectDescription.getEObjectURI().fragment());\n\t\t\t\tif (eObject != null)\n\t\t\t\t\texportedElementMap.put(eObject, exportedEObjectDescription.getEObjectURI());\n\t\t\t}\n\t\t}\n\t\treturn exportedElementMap;\n\t}","id":16427,"modified_method":"protected Map<EObject, URI> createExportedElementsMap(Resource resource) {\n\t\tURI uri = EcoreUtil2.getNormalizedURI(resource);\n\t\tIResourceServiceProvider resourceServiceProvider = serviceProviderRegistry.getResourceServiceProvider(uri);\n\t\tif (resourceServiceProvider == null) {\n\t\t\treturn Collections.emptyMap();\n\t\t}\n\t\tIResourceDescription.Manager resourceDescriptionManager = resourceServiceProvider.getResourceDescriptionManager();\n\t\tif (resourceDescriptionManager == null) {\n\t\t\treturn Collections.emptyMap();\n\t\t}\n\t\tIResourceDescription resourceDescription = resourceDescriptionManager.getResourceDescription(resource);\n\t\tMap<EObject, URI> exportedElementMap = newIdentityHashMap();\n\t\tif (resourceDescription != null) {\n\t\t\tfor (IEObjectDescription exportedEObjectDescription : resourceDescription.getExportedObjects()) {\n\t\t\t\tEObject eObject = resource.getEObject(exportedEObjectDescription.getEObjectURI().fragment());\n\t\t\t\tif (eObject != null)\n\t\t\t\t\texportedElementMap.put(eObject, exportedEObjectDescription.getEObjectURI());\n\t\t\t}\n\t\t}\n\t\treturn exportedElementMap;\n\t}","commit_id":"4c8d97c8ce8ca868a64de1e41e55d31e6483a7cb","url":"https://github.com/eclipse/xtext"},{"original_method":"public void testAddPasswordPolicies() throws Exception {\n\t\tselenium.click(\"link=\\u00bb\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(\"link=Password Policies\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(\"//input[@value='Add Password Policy']\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.typeKeys(\"_79_name\", \"Test\");\n\t\tselenium.type(\"_79_description\", \"This is a test password policy!\");\n\t\tselenium.click(\"_79_changeableCheckbox\");\n\t\tselenium.select(\"_79_minAge\", \"label=1 Week\");\n\t\tselenium.click(\"_79_expireableCheckbox\");\n\t\tselenium.select(\"_79_maxAge\", \"label=4 Weeks\");\n\t\tselenium.select(\"_79_warningTime\", \"label=2 Days\");\n\t\tselenium.type(\"_79_graceLimit\", \"7\");\n\t\tselenium.click(\"//input[@value='Save']\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.typeKeys(\"_79_name\", \"test\");\n\t\tselenium.click(\"//input[@value='Search Password Policies']\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tverifyTrue(selenium.isTextPresent(\"This is a test password policy!\"));\n\t\tselenium.click(\"link=Return to Full Page\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t}","id":16428,"modified_method":"public void testAddPasswordPolicies() throws Exception {\n\t\tselenium.click(\"link=\\u00bb\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(\"link=Password Policies\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(\"//input[@value='Add Password Policy']\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.typeKeys(\"_79_name\", \"Test\");\n\t\tselenium.type(\"_79_description\", \"This is a test password policy!\");\n\t\tselenium.click(\"_79_changeableCheckbox\");\n\t\tselenium.select(\"_79_minAge\", \"label=1 Week\");\n\t\tselenium.click(\"_79_expireableCheckbox\");\n\t\tselenium.select(\"_79_maxAge\", \"label=4 Weeks\");\n\t\tselenium.select(\"_79_warningTime\", \"label=2 Days\");\n\t\tselenium.type(\"_79_graceLimit\", \"7\");\n\t\tselenium.click(\"//input[@value='Save']\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.typeKeys(\"_79_name\", \"test\");\n\t\tselenium.click(\"//input[@value='Search Password Policies']\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isTextPresent(\"This is a test password policy!\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(\"link=Return to Full Page\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t}","commit_id":"9be0c2e93b08e65616e16d97729d2345c6268978","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddRoles() throws Exception {\n\t\tselenium.click(\"link=Roles\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(\"//input[@value='Add Role']\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"_79_name\",\n\t\t\t\"1 Selenium Message Boards Role and Calendar Role\");\n\t\tselenium.type(\"_79_description\",\n\t\t\t\"This is the Selenium Message Boards and Calendar Role for Deleting and Updating.\");\n\t\tselenium.click(\"//input[@value='Save']\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(\"Link=Define Permissions\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tverifyTrue(selenium.isTextPresent(\n\t\t\t\t\"1 Selenium Message Boards Role and Calendar Role\"));\n\t\tselenium.click(\"//input[@value='Add Portlet Permissions']\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(\"link=Calendar\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.select(\"_79_scopecom.liferay.portlet.calendar.model.CalEventDELETE\",\n\t\t\t\"label=Enterprise\");\n\t\tselenium.select(\"_79_scopecom.liferay.portlet.calendar.model.CalEventUPDATE\",\n\t\t\t\"label=Enterprise\");\n\t\tselenium.click(\"//input[@value='Save']\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(\"link=Return to Full Page\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(\"link=Roles\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(\"link=Define Permissions\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(\"//input[@value='Add Portlet Permissions']\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(\"link=Blogs\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.select(\"_79_scopecom.liferay.portlet.blogs.model.BlogsEntryUPDATE\",\n\t\t\t\"label=Enterprise\");\n\t\tselenium.select(\"_79_scopecom.liferay.portlet.blogs.model.BlogsEntryDELETE\",\n\t\t\t\"label=Enterprise\");\n\t\tselenium.select(\"_79_scopecom.liferay.portlet.blogs.model.BlogsEntryADD_DISCUSSION\",\n\t\t\t\"label=Enterprise\");\n\t\tselenium.select(\"_79_scopecom.liferay.portlet.blogs.model.BlogsEntryDELETE_DISCUSSION\",\n\t\t\t\"label=Enterprise\");\n\t\tselenium.click(\"//input[@value='Save']\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(\"link=Return to Full Page\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t}","id":16429,"modified_method":"public void testAddRoles() throws Exception {\n\t\tselenium.click(\"link=Roles\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(\"//input[@value='Add Role']\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"_79_name\",\n\t\t\t\"1 Selenium Message Boards Role and Calendar Role\");\n\t\tselenium.type(\"_79_description\",\n\t\t\t\"This is the Selenium Message Boards and Calendar Role for Deleting and Updating.\");\n\t\tselenium.click(\"//input[@value='Save']\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(\"Link=Define Permissions\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isTextPresent(\n\t\t\t\t\t\t\t\"1 Selenium Message Boards Role and Calendar Role\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(\"//input[@value='Add Portlet Permissions']\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(\"link=Calendar\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.select(\"_79_scopecom.liferay.portlet.calendar.model.CalEventDELETE\",\n\t\t\t\"label=Enterprise\");\n\t\tselenium.select(\"_79_scopecom.liferay.portlet.calendar.model.CalEventUPDATE\",\n\t\t\t\"label=Enterprise\");\n\t\tselenium.click(\"//input[@value='Save']\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(\"link=Return to Full Page\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(\"link=Roles\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(\"link=Define Permissions\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(\"//input[@value='Add Portlet Permissions']\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(\"link=Blogs\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.select(\"_79_scopecom.liferay.portlet.blogs.model.BlogsEntryUPDATE\",\n\t\t\t\"label=Enterprise\");\n\t\tselenium.select(\"_79_scopecom.liferay.portlet.blogs.model.BlogsEntryDELETE\",\n\t\t\t\"label=Enterprise\");\n\t\tselenium.select(\"_79_scopecom.liferay.portlet.blogs.model.BlogsEntryADD_DISCUSSION\",\n\t\t\t\"label=Enterprise\");\n\t\tselenium.select(\"_79_scopecom.liferay.portlet.blogs.model.BlogsEntryDELETE_DISCUSSION\",\n\t\t\t\"label=Enterprise\");\n\t\tselenium.click(\"//input[@value='Save']\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(\"link=Return to Full Page\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t}","commit_id":"9be0c2e93b08e65616e16d97729d2345c6268978","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddUser() throws Exception {\n\t\tselenium.click(\"link=Users\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(\"//input[@value='Add User']\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.typeKeys(\"_79_screenName\", \"selenium01\");\n\t\tselenium.type(\"_79_emailAddress\", \"test01@selenium.com\");\n\t\tselenium.typeKeys(\"_79_firstName\", \"selen01\");\n\t\tselenium.typeKeys(\"_79_lastName\", \"nium01\");\n\t\tselenium.typeKeys(\"_79_jobTitle\", \"Selenium Test 01\");\n\t\tselenium.typeKeys(\"_79_prefixId\", \"label=Mr.\");\n\t\tselenium.click(\"//input[@value='Save']\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(\"//input[@value='Add']\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"_79_address\", \"test01@selenium.com\");\n\t\tselenium.select(\"_79_typeId\", \"label=E-mail\");\n\t\tselenium.click(\"_79_primaryCheckbox\");\n\t\tselenium.click(\"//input[@value='Save']\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"_79_comments\", \"This is a test comment!\");\n\t\tselenium.click(\"link=Password\");\n\t\tselenium.type(\"_79_password1\", \"test\");\n\t\tselenium.type(\"_79_password2\", \"test\");\n\t\tselenium.click(\"//input[@value='Save']\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(\"link=Return to Full Page\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(\"link=Users\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(\"//input[@value='Add User']\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.typeKeys(\"_79_screenName\", \"selenium02\");\n\t\tselenium.type(\"_79_emailAddress\", \"test02@selenium.com\");\n\t\tselenium.typeKeys(\"_79_firstName\", \"selen02\");\n\t\tselenium.typeKeys(\"_79_lastName\", \"nium02\");\n\t\tselenium.typeKeys(\"_79_jobTitle\", \"Selenium Test 02\");\n\t\tselenium.typeKeys(\"_79_prefixId\", \"label=Mr.\");\n\t\tselenium.click(\"//input[@value='Save']\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(\"//input[@value='Add']\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"_79_address\", \"test02@selenium.com\");\n\t\tselenium.select(\"_79_typeId\", \"label=E-mail\");\n\t\tselenium.click(\"_79_primaryCheckbox\");\n\t\tselenium.click(\"//input[@value='Save']\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"_79_comments\", \"This is a test comment!\");\n\t\tselenium.click(\"link=Password\");\n\t\tselenium.type(\"_79_password1\", \"test\");\n\t\tselenium.type(\"_79_password2\", \"test\");\n\t\tselenium.click(\"//input[@value='Save']\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(\"link=Return to Full Page\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"toggle_id_enterprise_admin_user_searchkeywords\",\n\t\t\t\"selenium\");\n\t\tselenium.click(\"//input[@value='Search Users']\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tverifyTrue(selenium.isTextPresent(\"selen01\"));\n\t\tverifyTrue(selenium.isTextPresent(\"selen02\"));\n\t}","id":16430,"modified_method":"public void testAddUser() throws Exception {\n\t\tselenium.click(\"link=Users\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(\"//input[@value='Add User']\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.typeKeys(\"_79_screenName\", \"selenium01\");\n\t\tselenium.type(\"_79_emailAddress\", \"test01@selenium.com\");\n\t\tselenium.typeKeys(\"_79_firstName\", \"selen01\");\n\t\tselenium.typeKeys(\"_79_lastName\", \"nium01\");\n\t\tselenium.typeKeys(\"_79_jobTitle\", \"Selenium Test 01\");\n\t\tselenium.typeKeys(\"_79_prefixId\", \"label=Mr.\");\n\t\tselenium.click(\"//input[@value='Save']\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(\"//input[@value='Add']\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"_79_address\", \"test01@selenium.com\");\n\t\tselenium.select(\"_79_typeId\", \"label=E-mail\");\n\t\tselenium.click(\"_79_primaryCheckbox\");\n\t\tselenium.click(\"//input[@value='Save']\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"_79_comments\", \"This is a test comment!\");\n\t\tselenium.click(\"link=Password\");\n\t\tselenium.type(\"_79_password1\", \"test\");\n\t\tselenium.type(\"_79_password2\", \"test\");\n\t\tselenium.click(\"//input[@value='Save']\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(\"link=Return to Full Page\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(\"link=Users\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(\"//input[@value='Add User']\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.typeKeys(\"_79_screenName\", \"selenium02\");\n\t\tselenium.type(\"_79_emailAddress\", \"test02@selenium.com\");\n\t\tselenium.typeKeys(\"_79_firstName\", \"selen02\");\n\t\tselenium.typeKeys(\"_79_lastName\", \"nium02\");\n\t\tselenium.typeKeys(\"_79_jobTitle\", \"Selenium Test 02\");\n\t\tselenium.typeKeys(\"_79_prefixId\", \"label=Mr.\");\n\t\tselenium.click(\"//input[@value='Save']\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(\"//input[@value='Add']\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"_79_address\", \"test02@selenium.com\");\n\t\tselenium.select(\"_79_typeId\", \"label=E-mail\");\n\t\tselenium.click(\"_79_primaryCheckbox\");\n\t\tselenium.click(\"//input[@value='Save']\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"_79_comments\", \"This is a test comment!\");\n\t\tselenium.click(\"link=Password\");\n\t\tselenium.type(\"_79_password1\", \"test\");\n\t\tselenium.type(\"_79_password2\", \"test\");\n\t\tselenium.click(\"//input[@value='Save']\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(\"link=Return to Full Page\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"toggle_id_enterprise_admin_user_searchkeywords\",\n\t\t\t\"selenium\");\n\t\tselenium.click(\"//input[@value='Search Users']\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isTextPresent(\"selen01\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isTextPresent(\"selen02\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\t}","commit_id":"9be0c2e93b08e65616e16d97729d2345c6268978","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testEditSettings() throws Exception {\n\t\tselenium.click(\"link=\\u00bb\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(\"link=Settings\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.typeKeys(\"_79_tickerSymbol\", \"LRP\");\n\t\tselenium.typeKeys(\"_79_type\", \"Open Source\");\n\t\tselenium.click(\"//input[@value='Add']\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"_79_address\", \"admin@liferay.com\");\n\t\tselenium.select(\"_79_typeId\", \"label=E-mail\");\n\t\tselenium.click(\"_79_primaryCheckbox\");\n\t\tselenium.click(\"//input[@value='Save']\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tverifyTrue(selenium.isTextPresent(\"admin@liferay.com\"));\n\t\tselenium.click(\"link=Return to Full Page\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t}","id":16431,"modified_method":"public void testEditSettings() throws Exception {\n\t\tselenium.click(\"link=\\u00bb\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(\"link=Settings\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.typeKeys(\"_79_tickerSymbol\", \"LRP\");\n\t\tselenium.typeKeys(\"_79_type\", \"Open Source\");\n\t\tselenium.click(\"//input[@value='Add']\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"_79_address\", \"admin@liferay.com\");\n\t\tselenium.select(\"_79_typeId\", \"label=E-mail\");\n\t\tselenium.click(\"_79_primaryCheckbox\");\n\t\tselenium.click(\"//input[@value='Save']\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isTextPresent(\"admin@liferay.com\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(\"link=Return to Full Page\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t}","commit_id":"9be0c2e93b08e65616e16d97729d2345c6268978","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddCategory() throws Exception {\n\t\tselenium.click(\"//input[@value='Add Category']\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.typeKeys(\"_19_name\", \"T\\u00e9st Cat\\u00e9gory\");\n\t\tselenium.typeKeys(\"_19_description\",\n\t\t\t\"This is a t\\u00e9st cat\\u00e9gory!\");\n\t\tselenium.click(\"//input[@value='Save']\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//b\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\t}","id":16432,"modified_method":"public void testAddCategory() throws Exception {\n\t\tselenium.click(\"//input[@value='Add Category']\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"_19_name\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.typeKeys(\"_19_name\", \"T\\u00e9st Cat\\u00e9gory\");\n\t\tselenium.typeKeys(\"_19_description\",\n\t\t\t\"This is a t\\u00e9st cat\\u00e9gory!\");\n\t\tselenium.click(\"//input[@value='Save']\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//b\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\t}","commit_id":"63e3f2cd68d405b8090f896bd160b83bf2df901c","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddDeletableMessage() throws Exception {\n\t\tselenium.click(\"//input[@value='Post New Thread']\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"_19_subject\",\n\t\t\t\"T\\u00e9st M\\u00e9ssag\\u00e9 to b\\u00e9 D\\u00e9l\\u00e9t\\u00e9d\");\n\t\tselenium.type(\"textArea\",\n\t\t\t\"This m\\u00e9ssag\\u00e9 will b\\u00e9 d\\u00e9l\\u00e9t\\u00e9d!\");\n\t\tselenium.click(\"//input[@value='Save']\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t}","id":16433,"modified_method":"public void testAddDeletableMessage() throws Exception {\n\t\tselenium.click(\"//input[@value='Post New Thread']\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"_19_subject\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.type(\"_19_subject\",\n\t\t\t\"T\\u00e9st M\\u00e9ssag\\u00e9 to b\\u00e9 D\\u00e9l\\u00e9t\\u00e9d\");\n\t\tselenium.type(\"textArea\",\n\t\t\t\"This m\\u00e9ssag\\u00e9 will b\\u00e9 d\\u00e9l\\u00e9t\\u00e9d!\");\n\t\tselenium.click(\"//input[@value='Save']\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isTextPresent(\n\t\t\t\t\t\t\t\"This m\\u00e9ssag\\u00e9 will b\\u00e9 d\\u00e9l\\u00e9t\\u00e9d!\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\t}","commit_id":"63e3f2cd68d405b8090f896bd160b83bf2df901c","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddReplyMessage() throws Exception {\n\t\tselenium.click(\"//a[text()='Reply']\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.typeKeys(\"textArea\",\n\t\t\t\"This is a t\\u00e9st r\\u00e9ply m\\u00e9ssag\\u00e9!\");\n\t\tselenium.click(\"//input[@value='Save']\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t}","id":16434,"modified_method":"public void testAddReplyMessage() throws Exception {\n\t\tselenium.click(\"//a[text()='Reply']\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"textArea\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.typeKeys(\"textArea\",\n\t\t\t\"This is a t\\u00e9st r\\u00e9ply m\\u00e9ssag\\u00e9!\");\n\t\tselenium.click(\"//input[@value='Save']\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t}","commit_id":"63e3f2cd68d405b8090f896bd160b83bf2df901c","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddSecondSubcategory() throws Exception {\n\t\tselenium.click(\"link=Return to Full Page\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(\"//b\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(\"//input[@value='Add Subcategory']\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"_19_name\", \"S\\u00e9cond T\\u00e9st Subcat\\u00e9gory\");\n\t\tselenium.type(\"_19_description\",\n\t\t\t\"This is a s\\u00e9cond t\\u00e9st subcat\\u00e9gory!\");\n\t\tselenium.click(\"//input[@value='Save']\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tverifyTrue(selenium.isTextPresent(\n\t\t\t\t\"S\\u00e9cond T\\u00e9st Subcat\\u00e9gory\"));\n\t}","id":16435,"modified_method":"public void testAddSecondSubcategory() throws Exception {\n\t\tselenium.click(\"link=Return to Full Page\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(\"//b\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(\"//input[@value='Add Subcategory']\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"_19_name\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.type(\"_19_name\", \"S\\u00e9cond T\\u00e9st Subcat\\u00e9gory\");\n\t\tselenium.type(\"_19_description\",\n\t\t\t\"This is a s\\u00e9cond t\\u00e9st subcat\\u00e9gory!\");\n\t\tselenium.click(\"//input[@value='Save']\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tverifyTrue(selenium.isTextPresent(\n\t\t\t\t\"S\\u00e9cond T\\u00e9st Subcat\\u00e9gory\"));\n\t}","commit_id":"63e3f2cd68d405b8090f896bd160b83bf2df901c","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testDeleteMessage() throws Exception {\n\t\tselenium.click(\n\t\t\t\"link=T\\u00e9st M\\u00e9ssag\\u00e9 to b\\u00e9 D\\u00e9l\\u00e9t\\u00e9d - MOVED\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(\"link=Delete\");\n\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"link=T\\u00e9st M\\u00e9ssag\\u00e9 to b\\u00e9 D\\u00e9l\\u00e9t\\u00e9d\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tverifyFalse(selenium.isTextPresent(\n\t\t\t\t\"T\\u00e9st M\\u00e9ssag\\u00e9 to b\\u00e9 D\\u00e9l\\u00e9t\\u00e9d - MOVED\"));\n\t\tselenium.click(\"link=Delete\");\n\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Mov\\u00e9 it back!\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(\"link=Delete\");\n\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"//input[@value='Post New Thread']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tverifyTrue(selenium.isTextPresent(\n\t\t\t\t\"Your request processed successfully.\"));\n\t\tselenium.click(\"link=T\\u00e9st Cat\\u00e9gory\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(\"link=Delete\");\n\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"//input[@value='Post New Thread']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tverifyFalse(selenium.isTextPresent(\n\t\t\t\t\"S\\u00e9cond T\\u00e9st Subcat\\u00e9gory\"));\n\t}","id":16436,"modified_method":"public void testDeleteMessage() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"link=T\\u00e9st M\\u00e9ssag\\u00e9 to b\\u00e9 D\\u00e9l\\u00e9t\\u00e9d - MOVED\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(\n\t\t\t\"link=T\\u00e9st M\\u00e9ssag\\u00e9 to b\\u00e9 D\\u00e9l\\u00e9t\\u00e9d - MOVED\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(\"link=Delete\");\n\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"link=T\\u00e9st M\\u00e9ssag\\u00e9 to b\\u00e9 D\\u00e9l\\u00e9t\\u00e9d\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tverifyFalse(selenium.isTextPresent(\n\t\t\t\t\"T\\u00e9st M\\u00e9ssag\\u00e9 to b\\u00e9 D\\u00e9l\\u00e9t\\u00e9d - MOVED\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Delete\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(\"link=Delete\");\n\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Mov\\u00e9 it back!\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(\"link=Delete\");\n\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"//input[@value='Post New Thread']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isTextPresent(\n\t\t\t\t\t\t\t\"Your request processed successfully.\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(\"link=T\\u00e9st Cat\\u00e9gory\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(\"link=Delete\");\n\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"//input[@value='Post New Thread']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tverifyFalse(selenium.isTextPresent(\n\t\t\t\t\"S\\u00e9cond T\\u00e9st Subcat\\u00e9gory\"));\n\t}","commit_id":"63e3f2cd68d405b8090f896bd160b83bf2df901c","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testMoveThread() throws Exception {\n\t\tselenium.click(\"link=Move Thread\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(\"//input[@value='Select']\");\n\t\tselenium.waitForPopUp(\"category\", \"30000\");\n\t\tselenium.selectWindow(\"category\");\n\t\tselenium.click(\n\t\t\t\"//div[@id=\\\"p_p_id_19_\\\"]/div/form/table/tbody/tr[3]/td[5]/input\");\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.click(\"_19_addExplanationPost\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"_19_subject\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.type(\"_19_subject\",\n\t\t\t\"T\\u00e9st M\\u00e9ssag\\u00e9 to b\\u00e9 D\\u00e9l\\u00e9t\\u00e9d - MOVED\");\n\t\tselenium.type(\"textArea\",\n\t\t\t\"This m\\u00e9ssag\\u00e9 has b\\u00e9\\u00e9n mov\\u00e9d.\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//input[@value='Move Thread']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(\"//input[@value='Move Thread']\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=T\\u00e9st Subcat\\u00e9gory\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tverifyTrue(selenium.isTextPresent(\n\t\t\t\t\"T\\u00e9st M\\u00e9ssag\\u00e9 to b\\u00e9 D\\u00e9l\\u00e9t\\u00e9d - MOVED\"));\n\t\tselenium.click(\"link=Move Thread\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(\"//input[@value='Select']\");\n\t\tselenium.waitForPopUp(\"category\", \"30000\");\n\t\tselenium.selectWindow(\"category\");\n\t\tselenium.click(\"//input[@value='Choose']\");\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.click(\"_19_addExplanationPost\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"textArea\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.type(\"_19_subject\", \"Mov\\u00e9 it back!\");\n\t\tselenium.type(\"textArea\",\n\t\t\t\"This thr\\u00e9ad has b\\u00e9\\u00e9n mov\\u00e9d back!\");\n\t\tselenium.click(\"//input[@value='Move Thread']\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"link=S\\u00e9cond T\\u00e9st Subcat\\u00e9gory\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tverifyTrue(selenium.isTextPresent(\"Mov\\u00e9 it back!\"));\n\t}","id":16437,"modified_method":"public void testMoveThread() throws Exception {\n\t\tselenium.click(\"link=Move Thread\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(\"//input[@value='Select']\");\n\t\tselenium.waitForPopUp(\"category\", \"30000\");\n\t\tselenium.selectWindow(\"category\");\n\t\tselenium.click(\n\t\t\t\"//div[@id=\\\"p_p_id_19_\\\"]/div/form/table/tbody/tr[3]/td[5]/input\");\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.click(\"_19_addExplanationPost\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"_19_subject\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.type(\"_19_subject\",\n\t\t\t\"T\\u00e9st M\\u00e9ssag\\u00e9 to b\\u00e9 D\\u00e9l\\u00e9t\\u00e9d - MOVED\");\n\t\tselenium.type(\"textArea\",\n\t\t\t\"This m\\u00e9ssag\\u00e9 has b\\u00e9\\u00e9n mov\\u00e9d.\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//input[@value='Move Thread']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(\"//input[@value='Move Thread']\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=T\\u00e9st Subcat\\u00e9gory\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tverifyTrue(selenium.isTextPresent(\n\t\t\t\t\"T\\u00e9st M\\u00e9ssag\\u00e9 to b\\u00e9 D\\u00e9l\\u00e9t\\u00e9d - MOVED\"));\n\t\tselenium.click(\"link=Move Thread\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(\"//input[@value='Select']\");\n\t\tselenium.waitForPopUp(\"category\", \"30000\");\n\t\tselenium.selectWindow(\"category\");\n\t\tselenium.click(\"//input[@value='Choose']\");\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.click(\"_19_addExplanationPost\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"textArea\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.type(\"_19_subject\", \"Mov\\u00e9 it back!\");\n\t\tselenium.type(\"textArea\",\n\t\t\t\"This thr\\u00e9ad has b\\u00e9\\u00e9n mov\\u00e9d back!\");\n\t\tselenium.click(\"//input[@value='Move Thread']\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"link=S\\u00e9cond T\\u00e9st Subcat\\u00e9gory\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isTextPresent(\"Mov\\u00e9 it back!\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\t}","commit_id":"63e3f2cd68d405b8090f896bd160b83bf2df901c","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testRecentPosts() throws Exception {\n\t\tselenium.click(\"//div/nobr/a[2]\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"link=T\\u00e9st M\\u00e9ssag\\u00e9 to b\\u00e9 D\\u00e9l\\u00e9t\\u00e9d\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"link=T\\u00e9st M\\u00e9ssag\\u00e9\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(\n\t\t\t\"link=T\\u00e9st M\\u00e9ssag\\u00e9 to b\\u00e9 D\\u00e9l\\u00e9t\\u00e9d\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t}","id":16438,"modified_method":"public void testRecentPosts() throws Exception {\n\t\tselenium.click(\"//div/nobr/a[2]\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"link=T\\u00e9st M\\u00e9ssag\\u00e9 to b\\u00e9 D\\u00e9l\\u00e9t\\u00e9d\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"link=T\\u00e9st M\\u00e9ssag\\u00e9\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(\n\t\t\t\"link=T\\u00e9st M\\u00e9ssag\\u00e9 to b\\u00e9 D\\u00e9l\\u00e9t\\u00e9d\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isTextPresent(\n\t\t\t\t\t\t\t\"This m\\u00e9ssag\\u00e9 will b\\u00e9 d\\u00e9l\\u00e9t\\u00e9d!\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\t}","commit_id":"63e3f2cd68d405b8090f896bd160b83bf2df901c","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testSearch() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Return to Full Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(\"link=Return to Full Page\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.typeKeys(\"_19_keywords1\", \"T\\u00e9st\");\n\t\tselenium.click(\"//input[@value='Search Messages']\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"link=T\\u00e9st M\\u00e9ssag\\u00e9\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(\"link=T\\u00e9st M\\u00e9ssag\\u00e9\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tverifyTrue(selenium.isTextPresent(\n\t\t\t\t\"This is a t\\u00e9st r\\u00e9ply m\\u00e9ssag\\u00e9!\"));\n\t}","id":16439,"modified_method":"public void testSearch() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Return to Full Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(\"link=Return to Full Page\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"_19_keywords1\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.typeKeys(\"_19_keywords1\", \"T\\u00e9st\");\n\t\tselenium.click(\"//input[@value='Search Messages']\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"link=T\\u00e9st M\\u00e9ssag\\u00e9\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(\"link=T\\u00e9st M\\u00e9ssag\\u00e9\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tverifyTrue(selenium.isTextPresent(\n\t\t\t\t\"This is a t\\u00e9st r\\u00e9ply m\\u00e9ssag\\u00e9!\"));\n\t}","commit_id":"63e3f2cd68d405b8090f896bd160b83bf2df901c","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testSplitThread() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Split Thread\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(\"link=Split Thread\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tverifyTrue(selenium.isTextPresent(\n\t\t\t\t\"Click OK to create a new thread with the following messages.\"));\n\t\tselenium.click(\"//input[@value='OK']\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(\"link=S\\u00e9cond T\\u00e9st Subcat\\u00e9gory\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tverifyTrue(selenium.isTextPresent(\n\t\t\t\t\"T\\u00e9st M\\u00e9ssag\\u00e9 to b\\u00e9 D\\u00e9l\\u00e9t\\u00e9d\"));\n\t\tverifyTrue(selenium.isTextPresent(\n\t\t\t\t\"T\\u00e9st M\\u00e9ssag\\u00e9 to b\\u00e9 D\\u00e9l\\u00e9t\\u00e9d - MOVED\"));\n\t}","id":16440,"modified_method":"public void testSplitThread() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Split Thread\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(\"link=Split Thread\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tverifyTrue(selenium.isTextPresent(\n\t\t\t\t\"Click OK to create a new thread with the following messages.\"));\n\t\tselenium.click(\"//input[@value='OK']\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(\"link=S\\u00e9cond T\\u00e9st Subcat\\u00e9gory\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tverifyTrue(selenium.isTextPresent(\n\t\t\t\t\"T\\u00e9st M\\u00e9ssag\\u00e9 to b\\u00e9 D\\u00e9l\\u00e9t\\u00e9d\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isTextPresent(\n\t\t\t\t\t\t\t\"T\\u00e9st M\\u00e9ssag\\u00e9 to b\\u00e9 D\\u00e9l\\u00e9t\\u00e9d - MOVED\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\t}","commit_id":"63e3f2cd68d405b8090f896bd160b83bf2df901c","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddPortlet() throws Exception {\n\t\tselenium.click(\"link=Add Application\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"//div[@id=\\\"Religion-Christianity-GlobalPrayerDigest\\\"]\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(\n\t\t\t\"//div[@id=\\\"Religion-Christianity-GlobalPrayerDigest\\\"]/p/a\");\n\t\tverifyTrue(selenium.isTextPresent(\"Global Prayer Digest\"));\n\t}","id":16441,"modified_method":"public void testAddPortlet() throws Exception {\n\t\tselenium.click(\"link=Add Application\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"//div[@id=&quot;Religion-Christianity-GlobalPrayerDigest&quot;]\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(\n\t\t\t\"//div[@id=&quot;Religion-Christianity-GlobalPrayerDigest&quot;]/p/a\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isTextPresent(\"Global Prayer Digest\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//img[@alt='Configuration']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\t}","commit_id":"8907dfa1427a1a1c1859631e16095534b87d6607","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddComment() throws Exception {\n\t\tThread.sleep(5000);\n\t\tselenium.click(\"link=Post Reply\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"_107_postReplyBody0\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.typeKeys(\"_107_postReplyBody0\", \"This is a test page comment!\");\n\t\tselenium.click(\"_107_postReplyButton0\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tverifyTrue(selenium.isTextPresent(\n\t\t\t\t\"Your request processed successfully.\"));\n\t\tverifyTrue(selenium.isTextPresent(\"This is a test page comment!\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Delete\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\t}","id":16442,"modified_method":"public void testAddComment() throws Exception {\n\t\tThread.sleep(5000);\n\t\tselenium.click(\"link=Post Reply\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"_107_postReplyBody0\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.typeKeys(\"_107_postReplyBody0\", \"This is a test page comment!\");\n\t\tselenium.click(\"_107_postReplyButton0\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isTextPresent(\n\t\t\t\t\t\t\t\"Your request processed successfully.\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isTextPresent(\"This is a test page comment!\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Delete\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\t}","commit_id":"5aad6cf5d7ee25cef5f7d6ded96af11de09aaafd","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testDeleteComment() throws Exception {\n\t\tselenium.click(\"link=Delete\");\n\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\t\tverifyFalse(selenium.isTextPresent(\"This is a test page comment!\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"//a[@id=\\\"my-community-private-pages\\\"]\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\t}","id":16443,"modified_method":"public void testDeleteComment() throws Exception {\n\t\tselenium.click(\"link=Delete\");\n\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (!selenium.isTextPresent(\"This is a test page comment!\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"//a[@id=\\\"my-community-private-pages\\\"]\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\t}","commit_id":"5aad6cf5d7ee25cef5f7d6ded96af11de09aaafd","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddEntry() throws Exception {\n\t\tselenium.click(\"//input[@value='Add Blog Entry']\");\n\t\tThread.sleep(5000);\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"_33_title\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.typeKeys(\"_33_title\", \"Test Entry\");\n\t\tThread.sleep(5000);\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"_33_editor\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"FCKeditor1___Frame\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//textarea\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.selectFrame(\"//iframe[@id=\\\"_33_editor\\\"]\");\n\t\tselenium.selectFrame(\"//iframe[@id=\\\"FCKeditor1___Frame\\\"]\");\n\t\tselenium.selectFrame(\"//iframe\");\n\t\tselenium.typeKeys(\"//body\", \"This is a test entry!\");\n\t\tselenium.selectFrame(\"relative=top\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//input[@value='Save']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(\"//input[@value='Save']\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=0 Comments\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\t}","id":16444,"modified_method":"public void testAddEntry() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"//input[@value='Add Blog Entry']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(\"//input[@value='Add Blog Entry']\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"_33_title\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.typeKeys(\"_33_title\", \"Test Entry\");\n\t\tThread.sleep(5000);\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"_33_editor\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"FCKeditor1___Frame\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//textarea\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.selectFrame(\"//iframe[@id=\\\"_33_editor\\\"]\");\n\t\tselenium.selectFrame(\"//iframe[@id=\\\"FCKeditor1___Frame\\\"]\");\n\t\tselenium.selectFrame(\"//iframe\");\n\t\tselenium.typeKeys(\"//body\", \"This is a test entry!\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tThread.sleep(5000);\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"_33_saveButton\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(\"_33_saveButton\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=0 Comments\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\t}","commit_id":"a20ffa638da5e066554e1989816d68007706dc73","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddIncorrectEntry() throws Exception {\n\t\tselenium.click(\"//input[@value='Add Blog Entry']\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"_33_title\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//input[@value='Save']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(\"//input[@value='Save']\");\n\t\tThread.sleep(4000);\n\t\tverifyTrue(selenium.isTextPresent(\n\t\t\t\t\"You have entered invalid data. Please try again.\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=\\u00ab Back\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(\"link=\\u00ab Back\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t}","id":16445,"modified_method":"public void testAddIncorrectEntry() throws Exception {\n\t\tselenium.click(\"//input[@value='Add Blog Entry']\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"_33_title\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"_33_saveButton\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//textarea\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tThread.sleep(4000);\n\t\tselenium.click(\"_33_saveButton\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isTextPresent(\n\t\t\t\t\t\t\t\"You have entered invalid data. Please try again.\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=\\u00ab Back\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(\"link=\\u00ab Back\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t}","commit_id":"a20ffa638da5e066554e1989816d68007706dc73","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddSecondEntryComment() throws Exception {\n\t\tselenium.click(\"link=0 Comments\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(\"link=Post Reply\");\n\t\tselenium.typeKeys(\"_33_postReplyBody0\",\n\t\t\t\"This is a second entry comment!\");\n\t\tselenium.click(\"_33_postReplyButton0\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tverifyTrue(selenium.isTextPresent(\"This is a second entry comment!\"));\n\t}","id":16446,"modified_method":"public void testAddSecondEntryComment() throws Exception {\n\t\tselenium.click(\"link=0 Comments\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(\"link=Post Reply\");\n\t\tselenium.typeKeys(\"_33_postReplyBody0\",\n\t\t\t\"This is a second entry comment!\");\n\t\tselenium.click(\"_33_postReplyButton0\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isTextPresent(\"This is a second entry comment!\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\t}","commit_id":"a20ffa638da5e066554e1989816d68007706dc73","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddSecondEntry() throws Exception {\n\t\tselenium.click(\"link=Blogs Test Page\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(\"//input[@value='Add Blog Entry']\");\n\t\tThread.sleep(5000);\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"_33_title\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.typeKeys(\"_33_title\", \"Second Test Entry\");\n\t\tThread.sleep(5000);\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"_33_editor\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"FCKeditor1___Frame\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//textarea\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.selectFrame(\"//iframe[@id=\\\"_33_editor\\\"]\");\n\t\tselenium.selectFrame(\"//iframe[@id=\\\"FCKeditor1___Frame\\\"]\");\n\t\tselenium.selectFrame(\"//iframe\");\n\t\tselenium.typeKeys(\"//body\", \"This is a second test entry!\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.click(\"//input[@value='Save']\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=0 Comments\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\t}","id":16447,"modified_method":"public void testAddSecondEntry() throws Exception {\n\t\tselenium.click(\"link=Blogs Test Page\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(\"//input[@value='Add Blog Entry']\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"_33_title\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.typeKeys(\"_33_title\", \"Second Test Entry\");\n\t\tThread.sleep(5000);\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"_33_editor\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"FCKeditor1___Frame\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//textarea\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.selectFrame(\"//iframe[@id=\\\"_33_editor\\\"]\");\n\t\tselenium.selectFrame(\"//iframe[@id=\\\"FCKeditor1___Frame\\\"]\");\n\t\tselenium.selectFrame(\"//iframe\");\n\t\tselenium.typeKeys(\"//body\", \"This is a second test entry!\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tThread.sleep(5000);\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"_33_saveButton\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(\"_33_saveButton\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=0 Comments\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\t}","commit_id":"a20ffa638da5e066554e1989816d68007706dc73","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testDeleteSecondComment() throws Exception {\n\t\tselenium.click(\"link=Second Test Entry\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Delete\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(\"//td[4]/nobr/a[2]\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\t\tverifyTrue(selenium.isTextPresent(\n\t\t\t\t\"Your request processed successfully.\"));\n\t}","id":16448,"modified_method":"public void testDeleteSecondComment() throws Exception {\n\t\tselenium.click(\"link=Second Test Entry\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Delete\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(\"//td[5]/nobr/a[2]\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isTextPresent(\n\t\t\t\t\t\t\t\"Your request processed successfully.\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\t}","commit_id":"a20ffa638da5e066554e1989816d68007706dc73","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testDeleteSecondEntry() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Delete\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(\"link=Delete\");\n\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\t\tverifyTrue(selenium.isTextPresent(\n\t\t\t\t\"Your request processed successfully.\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"//input[@value='Add Blog Entry']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\t}","id":16449,"modified_method":"public void testDeleteSecondEntry() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Delete\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(\"link=Delete\");\n\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isTextPresent(\n\t\t\t\t\t\t\t\"Your request processed successfully.\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"//input[@value='Add Blog Entry']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\t}","commit_id":"a20ffa638da5e066554e1989816d68007706dc73","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testEditSecondComment() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"//td[2]/table[1]/tbody/tr/td[3]/nobr/a[2]\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(\"//td[2]/table[1]/tbody/tr/td[3]/nobr/a[2]\");\n\t\tselenium.type(\"_33_editBody1\", \"This is an edited second entry comment!\");\n\t\tselenium.click(\"_33_updateReplyButton1\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tverifyTrue(selenium.isTextPresent(\n\t\t\t\t\"This is an edited second entry comment!\"));\n\t}","id":16450,"modified_method":"public void testEditSecondComment() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//td[4]/nobr/a[2]\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(\"//td[4]/nobr/a[2]\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"_33_editBody1\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.type(\"_33_editBody1\", \"This is an edited second entry comment!\");\n\t\tselenium.click(\"_33_updateReplyButton1\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isTextPresent(\n\t\t\t\t\t\t\t\"This is an edited second entry comment!\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\t}","commit_id":"a20ffa638da5e066554e1989816d68007706dc73","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testEditSecondEntry() throws Exception {\n\t\tselenium.click(\"link=Edit\");\n\t\tThread.sleep(5000);\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"_33_title\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.type(\"_33_title\", \"Second Test Entry\");\n\t\tThread.sleep(5000);\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"_33_editor\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"FCKeditor1___Frame\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//textarea\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.selectFrame(\"//iframe[@id=\\\"_33_editor\\\"]\");\n\t\tselenium.selectFrame(\"//iframe[@id=\\\"FCKeditor1___Frame\\\"]\");\n\t\tselenium.selectFrame(\"//iframe\");\n\t\tselenium.type(\"//body\", \"This is an edited second test entry!\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.click(\"//input[@value='Save']\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tverifyTrue(selenium.isTextPresent(\n\t\t\t\t\"This is an edited second test entry!\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Blogs Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(\"link=Blogs Test Page\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t}","id":16451,"modified_method":"public void testEditSecondEntry() throws Exception {\n\t\tselenium.click(\"link=Edit\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"_33_title\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.type(\"_33_title\", \"Second Test Entry\");\n\t\tThread.sleep(5000);\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"_33_editor\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"FCKeditor1___Frame\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//textarea\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.selectFrame(\"//iframe[@id=\\\"_33_editor\\\"]\");\n\t\tselenium.selectFrame(\"//iframe[@id=\\\"FCKeditor1___Frame\\\"]\");\n\t\tselenium.selectFrame(\"//iframe\");\n\t\tselenium.type(\"//body\", \"This is an edited second test entry!\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tThread.sleep(5000);\n\t\tselenium.click(\"_33_saveButton\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tverifyTrue(selenium.isTextPresent(\n\t\t\t\t\"This is an edited second test entry!\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Blogs Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(\"link=Blogs Test Page\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t}","commit_id":"a20ffa638da5e066554e1989816d68007706dc73","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddCommunities() throws Exception {\n\t\tselenium.click(\"//input[@value='Add Community']\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.typeKeys(\"_29_name\", \"Test Community\");\n\t\tselenium.type(\"_29_description\", \"This is a test community!\");\n\t\tselenium.click(\"//input[@value='Save']\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"_29_name\", \"Test\");\n\t\tselenium.click(\"//input[@value='Search Communities']\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(\"link=Assign Members\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(\"link=Available\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(\"document._29_fm._29_rowIds[1]\");\n\t\tselenium.click(\"document._29_fm._29_rowIds[2]\");\n\t\tselenium.click(\"document._29_fm._29_rowIds[3]\");\n\t\tselenium.click(\"document._29_fm._29_rowIds[4]\");\n\t\tselenium.click(\"document._29_fm._29_rowIds[5]\");\n\t\tselenium.click(\"//input[@value='Update Associations']\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(\"link=Current\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tverifyTrue(selenium.isTextPresent(\"Test DLC 1\"));\n\t\tverifyTrue(selenium.isTextPresent(\"Test DLC 10\"));\n\t\tverifyTrue(selenium.isTextPresent(\"Test DLC 2\"));\n\t\tselenium.click(\"link=Organizations\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(\"link=Available\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(\"document._29_fm._29_rowIds[7]\");\n\t\tselenium.click(\"//input[@value='Update Associations']\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(\"link=Current\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tverifyTrue(selenium.isTextPresent(\"Liferay Los Angeles\"));\n\t\tselenium.click(\"link=Return to Full Page\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t}","id":16452,"modified_method":"public void testAddCommunities() throws Exception {\n\t\tselenium.click(\"//input[@value='Add Community']\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.typeKeys(\"_29_name\", \"Test Community\");\n\t\tselenium.type(\"_29_description\", \"This is a test community!\");\n\t\tselenium.click(\"//input[@value='Save']\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"_29_name\", \"Test\");\n\t\tselenium.click(\"//input[@value='Search Communities']\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(\"link=Assign Members\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(\"link=Available\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(\"document._29_fm._29_rowIds[1]\");\n\t\tselenium.click(\"document._29_fm._29_rowIds[2]\");\n\t\tselenium.click(\"document._29_fm._29_rowIds[3]\");\n\t\tselenium.click(\"document._29_fm._29_rowIds[4]\");\n\t\tselenium.click(\"document._29_fm._29_rowIds[5]\");\n\t\tselenium.click(\"//input[@value='Update Associations']\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(\"link=Current\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isTextPresent(\"Test DLC 1\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isTextPresent(\"Test DLC 10\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isTextPresent(\"Test DLC 2\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(\"link=Organizations\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(\"link=Available\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(\"document._29_fm._29_rowIds[7]\");\n\t\tselenium.click(\"//input[@value='Update Associations']\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(\"link=Current\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isTextPresent(\"Liferay Los Angeles\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(\"link=Return to Full Page\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t}","commit_id":"4bc7fb33b31d2356d80c97e371b462b618ff8e71","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public PutAccountPolicyResponseType putAccountPolicy(PutAccountPolicyType request) throws EucalyptusCloudException {\n    PutAccountPolicyResponseType reply = request.getReply( );\n    reply.getResponseMetadata( ).setRequestId( reply.getCorrelationId( ) );\n    Context ctx = Contexts.lookup( );\n    User requestUser = ctx.getUser( );\n    Account accountFound = null;\n    try {\n      accountFound = Accounts.lookupAccountByName( request.getAccountName( ) );\n    } catch ( Exception e ) {\n      LOG.debug( e, e );\n      if ( e instanceof AuthException && AuthException.NO_SUCH_ACCOUNT.equals( e.getMessage( ) ) ) {\n        throw new EuareException( HttpResponseStatus.NOT_FOUND, EuareException.NO_SUCH_ENTITY, \"Can not find account \" + request.getAccountName( ) );\n      } else {\n        throw new EucalyptusCloudException( e );\n      }\n    }\n    if ( !ctx.hasAdministrativePrivileges( ) ) {\n      throw new EuareException( HttpResponseStatus.FORBIDDEN, EuareException.NOT_AUTHORIZED,\n                                \"Not authorized to put account policy for \" + accountFound.getName( ) + \" by \" + requestUser.getName( ) );\n    }\n    try {\n      User admin = accountFound.lookupUserByName( User.ACCOUNT_ADMIN );\n      admin.addPolicy( request.getPolicyName( ), request.getPolicyDocument( ) );\n    } catch ( PolicyParseException e ) {\n      LOG.debug( e, e );\n      throw new EuareException( HttpResponseStatus.BAD_REQUEST, EuareException.MALFORMED_POLICY_DOCUMENT, \"Error in uploaded policy: \" + request.getPolicyDocument( ), e );\n    } catch ( Exception e ) {\n      LOG.debug( e, e );\n      throw new EucalyptusCloudException( e );\n    }\n    return reply;\n  }","id":16453,"modified_method":"public PutAccountPolicyResponseType putAccountPolicy(PutAccountPolicyType request) throws EucalyptusCloudException {\n    PutAccountPolicyResponseType reply = request.getReply( );\n    reply.getResponseMetadata( ).setRequestId( reply.getCorrelationId( ) );\n    Context ctx = Contexts.lookup( );\n    User requestUser = ctx.getUser( );\n    Account accountFound = null;\n    try {\n      POLICY_NAME_CHECKER.check( request.getPolicyName( ) );\n    } catch ( InvalidValueException e ) {\n      throw new EuareException( HttpResponseStatus.BAD_REQUEST, EuareException.INVALID_NAME, \"Policy name: \" + request.getPolicyName( ) + \" is invalid.\" );\n    }\n    try {\n      accountFound = Accounts.lookupAccountByName( request.getAccountName( ) );\n    } catch ( Exception e ) {\n      LOG.debug( e, e );\n      if ( e instanceof AuthException && AuthException.NO_SUCH_ACCOUNT.equals( e.getMessage( ) ) ) {\n        throw new EuareException( HttpResponseStatus.NOT_FOUND, EuareException.NO_SUCH_ENTITY, \"Can not find account \" + request.getAccountName( ) );\n      } else {\n        throw new EucalyptusCloudException( e );\n      }\n    }\n    if ( !ctx.hasAdministrativePrivileges( ) ) {\n      throw new EuareException( HttpResponseStatus.FORBIDDEN, EuareException.NOT_AUTHORIZED,\n                                \"Not authorized to put account policy for \" + accountFound.getName( ) + \" by \" + requestUser.getName( ) );\n    }\n    try {\n      User admin = accountFound.lookupUserByName( User.ACCOUNT_ADMIN );\n      admin.addPolicy( request.getPolicyName( ), request.getPolicyDocument( ) );\n    } catch ( PolicyParseException e ) {\n      LOG.debug( e, e );\n      throw new EuareException( HttpResponseStatus.BAD_REQUEST, EuareException.MALFORMED_POLICY_DOCUMENT, \"Error in uploaded policy: \" + request.getPolicyDocument( ), e );\n    } catch ( Exception e ) {\n      LOG.debug( e, e );\n      throw new EucalyptusCloudException( e );\n    }\n    return reply;\n  }","commit_id":"b1d47ff224b00f4437b7d052d29d63722bada029","url":"https://github.com/eucalyptus/eucalyptus"},{"original_method":"public PutUserPolicyResponseType putUserPolicy(PutUserPolicyType request) throws EucalyptusCloudException {\n    PutUserPolicyResponseType reply = request.getReply( );\n    reply.getResponseMetadata( ).setRequestId( reply.getCorrelationId( ) );\n    String action = PolicySpec.requestToAction( request );\n    Context ctx = Contexts.lookup( );\n    User requestUser = ctx.getUser( );\n    Account account = getRealAccount( ctx, request.getDelegateAccount( ) );\n    User userFound = null;\n    try {\n      userFound = account.lookupUserByName( request.getUserName( ) );\n    } catch ( Exception e ) {\n      LOG.debug( e, e );\n      if ( e instanceof AuthException && AuthException.NO_SUCH_USER.equals( e.getMessage( ) ) ) {\n        throw new EuareException( HttpResponseStatus.NOT_FOUND, EuareException.NO_SUCH_ENTITY, \"Can not find user \" + request.getUserName( ) );\n      } else {\n        throw new EucalyptusCloudException( e );\n      }\n    }\n    // Policy attached to account admin is the account policy. Only system admin can put policy to an account.\n    if ( userFound.isAccountAdmin( ) && !requestUser.isSystemAdmin( ) ){\n      throw new EuareException( HttpResponseStatus.FORBIDDEN, EuareException.NOT_AUTHORIZED, \"Only system admin can put policy on an account\" );      \n    }\n    if ( !Permissions.isAuthorized( PolicySpec.VENDOR_IAM, PolicySpec.IAM_RESOURCE_USER, Accounts.getUserFullName( userFound ), account, action, requestUser ) ) {\n      throw new EuareException( HttpResponseStatus.FORBIDDEN, EuareException.NOT_AUTHORIZED,\n                                \"Not authorized to put user policy for \" + request.getUserName( ) + \" by \" + requestUser.getName( ) );\n    }\n    try {\n      userFound.addPolicy( request.getPolicyName( ), request.getPolicyDocument( ) );\n    } catch ( PolicyParseException e ) {\n      LOG.debug( e, e );\n      throw new EuareException( HttpResponseStatus.BAD_REQUEST, EuareException.MALFORMED_POLICY_DOCUMENT, \"Error in uploaded policy: \" + request.getPolicyDocument( ), e );\n    } catch ( Exception e ) {\n      LOG.debug( e, e );\n      throw new EucalyptusCloudException( e );\n    }\n    return reply;\n  }","id":16454,"modified_method":"public PutUserPolicyResponseType putUserPolicy(PutUserPolicyType request) throws EucalyptusCloudException {\n    PutUserPolicyResponseType reply = request.getReply( );\n    reply.getResponseMetadata( ).setRequestId( reply.getCorrelationId( ) );\n    String action = PolicySpec.requestToAction( request );\n    Context ctx = Contexts.lookup( );\n    User requestUser = ctx.getUser( );\n    Account account = getRealAccount( ctx, request.getDelegateAccount( ) );\n    User userFound = null;\n    try {\n      POLICY_NAME_CHECKER.check( request.getPolicyName( ) );\n    } catch ( InvalidValueException e ) {\n      throw new EuareException( HttpResponseStatus.BAD_REQUEST, EuareException.INVALID_NAME, \"Policy name: \" + request.getPolicyName( ) + \" is invalid.\" );\n    }\n    try {\n      userFound = account.lookupUserByName( request.getUserName( ) );\n    } catch ( Exception e ) {\n      LOG.debug( e, e );\n      if ( e instanceof AuthException && AuthException.NO_SUCH_USER.equals( e.getMessage( ) ) ) {\n        throw new EuareException( HttpResponseStatus.NOT_FOUND, EuareException.NO_SUCH_ENTITY, \"Can not find user \" + request.getUserName( ) );\n      } else {\n        throw new EucalyptusCloudException( e );\n      }\n    }\n    // Policy attached to account admin is the account policy. Only system admin can put policy to an account.\n    if ( userFound.isAccountAdmin( ) && !requestUser.isSystemAdmin( ) ){\n      throw new EuareException( HttpResponseStatus.FORBIDDEN, EuareException.NOT_AUTHORIZED, \"Only system admin can put policy on an account\" );      \n    }\n    if ( !Permissions.isAuthorized( PolicySpec.VENDOR_IAM, PolicySpec.IAM_RESOURCE_USER, Accounts.getUserFullName( userFound ), account, action, requestUser ) ) {\n      throw new EuareException( HttpResponseStatus.FORBIDDEN, EuareException.NOT_AUTHORIZED,\n                                \"Not authorized to put user policy for \" + request.getUserName( ) + \" by \" + requestUser.getName( ) );\n    }\n    try {\n      userFound.addPolicy( request.getPolicyName( ), request.getPolicyDocument( ) );\n    } catch ( PolicyParseException e ) {\n      LOG.debug( e, e );\n      throw new EuareException( HttpResponseStatus.BAD_REQUEST, EuareException.MALFORMED_POLICY_DOCUMENT, \"Error in uploaded policy: \" + request.getPolicyDocument( ), e );\n    } catch ( Exception e ) {\n      LOG.debug( e, e );\n      throw new EucalyptusCloudException( e );\n    }\n    return reply;\n  }","commit_id":"b1d47ff224b00f4437b7d052d29d63722bada029","url":"https://github.com/eucalyptus/eucalyptus"},{"original_method":"public UpdateGroupResponseType updateGroup(UpdateGroupType request) throws EucalyptusCloudException {\n    UpdateGroupResponseType reply = request.getReply( );\n    reply.getResponseMetadata( ).setRequestId( reply.getCorrelationId( ) );\n    String action = PolicySpec.requestToAction( request );\n    Context ctx = Contexts.lookup( );\n    User requestUser = ctx.getUser( );\n    Account account = getRealAccount( ctx, request.getDelegateAccount( ) );\n    Group groupFound = null;\n    try {\n      groupFound = account.lookupGroupByName( request.getGroupName( ) );\n    } catch ( Exception e ) {\n      LOG.debug( e, e );\n      if ( e instanceof AuthException && AuthException.NO_SUCH_GROUP.equals( e.getMessage( ) ) ) {\n        throw new EuareException( HttpResponseStatus.NOT_FOUND, EuareException.NO_SUCH_ENTITY, \"Can not find group \" + request.getGroupName( ) );\n      } else {\n        throw new EucalyptusCloudException( e );\n      }\n    }\n    if ( !Permissions.isAuthorized( PolicySpec.VENDOR_IAM, PolicySpec.IAM_RESOURCE_GROUP, Accounts.getGroupFullName( groupFound ), account, action, requestUser ) ) {\n      throw new EuareException( HttpResponseStatus.FORBIDDEN, EuareException.NOT_AUTHORIZED,\n                                \"Not authorized to update group \" + groupFound.getName( ) + \" by \" + requestUser.getName( ) );\n    }\n    try {\n      if ( request.getNewGroupName( ) != null && !\"\".equals( request.getNewGroupName( ) ) ) {\n        groupFound.setName( request.getNewGroupName( ) );\n      }\n      if ( request.getNewPath( ) != null && !\"\".equals( request.getNewPath( ) ) ) {\n        groupFound.setPath( sanitizePath( request.getNewPath( ) ) );\n      }\n    } catch ( Exception e ) {\n      LOG.debug( e, e );\n      throw new EucalyptusCloudException( e );\n    }\n    return reply;\n  }","id":16455,"modified_method":"public UpdateGroupResponseType updateGroup(UpdateGroupType request) throws EucalyptusCloudException {\n    UpdateGroupResponseType reply = request.getReply( );\n    reply.getResponseMetadata( ).setRequestId( reply.getCorrelationId( ) );\n    String action = PolicySpec.requestToAction( request );\n    Context ctx = Contexts.lookup( );\n    User requestUser = ctx.getUser( );\n    Account account = getRealAccount( ctx, request.getDelegateAccount( ) );\n    Group groupFound = null;\n    if ( Strings.isNullOrEmpty( request.getNewGroupName( ) ) ) {\n      try {\n        USER_AND_GROUP_NAME_CHECKER.check( request.getNewGroupName( ) );\n      } catch ( InvalidValueException e ) {\n        throw new EuareException( HttpResponseStatus.BAD_REQUEST, EuareException.INVALID_NAME, \"New group name: \" + request.getNewGroupName( ) + \" is invalid.\" );\n      }      \n    }\n    if ( Strings.isNullOrEmpty( request.getNewPath( ) ) ) {\n      try {\n        PATH_CHECKER.check( request.getNewPath( ) );\n      } catch ( InvalidValueException e ) {\n        throw new EuareException( HttpResponseStatus.BAD_REQUEST, EuareException.INVALID_NAME, \"New path: \" + request.getNewPath( ) + \" is invalid.\" );\n      }\n    }\n    try {\n      groupFound = account.lookupGroupByName( request.getGroupName( ) );\n    } catch ( Exception e ) {\n      LOG.debug( e, e );\n      if ( e instanceof AuthException && AuthException.NO_SUCH_GROUP.equals( e.getMessage( ) ) ) {\n        throw new EuareException( HttpResponseStatus.NOT_FOUND, EuareException.NO_SUCH_ENTITY, \"Can not find group \" + request.getGroupName( ) );\n      } else {\n        throw new EucalyptusCloudException( e );\n      }\n    }\n    if ( !Permissions.isAuthorized( PolicySpec.VENDOR_IAM, PolicySpec.IAM_RESOURCE_GROUP, Accounts.getGroupFullName( groupFound ), account, action, requestUser ) ) {\n      throw new EuareException( HttpResponseStatus.FORBIDDEN, EuareException.NOT_AUTHORIZED,\n                                \"Not authorized to update group \" + groupFound.getName( ) + \" by \" + requestUser.getName( ) );\n    }\n    try {\n      if ( Strings.isNullOrEmpty( request.getNewGroupName( ) ) ) {\n        groupFound.setName( request.getNewGroupName( ) );\n      }\n      if ( Strings.isNullOrEmpty( request.getNewPath( ) ) ) {\n        groupFound.setPath( sanitizePath( request.getNewPath( ) ) );\n      }\n    } catch ( Exception e ) {\n      LOG.debug( e, e );\n      throw new EucalyptusCloudException( e );\n    }\n    return reply;\n  }","commit_id":"b1d47ff224b00f4437b7d052d29d63722bada029","url":"https://github.com/eucalyptus/eucalyptus"},{"original_method":"public CreateGroupResponseType createGroup(CreateGroupType request) throws EucalyptusCloudException {\n    CreateGroupResponseType reply = request.getReply( );\n    reply.getResponseMetadata( ).setRequestId( reply.getCorrelationId( ) );\n    String action = PolicySpec.requestToAction( request );\n    Context ctx = Contexts.lookup( );\n    User requestUser = ctx.getUser( );\n    Account account = getRealAccount( ctx, request.getDelegateAccount( ) );\n    if ( !Permissions.isAuthorized( PolicySpec.VENDOR_IAM, PolicySpec.IAM_RESOURCE_GROUP, \"\", account, action, requestUser ) ) {\n      throw new EuareException( HttpResponseStatus.FORBIDDEN, EuareException.NOT_AUTHORIZED, \"Not authorized to create group by \" + requestUser.getName( ) );\n    }\n    if ( !Permissions.canAllocate( PolicySpec.VENDOR_IAM, PolicySpec.IAM_RESOURCE_GROUP, \"\", action, requestUser, 1L ) ) {\n      throw new EuareException( HttpResponseStatus.CONFLICT, EuareException.LIMIT_EXCEEDED, \"Group quota exceeded\" );\n    }\n    try {\n      Group newGroup = account.addGroup( request.getGroupName( ), sanitizePath( request.getPath( ) ) );\n      GroupType g = reply.getCreateGroupResult( ).getGroup( );\n      fillGroupResult( g, newGroup, account );\n    } catch ( Exception e ) {\n      LOG.debug( e, e );\n      if ( e instanceof AuthException && AuthException.GROUP_ALREADY_EXISTS.equals( e.getMessage( ) ) ) {\n        throw new EuareException( HttpResponseStatus.CONFLICT, EuareException.ENTITY_ALREADY_EXISTS, \"Group \" + request.getGroupName( ) + \" already exists.\" );\n      } else {\n        throw new EucalyptusCloudException( e );\n      }\n    }\n    return reply;\n  }","id":16456,"modified_method":"public CreateGroupResponseType createGroup(CreateGroupType request) throws EucalyptusCloudException {\n    CreateGroupResponseType reply = request.getReply( );\n    reply.getResponseMetadata( ).setRequestId( reply.getCorrelationId( ) );\n    String action = PolicySpec.requestToAction( request );\n    Context ctx = Contexts.lookup( );\n    User requestUser = ctx.getUser( );\n    Account account = getRealAccount( ctx, request.getDelegateAccount( ) );\n    try {\n      USER_AND_GROUP_NAME_CHECKER.check( request.getGroupName( ) );\n    } catch ( InvalidValueException e ) {\n      throw new EuareException( HttpResponseStatus.BAD_REQUEST, EuareException.INVALID_NAME, \"Group name: \" + request.getGroupName( ) + \" is invalid.\" );\n    }\n    try {\n      PATH_CHECKER.check( request.getPath( ) );\n    } catch ( InvalidValueException e ) {\n      throw new EuareException( HttpResponseStatus.BAD_REQUEST, EuareException.INVALID_NAME, \"Path: \" + request.getPath( ) + \" is invalid.\" );\n    }\n    if ( !Permissions.isAuthorized( PolicySpec.VENDOR_IAM, PolicySpec.IAM_RESOURCE_GROUP, \"\", account, action, requestUser ) ) {\n      throw new EuareException( HttpResponseStatus.FORBIDDEN, EuareException.NOT_AUTHORIZED, \"Not authorized to create group by \" + requestUser.getName( ) );\n    }\n    if ( !Permissions.canAllocate( PolicySpec.VENDOR_IAM, PolicySpec.IAM_RESOURCE_GROUP, \"\", action, requestUser, 1L ) ) {\n      throw new EuareException( HttpResponseStatus.CONFLICT, EuareException.LIMIT_EXCEEDED, \"Group quota exceeded\" );\n    }\n    try {\n      Group newGroup = account.addGroup( request.getGroupName( ), sanitizePath( request.getPath( ) ) );\n      GroupType g = reply.getCreateGroupResult( ).getGroup( );\n      fillGroupResult( g, newGroup, account );\n    } catch ( Exception e ) {\n      LOG.debug( e, e );\n      if ( e instanceof AuthException && AuthException.GROUP_ALREADY_EXISTS.equals( e.getMessage( ) ) ) {\n        throw new EuareException( HttpResponseStatus.CONFLICT, EuareException.ENTITY_ALREADY_EXISTS, \"Group \" + request.getGroupName( ) + \" already exists.\" );\n      } else {\n        throw new EucalyptusCloudException( e );\n      }\n    }\n    return reply;\n  }","commit_id":"b1d47ff224b00f4437b7d052d29d63722bada029","url":"https://github.com/eucalyptus/eucalyptus"},{"original_method":"public CreateAccountResponseType createAccount(CreateAccountType request) throws EucalyptusCloudException {\n    CreateAccountResponseType reply = request.getReply( );\n    reply.getResponseMetadata( ).setRequestId( reply.getCorrelationId( ) );\n    Context ctx = Contexts.lookup( );\n    User requestUser = ctx.getUser( );\n    if ( !ctx.hasAdministrativePrivileges( ) ) {\n      throw new EuareException( HttpResponseStatus.FORBIDDEN, EuareException.NOT_AUTHORIZED,\n                                \"Not authorized to create account by \" + requestUser.getName( ) );\n    }\n    try {\n      Account newAccount = Accounts.addAccount( request.getAccountName( ) );\n      User admin = newAccount.addUser( User.ACCOUNT_ADMIN, \"/\", true/*skipRegistration*/, true/*enabled*/, null/*info*/ );\n      admin.resetToken( );\n      admin.createConfirmationCode( );\n      //admin.createPassword( );\n      AccountType account = reply.getCreateAccountResult( ).getAccount( );\n      account.setAccountName( newAccount.getName( ) );\n      account.setAccountId( newAccount.getAccountNumber( ) );\n    } catch ( Exception e ) {\n      LOG.debug( e, e );\n      if ( e instanceof AuthException && AuthException.ACCOUNT_ALREADY_EXISTS.equals( e.getMessage( ) ) ) {\n        throw new EuareException( HttpResponseStatus.CONFLICT, EuareException.ENTITY_ALREADY_EXISTS, \"Account \" + request.getAccountName( ) + \" already exists.\" );\n      } else {\n        throw new EucalyptusCloudException( e );\n      }\n    }\n    return reply;\n  }","id":16457,"modified_method":"public CreateAccountResponseType createAccount(CreateAccountType request) throws EucalyptusCloudException {\n    CreateAccountResponseType reply = request.getReply( );\n    reply.getResponseMetadata( ).setRequestId( reply.getCorrelationId( ) );\n    Context ctx = Contexts.lookup( );\n    User requestUser = ctx.getUser( );\n    try {\n      ACCOUNT_NAME_CHECKER.check( request.getAccountName( ) );\n    } catch ( InvalidValueException e ) {\n      throw new EuareException( HttpResponseStatus.BAD_REQUEST, EuareException.INVALID_NAME, \"Account name: \" + request.getAccountName( ) + \" is invalid.\" );\n    }\n    if ( !ctx.hasAdministrativePrivileges( ) ) {\n      throw new EuareException( HttpResponseStatus.FORBIDDEN, EuareException.NOT_AUTHORIZED,\n                                \"Not authorized to create account by \" + requestUser.getName( ) );\n    }\n    try {\n      Account newAccount = Accounts.addAccount( request.getAccountName( ) );\n      User admin = newAccount.addUser( User.ACCOUNT_ADMIN, \"/\", true/*skipRegistration*/, true/*enabled*/, null/*info*/ );\n      admin.resetToken( );\n      admin.createConfirmationCode( );\n      //admin.createPassword( );\n      AccountType account = reply.getCreateAccountResult( ).getAccount( );\n      account.setAccountName( newAccount.getName( ) );\n      account.setAccountId( newAccount.getAccountNumber( ) );\n    } catch ( Exception e ) {\n      LOG.debug( e, e );\n      if ( e instanceof AuthException && AuthException.ACCOUNT_ALREADY_EXISTS.equals( e.getMessage( ) ) ) {\n        throw new EuareException( HttpResponseStatus.CONFLICT, EuareException.ENTITY_ALREADY_EXISTS, \"Account \" + request.getAccountName( ) + \" already exists.\" );\n      } else {\n        throw new EucalyptusCloudException( e );\n      }\n    }\n    return reply;\n  }","commit_id":"b1d47ff224b00f4437b7d052d29d63722bada029","url":"https://github.com/eucalyptus/eucalyptus"},{"original_method":"public CreateUserResponseType createUser(CreateUserType request) throws EucalyptusCloudException {\n    CreateUserResponseType reply = request.getReply( );\n    reply.getResponseMetadata( ).setRequestId( reply.getCorrelationId( ) );\n    String action = PolicySpec.requestToAction( request );\n    Context ctx = Contexts.lookup( );\n    User requestUser = ctx.getUser( );\n    Account account = getRealAccount( ctx, request.getDelegateAccount( ) );\n    if ( !Permissions.isAuthorized( PolicySpec.VENDOR_IAM, PolicySpec.IAM_RESOURCE_USER, \"\", account, action, requestUser ) ) {\n      throw new EuareException( HttpResponseStatus.FORBIDDEN, EuareException.NOT_AUTHORIZED, \"Not authorized to create user by \" + requestUser.getName( ) );\n    }\n    if ( !Permissions.canAllocate( PolicySpec.VENDOR_IAM, PolicySpec.IAM_RESOURCE_USER, \"\", action, requestUser, 1L ) ) {\n      throw new EuareException( HttpResponseStatus.CONFLICT, EuareException.LIMIT_EXCEEDED, \"User quota exceeded\" );\n    }\n    try {\n      User newUser = account.addUser( request.getUserName( ), sanitizePath( request.getPath( ) ), true, true, null );\n      UserType u = reply.getCreateUserResult( ).getUser( );\n      fillUserResult( u, newUser, account );\n    } catch ( Exception e ) {\n      LOG.debug( e, e );\n      if ( e instanceof AuthException && AuthException.USER_ALREADY_EXISTS.equals( e.getMessage( ) ) ) {\n        throw new EuareException( HttpResponseStatus.CONFLICT, EuareException.ENTITY_ALREADY_EXISTS, \"User \" + request.getUserName( ) + \" already exists.\" );\n      } else {\n        throw new EucalyptusCloudException( e );\n      }\n    }\n    return reply;\n  }","id":16458,"modified_method":"public CreateUserResponseType createUser(CreateUserType request) throws EucalyptusCloudException {\n    CreateUserResponseType reply = request.getReply( );\n    reply.getResponseMetadata( ).setRequestId( reply.getCorrelationId( ) );\n    String action = PolicySpec.requestToAction( request );\n    Context ctx = Contexts.lookup( );\n    User requestUser = ctx.getUser( );\n    Account account = getRealAccount( ctx, request.getDelegateAccount( ) );\n    try {\n      USER_AND_GROUP_NAME_CHECKER.check( request.getUserName( ) );\n    } catch ( InvalidValueException e ) {\n      throw new EuareException( HttpResponseStatus.BAD_REQUEST, EuareException.INVALID_NAME, \"User name: \" + request.getUserName( ) + \" is invalid.\" );\n    }\n    try {\n      PATH_CHECKER.check( request.getPath( ) );\n    } catch ( InvalidValueException e ) {\n      throw new EuareException( HttpResponseStatus.BAD_REQUEST, EuareException.INVALID_NAME, \"Path: \" + request.getPath( ) + \" is invalid.\" );\n    }\n    if ( !Permissions.isAuthorized( PolicySpec.VENDOR_IAM, PolicySpec.IAM_RESOURCE_USER, \"\", account, action, requestUser ) ) {\n      throw new EuareException( HttpResponseStatus.FORBIDDEN, EuareException.NOT_AUTHORIZED, \"Not authorized to create user by \" + requestUser.getName( ) );\n    }\n    if ( !Permissions.canAllocate( PolicySpec.VENDOR_IAM, PolicySpec.IAM_RESOURCE_USER, \"\", action, requestUser, 1L ) ) {\n      throw new EuareException( HttpResponseStatus.CONFLICT, EuareException.LIMIT_EXCEEDED, \"User quota exceeded\" );\n    }\n    try {\n      User newUser = account.addUser( request.getUserName( ), sanitizePath( request.getPath( ) ), true, true, null );\n      UserType u = reply.getCreateUserResult( ).getUser( );\n      fillUserResult( u, newUser, account );\n    } catch ( Exception e ) {\n      LOG.debug( e, e );\n      if ( e instanceof AuthException && AuthException.USER_ALREADY_EXISTS.equals( e.getMessage( ) ) ) {\n        throw new EuareException( HttpResponseStatus.CONFLICT, EuareException.ENTITY_ALREADY_EXISTS, \"User \" + request.getUserName( ) + \" already exists.\" );\n      } else {\n        throw new EucalyptusCloudException( e );\n      }\n    }\n    return reply;\n  }","commit_id":"b1d47ff224b00f4437b7d052d29d63722bada029","url":"https://github.com/eucalyptus/eucalyptus"},{"original_method":"public UpdateUserResponseType updateUser(UpdateUserType request) throws EucalyptusCloudException {\n    UpdateUserResponseType reply = request.getReply( );\n    reply.getResponseMetadata( ).setRequestId( reply.getCorrelationId( ) );\n    String action = PolicySpec.requestToAction( request );\n    Context ctx = Contexts.lookup( );\n    User requestUser = ctx.getUser( );\n    Account account = getRealAccount( ctx, request.getDelegateAccount( ) );\n    User userFound = null;\n    try {\n      userFound = account.lookupUserByName( request.getUserName( ) );\n      if ( userFound.isSystemAdmin( ) && userFound.isAccountAdmin( ) ) {\n        throw new AuthException( \"admin@eucalyptus can not be updated\" );\n      }\n    } catch ( Exception e ) {\n      LOG.debug( e, e );\n      if ( e instanceof AuthException && AuthException.NO_SUCH_USER.equals( e.getMessage( ) ) ) {\n        throw new EuareException( HttpResponseStatus.NOT_FOUND, EuareException.NO_SUCH_ENTITY, \"Can not find user \" + request.getUserName( ) );\n      } else {\n        throw new EucalyptusCloudException( e );\n      }\n    }\n    if ( !userFound.getName( ).equals( requestUser.getName( ) ) ) { \n      if ( !Permissions.isAuthorized( PolicySpec.VENDOR_IAM, PolicySpec.IAM_RESOURCE_USER, Accounts.getUserFullName( userFound ), account, action, requestUser ) ) {\n        throw new EuareException( HttpResponseStatus.FORBIDDEN, EuareException.NOT_AUTHORIZED, \"Not authorized to update user by \" + requestUser.getName( ) );\n      }\n    }\n    try {\n      if ( request.getNewUserName( ) != null && !\"\".equals( request.getNewUserName( ) ) ) {\n        userFound.setName( request.getNewUserName( ) );\n      }\n      if ( request.getNewPath( ) != null && !\"\".equals( request.getNewPath( ) ) ) {\n        userFound.setPath( sanitizePath( request.getNewPath( ) ) );\n      }\n    } catch ( Exception e ) {\n      LOG.debug( e, e );\n      throw new EucalyptusCloudException( e );\n    }\n    return reply;\n  }","id":16459,"modified_method":"public UpdateUserResponseType updateUser(UpdateUserType request) throws EucalyptusCloudException {\n    UpdateUserResponseType reply = request.getReply( );\n    reply.getResponseMetadata( ).setRequestId( reply.getCorrelationId( ) );\n    String action = PolicySpec.requestToAction( request );\n    Context ctx = Contexts.lookup( );\n    User requestUser = ctx.getUser( );\n    Account account = getRealAccount( ctx, request.getDelegateAccount( ) );\n    User userFound = null;\n    if ( Strings.isNullOrEmpty( request.getNewUserName( ) ) ) {\n      try {\n        USER_AND_GROUP_NAME_CHECKER.check( request.getNewUserName( ) );\n      } catch ( InvalidValueException e ) {\n        throw new EuareException( HttpResponseStatus.BAD_REQUEST, EuareException.INVALID_NAME, \"New group name: \" + request.getNewUserName( ) + \" is invalid.\" );\n      }      \n    }\n    if ( Strings.isNullOrEmpty( request.getNewPath( ) ) ) {\n      try {\n        PATH_CHECKER.check( request.getNewPath( ) );\n      } catch ( InvalidValueException e ) {\n        throw new EuareException( HttpResponseStatus.BAD_REQUEST, EuareException.INVALID_NAME, \"New path: \" + request.getNewPath( ) + \" is invalid.\" );\n      }\n    }\n    try {\n      userFound = account.lookupUserByName( request.getUserName( ) );\n      if ( userFound.isSystemAdmin( ) && userFound.isAccountAdmin( ) ) {\n        throw new AuthException( \"admin@eucalyptus can not be updated\" );\n      }\n    } catch ( Exception e ) {\n      LOG.debug( e, e );\n      if ( e instanceof AuthException && AuthException.NO_SUCH_USER.equals( e.getMessage( ) ) ) {\n        throw new EuareException( HttpResponseStatus.NOT_FOUND, EuareException.NO_SUCH_ENTITY, \"Can not find user \" + request.getUserName( ) );\n      } else {\n        throw new EucalyptusCloudException( e );\n      }\n    }\n    if ( !userFound.getName( ).equals( requestUser.getName( ) ) ) { \n      if ( !Permissions.isAuthorized( PolicySpec.VENDOR_IAM, PolicySpec.IAM_RESOURCE_USER, Accounts.getUserFullName( userFound ), account, action, requestUser ) ) {\n        throw new EuareException( HttpResponseStatus.FORBIDDEN, EuareException.NOT_AUTHORIZED, \"Not authorized to update user by \" + requestUser.getName( ) );\n      }\n    }\n    try {\n      if ( Strings.isNullOrEmpty( request.getNewUserName( ) ) ) {\n        userFound.setName( request.getNewUserName( ) );\n      }\n      if ( Strings.isNullOrEmpty( request.getNewPath( ) ) ) {\n        userFound.setPath( sanitizePath( request.getNewPath( ) ) );\n      }\n    } catch ( Exception e ) {\n      LOG.debug( e, e );\n      throw new EucalyptusCloudException( e );\n    }\n    return reply;\n  }","commit_id":"b1d47ff224b00f4437b7d052d29d63722bada029","url":"https://github.com/eucalyptus/eucalyptus"},{"original_method":"public CreateAccountAliasResponseType createAccountAlias(CreateAccountAliasType request) throws EucalyptusCloudException {\n    CreateAccountAliasResponseType reply = request.getReply( );\n    reply.getResponseMetadata( ).setRequestId( reply.getCorrelationId( ) );\n    String action = PolicySpec.requestToAction( request );\n    Context ctx = Contexts.lookup( );\n    User requestUser = ctx.getUser( );\n    Account account = getRealAccount( ctx, request.getDelegateAccount( ) );\n    if ( Account.SYSTEM_ACCOUNT.equals( account.getName( ) ) ) {\n      throw new EuareException( HttpResponseStatus.FORBIDDEN, EuareException.NOT_AUTHORIZED, \"Can not modify system account alias or name\" );\n    }\n    try {\n      Accounts.lookupAccountByName( request.getAccountAlias( ) );\n    } catch ( AuthException ae ) {\n      if ( !Permissions.isAuthorized( PolicySpec.VENDOR_IAM, PolicySpec.ALL_RESOURCE, PolicySpec.ALL_RESOURCE, account, action, requestUser ) ) {\n        throw new EuareException( HttpResponseStatus.FORBIDDEN, EuareException.NOT_AUTHORIZED, \"Not authorized to create account alias by \" + requestUser.getName( ) );\n      }\n      try {\n        account.setName( request.getAccountAlias( ) );\n        return reply;\n      } catch ( Exception e ) {\n        LOG.debug( e, e );\n        throw new EucalyptusCloudException( e );\n      }\n    }\n    throw new EuareException( HttpResponseStatus.CONFLICT, EuareException.ENTITY_ALREADY_EXISTS, \"Can not change to a name already in use: \" + request.getAccountAlias( ) );\n  }","id":16460,"modified_method":"public CreateAccountAliasResponseType createAccountAlias(CreateAccountAliasType request) throws EucalyptusCloudException {\n    CreateAccountAliasResponseType reply = request.getReply( );\n    reply.getResponseMetadata( ).setRequestId( reply.getCorrelationId( ) );\n    String action = PolicySpec.requestToAction( request );\n    Context ctx = Contexts.lookup( );\n    User requestUser = ctx.getUser( );\n    Account account = getRealAccount( ctx, request.getDelegateAccount( ) );\n    if ( Account.SYSTEM_ACCOUNT.equals( account.getName( ) ) ) {\n      throw new EuareException( HttpResponseStatus.FORBIDDEN, EuareException.NOT_AUTHORIZED, \"Can not modify system account alias or name\" );\n    }\n    try {\n      ACCOUNT_NAME_CHECKER.check( request.getAccountAlias( ) );\n    } catch ( InvalidValueException e ) {\n      throw new EuareException( HttpResponseStatus.BAD_REQUEST, EuareException.INVALID_NAME, \"Account alias: \" + request.getAccountAlias( ) + \" is invalid.\" );\n    }\n    try {\n      Accounts.lookupAccountByName( request.getAccountAlias( ) );\n    } catch ( AuthException ae ) {\n      if ( !Permissions.isAuthorized( PolicySpec.VENDOR_IAM, PolicySpec.ALL_RESOURCE, PolicySpec.ALL_RESOURCE, account, action, requestUser ) ) {\n        throw new EuareException( HttpResponseStatus.FORBIDDEN, EuareException.NOT_AUTHORIZED, \"Not authorized to create account alias by \" + requestUser.getName( ) );\n      }\n      try {\n        account.setName( request.getAccountAlias( ) );\n        return reply;\n      } catch ( Exception e ) {\n        LOG.debug( e, e );\n        throw new EucalyptusCloudException( e );\n      }\n    }\n    throw new EuareException( HttpResponseStatus.CONFLICT, EuareException.ENTITY_ALREADY_EXISTS, \"Can not change to a name already in use: \" + request.getAccountAlias( ) );\n  }","commit_id":"b1d47ff224b00f4437b7d052d29d63722bada029","url":"https://github.com/eucalyptus/eucalyptus"},{"original_method":"public PutGroupPolicyResponseType putGroupPolicy(PutGroupPolicyType request) throws EucalyptusCloudException {\n    PutGroupPolicyResponseType reply = request.getReply( );\n    reply.getResponseMetadata( ).setRequestId( reply.getCorrelationId( ) );\n    String action = PolicySpec.requestToAction( request );\n    Context ctx = Contexts.lookup( );\n    User requestUser = ctx.getUser( );\n    Account account = getRealAccount( ctx, request.getDelegateAccount( ) );\n    Group groupFound = null;\n    try {\n      groupFound = account.lookupGroupByName( request.getGroupName( ) );\n    } catch ( Exception e ) {\n      LOG.debug( e, e );\n      if ( e instanceof AuthException && AuthException.NO_SUCH_GROUP.equals( e.getMessage( ) ) ) {\n        throw new EuareException( HttpResponseStatus.NOT_FOUND, EuareException.NO_SUCH_ENTITY, \"Can not find group \" + request.getGroupName( ) );\n      } else {\n        throw new EucalyptusCloudException( e );\n      }\n    }\n    if ( !Permissions.isAuthorized( PolicySpec.VENDOR_IAM, PolicySpec.IAM_RESOURCE_GROUP, Accounts.getGroupFullName( groupFound ), account, action, requestUser ) ) {\n      throw new EuareException( HttpResponseStatus.FORBIDDEN, EuareException.NOT_AUTHORIZED,\n                                \"Not authorized to put group policy for \" + groupFound.getName( ) + \" by \" + requestUser.getName( ) );\n    }\n    try {\n      groupFound.addPolicy( request.getPolicyName( ), request.getPolicyDocument( ) );\n    } catch ( PolicyParseException e ) {\n      LOG.debug( e, e );\n      throw new EuareException( HttpResponseStatus.BAD_REQUEST, EuareException.MALFORMED_POLICY_DOCUMENT, \"Error in uploaded policy: \" + request.getPolicyDocument( ), e );\n    } catch ( Exception e ) {\n      LOG.debug( e, e );\n      throw new EucalyptusCloudException( e );\n    }\n    return reply;\n  }","id":16461,"modified_method":"public PutGroupPolicyResponseType putGroupPolicy(PutGroupPolicyType request) throws EucalyptusCloudException {\n    PutGroupPolicyResponseType reply = request.getReply( );\n    reply.getResponseMetadata( ).setRequestId( reply.getCorrelationId( ) );\n    String action = PolicySpec.requestToAction( request );\n    Context ctx = Contexts.lookup( );\n    User requestUser = ctx.getUser( );\n    Account account = getRealAccount( ctx, request.getDelegateAccount( ) );\n    Group groupFound = null;\n    try {\n      POLICY_NAME_CHECKER.check( request.getPolicyName( ) );\n    } catch ( InvalidValueException e ) {\n      throw new EuareException( HttpResponseStatus.BAD_REQUEST, EuareException.INVALID_NAME, \"Policy name: \" + request.getPolicyName( ) + \" is invalid.\" );\n    }\n    try {\n      groupFound = account.lookupGroupByName( request.getGroupName( ) );\n    } catch ( Exception e ) {\n      LOG.debug( e, e );\n      if ( e instanceof AuthException && AuthException.NO_SUCH_GROUP.equals( e.getMessage( ) ) ) {\n        throw new EuareException( HttpResponseStatus.NOT_FOUND, EuareException.NO_SUCH_ENTITY, \"Can not find group \" + request.getGroupName( ) );\n      } else {\n        throw new EucalyptusCloudException( e );\n      }\n    }\n    if ( !Permissions.isAuthorized( PolicySpec.VENDOR_IAM, PolicySpec.IAM_RESOURCE_GROUP, Accounts.getGroupFullName( groupFound ), account, action, requestUser ) ) {\n      throw new EuareException( HttpResponseStatus.FORBIDDEN, EuareException.NOT_AUTHORIZED,\n                                \"Not authorized to put group policy for \" + groupFound.getName( ) + \" by \" + requestUser.getName( ) );\n    }\n    try {\n      groupFound.addPolicy( request.getPolicyName( ), request.getPolicyDocument( ) );\n    } catch ( PolicyParseException e ) {\n      LOG.debug( e, e );\n      throw new EuareException( HttpResponseStatus.BAD_REQUEST, EuareException.MALFORMED_POLICY_DOCUMENT, \"Error in uploaded policy: \" + request.getPolicyDocument( ), e );\n    } catch ( Exception e ) {\n      LOG.debug( e, e );\n      throw new EucalyptusCloudException( e );\n    }\n    return reply;\n  }","commit_id":"b1d47ff224b00f4437b7d052d29d63722bada029","url":"https://github.com/eucalyptus/eucalyptus"},{"original_method":"@Nullable\n    private ClassDescriptor getClassOrObjectDescriptor(@NotNull ConcurrentMap<Name, ClassDescriptor> cache, @NotNull Name name, boolean object) {\n        ClassDescriptor known = cache.get(name);\n        if (known != null) return known;\n\n        if (allDescriptorsComputed) return null;\n\n        Collection<JetClassOrObject> classOrObjectDeclarations = declarationProvider.getClassOrObjectDeclarations(name);\n        if (classOrObjectDeclarations.isEmpty()) return null;\n\n        ClassDescriptor result = null;\n\n        for (JetClassOrObject classOrObjectDeclaration : classOrObjectDeclarations) {\n\n            // TODO: when enum entries with constructors are dropped, replace with declaresObjectOrEnumConstant()\n            if (object != declaresObjectOrEnumConstant(classOrObjectDeclaration)) continue;\n\n            ClassDescriptor classDescriptor = new LazyClassDescriptor(resolveSession, thisDescriptor, name,\n                                                                      JetClassInfoUtil.createClassLikeInfo(classOrObjectDeclaration));\n\n            ClassDescriptor oldValue = cache.putIfAbsent(name, classDescriptor);\n            if (oldValue != null) return oldValue;\n\n            if (!object) {\n                registerDescriptor(classDescriptor);\n            }\n\n            result = classDescriptor;\n        }\n        return result;\n    }","id":16462,"modified_method":"@Nullable\n    private ClassDescriptor resolveClassOrObjectDescriptor(@NotNull Name name, boolean object) {\n        Collection<JetClassOrObject> classOrObjectDeclarations = declarationProvider.getClassOrObjectDeclarations(name);\n        if (classOrObjectDeclarations.isEmpty()) return null;\n\n        for (JetClassOrObject classOrObjectDeclaration : classOrObjectDeclarations) {\n\n            // TODO: when enum entries with constructors are dropped, replace with declaresObjectOrEnumConstant()\n            if (object != declaresObjectOrEnumConstant(classOrObjectDeclaration)) continue;\n\n            ClassDescriptor classDescriptor = new LazyClassDescriptor(resolveSession, thisDescriptor, name,\n                                                                      JetClassInfoUtil.createClassLikeInfo(classOrObjectDeclaration));\n\n            if (!object) {\n                registerDescriptor(classDescriptor);\n            }\n\n            return classDescriptor;\n        }\n        return null;\n    }","commit_id":"ccbd4018b149c8217a879f255b2ebc588ceabddc","url":"https://github.com/JetBrains/kotlin"},{"original_method":"@NotNull\n    @Override\n    public Set<FunctionDescriptor> getFunctions(@NotNull Name name) {\n        Set<FunctionDescriptor> known = functionDescriptors.get(name);\n        if (known != null) return known;\n\n        // If all descriptors are already computed, we are\n        if (allDescriptorsComputed) return Collections.emptySet();\n\n        Set<FunctionDescriptor> result = Sets.newLinkedHashSet();\n\n        Collection<JetNamedFunction> declarations = declarationProvider.getFunctionDeclarations(name);\n        for (JetNamedFunction functionDeclaration : declarations) {\n            JetScope resolutionScope = getScopeForMemberDeclarationResolution(functionDeclaration);\n            result.add(resolveSession.getInjector().getDescriptorResolver().resolveFunctionDescriptor(thisDescriptor, resolutionScope,\n                                                                                                      functionDeclaration,\n                                                                                                      resolveSession.getTrace()));\n        }\n\n        getNonDeclaredFunctions(name, result);\n\n        if (!result.isEmpty()) {\n            Set<FunctionDescriptor> oldValue = functionDescriptors.putIfAbsent(name, result);\n            if (oldValue != null) return oldValue;\n\n            registerDescriptors(result);\n        }\n        return result;\n    }","id":16463,"modified_method":"@NotNull\n    @Override\n    public Set<FunctionDescriptor> getFunctions(@NotNull Name name) {\n        return functionDescriptors.fun(name);\n    }","commit_id":"ccbd4018b149c8217a879f255b2ebc588ceabddc","url":"https://github.com/JetBrains/kotlin"},{"original_method":"@NotNull\n    @Override\n    public Set<VariableDescriptor> getProperties(@NotNull Name name) {\n        Set<VariableDescriptor> known = propertyDescriptors.get(name);\n        if (known != null) return known;\n\n        // If all descriptors are already computed, we are\n        if (allDescriptorsComputed) return Collections.emptySet();\n\n        Set<VariableDescriptor> result = Sets.newLinkedHashSet();\n\n        Collection<JetProperty> declarations = declarationProvider.getPropertyDeclarations(name);\n        for (JetProperty propertyDeclaration : declarations) {\n            JetScope resolutionScope = getScopeForMemberDeclarationResolution(propertyDeclaration);\n            result.add(resolveSession.getInjector().getDescriptorResolver().resolvePropertyDescriptor(thisDescriptor, resolutionScope,\n                                                                                                      propertyDeclaration,\n                                                                                                      resolveSession.getTrace()));\n        }\n\n        // Objects are also properties\n        Collection<JetClassOrObject> classOrObjectDeclarations = declarationProvider.getClassOrObjectDeclarations(name);\n        for (JetClassOrObject classOrObjectDeclaration : classOrObjectDeclarations) {\n            if (declaresObjectOrEnumConstant(classOrObjectDeclaration)) {\n                ClassDescriptor classifier = getObjectDescriptor(name);\n                if (classifier == null) {\n                    throw new IllegalStateException(\"Object declaration \" + name + \" found in the DeclarationProvider \" + declarationProvider + \" but not in the scope \" + this);\n                }\n                VariableDescriptor propertyDescriptor = resolveSession.getInjector().getDescriptorResolver()\n                        .resolveObjectDeclaration(thisDescriptor, classOrObjectDeclaration, classifier, resolveSession.getTrace());\n                result.add(propertyDescriptor);\n            }\n        }\n\n        getNonDeclaredProperties(name, result);\n\n        if (!result.isEmpty()) {\n            Set<VariableDescriptor> oldValue = propertyDescriptors.putIfAbsent(name, result);\n            if (oldValue != null) return oldValue;\n\n            registerDescriptors(result);\n        }\n        return result;\n    }","id":16464,"modified_method":"@NotNull\n    @Override\n    public Set<VariableDescriptor> getProperties(@NotNull Name name) {\n        return propertyDescriptors.fun(name);\n    }","commit_id":"ccbd4018b149c8217a879f255b2ebc588ceabddc","url":"https://github.com/JetBrains/kotlin"},{"original_method":"protected AbstractLazyMemberScope(\n            @NotNull ResolveSession resolveSession,\n            @NotNull DP declarationProvider,\n            @NotNull D thisDescriptor\n    ) {\n        this.resolveSession = resolveSession;\n        this.declarationProvider = declarationProvider;\n        this.thisDescriptor = thisDescriptor;\n\n        StorageManager storageManager = resolveSession.getStorageManager();\n        this.classDescriptors = storageManager.createConcurrentMap();\n        this.objectDescriptors = storageManager.createConcurrentMap();\n        this.functionDescriptors = storageManager.createConcurrentMap();\n        this.propertyDescriptors = storageManager.createConcurrentMap();\n        this.allDescriptors = storageManager.createConcurrentCollection();\n    }","id":16465,"modified_method":"protected AbstractLazyMemberScope(\n            @NotNull ResolveSession resolveSession,\n            @NotNull DP declarationProvider,\n            @NotNull D thisDescriptor\n    ) {\n        this.resolveSession = resolveSession;\n        this.declarationProvider = declarationProvider;\n        this.thisDescriptor = thisDescriptor;\n\n        StorageManager storageManager = resolveSession.getStorageManager();\n        this.classDescriptors = storageManager.createMemoizedFunctionWithNullableValues(new Function<Name, ClassDescriptor>() {\n            @Override\n            public ClassDescriptor fun(Name name) {\n                return resolveClassOrObjectDescriptor(name, false);\n            }\n        }, STRONG);\n        this.objectDescriptors = storageManager.createMemoizedFunctionWithNullableValues(new Function<Name, ClassDescriptor>() {\n            @Override\n            public ClassDescriptor fun(Name name) {\n                return resolveClassOrObjectDescriptor(name, true);\n            }\n        }, STRONG);\n\n        this.functionDescriptors = storageManager.createMemoizedFunction(new Function<Name, Set<FunctionDescriptor>>() {\n            @Override\n            public Set<FunctionDescriptor> fun(Name name) {\n                return doGetFunctions(name);\n            }\n        }, STRONG);\n        this.propertyDescriptors = storageManager.createMemoizedFunction(new Function<Name, Set<VariableDescriptor>>() {\n            @Override\n            public Set<VariableDescriptor> fun(Name name) {\n                return doGetProperties(name);\n            }\n        }, STRONG);\n\n        this.allDescriptors = storageManager.createConcurrentCollection();\n    }","commit_id":"ccbd4018b149c8217a879f255b2ebc588ceabddc","url":"https://github.com/JetBrains/kotlin"},{"original_method":"@Override\n    public ClassDescriptor getObjectDescriptor(@NotNull Name name) {\n        return getClassOrObjectDescriptor(objectDescriptors, name, true);\n    }","id":16466,"modified_method":"@Override\n    public ClassDescriptor getObjectDescriptor(@NotNull Name name) {\n        return objectDescriptors.fun(name);\n    }","commit_id":"ccbd4018b149c8217a879f255b2ebc588ceabddc","url":"https://github.com/JetBrains/kotlin"},{"original_method":"@Override\n    public ClassifierDescriptor getClassifier(@NotNull Name name) {\n        return getClassOrObjectDescriptor(classDescriptors, name, false);\n    }","id":16467,"modified_method":"@Override\n    public ClassifierDescriptor getClassifier(@NotNull Name name) {\n        return classDescriptors.fun(name);\n    }","commit_id":"ccbd4018b149c8217a879f255b2ebc588ceabddc","url":"https://github.com/JetBrains/kotlin"},{"original_method":"@Override\n    public PackageMemberDeclarationProvider getPackageMemberDeclarationProvider(@NotNull FqName packageFqName) {\n        PackageMemberDeclarationProvider cached = packageDeclarationProviders.get(packageFqName);\n        if (cached != null) {\n            return cached;\n        }\n\n        if (!isPackageDeclaredExplicitly(packageFqName)) {\n            if (isPackageDeclaredExternally.apply(packageFqName)) {\n                return EmptyPackageMemberDeclarationProvider.INSTANCE;\n            }\n            return null;\n        }\n\n        FileBasedPackageMemberDeclarationProvider provider =\n                new FileBasedPackageMemberDeclarationProvider(storageManager, packageFqName, this, index.get().filesByPackage.get(packageFqName));\n\n        PackageMemberDeclarationProvider oldValue = packageDeclarationProviders.putIfAbsent(packageFqName, provider);\n        if (oldValue != null) {\n            return oldValue;\n        }\n\n        return provider;\n    }","id":16468,"modified_method":"@Override\n    public PackageMemberDeclarationProvider getPackageMemberDeclarationProvider(@NotNull FqName packageFqName) {\n        return packageDeclarationProviders.fun(packageFqName);\n    }","commit_id":"ccbd4018b149c8217a879f255b2ebc588ceabddc","url":"https://github.com/JetBrains/kotlin"},{"original_method":"public FileBasedDeclarationProviderFactory(\n            @NotNull StorageManager storageManager,\n            @NotNull final Collection<JetFile> files,\n            @NotNull Predicate<FqName> isPackageDeclaredExternally\n    ) {\n        this.storageManager = storageManager;\n        this.isPackageDeclaredExternally = isPackageDeclaredExternally;\n        this.index = storageManager.createLazyValue(new Computable<Index>() {\n            @Override\n            public Index compute() {\n                return computeFilesByPackage(files);\n            }\n        });\n        this.packageDeclarationProviders = storageManager.createConcurrentMap();\n    }","id":16469,"modified_method":"public FileBasedDeclarationProviderFactory(\n            @NotNull StorageManager storageManager,\n            @NotNull final Collection<JetFile> files,\n            @NotNull Predicate<FqName> isPackageDeclaredExternally\n    ) {\n        this.storageManager = storageManager;\n        this.isPackageDeclaredExternally = isPackageDeclaredExternally;\n        this.index = storageManager.createLazyValue(new Computable<Index>() {\n            @Override\n            public Index compute() {\n                return computeFilesByPackage(files);\n            }\n        });\n        this.packageDeclarationProviders = storageManager.createMemoizedFunctionWithNullableValues(new Function<FqName, PackageMemberDeclarationProvider>() {\n            @Override\n            public PackageMemberDeclarationProvider fun(FqName fqName) {\n                return createPackageMemberDeclarationProvider(fqName);\n            }\n        }, StorageManager.MemoizationMode.STRONG);\n    }","commit_id":"ccbd4018b149c8217a879f255b2ebc588ceabddc","url":"https://github.com/JetBrains/kotlin"},{"original_method":"public LazyClassDescriptor(\n            @NotNull ResolveSession resolveSession,\n            @NotNull DeclarationDescriptor containingDeclaration,\n            @NotNull Name name,\n            @NotNull JetClassLikeInfo classLikeInfo\n    ) {\n        this.resolveSession = resolveSession;\n        this.name = name;\n\n        if (classLikeInfo.getCorrespondingClassOrObject() != null) {\n            this.resolveSession.getTrace().record(BindingContext.CLASS, classLikeInfo.getCorrespondingClassOrObject(), this);\n        }\n\n        this.originalClassInfo = classLikeInfo;\n        JetClassLikeInfo classLikeInfoForMembers =\n                classLikeInfo.getClassKind() != ClassKind.ENUM_CLASS ? classLikeInfo : noEnumEntries(classLikeInfo);\n        this.declarationProvider = resolveSession.getDeclarationProviderFactory().getClassMemberDeclarationProvider(classLikeInfoForMembers);\n        this.containingDeclaration = containingDeclaration;\n        this.unsubstitutedMemberScope = new LazyClassMemberScope(resolveSession, declarationProvider, this);\n        this.unsubstitutedInnerClassesScope = new InnerClassesScopeWrapper(unsubstitutedMemberScope);\n\n        this.typeConstructor = new LazyClassTypeConstructor();\n\n        JetModifierList modifierList = classLikeInfo.getModifierList();\n        this.kind = classLikeInfo.getClassKind();\n        if (kind.isObject()) {\n            this.modality = Modality.FINAL;\n        }\n        else {\n            Modality defaultModality = kind == ClassKind.TRAIT ? Modality.ABSTRACT : Modality.FINAL;\n            this.modality = resolveModalityFromModifiers(modifierList, defaultModality);\n        }\n        this.visibility = resolveVisibilityFromModifiers(modifierList, getDefaultClassVisibility(this));\n        this.isInner = isInnerClass(modifierList);\n\n        StorageManager storageManager = resolveSession.getStorageManager();\n        this.thisAsReceiverParameter = storageManager.createLazyValue(new Computable<ReceiverParameterDescriptor>() {\n            @Override\n            public ReceiverParameterDescriptor compute() {\n                return DescriptorResolver.createLazyReceiverParameterDescriptor(LazyClassDescriptor.this);\n            }\n        });\n        this.annotations = storageManager.createLazyValue(new Computable<List<AnnotationDescriptor>>() {\n            @Override\n            public List<AnnotationDescriptor> compute() {\n                return resolveAnnotations();\n            }\n        });\n        this.classObjectDescriptor = storageManager.createLazyValue(new Computable<Optional<ClassDescriptor>>() {\n            @Override\n            public Optional<ClassDescriptor> compute() {\n                return Optional.fromNullable(computeClassObjectDescriptor());\n            }\n        });\n        this.scopeForClassHeaderResolution = storageManager.createLazyValue(new Computable<JetScope>() {\n            @Override\n            public JetScope compute() {\n                return computeScopeForClassHeaderResolution();\n            }\n        });\n        this.scopeForMemberDeclarationResolution = storageManager.createLazyValue(new Computable<JetScope>() {\n            @Override\n            public JetScope compute() {\n                return computeScopeForMemberDeclarationResolution();\n            }\n        });\n        this.scopeForPropertyInitializerResolution = storageManager.createLazyValue(new Computable<JetScope>() {\n            @Override\n            public JetScope compute() {\n                return computeScopeForPropertyInitializerResolution();\n            }\n        });\n    }","id":16470,"modified_method":"public LazyClassDescriptor(\n            @NotNull ResolveSession resolveSession,\n            @NotNull DeclarationDescriptor containingDeclaration,\n            @NotNull Name name,\n            @NotNull JetClassLikeInfo classLikeInfo\n    ) {\n        this.resolveSession = resolveSession;\n        this.name = name;\n\n        if (classLikeInfo.getCorrespondingClassOrObject() != null) {\n            this.resolveSession.getTrace().record(BindingContext.CLASS, classLikeInfo.getCorrespondingClassOrObject(), this);\n        }\n\n        this.originalClassInfo = classLikeInfo;\n        JetClassLikeInfo classLikeInfoForMembers =\n                classLikeInfo.getClassKind() != ClassKind.ENUM_CLASS ? classLikeInfo : noEnumEntries(classLikeInfo);\n        this.declarationProvider = resolveSession.getDeclarationProviderFactory().getClassMemberDeclarationProvider(classLikeInfoForMembers);\n        this.containingDeclaration = containingDeclaration;\n        this.unsubstitutedMemberScope = new LazyClassMemberScope(resolveSession, declarationProvider, this);\n        this.unsubstitutedInnerClassesScope = new InnerClassesScopeWrapper(unsubstitutedMemberScope);\n\n        this.typeConstructor = new LazyClassTypeConstructor();\n\n        JetModifierList modifierList = classLikeInfo.getModifierList();\n        this.kind = classLikeInfo.getClassKind();\n        if (kind.isObject()) {\n            this.modality = Modality.FINAL;\n        }\n        else {\n            Modality defaultModality = kind == ClassKind.TRAIT ? Modality.ABSTRACT : Modality.FINAL;\n            this.modality = resolveModalityFromModifiers(modifierList, defaultModality);\n        }\n        this.visibility = resolveVisibilityFromModifiers(modifierList, getDefaultClassVisibility(this));\n        this.isInner = isInnerClass(modifierList);\n\n        StorageManager storageManager = resolveSession.getStorageManager();\n        this.thisAsReceiverParameter = storageManager.createLazyValue(new Computable<ReceiverParameterDescriptor>() {\n            @Override\n            public ReceiverParameterDescriptor compute() {\n                return DescriptorResolver.createLazyReceiverParameterDescriptor(LazyClassDescriptor.this);\n            }\n        });\n        this.annotations = storageManager.createLazyValue(new Computable<List<AnnotationDescriptor>>() {\n            @Override\n            public List<AnnotationDescriptor> compute() {\n                return resolveAnnotations();\n            }\n        });\n        this.classObjectDescriptor = storageManager.createNullableLazyValue(new Computable<ClassDescriptor>() {\n            @Override\n            public ClassDescriptor compute() {\n                return computeClassObjectDescriptor();\n            }\n        });\n        this.scopeForClassHeaderResolution = storageManager.createLazyValue(new Computable<JetScope>() {\n            @Override\n            public JetScope compute() {\n                return computeScopeForClassHeaderResolution();\n            }\n        });\n        this.scopeForMemberDeclarationResolution = storageManager.createLazyValue(new Computable<JetScope>() {\n            @Override\n            public JetScope compute() {\n                return computeScopeForMemberDeclarationResolution();\n            }\n        });\n        this.scopeForPropertyInitializerResolution = storageManager.createLazyValue(new Computable<JetScope>() {\n            @Override\n            public JetScope compute() {\n                return computeScopeForPropertyInitializerResolution();\n            }\n        });\n    }","commit_id":"ccbd4018b149c8217a879f255b2ebc588ceabddc","url":"https://github.com/JetBrains/kotlin"},{"original_method":"@Override\n    public ClassDescriptor getClassObjectDescriptor() {\n        return classObjectDescriptor.get().orNull();\n    }","id":16471,"modified_method":"@Override\n    public ClassDescriptor getClassObjectDescriptor() {\n        return classObjectDescriptor.get();\n    }","commit_id":"ccbd4018b149c8217a879f255b2ebc588ceabddc","url":"https://github.com/JetBrains/kotlin"},{"original_method":"@Nullable\n    public ConstructorDescriptor getPrimaryConstructor() {\n        return primaryConstructor.get().orNull();\n    }","id":16472,"modified_method":"@Nullable\n    public ConstructorDescriptor getPrimaryConstructor() {\n        return primaryConstructor.get();\n    }","commit_id":"ccbd4018b149c8217a879f255b2ebc588ceabddc","url":"https://github.com/JetBrains/kotlin"},{"original_method":"public LazyClassMemberScope(\n            @NotNull ResolveSession resolveSession,\n            @NotNull ClassMemberDeclarationProvider declarationProvider,\n            @NotNull LazyClassDescriptor thisClass\n    ) {\n        super(resolveSession, declarationProvider, thisClass);\n        this.primaryConstructor = resolveSession.getStorageManager().createLazyValue(new Computable<Optional<ConstructorDescriptor>>() {\n            @Override\n            public Optional<ConstructorDescriptor> compute() {\n                return Optional.fromNullable(resolvePrimaryConstructor());\n            }\n        });\n    }","id":16473,"modified_method":"public LazyClassMemberScope(\n            @NotNull ResolveSession resolveSession,\n            @NotNull ClassMemberDeclarationProvider declarationProvider,\n            @NotNull LazyClassDescriptor thisClass\n    ) {\n        super(resolveSession, declarationProvider, thisClass);\n        this.primaryConstructor = resolveSession.getStorageManager().createNullableLazyValue(new Computable<ConstructorDescriptor>() {\n            @Override\n            public ConstructorDescriptor compute() {\n                return resolvePrimaryConstructor();\n            }\n        });\n    }","commit_id":"ccbd4018b149c8217a879f255b2ebc588ceabddc","url":"https://github.com/JetBrains/kotlin"},{"original_method":"public LazyPackageMemberScope(@NotNull ResolveSession resolveSession,\n            @NotNull PackageMemberDeclarationProvider declarationProvider,\n            @NotNull NamespaceDescriptor thisPackage) {\n        super(resolveSession, declarationProvider, thisPackage);\n\n        this.packageDescriptors = resolveSession.getStorageManager().createConcurrentMap();\n    }","id":16474,"modified_method":"public LazyPackageMemberScope(@NotNull ResolveSession resolveSession,\n            @NotNull PackageMemberDeclarationProvider declarationProvider,\n            @NotNull NamespaceDescriptor thisPackage) {\n        super(resolveSession, declarationProvider, thisPackage);\n\n        this.packageDescriptors = resolveSession.getStorageManager().createMemoizedFunctionWithNullableValues(new Function<Name, NamespaceDescriptor>() {\n            @Override\n            public NamespaceDescriptor fun(Name name) {\n                return createPackageDescriptor(name);\n            }\n        }, StorageManager.MemoizationMode.STRONG);\n    }","commit_id":"ccbd4018b149c8217a879f255b2ebc588ceabddc","url":"https://github.com/JetBrains/kotlin"},{"original_method":"@Override\n    public NamespaceDescriptor getNamespace(@NotNull Name name) {\n        NamespaceDescriptor known = packageDescriptors.get(name);\n        if (known != null) return known;\n\n        if (allDescriptorsComputed) return null;\n\n        if (!declarationProvider.isPackageDeclared(name)) return null;\n\n        PackageMemberDeclarationProvider packageMemberDeclarationProvider = resolveSession.getDeclarationProviderFactory().getPackageMemberDeclarationProvider(\n                DescriptorUtils.getFQName(thisDescriptor).child(name).toSafe());\n        assert packageMemberDeclarationProvider != null : \"Package is declared, but declaration provider is not found: \" + name;\n        NamespaceDescriptor namespaceDescriptor = new LazyPackageDescriptor(thisDescriptor, name, resolveSession, packageMemberDeclarationProvider);\n\n        NamespaceDescriptor oldValue = packageDescriptors.putIfAbsent(name, namespaceDescriptor);\n        if (oldValue != null) return oldValue;\n\n        registerDescriptor(namespaceDescriptor);\n\n        return namespaceDescriptor;\n    }","id":16475,"modified_method":"@Override\n    public NamespaceDescriptor getNamespace(@NotNull Name name) {\n        return packageDescriptors.fun(name);\n    }","commit_id":"ccbd4018b149c8217a879f255b2ebc588ceabddc","url":"https://github.com/JetBrains/kotlin"},{"original_method":"/**\n\t * set all functions available\n\t */\n\tpublic void setReady() {\n\t\tappIsReady = true;\n\t\tti.setImage(this.trayIcon);\n        if (OS.isMacArchitecture) setDockIcon(trayIcon);\n        ti.setToolTip(readyMessage());\n        this.menuItemHeadline.setLabel(readyMessage());\n        this.menuItemSearch.setEnabled(true);\n        this.menuItemAdministration.setEnabled(true);\n        this.menuItemTerminate.setEnabled(true);\n\t}","id":16476,"modified_method":"/**\n\t * set all functions available\n\t */\n\tpublic void setReady() {\n\t\tappIsReady = true;\n\t\tif (ti != null) {\n\t        ti.setImage(this.trayIcon);\n\t        ti.setToolTip(readyMessage());\n\t\t}\n        setDockIcon(trayIcon);\n        if (this.menuItemHeadline != null) this.menuItemHeadline.setLabel(readyMessage());\n        if (this.menuItemSearch != null) this.menuItemSearch.setEnabled(true);\n        if (this.menuItemAdministration != null) this.menuItemAdministration.setEnabled(true);\n        if (this.menuItemTerminate != null) this.menuItemTerminate.setEnabled(true);\n\t}","commit_id":"4709d8417c1d9be5f94db29e3604b63ae03c64e7","url":"https://github.com/yacy/yacy_search_server"},{"original_method":"private static void setDockIcon(Image icon) {\n\t    try {\n\t        Class<?> applicationClass = Class.forName(\"com.apple.eawt.Application\");\n\t        Method applicationGetApplication = applicationClass.getMethod(\"getApplication\");\n\t        Object applicationInstance = applicationGetApplication.invoke(null);\n\t        Method setDockIconImage = applicationClass.getMethod(\"setDockIconImage\", Class.forName(\"java.awt.Image\"));\n\t        setDockIconImage.invoke(applicationInstance, icon);\n        } catch (Throwable e) {}\n        // same as: Application.getApplication().setDockIconImage(i);\n\t}","id":16477,"modified_method":"private static void setDockIcon(Image icon) {\n\t    if (!OS.isMacArchitecture) return;\n\t    try {\n\t        Class<?> applicationClass = Class.forName(\"com.apple.eawt.Application\");\n\t        Method applicationGetApplication = applicationClass.getMethod(\"getApplication\");\n\t        Object applicationInstance = applicationGetApplication.invoke(null);\n\t        Method setDockIconImage = applicationClass.getMethod(\"setDockIconImage\", Class.forName(\"java.awt.Image\"));\n\t        setDockIconImage.invoke(applicationInstance, icon);\n        } catch (Throwable e) {}\n        // same as: Application.getApplication().setDockIconImage(i);\n\t}","commit_id":"4709d8417c1d9be5f94db29e3604b63ae03c64e7","url":"https://github.com/yacy/yacy_search_server"},{"original_method":"/**\n     * Returns the toolbar component of this action\n     * \n     * @return component  the toolbar button\n     */\n    @Override\n    public Component getToolbarPresenter() {\n        //ImageIcon icon = new ImageIcon(getClass().getResource(\"addImage-icon.png\"));\n        //toolbarButton.setIcon(icon);\n        toolbarButton.setText(this.getName());\n        return toolbarButton;\n    }","id":16478,"modified_method":"/**\n     * Returns the toolbar component of this action\n     * \n     * @return component  the toolbar button\n     */\n    @Override\n    public Component getToolbarPresenter() {\n        ImageIcon icon = new ImageIcon(getClass().getResource(\"btn_icon_add_image.png\"));\n        toolbarButton.setIcon(icon);\n        toolbarButton.setText(this.getName());\n        return toolbarButton;\n    }","commit_id":"3f66dd3a0b5d5d0566ebc9ddcefdbef65b9d82b2","url":"https://github.com/sleuthkit/autopsy"},{"original_method":"/**\n     * Returns the toolbar component of this action\n     *\n     * @return component  the toolbar button\n     */\n    @Override\n    public Component getToolbarPresenter() {\n        //ImageIcon icon = new ImageIcon(getClass().getResource(\"close-icon.png\"));\n        //toolbarButton.setIcon(icon);\n        toolbarButton.setText(this.getName());\n        return toolbarButton;\n    }","id":16479,"modified_method":"/**\n     * Returns the toolbar component of this action\n     *\n     * @return component  the toolbar button\n     */\n    @Override\n    public Component getToolbarPresenter() {\n        ImageIcon icon = new ImageIcon(getClass().getResource(\"btn_icon_close_case.png\"));\n        toolbarButton.setIcon(icon);\n        toolbarButton.setText(this.getName());\n        return toolbarButton;\n    }","commit_id":"3f66dd3a0b5d5d0566ebc9ddcefdbef65b9d82b2","url":"https://github.com/sleuthkit/autopsy"},{"original_method":"/** This method is called from within the constructor to\n     * initialize the form.\n     * WARNING: Do NOT modify this code. The content of this method is\n     * always regenerated by the Form Editor.\n     */\n    // <editor-fold defaultstate=\"collapsed\" desc=\"Generated Code\">//GEN-BEGIN:initComponents\n    private void initComponents() {\n\n        jScrollPane1 = new BeanTreeView();\n        backButton = new javax.swing.JButton();\n        forwardButton = new javax.swing.JButton();\n\n        backButton.setIcon(new javax.swing.ImageIcon(getClass().getResource(\"/org/sleuthkit/autopsy/directorytree/arrow_left.gif\"))); // NOI18N\n        org.openide.awt.Mnemonics.setLocalizedText(backButton, org.openide.util.NbBundle.getMessage(DirectoryTreeTopComponent.class, \"DirectoryTreeTopComponent.backButton.text\")); // NOI18N\n        backButton.setMaximumSize(new java.awt.Dimension(55, 100));\n        backButton.setMinimumSize(new java.awt.Dimension(5, 5));\n        backButton.addActionListener(new java.awt.event.ActionListener() {\n            public void actionPerformed(java.awt.event.ActionEvent evt) {\n                backButtonActionPerformed(evt);\n            }\n        });\n\n        forwardButton.setIcon(new javax.swing.ImageIcon(getClass().getResource(\"/org/sleuthkit/autopsy/directorytree/arrow_right.gif\"))); // NOI18N\n        org.openide.awt.Mnemonics.setLocalizedText(forwardButton, org.openide.util.NbBundle.getMessage(DirectoryTreeTopComponent.class, \"DirectoryTreeTopComponent.forwardButton.text\")); // NOI18N\n        forwardButton.setMaximumSize(new java.awt.Dimension(55, 100));\n        forwardButton.setMinimumSize(new java.awt.Dimension(5, 5));\n        forwardButton.addActionListener(new java.awt.event.ActionListener() {\n            public void actionPerformed(java.awt.event.ActionEvent evt) {\n                forwardButtonActionPerformed(evt);\n            }\n        });\n\n        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);\n        this.setLayout(layout);\n        layout.setHorizontalGroup(\n            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n            .addGroup(layout.createSequentialGroup()\n                .addGap(4, 4, 4)\n                .addComponent(backButton, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)\n                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)\n                .addComponent(forwardButton, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)\n                .addContainerGap(199, Short.MAX_VALUE))\n            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 262, Short.MAX_VALUE)\n        );\n        layout.setVerticalGroup(\n            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n            .addGroup(layout.createSequentialGroup()\n                .addGap(4, 4, 4)\n                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)\n                    .addComponent(forwardButton, 0, 0, Short.MAX_VALUE)\n                    .addComponent(backButton, javax.swing.GroupLayout.DEFAULT_SIZE, 26, Short.MAX_VALUE))\n                .addGap(4, 4, 4)\n                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 846, Short.MAX_VALUE)\n                .addContainerGap())\n        );\n    }","id":16480,"modified_method":"/** This method is called from within the constructor to\n     * initialize the form.\n     * WARNING: Do NOT modify this code. The content of this method is\n     * always regenerated by the Form Editor.\n     */\n    // <editor-fold defaultstate=\"collapsed\" desc=\"Generated Code\">//GEN-BEGIN:initComponents\n    private void initComponents() {\n\n        jScrollPane1 = new BeanTreeView();\n        backButton = new javax.swing.JButton();\n        forwardButton = new javax.swing.JButton();\n\n        backButton.setIcon(new javax.swing.ImageIcon(getClass().getResource(\"/org/sleuthkit/autopsy/directorytree/btn_step_back.png\"))); // NOI18N\n        org.openide.awt.Mnemonics.setLocalizedText(backButton, org.openide.util.NbBundle.getMessage(DirectoryTreeTopComponent.class, \"DirectoryTreeTopComponent.backButton.text\")); // NOI18N\n        backButton.setContentAreaFilled(false);\n        backButton.setMaximumSize(new java.awt.Dimension(55, 100));\n        backButton.setMinimumSize(new java.awt.Dimension(5, 5));\n        backButton.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource(\"/org/sleuthkit/autopsy/directorytree/btn_step_back_hover.png\"))); // NOI18N\n        backButton.addActionListener(new java.awt.event.ActionListener() {\n            public void actionPerformed(java.awt.event.ActionEvent evt) {\n                backButtonActionPerformed(evt);\n            }\n        });\n\n        forwardButton.setIcon(new javax.swing.ImageIcon(getClass().getResource(\"/org/sleuthkit/autopsy/directorytree/btn_step_forward.png\"))); // NOI18N\n        org.openide.awt.Mnemonics.setLocalizedText(forwardButton, org.openide.util.NbBundle.getMessage(DirectoryTreeTopComponent.class, \"DirectoryTreeTopComponent.forwardButton.text\")); // NOI18N\n        forwardButton.setContentAreaFilled(false);\n        forwardButton.setMaximumSize(new java.awt.Dimension(55, 100));\n        forwardButton.setMinimumSize(new java.awt.Dimension(5, 5));\n        forwardButton.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource(\"/org/sleuthkit/autopsy/directorytree/btn_step_forward_hover.png\"))); // NOI18N\n        forwardButton.addActionListener(new java.awt.event.ActionListener() {\n            public void actionPerformed(java.awt.event.ActionEvent evt) {\n                forwardButtonActionPerformed(evt);\n            }\n        });\n\n        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);\n        this.setLayout(layout);\n        layout.setHorizontalGroup(\n            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n            .addGroup(layout.createSequentialGroup()\n                .addContainerGap()\n                .addComponent(backButton, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)\n                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)\n                .addComponent(forwardButton, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)\n                .addContainerGap(193, Short.MAX_VALUE))\n            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 262, Short.MAX_VALUE)\n        );\n        layout.setVerticalGroup(\n            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n            .addGroup(layout.createSequentialGroup()\n                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)\n                    .addComponent(forwardButton, 0, 0, Short.MAX_VALUE)\n                    .addComponent(backButton, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))\n                .addGap(0, 0, 0)\n                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 861, Short.MAX_VALUE)\n                .addContainerGap())\n        );\n    }","commit_id":"3f66dd3a0b5d5d0566ebc9ddcefdbef65b9d82b2","url":"https://github.com/sleuthkit/autopsy"},{"original_method":"private void customizeButton() {\n        ingestMessagesButton = new IngestMessagesButton();\n\n        setMaximumSize(new java.awt.Dimension(32767, 25));\n        setPreferredSize(new java.awt.Dimension(80, 25));\n\n        ingestMessagesButton.setFocusPainted(false);\n        ingestMessagesButton.setContentAreaFilled(false);\n        ingestMessagesButton.setIcon(new javax.swing.ImageIcon(getClass().getResource(\"/org/sleuthkit/autopsy/ingest/eye-bw-25.png\")));\n        ingestMessagesButton.setToolTipText(\"Ingest Messages\");\n        ingestMessagesButton.setBorder(null);\n        ingestMessagesButton.setBorderPainted(false);\n        ingestMessagesButton.setEnabled(false);\n        ingestMessagesButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);\n        ingestMessagesButton.setMargin(new java.awt.Insets(0, 0, 0, 0));\n        ingestMessagesButton.setMaximumSize(new java.awt.Dimension(38, 24));\n        ingestMessagesButton.setMinimumSize(new java.awt.Dimension(38, 24));\n        ingestMessagesButton.setPreferredSize(new java.awt.Dimension(38, 24));\n        ingestMessagesButton.addActionListener(new java.awt.event.ActionListener() {\n\n            @Override\n            public void actionPerformed(java.awt.event.ActionEvent evt) {\n                showIngestMessages();\n            }\n        });\n        this.add(ingestMessagesButton, BorderLayout.CENTER);\n    }","id":16481,"modified_method":"private void customizeButton() {\n        ingestMessagesButton = new IngestMessagesButton();\n\n        setMaximumSize(new java.awt.Dimension(32767, 25));\n        setPreferredSize(new java.awt.Dimension(80, 25));\n\n        ingestMessagesButton.setFocusPainted(false);\n        ingestMessagesButton.setContentAreaFilled(false);\n        ingestMessagesButton.setIcon(new javax.swing.ImageIcon(getClass().getResource(\"/org/sleuthkit/autopsy/ingest/eye-bw-25.png\")));\n        ingestMessagesButton.setRolloverEnabled(true);\n        ingestMessagesButton.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource(\"/org/sleuthkit/autopsy/ingest/eye-bw-25-rollover.png\")));\n        ingestMessagesButton.setToolTipText(\"Ingest Messages\");\n        ingestMessagesButton.setBorder(null);\n        ingestMessagesButton.setBorderPainted(false);\n        ingestMessagesButton.setEnabled(false);\n        ingestMessagesButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);\n        ingestMessagesButton.setMargin(new java.awt.Insets(0, 0, 0, 0));\n        ingestMessagesButton.setMaximumSize(new java.awt.Dimension(38, 24));\n        ingestMessagesButton.setMinimumSize(new java.awt.Dimension(38, 24));\n        ingestMessagesButton.setPreferredSize(new java.awt.Dimension(38, 24));\n        ingestMessagesButton.addActionListener(new java.awt.event.ActionListener() {\n\n            @Override\n            public void actionPerformed(java.awt.event.ActionEvent evt) {\n                showIngestMessages();\n            }\n        });\n        this.add(ingestMessagesButton, BorderLayout.CENTER);\n    }","commit_id":"3f66dd3a0b5d5d0566ebc9ddcefdbef65b9d82b2","url":"https://github.com/sleuthkit/autopsy"},{"original_method":"/** This method is called from within the constructor to\n     * initialize the form.\n     * WARNING: Do NOT modify this code. The content of this method is\n     * always regenerated by the Form Editor.\n     */\n    @SuppressWarnings(\"unchecked\")\n    // <editor-fold defaultstate=\"collapsed\" desc=\"Generated Code\">//GEN-BEGIN:initComponents\n    private void initComponents() {\n\n        settingsMenu = new javax.swing.JPopupMenu();\n        regExCheckboxMenuItem = new javax.swing.JCheckBoxMenuItem();\n        listsMenu = new javax.swing.JPopupMenu();\n        searchBoxPanel = new javax.swing.JPanel();\n        searchBox = new javax.swing.JTextField();\n        settingsLabel = new javax.swing.JLabel();\n        searchButton = new javax.swing.JLabel();\n        listsButton = new javax.swing.JButton();\n\n        regExCheckboxMenuItem.setText(org.openide.util.NbBundle.getMessage(KeywordSearchPanel.class, \"KeywordSearchPanel.regExCheckboxMenuItem.text\")); // NOI18N\n        settingsMenu.add(regExCheckboxMenuItem);\n\n        setOpaque(false);\n\n        searchBoxPanel.setBorder(new javax.swing.border.LineBorder(java.awt.Color.lightGray, 1, true));\n        searchBoxPanel.setPreferredSize(new java.awt.Dimension(255, 18));\n\n        searchBox.setFont(new java.awt.Font(\"Tahoma\", 0, 14)); // NOI18N\n        searchBox.setForeground(java.awt.Color.lightGray);\n        searchBox.setText(org.openide.util.NbBundle.getMessage(KeywordSearchPanel.class, \"KeywordSearchPanel.searchBox.text\")); // NOI18N\n        searchBox.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 3, 4, 1));\n        searchBox.setEnabled(false);\n        searchBox.addActionListener(new java.awt.event.ActionListener() {\n            public void actionPerformed(java.awt.event.ActionEvent evt) {\n                searchBoxActionPerformed(evt);\n            }\n        });\n\n        settingsLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource(\"/org/sleuthkit/autopsy/keywordsearch/dropdown-icon.png\"))); // NOI18N\n        settingsLabel.setText(org.openide.util.NbBundle.getMessage(KeywordSearchPanel.class, \"KeywordSearchPanel.settingsLabel.text\")); // NOI18N\n        settingsLabel.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 2, 1, 2));\n        settingsLabel.setEnabled(false);\n        settingsLabel.setMaximumSize(new java.awt.Dimension(23, 20));\n        settingsLabel.setMinimumSize(new java.awt.Dimension(23, 20));\n        settingsLabel.setPreferredSize(new java.awt.Dimension(23, 20));\n        settingsLabel.addMouseListener(new java.awt.event.MouseAdapter() {\n            public void mouseEntered(java.awt.event.MouseEvent evt) {\n                settingsLabelMouseEntered(evt);\n            }\n            public void mouseExited(java.awt.event.MouseEvent evt) {\n                settingsLabelMouseExited(evt);\n            }\n            public void mousePressed(java.awt.event.MouseEvent evt) {\n                settingsLabelMousePressed(evt);\n            }\n        });\n\n        searchButton.setIcon(new javax.swing.ImageIcon(getClass().getResource(\"/org/sleuthkit/autopsy/keywordsearch/search-icon.png\"))); // NOI18N\n        searchButton.setText(org.openide.util.NbBundle.getMessage(KeywordSearchPanel.class, \"KeywordSearchPanel.searchButton.text\")); // NOI18N\n        searchButton.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 2, 1, 2));\n        searchButton.setEnabled(false);\n        searchButton.setMaximumSize(new java.awt.Dimension(23, 20));\n        searchButton.setMinimumSize(new java.awt.Dimension(23, 20));\n        searchButton.setPreferredSize(new java.awt.Dimension(23, 20));\n        searchButton.addMouseListener(new java.awt.event.MouseAdapter() {\n            public void mousePressed(java.awt.event.MouseEvent evt) {\n                searchButtonMousePressed(evt);\n            }\n        });\n\n        javax.swing.GroupLayout searchBoxPanelLayout = new javax.swing.GroupLayout(searchBoxPanel);\n        searchBoxPanel.setLayout(searchBoxPanelLayout);\n        searchBoxPanelLayout.setHorizontalGroup(\n            searchBoxPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n            .addGroup(searchBoxPanelLayout.createSequentialGroup()\n                .addComponent(settingsLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 9, javax.swing.GroupLayout.PREFERRED_SIZE)\n                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)\n                .addComponent(searchBox, javax.swing.GroupLayout.DEFAULT_SIZE, 202, Short.MAX_VALUE)\n                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)\n                .addComponent(searchButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))\n        );\n        searchBoxPanelLayout.setVerticalGroup(\n            searchBoxPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n            .addGroup(searchBoxPanelLayout.createSequentialGroup()\n                .addGroup(searchBoxPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n                    .addComponent(searchButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)\n                    .addComponent(settingsLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)\n                    .addComponent(searchBox, javax.swing.GroupLayout.PREFERRED_SIZE, 20, Short.MAX_VALUE))\n                .addContainerGap())\n        );\n\n        listsButton.setIcon(new javax.swing.ImageIcon(getClass().getResource(\"/org/sleuthkit/autopsy/keywordsearch/watchbutton-icon.png\"))); // NOI18N\n        listsButton.setText(org.openide.util.NbBundle.getMessage(KeywordSearchPanel.class, \"KeywordSearchPanel.listsButton.text\")); // NOI18N\n        listsButton.setContentAreaFilled(false);\n        listsButton.setEnabled(false);\n        listsButton.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource(\"/org/sleuthkit/autopsy/keywordsearch/watchbutton-icon-rollover.png\"))); // NOI18N\n        listsButton.setRolloverSelectedIcon(new javax.swing.ImageIcon(getClass().getResource(\"/org/sleuthkit/autopsy/keywordsearch/watchbutton-icon-pressed.png\"))); // NOI18N\n        listsButton.addMouseListener(new java.awt.event.MouseAdapter() {\n            public void mousePressed(java.awt.event.MouseEvent evt) {\n                listsButtonMousePressed(evt);\n            }\n        });\n        listsButton.addActionListener(new java.awt.event.ActionListener() {\n            public void actionPerformed(java.awt.event.ActionEvent evt) {\n                listsButtonActionPerformed(evt);\n            }\n        });\n\n        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);\n        this.setLayout(layout);\n        layout.setHorizontalGroup(\n            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()\n                .addComponent(listsButton)\n                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 18, Short.MAX_VALUE)\n                .addComponent(searchBoxPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 244, javax.swing.GroupLayout.PREFERRED_SIZE)\n                .addContainerGap())\n        );\n        layout.setVerticalGroup(\n            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n            .addComponent(searchBoxPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)\n            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()\n                .addGap(0, 0, 0)\n                .addComponent(listsButton, javax.swing.GroupLayout.PREFERRED_SIZE, 25, Short.MAX_VALUE))\n        );\n    }","id":16482,"modified_method":"/** This method is called from within the constructor to\n     * initialize the form.\n     * WARNING: Do NOT modify this code. The content of this method is\n     * always regenerated by the Form Editor.\n     */\n    @SuppressWarnings(\"unchecked\")\n    // <editor-fold defaultstate=\"collapsed\" desc=\"Generated Code\">//GEN-BEGIN:initComponents\n    private void initComponents() {\n\n        settingsMenu = new javax.swing.JPopupMenu();\n        regExCheckboxMenuItem = new javax.swing.JCheckBoxMenuItem();\n        listsMenu = new javax.swing.JPopupMenu();\n        searchBoxPanel = new javax.swing.JPanel();\n        searchBox = new javax.swing.JTextField();\n        settingsLabel = new javax.swing.JLabel();\n        searchButton = new javax.swing.JLabel();\n        listsButton = new javax.swing.JButton();\n\n        regExCheckboxMenuItem.setText(org.openide.util.NbBundle.getMessage(KeywordSearchPanel.class, \"KeywordSearchPanel.regExCheckboxMenuItem.text\")); // NOI18N\n        settingsMenu.add(regExCheckboxMenuItem);\n\n        setOpaque(false);\n\n        searchBoxPanel.setBorder(new javax.swing.border.LineBorder(java.awt.Color.lightGray, 1, true));\n        searchBoxPanel.setPreferredSize(new java.awt.Dimension(255, 18));\n\n        searchBox.setFont(new java.awt.Font(\"Tahoma\", 0, 14)); // NOI18N\n        searchBox.setForeground(java.awt.Color.lightGray);\n        searchBox.setText(org.openide.util.NbBundle.getMessage(KeywordSearchPanel.class, \"KeywordSearchPanel.searchBox.text\")); // NOI18N\n        searchBox.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 3, 4, 1));\n        searchBox.setEnabled(false);\n        searchBox.addActionListener(new java.awt.event.ActionListener() {\n            public void actionPerformed(java.awt.event.ActionEvent evt) {\n                searchBoxActionPerformed(evt);\n            }\n        });\n\n        settingsLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource(\"/org/sleuthkit/autopsy/keywordsearch/dropdown-icon.png\"))); // NOI18N\n        settingsLabel.setText(org.openide.util.NbBundle.getMessage(KeywordSearchPanel.class, \"KeywordSearchPanel.settingsLabel.text\")); // NOI18N\n        settingsLabel.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 2, 1, 2));\n        settingsLabel.setEnabled(false);\n        settingsLabel.setMaximumSize(new java.awt.Dimension(23, 20));\n        settingsLabel.setMinimumSize(new java.awt.Dimension(23, 20));\n        settingsLabel.setPreferredSize(new java.awt.Dimension(23, 20));\n        settingsLabel.addMouseListener(new java.awt.event.MouseAdapter() {\n            public void mouseEntered(java.awt.event.MouseEvent evt) {\n                settingsLabelMouseEntered(evt);\n            }\n            public void mouseExited(java.awt.event.MouseEvent evt) {\n                settingsLabelMouseExited(evt);\n            }\n            public void mousePressed(java.awt.event.MouseEvent evt) {\n                settingsLabelMousePressed(evt);\n            }\n        });\n\n        searchButton.setIcon(new javax.swing.ImageIcon(getClass().getResource(\"/org/sleuthkit/autopsy/keywordsearch/search-icon.png\"))); // NOI18N\n        searchButton.setText(org.openide.util.NbBundle.getMessage(KeywordSearchPanel.class, \"KeywordSearchPanel.searchButton.text\")); // NOI18N\n        searchButton.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 2, 1, 2));\n        searchButton.setEnabled(false);\n        searchButton.setMaximumSize(new java.awt.Dimension(23, 20));\n        searchButton.setMinimumSize(new java.awt.Dimension(23, 20));\n        searchButton.setPreferredSize(new java.awt.Dimension(23, 20));\n        searchButton.addMouseListener(new java.awt.event.MouseAdapter() {\n            public void mousePressed(java.awt.event.MouseEvent evt) {\n                searchButtonMousePressed(evt);\n            }\n        });\n\n        javax.swing.GroupLayout searchBoxPanelLayout = new javax.swing.GroupLayout(searchBoxPanel);\n        searchBoxPanel.setLayout(searchBoxPanelLayout);\n        searchBoxPanelLayout.setHorizontalGroup(\n            searchBoxPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n            .addGroup(searchBoxPanelLayout.createSequentialGroup()\n                .addComponent(settingsLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 9, javax.swing.GroupLayout.PREFERRED_SIZE)\n                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)\n                .addComponent(searchBox, javax.swing.GroupLayout.DEFAULT_SIZE, 202, Short.MAX_VALUE)\n                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)\n                .addComponent(searchButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))\n        );\n        searchBoxPanelLayout.setVerticalGroup(\n            searchBoxPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n            .addComponent(searchBox, javax.swing.GroupLayout.DEFAULT_SIZE, 25, Short.MAX_VALUE)\n            .addComponent(settingsLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 25, Short.MAX_VALUE)\n            .addComponent(searchButton, javax.swing.GroupLayout.DEFAULT_SIZE, 25, Short.MAX_VALUE)\n        );\n\n        listsButton.setIcon(new javax.swing.ImageIcon(getClass().getResource(\"/org/sleuthkit/autopsy/keywordsearch/watchbutton-icon.png\"))); // NOI18N\n        listsButton.setText(org.openide.util.NbBundle.getMessage(KeywordSearchPanel.class, \"KeywordSearchPanel.listsButton.text\")); // NOI18N\n        listsButton.setContentAreaFilled(false);\n        listsButton.setEnabled(false);\n        listsButton.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource(\"/org/sleuthkit/autopsy/keywordsearch/watchbutton-icon-rollover.png\"))); // NOI18N\n        listsButton.setRolloverSelectedIcon(new javax.swing.ImageIcon(getClass().getResource(\"/org/sleuthkit/autopsy/keywordsearch/watchbutton-icon-pressed.png\"))); // NOI18N\n        listsButton.addMouseListener(new java.awt.event.MouseAdapter() {\n            public void mousePressed(java.awt.event.MouseEvent evt) {\n                listsButtonMousePressed(evt);\n            }\n        });\n        listsButton.addActionListener(new java.awt.event.ActionListener() {\n            public void actionPerformed(java.awt.event.ActionEvent evt) {\n                listsButtonActionPerformed(evt);\n            }\n        });\n\n        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);\n        this.setLayout(layout);\n        layout.setHorizontalGroup(\n            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n            .addGroup(layout.createSequentialGroup()\n                .addComponent(listsButton)\n                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 18, Short.MAX_VALUE)\n                .addComponent(searchBoxPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 244, javax.swing.GroupLayout.PREFERRED_SIZE)\n                .addContainerGap())\n        );\n        layout.setVerticalGroup(\n            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()\n                .addGap(0, 0, 0)\n                .addComponent(listsButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))\n            .addComponent(searchBoxPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 27, Short.MAX_VALUE)\n        );\n    }","commit_id":"3f66dd3a0b5d5d0566ebc9ddcefdbef65b9d82b2","url":"https://github.com/sleuthkit/autopsy"},{"original_method":"/**\n     * Returns the toolbar component of this action\n     *\n     * @return component  the toolbar button\n     */\n    @Override\n    public Component getToolbarPresenter() {\n        //ImageIcon icon = new ImageIcon(getClass().getResource(\"close-icon.png\"));\n        //toolbarButton.setIcon(icon);\n        toolbarButton.setText(\"Generate Report\");\n        return toolbarButton;\n    }","id":16483,"modified_method":"/**\n     * Returns the toolbar component of this action\n     *\n     * @return component  the toolbar button\n     */\n    @Override\n    public Component getToolbarPresenter() {\n        ImageIcon icon = new ImageIcon(getClass().getResource(\"btn_icon_generate_report.png\"));\n        toolbarButton.setIcon(icon);\n        toolbarButton.setText(\"Generate Report\");\n        return toolbarButton;\n    }","commit_id":"3f66dd3a0b5d5d0566ebc9ddcefdbef65b9d82b2","url":"https://github.com/sleuthkit/autopsy"},{"original_method":"/** This method is called from within the constructor to\n     * initialize the form.\n     * WARNING: Do NOT modify this code. The content of this method is\n     * always regenerated by the Form Editor.\n     */\n    @SuppressWarnings(\"unchecked\")\n    // <editor-fold defaultstate=\"collapsed\" desc=\"Generated Code\">//GEN-BEGIN:initComponents\n    private void initComponents() {\n\n        rightClickMenu = new javax.swing.JPopupMenu();\n        copyMenuItem = new javax.swing.JMenuItem();\n        selectAllMenuItem = new javax.swing.JMenuItem();\n        jPanel1 = new javax.swing.JPanel();\n        jScrollPane1 = new javax.swing.JScrollPane();\n        outputViewPane = new javax.swing.JTextPane();\n        totalPageLabel = new javax.swing.JLabel();\n        ofLabel = new javax.swing.JLabel();\n        currentPageLabel = new javax.swing.JLabel();\n        pageLabel = new javax.swing.JLabel();\n        nextPageButton = new javax.swing.JButton();\n        pageLabel2 = new javax.swing.JLabel();\n        prevPageButton = new javax.swing.JButton();\n\n        copyMenuItem.setText(org.openide.util.NbBundle.getMessage(DataContentViewerArtifact.class, \"DataContentViewerArtifact.copyMenuItem.text\")); // NOI18N\n        rightClickMenu.add(copyMenuItem);\n\n        selectAllMenuItem.setText(org.openide.util.NbBundle.getMessage(DataContentViewerArtifact.class, \"DataContentViewerArtifact.selectAllMenuItem.text\")); // NOI18N\n        rightClickMenu.add(selectAllMenuItem);\n\n        setPreferredSize(new java.awt.Dimension(622, 424));\n\n        jPanel1.setPreferredSize(new java.awt.Dimension(622, 424));\n\n        outputViewPane.setEditable(false);\n        outputViewPane.setFont(new java.awt.Font(\"Courier New\", 0, 11)); // NOI18N\n        outputViewPane.setPreferredSize(new java.awt.Dimension(700, 400));\n        jScrollPane1.setViewportView(outputViewPane);\n\n        totalPageLabel.setText(org.openide.util.NbBundle.getMessage(DataContentViewerArtifact.class, \"DataContentViewerArtifact.totalPageLabel.text\")); // NOI18N\n\n        ofLabel.setText(org.openide.util.NbBundle.getMessage(DataContentViewerArtifact.class, \"DataContentViewerArtifact.ofLabel.text\")); // NOI18N\n\n        currentPageLabel.setText(org.openide.util.NbBundle.getMessage(DataContentViewerArtifact.class, \"DataContentViewerArtifact.currentPageLabel.text\")); // NOI18N\n        currentPageLabel.setMaximumSize(new java.awt.Dimension(18, 14));\n        currentPageLabel.setMinimumSize(new java.awt.Dimension(18, 14));\n        currentPageLabel.setPreferredSize(new java.awt.Dimension(18, 14));\n\n        pageLabel.setText(org.openide.util.NbBundle.getMessage(DataContentViewerArtifact.class, \"DataContentViewerArtifact.pageLabel.text\")); // NOI18N\n        pageLabel.setMaximumSize(new java.awt.Dimension(33, 14));\n        pageLabel.setMinimumSize(new java.awt.Dimension(33, 14));\n        pageLabel.setPreferredSize(new java.awt.Dimension(33, 14));\n\n        nextPageButton.setIcon(new javax.swing.ImageIcon(getClass().getResource(\"/org/sleuthkit/autopsy/corecomponents/arrow_right.gif\"))); // NOI18N\n        nextPageButton.setText(org.openide.util.NbBundle.getMessage(DataContentViewerArtifact.class, \"DataContentViewerArtifact.nextPageButton.text\")); // NOI18N\n        nextPageButton.addActionListener(new java.awt.event.ActionListener() {\n            public void actionPerformed(java.awt.event.ActionEvent evt) {\n                nextPageButtonActionPerformed(evt);\n            }\n        });\n\n        pageLabel2.setText(org.openide.util.NbBundle.getMessage(DataContentViewerArtifact.class, \"DataContentViewerArtifact.pageLabel2.text\")); // NOI18N\n        pageLabel2.setMaximumSize(new java.awt.Dimension(29, 14));\n        pageLabel2.setMinimumSize(new java.awt.Dimension(29, 14));\n        pageLabel2.setPreferredSize(new java.awt.Dimension(29, 14));\n\n        prevPageButton.setIcon(new javax.swing.ImageIcon(getClass().getResource(\"/org/sleuthkit/autopsy/corecomponents/arrow_left.gif\"))); // NOI18N\n        prevPageButton.setText(org.openide.util.NbBundle.getMessage(DataContentViewerArtifact.class, \"DataContentViewerArtifact.prevPageButton.text\")); // NOI18N\n        prevPageButton.addActionListener(new java.awt.event.ActionListener() {\n            public void actionPerformed(java.awt.event.ActionEvent evt) {\n                prevPageButtonActionPerformed(evt);\n            }\n        });\n\n        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);\n        jPanel1.setLayout(jPanel1Layout);\n        jPanel1Layout.setHorizontalGroup(\n            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n            .addGroup(jPanel1Layout.createSequentialGroup()\n                .addContainerGap()\n                .addComponent(pageLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)\n                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)\n                .addComponent(currentPageLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)\n                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)\n                .addComponent(ofLabel)\n                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)\n                .addComponent(totalPageLabel)\n                .addGap(41, 41, 41)\n                .addComponent(pageLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)\n                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)\n                .addComponent(prevPageButton, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)\n                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)\n                .addComponent(nextPageButton, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)\n                .addContainerGap(360, Short.MAX_VALUE))\n            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 622, Short.MAX_VALUE)\n        );\n        jPanel1Layout.setVerticalGroup(\n            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n            .addGroup(jPanel1Layout.createSequentialGroup()\n                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)\n                        .addComponent(pageLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)\n                        .addComponent(currentPageLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)\n                        .addComponent(ofLabel)\n                        .addComponent(totalPageLabel))\n                    .addComponent(nextPageButton, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)\n                    .addComponent(prevPageButton, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)\n                    .addComponent(pageLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))\n                .addGap(0, 0, 0)\n                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 401, Short.MAX_VALUE))\n        );\n\n        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);\n        this.setLayout(layout);\n        layout.setHorizontalGroup(\n            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)\n        );\n        layout.setVerticalGroup(\n            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)\n        );\n    }","id":16484,"modified_method":"/** This method is called from within the constructor to\n     * initialize the form.\n     * WARNING: Do NOT modify this code. The content of this method is\n     * always regenerated by the Form Editor.\n     */\n    @SuppressWarnings(\"unchecked\")\n    // <editor-fold defaultstate=\"collapsed\" desc=\"Generated Code\">//GEN-BEGIN:initComponents\n    private void initComponents() {\n\n        rightClickMenu = new javax.swing.JPopupMenu();\n        copyMenuItem = new javax.swing.JMenuItem();\n        selectAllMenuItem = new javax.swing.JMenuItem();\n        jPanel1 = new javax.swing.JPanel();\n        jScrollPane1 = new javax.swing.JScrollPane();\n        outputViewPane = new javax.swing.JTextPane();\n        totalPageLabel = new javax.swing.JLabel();\n        ofLabel = new javax.swing.JLabel();\n        currentPageLabel = new javax.swing.JLabel();\n        pageLabel = new javax.swing.JLabel();\n        nextPageButton = new javax.swing.JButton();\n        pageLabel2 = new javax.swing.JLabel();\n        prevPageButton = new javax.swing.JButton();\n\n        copyMenuItem.setText(org.openide.util.NbBundle.getMessage(DataContentViewerArtifact.class, \"DataContentViewerArtifact.copyMenuItem.text\")); // NOI18N\n        rightClickMenu.add(copyMenuItem);\n\n        selectAllMenuItem.setText(org.openide.util.NbBundle.getMessage(DataContentViewerArtifact.class, \"DataContentViewerArtifact.selectAllMenuItem.text\")); // NOI18N\n        rightClickMenu.add(selectAllMenuItem);\n\n        setPreferredSize(new java.awt.Dimension(622, 424));\n\n        jPanel1.setPreferredSize(new java.awt.Dimension(622, 424));\n\n        outputViewPane.setEditable(false);\n        outputViewPane.setFont(new java.awt.Font(\"Courier New\", 0, 11));\n        outputViewPane.setPreferredSize(new java.awt.Dimension(700, 400));\n        jScrollPane1.setViewportView(outputViewPane);\n\n        totalPageLabel.setText(org.openide.util.NbBundle.getMessage(DataContentViewerArtifact.class, \"DataContentViewerArtifact.totalPageLabel.text\")); // NOI18N\n\n        ofLabel.setText(org.openide.util.NbBundle.getMessage(DataContentViewerArtifact.class, \"DataContentViewerArtifact.ofLabel.text\")); // NOI18N\n\n        currentPageLabel.setText(org.openide.util.NbBundle.getMessage(DataContentViewerArtifact.class, \"DataContentViewerArtifact.currentPageLabel.text\")); // NOI18N\n        currentPageLabel.setMaximumSize(new java.awt.Dimension(18, 14));\n        currentPageLabel.setMinimumSize(new java.awt.Dimension(18, 14));\n        currentPageLabel.setPreferredSize(new java.awt.Dimension(18, 14));\n\n        pageLabel.setText(org.openide.util.NbBundle.getMessage(DataContentViewerArtifact.class, \"DataContentViewerArtifact.pageLabel.text\")); // NOI18N\n        pageLabel.setMaximumSize(new java.awt.Dimension(33, 14));\n        pageLabel.setMinimumSize(new java.awt.Dimension(33, 14));\n        pageLabel.setPreferredSize(new java.awt.Dimension(33, 14));\n\n        nextPageButton.setIcon(new javax.swing.ImageIcon(getClass().getResource(\"/org/sleuthkit/autopsy/corecomponents/btn_step_forward.png\"))); // NOI18N\n        nextPageButton.setText(org.openide.util.NbBundle.getMessage(DataContentViewerArtifact.class, \"DataContentViewerArtifact.nextPageButton.text\")); // NOI18N\n        nextPageButton.setContentAreaFilled(false);\n        nextPageButton.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource(\"/org/sleuthkit/autopsy/corecomponents/btn_step_forward_hover.png\"))); // NOI18N\n        nextPageButton.addActionListener(new java.awt.event.ActionListener() {\n            public void actionPerformed(java.awt.event.ActionEvent evt) {\n                nextPageButtonActionPerformed(evt);\n            }\n        });\n\n        pageLabel2.setText(org.openide.util.NbBundle.getMessage(DataContentViewerArtifact.class, \"DataContentViewerArtifact.pageLabel2.text\")); // NOI18N\n        pageLabel2.setMaximumSize(new java.awt.Dimension(29, 14));\n        pageLabel2.setMinimumSize(new java.awt.Dimension(29, 14));\n        pageLabel2.setPreferredSize(new java.awt.Dimension(29, 14));\n\n        prevPageButton.setIcon(new javax.swing.ImageIcon(getClass().getResource(\"/org/sleuthkit/autopsy/corecomponents/btn_step_back.png\"))); // NOI18N\n        prevPageButton.setText(org.openide.util.NbBundle.getMessage(DataContentViewerArtifact.class, \"DataContentViewerArtifact.prevPageButton.text\")); // NOI18N\n        prevPageButton.setContentAreaFilled(false);\n        prevPageButton.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource(\"/org/sleuthkit/autopsy/corecomponents/btn_step_back_hover.png\"))); // NOI18N\n        prevPageButton.addActionListener(new java.awt.event.ActionListener() {\n            public void actionPerformed(java.awt.event.ActionEvent evt) {\n                prevPageButtonActionPerformed(evt);\n            }\n        });\n\n        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);\n        jPanel1.setLayout(jPanel1Layout);\n        jPanel1Layout.setHorizontalGroup(\n            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n            .addGroup(jPanel1Layout.createSequentialGroup()\n                .addContainerGap()\n                .addComponent(pageLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)\n                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)\n                .addComponent(currentPageLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)\n                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)\n                .addComponent(ofLabel)\n                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)\n                .addComponent(totalPageLabel)\n                .addGap(41, 41, 41)\n                .addComponent(pageLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)\n                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)\n                .addComponent(prevPageButton, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)\n                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)\n                .addComponent(nextPageButton, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)\n                .addContainerGap(360, Short.MAX_VALUE))\n            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 622, Short.MAX_VALUE)\n        );\n        jPanel1Layout.setVerticalGroup(\n            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n            .addGroup(jPanel1Layout.createSequentialGroup()\n                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)\n                        .addComponent(pageLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)\n                        .addComponent(currentPageLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)\n                        .addComponent(ofLabel)\n                        .addComponent(totalPageLabel))\n                    .addComponent(nextPageButton, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)\n                    .addComponent(prevPageButton, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)\n                    .addComponent(pageLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))\n                .addGap(0, 0, 0)\n                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 401, Short.MAX_VALUE))\n        );\n\n        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);\n        this.setLayout(layout);\n        layout.setHorizontalGroup(\n            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)\n        );\n        layout.setVerticalGroup(\n            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)\n        );\n    }","commit_id":"eb45ab558b8fc79aa2916f99e13504b56aa8825e","url":"https://github.com/sleuthkit/autopsy"},{"original_method":"/** This method is called from within the constructor to\n     * initialize the form.\n     * WARNING: Do NOT modify this code. The content of this method is\n     * always regenerated by the Form Editor.\n     */\n    @SuppressWarnings(\"unchecked\")\n    // <editor-fold defaultstate=\"collapsed\" desc=\"Generated Code\">//GEN-BEGIN:initComponents\n    private void initComponents() {\n\n        rightClickMenu = new javax.swing.JPopupMenu();\n        copyMenuItem = new javax.swing.JMenuItem();\n        selectAllMenuItem = new javax.swing.JMenuItem();\n        hexViewerPanel = new javax.swing.JPanel();\n        jScrollPane1 = new javax.swing.JScrollPane();\n        outputViewPane = new JTextPane(){\n            public boolean getScrollableTracksViewportWidth() {\n                return (getSize().width < 700);\n            }};\n            this.outputViewPane.setBackground(new java.awt.Color(255, 255, 255)); // to make sure the background color is white\n            totalPageLabel = new javax.swing.JLabel();\n            ofLabel = new javax.swing.JLabel();\n            currentPageLabel = new javax.swing.JLabel();\n            pageLabel = new javax.swing.JLabel();\n            prevPageButton = new javax.swing.JButton();\n            nextPageButton = new javax.swing.JButton();\n            pageLabel2 = new javax.swing.JLabel();\n\n            copyMenuItem.setText(org.openide.util.NbBundle.getMessage(DataContentViewerHex.class, \"DataContentViewerHex.copyMenuItem.text\")); // NOI18N\n            rightClickMenu.add(copyMenuItem);\n\n            selectAllMenuItem.setText(org.openide.util.NbBundle.getMessage(DataContentViewerHex.class, \"DataContentViewerHex.selectAllMenuItem.text\")); // NOI18N\n            rightClickMenu.add(selectAllMenuItem);\n\n            jScrollPane1.setBackground(new java.awt.Color(255, 255, 255));\n\n            outputViewPane.setEditable(false);\n            outputViewPane.setFont(new java.awt.Font(\"Courier New\", 0, 11));\n            outputViewPane.setMinimumSize(new java.awt.Dimension(700, 20));\n            outputViewPane.setPreferredSize(new java.awt.Dimension(700, 400));\n            jScrollPane1.setViewportView(outputViewPane);\n\n            totalPageLabel.setText(org.openide.util.NbBundle.getMessage(DataContentViewerHex.class, \"DataContentViewerHex.totalPageLabel.text_1\")); // NOI18N\n\n            ofLabel.setText(org.openide.util.NbBundle.getMessage(DataContentViewerHex.class, \"DataContentViewerHex.ofLabel.text_1\")); // NOI18N\n\n            currentPageLabel.setText(org.openide.util.NbBundle.getMessage(DataContentViewerHex.class, \"DataContentViewerHex.currentPageLabel.text_1\")); // NOI18N\n            currentPageLabel.setMaximumSize(new java.awt.Dimension(18, 14));\n            currentPageLabel.setMinimumSize(new java.awt.Dimension(18, 14));\n            currentPageLabel.setPreferredSize(new java.awt.Dimension(18, 14));\n\n            pageLabel.setText(org.openide.util.NbBundle.getMessage(DataContentViewerHex.class, \"DataContentViewerHex.pageLabel.text_1\")); // NOI18N\n            pageLabel.setMaximumSize(new java.awt.Dimension(33, 14));\n            pageLabel.setMinimumSize(new java.awt.Dimension(33, 14));\n            pageLabel.setPreferredSize(new java.awt.Dimension(33, 14));\n\n            prevPageButton.setIcon(new javax.swing.ImageIcon(getClass().getResource(\"/org/sleuthkit/autopsy/corecomponents/arrow_left.gif\"))); // NOI18N\n            prevPageButton.setText(org.openide.util.NbBundle.getMessage(DataContentViewerHex.class, \"DataContentViewerHex.prevPageButton.text\")); // NOI18N\n            prevPageButton.addActionListener(new java.awt.event.ActionListener() {\n                public void actionPerformed(java.awt.event.ActionEvent evt) {\n                    prevPageButtonActionPerformed(evt);\n                }\n            });\n\n            nextPageButton.setIcon(new javax.swing.ImageIcon(getClass().getResource(\"/org/sleuthkit/autopsy/corecomponents/arrow_right.gif\"))); // NOI18N\n            nextPageButton.setText(org.openide.util.NbBundle.getMessage(DataContentViewerHex.class, \"DataContentViewerHex.nextPageButton.text\")); // NOI18N\n            nextPageButton.addActionListener(new java.awt.event.ActionListener() {\n                public void actionPerformed(java.awt.event.ActionEvent evt) {\n                    nextPageButtonActionPerformed(evt);\n                }\n            });\n\n            pageLabel2.setText(org.openide.util.NbBundle.getMessage(DataContentViewerHex.class, \"DataContentViewerHex.pageLabel2.text\")); // NOI18N\n            pageLabel2.setMaximumSize(new java.awt.Dimension(29, 14));\n            pageLabel2.setMinimumSize(new java.awt.Dimension(29, 14));\n            pageLabel2.setPreferredSize(new java.awt.Dimension(29, 14));\n\n            javax.swing.GroupLayout hexViewerPanelLayout = new javax.swing.GroupLayout(hexViewerPanel);\n            hexViewerPanel.setLayout(hexViewerPanelLayout);\n            hexViewerPanelLayout.setHorizontalGroup(\n                hexViewerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n                .addGroup(hexViewerPanelLayout.createSequentialGroup()\n                    .addContainerGap()\n                    .addComponent(pageLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)\n                    .addGap(18, 18, 18)\n                    .addComponent(currentPageLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)\n                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)\n                    .addComponent(ofLabel)\n                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)\n                    .addComponent(totalPageLabel)\n                    .addGap(50, 50, 50)\n                    .addComponent(pageLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)\n                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)\n                    .addComponent(prevPageButton, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)\n                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)\n                    .addComponent(nextPageButton, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)\n                    .addContainerGap(360, Short.MAX_VALUE))\n                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 622, Short.MAX_VALUE)\n            );\n            hexViewerPanelLayout.setVerticalGroup(\n                hexViewerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n                .addGroup(hexViewerPanelLayout.createSequentialGroup()\n                    .addGroup(hexViewerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n                        .addComponent(pageLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)\n                        .addGroup(hexViewerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)\n                            .addComponent(currentPageLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)\n                            .addComponent(ofLabel)\n                            .addComponent(totalPageLabel))\n                        .addComponent(pageLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)\n                        .addComponent(nextPageButton, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)\n                        .addComponent(prevPageButton, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))\n                    .addGap(0, 0, 0)\n                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 388, Short.MAX_VALUE))\n            );\n\n            javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);\n            this.setLayout(layout);\n            layout.setHorizontalGroup(\n                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n                .addGap(0, 622, Short.MAX_VALUE)\n                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n                    .addGroup(layout.createSequentialGroup()\n                        .addGap(0, 0, 0)\n                        .addComponent(hexViewerPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)\n                        .addGap(0, 0, 0)))\n            );\n            layout.setVerticalGroup(\n                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n                .addGap(0, 411, Short.MAX_VALUE)\n                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n                    .addGroup(layout.createSequentialGroup()\n                        .addGap(0, 0, 0)\n                        .addComponent(hexViewerPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)\n                        .addGap(0, 0, 0)))\n            );\n        }","id":16485,"modified_method":"/** This method is called from within the constructor to\n     * initialize the form.\n     * WARNING: Do NOT modify this code. The content of this method is\n     * always regenerated by the Form Editor.\n     */\n    @SuppressWarnings(\"unchecked\")\n    // <editor-fold defaultstate=\"collapsed\" desc=\"Generated Code\">//GEN-BEGIN:initComponents\n    private void initComponents() {\n\n        rightClickMenu = new javax.swing.JPopupMenu();\n        copyMenuItem = new javax.swing.JMenuItem();\n        selectAllMenuItem = new javax.swing.JMenuItem();\n        hexViewerPanel = new javax.swing.JPanel();\n        jScrollPane1 = new javax.swing.JScrollPane();\n        outputViewPane = new JTextPane(){\n            public boolean getScrollableTracksViewportWidth() {\n                return (getSize().width < 700);\n            }};\n            this.outputViewPane.setBackground(new java.awt.Color(255, 255, 255)); // to make sure the background color is white\n            totalPageLabel = new javax.swing.JLabel();\n            ofLabel = new javax.swing.JLabel();\n            currentPageLabel = new javax.swing.JLabel();\n            pageLabel = new javax.swing.JLabel();\n            prevPageButton = new javax.swing.JButton();\n            nextPageButton = new javax.swing.JButton();\n            pageLabel2 = new javax.swing.JLabel();\n\n            copyMenuItem.setText(org.openide.util.NbBundle.getMessage(DataContentViewerHex.class, \"DataContentViewerHex.copyMenuItem.text\")); // NOI18N\n            rightClickMenu.add(copyMenuItem);\n\n            selectAllMenuItem.setText(org.openide.util.NbBundle.getMessage(DataContentViewerHex.class, \"DataContentViewerHex.selectAllMenuItem.text\")); // NOI18N\n            rightClickMenu.add(selectAllMenuItem);\n\n            jScrollPane1.setBackground(new java.awt.Color(255, 255, 255));\n\n            outputViewPane.setEditable(false);\n            outputViewPane.setFont(new java.awt.Font(\"Courier New\", 0, 11));\n            outputViewPane.setMinimumSize(new java.awt.Dimension(700, 20));\n            outputViewPane.setPreferredSize(new java.awt.Dimension(700, 400));\n            jScrollPane1.setViewportView(outputViewPane);\n\n            totalPageLabel.setText(org.openide.util.NbBundle.getMessage(DataContentViewerHex.class, \"DataContentViewerHex.totalPageLabel.text_1\")); // NOI18N\n\n            ofLabel.setText(org.openide.util.NbBundle.getMessage(DataContentViewerHex.class, \"DataContentViewerHex.ofLabel.text_1\")); // NOI18N\n\n            currentPageLabel.setText(org.openide.util.NbBundle.getMessage(DataContentViewerHex.class, \"DataContentViewerHex.currentPageLabel.text_1\")); // NOI18N\n            currentPageLabel.setMaximumSize(new java.awt.Dimension(18, 14));\n            currentPageLabel.setMinimumSize(new java.awt.Dimension(18, 14));\n            currentPageLabel.setPreferredSize(new java.awt.Dimension(18, 14));\n\n            pageLabel.setText(org.openide.util.NbBundle.getMessage(DataContentViewerHex.class, \"DataContentViewerHex.pageLabel.text_1\")); // NOI18N\n            pageLabel.setMaximumSize(new java.awt.Dimension(33, 14));\n            pageLabel.setMinimumSize(new java.awt.Dimension(33, 14));\n            pageLabel.setPreferredSize(new java.awt.Dimension(33, 14));\n\n            prevPageButton.setIcon(new javax.swing.ImageIcon(getClass().getResource(\"/org/sleuthkit/autopsy/corecomponents/btn_step_back.png\"))); // NOI18N\n            prevPageButton.setText(org.openide.util.NbBundle.getMessage(DataContentViewerHex.class, \"DataContentViewerHex.prevPageButton.text\")); // NOI18N\n            prevPageButton.setContentAreaFilled(false);\n            prevPageButton.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource(\"/org/sleuthkit/autopsy/corecomponents/btn_step_back_hover.png\"))); // NOI18N\n            prevPageButton.addActionListener(new java.awt.event.ActionListener() {\n                public void actionPerformed(java.awt.event.ActionEvent evt) {\n                    prevPageButtonActionPerformed(evt);\n                }\n            });\n\n            nextPageButton.setIcon(new javax.swing.ImageIcon(getClass().getResource(\"/org/sleuthkit/autopsy/corecomponents/btn_step_forward.png\"))); // NOI18N\n            nextPageButton.setText(org.openide.util.NbBundle.getMessage(DataContentViewerHex.class, \"DataContentViewerHex.nextPageButton.text\")); // NOI18N\n            nextPageButton.setContentAreaFilled(false);\n            nextPageButton.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource(\"/org/sleuthkit/autopsy/corecomponents/btn_step_forward_hover.png\"))); // NOI18N\n            nextPageButton.addActionListener(new java.awt.event.ActionListener() {\n                public void actionPerformed(java.awt.event.ActionEvent evt) {\n                    nextPageButtonActionPerformed(evt);\n                }\n            });\n\n            pageLabel2.setText(org.openide.util.NbBundle.getMessage(DataContentViewerHex.class, \"DataContentViewerHex.pageLabel2.text\")); // NOI18N\n            pageLabel2.setMaximumSize(new java.awt.Dimension(29, 14));\n            pageLabel2.setMinimumSize(new java.awt.Dimension(29, 14));\n            pageLabel2.setPreferredSize(new java.awt.Dimension(29, 14));\n\n            javax.swing.GroupLayout hexViewerPanelLayout = new javax.swing.GroupLayout(hexViewerPanel);\n            hexViewerPanel.setLayout(hexViewerPanelLayout);\n            hexViewerPanelLayout.setHorizontalGroup(\n                hexViewerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n                .addGroup(hexViewerPanelLayout.createSequentialGroup()\n                    .addContainerGap()\n                    .addComponent(pageLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)\n                    .addGap(18, 18, 18)\n                    .addComponent(currentPageLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)\n                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)\n                    .addComponent(ofLabel)\n                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)\n                    .addComponent(totalPageLabel)\n                    .addGap(50, 50, 50)\n                    .addComponent(pageLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)\n                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)\n                    .addComponent(prevPageButton, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)\n                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)\n                    .addComponent(nextPageButton, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)\n                    .addContainerGap(360, Short.MAX_VALUE))\n                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 622, Short.MAX_VALUE)\n            );\n            hexViewerPanelLayout.setVerticalGroup(\n                hexViewerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n                .addGroup(hexViewerPanelLayout.createSequentialGroup()\n                    .addGroup(hexViewerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n                        .addComponent(pageLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)\n                        .addGroup(hexViewerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)\n                            .addComponent(currentPageLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)\n                            .addComponent(ofLabel)\n                            .addComponent(totalPageLabel))\n                        .addComponent(pageLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)\n                        .addComponent(nextPageButton, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)\n                        .addComponent(prevPageButton, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))\n                    .addGap(0, 0, 0)\n                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 388, Short.MAX_VALUE))\n            );\n\n            javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);\n            this.setLayout(layout);\n            layout.setHorizontalGroup(\n                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n                .addGap(0, 622, Short.MAX_VALUE)\n                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n                    .addGroup(layout.createSequentialGroup()\n                        .addGap(0, 0, 0)\n                        .addComponent(hexViewerPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)\n                        .addGap(0, 0, 0)))\n            );\n            layout.setVerticalGroup(\n                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n                .addGap(0, 411, Short.MAX_VALUE)\n                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n                    .addGroup(layout.createSequentialGroup()\n                        .addGap(0, 0, 0)\n                        .addComponent(hexViewerPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)\n                        .addGap(0, 0, 0)))\n            );\n        }","commit_id":"eb45ab558b8fc79aa2916f99e13504b56aa8825e","url":"https://github.com/sleuthkit/autopsy"},{"original_method":"/** This method is called from within the constructor to\n     * initialize the form.\n     * WARNING: Do NOT modify this code. The content of this method is\n     * always regenerated by the Form Editor.\n     */\n    @SuppressWarnings(\"unchecked\")\n    // <editor-fold defaultstate=\"collapsed\" desc=\"Generated Code\">//GEN-BEGIN:initComponents\n    private void initComponents() {\n\n        rightClickMenu = new javax.swing.JPopupMenu();\n        copyMenuItem = new javax.swing.JMenuItem();\n        selectAllMenuItem = new javax.swing.JMenuItem();\n        jPanel1 = new javax.swing.JPanel();\n        jScrollPane1 = new javax.swing.JScrollPane();\n        outputViewPane = new javax.swing.JTextPane();\n        totalPageLabel = new javax.swing.JLabel();\n        ofLabel = new javax.swing.JLabel();\n        currentPageLabel = new javax.swing.JLabel();\n        pageLabel = new javax.swing.JLabel();\n        nextPageButton = new javax.swing.JButton();\n        pageLabel2 = new javax.swing.JLabel();\n        prevPageButton = new javax.swing.JButton();\n\n        copyMenuItem.setText(org.openide.util.NbBundle.getMessage(DataContentViewerString.class, \"DataContentViewerString.copyMenuItem.text\")); // NOI18N\n        rightClickMenu.add(copyMenuItem);\n\n        selectAllMenuItem.setText(org.openide.util.NbBundle.getMessage(DataContentViewerString.class, \"DataContentViewerString.selectAllMenuItem.text\")); // NOI18N\n        rightClickMenu.add(selectAllMenuItem);\n\n        outputViewPane.setEditable(false);\n        outputViewPane.setFont(new java.awt.Font(\"Courier New\", 0, 11));\n        outputViewPane.setPreferredSize(new java.awt.Dimension(700, 400));\n        jScrollPane1.setViewportView(outputViewPane);\n\n        totalPageLabel.setText(org.openide.util.NbBundle.getMessage(DataContentViewerString.class, \"DataContentViewerString.totalPageLabel.text_1\")); // NOI18N\n\n        ofLabel.setText(org.openide.util.NbBundle.getMessage(DataContentViewerString.class, \"DataContentViewerString.ofLabel.text_1\")); // NOI18N\n\n        currentPageLabel.setText(org.openide.util.NbBundle.getMessage(DataContentViewerString.class, \"DataContentViewerString.currentPageLabel.text_1\")); // NOI18N\n        currentPageLabel.setMaximumSize(new java.awt.Dimension(18, 14));\n        currentPageLabel.setMinimumSize(new java.awt.Dimension(18, 14));\n        currentPageLabel.setPreferredSize(new java.awt.Dimension(18, 14));\n\n        pageLabel.setText(org.openide.util.NbBundle.getMessage(DataContentViewerString.class, \"DataContentViewerString.pageLabel.text_1\")); // NOI18N\n        pageLabel.setMaximumSize(new java.awt.Dimension(33, 14));\n        pageLabel.setMinimumSize(new java.awt.Dimension(33, 14));\n        pageLabel.setPreferredSize(new java.awt.Dimension(33, 14));\n\n        nextPageButton.setIcon(new javax.swing.ImageIcon(getClass().getResource(\"/org/sleuthkit/autopsy/corecomponents/arrow_right.gif\"))); // NOI18N\n        nextPageButton.setText(org.openide.util.NbBundle.getMessage(DataContentViewerString.class, \"DataContentViewerString.nextPageButton.text\")); // NOI18N\n        nextPageButton.addActionListener(new java.awt.event.ActionListener() {\n            public void actionPerformed(java.awt.event.ActionEvent evt) {\n                nextPageButtonActionPerformed(evt);\n            }\n        });\n\n        pageLabel2.setText(org.openide.util.NbBundle.getMessage(DataContentViewerString.class, \"DataContentViewerString.pageLabel2.text\")); // NOI18N\n        pageLabel2.setMaximumSize(new java.awt.Dimension(29, 14));\n        pageLabel2.setMinimumSize(new java.awt.Dimension(29, 14));\n        pageLabel2.setPreferredSize(new java.awt.Dimension(29, 14));\n\n        prevPageButton.setIcon(new javax.swing.ImageIcon(getClass().getResource(\"/org/sleuthkit/autopsy/corecomponents/arrow_left.gif\"))); // NOI18N\n        prevPageButton.setText(org.openide.util.NbBundle.getMessage(DataContentViewerString.class, \"DataContentViewerString.prevPageButton.text\")); // NOI18N\n        prevPageButton.addActionListener(new java.awt.event.ActionListener() {\n            public void actionPerformed(java.awt.event.ActionEvent evt) {\n                prevPageButtonActionPerformed(evt);\n            }\n        });\n\n        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);\n        jPanel1.setLayout(jPanel1Layout);\n        jPanel1Layout.setHorizontalGroup(\n            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n            .addGroup(jPanel1Layout.createSequentialGroup()\n                .addContainerGap()\n                .addComponent(pageLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)\n                .addGap(18, 18, 18)\n                .addComponent(currentPageLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)\n                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)\n                .addComponent(ofLabel)\n                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)\n                .addComponent(totalPageLabel)\n                .addGap(50, 50, 50)\n                .addComponent(pageLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)\n                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)\n                .addComponent(prevPageButton, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)\n                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)\n                .addComponent(nextPageButton, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)\n                .addContainerGap(360, Short.MAX_VALUE))\n            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 622, Short.MAX_VALUE)\n        );\n        jPanel1Layout.setVerticalGroup(\n            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n            .addGroup(jPanel1Layout.createSequentialGroup()\n                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)\n                        .addComponent(pageLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)\n                        .addComponent(currentPageLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)\n                        .addComponent(ofLabel)\n                        .addComponent(totalPageLabel))\n                    .addComponent(pageLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)\n                    .addComponent(nextPageButton, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)\n                    .addComponent(prevPageButton, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))\n                .addGap(0, 0, 0)\n                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 401, Short.MAX_VALUE))\n        );\n\n        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);\n        this.setLayout(layout);\n        layout.setHorizontalGroup(\n            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)\n        );\n        layout.setVerticalGroup(\n            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)\n        );\n    }","id":16486,"modified_method":"/** This method is called from within the constructor to\n     * initialize the form.\n     * WARNING: Do NOT modify this code. The content of this method is\n     * always regenerated by the Form Editor.\n     */\n    @SuppressWarnings(\"unchecked\")\n    // <editor-fold defaultstate=\"collapsed\" desc=\"Generated Code\">//GEN-BEGIN:initComponents\n    private void initComponents() {\n\n        rightClickMenu = new javax.swing.JPopupMenu();\n        copyMenuItem = new javax.swing.JMenuItem();\n        selectAllMenuItem = new javax.swing.JMenuItem();\n        jPanel1 = new javax.swing.JPanel();\n        jScrollPane1 = new javax.swing.JScrollPane();\n        outputViewPane = new javax.swing.JTextPane();\n        totalPageLabel = new javax.swing.JLabel();\n        ofLabel = new javax.swing.JLabel();\n        currentPageLabel = new javax.swing.JLabel();\n        pageLabel = new javax.swing.JLabel();\n        nextPageButton = new javax.swing.JButton();\n        pageLabel2 = new javax.swing.JLabel();\n        prevPageButton = new javax.swing.JButton();\n\n        copyMenuItem.setText(org.openide.util.NbBundle.getMessage(DataContentViewerString.class, \"DataContentViewerString.copyMenuItem.text\")); // NOI18N\n        rightClickMenu.add(copyMenuItem);\n\n        selectAllMenuItem.setText(org.openide.util.NbBundle.getMessage(DataContentViewerString.class, \"DataContentViewerString.selectAllMenuItem.text\")); // NOI18N\n        rightClickMenu.add(selectAllMenuItem);\n\n        outputViewPane.setEditable(false);\n        outputViewPane.setFont(new java.awt.Font(\"Courier New\", 0, 11));\n        outputViewPane.setPreferredSize(new java.awt.Dimension(700, 400));\n        jScrollPane1.setViewportView(outputViewPane);\n\n        totalPageLabel.setText(org.openide.util.NbBundle.getMessage(DataContentViewerString.class, \"DataContentViewerString.totalPageLabel.text_1\")); // NOI18N\n\n        ofLabel.setText(org.openide.util.NbBundle.getMessage(DataContentViewerString.class, \"DataContentViewerString.ofLabel.text_1\")); // NOI18N\n\n        currentPageLabel.setText(org.openide.util.NbBundle.getMessage(DataContentViewerString.class, \"DataContentViewerString.currentPageLabel.text_1\")); // NOI18N\n        currentPageLabel.setMaximumSize(new java.awt.Dimension(18, 14));\n        currentPageLabel.setMinimumSize(new java.awt.Dimension(18, 14));\n        currentPageLabel.setPreferredSize(new java.awt.Dimension(18, 14));\n\n        pageLabel.setText(org.openide.util.NbBundle.getMessage(DataContentViewerString.class, \"DataContentViewerString.pageLabel.text_1\")); // NOI18N\n        pageLabel.setMaximumSize(new java.awt.Dimension(33, 14));\n        pageLabel.setMinimumSize(new java.awt.Dimension(33, 14));\n        pageLabel.setPreferredSize(new java.awt.Dimension(33, 14));\n\n        nextPageButton.setIcon(new javax.swing.ImageIcon(getClass().getResource(\"/org/sleuthkit/autopsy/corecomponents/btn_step_forward.png\"))); // NOI18N\n        nextPageButton.setText(org.openide.util.NbBundle.getMessage(DataContentViewerString.class, \"DataContentViewerString.nextPageButton.text\")); // NOI18N\n        nextPageButton.setContentAreaFilled(false);\n        nextPageButton.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource(\"/org/sleuthkit/autopsy/corecomponents/btn_step_forward_hover.png\"))); // NOI18N\n        nextPageButton.addActionListener(new java.awt.event.ActionListener() {\n            public void actionPerformed(java.awt.event.ActionEvent evt) {\n                nextPageButtonActionPerformed(evt);\n            }\n        });\n\n        pageLabel2.setText(org.openide.util.NbBundle.getMessage(DataContentViewerString.class, \"DataContentViewerString.pageLabel2.text\")); // NOI18N\n        pageLabel2.setMaximumSize(new java.awt.Dimension(29, 14));\n        pageLabel2.setMinimumSize(new java.awt.Dimension(29, 14));\n        pageLabel2.setPreferredSize(new java.awt.Dimension(29, 14));\n\n        prevPageButton.setIcon(new javax.swing.ImageIcon(getClass().getResource(\"/org/sleuthkit/autopsy/corecomponents/btn_step_back.png\"))); // NOI18N\n        prevPageButton.setText(org.openide.util.NbBundle.getMessage(DataContentViewerString.class, \"DataContentViewerString.prevPageButton.text\")); // NOI18N\n        prevPageButton.setContentAreaFilled(false);\n        prevPageButton.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource(\"/org/sleuthkit/autopsy/corecomponents/btn_step_back_hover.png\"))); // NOI18N\n        prevPageButton.addActionListener(new java.awt.event.ActionListener() {\n            public void actionPerformed(java.awt.event.ActionEvent evt) {\n                prevPageButtonActionPerformed(evt);\n            }\n        });\n\n        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);\n        jPanel1.setLayout(jPanel1Layout);\n        jPanel1Layout.setHorizontalGroup(\n            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n            .addGroup(jPanel1Layout.createSequentialGroup()\n                .addContainerGap()\n                .addComponent(pageLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)\n                .addGap(18, 18, 18)\n                .addComponent(currentPageLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)\n                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)\n                .addComponent(ofLabel)\n                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)\n                .addComponent(totalPageLabel)\n                .addGap(50, 50, 50)\n                .addComponent(pageLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)\n                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)\n                .addComponent(prevPageButton, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)\n                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)\n                .addComponent(nextPageButton, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)\n                .addContainerGap(360, Short.MAX_VALUE))\n            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 622, Short.MAX_VALUE)\n        );\n        jPanel1Layout.setVerticalGroup(\n            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n            .addGroup(jPanel1Layout.createSequentialGroup()\n                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)\n                        .addComponent(pageLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)\n                        .addComponent(currentPageLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)\n                        .addComponent(ofLabel)\n                        .addComponent(totalPageLabel))\n                    .addComponent(pageLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)\n                    .addComponent(nextPageButton, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)\n                    .addComponent(prevPageButton, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))\n                .addGap(0, 0, 0)\n                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 401, Short.MAX_VALUE))\n        );\n\n        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);\n        this.setLayout(layout);\n        layout.setHorizontalGroup(\n            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)\n        );\n        layout.setVerticalGroup(\n            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)\n        );\n    }","commit_id":"eb45ab558b8fc79aa2916f99e13504b56aa8825e","url":"https://github.com/sleuthkit/autopsy"},{"original_method":"/** This method is called from within the constructor to\n     * initialize the form.\n     * WARNING: Do NOT modify this code. The content of this method is\n     * always regenerated by the Form Editor.\n     */\n    @SuppressWarnings(\"unchecked\")\n    // <editor-fold defaultstate=\"collapsed\" desc=\"Generated Code\">//GEN-BEGIN:initComponents\n    private void initComponents() {\n\n        rightClickMenu = new javax.swing.JPopupMenu();\n        copyMenuItem = new javax.swing.JMenuItem();\n        selectAllMenuItem = new javax.swing.JMenuItem();\n        jScrollPane1 = new javax.swing.JScrollPane();\n        extractedTextPane = new javax.swing.JTextPane();\n        sourceComboBox = new javax.swing.JComboBox();\n        hitLabel = new javax.swing.JLabel();\n        hitCountLabel = new javax.swing.JLabel();\n        hitOfLabel = new javax.swing.JLabel();\n        hitTotalLabel = new javax.swing.JLabel();\n        hitButtonsLabel = new javax.swing.JLabel();\n        hitPreviousButton = new javax.swing.JButton();\n        hitNextButton = new javax.swing.JButton();\n\n        copyMenuItem.setText(org.openide.util.NbBundle.getMessage(ExtractedContentPanel.class, \"ExtractedContentPanel.copyMenuItem.text\")); // NOI18N\n        rightClickMenu.add(copyMenuItem);\n\n        selectAllMenuItem.setText(org.openide.util.NbBundle.getMessage(ExtractedContentPanel.class, \"ExtractedContentPanel.selectAllMenuItem.text\")); // NOI18N\n        rightClickMenu.add(selectAllMenuItem);\n\n        extractedTextPane.setEditable(false);\n        extractedTextPane.setAutoscrolls(false);\n        jScrollPane1.setViewportView(extractedTextPane);\n\n        sourceComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { \"Item 1\", \"Item 2\", \"Item 3\", \"Item 4\" }));\n\n        hitLabel.setText(org.openide.util.NbBundle.getMessage(ExtractedContentPanel.class, \"ExtractedContentPanel.hitLabel.text\")); // NOI18N\n\n        hitCountLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);\n        hitCountLabel.setText(org.openide.util.NbBundle.getMessage(ExtractedContentPanel.class, \"ExtractedContentPanel.hitCountLabel.text\")); // NOI18N\n        hitCountLabel.setMaximumSize(new java.awt.Dimension(18, 14));\n        hitCountLabel.setMinimumSize(new java.awt.Dimension(18, 14));\n        hitCountLabel.setPreferredSize(new java.awt.Dimension(18, 14));\n\n        hitOfLabel.setText(org.openide.util.NbBundle.getMessage(ExtractedContentPanel.class, \"ExtractedContentPanel.hitOfLabel.text\")); // NOI18N\n\n        hitTotalLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);\n        hitTotalLabel.setText(org.openide.util.NbBundle.getMessage(ExtractedContentPanel.class, \"ExtractedContentPanel.hitTotalLabel.text\")); // NOI18N\n        hitTotalLabel.setMaximumSize(new java.awt.Dimension(18, 14));\n        hitTotalLabel.setMinimumSize(new java.awt.Dimension(18, 14));\n        hitTotalLabel.setPreferredSize(new java.awt.Dimension(18, 14));\n\n        hitButtonsLabel.setText(org.openide.util.NbBundle.getMessage(ExtractedContentPanel.class, \"ExtractedContentPanel.hitButtonsLabel.text\")); // NOI18N\n\n        hitPreviousButton.setIcon(new javax.swing.ImageIcon(getClass().getResource(\"/org/sleuthkit/autopsy/keywordsearch/arrow_left.gif\"))); // NOI18N\n        hitPreviousButton.setText(org.openide.util.NbBundle.getMessage(ExtractedContentPanel.class, \"ExtractedContentPanel.hitPreviousButton.text\")); // NOI18N\n\n        hitNextButton.setIcon(new javax.swing.ImageIcon(getClass().getResource(\"/org/sleuthkit/autopsy/keywordsearch/arrow_right.gif\"))); // NOI18N\n        hitNextButton.setText(org.openide.util.NbBundle.getMessage(ExtractedContentPanel.class, \"ExtractedContentPanel.hitNextButton.text\")); // NOI18N\n\n        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);\n        this.setLayout(layout);\n        layout.setHorizontalGroup(\n            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()\n                .addContainerGap()\n                .addComponent(hitLabel)\n                .addGap(18, 18, 18)\n                .addComponent(hitCountLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)\n                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)\n                .addComponent(hitOfLabel)\n                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)\n                .addComponent(hitTotalLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)\n                .addGap(50, 50, 50)\n                .addComponent(hitButtonsLabel)\n                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)\n                .addComponent(hitPreviousButton, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)\n                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)\n                .addComponent(hitNextButton, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)\n                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 72, Short.MAX_VALUE)\n                .addComponent(sourceComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)\n                .addContainerGap())\n            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 400, Short.MAX_VALUE)\n        );\n        layout.setVerticalGroup(\n            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n            .addGroup(layout.createSequentialGroup()\n                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n                    .addComponent(sourceComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)\n                    .addComponent(hitPreviousButton, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)\n                    .addComponent(hitNextButton, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)\n                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)\n                        .addComponent(hitCountLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)\n                        .addComponent(hitOfLabel)\n                        .addComponent(hitTotalLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)\n                        .addComponent(hitButtonsLabel)\n                        .addComponent(hitLabel)))\n                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 293, Short.MAX_VALUE))\n        );\n    }","id":16487,"modified_method":"/** This method is called from within the constructor to\n     * initialize the form.\n     * WARNING: Do NOT modify this code. The content of this method is\n     * always regenerated by the Form Editor.\n     */\n    @SuppressWarnings(\"unchecked\")\n    // <editor-fold defaultstate=\"collapsed\" desc=\"Generated Code\">//GEN-BEGIN:initComponents\n    private void initComponents() {\n\n        rightClickMenu = new javax.swing.JPopupMenu();\n        copyMenuItem = new javax.swing.JMenuItem();\n        selectAllMenuItem = new javax.swing.JMenuItem();\n        jScrollPane1 = new javax.swing.JScrollPane();\n        extractedTextPane = new javax.swing.JTextPane();\n        sourceComboBox = new javax.swing.JComboBox();\n        hitLabel = new javax.swing.JLabel();\n        hitCountLabel = new javax.swing.JLabel();\n        hitOfLabel = new javax.swing.JLabel();\n        hitTotalLabel = new javax.swing.JLabel();\n        hitButtonsLabel = new javax.swing.JLabel();\n        hitPreviousButton = new javax.swing.JButton();\n        hitNextButton = new javax.swing.JButton();\n\n        copyMenuItem.setText(org.openide.util.NbBundle.getMessage(ExtractedContentPanel.class, \"ExtractedContentPanel.copyMenuItem.text\")); // NOI18N\n        rightClickMenu.add(copyMenuItem);\n\n        selectAllMenuItem.setText(org.openide.util.NbBundle.getMessage(ExtractedContentPanel.class, \"ExtractedContentPanel.selectAllMenuItem.text\")); // NOI18N\n        rightClickMenu.add(selectAllMenuItem);\n\n        extractedTextPane.setEditable(false);\n        extractedTextPane.setAutoscrolls(false);\n        jScrollPane1.setViewportView(extractedTextPane);\n\n        sourceComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { \"Item 1\", \"Item 2\", \"Item 3\", \"Item 4\" }));\n\n        hitLabel.setText(org.openide.util.NbBundle.getMessage(ExtractedContentPanel.class, \"ExtractedContentPanel.hitLabel.text\")); // NOI18N\n\n        hitCountLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);\n        hitCountLabel.setText(org.openide.util.NbBundle.getMessage(ExtractedContentPanel.class, \"ExtractedContentPanel.hitCountLabel.text\")); // NOI18N\n        hitCountLabel.setMaximumSize(new java.awt.Dimension(18, 14));\n        hitCountLabel.setMinimumSize(new java.awt.Dimension(18, 14));\n        hitCountLabel.setPreferredSize(new java.awt.Dimension(18, 14));\n\n        hitOfLabel.setText(org.openide.util.NbBundle.getMessage(ExtractedContentPanel.class, \"ExtractedContentPanel.hitOfLabel.text\")); // NOI18N\n\n        hitTotalLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);\n        hitTotalLabel.setText(org.openide.util.NbBundle.getMessage(ExtractedContentPanel.class, \"ExtractedContentPanel.hitTotalLabel.text\")); // NOI18N\n        hitTotalLabel.setMaximumSize(new java.awt.Dimension(18, 14));\n        hitTotalLabel.setMinimumSize(new java.awt.Dimension(18, 14));\n        hitTotalLabel.setPreferredSize(new java.awt.Dimension(18, 14));\n\n        hitButtonsLabel.setText(org.openide.util.NbBundle.getMessage(ExtractedContentPanel.class, \"ExtractedContentPanel.hitButtonsLabel.text\")); // NOI18N\n\n        hitPreviousButton.setIcon(new javax.swing.ImageIcon(getClass().getResource(\"/org/sleuthkit/autopsy/keywordsearch/btn_step_back.png\"))); // NOI18N\n        hitPreviousButton.setText(org.openide.util.NbBundle.getMessage(ExtractedContentPanel.class, \"ExtractedContentPanel.hitPreviousButton.text\")); // NOI18N\n        hitPreviousButton.setContentAreaFilled(false);\n        hitPreviousButton.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource(\"/org/sleuthkit/autopsy/keywordsearch/btn_step_back_hover.png\"))); // NOI18N\n\n        hitNextButton.setIcon(new javax.swing.ImageIcon(getClass().getResource(\"/org/sleuthkit/autopsy/keywordsearch/btn_step_forward.png\"))); // NOI18N\n        hitNextButton.setText(org.openide.util.NbBundle.getMessage(ExtractedContentPanel.class, \"ExtractedContentPanel.hitNextButton.text\")); // NOI18N\n        hitNextButton.setContentAreaFilled(false);\n        hitNextButton.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource(\"/org/sleuthkit/autopsy/keywordsearch/btn_step_forward_hover.png\"))); // NOI18N\n\n        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);\n        this.setLayout(layout);\n        layout.setHorizontalGroup(\n            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()\n                .addContainerGap()\n                .addComponent(hitLabel)\n                .addGap(18, 18, 18)\n                .addComponent(hitCountLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)\n                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)\n                .addComponent(hitOfLabel)\n                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)\n                .addComponent(hitTotalLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)\n                .addGap(50, 50, 50)\n                .addComponent(hitButtonsLabel)\n                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)\n                .addComponent(hitPreviousButton, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)\n                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)\n                .addComponent(hitNextButton, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)\n                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 72, Short.MAX_VALUE)\n                .addComponent(sourceComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)\n                .addContainerGap())\n            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 400, Short.MAX_VALUE)\n        );\n        layout.setVerticalGroup(\n            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n            .addGroup(layout.createSequentialGroup()\n                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n                    .addComponent(sourceComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)\n                    .addComponent(hitPreviousButton, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)\n                    .addComponent(hitNextButton, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)\n                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)\n                        .addComponent(hitCountLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)\n                        .addComponent(hitOfLabel)\n                        .addComponent(hitTotalLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)\n                        .addComponent(hitButtonsLabel)\n                        .addComponent(hitLabel)))\n                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 293, Short.MAX_VALUE))\n        );\n    }","commit_id":"eb45ab558b8fc79aa2916f99e13504b56aa8825e","url":"https://github.com/sleuthkit/autopsy"},{"original_method":"private void getCookie(Content dataSource, IngestDataSourceWorkerController controller) {\n        \n        FileManager fileManager = currentCase.getServices().getFileManager();\n        List<AbstractFile> cookiesFiles = null;\n        try {\n            cookiesFiles = fileManager.findFiles(dataSource, \"Cookies\", \"Chrome\");\n        } catch (TskCoreException ex) {\n            logger.log(Level.SEVERE, \"Error when trying to get Chrome history files.\", ex);\n        }\n\n        int j = 0;\n        if (cookiesFiles != null && !cookiesFiles.isEmpty()) {\n            while (j < cookiesFiles.size()) {\n                AbstractFile cookiesFile = cookiesFiles.get(j++);\n                String temps = RAImageIngestModule.getRATempPath(currentCase, \"chrome\") + File.separator + cookiesFile.getName().toString() + j + \".db\";\n                int errors = 0;\n                try {\n                    ContentUtils.writeToFile(cookiesFile, new File(temps));\n                } catch (IOException ex) {\n                    logger.log(Level.SEVERE, \"Error writing temp sqlite db for Chrome cookie artifacts.{0}\", ex);\n                    this.addErrorMessage(this.getName() + \": Error while trying to analyze file:\" + cookiesFile.getName());\n                    continue;\n                }\n                File dbFile = new File(temps);\n                if (controller.isCancelled()) {\n                    dbFile.delete();\n                    break;\n                }\n\n                List<HashMap<String, Object>> tempList = this.dbConnect(temps, chcookiequery);\n                logger.log(Level.INFO, moduleName + \"- Now getting cookies from \" + temps + \" with \" + tempList.size() + \"artifacts identified.\");\n                for (HashMap<String, Object> result : tempList) {\n                    Collection<BlackboardAttribute> bbattributes = new ArrayList<BlackboardAttribute>();\n                    //TODO Revisit usage of deprecated constructor as per TSK-583\n                    //bbattributes.add(new BlackboardAttribute(ATTRIBUTE_TYPE.TSK_NAME.getTypeID(), \"Recent Activity\", \"Title\", ((result.get(\"name\").toString() != null) ? result.get(\"name\").toString() : \"\")));\n                    //bbattributes.add(new BlackboardAttribute(ATTRIBUTE_TYPE.TSK_DATETIME.getTypeID(), \"Recent Activity\", \"Last Visited\", ((Long.valueOf(result.get(\"last_access_utc\").toString())) / 10000000)));\n                    bbattributes.add(new BlackboardAttribute(ATTRIBUTE_TYPE.TSK_NAME.getTypeID(), \"Recent Activity\", ((result.get(\"name\").toString() != null) ? result.get(\"name\").toString() : \"\")));\n                    bbattributes.add(new BlackboardAttribute(ATTRIBUTE_TYPE.TSK_DATETIME.getTypeID(), \"Recent Activity\", ((Long.valueOf(result.get(\"last_access_utc\").toString())) / 10000000)));\n                    bbattributes.add(new BlackboardAttribute(ATTRIBUTE_TYPE.TSK_VALUE.getTypeID(), \"Recent Activity\", ((result.get(\"value\").toString() != null) ? result.get(\"value\").toString() : \"\")));\n                    bbattributes.add(new BlackboardAttribute(ATTRIBUTE_TYPE.TSK_PROG_NAME.getTypeID(), \"Recent Activity\", \"Chrome\"));\n                    bbattributes.add(new BlackboardAttribute(ATTRIBUTE_TYPE.TSK_URL.getTypeID(), \"Recent Activity\", ((result.get(\"host_key\").toString() != null) ? result.get(\"host_key\").toString() : \"\")));\n                    //bbattributes.add(new BlackboardAttribute(ATTRIBUTE_TYPE.TSK_URL_DECODED.getTypeID(), \"Recent Activity\", ((result.get(\"host_key\").toString() != null) ? EscapeUtil.decodeURL(result.get(\"host_key\").toString()) : \"\")));\n                    String domain = result.get(\"host_key\").toString();\n                    domain = domain.replaceFirst(\"^\\\\.+(?!$)\", \"\");\n                    bbattributes.add(new BlackboardAttribute(ATTRIBUTE_TYPE.TSK_DOMAIN.getTypeID(), \"Recent Activity\", domain));\n                    this.addArtifact(ARTIFACT_TYPE.TSK_WEB_COOKIE, cookiesFile, bbattributes);\n\n                }\n                if (errors > 0) {\n                    this.addErrorMessage(this.getName() + \": Error parsing \" + errors + \" Chrome cookie artifacts.\");\n                }\n        \n                dbFile.delete();\n            }\n\n            services.fireModuleDataEvent(new ModuleDataEvent(\"Recent Activity\", BlackboardArtifact.ARTIFACT_TYPE.TSK_WEB_COOKIE));\n        }\n    }","id":16488,"modified_method":"private void getCookie(Content dataSource, IngestDataSourceWorkerController controller) {\n        \n        FileManager fileManager = currentCase.getServices().getFileManager();\n        List<AbstractFile> cookiesFiles = null;\n        try {\n            cookiesFiles = fileManager.findFiles(dataSource, \"Cookies\", \"Chrome\");\n        } catch (TskCoreException ex) {\n            String msg = \"Error when trying to get Chrome history files.\";\n            logger.log(Level.SEVERE, msg, ex);\n            this.addErrorMessage(this.getName() + \": \" + msg);\n            return;\n        }\n\n        int j = 0;\n        while (j < cookiesFiles.size()) {\n            AbstractFile cookiesFile = cookiesFiles.get(j++);\n            String temps = RAImageIngestModule.getRATempPath(currentCase, \"chrome\") + File.separator + cookiesFile.getName().toString() + j + \".db\";\n            try {\n                ContentUtils.writeToFile(cookiesFile, new File(temps));\n            } catch (IOException ex) {\n                logger.log(Level.SEVERE, \"Error writing temp sqlite db for Chrome cookie artifacts.{0}\", ex);\n                this.addErrorMessage(this.getName() + \": Error while trying to analyze file:\" + cookiesFile.getName());\n                continue;\n            }\n            File dbFile = new File(temps);\n            if (controller.isCancelled()) {\n                dbFile.delete();\n                break;\n            }\n\n            List<HashMap<String, Object>> tempList = this.dbConnect(temps, chcookiequery);\n            logger.log(Level.INFO, moduleName + \"- Now getting cookies from \" + temps + \" with \" + tempList.size() + \"artifacts identified.\");\n            for (HashMap<String, Object> result : tempList) {\n                Collection<BlackboardAttribute> bbattributes = new ArrayList<BlackboardAttribute>();\n                //TODO Revisit usage of deprecated constructor as per TSK-583\n                //bbattributes.add(new BlackboardAttribute(ATTRIBUTE_TYPE.TSK_NAME.getTypeID(), \"Recent Activity\", \"Title\", ((result.get(\"name\").toString() != null) ? result.get(\"name\").toString() : \"\")));\n                //bbattributes.add(new BlackboardAttribute(ATTRIBUTE_TYPE.TSK_DATETIME.getTypeID(), \"Recent Activity\", \"Last Visited\", ((Long.valueOf(result.get(\"last_access_utc\").toString())) / 10000000)));\n                bbattributes.add(new BlackboardAttribute(ATTRIBUTE_TYPE.TSK_NAME.getTypeID(), \"Recent Activity\", ((result.get(\"name\").toString() != null) ? result.get(\"name\").toString() : \"\")));\n                bbattributes.add(new BlackboardAttribute(ATTRIBUTE_TYPE.TSK_DATETIME.getTypeID(), \"Recent Activity\", ((Long.valueOf(result.get(\"last_access_utc\").toString())) / 10000000)));\n                bbattributes.add(new BlackboardAttribute(ATTRIBUTE_TYPE.TSK_VALUE.getTypeID(), \"Recent Activity\", ((result.get(\"value\").toString() != null) ? result.get(\"value\").toString() : \"\")));\n                bbattributes.add(new BlackboardAttribute(ATTRIBUTE_TYPE.TSK_PROG_NAME.getTypeID(), \"Recent Activity\", \"Chrome\"));\n                bbattributes.add(new BlackboardAttribute(ATTRIBUTE_TYPE.TSK_URL.getTypeID(), \"Recent Activity\", ((result.get(\"host_key\").toString() != null) ? result.get(\"host_key\").toString() : \"\")));\n                //bbattributes.add(new BlackboardAttribute(ATTRIBUTE_TYPE.TSK_URL_DECODED.getTypeID(), \"Recent Activity\", ((result.get(\"host_key\").toString() != null) ? EscapeUtil.decodeURL(result.get(\"host_key\").toString()) : \"\")));\n                String domain = result.get(\"host_key\").toString();\n                domain = domain.replaceFirst(\"^\\\\.+(?!$)\", \"\");\n                bbattributes.add(new BlackboardAttribute(ATTRIBUTE_TYPE.TSK_DOMAIN.getTypeID(), \"Recent Activity\", domain));\n                this.addArtifact(ARTIFACT_TYPE.TSK_WEB_COOKIE, cookiesFile, bbattributes);\n            }\n\n            dbFile.delete();\n        }\n\n        services.fireModuleDataEvent(new ModuleDataEvent(\"Recent Activity\", BlackboardArtifact.ARTIFACT_TYPE.TSK_WEB_COOKIE));\n    }","commit_id":"71759074fe5bf05a275dfda5a103d42060618227","url":"https://github.com/sleuthkit/autopsy"},{"original_method":"private void getHistory(Content dataSource, IngestDataSourceWorkerController controller) {\n\n        FileManager fileManager = currentCase.getServices().getFileManager();\n        List<AbstractFile> historyFiles = null;\n        try {\n            historyFiles = fileManager.findFiles(dataSource, \"History\", \"Chrome\");\n        } catch (TskCoreException ex) {\n            logger.log(Level.SEVERE, \"Error when trying to get Chrome history files.\", ex);\n        }\n        \n        // get only the allocated ones, for now\n        List<AbstractFile> allocatedHistoryFiles = new ArrayList<>();\n        for (AbstractFile historyFile : historyFiles) {\n            if (historyFile.isMetaFlagSet(TskData.TSK_FS_META_FLAG_ENUM.ALLOC)) {\n                allocatedHistoryFiles.add(historyFile);\n            }\n        }\n        \n        // log a message if we don't have any allocated history files\n        if (allocatedHistoryFiles.size() == 0) {\n            logger.log(Level.INFO, \"Could not find any allocated Chrome history files.\");\n            return;\n        }\n\n        int j = 0;\n        while (j < historyFiles.size()) {\n            String temps = RAImageIngestModule.getRATempPath(currentCase, \"chrome\") + File.separator + historyFiles.get(j).getName().toString() + j + \".db\";\n            int errors = 0;\n            final AbstractFile historyFile = historyFiles.get(j++);\n            if (historyFile.getSize() == 0) {\n                continue;\n            }\n            try {\n                ContentUtils.writeToFile(historyFile, new File(temps));\n            } catch (IOException ex) {\n                logger.log(Level.SEVERE, \"Error writing temp sqlite db for Chrome web history artifacts.{0}\", ex);\n                this.addErrorMessage(this.getName() + \": Error while trying to analyze file:\" + historyFile.getName());\n                continue;\n            }\n            File dbFile = new File(temps);\n            if (controller.isCancelled()) {\n                dbFile.delete();\n                break;\n            }\n            List<HashMap<String, Object>> tempList = null;\n            tempList = this.dbConnect(temps, chquery);\n            logger.log(Level.INFO, moduleName + \"- Now getting history from \" + temps + \" with \" + tempList.size() + \"artifacts identified.\");\n            for (HashMap<String, Object> result : tempList) {\n\n                Collection<BlackboardAttribute> bbattributes = new ArrayList<BlackboardAttribute>();\n                bbattributes.add(new BlackboardAttribute(ATTRIBUTE_TYPE.TSK_URL.getTypeID(), \"Recent Activity\", ((result.get(\"url\").toString() != null) ? result.get(\"url\").toString() : \"\")));\n                //bbattributes.add(new BlackboardAttribute(ATTRIBUTE_TYPE.TSK_URL_DECODED.getTypeID(), \"Recent Activity\", ((result.get(\"url\").toString() != null) ? EscapeUtil.decodeURL(result.get(\"url\").toString()) : \"\")));\n                //TODO Revisit usage of deprecated constructor per TSK-583\n                //bbattributes.add(new BlackboardAttribute(ATTRIBUTE_TYPE.TSK_LAST_ACCESSED.getTypeID(), \"Recent Activity\", \"Last Visited\", ((Long.valueOf(result.get(\"last_visit_time\").toString())) / 10000000)));\n                bbattributes.add(new BlackboardAttribute(ATTRIBUTE_TYPE.TSK_DATETIME_ACCESSED.getTypeID(), \"Recent Activity\", ((Long.valueOf(result.get(\"last_visit_time\").toString())) / 10000000)));\n                bbattributes.add(new BlackboardAttribute(ATTRIBUTE_TYPE.TSK_REFERRER.getTypeID(), \"Recent Activity\", ((result.get(\"from_visit\").toString() != null) ? result.get(\"from_visit\").toString() : \"\")));\n                bbattributes.add(new BlackboardAttribute(ATTRIBUTE_TYPE.TSK_NAME.getTypeID(), \"Recent Activity\", ((result.get(\"title\").toString() != null) ? result.get(\"title\").toString() : \"\")));\n                bbattributes.add(new BlackboardAttribute(ATTRIBUTE_TYPE.TSK_PROG_NAME.getTypeID(), \"Recent Activity\", \"Chrome\"));\n                bbattributes.add(new BlackboardAttribute(ATTRIBUTE_TYPE.TSK_DOMAIN.getTypeID(), \"Recent Activity\", (Util.extractDomain((result.get(\"url\").toString() != null) ? result.get(\"url\").toString() : \"\"))));\n                this.addArtifact(ARTIFACT_TYPE.TSK_WEB_HISTORY, historyFile, bbattributes);\n\n            }\n            if (errors > 0) {\n                this.addErrorMessage(this.getName() + \": Error parsing \" + errors + \" Chrome web history artifacts.\");\n            }\n\n            dbFile.delete();\n        }\n\n        services.fireModuleDataEvent(new ModuleDataEvent(\"Recent Activity\", BlackboardArtifact.ARTIFACT_TYPE.TSK_WEB_HISTORY));\n    }","id":16489,"modified_method":"private void getHistory(Content dataSource, IngestDataSourceWorkerController controller) {\n\n        FileManager fileManager = currentCase.getServices().getFileManager();\n        List<AbstractFile> historyFiles = null;\n        try {\n            historyFiles = fileManager.findFiles(dataSource, \"History\", \"Chrome\");\n        } catch (TskCoreException ex) {\n            String msg = \"Error when trying to get Chrome history files.\";\n            logger.log(Level.SEVERE, msg, ex);\n            this.addErrorMessage(this.getName() + \": \" + msg);\n            return;\n        }\n        \n        // get only the allocated ones, for now\n        List<AbstractFile> allocatedHistoryFiles = new ArrayList<>();\n        for (AbstractFile historyFile : historyFiles) {\n            if (historyFile.isMetaFlagSet(TskData.TSK_FS_META_FLAG_ENUM.ALLOC)) {\n                allocatedHistoryFiles.add(historyFile);\n            }\n        }\n        \n        // log a message if we don't have any allocated history files\n        if (allocatedHistoryFiles.isEmpty()) {\n            logger.log(Level.INFO, \"Could not find any allocated Chrome history files.\");\n            return;\n        }\n\n        int j = 0;\n        while (j < historyFiles.size()) {\n            String temps = RAImageIngestModule.getRATempPath(currentCase, \"chrome\") + File.separator + historyFiles.get(j).getName().toString() + j + \".db\";\n            final AbstractFile historyFile = historyFiles.get(j++);\n            if (historyFile.getSize() == 0) {\n                continue;\n            }\n            try {\n                ContentUtils.writeToFile(historyFile, new File(temps));\n            } catch (IOException ex) {\n                logger.log(Level.SEVERE, \"Error writing temp sqlite db for Chrome web history artifacts.{0}\", ex);\n                this.addErrorMessage(this.getName() + \": Error while trying to analyze file:\" + historyFile.getName());\n                continue;\n            }\n            File dbFile = new File(temps);\n            if (controller.isCancelled()) {\n                dbFile.delete();\n                break;\n            }\n            List<HashMap<String, Object>> tempList = null;\n            tempList = this.dbConnect(temps, chquery);\n            logger.log(Level.INFO, moduleName + \"- Now getting history from \" + temps + \" with \" + tempList.size() + \"artifacts identified.\");\n            for (HashMap<String, Object> result : tempList) {\n\n                Collection<BlackboardAttribute> bbattributes = new ArrayList<BlackboardAttribute>();\n                bbattributes.add(new BlackboardAttribute(ATTRIBUTE_TYPE.TSK_URL.getTypeID(), \"Recent Activity\", ((result.get(\"url\").toString() != null) ? result.get(\"url\").toString() : \"\")));\n                //bbattributes.add(new BlackboardAttribute(ATTRIBUTE_TYPE.TSK_URL_DECODED.getTypeID(), \"Recent Activity\", ((result.get(\"url\").toString() != null) ? EscapeUtil.decodeURL(result.get(\"url\").toString()) : \"\")));\n                //TODO Revisit usage of deprecated constructor per TSK-583\n                //bbattributes.add(new BlackboardAttribute(ATTRIBUTE_TYPE.TSK_LAST_ACCESSED.getTypeID(), \"Recent Activity\", \"Last Visited\", ((Long.valueOf(result.get(\"last_visit_time\").toString())) / 10000000)));\n                bbattributes.add(new BlackboardAttribute(ATTRIBUTE_TYPE.TSK_DATETIME_ACCESSED.getTypeID(), \"Recent Activity\", ((Long.valueOf(result.get(\"last_visit_time\").toString())) / 10000000)));\n                bbattributes.add(new BlackboardAttribute(ATTRIBUTE_TYPE.TSK_REFERRER.getTypeID(), \"Recent Activity\", ((result.get(\"from_visit\").toString() != null) ? result.get(\"from_visit\").toString() : \"\")));\n                bbattributes.add(new BlackboardAttribute(ATTRIBUTE_TYPE.TSK_NAME.getTypeID(), \"Recent Activity\", ((result.get(\"title\").toString() != null) ? result.get(\"title\").toString() : \"\")));\n                bbattributes.add(new BlackboardAttribute(ATTRIBUTE_TYPE.TSK_PROG_NAME.getTypeID(), \"Recent Activity\", \"Chrome\"));\n                bbattributes.add(new BlackboardAttribute(ATTRIBUTE_TYPE.TSK_DOMAIN.getTypeID(), \"Recent Activity\", (Util.extractDomain((result.get(\"url\").toString() != null) ? result.get(\"url\").toString() : \"\"))));\n                this.addArtifact(ARTIFACT_TYPE.TSK_WEB_HISTORY, historyFile, bbattributes);\n\n            }\n            dbFile.delete();\n        }\n\n        services.fireModuleDataEvent(new ModuleDataEvent(\"Recent Activity\", BlackboardArtifact.ARTIFACT_TYPE.TSK_WEB_HISTORY));\n    }","commit_id":"71759074fe5bf05a275dfda5a103d42060618227","url":"https://github.com/sleuthkit/autopsy"},{"original_method":"private void getLogin(Content dataSource, IngestDataSourceWorkerController controller) {\n        \n        FileManager fileManager = currentCase.getServices().getFileManager();\n        List<AbstractFile> signonFiles = null;\n        try {\n            signonFiles = fileManager.findFiles(dataSource, \"signons.sqlite\", \"Chrome\");\n        } catch (TskCoreException ex) {\n            logger.log(Level.SEVERE, \"Error when trying to get Chrome history files.\", ex);\n        }\n\n        int j = 0;\n        if (signonFiles != null && !signonFiles.isEmpty()) {\n            while (j < signonFiles.size()) {\n                AbstractFile signonFile = signonFiles.get(j++);\n                String temps = RAImageIngestModule.getRATempPath(currentCase, \"chrome\") + File.separator + signonFile.getName().toString() + j + \".db\";\n                int errors = 0;\n                try {\n                    ContentUtils.writeToFile(signonFile, new File(temps));\n                } catch (IOException ex) {\n                    logger.log(Level.SEVERE, \"Error writing temp sqlite db for Chrome login artifacts.{0}\", ex);\n                    this.addErrorMessage(this.getName() + \": Error while trying to analyze file:\" + signonFile.getName());\n                    continue;\n                }\n                File dbFile = new File(temps);\n                if (controller.isCancelled()) {\n                    dbFile.delete();\n                    break;\n                }\n                List<HashMap<String, Object>> tempList = this.dbConnect(temps, chloginquery);\n                logger.log(Level.INFO, moduleName + \"- Now getting login information from \" + temps + \" with \" + tempList.size() + \"artifacts identified.\");\n                for (HashMap<String, Object> result : tempList) {\n                    Collection<BlackboardAttribute> bbattributes = new ArrayList<BlackboardAttribute>();\n                    bbattributes.add(new BlackboardAttribute(ATTRIBUTE_TYPE.TSK_URL.getTypeID(), \"Recent Activity\", ((result.get(\"origin_url\").toString() != null) ? result.get(\"origin_url\").toString() : \"\")));\n                    //bbattributes.add(new BlackboardAttribute(ATTRIBUTE_TYPE.TSK_URL_DECODED.getTypeID(), \"Recent Activity\", ((result.get(\"origin_url\").toString() != null) ? EscapeUtil.decodeURL(result.get(\"origin_url\").toString()) : \"\")));\n                    //TODO Revisit usage of deprecated constructor as per TSK-583\n                    //bbattributes.add(new BlackboardAttribute(ATTRIBUTE_TYPE.TSK_DATETIME_ACCESSED.getTypeID(), \"Recent Activity\", \"Last Visited\", ((Long.valueOf(result.get(\"last_visit_time\").toString())) / 1000000)));\n                    bbattributes.add(new BlackboardAttribute(ATTRIBUTE_TYPE.TSK_DATETIME_ACCESSED.getTypeID(), \"Recent Activity\", ((Long.valueOf(result.get(\"last_visit_time\").toString())) / 1000000)));\n                    bbattributes.add(new BlackboardAttribute(ATTRIBUTE_TYPE.TSK_REFERRER.getTypeID(), \"Recent Activity\", ((result.get(\"from_visit\").toString() != null) ? result.get(\"from_visit\").toString() : \"\")));\n                    bbattributes.add(new BlackboardAttribute(ATTRIBUTE_TYPE.TSK_NAME.getTypeID(), \"Recent Activity\", ((result.get(\"title\").toString() != null) ? result.get(\"title\").toString() : \"\")));\n                    bbattributes.add(new BlackboardAttribute(ATTRIBUTE_TYPE.TSK_PROG_NAME.getTypeID(), \"Recent Activity\", \"Chrome\"));\n                    bbattributes.add(new BlackboardAttribute(ATTRIBUTE_TYPE.TSK_DOMAIN.getTypeID(), \"Recent Activity\", (Util.extractDomain((result.get(\"origin_url\").toString() != null) ? result.get(\"url\").toString() : \"\"))));\n                    bbattributes.add(new BlackboardAttribute(ATTRIBUTE_TYPE.TSK_USER_NAME.getTypeID(), \"Recent Activity\", ((result.get(\"username_value\").toString() != null) ? result.get(\"username_value\").toString().replaceAll(\"'\", \"''\") : \"\")));\n                    bbattributes.add(new BlackboardAttribute(ATTRIBUTE_TYPE.TSK_DOMAIN.getTypeID(), \"Recent Activity\", result.get(\"signon_realm\").toString()));\n                    this.addArtifact(ARTIFACT_TYPE.TSK_WEB_HISTORY, signonFile, bbattributes);\n\n                }\n                if (errors > 0) {\n                    this.addErrorMessage(this.getName() + \": Error parsing \" + errors + \" Chrome login artifacts.\");\n                }\n             \n                dbFile.delete();\n            }\n\n            services.fireModuleDataEvent(new ModuleDataEvent(\"Recent Activity\", BlackboardArtifact.ARTIFACT_TYPE.TSK_WEB_HISTORY));\n        }\n    }","id":16490,"modified_method":"private void getLogin(Content dataSource, IngestDataSourceWorkerController controller) {\n        \n        FileManager fileManager = currentCase.getServices().getFileManager();\n        List<AbstractFile> signonFiles = null;\n        try {\n            signonFiles = fileManager.findFiles(dataSource, \"signons.sqlite\", \"Chrome\");\n        } catch (TskCoreException ex) {\n            String msg = \"Error when trying to get Chrome history files.\";\n            logger.log(Level.SEVERE, msg, ex);\n            this.addErrorMessage(this.getName() + \": \" + msg);\n            return;\n        }\n\n        int j = 0;\n        while (j < signonFiles.size()) {\n            AbstractFile signonFile = signonFiles.get(j++);\n            String temps = RAImageIngestModule.getRATempPath(currentCase, \"chrome\") + File.separator + signonFile.getName().toString() + j + \".db\";\n            try {\n                ContentUtils.writeToFile(signonFile, new File(temps));\n            } catch (IOException ex) {\n                logger.log(Level.SEVERE, \"Error writing temp sqlite db for Chrome login artifacts.{0}\", ex);\n                this.addErrorMessage(this.getName() + \": Error while trying to analyze file:\" + signonFile.getName());\n                continue;\n            }\n            File dbFile = new File(temps);\n            if (controller.isCancelled()) {\n                dbFile.delete();\n                break;\n            }\n            List<HashMap<String, Object>> tempList = this.dbConnect(temps, chloginquery);\n            logger.log(Level.INFO, moduleName + \"- Now getting login information from \" + temps + \" with \" + tempList.size() + \"artifacts identified.\");\n            for (HashMap<String, Object> result : tempList) {\n                Collection<BlackboardAttribute> bbattributes = new ArrayList<BlackboardAttribute>();\n                bbattributes.add(new BlackboardAttribute(ATTRIBUTE_TYPE.TSK_URL.getTypeID(), \"Recent Activity\", ((result.get(\"origin_url\").toString() != null) ? result.get(\"origin_url\").toString() : \"\")));\n                //bbattributes.add(new BlackboardAttribute(ATTRIBUTE_TYPE.TSK_URL_DECODED.getTypeID(), \"Recent Activity\", ((result.get(\"origin_url\").toString() != null) ? EscapeUtil.decodeURL(result.get(\"origin_url\").toString()) : \"\")));\n                //TODO Revisit usage of deprecated constructor as per TSK-583\n                //bbattributes.add(new BlackboardAttribute(ATTRIBUTE_TYPE.TSK_DATETIME_ACCESSED.getTypeID(), \"Recent Activity\", \"Last Visited\", ((Long.valueOf(result.get(\"last_visit_time\").toString())) / 1000000)));\n                bbattributes.add(new BlackboardAttribute(ATTRIBUTE_TYPE.TSK_DATETIME_ACCESSED.getTypeID(), \"Recent Activity\", ((Long.valueOf(result.get(\"last_visit_time\").toString())) / 1000000)));\n                bbattributes.add(new BlackboardAttribute(ATTRIBUTE_TYPE.TSK_REFERRER.getTypeID(), \"Recent Activity\", ((result.get(\"from_visit\").toString() != null) ? result.get(\"from_visit\").toString() : \"\")));\n                bbattributes.add(new BlackboardAttribute(ATTRIBUTE_TYPE.TSK_NAME.getTypeID(), \"Recent Activity\", ((result.get(\"title\").toString() != null) ? result.get(\"title\").toString() : \"\")));\n                bbattributes.add(new BlackboardAttribute(ATTRIBUTE_TYPE.TSK_PROG_NAME.getTypeID(), \"Recent Activity\", \"Chrome\"));\n                bbattributes.add(new BlackboardAttribute(ATTRIBUTE_TYPE.TSK_DOMAIN.getTypeID(), \"Recent Activity\", (Util.extractDomain((result.get(\"origin_url\").toString() != null) ? result.get(\"url\").toString() : \"\"))));\n                bbattributes.add(new BlackboardAttribute(ATTRIBUTE_TYPE.TSK_USER_NAME.getTypeID(), \"Recent Activity\", ((result.get(\"username_value\").toString() != null) ? result.get(\"username_value\").toString().replaceAll(\"'\", \"''\") : \"\")));\n                bbattributes.add(new BlackboardAttribute(ATTRIBUTE_TYPE.TSK_DOMAIN.getTypeID(), \"Recent Activity\", result.get(\"signon_realm\").toString()));\n                this.addArtifact(ARTIFACT_TYPE.TSK_WEB_HISTORY, signonFile, bbattributes);\n            }\n\n            dbFile.delete();\n        }\n\n        services.fireModuleDataEvent(new ModuleDataEvent(\"Recent Activity\", BlackboardArtifact.ARTIFACT_TYPE.TSK_WEB_HISTORY));\n    }","commit_id":"71759074fe5bf05a275dfda5a103d42060618227","url":"https://github.com/sleuthkit/autopsy"},{"original_method":"private void getBookmark(Content dataSource, IngestDataSourceWorkerController controller) {\n        \n        FileManager fileManager = currentCase.getServices().getFileManager();\n        List<AbstractFile> bookmarkFiles = null;\n        try {\n            bookmarkFiles = fileManager.findFiles(dataSource, \"Bookmarks\", \"Chrome\");\n        } catch (TskCoreException ex) {\n            logger.log(Level.SEVERE, \"Error when trying to get Chrome history files.\", ex);\n        }\n\n        int j = 0;\n        if (bookmarkFiles != null && !bookmarkFiles.isEmpty()) {\n            while (j < bookmarkFiles.size()) {\n                AbstractFile bookmarkFile =  bookmarkFiles.get(j++);\n                String temps = RAImageIngestModule.getRATempPath(currentCase, \"chrome\") + File.separator + bookmarkFile.getName().toString() + j + \".db\";\n                int errors = 0;\n                try {\n                    ContentUtils.writeToFile(bookmarkFile, new File(temps));\n                } catch (IOException ex) {\n                    logger.log(Level.SEVERE, \"Error writing temp sqlite db for Chrome bookmark artifacts.{0}\", ex);\n                    this.addErrorMessage(this.getName() + \": Error while trying to analyze file:\" + bookmarkFile.getName());\n                    continue;\n                }\n                logger.log(Level.INFO, moduleName + \"- Now getting Bookmarks from \" + temps);\n                File dbFile = new File(temps);\n                if (controller.isCancelled()) {\n                    dbFile.delete();\n                    break;\n                }\n                try {\n                   final JsonParser parser = new JsonParser();\n                    JsonElement jsonElement = parser.parse(new FileReader(temps));\n                    JsonObject jElement = jsonElement.getAsJsonObject();\n                    JsonObject jRoot = jElement.get(\"roots\").getAsJsonObject();\n                    JsonObject jBookmark = jRoot.get(\"bookmark_bar\").getAsJsonObject();\n                    JsonArray jBookmarkArray = jBookmark.getAsJsonArray(\"children\");\n                    for (JsonElement result : jBookmarkArray) {\n                        try {\n                            JsonObject address = result.getAsJsonObject();\n                            if (address == null) {\n                                continue;\n                            }\n                            JsonElement urlEl = address.get(\"url\");\n                            String url = null;\n                            if (urlEl != null) {\n                                url = urlEl.getAsString();\n                            }\n                            else {\n                                url = \"\";\n                            }\n                            String name = null;\n                            JsonElement nameEl = address.get(\"name\");\n                            if (nameEl != null) {\n                                name = nameEl.getAsString();\n                            }\n                            else {\n                                name = \"\";\n                            }\n                            Long date = null;\n                            JsonElement dateEl = address.get(\"date_added\");\n                            if (dateEl != null) {\n                                date = dateEl.getAsLong();\n                            }\n                            else {\n                                date = Long.valueOf(0);\n                            }\n                            String domain = Util.extractDomain(url);\n                            BlackboardArtifact bbart = bookmarkFile.newArtifact(ARTIFACT_TYPE.TSK_WEB_BOOKMARK);\n                            Collection<BlackboardAttribute> bbattributes = new ArrayList<BlackboardAttribute>();\n                            //TODO Revisit usage of deprecated constructor as per TSK-583\n                            //bbattributes.add(new BlackboardAttribute(ATTRIBUTE_TYPE.TSK_LAST_ACCESSED.getTypeID(), \"Recent Activity\", \"Last Visited\", (date / 10000000)));\n                            bbattributes.add(new BlackboardAttribute(ATTRIBUTE_TYPE.TSK_DATETIME_ACCESSED.getTypeID(), \"Recent Activity\", (date / 10000000)));\n                            bbattributes.add(new BlackboardAttribute(ATTRIBUTE_TYPE.TSK_URL.getTypeID(), \"Recent Activity\", url));\n                            //bbattributes.add(new BlackboardAttribute(ATTRIBUTE_TYPE.TSK_URL_DECODED.getTypeID(), \"Recent Activity\", EscapeUtil.decodeURL(url)));\n                            bbattributes.add(new BlackboardAttribute(ATTRIBUTE_TYPE.TSK_NAME.getTypeID(), \"Recent Activity\", name));\n                            bbattributes.add(new BlackboardAttribute(ATTRIBUTE_TYPE.TSK_PROG_NAME.getTypeID(), \"Recent Activity\", \"Chrome\"));\n                            bbattributes.add(new BlackboardAttribute(ATTRIBUTE_TYPE.TSK_DOMAIN.getTypeID(), \"Recent Activity\", domain));\n                            bbart.addAttributes(bbattributes);\n                        } catch (TskCoreException ex) {\n                            logger.log(Level.SEVERE, \"Error while trying to insert Chrom bookmark artifact{0}\", ex);\n                            errors++;\n                        }\n                    }\n                    if (errors > 0) {\n                        this.addErrorMessage(this.getName() + \": Error parsing \" + errors + \" Chrome bookmark artifacts.\");\n                    }\n                } catch (FileNotFoundException ex) {\n                    logger.log(Level.SEVERE, \"Error while trying to read into the Bookmarks for Chrome.\" + ex);\n                }\n             \n                dbFile.delete();\n            }\n\n            services.fireModuleDataEvent(new ModuleDataEvent(\"Recent Activity\", BlackboardArtifact.ARTIFACT_TYPE.TSK_WEB_BOOKMARK));\n        }\n    }","id":16491,"modified_method":"private void getBookmark(Content dataSource, IngestDataSourceWorkerController controller) {\n        \n        FileManager fileManager = currentCase.getServices().getFileManager();\n        List<AbstractFile> bookmarkFiles = null;\n        try {\n            bookmarkFiles = fileManager.findFiles(dataSource, \"Bookmarks\", \"Chrome\");\n        } catch (TskCoreException ex) {\n            String msg = \"Error when trying to get Chrome Bookmark files.\";\n            logger.log(Level.SEVERE, msg, ex);\n            this.addErrorMessage(this.getName() + \": \" + msg);\n            return;\n        }\n\n        int j = 0;\n            \n        while (j < bookmarkFiles.size()) {\n            AbstractFile bookmarkFile =  bookmarkFiles.get(j++);\n            String temps = RAImageIngestModule.getRATempPath(currentCase, \"chrome\") + File.separator + bookmarkFile.getName().toString() + j + \".db\";\n            try {\n                ContentUtils.writeToFile(bookmarkFile, new File(temps));\n            } catch (IOException ex) {\n                logger.log(Level.SEVERE, \"Error writing temp sqlite db for Chrome bookmark artifacts.{0}\", ex);\n                this.addErrorMessage(this.getName() + \": Error while trying to analyze file:\" + bookmarkFile.getName());\n                continue;\n            }\n            \n            logger.log(Level.INFO, moduleName + \"- Now getting Bookmarks from \" + temps);\n            File dbFile = new File(temps);\n            if (controller.isCancelled()) {\n                dbFile.delete();\n                break;\n            }\n            \n            FileReader tempReader;\n            try {\n                 tempReader = new FileReader(temps);\n            } catch (FileNotFoundException ex) {\n                logger.log(Level.SEVERE, \"Error while trying to read into the Bookmarks for Chrome.\" + ex);\n                this.addErrorMessage(this.getName() + \": Error while trying to analyze file: \" + bookmarkFile.getName());\n                continue;\n            }\n            \n            final JsonParser parser = new JsonParser();\n            JsonElement jsonElement = parser.parse(tempReader);\n            JsonObject jElement = jsonElement.getAsJsonObject();\n            JsonObject jRoot = jElement.get(\"roots\").getAsJsonObject();\n            JsonObject jBookmark = jRoot.get(\"bookmark_bar\").getAsJsonObject();\n            JsonArray jBookmarkArray = jBookmark.getAsJsonArray(\"children\");\n            for (JsonElement result : jBookmarkArray) {\n                JsonObject address = result.getAsJsonObject();\n                if (address == null) {\n                    continue;\n                }\n                JsonElement urlEl = address.get(\"url\");\n                String url = null;\n                if (urlEl != null) {\n                    url = urlEl.getAsString();\n                }\n                else {\n                    url = \"\";\n                }\n                String name = null;\n                JsonElement nameEl = address.get(\"name\");\n                if (nameEl != null) {\n                    name = nameEl.getAsString();\n                }\n                else {\n                    name = \"\";\n                }\n                Long date = null;\n                JsonElement dateEl = address.get(\"date_added\");\n                if (dateEl != null) {\n                    date = dateEl.getAsLong();\n                }\n                else {\n                    date = Long.valueOf(0);\n                }\n                String domain = Util.extractDomain(url);\n                try {\n                    BlackboardArtifact bbart = bookmarkFile.newArtifact(ARTIFACT_TYPE.TSK_WEB_BOOKMARK);\n                    Collection<BlackboardAttribute> bbattributes = new ArrayList<BlackboardAttribute>();\n                    //TODO Revisit usage of deprecated constructor as per TSK-583\n                    //bbattributes.add(new BlackboardAttribute(ATTRIBUTE_TYPE.TSK_LAST_ACCESSED.getTypeID(), \"Recent Activity\", \"Last Visited\", (date / 10000000)));\n                    bbattributes.add(new BlackboardAttribute(ATTRIBUTE_TYPE.TSK_DATETIME_ACCESSED.getTypeID(), \"Recent Activity\", (date / 10000000)));\n                    bbattributes.add(new BlackboardAttribute(ATTRIBUTE_TYPE.TSK_URL.getTypeID(), \"Recent Activity\", url));\n                    //bbattributes.add(new BlackboardAttribute(ATTRIBUTE_TYPE.TSK_URL_DECODED.getTypeID(), \"Recent Activity\", EscapeUtil.decodeURL(url)));\n                    bbattributes.add(new BlackboardAttribute(ATTRIBUTE_TYPE.TSK_NAME.getTypeID(), \"Recent Activity\", name));\n                    bbattributes.add(new BlackboardAttribute(ATTRIBUTE_TYPE.TSK_PROG_NAME.getTypeID(), \"Recent Activity\", \"Chrome\"));\n                    bbattributes.add(new BlackboardAttribute(ATTRIBUTE_TYPE.TSK_DOMAIN.getTypeID(), \"Recent Activity\", domain));\n                    bbart.addAttributes(bbattributes);\n                } catch (TskCoreException ex) {\n                    logger.log(Level.SEVERE, \"Error while trying to insert Chrome bookmark artifact{0}\", ex);\n                    this.addErrorMessage(this.getName() + \": Error while trying to analyze file:\" + bookmarkFile.getName());\n                }\n            }\n            dbFile.delete();\n        }\n\n        services.fireModuleDataEvent(new ModuleDataEvent(\"Recent Activity\", BlackboardArtifact.ARTIFACT_TYPE.TSK_WEB_BOOKMARK));\n    }","commit_id":"71759074fe5bf05a275dfda5a103d42060618227","url":"https://github.com/sleuthkit/autopsy"},{"original_method":"private void getDownload(Content dataSource, IngestDataSourceWorkerController controller) {\n        \n        FileManager fileManager = currentCase.getServices().getFileManager();\n        List<AbstractFile> historyFiles = null;\n        try {\n            historyFiles = fileManager.findFiles(dataSource, \"History\", \"Chrome\");\n        } catch (TskCoreException ex) {\n            logger.log(Level.SEVERE, \"Error when trying to get Chrome history files.\", ex);\n        }\n\n        int j = 0;\n        if (historyFiles != null && !historyFiles.isEmpty()) {\n            while (j < historyFiles.size()) {\n                AbstractFile historyFile = historyFiles.get(j++);\n                if (historyFile.getSize() == 0) {\n                    continue;\n                }\n                String temps = RAImageIngestModule.getRATempPath(currentCase, \"chrome\") + File.separator + historyFile.getName().toString() + j + \".db\";\n                int errors = 0;\n                try {\n                    ContentUtils.writeToFile(historyFile, new File(temps));\n                } catch (IOException ex) {\n                    logger.log(Level.SEVERE, \"Error writing temp sqlite db for Chrome download artifacts.{0}\", ex);\n                    this.addErrorMessage(this.getName() + \": Error while trying to analyze file:\" + historyFile.getName());\n                    continue;\n                }\n                File dbFile = new File(temps);\n                if (controller.isCancelled()) {\n                    dbFile.delete();\n                    break;\n                }\n\n                List<HashMap<String, Object>> tempList = this.dbConnect(temps, chdownloadquery);\n                logger.log(Level.INFO, moduleName + \"- Now getting downloads from \" + temps + \" with \" + tempList.size() + \"artifacts identified.\");\n                for (HashMap<String, Object> result : tempList) {\n                    Collection<BlackboardAttribute> bbattributes = new ArrayList<BlackboardAttribute>();\n                    bbattributes.add(new BlackboardAttribute(ATTRIBUTE_TYPE.TSK_PATH.getTypeID(), \"Recent Activity\", (result.get(\"full_path\").toString())));\n                    bbattributes.add(new BlackboardAttribute(ATTRIBUTE_TYPE.TSK_PATH_ID.getTypeID(), \"Recent Activity\", Util.findID(dataSource, (result.get(\"full_path\").toString()))));\n                    bbattributes.add(new BlackboardAttribute(ATTRIBUTE_TYPE.TSK_URL.getTypeID(), \"Recent Activity\", ((result.get(\"url\").toString() != null) ? result.get(\"url\").toString() : \"\")));\n                    //bbattributes.add(new BlackboardAttribute(ATTRIBUTE_TYPE.TSK_URL_DECODED.getTypeID(), \"Recent Activity\", ((result.get(\"url\").toString() != null) ? EscapeUtil.decodeURL(result.get(\"url\").toString()) : \"\")));\n                    Long time = (Long.valueOf(result.get(\"start_time\").toString()));\n                    String Tempdate = time.toString();\n                    time = Long.valueOf(Tempdate) / 10000000;\n                    //TODO Revisit usage of deprecated constructor as per TSK-583\n                    //bbattributes.add(new BlackboardAttribute(ATTRIBUTE_TYPE.TSK_LAST_ACCESSED.getTypeID(), \"Recent Activity\", \"Last Visited\", time));\n                    bbattributes.add(new BlackboardAttribute(ATTRIBUTE_TYPE.TSK_DATETIME_ACCESSED.getTypeID(), \"Recent Activity\", time));\n                    String domain = Util.extractDomain((result.get(\"url\").toString() != null) ? result.get(\"url\").toString() : \"\");\n                    bbattributes.add(new BlackboardAttribute(ATTRIBUTE_TYPE.TSK_DOMAIN.getTypeID(), \"Recent Activity\", domain));\n                    bbattributes.add(new BlackboardAttribute(ATTRIBUTE_TYPE.TSK_PROG_NAME.getTypeID(), \"Recent Activity\", \"Chrome\"));\n                    this.addArtifact(ARTIFACT_TYPE.TSK_WEB_DOWNLOAD, historyFile, bbattributes);\n\n                }\n                if (errors > 0) {\n                    this.addErrorMessage(this.getName() + \": Error parsing \" + errors + \" Chrome download artifacts.\");\n                }\n       \n                dbFile.delete();\n            }\n\n            services.fireModuleDataEvent(new ModuleDataEvent(\"Recent Activity\", BlackboardArtifact.ARTIFACT_TYPE.TSK_WEB_DOWNLOAD));\n        }\n    }","id":16492,"modified_method":"private void getDownload(Content dataSource, IngestDataSourceWorkerController controller) {\n        \n        FileManager fileManager = currentCase.getServices().getFileManager();\n        List<AbstractFile> historyFiles = null;\n        try {\n            historyFiles = fileManager.findFiles(dataSource, \"History\", \"Chrome\");\n        } catch (TskCoreException ex) {\n            String msg = \"Error when trying to get Chrome history files.\";\n            logger.log(Level.SEVERE, msg, ex);\n            this.addErrorMessage(this.getName() + \": \" + msg);\n            return;\n        }\n\n        int j = 0;\n        while (j < historyFiles.size()) {\n            AbstractFile historyFile = historyFiles.get(j++);\n            if (historyFile.getSize() == 0) {\n                continue;\n            }\n            String temps = RAImageIngestModule.getRATempPath(currentCase, \"chrome\") + File.separator + historyFile.getName().toString() + j + \".db\";\n            try {\n                ContentUtils.writeToFile(historyFile, new File(temps));\n            } catch (IOException ex) {\n                logger.log(Level.SEVERE, \"Error writing temp sqlite db for Chrome download artifacts.{0}\", ex);\n                this.addErrorMessage(this.getName() + \": Error while trying to analyze file:\" + historyFile.getName());\n                continue;\n            }\n            File dbFile = new File(temps);\n            if (controller.isCancelled()) {\n                dbFile.delete();\n                break;\n            }\n\n            List<HashMap<String, Object>> tempList = this.dbConnect(temps, chdownloadquery);\n            logger.log(Level.INFO, moduleName + \"- Now getting downloads from \" + temps + \" with \" + tempList.size() + \"artifacts identified.\");\n            for (HashMap<String, Object> result : tempList) {\n                Collection<BlackboardAttribute> bbattributes = new ArrayList<BlackboardAttribute>();\n                bbattributes.add(new BlackboardAttribute(ATTRIBUTE_TYPE.TSK_PATH.getTypeID(), \"Recent Activity\", (result.get(\"full_path\").toString())));\n                bbattributes.add(new BlackboardAttribute(ATTRIBUTE_TYPE.TSK_PATH_ID.getTypeID(), \"Recent Activity\", Util.findID(dataSource, (result.get(\"full_path\").toString()))));\n                bbattributes.add(new BlackboardAttribute(ATTRIBUTE_TYPE.TSK_URL.getTypeID(), \"Recent Activity\", ((result.get(\"url\").toString() != null) ? result.get(\"url\").toString() : \"\")));\n                //bbattributes.add(new BlackboardAttribute(ATTRIBUTE_TYPE.TSK_URL_DECODED.getTypeID(), \"Recent Activity\", ((result.get(\"url\").toString() != null) ? EscapeUtil.decodeURL(result.get(\"url\").toString()) : \"\")));\n                Long time = (Long.valueOf(result.get(\"start_time\").toString()));\n                String Tempdate = time.toString();\n                time = Long.valueOf(Tempdate) / 10000000;\n                //TODO Revisit usage of deprecated constructor as per TSK-583\n                //bbattributes.add(new BlackboardAttribute(ATTRIBUTE_TYPE.TSK_LAST_ACCESSED.getTypeID(), \"Recent Activity\", \"Last Visited\", time));\n                bbattributes.add(new BlackboardAttribute(ATTRIBUTE_TYPE.TSK_DATETIME_ACCESSED.getTypeID(), \"Recent Activity\", time));\n                String domain = Util.extractDomain((result.get(\"url\").toString() != null) ? result.get(\"url\").toString() : \"\");\n                bbattributes.add(new BlackboardAttribute(ATTRIBUTE_TYPE.TSK_DOMAIN.getTypeID(), \"Recent Activity\", domain));\n                bbattributes.add(new BlackboardAttribute(ATTRIBUTE_TYPE.TSK_PROG_NAME.getTypeID(), \"Recent Activity\", \"Chrome\"));\n                this.addArtifact(ARTIFACT_TYPE.TSK_WEB_DOWNLOAD, historyFile, bbattributes);\n\n            }\n\n            dbFile.delete();\n        }\n\n        services.fireModuleDataEvent(new ModuleDataEvent(\"Recent Activity\", BlackboardArtifact.ARTIFACT_TYPE.TSK_WEB_DOWNLOAD));\n    }","commit_id":"71759074fe5bf05a275dfda5a103d42060618227","url":"https://github.com/sleuthkit/autopsy"},{"original_method":"private void getCookie(Content dataSource, IngestDataSourceWorkerController controller) {\n        \n        org.sleuthkit.autopsy.casemodule.services.FileManager fileManager = currentCase.getServices().getFileManager();\n        List<AbstractFile> cookiesFiles = null;\n        try {\n            cookiesFiles = fileManager.findFiles(dataSource, \"%.txt\", \"Cookies\");\n        } catch (TskCoreException ex) {\n            logger.log(Level.WARNING, \"Error fetching 'index.data' files for Internet Explorer history.\");\n        }\n\n        int errors = 0;\n        for (AbstractFile cookiesFile : cookiesFiles) {\n            if (controller.isCancelled()) {\n                break;\n            }\n            Content fav = cookiesFile;\n            byte[] t = new byte[(int) fav.getSize()];\n            try {\n                final int bytesRead = fav.read(t, 0, fav.getSize());\n            } catch (TskCoreException ex) {\n                logger.log(Level.SEVERE, \"Error reading bytes of Internet Explorer cookie.\", ex);\n            }\n            String cookieString = new String(t);\n            String[] values = cookieString.split(\"\\n\");\n            String url = values.length > 2 ? values[2] : \"\";\n            String value = values.length > 1 ? values[1] : \"\";\n            String name = values.length > 0 ? values[0] : \"\";\n            Long datetime = cookiesFile.getCrtime();\n            String Tempdate = datetime.toString();\n            datetime = Long.valueOf(Tempdate);\n            String domain = Util.extractDomain(url);\n\n            Collection<BlackboardAttribute> bbattributes = new ArrayList<BlackboardAttribute>();\n            bbattributes.add(new BlackboardAttribute(ATTRIBUTE_TYPE.TSK_URL.getTypeID(), \"RecentActivity\", url));\n            //bbattributes.add(new BlackboardAttribute(ATTRIBUTE_TYPE.TSK_URL_DECODED.getTypeID(), \"RecentActivity\", EscapeUtil.decodeURL(url)));\n            //TODO Revisit usage of deprecated Constructor as of TSK-583\n            //bbattributes.add(new BlackboardAttribute(ATTRIBUTE_TYPE.TSK_DATETIME.getTypeID(), \"RecentActivity\", \"Last Visited\", datetime));\n            bbattributes.add(new BlackboardAttribute(ATTRIBUTE_TYPE.TSK_DATETIME.getTypeID(), \"RecentActivity\", datetime));\n            bbattributes.add(new BlackboardAttribute(ATTRIBUTE_TYPE.TSK_VALUE.getTypeID(), \"RecentActivity\", value));\n            //TODO Revisit usage of deprecated Constructor as of TSK-583\n            //bbattributes.add(new BlackboardAttribute(ATTRIBUTE_TYPE.TSK_NAME.getTypeID(), \"RecentActivity\", \"Title\", (name != null) ? name : \"\"));\n            bbattributes.add(new BlackboardAttribute(ATTRIBUTE_TYPE.TSK_NAME.getTypeID(), \"RecentActivity\", (name != null) ? name : \"\"));\n            bbattributes.add(new BlackboardAttribute(ATTRIBUTE_TYPE.TSK_PROG_NAME.getTypeID(), \"RecentActivity\", \"Internet Explorer\"));\n            bbattributes.add(new BlackboardAttribute(ATTRIBUTE_TYPE.TSK_DOMAIN.getTypeID(), \"RecentActivity\", domain));\n            this.addArtifact(ARTIFACT_TYPE.TSK_WEB_COOKIE, cookiesFile, bbattributes);\n        }\n        if (errors > 0) {\n            this.addErrorMessage(this.getName() + \": Error parsing \" + errors + \" Internet Explorer cookies.\");\n        }\n\n        services.fireModuleDataEvent(new ModuleDataEvent(\"Recent Activity\", BlackboardArtifact.ARTIFACT_TYPE.TSK_WEB_COOKIE));\n    }","id":16493,"modified_method":"private void getCookie(Content dataSource, IngestDataSourceWorkerController controller) {\n        \n        org.sleuthkit.autopsy.casemodule.services.FileManager fileManager = currentCase.getServices().getFileManager();\n        List<AbstractFile> cookiesFiles = null;\n        try {\n            cookiesFiles = fileManager.findFiles(dataSource, \"%.txt\", \"Cookies\");\n        } catch (TskCoreException ex) {\n            logger.log(Level.WARNING, \"Error fetching 'index.data' files for Internet Explorer history.\");\n            this.addErrorMessage(this.getName() + \": \" + \"Error getting Internet Explorer cookie files.\");\n            return;\n        }\n\n        for (AbstractFile cookiesFile : cookiesFiles) {\n            if (controller.isCancelled()) {\n                break;\n            }\n            Content fav = cookiesFile;\n            byte[] t = new byte[(int) fav.getSize()];\n            try {\n                final int bytesRead = fav.read(t, 0, fav.getSize());\n            } catch (TskCoreException ex) {\n                logger.log(Level.SEVERE, \"Error reading bytes of Internet Explorer cookie.\", ex);\n                this.addErrorMessage(this.getName() + \": Error reading Internet Explorer cookie \" + cookiesFile.getName());\n                continue;\n            }\n            String cookieString = new String(t);\n            String[] values = cookieString.split(\"\\n\");\n            String url = values.length > 2 ? values[2] : \"\";\n            String value = values.length > 1 ? values[1] : \"\";\n            String name = values.length > 0 ? values[0] : \"\";\n            Long datetime = cookiesFile.getCrtime();\n            String tempDate = datetime.toString();\n            datetime = Long.valueOf(tempDate);\n            String domain = Util.extractDomain(url);\n\n            Collection<BlackboardAttribute> bbattributes = new ArrayList<BlackboardAttribute>();\n            bbattributes.add(new BlackboardAttribute(ATTRIBUTE_TYPE.TSK_URL.getTypeID(), \"RecentActivity\", url));\n            //bbattributes.add(new BlackboardAttribute(ATTRIBUTE_TYPE.TSK_URL_DECODED.getTypeID(), \"RecentActivity\", EscapeUtil.decodeURL(url)));\n            //TODO Revisit usage of deprecated Constructor as of TSK-583\n            //bbattributes.add(new BlackboardAttribute(ATTRIBUTE_TYPE.TSK_DATETIME.getTypeID(), \"RecentActivity\", \"Last Visited\", datetime));\n            bbattributes.add(new BlackboardAttribute(ATTRIBUTE_TYPE.TSK_DATETIME.getTypeID(), \"RecentActivity\", datetime));\n            bbattributes.add(new BlackboardAttribute(ATTRIBUTE_TYPE.TSK_VALUE.getTypeID(), \"RecentActivity\", value));\n            //TODO Revisit usage of deprecated Constructor as of TSK-583\n            //bbattributes.add(new BlackboardAttribute(ATTRIBUTE_TYPE.TSK_NAME.getTypeID(), \"RecentActivity\", \"Title\", (name != null) ? name : \"\"));\n            bbattributes.add(new BlackboardAttribute(ATTRIBUTE_TYPE.TSK_NAME.getTypeID(), \"RecentActivity\", (name != null) ? name : \"\"));\n            bbattributes.add(new BlackboardAttribute(ATTRIBUTE_TYPE.TSK_PROG_NAME.getTypeID(), \"RecentActivity\", \"Internet Explorer\"));\n            bbattributes.add(new BlackboardAttribute(ATTRIBUTE_TYPE.TSK_DOMAIN.getTypeID(), \"RecentActivity\", domain));\n            this.addArtifact(ARTIFACT_TYPE.TSK_WEB_COOKIE, cookiesFile, bbattributes);\n        }\n\n        services.fireModuleDataEvent(new ModuleDataEvent(\"Recent Activity\", BlackboardArtifact.ARTIFACT_TYPE.TSK_WEB_COOKIE));\n    }","commit_id":"71759074fe5bf05a275dfda5a103d42060618227","url":"https://github.com/sleuthkit/autopsy"},{"original_method":"private void getRecentDocuments(Content dataSource, IngestDataSourceWorkerController controller) {\n        \n        org.sleuthkit.autopsy.casemodule.services.FileManager fileManager = currentCase.getServices().getFileManager();\n        List<AbstractFile> recentFiles = null;\n        try {\n            recentFiles = fileManager.findFiles(dataSource, \"%.lnk\", \"Recent\");\n        } catch (TskCoreException ex) {\n            logger.log(Level.WARNING, \"Error fetching 'index.data' files for Internet Explorer history.\");\n        }\n\n        for (AbstractFile recentFile : recentFiles) {\n            if (controller.isCancelled()) {\n                break;\n            }\n            Content fav = recentFile;\n            if (fav.getSize() == 0) {\n                continue;\n            }\n            JLNK lnk = null;\n            JLnkParser lnkParser = new JLnkParser(new ReadContentInputStream(fav), (int) fav.getSize());\n            try {\n                lnk = lnkParser.parse();\n            }\n            catch (Exception e) {\n                //TODO should throw a specific checked exception\n                logger.log(Level.SEVERE, \"Error lnk parsing the file to get recent files\" + recentFile);\n                continue;\n            }\n            String path = lnk.getBestPath();\n            Long datetime = recentFile.getCrtime();\n\n            Collection<BlackboardAttribute> bbattributes = new ArrayList<BlackboardAttribute>();\n            bbattributes.add(new BlackboardAttribute(ATTRIBUTE_TYPE.TSK_PATH.getTypeID(), \"RecentActivity\", path));\n            bbattributes.add(new BlackboardAttribute(ATTRIBUTE_TYPE.TSK_NAME.getTypeID(), \"RecentActivity\", Util.getFileName(path)));\n            long id = Util.findID(dataSource, path);\n            bbattributes.add(new BlackboardAttribute(ATTRIBUTE_TYPE.TSK_PATH_ID.getTypeID(), \"RecentActivity\", id));\n            //TODO Revisit usage of deprecated constructor as per TSK-583\n            //bbattributes.add(new BlackboardAttribute(ATTRIBUTE_TYPE.TSK_DATETIME.getTypeID(), \"RecentActivity\", \"Date Created\", datetime));\n            bbattributes.add(new BlackboardAttribute(ATTRIBUTE_TYPE.TSK_DATETIME.getTypeID(), \"RecentActivity\", datetime));\n            this.addArtifact(ARTIFACT_TYPE.TSK_RECENT_OBJECT, recentFile, bbattributes);\n        }\n\n        services.fireModuleDataEvent(new ModuleDataEvent(\"Recent Activity\", BlackboardArtifact.ARTIFACT_TYPE.TSK_RECENT_OBJECT));\n    }","id":16494,"modified_method":"private void getRecentDocuments(Content dataSource, IngestDataSourceWorkerController controller) {\n        \n        org.sleuthkit.autopsy.casemodule.services.FileManager fileManager = currentCase.getServices().getFileManager();\n        List<AbstractFile> recentFiles = null;\n        try {\n            recentFiles = fileManager.findFiles(dataSource, \"%.lnk\", \"Recent\");\n        } catch (TskCoreException ex) {\n            logger.log(Level.WARNING, \"Error fetching 'index.data' files for Internet Explorer history.\");\n            this.addErrorMessage(this.getName() + \": Error getting Recent Files.\");\n            return;\n        }\n\n        for (AbstractFile recentFile : recentFiles) {\n            if (controller.isCancelled()) {\n                break;\n            }\n            Content fav = recentFile;\n            if (fav.getSize() == 0) {\n                continue;\n            }\n            JLNK lnk = null;\n            JLnkParser lnkParser = new JLnkParser(new ReadContentInputStream(fav), (int) fav.getSize());\n            try {\n                lnk = lnkParser.parse();\n            } catch (Exception e) {\n                //TODO should throw a specific checked exception\n                logger.log(Level.SEVERE, \"Error lnk parsing the file to get recent files\" + recentFile);\n                this.addErrorMessage(this.getName() + \": Error parsing Recent File \" + recentFile.getName());\n                continue;\n            }\n            String path = lnk.getBestPath();\n            Long datetime = recentFile.getCrtime();\n\n            Collection<BlackboardAttribute> bbattributes = new ArrayList<BlackboardAttribute>();\n            bbattributes.add(new BlackboardAttribute(ATTRIBUTE_TYPE.TSK_PATH.getTypeID(), \"RecentActivity\", path));\n            bbattributes.add(new BlackboardAttribute(ATTRIBUTE_TYPE.TSK_NAME.getTypeID(), \"RecentActivity\", Util.getFileName(path)));\n            long id = Util.findID(dataSource, path);\n            bbattributes.add(new BlackboardAttribute(ATTRIBUTE_TYPE.TSK_PATH_ID.getTypeID(), \"RecentActivity\", id));\n            //TODO Revisit usage of deprecated constructor as per TSK-583\n            //bbattributes.add(new BlackboardAttribute(ATTRIBUTE_TYPE.TSK_DATETIME.getTypeID(), \"RecentActivity\", \"Date Created\", datetime));\n            bbattributes.add(new BlackboardAttribute(ATTRIBUTE_TYPE.TSK_DATETIME.getTypeID(), \"RecentActivity\", datetime));\n            this.addArtifact(ARTIFACT_TYPE.TSK_RECENT_OBJECT, recentFile, bbattributes);\n        }\n\n        services.fireModuleDataEvent(new ModuleDataEvent(\"Recent Activity\", BlackboardArtifact.ARTIFACT_TYPE.TSK_RECENT_OBJECT));\n    }","commit_id":"71759074fe5bf05a275dfda5a103d42060618227","url":"https://github.com/sleuthkit/autopsy"},{"original_method":"private void getBookmark(Content dataSource, IngestDataSourceWorkerController controller) {\n\n        int errors = 0;\n        \n        org.sleuthkit.autopsy.casemodule.services.FileManager fileManager = currentCase.getServices().getFileManager();\n        List<AbstractFile> favoritesFiles = null;\n        try {\n            favoritesFiles = fileManager.findFiles(dataSource, \"%.url\", \"Favorites\");\n        } catch (TskCoreException ex) {\n            logger.log(Level.WARNING, \"Error fetching 'index.data' files for Internet Explorer history.\");\n        }\n\n        for (AbstractFile favoritesFile : favoritesFiles) {\n            if (controller.isCancelled()) {\n                break;\n            }\n            Content fav = favoritesFile;\n            byte[] t = new byte[(int) fav.getSize()];\n            try {\n                final int bytesRead = fav.read(t, 0, fav.getSize());\n            } catch (TskCoreException ex) {\n                logger.log(Level.SEVERE, \"Error reading bytes of Internet Explorer favorite.\", ex);\n            }\n            String bookmarkString = new String(t);\n            String re1 = \".*?\";\t// Non-greedy match on filler\n            String re2 = \"((?:http|https)(?::\\\\/{2}[\\\\w]+)(?:[\\\\/|\\\\.]?)(?:[^\\\\s\\\"]*))\";\t// HTTP URL 1\n            String url = \"\";\n            Pattern p = Pattern.compile(re1 + re2, Pattern.CASE_INSENSITIVE | Pattern.DOTALL);\n            Matcher m = p.matcher(bookmarkString);\n            if (m.find()) {\n                url = m.group(1);\n            }\n            String name = favoritesFile.getName();\n            Long datetime = favoritesFile.getCrtime();\n            String Tempdate = datetime.toString();\n            datetime = Long.valueOf(Tempdate);\n            String domain = Util.extractDomain(url);\n\n            Collection<BlackboardAttribute> bbattributes = new ArrayList<BlackboardAttribute>();\n            //TODO revisit usage of deprecated constructor as per TSK-583\n            //bbattributes.add(new BlackboardAttribute(ATTRIBUTE_TYPE.TSK_LAST_ACCESSED.getTypeID(), \"RecentActivity\", \"Last Visited\", datetime));\n            bbattributes.add(new BlackboardAttribute(ATTRIBUTE_TYPE.TSK_DATETIME_ACCESSED.getTypeID(), \"RecentActivity\", datetime));\n            bbattributes.add(new BlackboardAttribute(ATTRIBUTE_TYPE.TSK_URL.getTypeID(), \"RecentActivity\", url));\n            //bbattributes.add(new BlackboardAttribute(ATTRIBUTE_TYPE.TSK_URL_DECODED.getTypeID(), \"RecentActivity\", EscapeUtil.decodeURL(url)));\n            bbattributes.add(new BlackboardAttribute(ATTRIBUTE_TYPE.TSK_NAME.getTypeID(), \"RecentActivity\", name));\n            bbattributes.add(new BlackboardAttribute(ATTRIBUTE_TYPE.TSK_PROG_NAME.getTypeID(), \"RecentActivity\", \"Internet Explorer\"));\n            bbattributes.add(new BlackboardAttribute(ATTRIBUTE_TYPE.TSK_DOMAIN.getTypeID(), \"RecentActivity\", domain));\n            this.addArtifact(ARTIFACT_TYPE.TSK_WEB_BOOKMARK, favoritesFile, bbattributes);\n\n            services.fireModuleDataEvent(new ModuleDataEvent(\"Recent Activity\", BlackboardArtifact.ARTIFACT_TYPE.TSK_WEB_BOOKMARK));\n        }\n        if (errors > 0) {\n            this.addErrorMessage(this.getName() + \": Error parsing \" + errors + \" Internet Explorer favorites.\");\n        }\n    }","id":16495,"modified_method":"private void getBookmark(Content dataSource, IngestDataSourceWorkerController controller) {       \n        org.sleuthkit.autopsy.casemodule.services.FileManager fileManager = currentCase.getServices().getFileManager();\n        List<AbstractFile> favoritesFiles = null;\n        try {\n            favoritesFiles = fileManager.findFiles(dataSource, \"%.url\", \"Favorites\");\n        } catch (TskCoreException ex) {\n            logger.log(Level.WARNING, \"Error fetching 'index.data' files for Internet Explorer history.\");\n            this.addErrorMessage(this.getName() + \": Error getting Internet Explorer Bookmarks.\");\n            return;\n        }\n\n        for (AbstractFile favoritesFile : favoritesFiles) {\n            if (controller.isCancelled()) {\n                break;\n            }\n            Content fav = favoritesFile;\n            byte[] t = new byte[(int) fav.getSize()];\n            try {\n                final int bytesRead = fav.read(t, 0, fav.getSize());\n            } catch (TskCoreException ex) {\n                logger.log(Level.SEVERE, \"Error reading bytes of Internet Explorer favorite.\", ex);\n                this.addErrorMessage(this.getName() + \": Error reading Internet Explorer Bookmark file \" + favoritesFile.getName());\n                return;\n            }\n            String bookmarkString = new String(t);\n            String re1 = \".*?\";\t// Non-greedy match on filler\n            String re2 = \"((?:http|https)(?::\\\\/{2}[\\\\w]+)(?:[\\\\/|\\\\.]?)(?:[^\\\\s\\\"]*))\";\t// HTTP URL 1\n            String url = \"\";\n            Pattern p = Pattern.compile(re1 + re2, Pattern.CASE_INSENSITIVE | Pattern.DOTALL);\n            Matcher m = p.matcher(bookmarkString);\n            if (m.find()) {\n                url = m.group(1);\n            }\n            String name = favoritesFile.getName();\n            Long datetime = favoritesFile.getCrtime();\n            String Tempdate = datetime.toString();\n            datetime = Long.valueOf(Tempdate);\n            String domain = Util.extractDomain(url);\n\n            Collection<BlackboardAttribute> bbattributes = new ArrayList<BlackboardAttribute>();\n            //TODO revisit usage of deprecated constructor as per TSK-583\n            //bbattributes.add(new BlackboardAttribute(ATTRIBUTE_TYPE.TSK_LAST_ACCESSED.getTypeID(), \"RecentActivity\", \"Last Visited\", datetime));\n            bbattributes.add(new BlackboardAttribute(ATTRIBUTE_TYPE.TSK_DATETIME_ACCESSED.getTypeID(), \"RecentActivity\", datetime));\n            bbattributes.add(new BlackboardAttribute(ATTRIBUTE_TYPE.TSK_URL.getTypeID(), \"RecentActivity\", url));\n            //bbattributes.add(new BlackboardAttribute(ATTRIBUTE_TYPE.TSK_URL_DECODED.getTypeID(), \"RecentActivity\", EscapeUtil.decodeURL(url)));\n            bbattributes.add(new BlackboardAttribute(ATTRIBUTE_TYPE.TSK_NAME.getTypeID(), \"RecentActivity\", name));\n            bbattributes.add(new BlackboardAttribute(ATTRIBUTE_TYPE.TSK_PROG_NAME.getTypeID(), \"RecentActivity\", \"Internet Explorer\"));\n            bbattributes.add(new BlackboardAttribute(ATTRIBUTE_TYPE.TSK_DOMAIN.getTypeID(), \"RecentActivity\", domain));\n            this.addArtifact(ARTIFACT_TYPE.TSK_WEB_BOOKMARK, favoritesFile, bbattributes);\n\n            services.fireModuleDataEvent(new ModuleDataEvent(\"Recent Activity\", BlackboardArtifact.ARTIFACT_TYPE.TSK_WEB_BOOKMARK));\n        }\n    }","commit_id":"71759074fe5bf05a275dfda5a103d42060618227","url":"https://github.com/sleuthkit/autopsy"},{"original_method":"private void getCookie(Content dataSource, IngestDataSourceWorkerController controller) {\n\n        FileManager fileManager = currentCase.getServices().getFileManager();\n        List<AbstractFile> cookiesFiles = null;\n        try {\n            cookiesFiles = fileManager.findFiles(dataSource, \"cookies.sqlite\", \"Firefox\");\n        } catch (TskCoreException ex) {\n            logger.log(Level.WARNING, \"Error fetching cookies files for Firefox.\");\n        }\n        \n        if (cookiesFiles == null) {\n            return;\n        }\n\n        int j = 0;\n        for (AbstractFile cookiesFile : cookiesFiles) {\n            String fileName = cookiesFile.getName();\n            String temps = RAImageIngestModule.getRATempPath(currentCase, \"firefox\") + File.separator + fileName + j + \".db\";\n            int errors = 0;\n            try {\n                ContentUtils.writeToFile(cookiesFile, new File(temps));\n            } catch (IOException ex) {\n                logger.log(Level.SEVERE, \"Error writing the sqlite db for firefox cookie artifacts.{0}\", ex);\n                this.addErrorMessage(this.getName() + \": Error while trying to analyze file:\" + fileName);\n                continue;\n            }\n            File dbFile = new File(temps);\n            if (controller.isCancelled()) {\n                dbFile.delete();\n                break;\n            }\n            boolean checkColumn = Util.checkColumn(\"creationTime\", \"moz_cookies\", temps);\n            String query = null;\n            if (checkColumn) {\n                query = ffcookiequery;\n            } else {\n                query = ff3cookiequery;\n            }\n\n            List<HashMap<String, Object>> tempList = this.dbConnect(temps, query);\n            logger.log(Level.INFO, moduleName + \"- Now getting cookies from \" + temps + \" with \" + tempList.size() + \"artifacts identified.\");\n            for (HashMap<String, Object> result : tempList) {\n\n                Collection<BlackboardAttribute> bbattributes = new ArrayList<BlackboardAttribute>();\n                bbattributes.add(new BlackboardAttribute(ATTRIBUTE_TYPE.TSK_URL.getTypeID(), \"RecentActivity\", ((result.get(\"host\").toString() != null) ? result.get(\"host\").toString() : \"\")));\n                //bbattributes.add(new BlackboardAttribute(ATTRIBUTE_TYPE.TSK_URL_DECODED.getTypeID(), \"RecentActivity\", ((result.get(\"host\").toString() != null) ? EscapeUtil.decodeURL(result.get(\"host\").toString()) : \"\")));\n                //TODO Revisit usage of deprecated constructor as per TSK-583\n                //bbattributes.add(new BlackboardAttribute(ATTRIBUTE_TYPE.TSK_NAME.getTypeID(), \"RecentActivity\", \"Title\", ((result.get(\"name\").toString() != null) ? result.get(\"name\").toString() : \"\")));\n                //bbattributes.add(new BlackboardAttribute(ATTRIBUTE_TYPE.TSK_DATETIME.getTypeID(), \"RecentActivity\", \"Last Visited\", (Long.valueOf(result.get(\"lastAccessed\").toString()))));\n                bbattributes.add(new BlackboardAttribute(ATTRIBUTE_TYPE.TSK_NAME.getTypeID(), \"RecentActivity\", ((result.get(\"name\").toString() != null) ? result.get(\"name\").toString() : \"\")));\n                bbattributes.add(new BlackboardAttribute(ATTRIBUTE_TYPE.TSK_DATETIME.getTypeID(), \"RecentActivity\", (Long.valueOf(result.get(\"lastAccessed\").toString()))));\n                if (checkColumn == true) {\n                    //TODO Revisit usage of deprecated constructor as per TSK-583\n                    //bbattributes.add(new BlackboardAttribute(ATTRIBUTE_TYPE.TSK_DATETIME.getTypeID(), \"RecentActivity\", \"Created\", (Long.valueOf(result.get(\"creationTime\").toString()))));\n                    bbattributes.add(new BlackboardAttribute(ATTRIBUTE_TYPE.TSK_DATETIME.getTypeID(), \"RecentActivity\", (Long.valueOf(result.get(\"creationTime\").toString()))));\n                }\n                bbattributes.add(new BlackboardAttribute(ATTRIBUTE_TYPE.TSK_PROG_NAME.getTypeID(), \"RecentActivity\", \"FireFox\"));\n                bbattributes.add(new BlackboardAttribute(ATTRIBUTE_TYPE.TSK_DOMAIN.getTypeID(), \"RecentActivity\", ((result.get(\"host\").toString() != null) ? result.get(\"host\").toString() : \"\")));\n                bbattributes.add(new BlackboardAttribute(ATTRIBUTE_TYPE.TSK_VALUE.getTypeID(), \"RecentActivity\", ((result.get(\"value\").toString() != null) ? result.get(\"value\").toString() : \"\")));\n                String domain = Util.extractDomain(result.get(\"host\").toString());\n                domain = domain.replaceFirst(\"^\\\\.+(?!$)\", \"\");\n                bbattributes.add(new BlackboardAttribute(ATTRIBUTE_TYPE.TSK_DOMAIN.getTypeID(), \"RecentActivity\", domain));\n                this.addArtifact(ARTIFACT_TYPE.TSK_WEB_COOKIE, cookiesFile, bbattributes);\n\n            }\n            if (errors > 0) {\n                this.addErrorMessage(this.getName() + \": Error parsing \" + errors + \" Firefox web history artifacts.\");\n            }\n            ++j;\n            dbFile.delete();\n        }\n\n        services.fireModuleDataEvent(new ModuleDataEvent(\"Recent Activity\", BlackboardArtifact.ARTIFACT_TYPE.TSK_WEB_COOKIE));\n    }","id":16496,"modified_method":"private void getCookie(Content dataSource, IngestDataSourceWorkerController controller) {\n\n        FileManager fileManager = currentCase.getServices().getFileManager();\n        List<AbstractFile> cookiesFiles = null;\n        try {\n            cookiesFiles = fileManager.findFiles(dataSource, \"cookies.sqlite\", \"Firefox\");\n        } catch (TskCoreException ex) {\n            String msg = \"Error fetching cookies files for Firefox.\";\n            logger.log(Level.WARNING, msg);\n            this.addErrorMessage(this.getName() + \": \" + msg);\n            return;\n        }\n\n        int j = 0;\n        for (AbstractFile cookiesFile : cookiesFiles) {\n            String fileName = cookiesFile.getName();\n            String temps = RAImageIngestModule.getRATempPath(currentCase, \"firefox\") + File.separator + fileName + j + \".db\";\n            try {\n                ContentUtils.writeToFile(cookiesFile, new File(temps));\n            } catch (IOException ex) {\n                logger.log(Level.SEVERE, \"Error writing the sqlite db for firefox cookie artifacts.{0}\", ex);\n                this.addErrorMessage(this.getName() + \": Error while trying to analyze file:\" + fileName);\n                continue;\n            }\n            File dbFile = new File(temps);\n            if (controller.isCancelled()) {\n                dbFile.delete();\n                break;\n            }\n            boolean checkColumn = Util.checkColumn(\"creationTime\", \"moz_cookies\", temps);\n            String query = null;\n            if (checkColumn) {\n                query = ffcookiequery;\n            } else {\n                query = ff3cookiequery;\n            }\n\n            List<HashMap<String, Object>> tempList = this.dbConnect(temps, query);\n            logger.log(Level.INFO, moduleName + \"- Now getting cookies from \" + temps + \" with \" + tempList.size() + \"artifacts identified.\");\n            for (HashMap<String, Object> result : tempList) {\n\n                Collection<BlackboardAttribute> bbattributes = new ArrayList<BlackboardAttribute>();\n                bbattributes.add(new BlackboardAttribute(ATTRIBUTE_TYPE.TSK_URL.getTypeID(), \"RecentActivity\", ((result.get(\"host\").toString() != null) ? result.get(\"host\").toString() : \"\")));\n                //bbattributes.add(new BlackboardAttribute(ATTRIBUTE_TYPE.TSK_URL_DECODED.getTypeID(), \"RecentActivity\", ((result.get(\"host\").toString() != null) ? EscapeUtil.decodeURL(result.get(\"host\").toString()) : \"\")));\n                //TODO Revisit usage of deprecated constructor as per TSK-583\n                //bbattributes.add(new BlackboardAttribute(ATTRIBUTE_TYPE.TSK_NAME.getTypeID(), \"RecentActivity\", \"Title\", ((result.get(\"name\").toString() != null) ? result.get(\"name\").toString() : \"\")));\n                //bbattributes.add(new BlackboardAttribute(ATTRIBUTE_TYPE.TSK_DATETIME.getTypeID(), \"RecentActivity\", \"Last Visited\", (Long.valueOf(result.get(\"lastAccessed\").toString()))));\n                bbattributes.add(new BlackboardAttribute(ATTRIBUTE_TYPE.TSK_NAME.getTypeID(), \"RecentActivity\", ((result.get(\"name\").toString() != null) ? result.get(\"name\").toString() : \"\")));\n                bbattributes.add(new BlackboardAttribute(ATTRIBUTE_TYPE.TSK_DATETIME.getTypeID(), \"RecentActivity\", (Long.valueOf(result.get(\"lastAccessed\").toString()))));\n                if (checkColumn == true) {\n                    //TODO Revisit usage of deprecated constructor as per TSK-583\n                    //bbattributes.add(new BlackboardAttribute(ATTRIBUTE_TYPE.TSK_DATETIME.getTypeID(), \"RecentActivity\", \"Created\", (Long.valueOf(result.get(\"creationTime\").toString()))));\n                    bbattributes.add(new BlackboardAttribute(ATTRIBUTE_TYPE.TSK_DATETIME.getTypeID(), \"RecentActivity\", (Long.valueOf(result.get(\"creationTime\").toString()))));\n                }\n                bbattributes.add(new BlackboardAttribute(ATTRIBUTE_TYPE.TSK_PROG_NAME.getTypeID(), \"RecentActivity\", \"FireFox\"));\n                bbattributes.add(new BlackboardAttribute(ATTRIBUTE_TYPE.TSK_DOMAIN.getTypeID(), \"RecentActivity\", ((result.get(\"host\").toString() != null) ? result.get(\"host\").toString() : \"\")));\n                bbattributes.add(new BlackboardAttribute(ATTRIBUTE_TYPE.TSK_VALUE.getTypeID(), \"RecentActivity\", ((result.get(\"value\").toString() != null) ? result.get(\"value\").toString() : \"\")));\n                String domain = Util.extractDomain(result.get(\"host\").toString());\n                domain = domain.replaceFirst(\"^\\\\.+(?!$)\", \"\");\n                bbattributes.add(new BlackboardAttribute(ATTRIBUTE_TYPE.TSK_DOMAIN.getTypeID(), \"RecentActivity\", domain));\n                this.addArtifact(ARTIFACT_TYPE.TSK_WEB_COOKIE, cookiesFile, bbattributes);\n\n            }\n            ++j;\n            dbFile.delete();\n        }\n\n        services.fireModuleDataEvent(new ModuleDataEvent(\"Recent Activity\", BlackboardArtifact.ARTIFACT_TYPE.TSK_WEB_COOKIE));\n    }","commit_id":"71759074fe5bf05a275dfda5a103d42060618227","url":"https://github.com/sleuthkit/autopsy"},{"original_method":"private void getBookmark(Content dataSource, IngestDataSourceWorkerController controller) {\n\n        FileManager fileManager = currentCase.getServices().getFileManager();\n        List<AbstractFile> bookmarkFiles = null;\n        try {\n            bookmarkFiles = fileManager.findFiles(dataSource, \"places.sqlite\", \"Firefox\");\n        } catch (TskCoreException ex) {\n            logger.log(Level.WARNING, \"Error fetching bookmark files for Firefox.\");\n        }\n        \n        if (bookmarkFiles == null) {\n            return;\n        }\n\n        int j = 0;\n        for (AbstractFile bookmarkFile : bookmarkFiles) {\n            String fileName = bookmarkFile.getName();\n            String temps = RAImageIngestModule.getRATempPath(currentCase, \"firefox\") + File.separator + fileName + j + \".db\";\n            int errors = 0;\n            try {\n                ContentUtils.writeToFile(bookmarkFile, new File(temps));\n            } catch (IOException ex) {\n                logger.log(Level.SEVERE, \"Error writing the sqlite db for firefox bookmark artifacts.{0}\", ex);\n                this.addErrorMessage(this.getName() + \": Error while trying to analyze file:\" + fileName);\n                continue;\n            }\n            File dbFile = new File(temps);\n            if (controller.isCancelled()) {\n                dbFile.delete();\n                break;\n            }\n            List<HashMap<String, Object>> tempList = this.dbConnect(temps, ffbookmarkquery);\n            logger.log(Level.INFO, moduleName + \"- Now getting bookmarks from \" + temps + \" with \" + tempList.size() + \"artifacts identified.\");\n            for (HashMap<String, Object> result : tempList) {\n\n                Collection<BlackboardAttribute> bbattributes = new ArrayList<BlackboardAttribute>();\n                bbattributes.add(new BlackboardAttribute(ATTRIBUTE_TYPE.TSK_URL.getTypeID(), \"RecentActivity\", ((result.get(\"url\").toString() != null) ? result.get(\"url\").toString() : \"\")));\n                //bbattributes.add(new BlackboardAttribute(ATTRIBUTE_TYPE.TSK_URL_DECODED.getTypeID(), \"RecentActivity\", ((result.get(\"url\").toString() != null) ? EscapeUtil.decodeURL(result.get(\"url\").toString()) : \"\")));\n                bbattributes.add(new BlackboardAttribute(ATTRIBUTE_TYPE.TSK_NAME.getTypeID(), \"RecentActivity\", ((result.get(\"title\").toString() != null) ? result.get(\"title\").toString() : \"\")));\n                bbattributes.add(new BlackboardAttribute(ATTRIBUTE_TYPE.TSK_PROG_NAME.getTypeID(), \"RecentActivity\", \"FireFox\"));\n                bbattributes.add(new BlackboardAttribute(ATTRIBUTE_TYPE.TSK_DOMAIN.getTypeID(), \"RecentActivity\", (Util.extractDomain((result.get(\"url\").toString() != null) ? result.get(\"url\").toString() : \"\"))));\n                this.addArtifact(ARTIFACT_TYPE.TSK_WEB_BOOKMARK, bookmarkFile, bbattributes);\n\n            }\n            if (errors > 0) {\n                this.addErrorMessage(this.getName() + \": Error parsing \" + errors + \" Firefox web history artifacts.\");\n            }\n            ++j;\n            dbFile.delete();\n        }\n\n        services.fireModuleDataEvent(new ModuleDataEvent(\"Recent Activity\", BlackboardArtifact.ARTIFACT_TYPE.TSK_WEB_BOOKMARK));\n    }","id":16497,"modified_method":"private void getBookmark(Content dataSource, IngestDataSourceWorkerController controller) {\n\n        FileManager fileManager = currentCase.getServices().getFileManager();\n        List<AbstractFile> bookmarkFiles = null;\n        try {\n            bookmarkFiles = fileManager.findFiles(dataSource, \"places.sqlite\", \"Firefox\");\n        } catch (TskCoreException ex) {\n            String msg = \"Error fetching bookmark files for Firefox.\";\n            logger.log(Level.WARNING, msg);\n            this.addErrorMessage(this.getName() + \": \" + msg);\n            return;\n        }\n\n        int j = 0;\n        for (AbstractFile bookmarkFile : bookmarkFiles) {\n            String fileName = bookmarkFile.getName();\n            String temps = RAImageIngestModule.getRATempPath(currentCase, \"firefox\") + File.separator + fileName + j + \".db\";\n            try {\n                ContentUtils.writeToFile(bookmarkFile, new File(temps));\n            } catch (IOException ex) {\n                logger.log(Level.SEVERE, \"Error writing the sqlite db for firefox bookmark artifacts.{0}\", ex);\n                this.addErrorMessage(this.getName() + \": Error while trying to analyze file:\" + fileName);\n                continue;\n            }\n            File dbFile = new File(temps);\n            if (controller.isCancelled()) {\n                dbFile.delete();\n                break;\n            }\n            List<HashMap<String, Object>> tempList = this.dbConnect(temps, ffbookmarkquery);\n            logger.log(Level.INFO, moduleName + \"- Now getting bookmarks from \" + temps + \" with \" + tempList.size() + \"artifacts identified.\");\n            for (HashMap<String, Object> result : tempList) {\n\n                Collection<BlackboardAttribute> bbattributes = new ArrayList<BlackboardAttribute>();\n                bbattributes.add(new BlackboardAttribute(ATTRIBUTE_TYPE.TSK_URL.getTypeID(), \"RecentActivity\", ((result.get(\"url\").toString() != null) ? result.get(\"url\").toString() : \"\")));\n                //bbattributes.add(new BlackboardAttribute(ATTRIBUTE_TYPE.TSK_URL_DECODED.getTypeID(), \"RecentActivity\", ((result.get(\"url\").toString() != null) ? EscapeUtil.decodeURL(result.get(\"url\").toString()) : \"\")));\n                bbattributes.add(new BlackboardAttribute(ATTRIBUTE_TYPE.TSK_NAME.getTypeID(), \"RecentActivity\", ((result.get(\"title\").toString() != null) ? result.get(\"title\").toString() : \"\")));\n                bbattributes.add(new BlackboardAttribute(ATTRIBUTE_TYPE.TSK_PROG_NAME.getTypeID(), \"RecentActivity\", \"FireFox\"));\n                bbattributes.add(new BlackboardAttribute(ATTRIBUTE_TYPE.TSK_DOMAIN.getTypeID(), \"RecentActivity\", (Util.extractDomain((result.get(\"url\").toString() != null) ? result.get(\"url\").toString() : \"\"))));\n                this.addArtifact(ARTIFACT_TYPE.TSK_WEB_BOOKMARK, bookmarkFile, bbattributes);\n\n            }\n            ++j;\n            dbFile.delete();\n        }\n\n        services.fireModuleDataEvent(new ModuleDataEvent(\"Recent Activity\", BlackboardArtifact.ARTIFACT_TYPE.TSK_WEB_BOOKMARK));\n    }","commit_id":"71759074fe5bf05a275dfda5a103d42060618227","url":"https://github.com/sleuthkit/autopsy"},{"original_method":"private void getDownload(Content dataSource, IngestDataSourceWorkerController controller) {\n\n        FileManager fileManager = currentCase.getServices().getFileManager();\n        List<AbstractFile> downloadsFiles = null;\n        try {\n            downloadsFiles = fileManager.findFiles(dataSource, \"downloads.sqlite\", \"Firefox\");\n        } catch (TskCoreException ex) {\n            logger.log(Level.WARNING, \"Error fetching 'downloads' files for Firefox.\");\n        }\n\n        if (downloadsFiles == null) {\n            return;\n        }\n\n        int j = 0;\n        for (AbstractFile downloadsFile : downloadsFiles) {\n            String fileName = downloadsFile.getName();\n            String temps = RAImageIngestModule.getRATempPath(currentCase, \"firefox\") + File.separator + fileName + j + \".db\";\n            int errors = 0;\n            try {\n                ContentUtils.writeToFile(downloadsFile, new File(temps));\n            } catch (IOException ex) {\n                logger.log(Level.SEVERE, \"Error writing the sqlite db for firefox download artifacts.{0}\", ex);\n                this.addErrorMessage(this.getName() + \": Error while trying to analyze file:\" + fileName);\n                continue;\n            }\n            File dbFile = new File(temps);\n            if (controller.isCancelled()) {\n                dbFile.delete();\n                break;\n            }\n\n            List<HashMap<String, Object>> tempList = this.dbConnect(temps, ffdownloadquery);\n            logger.log(Level.INFO, moduleName + \"- Now getting downloads from \" + temps + \" with \" + tempList.size() + \"artifacts identified.\");\n            for (HashMap<String, Object> result : tempList) {\n                try {\n                    Collection<BlackboardAttribute> bbattributes = new ArrayList<BlackboardAttribute>();\n                    String urldecodedtarget = URLDecoder.decode(result.get(\"source\").toString().replaceAll(\"file:///\", \"\"), \"UTF-8\");\n                    bbattributes.add(new BlackboardAttribute(ATTRIBUTE_TYPE.TSK_URL.getTypeID(), \"RecentActivity\", ((result.get(\"source\").toString() != null) ? result.get(\"source\").toString() : \"\")));\n                    //bbattributes.add(new BlackboardAttribute(ATTRIBUTE_TYPE.TSK_URL_DECODED.getTypeID(), \"RecentActivity\", ((result.get(\"source\").toString() != null) ? EscapeUtil.decodeURL(result.get(\"source\").toString()) : \"\")));\n                    //TODO Revisit usage of deprecated constructor as per TSK-583\n                    //bbattributes.add(new BlackboardAttribute(ATTRIBUTE_TYPE.TSK_LAST_ACCESSED.getTypeID(), \"RecentActivity\", \"Last Visited\", (Long.valueOf(result.get(\"startTime\").toString()))));\n                    bbattributes.add(new BlackboardAttribute(ATTRIBUTE_TYPE.TSK_DATETIME_ACCESSED.getTypeID(), \"RecentActivity\", (Long.valueOf(result.get(\"startTime\").toString()))));\n                    bbattributes.add(new BlackboardAttribute(ATTRIBUTE_TYPE.TSK_PATH_ID.getTypeID(), \"RecentActivity\", Util.findID(dataSource, urldecodedtarget)));\n                    bbattributes.add(new BlackboardAttribute(ATTRIBUTE_TYPE.TSK_PATH.getTypeID(), \"RecentActivity\", ((result.get(\"target\").toString() != null) ? result.get(\"target\").toString() : \"\")));\n                    bbattributes.add(new BlackboardAttribute(ATTRIBUTE_TYPE.TSK_PROG_NAME.getTypeID(), \"RecentActivity\", \"FireFox\"));\n                    bbattributes.add(new BlackboardAttribute(ATTRIBUTE_TYPE.TSK_DOMAIN.getTypeID(), \"RecentActivity\", (Util.extractDomain((result.get(\"source\").toString() != null) ? result.get(\"source\").toString() : \"\"))));\n                    this.addArtifact(ARTIFACT_TYPE.TSK_WEB_DOWNLOAD, downloadsFile, bbattributes);\n                } catch (UnsupportedEncodingException ex) {\n                    logger.log(Level.SEVERE, \"Error decoding Firefox download URL in \" + temps, ex);\n                    errors++;\n                }\n            }\n            if (errors > 0) {\n                this.addErrorMessage(this.getName() + \": Error parsing \" + errors + \" Firefox web history artifacts.\");\n            }\n            j++;\n            dbFile.delete();\n            break;\n        }\n        \n        services.fireModuleDataEvent(new ModuleDataEvent(\"Recent Activity\", BlackboardArtifact.ARTIFACT_TYPE.TSK_WEB_DOWNLOAD));\n    }","id":16498,"modified_method":"private void getDownload(Content dataSource, IngestDataSourceWorkerController controller) {\n\n        FileManager fileManager = currentCase.getServices().getFileManager();\n        List<AbstractFile> downloadsFiles = null;\n        try {\n            downloadsFiles = fileManager.findFiles(dataSource, \"downloads.sqlite\", \"Firefox\");\n        } catch (TskCoreException ex) {\n            String msg = \"Error fetching 'downloads' files for Firefox.\";\n            logger.log(Level.WARNING, msg);\n            this.addErrorMessage(this.getName() + \": \" + msg);\n            return;\n        }\n\n        int j = 0;\n        for (AbstractFile downloadsFile : downloadsFiles) {\n            String fileName = downloadsFile.getName();\n            String temps = RAImageIngestModule.getRATempPath(currentCase, \"firefox\") + File.separator + fileName + j + \".db\";\n            int errors = 0;\n            try {\n                ContentUtils.writeToFile(downloadsFile, new File(temps));\n            } catch (IOException ex) {\n                logger.log(Level.SEVERE, \"Error writing the sqlite db for firefox download artifacts.{0}\", ex);\n                this.addErrorMessage(this.getName() + \": Error while trying to analyze file:\" + fileName);\n                continue;\n            }\n            File dbFile = new File(temps);\n            if (controller.isCancelled()) {\n                dbFile.delete();\n                break;\n            }\n\n            List<HashMap<String, Object>> tempList = this.dbConnect(temps, ffdownloadquery);\n            logger.log(Level.INFO, moduleName + \"- Now getting downloads from \" + temps + \" with \" + tempList.size() + \"artifacts identified.\");\n            for (HashMap<String, Object> result : tempList) {\n                try {\n                    Collection<BlackboardAttribute> bbattributes = new ArrayList<BlackboardAttribute>();\n                    String urldecodedtarget = URLDecoder.decode(result.get(\"source\").toString().replaceAll(\"file:///\", \"\"), \"UTF-8\");\n                    bbattributes.add(new BlackboardAttribute(ATTRIBUTE_TYPE.TSK_URL.getTypeID(), \"RecentActivity\", ((result.get(\"source\").toString() != null) ? result.get(\"source\").toString() : \"\")));\n                    //bbattributes.add(new BlackboardAttribute(ATTRIBUTE_TYPE.TSK_URL_DECODED.getTypeID(), \"RecentActivity\", ((result.get(\"source\").toString() != null) ? EscapeUtil.decodeURL(result.get(\"source\").toString()) : \"\")));\n                    //TODO Revisit usage of deprecated constructor as per TSK-583\n                    //bbattributes.add(new BlackboardAttribute(ATTRIBUTE_TYPE.TSK_LAST_ACCESSED.getTypeID(), \"RecentActivity\", \"Last Visited\", (Long.valueOf(result.get(\"startTime\").toString()))));\n                    bbattributes.add(new BlackboardAttribute(ATTRIBUTE_TYPE.TSK_DATETIME_ACCESSED.getTypeID(), \"RecentActivity\", (Long.valueOf(result.get(\"startTime\").toString()))));\n                    bbattributes.add(new BlackboardAttribute(ATTRIBUTE_TYPE.TSK_PATH_ID.getTypeID(), \"RecentActivity\", Util.findID(dataSource, urldecodedtarget)));\n                    bbattributes.add(new BlackboardAttribute(ATTRIBUTE_TYPE.TSK_PATH.getTypeID(), \"RecentActivity\", ((result.get(\"target\").toString() != null) ? result.get(\"target\").toString() : \"\")));\n                    bbattributes.add(new BlackboardAttribute(ATTRIBUTE_TYPE.TSK_PROG_NAME.getTypeID(), \"RecentActivity\", \"FireFox\"));\n                    bbattributes.add(new BlackboardAttribute(ATTRIBUTE_TYPE.TSK_DOMAIN.getTypeID(), \"RecentActivity\", (Util.extractDomain((result.get(\"source\").toString() != null) ? result.get(\"source\").toString() : \"\"))));\n                    this.addArtifact(ARTIFACT_TYPE.TSK_WEB_DOWNLOAD, downloadsFile, bbattributes);\n                } catch (UnsupportedEncodingException ex) {\n                    logger.log(Level.SEVERE, \"Error decoding Firefox download URL in \" + temps, ex);\n                    errors++;\n                }\n            }\n            if (errors > 0) {\n                this.addErrorMessage(this.getName() + \": Error parsing \" + errors + \" Firefox web history artifacts.\");\n            }\n            j++;\n            dbFile.delete();\n            break;\n        }\n        \n        services.fireModuleDataEvent(new ModuleDataEvent(\"Recent Activity\", BlackboardArtifact.ARTIFACT_TYPE.TSK_WEB_DOWNLOAD));\n    }","commit_id":"71759074fe5bf05a275dfda5a103d42060618227","url":"https://github.com/sleuthkit/autopsy"},{"original_method":"private void getHistory(Content dataSource, IngestDataSourceWorkerController controller) {\n        //Make these seperate, this is for history\n\n        //List<FsContent> FFSqlitedb = this.extractFiles(dataSource, \"select * from tsk_files where name LIKE '%places.sqlite%' and name NOT LIKE '%journal%' and parent_path LIKE '%Firefox%'\");\n        \n        FileManager fileManager = currentCase.getServices().getFileManager();\n        List<AbstractFile> historyFiles = null;\n        try {\n            historyFiles = fileManager.findFiles(dataSource, \"%places.sqlite%\", \"Firefox\");\n        } catch (TskCoreException ex) {\n            logger.log(Level.WARNING, \"Error fetching internet history files for Firefox.\");\n        }\n        \n        if (historyFiles == null) {\n            return;\n        }\n\n        int j = 0;\n        for (AbstractFile historyFile : historyFiles) {\n            String fileName = historyFile.getName();\n            String temps = RAImageIngestModule.getRATempPath(currentCase, \"firefox\") + File.separator + fileName + j + \".db\";\n            int errors = 0;\n            try {\n                ContentUtils.writeToFile(historyFile, new File(temps));\n            } catch (IOException ex) {\n                logger.log(Level.SEVERE, \"Error writing the sqlite db for firefox web history artifacts.{0}\", ex);\n                this.addErrorMessage(this.getName() + \": Error while trying to analyze file:\" + fileName);\n                continue;\n            }\n            File dbFile = new File(temps);\n            if (controller.isCancelled()) {\n                dbFile.delete();\n                break;\n            }\n            List<HashMap<String, Object>> tempList = this.dbConnect(temps, ffquery);\n            logger.log(Level.INFO, moduleName + \"- Now getting history from \" + temps + \" with \" + tempList.size() + \"artifacts identified.\");\n            for (HashMap<String, Object> result : tempList) {\n                Collection<BlackboardAttribute> bbattributes = new ArrayList<BlackboardAttribute>();\n                bbattributes.add(new BlackboardAttribute(ATTRIBUTE_TYPE.TSK_URL.getTypeID(), \"RecentActivity\", ((result.get(\"url\").toString() != null) ? result.get(\"url\").toString() : \"\")));\n                //bbattributes.add(new BlackboardAttribute(ATTRIBUTE_TYPE.TSK_URL_DECODED.getTypeID(), \"RecentActivity\", ((result.get(\"url\").toString() != null) ? EscapeUtil.decodeURL(result.get(\"url\").toString()) : \"\")));\n                //TODO Revisit usage of deprecated constructor as per TSK-583\n                //bbattributes.add(new BlackboardAttribute(ATTRIBUTE_TYPE.TSK_LAST_ACCESSED.getTypeID(), \"RecentActivity\", \"Last Visited\", (Long.valueOf(result.get(\"visit_date\").toString()))));\n                bbattributes.add(new BlackboardAttribute(ATTRIBUTE_TYPE.TSK_DATETIME_ACCESSED.getTypeID(), \"RecentActivity\", (Long.valueOf(result.get(\"visit_date\").toString()))));\n                bbattributes.add(new BlackboardAttribute(ATTRIBUTE_TYPE.TSK_REFERRER.getTypeID(), \"RecentActivity\", ((result.get(\"ref\").toString() != null) ? result.get(\"ref\").toString() : \"\")));\n                bbattributes.add(new BlackboardAttribute(ATTRIBUTE_TYPE.TSK_NAME.getTypeID(), \"RecentActivity\", ((result.get(\"title\").toString() != null) ? result.get(\"title\").toString() : \"\")));\n                bbattributes.add(new BlackboardAttribute(ATTRIBUTE_TYPE.TSK_PROG_NAME.getTypeID(), \"RecentActivity\", \"FireFox\"));\n                bbattributes.add(new BlackboardAttribute(ATTRIBUTE_TYPE.TSK_DOMAIN.getTypeID(), \"RecentActivity\", (Util.extractDomain((result.get(\"url\").toString() != null) ? result.get(\"url\").toString() : \"\"))));\n                this.addArtifact(ARTIFACT_TYPE.TSK_WEB_HISTORY, historyFile, bbattributes);\n\n            }\n            if (errors > 0) {\n                this.addErrorMessage(this.getName() + \": Error parsing \" + errors + \" Firefox web history artifacts.\");\n            }\n            ++j;\n            dbFile.delete();\n        }\n\n        services.fireModuleDataEvent(new ModuleDataEvent(\"Recent Activity\", BlackboardArtifact.ARTIFACT_TYPE.TSK_WEB_HISTORY));\n    }","id":16499,"modified_method":"private void getHistory(Content dataSource, IngestDataSourceWorkerController controller) {\n        //Make these seperate, this is for history\n\n        //List<FsContent> FFSqlitedb = this.extractFiles(dataSource, \"select * from tsk_files where name LIKE '%places.sqlite%' and name NOT LIKE '%journal%' and parent_path LIKE '%Firefox%'\");\n        \n        FileManager fileManager = currentCase.getServices().getFileManager();\n        List<AbstractFile> historyFiles = null;\n        try {\n            historyFiles = fileManager.findFiles(dataSource, \"%places.sqlite%\", \"Firefox\");\n        } catch (TskCoreException ex) {\n            String msg = \"Error fetching internet history files for Firefox.\";\n            logger.log(Level.WARNING, msg);\n            this.addErrorMessage(this.getName() + \": \" + msg);\n        }\n\n        int j = 0;\n        for (AbstractFile historyFile : historyFiles) {\n            String fileName = historyFile.getName();\n            String temps = RAImageIngestModule.getRATempPath(currentCase, \"firefox\") + File.separator + fileName + j + \".db\";\n            try {\n                ContentUtils.writeToFile(historyFile, new File(temps));\n            } catch (IOException ex) {\n                logger.log(Level.SEVERE, \"Error writing the sqlite db for firefox web history artifacts.{0}\", ex);\n                this.addErrorMessage(this.getName() + \": Error while trying to analyze file:\" + fileName);\n                continue;\n            }\n            File dbFile = new File(temps);\n            if (controller.isCancelled()) {\n                dbFile.delete();\n                break;\n            }\n            List<HashMap<String, Object>> tempList = this.dbConnect(temps, ffquery);\n            logger.log(Level.INFO, moduleName + \"- Now getting history from \" + temps + \" with \" + tempList.size() + \"artifacts identified.\");\n            for (HashMap<String, Object> result : tempList) {\n                Collection<BlackboardAttribute> bbattributes = new ArrayList<BlackboardAttribute>();\n                bbattributes.add(new BlackboardAttribute(ATTRIBUTE_TYPE.TSK_URL.getTypeID(), \"RecentActivity\", ((result.get(\"url\").toString() != null) ? result.get(\"url\").toString() : \"\")));\n                //bbattributes.add(new BlackboardAttribute(ATTRIBUTE_TYPE.TSK_URL_DECODED.getTypeID(), \"RecentActivity\", ((result.get(\"url\").toString() != null) ? EscapeUtil.decodeURL(result.get(\"url\").toString()) : \"\")));\n                //TODO Revisit usage of deprecated constructor as per TSK-583\n                //bbattributes.add(new BlackboardAttribute(ATTRIBUTE_TYPE.TSK_LAST_ACCESSED.getTypeID(), \"RecentActivity\", \"Last Visited\", (Long.valueOf(result.get(\"visit_date\").toString()))));\n                bbattributes.add(new BlackboardAttribute(ATTRIBUTE_TYPE.TSK_DATETIME_ACCESSED.getTypeID(), \"RecentActivity\", (Long.valueOf(result.get(\"visit_date\").toString()))));\n                bbattributes.add(new BlackboardAttribute(ATTRIBUTE_TYPE.TSK_REFERRER.getTypeID(), \"RecentActivity\", ((result.get(\"ref\").toString() != null) ? result.get(\"ref\").toString() : \"\")));\n                bbattributes.add(new BlackboardAttribute(ATTRIBUTE_TYPE.TSK_NAME.getTypeID(), \"RecentActivity\", ((result.get(\"title\").toString() != null) ? result.get(\"title\").toString() : \"\")));\n                bbattributes.add(new BlackboardAttribute(ATTRIBUTE_TYPE.TSK_PROG_NAME.getTypeID(), \"RecentActivity\", \"FireFox\"));\n                bbattributes.add(new BlackboardAttribute(ATTRIBUTE_TYPE.TSK_DOMAIN.getTypeID(), \"RecentActivity\", (Util.extractDomain((result.get(\"url\").toString() != null) ? result.get(\"url\").toString() : \"\"))));\n                this.addArtifact(ARTIFACT_TYPE.TSK_WEB_HISTORY, historyFile, bbattributes);\n\n            }\n            ++j;\n            dbFile.delete();\n        }\n\n        services.fireModuleDataEvent(new ModuleDataEvent(\"Recent Activity\", BlackboardArtifact.ARTIFACT_TYPE.TSK_WEB_HISTORY));\n    }","commit_id":"71759074fe5bf05a275dfda5a103d42060618227","url":"https://github.com/sleuthkit/autopsy"},{"original_method":"protected Node getIdentifyingNode(Node node) {\n            if (node instanceof Tree.Declaration) {\n                return ((Tree.Declaration) node).getIdentifier();\n            }\n            else if (node instanceof Tree.ModuleDescriptor) {\n                return ((Tree.ModuleDescriptor) node).getImportPath();\n            }\n            else if (node instanceof Tree.PackageDescriptor) {\n                return ((Tree.PackageDescriptor) node).getImportPath();\n            }\n            else if (node instanceof Tree.NamedArgument) {\n                return ((Tree.NamedArgument) node).getIdentifier();\n            }\n            else if (node instanceof Tree.StaticMemberOrTypeExpression) {\n                return ((Tree.StaticMemberOrTypeExpression) node).getIdentifier();\n            }\n            else if (node instanceof Tree.ExtendedTypeExpression) {\n                //TODO: whoah! this is really ugly!\n                return ((Tree.SimpleType) ((Tree.ExtendedTypeExpression) node).getChildren().get(0))\n                        .getIdentifier();\n            }\n            else if (node instanceof Tree.SimpleType) {\n                return ((Tree.SimpleType) node).getIdentifier();\n            }\n            else if (node instanceof Tree.ImportMemberOrType) {\n                return ((Tree.ImportMemberOrType) node).getIdentifier();\n            }\n            else {    \n                return node;\n            }\n        }","id":16500,"modified_method":"protected Node getIdentifyingNode(Node node) {\n            Node result = null;\n            if (node instanceof Tree.Declaration) {\n                result = ((Tree.Declaration) node).getIdentifier();\n            }\n            else if (node instanceof Tree.ModuleDescriptor) {\n                result = ((Tree.ModuleDescriptor) node).getImportPath();\n            }\n            else if (node instanceof Tree.PackageDescriptor) {\n                result = ((Tree.PackageDescriptor) node).getImportPath();\n            }\n            else if (node instanceof Tree.NamedArgument) {\n                result = ((Tree.NamedArgument) node).getIdentifier();\n            }\n            else if (node instanceof Tree.StaticMemberOrTypeExpression) {\n                result = ((Tree.StaticMemberOrTypeExpression) node).getIdentifier();\n            }\n            else if (node instanceof Tree.ExtendedTypeExpression) {\n                //TODO: whoah! this is really ugly!\n                result = ((Tree.SimpleType) ((Tree.ExtendedTypeExpression) node).getChildren().get(0))\n                        .getIdentifier();\n            }\n            else if (node instanceof Tree.SimpleType) {\n                result = ((Tree.SimpleType) node).getIdentifier();\n            }\n            else if (node instanceof Tree.ImportMemberOrType) {\n                result = ((Tree.ImportMemberOrType) node).getIdentifier();\n            }\n            else {\n                result = node;\n            }\n            if (result == null) {\n                result = node;\n            }\n            return result;\n        }","commit_id":"266e2e8ae2722c6a3a7935a5324b8fde7983dea0","url":"https://github.com/ceylon/ceylon-compiler"},{"original_method":"protected int getPosition(Node node) {\n            int pos;\n            if(node.getToken() != null)\n                pos = cpu.getLineMap().getStartPosition(node.getToken().getLine())\n                + node.getToken().getCharPositionInLine();\n            else\n                pos = -1;\n            log.useSource(cpu.getFileObject());\n            return pos;\n        }","id":16501,"modified_method":"protected int getPosition(Node node) {\n            int pos;\n            if(node != null && node.getToken() != null)\n                pos = cpu.getLineMap().getStartPosition(node.getToken().getLine())\n                + node.getToken().getCharPositionInLine();\n            else\n                pos = -1;\n            log.useSource(cpu.getFileObject());\n            return pos;\n        }","commit_id":"266e2e8ae2722c6a3a7935a5324b8fde7983dea0","url":"https://github.com/ceylon/ceylon-compiler"},{"original_method":"@Test\n  public void testSimpleDataset() throws Exception {\n    // Configuring Dataset types\n    DatasetManager manager = getDatasetManager();\n    String moduleName = \"inMemory\";\n    registerQuietly(manager, moduleName, InMemoryTableModule.class);\n\n    // Performing admin operations to create dataset instance\n    manager.addInstance(\"orderedTable\", \"my_table\", DatasetInstanceProperties.EMPTY);\n    DatasetAdmin admin = manager.getAdmin(\"my_table\", null);\n    Assert.assertNotNull(admin);\n    admin.create();\n\n    // Accessing dataset instance to perform data operations\n    OrderedTable table = manager.getDataset(\"my_table\", null);\n    Assert.assertNotNull(table);\n    table.put(Bytes.toBytes(\"key1\"), Bytes.toBytes(\"column1\"), Bytes.toBytes(\"value1\"));\n    Assert.assertEquals(\"value1\", Bytes.toString(table.get(Bytes.toBytes(\"key1\"), Bytes.toBytes(\"column1\"))));\n\n    // cleanup\n    manager.deleteInstance(\"my_table\");\n    manager.deleteModule(\"inMemory\");\n  }","id":16502,"modified_method":"@Test\n  public void testSimpleDataset() throws Exception {\n    // Configuring Dataset types\n    DatasetManager manager = getDatasetManager();\n    String moduleName = \"inMemory\";\n\n    manager.register(moduleName, InMemoryTableModule.class);\n\n    // Performing admin operations to create dataset instance\n    manager.addInstance(\"orderedTable\", \"my_table\", DatasetInstanceProperties.EMPTY);\n    DatasetAdmin admin = manager.getAdmin(\"my_table\", null);\n    Assert.assertNotNull(admin);\n    admin.create();\n\n    // Accessing dataset instance to perform data operations\n    OrderedTable table = manager.getDataset(\"my_table\", null);\n    Assert.assertNotNull(table);\n    table.put(Bytes.toBytes(\"key1\"), Bytes.toBytes(\"column1\"), Bytes.toBytes(\"value1\"));\n    Assert.assertEquals(\"value1\", Bytes.toString(table.get(Bytes.toBytes(\"key1\"), Bytes.toBytes(\"column1\"))));\n\n    // cleanup\n    manager.deleteInstance(\"my_table\");\n    manager.deleteModule(\"inMemory\");\n  }","commit_id":"20bda5becc7b155085fb777c102ef8954f12c675","url":"https://github.com/caskdata/cdap"},{"original_method":"@Test\n  public void testCompositeDataset() throws Exception {\n    // Configuring Dataset types\n    DatasetManager manager = getDatasetManager();\n    registerQuietly(manager, \"inMemory\", InMemoryTableModule.class);\n    registerQuietly(manager, \"keyValue\", KeyValueTableDefinition.KeyValueTableModule.class);\n\n    // Performing admin operations to create dataset instance\n    manager.addInstance(\"keyValueTable\", \"my_table\", DatasetInstanceProperties.EMPTY);\n    DatasetAdmin admin = manager.getAdmin(\"my_table\", null);\n    Assert.assertNotNull(admin);\n    admin.create();\n\n    // Accessing dataset instance to perform data operations\n    KeyValueTableDefinition.KeyValueTable table = manager.getDataset(\"my_table\", null);\n    Assert.assertNotNull(table);\n    table.put(\"key1\", \"value1\");\n    Assert.assertEquals(\"value1\", table.get(\"key1\"));\n    // cleanup\n    manager.deleteInstance(\"my_table\");\n    manager.deleteModule(\"keyValue\");\n    manager.deleteModule(\"inMemory\");\n  }","id":16503,"modified_method":"@Test\n  public void testCompositeDataset() throws Exception {\n    // Configuring Dataset types\n    DatasetManager manager = getDatasetManager();\n\n    manager.register(\"inMemory\", InMemoryTableModule.class);\n    manager.register(\"keyValue\", KeyValueTableDefinition.KeyValueTableModule.class);\n\n    // Performing admin operations to create dataset instance\n    manager.addInstance(\"keyValueTable\", \"my_table\", DatasetInstanceProperties.EMPTY);\n    DatasetAdmin admin = manager.getAdmin(\"my_table\", null);\n    Assert.assertNotNull(admin);\n    admin.create();\n\n    // Accessing dataset instance to perform data operations\n    KeyValueTableDefinition.KeyValueTable table = manager.getDataset(\"my_table\", null);\n    Assert.assertNotNull(table);\n    table.put(\"key1\", \"value1\");\n    Assert.assertEquals(\"value1\", table.get(\"key1\"));\n    // cleanup\n    manager.deleteInstance(\"my_table\");\n    manager.deleteModule(\"keyValue\");\n    manager.deleteModule(\"inMemory\");\n  }","commit_id":"20bda5becc7b155085fb777c102ef8954f12c675","url":"https://github.com/caskdata/cdap"},{"original_method":"@Override\n  public <T extends DatasetAdmin> T getAdmin(String datasetInstanceName, ClassLoader classLoader) throws IOException {\n    DatasetInstanceMeta instanceInfo = client.getInstance(namespace(datasetInstanceName));\n    if (instanceInfo == null) {\n      return null;\n    }\n    DatasetDefinition impl = getDatasetImplementation(instanceInfo.getType(), classLoader);\n\n    return (T) impl.getAdmin(instanceInfo.getSpec());\n  }","id":16504,"modified_method":"@Override\n  public <T extends DatasetAdmin> T getAdmin(String datasetInstanceName, ClassLoader classLoader)\n    throws DatasetManagementException, IOException {\n\n    DatasetInstanceMeta instanceInfo = client.getInstance(namespace(datasetInstanceName));\n    if (instanceInfo == null) {\n      return null;\n    }\n    DatasetDefinition impl = getDatasetDefinition(instanceInfo.getType(), classLoader);\n\n    return (T) impl.getAdmin(instanceInfo.getSpec());\n  }","commit_id":"20bda5becc7b155085fb777c102ef8954f12c675","url":"https://github.com/caskdata/cdap"},{"original_method":"@Override\n  public <T extends Dataset> T getDataset(String datasetInstanceName, ClassLoader classLoader) throws IOException {\n    DatasetInstanceMeta instanceInfo = client.getInstance(namespace(datasetInstanceName));\n    if (instanceInfo == null) {\n      return null;\n    }\n    DatasetDefinition impl = getDatasetImplementation(instanceInfo.getType(), classLoader);\n\n    return (T) impl.getDataset(instanceInfo.getSpec());\n  }","id":16505,"modified_method":"@Override\n  public <T extends Dataset> T getDataset(String datasetInstanceName, ClassLoader classLoader)\n    throws DatasetManagementException, IOException {\n\n    DatasetInstanceMeta instanceInfo = client.getInstance(namespace(datasetInstanceName));\n    if (instanceInfo == null) {\n      return null;\n    }\n    DatasetDefinition impl = getDatasetDefinition(instanceInfo.getType(), classLoader);\n\n    return (T) impl.getDataset(instanceInfo.getSpec());\n  }","commit_id":"20bda5becc7b155085fb777c102ef8954f12c675","url":"https://github.com/caskdata/cdap"},{"original_method":"private <T extends DatasetDefinition> T getDatasetImplementation(DatasetTypeMeta implementationInfo,\n                                                                   ClassLoader classLoader)\n    throws IOException {\n\n    List<DatasetModuleMeta> modulesToLoad = implementationInfo.getModules();\n    for (DatasetModuleMeta moduleMeta : modulesToLoad) {\n      if (!modulesCache.containsKey(moduleMeta.getName())) {\n        if (moduleMeta.getJarLocation() != null) {\n          // adding dataset module jar to classloader\n          classLoader = classLoader == null ?\n          new JarClassLoader(locationFactory.create(moduleMeta.getJarLocation())) :\n          new JarClassLoader(locationFactory.create(moduleMeta.getJarLocation()), classLoader);\n        }\n        DatasetModule module;\n        try {\n          Class<?> moduleClass = ClassLoaders.loadClass(moduleMeta.getClassName(), classLoader, this);\n          module = (DatasetModule) moduleClass.newInstance();\n        } catch (Exception e) {\n          throw Throwables.propagate(e);\n        }\n        modulesCache.put(moduleMeta.getName(), module);\n        module.register(registry);\n      }\n    }\n\n    return registry.get(implementationInfo.getName());\n  }","id":16506,"modified_method":"private <T extends DatasetDefinition> T getDatasetDefinition(DatasetTypeMeta implementationInfo,\n                                                               ClassLoader classLoader)\n    throws DatasetManagementException {\n\n    List<DatasetModuleMeta> modulesToLoad = implementationInfo.getModules();\n    for (DatasetModuleMeta moduleMeta : modulesToLoad) {\n      if (!modulesCache.containsKey(moduleMeta.getName())) {\n        if (moduleMeta.getJarLocation() != null) {\n          // adding dataset module jar to classloader\n          try {\n            classLoader = classLoader == null ?\n            new JarClassLoader(locationFactory.create(moduleMeta.getJarLocation())) :\n            new JarClassLoader(locationFactory.create(moduleMeta.getJarLocation()), classLoader);\n          } catch (IOException e) {\n            LOG.error(\"Was not able to init classloader for module {} while trying to load type {}\",\n                      moduleMeta, implementationInfo, e);\n            throw Throwables.propagate(e);\n          }\n        }\n        DatasetModule module;\n        try {\n          Class<?> moduleClass = ClassLoaders.loadClass(moduleMeta.getClassName(), classLoader, this);\n          module = (DatasetModule) moduleClass.newInstance();\n        } catch (Exception e) {\n          LOG.error(\"Was not able to load dataset module class {} while trying to load type {}\",\n                    moduleMeta.getClassName(), implementationInfo, e);\n          throw Throwables.propagate(e);\n        }\n        modulesCache.put(moduleMeta.getName(), module);\n        module.register(registry);\n      }\n    }\n\n    return registry.get(implementationInfo.getName());\n  }","commit_id":"20bda5becc7b155085fb777c102ef8954f12c675","url":"https://github.com/caskdata/cdap"},{"original_method":"public <T extends DatasetDefinition> T load(DatasetTypeMeta meta, DatasetDefinitionRegistry registry)\n    throws IOException {\n\n    ClassLoader classLoader = DatasetDefinitionLoader.class.getClassLoader();\n    List<DatasetModuleMeta> modulesToLoad = meta.getModules();\n    for (DatasetModuleMeta moduleMeta : modulesToLoad) {\n      // for default \"system\" modules it can be null, see getJarLocation() javadoc\n      if (moduleMeta.getJarLocation() != null) {\n        classLoader = new JarClassLoader(locationFactory.create(moduleMeta.getJarLocation()), classLoader);\n      }\n      DatasetModule module;\n      try {\n        Class<?> moduleClass = ClassLoaders.loadClass(moduleMeta.getClassName(), classLoader, this);\n        module = (DatasetModule) moduleClass.newInstance();\n      } catch (Exception e) {\n        throw Throwables.propagate(e);\n      }\n      module.register(registry);\n    }\n\n    return registry.get(meta.getName());\n  }","id":16507,"modified_method":"/**\n   * Loads {@link DatasetDefinition} using {@link DatasetTypeMeta} info. It will use given\n   * {@link DatasetDefinitionRegistry} to load all required modules and types. If registry is missing some of them,\n   * it will load respective jars and add them to the registry (thus, modifying the given registry).\n   * @param meta info of type to load\n   * @param registry registry to use for loading\n   * @param <T> type of the definition\n   * @return instance of {@link DatasetDefinition}\n   * @throws IOException\n   */\n  public <T extends DatasetDefinition> T load(DatasetTypeMeta meta, DatasetDefinitionRegistry registry)\n    throws IOException {\n\n    ClassLoader classLoader = DatasetDefinitionLoader.class.getClassLoader();\n    List<DatasetModuleMeta> modulesToLoad = meta.getModules();\n    for (DatasetModuleMeta moduleMeta : modulesToLoad) {\n      // for default \"system\" modules it can be null, see getJarLocation() javadoc\n      if (moduleMeta.getJarLocation() != null) {\n        classLoader = new JarClassLoader(locationFactory.create(moduleMeta.getJarLocation()), classLoader);\n      }\n      DatasetModule module;\n      try {\n        Class<?> moduleClass = ClassLoaders.loadClass(moduleMeta.getClassName(), classLoader, this);\n        module = (DatasetModule) moduleClass.newInstance();\n      } catch (Exception e) {\n        throw Throwables.propagate(e);\n      }\n      module.register(registry);\n    }\n\n    return registry.get(meta.getName());\n  }","commit_id":"20bda5becc7b155085fb777c102ef8954f12c675","url":"https://github.com/caskdata/cdap"},{"original_method":"public <T extends DatasetDefinition> T load(DatasetTypeMeta meta) throws IOException {\n    return load(meta, new InMemoryDatasetDefinitionRegistry());\n  }","id":16508,"modified_method":"/**\n   * Same as {@link #load(DatasetTypeMeta, DatasetDefinitionRegistry)} but uses empty registry to star with`.\n   */\n  public <T extends DatasetDefinition> T load(DatasetTypeMeta meta) throws IOException {\n    return load(meta, new InMemoryDatasetDefinitionRegistry());\n  }","commit_id":"20bda5becc7b155085fb777c102ef8954f12c675","url":"https://github.com/caskdata/cdap"},{"original_method":"/**\n   * Deletes dataset instance\n   * @param instanceName name of the instance to delete\n   * @return true if deletion succeeded, false otherwise\n   */\n  public boolean delete(final String instanceName) {\n    return getTxExecutor().executeUnchecked(new Callable<Boolean>() {\n      @Override\n      public Boolean call() throws Exception {\n        synchronized (mdsGuard) {\n          return mds.delete(instanceName);\n        }\n      }\n    });\n  }","id":16509,"modified_method":"/**\n   * Deletes dataset instance\n   * @param instanceName name of the instance to delete\n   * @return true if deletion succeeded, false otherwise\n   */\n  public boolean delete(final String instanceName) {\n    return getTxExecutor().executeUnchecked(new Callable<Boolean>() {\n      @Override\n      public Boolean call() throws Exception {\n        return mds.delete(instanceName);\n      }\n    });\n  }","commit_id":"20bda5becc7b155085fb777c102ef8954f12c675","url":"https://github.com/caskdata/cdap"},{"original_method":"/**\n   * @param instanceName name of the dataset instance\n   * @return dataset instance's {@link DatasetInstanceSpec}\n   */\n  public DatasetInstanceSpec get(final String instanceName) {\n    return getTxExecutor().executeUnchecked(new Callable<DatasetInstanceSpec>() {\n      @Override\n      public DatasetInstanceSpec call() throws Exception {\n        synchronized (mdsGuard) {\n          return mds.get(instanceName);\n        }\n      }\n    });\n  }","id":16510,"modified_method":"/**\n   * @param instanceName name of the dataset instance\n   * @return dataset instance's {@link DatasetInstanceSpec}\n   */\n  public DatasetInstanceSpec get(final String instanceName) {\n    return getTxExecutor().executeUnchecked(new Callable<DatasetInstanceSpec>() {\n      @Override\n      public DatasetInstanceSpec call() throws Exception {\n        return mds.get(instanceName);\n      }\n    });\n  }","commit_id":"20bda5becc7b155085fb777c102ef8954f12c675","url":"https://github.com/caskdata/cdap"},{"original_method":"/**\n   * @return collection of {@link DatasetInstanceSpec} of all dataset instances\n   */\n  public Collection<DatasetInstanceSpec> getAll() {\n    return getTxExecutor().executeUnchecked(new Callable<Collection<DatasetInstanceSpec>>() {\n      @Override\n      public Collection<DatasetInstanceSpec> call() throws Exception {\n        synchronized (mdsGuard) {\n          return mds.getAll();\n        }\n      }\n    });\n  }","id":16511,"modified_method":"/**\n   * @return collection of {@link DatasetInstanceSpec} of all dataset instances\n   */\n  public Collection<DatasetInstanceSpec> getAll() {\n    return getTxExecutor().executeUnchecked(new Callable<Collection<DatasetInstanceSpec>>() {\n      @Override\n      public Collection<DatasetInstanceSpec> call() throws Exception {\n        return mds.getAll();\n      }\n    });\n  }","commit_id":"20bda5becc7b155085fb777c102ef8954f12c675","url":"https://github.com/caskdata/cdap"},{"original_method":"/**\n   * Adds dataset instance metadata\n   * @param spec {@link DatasetInstanceSpec} of the dataset instance to be added\n   */\n  public void add(final DatasetInstanceSpec spec) {\n    getTxExecutor().executeUnchecked(new TransactionExecutor.Subroutine() {\n      @Override\n      public void apply() throws Exception {\n        synchronized (mdsGuard) {\n          mds.write(spec);\n        }\n      }\n    });\n  }","id":16512,"modified_method":"/**\n   * Adds dataset instance metadata\n   * @param spec {@link DatasetInstanceSpec} of the dataset instance to be added\n   */\n  public void add(final DatasetInstanceSpec spec) {\n    getTxExecutor().executeUnchecked(new TransactionExecutor.Subroutine() {\n      @Override\n      public void apply() throws Exception {\n        mds.write(spec);\n      }\n    });\n  }","commit_id":"20bda5becc7b155085fb777c102ef8954f12c675","url":"https://github.com/caskdata/cdap"},{"original_method":"/**\n   * Ctor\n   * @param mdsDatasetManager dataset manager to be used to access the metadata store\n   * @param txSystemClient tx client to be used to operate on the metadata store\n   */\n  public DatasetInstanceManager(DatasetManager mdsDatasetManager,\n                                TransactionSystemClient txSystemClient,\n                                CConfiguration conf) {\n    this.mdsDatasetManager =\n      new NamespacedDatasetManager(mdsDatasetManager,\n                                   new ReactorDatasetNamespace(conf, DataSetAccessor.Namespace.SYSTEM));\n    this.txClient = txSystemClient;\n  }","id":16513,"modified_method":"/**\n   * Ctor\n   * @param mdsDatasetManager dataset manager to be used to access the metadata store\n   * @param txSystemClient tx client to be used to operate on the metadata store\n   */\n  public DatasetInstanceManager(DatasetManager mdsDatasetManager,\n                                TransactionSystemClient txSystemClient) {\n    this.mdsDatasetManager = mdsDatasetManager;\n    this.txClient = txSystemClient;\n  }","commit_id":"20bda5becc7b155085fb777c102ef8954f12c675","url":"https://github.com/caskdata/cdap"},{"original_method":"@Override\n  protected void startUp() throws Exception {\n    OrderedTable table = getMDSTable(mdsDatasetManager, \"datasets.instance\");\n    this.txAware = (TransactionAware) table;\n    this.mds = new DatasetInstanceMDS(table);\n  }","id":16514,"modified_method":"@Override\n  protected void startUp() throws Exception {\n    // \"null\" for class being in system classpath, for mds it is always true\n    OrderedTable table = DatasetsUtil.getOrCreateDataset(mdsDatasetManager, \"datasets.instance\", \"orderedTable\",\n                                                         DatasetInstanceProperties.EMPTY, null);\n\n    this.txAware = (TransactionAware) table;\n    this.mds = new DatasetInstanceMDS(table);\n  }","commit_id":"20bda5becc7b155085fb777c102ef8954f12c675","url":"https://github.com/caskdata/cdap"},{"original_method":"public void addInstance(String datasetInstanceName, String datasetType, DatasetInstanceProperties props)\n    throws InstanceConflictException, IOException {\n\n    HttpResponse response = doPost(\"instances/\" + datasetInstanceName,\n                                   GSON.toJson(props),\n                                   ImmutableMap.of(\"type-name\", datasetType));\n    if (HttpResponseStatus.CONFLICT.getCode() == response.responseCode) {\n      throw new InstanceConflictException(\"Failed to add instance \" + datasetInstanceName +\n                                            \", reason: \" + getDetails(response));\n    }\n    if (HttpResponseStatus.OK.getCode() != response.responseCode) {\n      throw new IOException(\"Failed to add instance \" + datasetInstanceName + \", reason: \" + getDetails(response));\n    }\n  }","id":16515,"modified_method":"public void addInstance(String datasetInstanceName, String datasetType, DatasetInstanceProperties props)\n    throws DatasetManagementException {\n\n    HttpResponse response = doPost(\"instances/\" + datasetInstanceName,\n                                   GSON.toJson(props),\n                                   ImmutableMap.of(\"type-name\", datasetType));\n    if (HttpResponseStatus.CONFLICT.getCode() == response.responseCode) {\n      throw new InstanceConflictException(String.format(\"Failed to add instance %s due to conflict, details: %s\",\n                                                        datasetInstanceName, getDetails(response)));\n    }\n    if (HttpResponseStatus.OK.getCode() != response.responseCode) {\n      throw new DatasetManagementException(String.format(\"Failed to add instance %s, details: %s\",\n                                                         datasetInstanceName, getDetails(response)));\n    }\n  }","commit_id":"20bda5becc7b155085fb777c102ef8954f12c675","url":"https://github.com/caskdata/cdap"},{"original_method":"public DatasetInstanceMeta getInstance(String instanceName) throws IOException {\n    HttpResponse response = doGet(\"instances/\" + instanceName);\n    if (HttpResponseStatus.NOT_FOUND.getCode() == response.responseCode) {\n      return null;\n    }\n    return GSON.fromJson(new String(response.responseBody, Charsets.UTF_8), DatasetInstanceMeta.class);\n  }","id":16516,"modified_method":"public DatasetInstanceMeta getInstance(String instanceName) throws DatasetManagementException {\n    HttpResponse response = doGet(\"instances/\" + instanceName);\n    if (HttpResponseStatus.NOT_FOUND.getCode() == response.responseCode) {\n      return null;\n    }\n    if (HttpResponseStatus.OK.getCode() != response.responseCode) {\n      throw new DatasetManagementException(String.format(\"Cannot retrieve dataset instance %s info, details: %s\",\n                                                         instanceName, getDetails(response)));\n    }\n\n    return GSON.fromJson(new String(response.responseBody, Charsets.UTF_8), DatasetInstanceMeta.class);\n  }","commit_id":"20bda5becc7b155085fb777c102ef8954f12c675","url":"https://github.com/caskdata/cdap"},{"original_method":"public void addModule(String moduleName, String className, Location jarLocation)\n    throws ModuleConflictException, IOException {\n    HttpResponse response = doPost(\"modules/\" + moduleName,\n                                   jarLocation,\n                                   ImmutableMap.of(\"class-name\", className));\n\n    if (HttpResponseStatus.CONFLICT.getCode() == response.responseCode) {\n      throw new ModuleConflictException(\"Failed to add module \" + moduleName + \", reason: \" + getDetails(response));\n    }\n    if (HttpResponseStatus.OK.getCode() != response.responseCode) {\n      throw new IOException(\"Failed to add module \" + moduleName + \", reason: \" + getDetails(response));\n    }\n  }","id":16517,"modified_method":"public void addModule(String moduleName, String className, Location jarLocation)\n    throws DatasetManagementException {\n\n    InputStream is;\n    try {\n      is = jarLocation.getInputStream();\n    } catch (IOException e) {\n      throw new DatasetManagementException(String.format(\"Failed to read jar of module %s at %s\",\n                                                         moduleName, jarLocation));\n    }\n    HttpResponse response;\n    try {\n      response = doRequest(\"modules/\" + moduleName,\n                       \"POST\",\n                       ImmutableMap.of(\"class-name\", className),\n                       null, is);\n    } finally {\n      Closeables.closeQuietly(is);\n    }\n\n    if (HttpResponseStatus.CONFLICT.getCode() == response.responseCode) {\n      throw new ModuleConflictException(String.format(\"Failed to add module %s due to conflict, details: %s\",\n                                                      moduleName, getDetails(response)));\n    }\n    if (HttpResponseStatus.OK.getCode() != response.responseCode) {\n      throw new DatasetManagementException(String.format(\"Failed to add module %s, details: %s\",\n                                                      moduleName, getDetails(response)));\n    }\n  }","commit_id":"20bda5becc7b155085fb777c102ef8954f12c675","url":"https://github.com/caskdata/cdap"},{"original_method":"public void deleteModule(String moduleName) throws ModuleConflictException, IOException {\n    HttpResponse response = doDelete(\"modules/\" + moduleName);\n\n    if (HttpResponseStatus.CONFLICT.getCode() == response.responseCode) {\n      throw new ModuleConflictException(\"Failed to delete module \" + moduleName +\n                                          \", reason: \" + getDetails(response));\n    }\n    if (HttpResponseStatus.OK.getCode() != response.responseCode) {\n      throw new IOException(\"Failed to delete module \" + moduleName + \", reason: \" + getDetails(response));\n    }\n  }","id":16518,"modified_method":"public void deleteModule(String moduleName) throws DatasetManagementException {\n    HttpResponse response = doDelete(\"modules/\" + moduleName);\n\n    if (HttpResponseStatus.CONFLICT.getCode() == response.responseCode) {\n      throw new ModuleConflictException(String.format(\"Failed to delete module %s due to conflict, details: %s\",\n                                                      moduleName, getDetails(response)));\n    }\n    if (HttpResponseStatus.OK.getCode() != response.responseCode) {\n      throw new DatasetManagementException(String.format(\"Failed to delete module %s, details: %s\",\n                                                         moduleName, getDetails(response)));\n    }\n  }","commit_id":"20bda5becc7b155085fb777c102ef8954f12c675","url":"https://github.com/caskdata/cdap"},{"original_method":"public DatasetTypeMeta getType(String typeName) throws IOException {\n    HttpResponse response = doGet(\"types/\" + typeName);\n    if (HttpResponseStatus.NOT_FOUND.getCode() == response.responseCode) {\n      return null;\n    }\n    return GSON.fromJson(new String(response.responseBody, Charsets.UTF_8), DatasetTypeMeta.class);\n  }","id":16519,"modified_method":"public DatasetTypeMeta getType(String typeName) throws DatasetManagementException {\n    HttpResponse response = doGet(\"types/\" + typeName);\n    if (HttpResponseStatus.NOT_FOUND.getCode() == response.responseCode) {\n      return null;\n    }\n    if (HttpResponseStatus.OK.getCode() != response.responseCode) {\n      throw new DatasetManagementException(String.format(\"Cannot retrieve dataset type %s info, details: %s\",\n                                                         typeName, getDetails(response)));\n    }\n    return GSON.fromJson(new String(response.responseBody, Charsets.UTF_8), DatasetTypeMeta.class);\n  }","commit_id":"20bda5becc7b155085fb777c102ef8954f12c675","url":"https://github.com/caskdata/cdap"},{"original_method":"public void deleteInstance(String datasetInstanceName) throws InstanceConflictException, IOException {\n    HttpResponse response = doDelete(\"instances/\" + datasetInstanceName);\n    if (HttpResponseStatus.CONFLICT.getCode() == response.responseCode) {\n      throw new InstanceConflictException(\"Failed to delete instance \" + datasetInstanceName +\n                                            \", reason: \" + getDetails(response));\n    }\n    if (HttpResponseStatus.OK.getCode() != response.responseCode) {\n      throw new IOException(\"Failed to delete instance \" + datasetInstanceName + \", reason: \" + getDetails(response));\n    }\n  }","id":16520,"modified_method":"public void deleteInstance(String datasetInstanceName) throws DatasetManagementException {\n    HttpResponse response = doDelete(\"instances/\" + datasetInstanceName);\n    if (HttpResponseStatus.CONFLICT.getCode() == response.responseCode) {\n      throw new InstanceConflictException(String.format(\"Failed to delete instance %s due to conflict, details: %s\",\n                                                        datasetInstanceName, getDetails(response)));\n    }\n    if (HttpResponseStatus.OK.getCode() != response.responseCode) {\n      throw new DatasetManagementException(String.format(\"Failed to delete instance %s, details: %s\",\n                                                         datasetInstanceName, getDetails(response)));\n    }\n  }","commit_id":"20bda5becc7b155085fb777c102ef8954f12c675","url":"https://github.com/caskdata/cdap"},{"original_method":"private DatasetManagerServiceClient.HttpResponse doRequest(String resource, String requestMethod,\n                                                             @Nullable Map<String, String> headers,\n                                                             @Nullable String body,\n                                                             @Nullable InputStream bodySrc) throws IOException {\n    Preconditions.checkArgument(!(body != null && bodySrc != null), \"only one of body and bodySrc can be used as body\");\n\n    URL url = new URL(resolve(resource));\n    HttpURLConnection conn = (HttpURLConnection) url.openConnection();\n    conn.setRequestMethod(requestMethod);\n\n    if (headers != null) {\n      for (Map.Entry<String, String> header : headers.entrySet()) {\n        conn.setRequestProperty(header.getKey(), header.getValue());\n      }\n    }\n\n    conn.setDoInput(true);\n\n    if (body != null || bodySrc != null) {\n      conn.setDoOutput(true);\n    }\n\n    conn.connect();\n    try {\n      if (body != null || bodySrc != null) {\n        OutputStream os = conn.getOutputStream();\n        try {\n          if (body != null) {\n            os.write(body.getBytes(Charsets.UTF_8));\n          } else {\n            ByteStreams.copy(bodySrc, os);\n          }\n        } finally {\n          os.close();\n        }\n      }\n      return getResponse(conn);\n    } finally {\n      conn.disconnect();\n    }\n  }","id":16521,"modified_method":"private DatasetManagerServiceClient.HttpResponse doRequest(String resource, String requestMethod,\n                                                             @Nullable Map<String, String> headers,\n                                                             @Nullable String body,\n                                                             @Nullable InputStream bodySrc)\n    throws DatasetManagementException {\n\n    Preconditions.checkArgument(!(body != null && bodySrc != null), \"only one of body and bodySrc can be used as body\");\n\n    String resolvedUrl = resolve(resource);\n    try {\n      URL url = new URL(resolvedUrl);\n      HttpURLConnection conn = (HttpURLConnection) url.openConnection();\n      conn.setRequestMethod(requestMethod);\n\n      if (headers != null) {\n        for (Map.Entry<String, String> header : headers.entrySet()) {\n          conn.setRequestProperty(header.getKey(), header.getValue());\n        }\n      }\n\n      conn.setDoInput(true);\n\n      if (body != null || bodySrc != null) {\n        conn.setDoOutput(true);\n      }\n\n      conn.connect();\n      try {\n        if (body != null || bodySrc != null) {\n          OutputStream os = conn.getOutputStream();\n          try {\n            if (body != null) {\n              os.write(body.getBytes(Charsets.UTF_8));\n            } else {\n              ByteStreams.copy(bodySrc, os);\n            }\n          } finally {\n            os.close();\n          }\n        }\n        byte[] responseBody = null;\n        if (conn.getDoInput()) {\n          InputStream is = conn.getInputStream();\n          try {\n            responseBody = ByteStreams.toByteArray(is);\n          } finally {\n            is.close();\n          }\n        }\n        return new HttpResponse(conn.getResponseCode(), conn.getResponseMessage(), responseBody);\n\n      } finally {\n        conn.disconnect();\n      }\n    } catch (IOException e) {\n      throw new DatasetManagementException(\n        String.format(\"Error during talking to Dataset Service at %s while doing %s with headers %s and body %s\",\n                      resolvedUrl, requestMethod,\n                      headers == null ? \"null\" : Joiner.on(\",\").withKeyValueSeparator(\"=\").join(headers),\n                      body == null ? bodySrc : body), e);\n    }\n  }","commit_id":"20bda5becc7b155085fb777c102ef8954f12c675","url":"https://github.com/caskdata/cdap"},{"original_method":"/**\n   * Get dataset type information\n   * @param typeName name of the type to get info for\n   * @return instance of {@link com.continuuity.data2.datafabric.dataset.type.DatasetTypeMeta} or {@code null} if type\n   *         does NOT exist\n   */\n  @Nullable\n  public DatasetTypeMeta getTypeInfo(final String typeName) {\n    return getTxExecutor().executeUnchecked(new Callable<DatasetTypeMeta>() {\n      @Override\n      public DatasetTypeMeta call() throws Exception {\n        synchronized (mdsGuard) {\n          return mds.getType(typeName);\n        }\n      }\n    });\n  }","id":16522,"modified_method":"/**\n   * Get dataset type information\n   * @param typeName name of the type to get info for\n   * @return instance of {@link com.continuuity.data2.datafabric.dataset.type.DatasetTypeMeta} or {@code null} if type\n   *         does NOT exist\n   */\n  @Nullable\n  public DatasetTypeMeta getTypeInfo(final String typeName) {\n    return getTxExecutor().executeUnchecked(new Callable<DatasetTypeMeta>() {\n      @Override\n      public DatasetTypeMeta call() throws Exception {\n        return mds.getType(typeName);\n      }\n    });\n  }","commit_id":"20bda5becc7b155085fb777c102ef8954f12c675","url":"https://github.com/caskdata/cdap"},{"original_method":"/**\n   * @param datasetTypeName name of the type\n   * @return instance of {@link DatasetDefinition} of the given type or {@code null} if one doesn't exist\n   */\n  @Nullable\n  public DatasetDefinition getType(final String datasetTypeName) {\n    return getTxExecutor().executeUnchecked(new Callable<DatasetDefinition>() {\n      @Override\n      public DatasetDefinition call() throws Exception {\n        DatasetTypeMeta type = null;\n        synchronized (mdsGuard) {\n          type = mds.getType(datasetTypeName);\n        }\n        if (type == null) {\n          return null;\n        }\n        return new DatasetDefinitionLoader(locationFactory).load(type);\n      }\n    });\n  }","id":16523,"modified_method":"/**\n   * @param datasetTypeName name of the type\n   * @return instance of {@link DatasetDefinition} of the given type or {@code null} if one doesn't exist\n   */\n  @Nullable\n  public DatasetDefinition getType(final String datasetTypeName) {\n    return getTxExecutor().executeUnchecked(new Callable<DatasetDefinition>() {\n      @Override\n      public DatasetDefinition call() throws Exception {\n        DatasetTypeMeta type = null;\n        type = mds.getType(datasetTypeName);\n        if (type == null) {\n          return null;\n        }\n        return new DatasetDefinitionLoader(locationFactory).load(type);\n      }\n    });\n  }","commit_id":"20bda5becc7b155085fb777c102ef8954f12c675","url":"https://github.com/caskdata/cdap"},{"original_method":"/**\n   * @param name of the module to return info for\n   * @return dataset module info or {@code null} if module with given name does NOT exist\n   */\n  @Nullable\n  public DatasetModuleMeta getModule(final String name) {\n    return getTxExecutor().executeUnchecked(new Callable<DatasetModuleMeta>() {\n      @Override\n      public DatasetModuleMeta call() throws Exception {\n        synchronized (mdsGuard) {\n          return mds.getModule(name);\n        }\n      }\n    });\n  }","id":16524,"modified_method":"/**\n   * @param name of the module to return info for\n   * @return dataset module info or {@code null} if module with given name does NOT exist\n   */\n  @Nullable\n  public DatasetModuleMeta getModule(final String name) {\n    return getTxExecutor().executeUnchecked(new Callable<DatasetModuleMeta>() {\n      @Override\n      public DatasetModuleMeta call() throws Exception {\n        return mds.getModule(name);\n      }\n    });\n  }","commit_id":"20bda5becc7b155085fb777c102ef8954f12c675","url":"https://github.com/caskdata/cdap"},{"original_method":"/**\n   * @return list of dataset modules information\n   */\n  public Collection<DatasetModuleMeta> getModules() {\n    return getTxExecutor().executeUnchecked(new Callable<Collection<DatasetModuleMeta>>() {\n      @Override\n      public Collection<DatasetModuleMeta> call() throws Exception {\n        synchronized (mdsGuard) {\n          return mds.getModules();\n        }\n      }\n    });\n  }","id":16525,"modified_method":"/**\n   * @return list of dataset modules information\n   */\n  public Collection<DatasetModuleMeta> getModules() {\n    return getTxExecutor().executeUnchecked(new Callable<Collection<DatasetModuleMeta>>() {\n      @Override\n      public Collection<DatasetModuleMeta> call() throws Exception {\n        return mds.getModules();\n      }\n    });\n  }","commit_id":"20bda5becc7b155085fb777c102ef8954f12c675","url":"https://github.com/caskdata/cdap"},{"original_method":"/**\n   * @return collection of types available in the system\n   */\n  public Collection<DatasetTypeMeta> getTypes() {\n    return getTxExecutor().executeUnchecked(new Callable<Collection<DatasetTypeMeta>>() {\n      @Override\n      public Collection<DatasetTypeMeta> call() throws Exception {\n        synchronized (mdsGuard) {\n          return mds.getTypes();\n        }\n      }\n    });\n  }","id":16526,"modified_method":"/**\n   * @return collection of types available in the system\n   */\n  public Collection<DatasetTypeMeta> getTypes() {\n    return getTxExecutor().executeUnchecked(new Callable<Collection<DatasetTypeMeta>>() {\n      @Override\n      public Collection<DatasetTypeMeta> call() throws Exception {\n        return mds.getTypes();\n      }\n    });\n  }","commit_id":"20bda5becc7b155085fb777c102ef8954f12c675","url":"https://github.com/caskdata/cdap"},{"original_method":"/**\n   * Add datasets module\n   * @param name module name\n   * @param className module class\n   * @param jarLocation location of the module jar\n   */\n  public void addModule(final String name, final String className, final Location jarLocation)\n    throws DatasetModuleConflictException {\n\n    LOG.info(\"adding module, name: {}, className: {}, jarLocation: {}\",\n             name, className, jarLocation == null ? \"[local]\" : jarLocation.toURI());\n\n    try {\n      getTxExecutor().execute(new TransactionExecutor.Subroutine() {\n        @Override\n        public void apply() throws DatasetModuleConflictException {\n          synchronized (mdsGuard) {\n            DatasetModuleMeta existing = mds.getModule(name);\n            if (existing != null) {\n              String msg = String.format(\"cannot add module %s, module with the same name already exists: %s\",\n                                         name, existing);\n              LOG.warn(msg);\n              throw new DatasetModuleConflictException(msg);\n            }\n\n            ClassLoader cl;\n            DatasetModule module;\n            try {\n              // NOTE: we assume all classes needed to load dataset module class are available in the jar or otherwise\n              //       are system classes\n              // NOTE: if jarLocation is null, we assume that this is a system module, ie. always present in classpath\n              cl = jarLocation == null ? this.getClass().getClassLoader() : new JarClassLoader(jarLocation);\n              @SuppressWarnings(\"unchecked\")\n              Class<DatasetModule> moduleClass = (Class<DatasetModule>) ClassLoaders.loadClass(className, cl, this);\n              module = moduleClass.newInstance();\n            } catch (Exception e) {\n              throw Throwables.propagate(e);\n            }\n\n            DependencyTrackingRegistry reg = new DependencyTrackingRegistry(cl);\n            module.register(reg);\n\n            List<String> moduleDependencies = Lists.newArrayList();\n            for (String usedType : reg.getUsedTypes()) {\n              DatasetModuleMeta usedModule = mds.getModuleByType(usedType);\n              // adding all used types and the module itself, in this very order to keep the order of loading modules\n              // for instantiating a type\n              moduleDependencies.addAll(usedModule.getUsesModules());\n              moduleDependencies.add(usedModule.getName());\n              // also adding this module as a dependent for all modules it uses\n              usedModule.addUsedByModule(name);\n              mds.write(usedModule);\n            }\n\n            DatasetModuleMeta moduleMeta = new DatasetModuleMeta(name, className,\n                                                                 jarLocation == null ? null : jarLocation.toURI(),\n                                                                 reg.getTypes(), moduleDependencies);\n            mds.write(moduleMeta);\n          }\n        }\n      });\n    } catch (TransactionFailureException e) {\n      if (e.getCause() != null && e.getCause() instanceof DatasetModuleConflictException) {\n        throw (DatasetModuleConflictException) e.getCause();\n      }\n      throw Throwables.propagate(e);\n    }\n  }","id":16527,"modified_method":"/**\n   * Add datasets module\n   * @param name module name\n   * @param className module class\n   * @param jarLocation location of the module jar\n   */\n  public void addModule(final String name, final String className, final Location jarLocation)\n    throws DatasetModuleConflictException {\n\n    LOG.info(\"adding module, name: {}, className: {}, jarLocation: {}\",\n             name, className, jarLocation == null ? \"[local]\" : jarLocation.toURI());\n\n    try {\n      getTxExecutor().execute(new TransactionExecutor.Subroutine() {\n        @Override\n        public void apply() throws DatasetModuleConflictException {\n          DatasetModuleMeta existing = mds.getModule(name);\n          if (existing != null) {\n            String msg = String.format(\"cannot add module %s, module with the same name already exists: %s\",\n                                       name, existing);\n            LOG.warn(msg);\n            throw new DatasetModuleConflictException(msg);\n          }\n\n          ClassLoader cl;\n          DatasetModule module;\n          try {\n            // NOTE: we assume all classes needed to load dataset module class are available in the jar or otherwise\n            //       are system classes\n            // NOTE: if jarLocation is null, we assume that this is a system module, ie. always present in classpath\n            cl = jarLocation == null ? this.getClass().getClassLoader() : new JarClassLoader(jarLocation);\n            @SuppressWarnings(\"unchecked\")\n            Class<DatasetModule> moduleClass = (Class<DatasetModule>) ClassLoaders.loadClass(className, cl, this);\n            module = moduleClass.newInstance();\n          } catch (Exception e) {\n            throw Throwables.propagate(e);\n          }\n\n          DependencyTrackingRegistry reg = new DependencyTrackingRegistry(cl);\n          module.register(reg);\n\n          List<String> moduleDependencies = Lists.newArrayList();\n          for (String usedType : reg.getUsedTypes()) {\n            DatasetModuleMeta usedModule = mds.getModuleByType(usedType);\n            // adding all used types and the module itself, in this very order to keep the order of loading modules\n            // for instantiating a type\n            moduleDependencies.addAll(usedModule.getUsesModules());\n            moduleDependencies.add(usedModule.getName());\n            // also adding this module as a dependent for all modules it uses\n            usedModule.addUsedByModule(name);\n            mds.write(usedModule);\n          }\n\n          DatasetModuleMeta moduleMeta = new DatasetModuleMeta(name, className,\n                                                               jarLocation == null ? null : jarLocation.toURI(),\n                                                               reg.getTypes(), moduleDependencies);\n          mds.write(moduleMeta);\n        }\n      });\n    } catch (TransactionFailureException e) {\n      if (e.getCause() != null && e.getCause() instanceof DatasetModuleConflictException) {\n        throw (DatasetModuleConflictException) e.getCause();\n      }\n      throw Throwables.propagate(e);\n    }\n  }","commit_id":"20bda5becc7b155085fb777c102ef8954f12c675","url":"https://github.com/caskdata/cdap"},{"original_method":"/**\n   * Deletes specified dataset module\n   * @param name name of dataset module to delete\n   * @return true if deleted successfully, false if module didn't exist: nothing to delete\n   * @throws DatasetModuleConflictException when there are other modules depend on the specified one, in which case\n   *         deletion does NOT happen\n   */\n  public boolean deleteModule(final String name) throws DatasetModuleConflictException {\n    LOG.info(\"Deleting module {}\", name);\n    try {\n      return getTxExecutor().execute(new Callable<Boolean>() {\n        @Override\n        public Boolean call() throws DatasetModuleConflictException {\n          synchronized (mdsGuard) {\n            DatasetModuleMeta module = mds.getModule(name);\n\n            if (module == null) {\n              return false;\n            }\n\n            // cannot delete when there's module that uses it\n            if (module.getUsedByModules().size() > 0) {\n              String msg =\n                String.format(\"Cannot delete module %s: other modules depend on it. Delete them first\", module);\n              throw new DatasetModuleConflictException(msg);\n            }\n\n            // remove it from \"usedBy\" from other modules\n            for (String usedModuleName : module.getUsesModules()) {\n              DatasetModuleMeta usedModule = mds.getModule(usedModuleName);\n              usedModule.removeUsedByModule(name);\n              mds.write(usedModule);\n            }\n\n            mds.deleteModule(name);\n          }\n\n          return true;\n        }\n      });\n    } catch (TransactionFailureException e) {\n      if (e.getCause() != null && e.getCause() instanceof DatasetModuleConflictException) {\n        throw (DatasetModuleConflictException) e.getCause();\n      }\n      throw Throwables.propagate(e);\n    }\n  }","id":16528,"modified_method":"/**\n   * Deletes specified dataset module\n   * @param name name of dataset module to delete\n   * @return true if deleted successfully, false if module didn't exist: nothing to delete\n   * @throws DatasetModuleConflictException when there are other modules depend on the specified one, in which case\n   *         deletion does NOT happen\n   */\n  public boolean deleteModule(final String name) throws DatasetModuleConflictException {\n    LOG.info(\"Deleting module {}\", name);\n    try {\n      return getTxExecutor().execute(new Callable<Boolean>() {\n        @Override\n        public Boolean call() throws DatasetModuleConflictException {\n          DatasetModuleMeta module = mds.getModule(name);\n\n          if (module == null) {\n            return false;\n          }\n\n          // cannot delete when there's module that uses it\n          if (module.getUsedByModules().size() > 0) {\n            String msg =\n              String.format(\"Cannot delete module %s: other modules depend on it. Delete them first\", module);\n            throw new DatasetModuleConflictException(msg);\n          }\n\n          // remove it from \"usedBy\" from other modules\n          for (String usedModuleName : module.getUsesModules()) {\n            DatasetModuleMeta usedModule = mds.getModule(usedModuleName);\n            usedModule.removeUsedByModule(name);\n            mds.write(usedModule);\n          }\n\n          mds.deleteModule(name);\n\n          return true;\n        }\n      });\n    } catch (TransactionFailureException e) {\n      if (e.getCause() != null && e.getCause() instanceof DatasetModuleConflictException) {\n        throw (DatasetModuleConflictException) e.getCause();\n      }\n      throw Throwables.propagate(e);\n    }\n  }","commit_id":"20bda5becc7b155085fb777c102ef8954f12c675","url":"https://github.com/caskdata/cdap"},{"original_method":"/**\n   * Ctor\n   * @param mdsDatasetManager dataset manager to be used to access the metadata store\n   * @param txSystemClient tx client to be used to operate on the metadata store\n   */\n  public DatasetTypeManager(DatasetManager mdsDatasetManager,\n                            TransactionSystemClient txSystemClient,\n                            LocationFactory locationFactory,\n                            CConfiguration conf) {\n    this.mdsDatasetManager =\n      new NamespacedDatasetManager(mdsDatasetManager,\n                                   new ReactorDatasetNamespace(conf, DataSetAccessor.Namespace.SYSTEM));\n    this.txClient = txSystemClient;\n    this.locationFactory = locationFactory;\n  }","id":16529,"modified_method":"/**\n   * Ctor\n   * @param mdsDatasetManager dataset manager to be used to access the metadata store\n   * @param txSystemClient tx client to be used to operate on the metadata store\n   */\n  public DatasetTypeManager(DatasetManager mdsDatasetManager,\n                            TransactionSystemClient txSystemClient,\n                            LocationFactory locationFactory) {\n    this.mdsDatasetManager = mdsDatasetManager;\n    this.txClient = txSystemClient;\n    this.locationFactory = locationFactory;\n  }","commit_id":"20bda5becc7b155085fb777c102ef8954f12c675","url":"https://github.com/caskdata/cdap"},{"original_method":"@Override\n  protected void startUp() throws Exception {\n    OrderedTable table = getMDSTable(mdsDatasetManager, \"datasets.type\");\n    this.txAware = (TransactionAware) table;\n    this.mds = new DatasetTypeMDS(table);\n  }","id":16530,"modified_method":"@Override\n  protected void startUp() throws Exception {\n    // \"null\" for class being in system classpath, for mds it is always true\n    OrderedTable table = DatasetsUtil.getOrCreateDataset(mdsDatasetManager, \"datasets.type\", \"orderedTable\",\n                                                         DatasetInstanceProperties.EMPTY, null);\n    this.txAware = (TransactionAware) table;\n    this.mds = new DatasetTypeMDS(table);\n  }","commit_id":"20bda5becc7b155085fb777c102ef8954f12c675","url":"https://github.com/caskdata/cdap"},{"original_method":"/**\n   * demoAPI demonstrates other ways of calling the parser with\n   * already tokenized text, or in some cases, raw text that needs to\n   * be tokenized as a single sentence.  Output is handled with a\n   * TreePrint object.  Note that the options used when creating the\n   * TreePrint can determine what results to print out.  Once again,\n   * one can capture the output by passing a PrintWriter to\n   * TreePrint.printTree.\n   */\n  public static void demoAPI(LexicalizedParser lp) {\n    // This option shows parsing a list of correctly tokenized words\n    String[] sent = { \"This\", \"is\", \"an\", \"easy\", \"sentence\", \".\" };\n    List<CoreLabel> rawWords = Sentence.toCoreLabelList(sent);\n    Tree parse = lp.apply(rawWords);\n    parse.pennPrint();\n    System.out.println();\n\n    // This option shows loading and using an explicit tokenizer\n    String sent2 = \"This is another sentence.\";\n    TokenizerFactory<CoreLabel> tokenizerFactory =\n        PTBTokenizer.factory(new CoreLabelTokenFactory(), \"\");\n    Tokenizer<CoreLabel> tok =\n        tokenizerFactory.getTokenizer(new StringReader(sent2));\n    List<CoreLabel> rawWords2 = tok.tokenize();\n    parse = lp.apply(rawWords2);\n\n    TreebankLanguagePack tlp = new PennTreebankLanguagePack();\n    GrammaticalStructureFactory gsf = tlp.grammaticalStructureFactory();\n    GrammaticalStructure gs = gsf.newGrammaticalStructure(parse);\n    List<TypedDependency> tdl = gs.typedDependenciesCCprocessed();\n    System.out.println(tdl);\n    System.out.println();\n\n    // You can also use a TreePrint object to print trees and dependencies\n    TreePrint tp = new TreePrint(\"penn,typedDependenciesCollapsed\");\n    tp.printTree(parse);\n  }","id":16531,"modified_method":"/**\n   * demoAPI demonstrates other ways of calling the parser with\n   * already tokenized text, or in some cases, raw text that needs to\n   * be tokenized as a single sentence.  Output is handled with a\n   * TreePrint object.  Note that the options used when creating the\n   * TreePrint can determine what results to print out.  Once again,\n   * one can capture the output by passing a PrintWriter to\n   * TreePrint.printTree.\n   */\n  public static void demoAPI(LexicalizedParser lp) {\n    // This option shows parsing a list of correctly tokenized words\n    String[] sent = { \"This\", \"is\", \"an\", \"easy\", \"sentence\", \".\" };\n    List<CoreLabel> rawWords = Sentence.toCoreLabelList(sent);\n    Tree parse = lp.apply(rawWords);\n    parse.pennPrint();\n    System.out.println();\n\n    // This option shows loading and using an explicit tokenizer\n    String sent2 = \"This is another sentence.\";\n    TokenizerFactory<CoreLabel> tokenizerFactory =\n      PTBTokenizer.factory(new CoreLabelTokenFactory(), \"\");\n    List<CoreLabel> rawWords2 =\n      tokenizerFactory.getTokenizer(new StringReader(sent2)).tokenize();\n    parse = lp.apply(rawWords2);\n\n    TreebankLanguagePack tlp = new PennTreebankLanguagePack();\n    GrammaticalStructureFactory gsf = tlp.grammaticalStructureFactory();\n    GrammaticalStructure gs = gsf.newGrammaticalStructure(parse);\n    List<TypedDependency> tdl = gs.typedDependenciesCCprocessed();\n    System.out.println(tdl);\n    System.out.println();\n\n    TreePrint tp = new TreePrint(\"penn,typedDependenciesCollapsed\");\n    tp.printTree(parse);\n  }","commit_id":"e9a58f80dac6815e1e7be8d5bc232e2cd976219a","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"public static void train(SentimentModel model, String modelPath, List<Tree> trainingTrees, List<Tree> devTrees) {\n    Timing timing = new Timing();\n    long maxTrainTimeMillis = model.op.trainOptions.maxTrainTimeSeconds * 1000;\n    int debugCycle = 0;\n    double bestAccuracy = 0.0;\n\n    // train using AdaGrad (seemed to work best during the dvparser project)\n    double[] sumGradSquare = new double[model.totalParamSize()];\n    Arrays.fill(sumGradSquare, model.op.trainOptions.initialAdagradWeight);\n    \n    int numBatches = trainingTrees.size() / model.op.trainOptions.batchSize + 1;\n    System.err.println(\"Training on \" + trainingTrees.size() + \" trees in \" + numBatches + \" batches\");\n    System.err.println(\"Times through each training batch: \" + model.op.trainOptions.epochs);\n    for (int epoch = 0; epoch < model.op.trainOptions.epochs; ++epoch) {\n      System.err.println(\"======================================\");\n      System.err.println(\"Starting epoch \" + epoch);\n      if (epoch > 0 && model.op.trainOptions.adagradResetFrequency > 0 && \n          (epoch % model.op.trainOptions.adagradResetFrequency == 0)) {\n        System.err.println(\"Resetting adagrad weights to \" + model.op.trainOptions.initialAdagradWeight);\n        Arrays.fill(sumGradSquare, model.op.trainOptions.initialAdagradWeight);\n      }\n\n      List<Tree> shuffledSentences = Generics.newArrayList(trainingTrees);\n      Collections.shuffle(shuffledSentences, model.rand);\n      for (int batch = 0; batch < numBatches; ++batch) {\n        System.err.println(\"======================================\");\n        System.err.println(\"Epoch \" + epoch + \" batch \" + batch);\n      \n        // Each batch will be of the specified batch size, except the\n        // last batch will include any leftover trees at the end of\n        // the list\n        int startTree = batch * model.op.trainOptions.batchSize;\n        int endTree = (batch + 1) * model.op.trainOptions.batchSize;\n        if (endTree + model.op.trainOptions.batchSize > shuffledSentences.size()) {\n          endTree = shuffledSentences.size();\n        }\n        \n        executeOneTrainingBatch(model, shuffledSentences.subList(startTree, endTree), sumGradSquare);\n\n        long totalElapsed = timing.report();\n        System.err.println(\"Finished epoch \" + epoch + \" batch \" + batch + \"; total training time \" + totalElapsed + \" ms\");\n\n        if (maxTrainTimeMillis > 0 && totalElapsed > maxTrainTimeMillis) {\n          // no need to debug output, we're done now\n          break;\n        }\n\n        if (epoch > 0 && epoch % model.op.trainOptions.debugOutputEpochs == 0) {\n\n          Evaluate eval = new Evaluate(model);\n          eval.eval(devTrees);\n          eval.printSummary();\n          double score = eval.exactNodeAccuracy() * 100.0;\n\n          // output an intermediate model\n          if (modelPath != null) {\n            String tempPath = modelPath;\n            if (modelPath.endsWith(\".ser.gz\")) {\n              tempPath = modelPath.substring(0, modelPath.length() - 7) + \"-\" + FILENAME.format(debugCycle) + \"-\" + NF.format(score) + \".ser.gz\";\n            } else if (modelPath.endsWith(\".gz\")) {\n              tempPath = modelPath.substring(0, modelPath.length() - 3) + \"-\" + FILENAME.format(debugCycle) + \"-\" + NF.format(score) + \".gz\";\n            } else {\n              tempPath = modelPath.substring(0, modelPath.length() - 3) + \"-\" + FILENAME.format(debugCycle) + \"-\" + NF.format(score);\n            }\n            model.saveSerialized(tempPath);\n          }\n\n          ++debugCycle;\n        }\n      }\n      long totalElapsed = timing.report();\n      \n      if (maxTrainTimeMillis > 0 && totalElapsed > maxTrainTimeMillis) {\n        // no need to debug output, we're done now\n        System.err.println(\"Max training time exceeded, exiting\");\n        break;\n      }\n    }    \n  }","id":16532,"modified_method":"public static void train(SentimentModel model, String modelPath, List<Tree> trainingTrees, List<Tree> devTrees) {\n    Timing timing = new Timing();\n    long maxTrainTimeMillis = model.op.trainOptions.maxTrainTimeSeconds * 1000;\n    int debugCycle = 0;\n    double bestAccuracy = 0.0;\n\n    // train using AdaGrad (seemed to work best during the dvparser project)\n    double[] sumGradSquare = new double[model.totalParamSize()];\n    Arrays.fill(sumGradSquare, model.op.trainOptions.initialAdagradWeight);\n    \n    int numBatches = trainingTrees.size() / model.op.trainOptions.batchSize + 1;\n    System.err.println(\"Training on \" + trainingTrees.size() + \" trees in \" + numBatches + \" batches\");\n    System.err.println(\"Times through each training batch: \" + model.op.trainOptions.epochs);\n    for (int epoch = 0; epoch < model.op.trainOptions.epochs; ++epoch) {\n      System.err.println(\"======================================\");\n      System.err.println(\"Starting epoch \" + epoch);\n      if (epoch > 0 && model.op.trainOptions.adagradResetFrequency > 0 && \n          (epoch % model.op.trainOptions.adagradResetFrequency == 0)) {\n        System.err.println(\"Resetting adagrad weights to \" + model.op.trainOptions.initialAdagradWeight);\n        Arrays.fill(sumGradSquare, model.op.trainOptions.initialAdagradWeight);\n      }\n\n      List<Tree> shuffledSentences = Generics.newArrayList(trainingTrees);\n      Collections.shuffle(shuffledSentences, model.rand);\n      for (int batch = 0; batch < numBatches; ++batch) {\n        System.err.println(\"======================================\");\n        System.err.println(\"Epoch \" + epoch + \" batch \" + batch);\n      \n        // Each batch will be of the specified batch size, except the\n        // last batch will include any leftover trees at the end of\n        // the list\n        int startTree = batch * model.op.trainOptions.batchSize;\n        int endTree = (batch + 1) * model.op.trainOptions.batchSize;\n        if (endTree + model.op.trainOptions.batchSize > shuffledSentences.size()) {\n          endTree = shuffledSentences.size();\n        }\n        \n        executeOneTrainingBatch(model, shuffledSentences.subList(startTree, endTree), sumGradSquare);\n\n        long totalElapsed = timing.report();\n        System.err.println(\"Finished epoch \" + epoch + \" batch \" + batch + \"; total training time \" + totalElapsed + \" ms\");\n\n        if (maxTrainTimeMillis > 0 && totalElapsed > maxTrainTimeMillis) {\n          // no need to debug output, we're done now\n          break;\n        }\n\n        if (epoch > 0 && epoch % model.op.trainOptions.debugOutputEpochs == 0) {\n\n          double score = 0.0;\n          if (devTrees != null) {\n            Evaluate eval = new Evaluate(model);\n            eval.eval(devTrees);\n            eval.printSummary();\n            score = eval.exactNodeAccuracy() * 100.0;\n          }\n\n          // output an intermediate model\n          if (modelPath != null) {\n            String tempPath = modelPath;\n            if (modelPath.endsWith(\".ser.gz\")) {\n              tempPath = modelPath.substring(0, modelPath.length() - 7) + \"-\" + FILENAME.format(debugCycle) + \"-\" + NF.format(score) + \".ser.gz\";\n            } else if (modelPath.endsWith(\".gz\")) {\n              tempPath = modelPath.substring(0, modelPath.length() - 3) + \"-\" + FILENAME.format(debugCycle) + \"-\" + NF.format(score) + \".gz\";\n            } else {\n              tempPath = modelPath.substring(0, modelPath.length() - 3) + \"-\" + FILENAME.format(debugCycle) + \"-\" + NF.format(score);\n            }\n            model.saveSerialized(tempPath);\n          }\n\n          ++debugCycle;\n        }\n      }\n      long totalElapsed = timing.report();\n      \n      if (maxTrainTimeMillis > 0 && totalElapsed > maxTrainTimeMillis) {\n        // no need to debug output, we're done now\n        System.err.println(\"Max training time exceeded, exiting\");\n        break;\n      }\n    }    \n  }","commit_id":"e9a58f80dac6815e1e7be8d5bc232e2cd976219a","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"public static void main(String[] args) {\n    RNNOptions op = new RNNOptions();\n\n    String trainPath = \"sentimentTreesDebug.txt\";\n    String devPath = null;\n\n    boolean runGradientCheck = false;\n    boolean runTraining = false;\n\n    boolean filterNeutral = false;\n\n    String modelPath = null;\n\n    for (int argIndex = 0; argIndex < args.length; ) {\n      if (args[argIndex].equalsIgnoreCase(\"-train\")) {\n        runTraining = true;\n        argIndex++;\n      } else if (args[argIndex].equalsIgnoreCase(\"-gradientcheck\")) {\n        runGradientCheck = true;\n        argIndex++;\n      } else if (args[argIndex].equalsIgnoreCase(\"-trainpath\")) {\n        trainPath = args[argIndex + 1];\n        argIndex += 2;\n      } else if (args[argIndex].equalsIgnoreCase(\"-devpath\")) {\n        devPath = args[argIndex + 1];\n        argIndex += 2;\n      } else if (args[argIndex].equalsIgnoreCase(\"-model\")) {\n        modelPath = args[argIndex + 1];\n        argIndex += 2;\n      } else if (args[argIndex].equalsIgnoreCase(\"-filterNeutral\")) {\n        filterNeutral = true;\n        argIndex++;\n      } else {\n        int newArgIndex = op.setOption(args, argIndex);\n        if (newArgIndex == argIndex) {\n          throw new IllegalArgumentException(\"Unknown argument \" + args[argIndex]);\n        }\n        argIndex = newArgIndex;\n      }\n    }\n\n    // read in the trees\n    List<Tree> trainingTrees = SentimentUtils.readTreesWithGoldLabels(trainPath);\n    System.err.println(\"Read in \" + trainingTrees.size() + \" training trees\");\n    List<Tree> devTrees = SentimentUtils.readTreesWithGoldLabels(devPath);\n    System.err.println(\"Read in \" + devTrees.size() + \" dev trees\");\n\n    if (filterNeutral) {\n      Filter<Tree> neutralFilter = new Filter<Tree>() {\n        public boolean accept(Tree tree) {\n          int gold = RNNCoreAnnotations.getGoldClass(tree);\n          return gold != 2;\n        }\n      };\n      trainingTrees = CollectionUtils.filterAsList(trainingTrees, neutralFilter);\n      devTrees = CollectionUtils.filterAsList(devTrees, neutralFilter);\n      System.err.println(\"Filtered training trees: \" + trainingTrees.size());\n      System.err.println(\"Filtered dev trees: \" + devTrees.size());\n    }\n\n    // TODO: binarize the trees, then collapse the unary chains.\n    // Collapsed unary chains always have the label of the top node in\n    // the chain\n    // Note: the sentiment training data already has this done.\n    // However, when we handle trees given to us from the Stanford Parser,\n    // we will have to perform this step\n\n    // build an unitialized SentimentModel from the binary productions\n    System.err.println(\"Sentiment model options:\\n\" + op);\n    SentimentModel model = new SentimentModel(op, trainingTrees);\n\n    // TODO: need to handle unk rules somehow... at test time the tree\n    // structures might have something that we never saw at training\n    // time.  for example, we could put a threshold on all of the\n    // rules at training time and anything that doesn't meet that\n    // threshold goes into the unk.  perhaps we could also use some\n    // component of the accepted training rules to build up the \"unk\"\n    // parameter in case there are no rules that don't meet the\n    // threshold\n    \n    if (runGradientCheck) {\n      runGradientCheck(model, trainingTrees);\n    }\n\n    if (runTraining) {\n      train(model, modelPath, trainingTrees, devTrees);\n      model.saveSerialized(modelPath);\n    }\n  }","id":16533,"modified_method":"public static void main(String[] args) {\n    RNNOptions op = new RNNOptions();\n\n    String trainPath = \"sentimentTreesDebug.txt\";\n    String devPath = null;\n\n    boolean runGradientCheck = false;\n    boolean runTraining = false;\n\n    boolean filterNeutral = false;\n\n    String modelPath = null;\n\n    for (int argIndex = 0; argIndex < args.length; ) {\n      if (args[argIndex].equalsIgnoreCase(\"-train\")) {\n        runTraining = true;\n        argIndex++;\n      } else if (args[argIndex].equalsIgnoreCase(\"-gradientcheck\")) {\n        runGradientCheck = true;\n        argIndex++;\n      } else if (args[argIndex].equalsIgnoreCase(\"-trainpath\")) {\n        trainPath = args[argIndex + 1];\n        argIndex += 2;\n      } else if (args[argIndex].equalsIgnoreCase(\"-devpath\")) {\n        devPath = args[argIndex + 1];\n        argIndex += 2;\n      } else if (args[argIndex].equalsIgnoreCase(\"-model\")) {\n        modelPath = args[argIndex + 1];\n        argIndex += 2;\n      } else if (args[argIndex].equalsIgnoreCase(\"-filterNeutral\")) {\n        filterNeutral = true;\n        argIndex++;\n      } else {\n        int newArgIndex = op.setOption(args, argIndex);\n        if (newArgIndex == argIndex) {\n          throw new IllegalArgumentException(\"Unknown argument \" + args[argIndex]);\n        }\n        argIndex = newArgIndex;\n      }\n    }\n\n    // read in the trees\n    List<Tree> trainingTrees = SentimentUtils.readTreesWithGoldLabels(trainPath);\n    System.err.println(\"Read in \" + trainingTrees.size() + \" training trees\");\n    if (filterNeutral) {\n      trainingTrees = CollectionUtils.filterAsList(trainingTrees, NEUTRAL_FILTER);\n      System.err.println(\"Filtered training trees: \" + trainingTrees.size());\n    }\n\n    List<Tree> devTrees = null;\n    if (devPath != null) {\n      devTrees = SentimentUtils.readTreesWithGoldLabels(devPath);\n      System.err.println(\"Read in \" + devTrees.size() + \" dev trees\");\n      if (filterNeutral) {\n        devTrees = CollectionUtils.filterAsList(devTrees, NEUTRAL_FILTER);\n        System.err.println(\"Filtered dev trees: \" + devTrees.size());\n      }\n    }\n\n    // TODO: binarize the trees, then collapse the unary chains.\n    // Collapsed unary chains always have the label of the top node in\n    // the chain\n    // Note: the sentiment training data already has this done.\n    // However, when we handle trees given to us from the Stanford Parser,\n    // we will have to perform this step\n\n    // build an unitialized SentimentModel from the binary productions\n    System.err.println(\"Sentiment model options:\\n\" + op);\n    SentimentModel model = new SentimentModel(op, trainingTrees);\n\n    // TODO: need to handle unk rules somehow... at test time the tree\n    // structures might have something that we never saw at training\n    // time.  for example, we could put a threshold on all of the\n    // rules at training time and anything that doesn't meet that\n    // threshold goes into the unk.  perhaps we could also use some\n    // component of the accepted training rules to build up the \"unk\"\n    // parameter in case there are no rules that don't meet the\n    // threshold\n    \n    if (runGradientCheck) {\n      runGradientCheck(model, trainingTrees);\n    }\n\n    if (runTraining) {\n      train(model, modelPath, trainingTrees, devTrees);\n      model.saveSerialized(modelPath);\n    }\n  }","commit_id":"e9a58f80dac6815e1e7be8d5bc232e2cd976219a","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"/**\n   * demoAPI demonstrates other ways of calling the parser with\n   * already tokenized text, or in some cases, raw text that needs to\n   * be tokenized as a single sentence.  Output is handled with a\n   * TreePrint object.  Note that the options used when creating the\n   * TreePrint can determine what results to print out.  Once again,\n   * one can capture the output by passing a PrintWriter to\n   * TreePrint.printTree.\n   */\n  public static void demoAPI(LexicalizedParser lp) {\n    // This option shows parsing a list of correctly tokenized words\n    String[] sent = { \"This\", \"is\", \"an\", \"easy\", \"sentence\", \".\" };\n    List<CoreLabel> rawWords = Sentence.toCoreLabelList(sent);\n    Tree parse = lp.apply(rawWords);\n    parse.pennPrint();\n    System.out.println();\n\n    // This option shows loading and using an explicit tokenizer\n    String sent2 = \"This is another sentence.\";\n    TokenizerFactory<CoreLabel> tokenizerFactory =\n        PTBTokenizer.factory(new CoreLabelTokenFactory(), \"\");\n    Tokenizer<CoreLabel> tok =\n        tokenizerFactory.getTokenizer(new StringReader(sent2));\n    List<CoreLabel> rawWords2 = tok.tokenize();\n    parse = lp.apply(rawWords2);\n\n    TreebankLanguagePack tlp = new PennTreebankLanguagePack();\n    GrammaticalStructureFactory gsf = tlp.grammaticalStructureFactory();\n    GrammaticalStructure gs = gsf.newGrammaticalStructure(parse);\n    List<TypedDependency> tdl = gs.typedDependenciesCCprocessed();\n    System.out.println(tdl);\n    System.out.println();\n\n    // You can also use a TreePrint object to print trees and dependencies\n    TreePrint tp = new TreePrint(\"penn,typedDependenciesCollapsed\");\n    tp.printTree(parse);\n  }","id":16534,"modified_method":"/**\n   * demoAPI demonstrates other ways of calling the parser with\n   * already tokenized text, or in some cases, raw text that needs to\n   * be tokenized as a single sentence.  Output is handled with a\n   * TreePrint object.  Note that the options used when creating the\n   * TreePrint can determine what results to print out.  Once again,\n   * one can capture the output by passing a PrintWriter to\n   * TreePrint.printTree.\n   */\n  public static void demoAPI(LexicalizedParser lp) {\n    // This option shows parsing a list of correctly tokenized words\n    String[] sent = { \"This\", \"is\", \"an\", \"easy\", \"sentence\", \".\" };\n    List<CoreLabel> rawWords = Sentence.toCoreLabelList(sent);\n    Tree parse = lp.apply(rawWords);\n    parse.pennPrint();\n    System.out.println();\n\n    // This option shows loading and using an explicit tokenizer\n    String sent2 = \"This is another sentence.\";\n    TokenizerFactory<CoreLabel> tokenizerFactory =\n      PTBTokenizer.factory(new CoreLabelTokenFactory(), \"\");\n    List<CoreLabel> rawWords2 =\n      tokenizerFactory.getTokenizer(new StringReader(sent2)).tokenize();\n    parse = lp.apply(rawWords2);\n\n    TreebankLanguagePack tlp = new PennTreebankLanguagePack();\n    GrammaticalStructureFactory gsf = tlp.grammaticalStructureFactory();\n    GrammaticalStructure gs = gsf.newGrammaticalStructure(parse);\n    List<TypedDependency> tdl = gs.typedDependenciesCCprocessed();\n    System.out.println(tdl);\n    System.out.println();\n\n    TreePrint tp = new TreePrint(\"penn,typedDependenciesCollapsed\");\n    tp.printTree(parse);\n  }","commit_id":"f289a53ec5d971caa237a277e1ab7fe8befadffc","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"public static void train(SentimentModel model, String modelPath, List<Tree> trainingTrees, List<Tree> devTrees) {\n    Timing timing = new Timing();\n    long maxTrainTimeMillis = model.op.trainOptions.maxTrainTimeSeconds * 1000;\n    int debugCycle = 0;\n    double bestAccuracy = 0.0;\n\n    // train using AdaGrad (seemed to work best during the dvparser project)\n    double[] sumGradSquare = new double[model.totalParamSize()];\n    Arrays.fill(sumGradSquare, model.op.trainOptions.initialAdagradWeight);\n    \n    int numBatches = trainingTrees.size() / model.op.trainOptions.batchSize + 1;\n    System.err.println(\"Training on \" + trainingTrees.size() + \" trees in \" + numBatches + \" batches\");\n    System.err.println(\"Times through each training batch: \" + model.op.trainOptions.epochs);\n    for (int epoch = 0; epoch < model.op.trainOptions.epochs; ++epoch) {\n      System.err.println(\"======================================\");\n      System.err.println(\"Starting epoch \" + epoch);\n      if (epoch > 0 && model.op.trainOptions.adagradResetFrequency > 0 && \n          (epoch % model.op.trainOptions.adagradResetFrequency == 0)) {\n        System.err.println(\"Resetting adagrad weights to \" + model.op.trainOptions.initialAdagradWeight);\n        Arrays.fill(sumGradSquare, model.op.trainOptions.initialAdagradWeight);\n      }\n\n      List<Tree> shuffledSentences = Generics.newArrayList(trainingTrees);\n      Collections.shuffle(shuffledSentences, model.rand);\n      for (int batch = 0; batch < numBatches; ++batch) {\n        System.err.println(\"======================================\");\n        System.err.println(\"Epoch \" + epoch + \" batch \" + batch);\n      \n        // Each batch will be of the specified batch size, except the\n        // last batch will include any leftover trees at the end of\n        // the list\n        int startTree = batch * model.op.trainOptions.batchSize;\n        int endTree = (batch + 1) * model.op.trainOptions.batchSize;\n        if (endTree + model.op.trainOptions.batchSize > shuffledSentences.size()) {\n          endTree = shuffledSentences.size();\n        }\n        \n        executeOneTrainingBatch(model, shuffledSentences.subList(startTree, endTree), sumGradSquare);\n\n        long totalElapsed = timing.report();\n        System.err.println(\"Finished epoch \" + epoch + \" batch \" + batch + \"; total training time \" + totalElapsed + \" ms\");\n\n        if (maxTrainTimeMillis > 0 && totalElapsed > maxTrainTimeMillis) {\n          // no need to debug output, we're done now\n          break;\n        }\n\n        if (epoch > 0 && epoch % model.op.trainOptions.debugOutputEpochs == 0) {\n\n          Evaluate eval = new Evaluate(model);\n          eval.eval(devTrees);\n          eval.printSummary();\n          double score = eval.exactNodeAccuracy() * 100.0;\n\n          // output an intermediate model\n          if (modelPath != null) {\n            String tempPath = modelPath;\n            if (modelPath.endsWith(\".ser.gz\")) {\n              tempPath = modelPath.substring(0, modelPath.length() - 7) + \"-\" + FILENAME.format(debugCycle) + \"-\" + NF.format(score) + \".ser.gz\";\n            } else if (modelPath.endsWith(\".gz\")) {\n              tempPath = modelPath.substring(0, modelPath.length() - 3) + \"-\" + FILENAME.format(debugCycle) + \"-\" + NF.format(score) + \".gz\";\n            } else {\n              tempPath = modelPath.substring(0, modelPath.length() - 3) + \"-\" + FILENAME.format(debugCycle) + \"-\" + NF.format(score);\n            }\n            model.saveSerialized(tempPath);\n          }\n\n          ++debugCycle;\n        }\n      }\n      long totalElapsed = timing.report();\n      \n      if (maxTrainTimeMillis > 0 && totalElapsed > maxTrainTimeMillis) {\n        // no need to debug output, we're done now\n        System.err.println(\"Max training time exceeded, exiting\");\n        break;\n      }\n    }    \n  }","id":16535,"modified_method":"public static void train(SentimentModel model, String modelPath, List<Tree> trainingTrees, List<Tree> devTrees) {\n    Timing timing = new Timing();\n    long maxTrainTimeMillis = model.op.trainOptions.maxTrainTimeSeconds * 1000;\n    int debugCycle = 0;\n    double bestAccuracy = 0.0;\n\n    // train using AdaGrad (seemed to work best during the dvparser project)\n    double[] sumGradSquare = new double[model.totalParamSize()];\n    Arrays.fill(sumGradSquare, model.op.trainOptions.initialAdagradWeight);\n    \n    int numBatches = trainingTrees.size() / model.op.trainOptions.batchSize + 1;\n    System.err.println(\"Training on \" + trainingTrees.size() + \" trees in \" + numBatches + \" batches\");\n    System.err.println(\"Times through each training batch: \" + model.op.trainOptions.epochs);\n    for (int epoch = 0; epoch < model.op.trainOptions.epochs; ++epoch) {\n      System.err.println(\"======================================\");\n      System.err.println(\"Starting epoch \" + epoch);\n      if (epoch > 0 && model.op.trainOptions.adagradResetFrequency > 0 && \n          (epoch % model.op.trainOptions.adagradResetFrequency == 0)) {\n        System.err.println(\"Resetting adagrad weights to \" + model.op.trainOptions.initialAdagradWeight);\n        Arrays.fill(sumGradSquare, model.op.trainOptions.initialAdagradWeight);\n      }\n\n      List<Tree> shuffledSentences = Generics.newArrayList(trainingTrees);\n      Collections.shuffle(shuffledSentences, model.rand);\n      for (int batch = 0; batch < numBatches; ++batch) {\n        System.err.println(\"======================================\");\n        System.err.println(\"Epoch \" + epoch + \" batch \" + batch);\n      \n        // Each batch will be of the specified batch size, except the\n        // last batch will include any leftover trees at the end of\n        // the list\n        int startTree = batch * model.op.trainOptions.batchSize;\n        int endTree = (batch + 1) * model.op.trainOptions.batchSize;\n        if (endTree + model.op.trainOptions.batchSize > shuffledSentences.size()) {\n          endTree = shuffledSentences.size();\n        }\n        \n        executeOneTrainingBatch(model, shuffledSentences.subList(startTree, endTree), sumGradSquare);\n\n        long totalElapsed = timing.report();\n        System.err.println(\"Finished epoch \" + epoch + \" batch \" + batch + \"; total training time \" + totalElapsed + \" ms\");\n\n        if (maxTrainTimeMillis > 0 && totalElapsed > maxTrainTimeMillis) {\n          // no need to debug output, we're done now\n          break;\n        }\n\n        if (epoch > 0 && epoch % model.op.trainOptions.debugOutputEpochs == 0) {\n\n          double score = 0.0;\n          if (devTrees != null) {\n            Evaluate eval = new Evaluate(model);\n            eval.eval(devTrees);\n            eval.printSummary();\n            score = eval.exactNodeAccuracy() * 100.0;\n          }\n\n          // output an intermediate model\n          if (modelPath != null) {\n            String tempPath = modelPath;\n            if (modelPath.endsWith(\".ser.gz\")) {\n              tempPath = modelPath.substring(0, modelPath.length() - 7) + \"-\" + FILENAME.format(debugCycle) + \"-\" + NF.format(score) + \".ser.gz\";\n            } else if (modelPath.endsWith(\".gz\")) {\n              tempPath = modelPath.substring(0, modelPath.length() - 3) + \"-\" + FILENAME.format(debugCycle) + \"-\" + NF.format(score) + \".gz\";\n            } else {\n              tempPath = modelPath.substring(0, modelPath.length() - 3) + \"-\" + FILENAME.format(debugCycle) + \"-\" + NF.format(score);\n            }\n            model.saveSerialized(tempPath);\n          }\n\n          ++debugCycle;\n        }\n      }\n      long totalElapsed = timing.report();\n      \n      if (maxTrainTimeMillis > 0 && totalElapsed > maxTrainTimeMillis) {\n        // no need to debug output, we're done now\n        System.err.println(\"Max training time exceeded, exiting\");\n        break;\n      }\n    }    \n  }","commit_id":"f289a53ec5d971caa237a277e1ab7fe8befadffc","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"public static void main(String[] args) {\n    RNNOptions op = new RNNOptions();\n\n    String trainPath = \"sentimentTreesDebug.txt\";\n    String devPath = null;\n\n    boolean runGradientCheck = false;\n    boolean runTraining = false;\n\n    boolean filterNeutral = false;\n\n    String modelPath = null;\n\n    for (int argIndex = 0; argIndex < args.length; ) {\n      if (args[argIndex].equalsIgnoreCase(\"-train\")) {\n        runTraining = true;\n        argIndex++;\n      } else if (args[argIndex].equalsIgnoreCase(\"-gradientcheck\")) {\n        runGradientCheck = true;\n        argIndex++;\n      } else if (args[argIndex].equalsIgnoreCase(\"-trainpath\")) {\n        trainPath = args[argIndex + 1];\n        argIndex += 2;\n      } else if (args[argIndex].equalsIgnoreCase(\"-devpath\")) {\n        devPath = args[argIndex + 1];\n        argIndex += 2;\n      } else if (args[argIndex].equalsIgnoreCase(\"-model\")) {\n        modelPath = args[argIndex + 1];\n        argIndex += 2;\n      } else if (args[argIndex].equalsIgnoreCase(\"-filterNeutral\")) {\n        filterNeutral = true;\n        argIndex++;\n      } else {\n        int newArgIndex = op.setOption(args, argIndex);\n        if (newArgIndex == argIndex) {\n          throw new IllegalArgumentException(\"Unknown argument \" + args[argIndex]);\n        }\n        argIndex = newArgIndex;\n      }\n    }\n\n    // read in the trees\n    List<Tree> trainingTrees = SentimentUtils.readTreesWithGoldLabels(trainPath);\n    System.err.println(\"Read in \" + trainingTrees.size() + \" training trees\");\n    List<Tree> devTrees = SentimentUtils.readTreesWithGoldLabels(devPath);\n    System.err.println(\"Read in \" + devTrees.size() + \" dev trees\");\n\n    if (filterNeutral) {\n      Filter<Tree> neutralFilter = new Filter<Tree>() {\n        public boolean accept(Tree tree) {\n          int gold = RNNCoreAnnotations.getGoldClass(tree);\n          return gold != 2;\n        }\n      };\n      trainingTrees = CollectionUtils.filterAsList(trainingTrees, neutralFilter);\n      devTrees = CollectionUtils.filterAsList(devTrees, neutralFilter);\n      System.err.println(\"Filtered training trees: \" + trainingTrees.size());\n      System.err.println(\"Filtered dev trees: \" + devTrees.size());\n    }\n\n    // TODO: binarize the trees, then collapse the unary chains.\n    // Collapsed unary chains always have the label of the top node in\n    // the chain\n    // Note: the sentiment training data already has this done.\n    // However, when we handle trees given to us from the Stanford Parser,\n    // we will have to perform this step\n\n    // build an unitialized SentimentModel from the binary productions\n    System.err.println(\"Sentiment model options:\\n\" + op);\n    SentimentModel model = new SentimentModel(op, trainingTrees);\n\n    // TODO: need to handle unk rules somehow... at test time the tree\n    // structures might have something that we never saw at training\n    // time.  for example, we could put a threshold on all of the\n    // rules at training time and anything that doesn't meet that\n    // threshold goes into the unk.  perhaps we could also use some\n    // component of the accepted training rules to build up the \"unk\"\n    // parameter in case there are no rules that don't meet the\n    // threshold\n    \n    if (runGradientCheck) {\n      runGradientCheck(model, trainingTrees);\n    }\n\n    if (runTraining) {\n      train(model, modelPath, trainingTrees, devTrees);\n      model.saveSerialized(modelPath);\n    }\n  }","id":16536,"modified_method":"public static void main(String[] args) {\n    RNNOptions op = new RNNOptions();\n\n    String trainPath = \"sentimentTreesDebug.txt\";\n    String devPath = null;\n\n    boolean runGradientCheck = false;\n    boolean runTraining = false;\n\n    boolean filterNeutral = false;\n\n    String modelPath = null;\n\n    for (int argIndex = 0; argIndex < args.length; ) {\n      if (args[argIndex].equalsIgnoreCase(\"-train\")) {\n        runTraining = true;\n        argIndex++;\n      } else if (args[argIndex].equalsIgnoreCase(\"-gradientcheck\")) {\n        runGradientCheck = true;\n        argIndex++;\n      } else if (args[argIndex].equalsIgnoreCase(\"-trainpath\")) {\n        trainPath = args[argIndex + 1];\n        argIndex += 2;\n      } else if (args[argIndex].equalsIgnoreCase(\"-devpath\")) {\n        devPath = args[argIndex + 1];\n        argIndex += 2;\n      } else if (args[argIndex].equalsIgnoreCase(\"-model\")) {\n        modelPath = args[argIndex + 1];\n        argIndex += 2;\n      } else if (args[argIndex].equalsIgnoreCase(\"-filterNeutral\")) {\n        filterNeutral = true;\n        argIndex++;\n      } else {\n        int newArgIndex = op.setOption(args, argIndex);\n        if (newArgIndex == argIndex) {\n          throw new IllegalArgumentException(\"Unknown argument \" + args[argIndex]);\n        }\n        argIndex = newArgIndex;\n      }\n    }\n\n    // read in the trees\n    List<Tree> trainingTrees = SentimentUtils.readTreesWithGoldLabels(trainPath);\n    System.err.println(\"Read in \" + trainingTrees.size() + \" training trees\");\n    if (filterNeutral) {\n      trainingTrees = CollectionUtils.filterAsList(trainingTrees, NEUTRAL_FILTER);\n      System.err.println(\"Filtered training trees: \" + trainingTrees.size());\n    }\n\n    List<Tree> devTrees = null;\n    if (devPath != null) {\n      devTrees = SentimentUtils.readTreesWithGoldLabels(devPath);\n      System.err.println(\"Read in \" + devTrees.size() + \" dev trees\");\n      if (filterNeutral) {\n        devTrees = CollectionUtils.filterAsList(devTrees, NEUTRAL_FILTER);\n        System.err.println(\"Filtered dev trees: \" + devTrees.size());\n      }\n    }\n\n    // TODO: binarize the trees, then collapse the unary chains.\n    // Collapsed unary chains always have the label of the top node in\n    // the chain\n    // Note: the sentiment training data already has this done.\n    // However, when we handle trees given to us from the Stanford Parser,\n    // we will have to perform this step\n\n    // build an unitialized SentimentModel from the binary productions\n    System.err.println(\"Sentiment model options:\\n\" + op);\n    SentimentModel model = new SentimentModel(op, trainingTrees);\n\n    // TODO: need to handle unk rules somehow... at test time the tree\n    // structures might have something that we never saw at training\n    // time.  for example, we could put a threshold on all of the\n    // rules at training time and anything that doesn't meet that\n    // threshold goes into the unk.  perhaps we could also use some\n    // component of the accepted training rules to build up the \"unk\"\n    // parameter in case there are no rules that don't meet the\n    // threshold\n    \n    if (runGradientCheck) {\n      runGradientCheck(model, trainingTrees);\n    }\n\n    if (runTraining) {\n      train(model, modelPath, trainingTrees, devTrees);\n      model.saveSerialized(modelPath);\n    }\n  }","commit_id":"f289a53ec5d971caa237a277e1ab7fe8befadffc","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"/**\n   * demoAPI demonstrates other ways of calling the parser with\n   * already tokenized text, or in some cases, raw text that needs to\n   * be tokenized as a single sentence.  Output is handled with a\n   * TreePrint object.  Note that the options used when creating the\n   * TreePrint can determine what results to print out.  Once again,\n   * one can capture the output by passing a PrintWriter to\n   * TreePrint.printTree.\n   */\n  public static void demoAPI(LexicalizedParser lp) {\n    // This option shows parsing a list of correctly tokenized words\n    String[] sent = { \"This\", \"is\", \"an\", \"easy\", \"sentence\", \".\" };\n    List<CoreLabel> rawWords = Sentence.toCoreLabelList(sent);\n    Tree parse = lp.apply(rawWords);\n    parse.pennPrint();\n    System.out.println();\n\n    // This option shows loading and using an explicit tokenizer\n    String sent2 = \"This is another sentence.\";\n    TokenizerFactory<CoreLabel> tokenizerFactory =\n        PTBTokenizer.factory(new CoreLabelTokenFactory(), \"\");\n    Tokenizer<CoreLabel> tok =\n        tokenizerFactory.getTokenizer(new StringReader(sent2));\n    List<CoreLabel> rawWords2 = tok.tokenize();\n    parse = lp.apply(rawWords2);\n\n    TreebankLanguagePack tlp = new PennTreebankLanguagePack();\n    GrammaticalStructureFactory gsf = tlp.grammaticalStructureFactory();\n    GrammaticalStructure gs = gsf.newGrammaticalStructure(parse);\n    List<TypedDependency> tdl = gs.typedDependenciesCCprocessed();\n    System.out.println(tdl);\n    System.out.println();\n\n    // You can also use a TreePrint object to print trees and dependencies\n    TreePrint tp = new TreePrint(\"penn,typedDependenciesCollapsed\");\n    tp.printTree(parse);\n  }","id":16537,"modified_method":"/**\n   * demoAPI demonstrates other ways of calling the parser with\n   * already tokenized text, or in some cases, raw text that needs to\n   * be tokenized as a single sentence.  Output is handled with a\n   * TreePrint object.  Note that the options used when creating the\n   * TreePrint can determine what results to print out.  Once again,\n   * one can capture the output by passing a PrintWriter to\n   * TreePrint.printTree.\n   */\n  public static void demoAPI(LexicalizedParser lp) {\n    // This option shows parsing a list of correctly tokenized words\n    String[] sent = { \"This\", \"is\", \"an\", \"easy\", \"sentence\", \".\" };\n    List<CoreLabel> rawWords = Sentence.toCoreLabelList(sent);\n    Tree parse = lp.apply(rawWords);\n    parse.pennPrint();\n    System.out.println();\n\n    // This option shows loading and using an explicit tokenizer\n    String sent2 = \"This is another sentence.\";\n    TokenizerFactory<CoreLabel> tokenizerFactory =\n      PTBTokenizer.factory(new CoreLabelTokenFactory(), \"\");\n    List<CoreLabel> rawWords2 =\n      tokenizerFactory.getTokenizer(new StringReader(sent2)).tokenize();\n    parse = lp.apply(rawWords2);\n\n    TreebankLanguagePack tlp = new PennTreebankLanguagePack();\n    GrammaticalStructureFactory gsf = tlp.grammaticalStructureFactory();\n    GrammaticalStructure gs = gsf.newGrammaticalStructure(parse);\n    List<TypedDependency> tdl = gs.typedDependenciesCCprocessed();\n    System.out.println(tdl);\n    System.out.println();\n\n    TreePrint tp = new TreePrint(\"penn,typedDependenciesCollapsed\");\n    tp.printTree(parse);\n  }","commit_id":"44dac18bd16e3a830928b5f39899f9d31d712320","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"private void backpropDerivativesAndError(Tree tree,\n                                           TwoDimensionalMap<String, String, SimpleMatrix> binaryTD,\n                                           TwoDimensionalMap<String, String, SimpleMatrix> binaryCD,\n                                           TwoDimensionalMap<String, String, SimpleTensor> binaryTensorTD,\n                                           Map<String, SimpleMatrix> unaryCD,\n                                           Map<String, SimpleMatrix> wordVectorD,\n                                           SimpleMatrix deltaUp) {\n    if (tree.isLeaf()) {\n      return;\n    }\n\n    SimpleMatrix currentVector = RNNCoreAnnotations.getNodeVector(tree);\n    String category = tree.label().value();\n    category = model.basicCategory(category);\n\n    // Build a vector that looks like 0,0,1,0,0 with an indicator for the correct class\n    SimpleMatrix goldLabel = new SimpleMatrix(model.numClasses, 1);\n    int goldClass = RNNCoreAnnotations.getGoldClass(tree);\n    goldLabel.set(goldClass, 1.0);\n\n    double nodeWeight = model.op.trainOptions.getClassWeight(goldClass);\n\n    SimpleMatrix predictions = RNNCoreAnnotations.getPredictions(tree);\n\n    SimpleMatrix deltaClass = predictions.minus(goldLabel).scale(nodeWeight);\n    SimpleMatrix localCD = deltaClass.mult(NeuralUtils.concatenateWithBias(currentVector).transpose());\n\n    double error = -(NeuralUtils.elementwiseApplyLog(predictions).elementMult(goldLabel).elementSum());\n    error = error * nodeWeight;\n    RNNCoreAnnotations.setPredictionError(tree, error);\n\n    if (tree.isPreTerminal()) { // below us is a word vector\n      unaryCD.put(category, unaryCD.get(category).plus(localCD));\n\n      String word = tree.children()[0].label().value();\n      word = model.getVocabWord(word);\n\n      //SimpleMatrix currentVectorDerivative = NeuralUtils.elementwiseApplyTanhDerivative(currentVector);\n      //SimpleMatrix deltaFromClass = model.getUnaryClassification(category).transpose().mult(deltaClass);\n      //SimpleMatrix deltaFull = deltaFromClass.extractMatrix(0, model.op.numHid, 0, 1).plus(deltaUp);\n      //SimpleMatrix wordDerivative = deltaFull.elementMult(currentVectorDerivative);\n      //wordVectorD.put(word, wordVectorD.get(word).plus(wordDerivative));\n\n      SimpleMatrix currentVectorDerivative = NeuralUtils.elementwiseApplyTanhDerivative(currentVector);\n      SimpleMatrix deltaFromClass = model.getUnaryClassification(category).transpose().mult(deltaClass);\n      deltaFromClass = deltaFromClass.extractMatrix(0, model.op.numHid, 0, 1).elementMult(currentVectorDerivative);\n      SimpleMatrix deltaFull = deltaFromClass.plus(deltaUp);\n      wordVectorD.put(word, wordVectorD.get(word).plus(deltaFull));\n    } else {\n      // Otherwise, this must be a binary node\n      String leftCategory = model.basicCategory(tree.children()[0].label().value());\n      String rightCategory = model.basicCategory(tree.children()[1].label().value());\n      if (model.op.combineClassification) {\n        unaryCD.put(\"\", unaryCD.get(\"\").plus(localCD));\n      } else {\n        binaryCD.put(leftCategory, rightCategory, binaryCD.get(leftCategory, rightCategory).plus(localCD));\n      }\n\n      SimpleMatrix currentVectorDerivative = NeuralUtils.elementwiseApplyTanhDerivative(currentVector);\n      SimpleMatrix deltaFromClass = model.getBinaryClassification(leftCategory, rightCategory).transpose().mult(deltaClass);\n      deltaFromClass = deltaFromClass.extractMatrix(0, model.op.numHid, 0, 1).elementMult(currentVectorDerivative);\n      SimpleMatrix deltaFull = deltaFromClass.plus(deltaUp);\n\n      SimpleMatrix leftVector = RNNCoreAnnotations.getNodeVector(tree.children()[0]);\n      SimpleMatrix rightVector = RNNCoreAnnotations.getNodeVector(tree.children()[1]);\n      SimpleMatrix childrenVector = NeuralUtils.concatenateWithBias(leftVector, rightVector);\n      SimpleMatrix W_df = deltaFull.mult(childrenVector.transpose());\n      binaryTD.put(leftCategory, rightCategory, binaryTD.get(leftCategory, rightCategory).plus(W_df));\n      SimpleMatrix deltaDown;\n      if (model.op.useTensors) {\n        SimpleTensor Wt_df = getTensorGradient(deltaFull, leftVector, rightVector);\n        binaryTensorTD.put(leftCategory, rightCategory, binaryTensorTD.get(leftCategory, rightCategory).plus(Wt_df));\n        deltaDown = computeTensorDeltaDown(deltaFull, leftVector, rightVector, model.getBinaryTransform(leftCategory, rightCategory), model.getBinaryTensor(leftCategory, rightCategory));\n      } else {\n        deltaDown = model.getBinaryTransform(leftCategory, rightCategory).transpose().mult(deltaFull);\n      }\n\n      SimpleMatrix leftDerivative = NeuralUtils.elementwiseApplyTanhDerivative(leftVector);\n      SimpleMatrix rightDerivative = NeuralUtils.elementwiseApplyTanhDerivative(rightVector);\n      SimpleMatrix leftDeltaDown = deltaDown.extractMatrix(0, deltaFull.numRows(), 0, 1);\n      SimpleMatrix rightDeltaDown = deltaDown.extractMatrix(deltaFull.numRows(), deltaFull.numRows() * 2, 0, 1);\n      backpropDerivativesAndError(tree.children()[0], binaryTD, binaryCD, binaryTensorTD, unaryCD, wordVectorD, leftDerivative.elementMult(leftDeltaDown));\n      backpropDerivativesAndError(tree.children()[1], binaryTD, binaryCD, binaryTensorTD, unaryCD, wordVectorD, rightDerivative.elementMult(rightDeltaDown));\n    }\n  }","id":16538,"modified_method":"private void backpropDerivativesAndError(Tree tree,\n                                           TwoDimensionalMap<String, String, SimpleMatrix> binaryTD,\n                                           TwoDimensionalMap<String, String, SimpleMatrix> binaryCD,\n                                           TwoDimensionalMap<String, String, SimpleTensor> binaryTensorTD,\n                                           Map<String, SimpleMatrix> unaryCD,\n                                           Map<String, SimpleMatrix> wordVectorD,\n                                           SimpleMatrix deltaUp) {\n    if (tree.isLeaf()) {\n      return;\n    }\n\n    SimpleMatrix currentVector = RNNCoreAnnotations.getNodeVector(tree);\n    String category = tree.label().value();\n    category = model.basicCategory(category);\n\n    // Build a vector that looks like 0,0,1,0,0 with an indicator for the correct class\n    SimpleMatrix goldLabel = new SimpleMatrix(model.numClasses, 1);\n    int goldClass = RNNCoreAnnotations.getGoldClass(tree);\n    if (goldClass >= 0) {\n      goldLabel.set(goldClass, 1.0);\n    }\n\n    double nodeWeight = model.op.trainOptions.getClassWeight(goldClass);\n\n    SimpleMatrix predictions = RNNCoreAnnotations.getPredictions(tree);\n\n    // If this is an unlabeled class, set deltaClass to 0.  We could\n    // make this more efficient by eliminating various of the below\n    // calculations, but this would be the easiest way to handle the\n    // unlabeled class\n    SimpleMatrix deltaClass = goldClass >= 0 ? predictions.minus(goldLabel).scale(nodeWeight) : new SimpleMatrix(predictions.numRows(), predictions.numCols());\n    SimpleMatrix localCD = deltaClass.mult(NeuralUtils.concatenateWithBias(currentVector).transpose());\n\n    double error = -(NeuralUtils.elementwiseApplyLog(predictions).elementMult(goldLabel).elementSum());\n    error = error * nodeWeight;\n    RNNCoreAnnotations.setPredictionError(tree, error);\n\n    if (tree.isPreTerminal()) { // below us is a word vector\n      unaryCD.put(category, unaryCD.get(category).plus(localCD));\n\n      String word = tree.children()[0].label().value();\n      word = model.getVocabWord(word);\n\n      //SimpleMatrix currentVectorDerivative = NeuralUtils.elementwiseApplyTanhDerivative(currentVector);\n      //SimpleMatrix deltaFromClass = model.getUnaryClassification(category).transpose().mult(deltaClass);\n      //SimpleMatrix deltaFull = deltaFromClass.extractMatrix(0, model.op.numHid, 0, 1).plus(deltaUp);\n      //SimpleMatrix wordDerivative = deltaFull.elementMult(currentVectorDerivative);\n      //wordVectorD.put(word, wordVectorD.get(word).plus(wordDerivative));\n\n      SimpleMatrix currentVectorDerivative = NeuralUtils.elementwiseApplyTanhDerivative(currentVector);\n      SimpleMatrix deltaFromClass = model.getUnaryClassification(category).transpose().mult(deltaClass);\n      deltaFromClass = deltaFromClass.extractMatrix(0, model.op.numHid, 0, 1).elementMult(currentVectorDerivative);\n      SimpleMatrix deltaFull = deltaFromClass.plus(deltaUp);\n      wordVectorD.put(word, wordVectorD.get(word).plus(deltaFull));\n    } else {\n      // Otherwise, this must be a binary node\n      String leftCategory = model.basicCategory(tree.children()[0].label().value());\n      String rightCategory = model.basicCategory(tree.children()[1].label().value());\n      if (model.op.combineClassification) {\n        unaryCD.put(\"\", unaryCD.get(\"\").plus(localCD));\n      } else {\n        binaryCD.put(leftCategory, rightCategory, binaryCD.get(leftCategory, rightCategory).plus(localCD));\n      }\n\n      SimpleMatrix currentVectorDerivative = NeuralUtils.elementwiseApplyTanhDerivative(currentVector);\n      SimpleMatrix deltaFromClass = model.getBinaryClassification(leftCategory, rightCategory).transpose().mult(deltaClass);\n      deltaFromClass = deltaFromClass.extractMatrix(0, model.op.numHid, 0, 1).elementMult(currentVectorDerivative);\n      SimpleMatrix deltaFull = deltaFromClass.plus(deltaUp);\n\n      SimpleMatrix leftVector = RNNCoreAnnotations.getNodeVector(tree.children()[0]);\n      SimpleMatrix rightVector = RNNCoreAnnotations.getNodeVector(tree.children()[1]);\n      SimpleMatrix childrenVector = NeuralUtils.concatenateWithBias(leftVector, rightVector);\n      SimpleMatrix W_df = deltaFull.mult(childrenVector.transpose());\n      binaryTD.put(leftCategory, rightCategory, binaryTD.get(leftCategory, rightCategory).plus(W_df));\n      SimpleMatrix deltaDown;\n      if (model.op.useTensors) {\n        SimpleTensor Wt_df = getTensorGradient(deltaFull, leftVector, rightVector);\n        binaryTensorTD.put(leftCategory, rightCategory, binaryTensorTD.get(leftCategory, rightCategory).plus(Wt_df));\n        deltaDown = computeTensorDeltaDown(deltaFull, leftVector, rightVector, model.getBinaryTransform(leftCategory, rightCategory), model.getBinaryTensor(leftCategory, rightCategory));\n      } else {\n        deltaDown = model.getBinaryTransform(leftCategory, rightCategory).transpose().mult(deltaFull);\n      }\n\n      SimpleMatrix leftDerivative = NeuralUtils.elementwiseApplyTanhDerivative(leftVector);\n      SimpleMatrix rightDerivative = NeuralUtils.elementwiseApplyTanhDerivative(rightVector);\n      SimpleMatrix leftDeltaDown = deltaDown.extractMatrix(0, deltaFull.numRows(), 0, 1);\n      SimpleMatrix rightDeltaDown = deltaDown.extractMatrix(deltaFull.numRows(), deltaFull.numRows() * 2, 0, 1);\n      backpropDerivativesAndError(tree.children()[0], binaryTD, binaryCD, binaryTensorTD, unaryCD, wordVectorD, leftDerivative.elementMult(leftDeltaDown));\n      backpropDerivativesAndError(tree.children()[1], binaryTD, binaryCD, binaryTensorTD, unaryCD, wordVectorD, rightDerivative.elementMult(rightDeltaDown));\n    }\n  }","commit_id":"44dac18bd16e3a830928b5f39899f9d31d712320","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"public static void main(String[] args) {\n    RNNOptions op = new RNNOptions();\n\n    String trainPath = \"sentimentTreesDebug.txt\";\n    String devPath = null;\n\n    boolean runGradientCheck = false;\n    boolean runTraining = false;\n\n    boolean filterNeutral = false;\n\n    String modelPath = null;\n\n    for (int argIndex = 0; argIndex < args.length; ) {\n      if (args[argIndex].equalsIgnoreCase(\"-train\")) {\n        runTraining = true;\n        argIndex++;\n      } else if (args[argIndex].equalsIgnoreCase(\"-gradientcheck\")) {\n        runGradientCheck = true;\n        argIndex++;\n      } else if (args[argIndex].equalsIgnoreCase(\"-trainpath\")) {\n        trainPath = args[argIndex + 1];\n        argIndex += 2;\n      } else if (args[argIndex].equalsIgnoreCase(\"-devpath\")) {\n        devPath = args[argIndex + 1];\n        argIndex += 2;\n      } else if (args[argIndex].equalsIgnoreCase(\"-model\")) {\n        modelPath = args[argIndex + 1];\n        argIndex += 2;\n      } else if (args[argIndex].equalsIgnoreCase(\"-filterNeutral\")) {\n        filterNeutral = true;\n        argIndex++;\n      } else {\n        int newArgIndex = op.setOption(args, argIndex);\n        if (newArgIndex == argIndex) {\n          throw new IllegalArgumentException(\"Unknown argument \" + args[argIndex]);\n        }\n        argIndex = newArgIndex;\n      }\n    }\n\n    // read in the trees\n    List<Tree> trainingTrees = SentimentUtils.readTreesWithGoldLabels(trainPath);\n    System.err.println(\"Read in \" + trainingTrees.size() + \" training trees\");\n    List<Tree> devTrees = SentimentUtils.readTreesWithGoldLabels(devPath);\n    System.err.println(\"Read in \" + devTrees.size() + \" dev trees\");\n\n    if (filterNeutral) {\n      Filter<Tree> neutralFilter = new Filter<Tree>() {\n        public boolean accept(Tree tree) {\n          int gold = RNNCoreAnnotations.getGoldClass(tree);\n          return gold != 2;\n        }\n      };\n      trainingTrees = CollectionUtils.filterAsList(trainingTrees, neutralFilter);\n      devTrees = CollectionUtils.filterAsList(devTrees, neutralFilter);\n      System.err.println(\"Filtered training trees: \" + trainingTrees.size());\n      System.err.println(\"Filtered dev trees: \" + devTrees.size());\n    }\n\n    // TODO: binarize the trees, then collapse the unary chains.\n    // Collapsed unary chains always have the label of the top node in\n    // the chain\n    // Note: the sentiment training data already has this done.\n    // However, when we handle trees given to us from the Stanford Parser,\n    // we will have to perform this step\n\n    // build an unitialized SentimentModel from the binary productions\n    System.err.println(\"Sentiment model options:\\n\" + op);\n    SentimentModel model = new SentimentModel(op, trainingTrees);\n\n    // TODO: need to handle unk rules somehow... at test time the tree\n    // structures might have something that we never saw at training\n    // time.  for example, we could put a threshold on all of the\n    // rules at training time and anything that doesn't meet that\n    // threshold goes into the unk.  perhaps we could also use some\n    // component of the accepted training rules to build up the \"unk\"\n    // parameter in case there are no rules that don't meet the\n    // threshold\n    \n    if (runGradientCheck) {\n      runGradientCheck(model, trainingTrees);\n    }\n\n    if (runTraining) {\n      train(model, modelPath, trainingTrees, devTrees);\n      model.saveSerialized(modelPath);\n    }\n  }","id":16539,"modified_method":"public static void main(String[] args) {\n    RNNOptions op = new RNNOptions();\n\n    String trainPath = \"sentimentTreesDebug.txt\";\n    String devPath = null;\n\n    boolean runGradientCheck = false;\n    boolean runTraining = false;\n\n    boolean filterNeutral = false;\n\n    String modelPath = null;\n\n    for (int argIndex = 0; argIndex < args.length; ) {\n      if (args[argIndex].equalsIgnoreCase(\"-train\")) {\n        runTraining = true;\n        argIndex++;\n      } else if (args[argIndex].equalsIgnoreCase(\"-gradientcheck\")) {\n        runGradientCheck = true;\n        argIndex++;\n      } else if (args[argIndex].equalsIgnoreCase(\"-trainpath\")) {\n        trainPath = args[argIndex + 1];\n        argIndex += 2;\n      } else if (args[argIndex].equalsIgnoreCase(\"-devpath\")) {\n        devPath = args[argIndex + 1];\n        argIndex += 2;\n      } else if (args[argIndex].equalsIgnoreCase(\"-model\")) {\n        modelPath = args[argIndex + 1];\n        argIndex += 2;\n      } else if (args[argIndex].equalsIgnoreCase(\"-filterNeutral\")) {\n        filterNeutral = true;\n        argIndex++;\n      } else {\n        int newArgIndex = op.setOption(args, argIndex);\n        if (newArgIndex == argIndex) {\n          throw new IllegalArgumentException(\"Unknown argument \" + args[argIndex]);\n        }\n        argIndex = newArgIndex;\n      }\n    }\n\n    // read in the trees\n    List<Tree> trainingTrees = SentimentUtils.readTreesWithGoldLabels(trainPath);\n    System.err.println(\"Read in \" + trainingTrees.size() + \" training trees\");\n    if (filterNeutral) {\n      trainingTrees = CollectionUtils.filterAsList(trainingTrees, NEUTRAL_FILTER);\n      System.err.println(\"Filtered training trees: \" + trainingTrees.size());\n    }\n\n    List<Tree> devTrees = null;\n    if (devPath != null) {\n      devTrees = SentimentUtils.readTreesWithGoldLabels(devPath);\n      System.err.println(\"Read in \" + devTrees.size() + \" dev trees\");\n      if (filterNeutral) {\n        devTrees = CollectionUtils.filterAsList(devTrees, NEUTRAL_FILTER);\n        System.err.println(\"Filtered dev trees: \" + devTrees.size());\n      }\n    }\n\n    // TODO: binarize the trees, then collapse the unary chains.\n    // Collapsed unary chains always have the label of the top node in\n    // the chain\n    // Note: the sentiment training data already has this done.\n    // However, when we handle trees given to us from the Stanford Parser,\n    // we will have to perform this step\n\n    // build an unitialized SentimentModel from the binary productions\n    System.err.println(\"Sentiment model options:\\n\" + op);\n    SentimentModel model = new SentimentModel(op, trainingTrees);\n\n    // TODO: need to handle unk rules somehow... at test time the tree\n    // structures might have something that we never saw at training\n    // time.  for example, we could put a threshold on all of the\n    // rules at training time and anything that doesn't meet that\n    // threshold goes into the unk.  perhaps we could also use some\n    // component of the accepted training rules to build up the \"unk\"\n    // parameter in case there are no rules that don't meet the\n    // threshold\n    \n    if (runGradientCheck) {\n      runGradientCheck(model, trainingTrees);\n    }\n\n    if (runTraining) {\n      train(model, modelPath, trainingTrees, devTrees);\n      model.saveSerialized(modelPath);\n    }\n  }","commit_id":"44dac18bd16e3a830928b5f39899f9d31d712320","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"public static void train(SentimentModel model, String modelPath, List<Tree> trainingTrees, List<Tree> devTrees) {\n    Timing timing = new Timing();\n    long maxTrainTimeMillis = model.op.trainOptions.maxTrainTimeSeconds * 1000;\n    int debugCycle = 0;\n    double bestAccuracy = 0.0;\n\n    // train using AdaGrad (seemed to work best during the dvparser project)\n    double[] sumGradSquare = new double[model.totalParamSize()];\n    Arrays.fill(sumGradSquare, model.op.trainOptions.initialAdagradWeight);\n    \n    int numBatches = trainingTrees.size() / model.op.trainOptions.batchSize + 1;\n    System.err.println(\"Training on \" + trainingTrees.size() + \" trees in \" + numBatches + \" batches\");\n    System.err.println(\"Times through each training batch: \" + model.op.trainOptions.epochs);\n    for (int epoch = 0; epoch < model.op.trainOptions.epochs; ++epoch) {\n      System.err.println(\"======================================\");\n      System.err.println(\"Starting epoch \" + epoch);\n      if (epoch > 0 && model.op.trainOptions.adagradResetFrequency > 0 && \n          (epoch % model.op.trainOptions.adagradResetFrequency == 0)) {\n        System.err.println(\"Resetting adagrad weights to \" + model.op.trainOptions.initialAdagradWeight);\n        Arrays.fill(sumGradSquare, model.op.trainOptions.initialAdagradWeight);\n      }\n\n      List<Tree> shuffledSentences = Generics.newArrayList(trainingTrees);\n      Collections.shuffle(shuffledSentences, model.rand);\n      for (int batch = 0; batch < numBatches; ++batch) {\n        System.err.println(\"======================================\");\n        System.err.println(\"Epoch \" + epoch + \" batch \" + batch);\n      \n        // Each batch will be of the specified batch size, except the\n        // last batch will include any leftover trees at the end of\n        // the list\n        int startTree = batch * model.op.trainOptions.batchSize;\n        int endTree = (batch + 1) * model.op.trainOptions.batchSize;\n        if (endTree + model.op.trainOptions.batchSize > shuffledSentences.size()) {\n          endTree = shuffledSentences.size();\n        }\n        \n        executeOneTrainingBatch(model, shuffledSentences.subList(startTree, endTree), sumGradSquare);\n\n        long totalElapsed = timing.report();\n        System.err.println(\"Finished epoch \" + epoch + \" batch \" + batch + \"; total training time \" + totalElapsed + \" ms\");\n\n        if (maxTrainTimeMillis > 0 && totalElapsed > maxTrainTimeMillis) {\n          // no need to debug output, we're done now\n          break;\n        }\n\n        if (epoch > 0 && epoch % model.op.trainOptions.debugOutputEpochs == 0) {\n\n          Evaluate eval = new Evaluate(model);\n          eval.eval(devTrees);\n          eval.printSummary();\n          double score = eval.exactNodeAccuracy() * 100.0;\n\n          // output an intermediate model\n          if (modelPath != null) {\n            String tempPath = modelPath;\n            if (modelPath.endsWith(\".ser.gz\")) {\n              tempPath = modelPath.substring(0, modelPath.length() - 7) + \"-\" + FILENAME.format(debugCycle) + \"-\" + NF.format(score) + \".ser.gz\";\n            } else if (modelPath.endsWith(\".gz\")) {\n              tempPath = modelPath.substring(0, modelPath.length() - 3) + \"-\" + FILENAME.format(debugCycle) + \"-\" + NF.format(score) + \".gz\";\n            } else {\n              tempPath = modelPath.substring(0, modelPath.length() - 3) + \"-\" + FILENAME.format(debugCycle) + \"-\" + NF.format(score);\n            }\n            model.saveSerialized(tempPath);\n          }\n\n          ++debugCycle;\n        }\n      }\n      long totalElapsed = timing.report();\n      \n      if (maxTrainTimeMillis > 0 && totalElapsed > maxTrainTimeMillis) {\n        // no need to debug output, we're done now\n        System.err.println(\"Max training time exceeded, exiting\");\n        break;\n      }\n    }    \n  }","id":16540,"modified_method":"public static void train(SentimentModel model, String modelPath, List<Tree> trainingTrees, List<Tree> devTrees) {\n    Timing timing = new Timing();\n    long maxTrainTimeMillis = model.op.trainOptions.maxTrainTimeSeconds * 1000;\n    int debugCycle = 0;\n    double bestAccuracy = 0.0;\n\n    // train using AdaGrad (seemed to work best during the dvparser project)\n    double[] sumGradSquare = new double[model.totalParamSize()];\n    Arrays.fill(sumGradSquare, model.op.trainOptions.initialAdagradWeight);\n    \n    int numBatches = trainingTrees.size() / model.op.trainOptions.batchSize + 1;\n    System.err.println(\"Training on \" + trainingTrees.size() + \" trees in \" + numBatches + \" batches\");\n    System.err.println(\"Times through each training batch: \" + model.op.trainOptions.epochs);\n    for (int epoch = 0; epoch < model.op.trainOptions.epochs; ++epoch) {\n      System.err.println(\"======================================\");\n      System.err.println(\"Starting epoch \" + epoch);\n      if (epoch > 0 && model.op.trainOptions.adagradResetFrequency > 0 && \n          (epoch % model.op.trainOptions.adagradResetFrequency == 0)) {\n        System.err.println(\"Resetting adagrad weights to \" + model.op.trainOptions.initialAdagradWeight);\n        Arrays.fill(sumGradSquare, model.op.trainOptions.initialAdagradWeight);\n      }\n\n      List<Tree> shuffledSentences = Generics.newArrayList(trainingTrees);\n      Collections.shuffle(shuffledSentences, model.rand);\n      for (int batch = 0; batch < numBatches; ++batch) {\n        System.err.println(\"======================================\");\n        System.err.println(\"Epoch \" + epoch + \" batch \" + batch);\n      \n        // Each batch will be of the specified batch size, except the\n        // last batch will include any leftover trees at the end of\n        // the list\n        int startTree = batch * model.op.trainOptions.batchSize;\n        int endTree = (batch + 1) * model.op.trainOptions.batchSize;\n        if (endTree + model.op.trainOptions.batchSize > shuffledSentences.size()) {\n          endTree = shuffledSentences.size();\n        }\n        \n        executeOneTrainingBatch(model, shuffledSentences.subList(startTree, endTree), sumGradSquare);\n\n        long totalElapsed = timing.report();\n        System.err.println(\"Finished epoch \" + epoch + \" batch \" + batch + \"; total training time \" + totalElapsed + \" ms\");\n\n        if (maxTrainTimeMillis > 0 && totalElapsed > maxTrainTimeMillis) {\n          // no need to debug output, we're done now\n          break;\n        }\n\n        if (epoch > 0 && epoch % model.op.trainOptions.debugOutputEpochs == 0) {\n\n          double score = 0.0;\n          if (devTrees != null) {\n            Evaluate eval = new Evaluate(model);\n            eval.eval(devTrees);\n            eval.printSummary();\n            score = eval.exactNodeAccuracy() * 100.0;\n          }\n\n          // output an intermediate model\n          if (modelPath != null) {\n            String tempPath = modelPath;\n            if (modelPath.endsWith(\".ser.gz\")) {\n              tempPath = modelPath.substring(0, modelPath.length() - 7) + \"-\" + FILENAME.format(debugCycle) + \"-\" + NF.format(score) + \".ser.gz\";\n            } else if (modelPath.endsWith(\".gz\")) {\n              tempPath = modelPath.substring(0, modelPath.length() - 3) + \"-\" + FILENAME.format(debugCycle) + \"-\" + NF.format(score) + \".gz\";\n            } else {\n              tempPath = modelPath.substring(0, modelPath.length() - 3) + \"-\" + FILENAME.format(debugCycle) + \"-\" + NF.format(score);\n            }\n            model.saveSerialized(tempPath);\n          }\n\n          ++debugCycle;\n        }\n      }\n      long totalElapsed = timing.report();\n      \n      if (maxTrainTimeMillis > 0 && totalElapsed > maxTrainTimeMillis) {\n        // no need to debug output, we're done now\n        System.err.println(\"Max training time exceeded, exiting\");\n        break;\n      }\n    }    \n  }","commit_id":"44dac18bd16e3a830928b5f39899f9d31d712320","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"public static void train(SentimentModel model, String modelPath, List<Tree> trainingTrees, List<Tree> devTrees) {\n    Timing timing = new Timing();\n    long maxTrainTimeMillis = model.op.trainOptions.maxTrainTimeSeconds * 1000;\n    int debugCycle = 0;\n    double bestAccuracy = 0.0;\n\n    // train using AdaGrad (seemed to work best during the dvparser project)\n    double[] sumGradSquare = new double[model.totalParamSize()];\n    Arrays.fill(sumGradSquare, model.op.trainOptions.initialAdagradWeight);\n    \n    int numBatches = trainingTrees.size() / model.op.trainOptions.batchSize + 1;\n    System.err.println(\"Training on \" + trainingTrees.size() + \" trees in \" + numBatches + \" batches\");\n    System.err.println(\"Times through each training batch: \" + model.op.trainOptions.epochs);\n    for (int epoch = 0; epoch < model.op.trainOptions.epochs; ++epoch) {\n      System.err.println(\"======================================\");\n      System.err.println(\"Starting epoch \" + epoch);\n      if (epoch > 0 && model.op.trainOptions.adagradResetFrequency > 0 && \n          (epoch % model.op.trainOptions.adagradResetFrequency == 0)) {\n        System.err.println(\"Resetting adagrad weights to \" + model.op.trainOptions.initialAdagradWeight);\n        Arrays.fill(sumGradSquare, model.op.trainOptions.initialAdagradWeight);\n      }\n\n      List<Tree> shuffledSentences = Generics.newArrayList(trainingTrees);\n      Collections.shuffle(shuffledSentences, model.rand);\n      for (int batch = 0; batch < numBatches; ++batch) {\n        System.err.println(\"======================================\");\n        System.err.println(\"Epoch \" + epoch + \" batch \" + batch);\n      \n        // Each batch will be of the specified batch size, except the\n        // last batch will include any leftover trees at the end of\n        // the list\n        int startTree = batch * model.op.trainOptions.batchSize;\n        int endTree = (batch + 1) * model.op.trainOptions.batchSize;\n        if (endTree + model.op.trainOptions.batchSize > shuffledSentences.size()) {\n          endTree = shuffledSentences.size();\n        }\n        \n        executeOneTrainingBatch(model, shuffledSentences.subList(startTree, endTree), sumGradSquare);\n\n        long totalElapsed = timing.report();\n        System.err.println(\"Finished epoch \" + epoch + \" batch \" + batch + \"; total training time \" + totalElapsed + \" ms\");\n\n        if (maxTrainTimeMillis > 0 && totalElapsed > maxTrainTimeMillis) {\n          // no need to debug output, we're done now\n          break;\n        }\n\n        if (epoch > 0 && epoch % model.op.trainOptions.debugOutputEpochs == 0) {\n\n          Evaluate eval = new Evaluate(model);\n          eval.eval(devTrees);\n          eval.printSummary();\n          double score = eval.exactNodeAccuracy() * 100.0;\n\n          // output an intermediate model\n          if (modelPath != null) {\n            String tempPath = modelPath;\n            if (modelPath.endsWith(\".ser.gz\")) {\n              tempPath = modelPath.substring(0, modelPath.length() - 7) + \"-\" + FILENAME.format(debugCycle) + \"-\" + NF.format(score) + \".ser.gz\";\n            } else if (modelPath.endsWith(\".gz\")) {\n              tempPath = modelPath.substring(0, modelPath.length() - 3) + \"-\" + FILENAME.format(debugCycle) + \"-\" + NF.format(score) + \".gz\";\n            } else {\n              tempPath = modelPath.substring(0, modelPath.length() - 3) + \"-\" + FILENAME.format(debugCycle) + \"-\" + NF.format(score);\n            }\n            model.saveSerialized(tempPath);\n          }\n\n          ++debugCycle;\n        }\n      }\n      long totalElapsed = timing.report();\n      \n      if (maxTrainTimeMillis > 0 && totalElapsed > maxTrainTimeMillis) {\n        // no need to debug output, we're done now\n        System.err.println(\"Max training time exceeded, exiting\");\n        break;\n      }\n    }    \n  }","id":16541,"modified_method":"public static void train(SentimentModel model, String modelPath, List<Tree> trainingTrees, List<Tree> devTrees) {\n    Timing timing = new Timing();\n    long maxTrainTimeMillis = model.op.trainOptions.maxTrainTimeSeconds * 1000;\n    int debugCycle = 0;\n    double bestAccuracy = 0.0;\n\n    // train using AdaGrad (seemed to work best during the dvparser project)\n    double[] sumGradSquare = new double[model.totalParamSize()];\n    Arrays.fill(sumGradSquare, model.op.trainOptions.initialAdagradWeight);\n    \n    int numBatches = trainingTrees.size() / model.op.trainOptions.batchSize + 1;\n    System.err.println(\"Training on \" + trainingTrees.size() + \" trees in \" + numBatches + \" batches\");\n    System.err.println(\"Times through each training batch: \" + model.op.trainOptions.epochs);\n    for (int epoch = 0; epoch < model.op.trainOptions.epochs; ++epoch) {\n      System.err.println(\"======================================\");\n      System.err.println(\"Starting epoch \" + epoch);\n      if (epoch > 0 && model.op.trainOptions.adagradResetFrequency > 0 && \n          (epoch % model.op.trainOptions.adagradResetFrequency == 0)) {\n        System.err.println(\"Resetting adagrad weights to \" + model.op.trainOptions.initialAdagradWeight);\n        Arrays.fill(sumGradSquare, model.op.trainOptions.initialAdagradWeight);\n      }\n\n      List<Tree> shuffledSentences = Generics.newArrayList(trainingTrees);\n      Collections.shuffle(shuffledSentences, model.rand);\n      for (int batch = 0; batch < numBatches; ++batch) {\n        System.err.println(\"======================================\");\n        System.err.println(\"Epoch \" + epoch + \" batch \" + batch);\n      \n        // Each batch will be of the specified batch size, except the\n        // last batch will include any leftover trees at the end of\n        // the list\n        int startTree = batch * model.op.trainOptions.batchSize;\n        int endTree = (batch + 1) * model.op.trainOptions.batchSize;\n        if (endTree + model.op.trainOptions.batchSize > shuffledSentences.size()) {\n          endTree = shuffledSentences.size();\n        }\n        \n        executeOneTrainingBatch(model, shuffledSentences.subList(startTree, endTree), sumGradSquare);\n\n        long totalElapsed = timing.report();\n        System.err.println(\"Finished epoch \" + epoch + \" batch \" + batch + \"; total training time \" + totalElapsed + \" ms\");\n\n        if (maxTrainTimeMillis > 0 && totalElapsed > maxTrainTimeMillis) {\n          // no need to debug output, we're done now\n          break;\n        }\n\n        if (epoch > 0 && epoch % model.op.trainOptions.debugOutputEpochs == 0) {\n\n          double score = 0.0;\n          if (devTrees != null) {\n            Evaluate eval = new Evaluate(model);\n            eval.eval(devTrees);\n            eval.printSummary();\n            score = eval.exactNodeAccuracy() * 100.0;\n          }\n\n          // output an intermediate model\n          if (modelPath != null) {\n            String tempPath = modelPath;\n            if (modelPath.endsWith(\".ser.gz\")) {\n              tempPath = modelPath.substring(0, modelPath.length() - 7) + \"-\" + FILENAME.format(debugCycle) + \"-\" + NF.format(score) + \".ser.gz\";\n            } else if (modelPath.endsWith(\".gz\")) {\n              tempPath = modelPath.substring(0, modelPath.length() - 3) + \"-\" + FILENAME.format(debugCycle) + \"-\" + NF.format(score) + \".gz\";\n            } else {\n              tempPath = modelPath.substring(0, modelPath.length() - 3) + \"-\" + FILENAME.format(debugCycle) + \"-\" + NF.format(score);\n            }\n            model.saveSerialized(tempPath);\n          }\n\n          ++debugCycle;\n        }\n      }\n      long totalElapsed = timing.report();\n      \n      if (maxTrainTimeMillis > 0 && totalElapsed > maxTrainTimeMillis) {\n        // no need to debug output, we're done now\n        System.err.println(\"Max training time exceeded, exiting\");\n        break;\n      }\n    }    \n  }","commit_id":"0fa45de729441240384dc044b989aa97e39a6220","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"public static void main(String[] args) {\n    RNNOptions op = new RNNOptions();\n\n    String trainPath = \"sentimentTreesDebug.txt\";\n    String devPath = null;\n\n    boolean runGradientCheck = false;\n    boolean runTraining = false;\n\n    boolean filterNeutral = false;\n\n    String modelPath = null;\n\n    for (int argIndex = 0; argIndex < args.length; ) {\n      if (args[argIndex].equalsIgnoreCase(\"-train\")) {\n        runTraining = true;\n        argIndex++;\n      } else if (args[argIndex].equalsIgnoreCase(\"-gradientcheck\")) {\n        runGradientCheck = true;\n        argIndex++;\n      } else if (args[argIndex].equalsIgnoreCase(\"-trainpath\")) {\n        trainPath = args[argIndex + 1];\n        argIndex += 2;\n      } else if (args[argIndex].equalsIgnoreCase(\"-devpath\")) {\n        devPath = args[argIndex + 1];\n        argIndex += 2;\n      } else if (args[argIndex].equalsIgnoreCase(\"-model\")) {\n        modelPath = args[argIndex + 1];\n        argIndex += 2;\n      } else if (args[argIndex].equalsIgnoreCase(\"-filterNeutral\")) {\n        filterNeutral = true;\n        argIndex++;\n      } else {\n        int newArgIndex = op.setOption(args, argIndex);\n        if (newArgIndex == argIndex) {\n          throw new IllegalArgumentException(\"Unknown argument \" + args[argIndex]);\n        }\n        argIndex = newArgIndex;\n      }\n    }\n\n    // read in the trees\n    List<Tree> trainingTrees = SentimentUtils.readTreesWithGoldLabels(trainPath);\n    System.err.println(\"Read in \" + trainingTrees.size() + \" training trees\");\n    List<Tree> devTrees = SentimentUtils.readTreesWithGoldLabels(devPath);\n    System.err.println(\"Read in \" + devTrees.size() + \" dev trees\");\n\n    if (filterNeutral) {\n      Filter<Tree> neutralFilter = new Filter<Tree>() {\n        public boolean accept(Tree tree) {\n          int gold = RNNCoreAnnotations.getGoldClass(tree);\n          return gold != 2;\n        }\n      };\n      trainingTrees = CollectionUtils.filterAsList(trainingTrees, neutralFilter);\n      devTrees = CollectionUtils.filterAsList(devTrees, neutralFilter);\n      System.err.println(\"Filtered training trees: \" + trainingTrees.size());\n      System.err.println(\"Filtered dev trees: \" + devTrees.size());\n    }\n\n    // TODO: binarize the trees, then collapse the unary chains.\n    // Collapsed unary chains always have the label of the top node in\n    // the chain\n    // Note: the sentiment training data already has this done.\n    // However, when we handle trees given to us from the Stanford Parser,\n    // we will have to perform this step\n\n    // build an unitialized SentimentModel from the binary productions\n    System.err.println(\"Sentiment model options:\\n\" + op);\n    SentimentModel model = new SentimentModel(op, trainingTrees);\n\n    // TODO: need to handle unk rules somehow... at test time the tree\n    // structures might have something that we never saw at training\n    // time.  for example, we could put a threshold on all of the\n    // rules at training time and anything that doesn't meet that\n    // threshold goes into the unk.  perhaps we could also use some\n    // component of the accepted training rules to build up the \"unk\"\n    // parameter in case there are no rules that don't meet the\n    // threshold\n    \n    if (runGradientCheck) {\n      runGradientCheck(model, trainingTrees);\n    }\n\n    if (runTraining) {\n      train(model, modelPath, trainingTrees, devTrees);\n      model.saveSerialized(modelPath);\n    }\n  }","id":16542,"modified_method":"public static void main(String[] args) {\n    RNNOptions op = new RNNOptions();\n\n    String trainPath = \"sentimentTreesDebug.txt\";\n    String devPath = null;\n\n    boolean runGradientCheck = false;\n    boolean runTraining = false;\n\n    boolean filterNeutral = false;\n\n    String modelPath = null;\n\n    for (int argIndex = 0; argIndex < args.length; ) {\n      if (args[argIndex].equalsIgnoreCase(\"-train\")) {\n        runTraining = true;\n        argIndex++;\n      } else if (args[argIndex].equalsIgnoreCase(\"-gradientcheck\")) {\n        runGradientCheck = true;\n        argIndex++;\n      } else if (args[argIndex].equalsIgnoreCase(\"-trainpath\")) {\n        trainPath = args[argIndex + 1];\n        argIndex += 2;\n      } else if (args[argIndex].equalsIgnoreCase(\"-devpath\")) {\n        devPath = args[argIndex + 1];\n        argIndex += 2;\n      } else if (args[argIndex].equalsIgnoreCase(\"-model\")) {\n        modelPath = args[argIndex + 1];\n        argIndex += 2;\n      } else if (args[argIndex].equalsIgnoreCase(\"-filterNeutral\")) {\n        filterNeutral = true;\n        argIndex++;\n      } else {\n        int newArgIndex = op.setOption(args, argIndex);\n        if (newArgIndex == argIndex) {\n          throw new IllegalArgumentException(\"Unknown argument \" + args[argIndex]);\n        }\n        argIndex = newArgIndex;\n      }\n    }\n\n    // read in the trees\n    List<Tree> trainingTrees = SentimentUtils.readTreesWithGoldLabels(trainPath);\n    System.err.println(\"Read in \" + trainingTrees.size() + \" training trees\");\n    if (filterNeutral) {\n      trainingTrees = CollectionUtils.filterAsList(trainingTrees, NEUTRAL_FILTER);\n      System.err.println(\"Filtered training trees: \" + trainingTrees.size());\n    }\n\n    List<Tree> devTrees = null;\n    if (devPath != null) {\n      devTrees = SentimentUtils.readTreesWithGoldLabels(devPath);\n      System.err.println(\"Read in \" + devTrees.size() + \" dev trees\");\n      if (filterNeutral) {\n        devTrees = CollectionUtils.filterAsList(devTrees, NEUTRAL_FILTER);\n        System.err.println(\"Filtered dev trees: \" + devTrees.size());\n      }\n    }\n\n    // TODO: binarize the trees, then collapse the unary chains.\n    // Collapsed unary chains always have the label of the top node in\n    // the chain\n    // Note: the sentiment training data already has this done.\n    // However, when we handle trees given to us from the Stanford Parser,\n    // we will have to perform this step\n\n    // build an unitialized SentimentModel from the binary productions\n    System.err.println(\"Sentiment model options:\\n\" + op);\n    SentimentModel model = new SentimentModel(op, trainingTrees);\n\n    // TODO: need to handle unk rules somehow... at test time the tree\n    // structures might have something that we never saw at training\n    // time.  for example, we could put a threshold on all of the\n    // rules at training time and anything that doesn't meet that\n    // threshold goes into the unk.  perhaps we could also use some\n    // component of the accepted training rules to build up the \"unk\"\n    // parameter in case there are no rules that don't meet the\n    // threshold\n    \n    if (runGradientCheck) {\n      runGradientCheck(model, trainingTrees);\n    }\n\n    if (runTraining) {\n      train(model, modelPath, trainingTrees, devTrees);\n      model.saveSerialized(modelPath);\n    }\n  }","commit_id":"0fa45de729441240384dc044b989aa97e39a6220","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"public Sequence eval(Sequence[] args, Sequence contextSequence)\n\t\tthrows XPathException {\n        \n        if (args.length == 0)\n            throw new XPathException(\"Expected a collection as the first argument.\");\n        \n        // If the incoming is a collection object, use it:\n        Collection collection = null;\n        Object o = args[0].itemAt(0);\n        if (o instanceof JavaObjectValue) {\n            o = ((JavaObjectValue) o).getObject();\n            if (o instanceof Collection)\n                collection = (Collection) o;\n        } \n        \n        if (collection == null) {\n            // Otherwise, just extract the name as a string:\n            String collectionURI = args[0].getStringValue();\n            try {\n                collection = new LocalCollection(context.getUser(), context.getBroker().getBrokerPool(), collectionURI);\n                collection.getName();\n            } catch (XMLDBException xe) {\n                XPathException xpe = new  XPathException(\"Could not locate collection \"+collectionURI);\n                xpe.initCause(xe);\n                throw xpe;\n            }\n        }\n\t\n        return  evalWithCollection(collection, args, contextSequence);\n\t}","id":16543,"modified_method":"public Sequence eval(Sequence[] args, Sequence contextSequence)\n\t\tthrows XPathException {\n        \n        if (0 == args.length)\n            throw new XPathException(\"Expected a collection as the first argument.\");\n        \n        boolean collectionNeedsClose = true;\n        \n        // If the incoming is a collection object, use it:\n        Collection collection = null;\n        Object o = args[0].itemAt(0);\n        if (o instanceof JavaObjectValue) {\n            o = ((JavaObjectValue) o).getObject();\n            if (o instanceof Collection)\n                collection = (Collection) o;\n        } \n        \n        if (null == collection) {\n            // Otherwise, just extract the name as a string:\n            String collectionURI = args[0].getStringValue();\n            if (null != collectionURI) {\n                try {\n                    java.net.URI uri = new java.net.URI(collectionURI);\n                    if (null == uri.getScheme()) {\n                        // Must be a LOCAL collection\n                        collection = new LocalCollection(context.getUser(), context.getBroker().getBrokerPool(), collectionURI);\n                        collection.getName();\n                    } else {\n                        // Right now, the collection is retrieved as GUEST. Need to figure out how to\n                        // get user information into the URL?\n                        collection = org.xmldb.api.DatabaseManager.getCollection(collectionURI);\n                    }\n                } catch (java.net.URISyntaxException use) {\n                    throw new XPathException(getASTNode(), \"Could not parse URI: \"+collectionURI, use);\n                } catch (XMLDBException xe) {\n                    throw new XPathException(getASTNode(), \"Could not locate collection: \"+collectionURI, xe);\n                }\n            }\n            if (null == collection) {\n                throw new XPathException(getASTNode(), \"Unable to find collection: \"+collectionURI);\n            }\n        } else {\n            // Don't close incoming JavaObjects:\n            collectionNeedsClose = false;\n        }\n        \n        Sequence s = Sequence.EMPTY_SEQUENCE;\n        try {\n            s = evalWithCollection(collection, args, contextSequence);\n        } finally {\n            if (collectionNeedsClose)\n                try { collection.close(); } catch (Exception e) { throw new XPathException(getASTNode(), \"Unable to close collection\", e); }\n        }\n        return s;\n\t}","commit_id":"fb3c48464d48ff6792bcac52b791d59b248a9818","url":"https://github.com/eXist-db/exist"},{"original_method":"public Sequence eval(\n\t\tSequence args[],\n\t\tSequence contextSequence)\n\t\tthrows XPathException {\n\t\tString collectionURI = args[0].getStringValue();\n\t\tCollection collection = null;\n\t\ttry {\n\t\t\tcollection = DatabaseManager.getCollection(collectionURI);\n\t\t} catch (XMLDBException e) {\n\t\t    LOG.debug(e.getMessage(), e);\n\t\t\tthrow new XPathException(getASTNode(), \n\t\t\t\t\"exception while retrieving collection: \" + e.getMessage(), e);\n\t\t}\n\t\treturn (null == collection) ? BooleanValue.FALSE : BooleanValue.TRUE;\n\t}","id":16544,"modified_method":"public Sequence eval(\n\t\tSequence args[],\n\t\tSequence contextSequence)\n\t\tthrows XPathException {\n\t\tString collectionURI = args[0].getStringValue();\n\t\tCollection collection = null;\n\t\ttry {\n\t\t\tcollection = DatabaseManager.getCollection(collectionURI);\n\t\t} catch (XMLDBException e) {\n\t\t    LOG.debug(e.getMessage(), e);\n\t\t\tthrow new XPathException(getASTNode(), \n\t\t\t\t\"exception while retrieving collection: \" + e.getMessage(), e);\n        } finally {\n            if (null != collection)\n                try { collection.close(); } catch (Exception e) { throw new XPathException(getASTNode(), \"Unable to close collection\", e); }\n\t\t}\n\t\treturn (null == collection) ? BooleanValue.FALSE : BooleanValue.TRUE;\n\t}","commit_id":"fb3c48464d48ff6792bcac52b791d59b248a9818","url":"https://github.com/eXist-db/exist"},{"original_method":"public Sequence eval(Sequence args[], Sequence contextSequence)\n\t\t\tthrows XPathException {\n\n        String user = args[0].getStringValue();\n        String pass = args[1].getStringValue();\n        String group = args[2].getStringValue();\n        User userObj = new User(user, pass, group);\n        \n        LOG.info(\"Attempting to create user \"+user+\" in group \"+group);\n        \n        Sequence otherGroups = args[3];\n        int len = otherGroups.getLength();\n        for (int x = 0; x < len; x++)\n            userObj.addGroup(otherGroups.itemAt(x).getStringValue());\n        \n\t\ttry {\n            Collection collection = new LocalCollection(context.getUser(), context.getBroker().getBrokerPool(), \"/db\");\n\t\t\tUserManagementService ums = (UserManagementService) collection.getService(\"UserManagementService\", \"1.0\");\n\t\t\tums.addUser(userObj);\n\t\t} catch (XMLDBException xe) {\n\t\t\tthrow new XPathException(getASTNode(), \"Failed to create new user \" + user, xe);\n\t\t}\n        return Sequence.EMPTY_SEQUENCE;\n\t}","id":16545,"modified_method":"public Sequence eval(Sequence args[], Sequence contextSequence)\n\t\t\tthrows XPathException {\n\n        String user = args[0].getStringValue();\n        String pass = args[1].getStringValue();\n        String group = args[2].getStringValue();\n        User userObj = new User(user, pass, group);\n        \n        LOG.info(\"Attempting to create user \"+user+\" in group \"+group);\n        \n        Sequence otherGroups = args[3];\n        int len = otherGroups.getLength();\n        for (int x = 0; x < len; x++)\n            userObj.addGroup(otherGroups.itemAt(x).getStringValue());\n        \n        Collection collection = null;\n\t\ttry {\n            collection = new LocalCollection(context.getUser(), context.getBroker().getBrokerPool(), \"/db\");\n\t\t\tUserManagementService ums = (UserManagementService) collection.getService(\"UserManagementService\", \"1.0\");\n\t\t\tums.addUser(userObj);\n\t\t} catch (XMLDBException xe) {\n\t\t\tthrow new XPathException(getASTNode(), \"Failed to create new user \" + user, xe);\n        } finally {\n            if (null != collection)\n                try { collection.close(); } catch (XMLDBException e) { /* ignore */ }\n\t\t}\n        return Sequence.EMPTY_SEQUENCE;\n\t}","commit_id":"fb3c48464d48ff6792bcac52b791d59b248a9818","url":"https://github.com/eXist-db/exist"},{"original_method":"public Sequence eval(Sequence args[], Sequence contextSequence)\n\t\t\tthrows XPathException {\n\n        String user = args[0].getStringValue();\n        \n\t\ttry {\n            Collection collection = new LocalCollection(context.getUser(), context.getBroker().getBrokerPool(), \"/db\");\n\t\t\tUserManagementService ums = (UserManagementService) collection.getService(\"UserManagementService\", \"1.0\");\n            User userObj = ums.getUser(user);\n\t\t\tums.removeUser(userObj);\n\t\t} catch (XMLDBException xe) {\n\t\t\tthrow new XPathException(getASTNode(), \"Failed to create new user \" + user, xe);\n\t\t}\n        return Sequence.EMPTY_SEQUENCE;\n\t}","id":16546,"modified_method":"public Sequence eval(Sequence args[], Sequence contextSequence)\n\t\t\tthrows XPathException {\n\n        String user = args[0].getStringValue();\n        \n        Collection collection = null;\n\t\ttry {\n            collection = new LocalCollection(context.getUser(), context.getBroker().getBrokerPool(), \"/db\");\n\t\t\tUserManagementService ums = (UserManagementService) collection.getService(\"UserManagementService\", \"1.0\");\n            User userObj = ums.getUser(user);\n            if (null != userObj)\n                ums.removeUser(userObj);\n\t\t} catch (XMLDBException xe) {\n\t\t\tthrow new XPathException(getASTNode(), \"Failed to remove user \" + user, xe);\n        } finally {\n            if (null != collection)\n                try { collection.close(); } catch (XMLDBException e) { /* ignore */ }\n\t\t}\n        return Sequence.EMPTY_SEQUENCE;\n\t}","commit_id":"fb3c48464d48ff6792bcac52b791d59b248a9818","url":"https://github.com/eXist-db/exist"},{"original_method":"public Sequence evalWithCollection(Collection collection, Sequence[] args, Sequence contextSequence)\n\t\tthrows XPathException {\n\n        try {\n            UserManagementService ums = (UserManagementService) collection.getService(\"UserManagementService\", \"1.0\");\n            ums.setPermissions(collection, new Permission(args[1].getStringValue(), args[2].getStringValue(), ((IntegerValue) args[3].convertTo(Type.INTEGER)).getInt()));\n        } catch (XMLDBException xe) {\n            throw new XPathException(getASTNode(), \"Unable to change collection permissions\", xe);\n        }\n\n\t\treturn Sequence.EMPTY_SEQUENCE;\n\t}","id":16547,"modified_method":"public Sequence evalWithCollection(Collection collection, Sequence[] args, Sequence contextSequence)\n\t\tthrows XPathException {\n\n        try {\n            UserManagementService ums = (UserManagementService) collection.getService(\"UserManagementService\", \"1.0\");\n            String user = args[1].getStringValue();\n            String group = args[2].getStringValue();\n            int mode = ((IntegerValue) args[3].convertTo(Type.INTEGER)).getInt();\n            \n            if (null == user || 0 == user.length())\n                throw new XPathException(getASTNode(), \"Needs a valid user name, not: \"+user);\n            if (null == group || 0 == group.length())\n                throw new XPathException(getASTNode(), \"Needs a valid group name, not: \"+group);\n\n            // Must actually get a User object for the Permission...\n            Permission p = new Permission(user, group, mode);\n            User u = ums.getUser(user);\n            if (null == u)\n                throw new XPathException(getASTNode(), \"Needs a valid user name, not: \"+user);\n            p.setOwner(u);\n            \n            ums.setPermissions(collection, p);\n        } catch (XMLDBException xe) {\n            throw new XPathException(getASTNode(), \"Unable to change collection permissions\", xe);\n        }\n\n\t\treturn Sequence.EMPTY_SEQUENCE;\n\t}","commit_id":"fb3c48464d48ff6792bcac52b791d59b248a9818","url":"https://github.com/eXist-db/exist"},{"original_method":"public Sequence evalWithCollection(Collection collection, Sequence[] args, Sequence contextSequence)\n\t\tthrows XPathException {\n\n        try {\n            Resource res = collection.getResource(args[1].getStringValue());\n            if (res != null) {\n                UserManagementService ums = (UserManagementService) collection.getService(\"UserManagementService\", \"1.0\");\n                ums.setPermissions(res, new Permission(args[2].getStringValue(), args[3].getStringValue(), ((IntegerValue) args[4].convertTo(Type.INTEGER)).getInt()));\n            } else {\n                throw new XPathException(getASTNode(), \"Unable to locate resource \"+args[1].getStringValue());\n            }\n        } catch (XMLDBException xe) {\n            throw new XPathException(getASTNode(), \"Unable to change resource permissions\", xe);\n        }\n\n\t\treturn Sequence.EMPTY_SEQUENCE;\n\t}","id":16548,"modified_method":"public Sequence evalWithCollection(Collection collection, Sequence[] args, Sequence contextSequence)\n\t\tthrows XPathException {\n\n        try {\n            Resource res = collection.getResource(args[1].getStringValue());\n            if (res != null) {\n                UserManagementService ums = (UserManagementService) collection.getService(\"UserManagementService\", \"1.0\");\n                String user = args[2].getStringValue();\n                String group = args[3].getStringValue();\n                int mode = ((IntegerValue) args[4].convertTo(Type.INTEGER)).getInt();\n                \n                if (null == user || 0 == user.length())\n                    throw new XPathException(getASTNode(), \"Needs a valid user name, not: \"+user);\n                if (null == group || 0 == group.length())\n                    throw new XPathException(getASTNode(), \"Needs a valid group name, not: \"+group);\n    \n                // Must actually get a User object for the Permission...\n                Permission p = new Permission(user, group, mode);\n                User u = ums.getUser(user);\n                if (null == u)\n                    throw new XPathException(getASTNode(), \"Needs a valid user name, not: \"+user);\n                p.setOwner(u);\n                \n                ums.setPermissions(res, p);\n            } else {\n                throw new XPathException(getASTNode(), \"Unable to locate resource \"+args[1].getStringValue());\n            }\n        } catch (XMLDBException xe) {\n            throw new XPathException(getASTNode(), \"Unable to change resource permissions\", xe);\n        }\n\n\t\treturn Sequence.EMPTY_SEQUENCE;\n\t}","commit_id":"fb3c48464d48ff6792bcac52b791d59b248a9818","url":"https://github.com/eXist-db/exist"},{"original_method":"public HGlossaryEntry getEntryById(Long id)\n   {\n      // TODO can't we just use Session.load() ?\n      return (HGlossaryEntry) getSession().createCriteria(HGlossaryEntry.class).add(Restrictions.naturalId().set(\"id\", id)).setCacheable(true).setComment(\"GlossaryDAO.getEntryById\").uniqueResult();\n   }","id":16549,"modified_method":"public HGlossaryEntry getEntryById(Long id)\n   {\n      // TODO can't we just use Session.load() ?\n      Criteria cr = getSession().createCriteria(HGlossaryEntry.class);\n      cr.add(Restrictions.naturalId().set(\"id\", id));\n      cr.setCacheable(true).setComment(\"GlossaryDAO.getEntryById\");\n      return (HGlossaryEntry) cr.uniqueResult();\n   }","commit_id":"88880401378e18f4abaa5f7d30f2b10e556dda4c","url":"https://github.com/zanata/zanata-server"},{"original_method":"public HLocale findByLocaleId(LocaleId locale)\n   {\n      return (HLocale) getSession().createCriteria(HLocale.class).add(Restrictions.naturalId().set(\"localeId\", locale)).setCacheable(true).uniqueResult();\n   }","id":16550,"modified_method":"public HLocale findByLocaleId(LocaleId locale)\n   {\n      Criteria cr = getSession().createCriteria(HLocale.class);\n      cr.add(Restrictions.naturalId().set(\"localeId\", locale));\n      cr.setCacheable(true);\n      return (HLocale) cr.uniqueResult();\n   }","commit_id":"88880401378e18f4abaa5f7d30f2b10e556dda4c","url":"https://github.com/zanata/zanata-server"},{"original_method":"@Override\n   protected HIterationProject loadInstance()\n   {\n      Session session = (Session) getEntityManager().getDelegate();\n      return (HIterationProject) session.createCriteria(getEntityClass()).add(Restrictions.naturalId().set(\"slug\", getSlug())).setCacheable(true).uniqueResult();\n   }","id":16551,"modified_method":"@Override\n   protected HIterationProject loadInstance()\n   {\n      Session session = (Session) getEntityManager().getDelegate();\n      Criteria cr = session.createCriteria(getEntityClass());\n      cr.add(Restrictions.naturalId().set(\"slug\", getSlug()));\n      cr.setCacheable(true);\n      return (HIterationProject) cr.uniqueResult();\n   }","commit_id":"88880401378e18f4abaa5f7d30f2b10e556dda4c","url":"https://github.com/zanata/zanata-server"},{"original_method":"@Override\n   protected HIterationGroup loadInstance()\n   {\n      Session session = (Session) getEntityManager().getDelegate();\n      return (HIterationGroup) session.createCriteria(getEntityClass()).add(Restrictions.naturalId().set(\"slug\", getSlug())).setCacheable(true).uniqueResult();\n   }","id":16552,"modified_method":"@Override\n   protected HIterationGroup loadInstance()\n   {\n      Session session = (Session) getEntityManager().getDelegate();\n      Criteria cr = session.createCriteria(getEntityClass());\n      cr.add(Restrictions.naturalId().set(\"slug\", getSlug()));\n      cr.setCacheable(true);\n      return (HIterationGroup) cr.uniqueResult();\n   }","commit_id":"88880401378e18f4abaa5f7d30f2b10e556dda4c","url":"https://github.com/zanata/zanata-server"},{"original_method":"protected static DDMBeanTranslator getDDMBeanTranslator() {\n\t\treturn _instance._serviceTracker.getService();\n\t}","id":16553,"modified_method":"protected static DDMBeanTranslator getDDMBeanTranslator() {\n\t\treturn _serviceTracker.getService();\n\t}","commit_id":"5d9666921f1685697a7874e092dcd9b6069e9a62","url":"https://github.com/liferay/liferay-portal"},{"original_method":"@Override\n\t\tpublic void removedService(\n\t\t\tServiceReference<DDMDisplay> serviceReference,\n\t\t\tDDMDisplay ddmDisplay) {\n\n\t\t\tRegistry registry = RegistryUtil.getRegistry();\n\n\t\t\tregistry.ungetService(serviceReference);\n\n\t\t\t_ddmDisplays.remove(ddmDisplay.getPortletId());\n\t\t}","id":16554,"modified_method":"@Override\n\t\tpublic void removedService(\n\t\t\tServiceReference<DDMDisplay> serviceReference,\n\t\t\tDDMDisplay ddmDisplay) {\n\n\t\t\t_bundleContext.ungetService(serviceReference);\n\n\t\t\t_ddmDisplays.remove(ddmDisplay.getPortletId());\n\t\t}","commit_id":"5d9666921f1685697a7874e092dcd9b6069e9a62","url":"https://github.com/liferay/liferay-portal"},{"original_method":"private void _register(DDMDisplay ddmDisplay) {\n\t\tRegistry registry = RegistryUtil.getRegistry();\n\n\t\tServiceRegistration<DDMDisplay> serviceRegistration =\n\t\t\tregistry.registerService(DDMDisplay.class, ddmDisplay);\n\n\t\t_serviceRegistrations.put(ddmDisplay, serviceRegistration);\n\t}","id":16555,"modified_method":"private void _register(DDMDisplay ddmDisplay) {\n\t\tServiceRegistration<DDMDisplay> serviceRegistration =\n\t\t\t_bundleContext.registerService(DDMDisplay.class, ddmDisplay, null);\n\n\t\t_serviceRegistrations.put(ddmDisplay, serviceRegistration);\n\t}","commit_id":"5d9666921f1685697a7874e092dcd9b6069e9a62","url":"https://github.com/liferay/liferay-portal"},{"original_method":"@Override\n\t\tpublic DDMDisplay addingService(\n\t\t\tServiceReference<DDMDisplay> serviceReference) {\n\n\t\t\tRegistry registry = RegistryUtil.getRegistry();\n\n\t\t\tDDMDisplay ddmDisplay = registry.getService(serviceReference);\n\n\t\t\t_ddmDisplays.put(ddmDisplay.getPortletId(), ddmDisplay);\n\n\t\t\treturn ddmDisplay;\n\t\t}","id":16556,"modified_method":"@Override\n\t\tpublic DDMDisplay addingService(\n\t\t\tServiceReference<DDMDisplay> serviceReference) {\n\n\t\t\tDDMDisplay ddmDisplay = _bundleContext.getService(serviceReference);\n\n\t\t\t_ddmDisplays.put(ddmDisplay.getPortletId(), ddmDisplay);\n\n\t\t\treturn ddmDisplay;\n\t\t}","commit_id":"5d9666921f1685697a7874e092dcd9b6069e9a62","url":"https://github.com/liferay/liferay-portal"},{"original_method":"private DDMDisplayRegistryUtil() {\n\t\tRegistry registry = RegistryUtil.getRegistry();\n\n\t\t_serviceTracker = registry.trackServices(\n\t\t\tDDMDisplay.class, new DDMDisplayServiceTrackerCustomizer());\n\n\t\t_serviceTracker.open();\n\t}","id":16557,"modified_method":"private DDMDisplayRegistryUtil() {\n\t\tBundle bundle = FrameworkUtil.getBundle(DDMDisplayRegistryUtil.class);\n\n\t\t_bundleContext = bundle.getBundleContext();\n\n\t\t_serviceTracker = new ServiceTracker<>(\n\t\t\t_bundleContext, DDMDisplay.class,\n\t\t\tnew DDMDisplayServiceTrackerCustomizer());\n\n\t\t_serviceTracker.open();\n\t}","commit_id":"5d9666921f1685697a7874e092dcd9b6069e9a62","url":"https://github.com/liferay/liferay-portal"},{"original_method":"@Override\n\t\tpublic void removedService(\n\t\t\tServiceReference<DDMFormFieldRenderer> serviceReference,\n\t\t\tDDMFormFieldRenderer ddmFormFieldRenderer) {\n\n\t\t\tRegistry registry = RegistryUtil.getRegistry();\n\n\t\t\tregistry.ungetService(serviceReference);\n\n\t\t\tfor (String supportedDDMFormFieldType :\n\t\t\t\t\tddmFormFieldRenderer.getSupportedDDMFormFieldTypes()) {\n\n\t\t\t\tList<DDMFormFieldRenderer> ddmFormFieldRenderers =\n\t\t\t\t\t_ddmFormFieldRenderersMap.get(supportedDDMFormFieldType);\n\n\t\t\t\tif (ddmFormFieldRenderers == null) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tddmFormFieldRenderers.remove(ddmFormFieldRenderer);\n\t\t\t}\n\t\t}","id":16558,"modified_method":"@Override\n\t\tpublic void removedService(\n\t\t\tServiceReference<DDMFormFieldRenderer> serviceReference,\n\t\t\tDDMFormFieldRenderer ddmFormFieldRenderer) {\n\n\t\t\t_bundleContext.ungetService(serviceReference);\n\n\t\t\tfor (String supportedDDMFormFieldType :\n\t\t\t\t\tddmFormFieldRenderer.getSupportedDDMFormFieldTypes()) {\n\n\t\t\t\tList<DDMFormFieldRenderer> ddmFormFieldRenderers =\n\t\t\t\t\t_ddmFormFieldRenderersMap.get(supportedDDMFormFieldType);\n\n\t\t\t\tif (ddmFormFieldRenderers == null) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tddmFormFieldRenderers.remove(ddmFormFieldRenderer);\n\t\t\t}\n\t\t}","commit_id":"5d9666921f1685697a7874e092dcd9b6069e9a62","url":"https://github.com/liferay/liferay-portal"},{"original_method":"@Override\n\t\tpublic DDMFormFieldRenderer addingService(\n\t\t\tServiceReference<DDMFormFieldRenderer> serviceReference) {\n\n\t\t\tRegistry registry = RegistryUtil.getRegistry();\n\n\t\t\tDDMFormFieldRenderer ddmFormFieldRenderer = registry.getService(\n\t\t\t\tserviceReference);\n\n\t\t\tfor (String supportedDDMFormFieldType :\n\t\t\t\t\tddmFormFieldRenderer.getSupportedDDMFormFieldTypes()) {\n\n\t\t\t\tList<DDMFormFieldRenderer> ddmFormFieldRenderers =\n\t\t\t\t\t_ddmFormFieldRenderersMap.get(supportedDDMFormFieldType);\n\n\t\t\t\tif (ddmFormFieldRenderers == null) {\n\t\t\t\t\tddmFormFieldRenderers = new ArrayList<>();\n\n\t\t\t\t\t_ddmFormFieldRenderersMap.put(\n\t\t\t\t\t\tsupportedDDMFormFieldType, ddmFormFieldRenderers);\n\t\t\t\t}\n\n\t\t\t\tddmFormFieldRenderers.add(ddmFormFieldRenderer);\n\t\t\t}\n\n\t\t\treturn ddmFormFieldRenderer;\n\t\t}","id":16559,"modified_method":"@Override\n\t\tpublic DDMFormFieldRenderer addingService(\n\t\t\tServiceReference<DDMFormFieldRenderer> serviceReference) {\n\n\t\t\tDDMFormFieldRenderer ddmFormFieldRenderer =\n\t\t\t\t_bundleContext.getService(serviceReference);\n\n\t\t\tfor (String supportedDDMFormFieldType :\n\t\t\t\t\tddmFormFieldRenderer.getSupportedDDMFormFieldTypes()) {\n\n\t\t\t\tList<DDMFormFieldRenderer> ddmFormFieldRenderers =\n\t\t\t\t\t_ddmFormFieldRenderersMap.get(supportedDDMFormFieldType);\n\n\t\t\t\tif (ddmFormFieldRenderers == null) {\n\t\t\t\t\tddmFormFieldRenderers = new ArrayList<>();\n\n\t\t\t\t\t_ddmFormFieldRenderersMap.put(\n\t\t\t\t\t\tsupportedDDMFormFieldType, ddmFormFieldRenderers);\n\t\t\t\t}\n\n\t\t\t\tddmFormFieldRenderers.add(ddmFormFieldRenderer);\n\t\t\t}\n\n\t\t\treturn ddmFormFieldRenderer;\n\t\t}","commit_id":"5d9666921f1685697a7874e092dcd9b6069e9a62","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void setDefaultDDMFormFieldRenderer(\n\t\tDDMFormFieldRenderer ddmFormFieldRenderer) {\n\n\t\tRegistry registry = RegistryUtil.getRegistry();\n\n\t\tServiceRegistration<DDMFormFieldRenderer> serviceRegistration =\n\t\t\tregistry.registerService(\n\t\t\t\tDDMFormFieldRenderer.class, ddmFormFieldRenderer);\n\n\t\t_serviceRegistrations.put(ddmFormFieldRenderer, serviceRegistration);\n\t}","id":16560,"modified_method":"public void setDefaultDDMFormFieldRenderer(\n\t\tDDMFormFieldRenderer ddmFormFieldRenderer) {\n\n\t\tServiceRegistration<DDMFormFieldRenderer> serviceRegistration =\n\t\t\t_bundleContext.registerService(\n\t\t\t\tDDMFormFieldRenderer.class, ddmFormFieldRenderer, null);\n\n\t\t_serviceRegistrations.put(ddmFormFieldRenderer, serviceRegistration);\n\t}","commit_id":"5d9666921f1685697a7874e092dcd9b6069e9a62","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public DDMFormFieldRendererRegistryImpl() {\n\t\tRegistry registry = RegistryUtil.getRegistry();\n\n\t\tClass<?> clazz = getClass();\n\n\t\tFilter filter = registry.getFilter(\n\t\t\t\"(&(objectClass=\" + DDMFormFieldRenderer.class.getName() +\n\t\t\t\t\")(!(objectClass=\" + clazz.getName() + \")))\");\n\n\t\t_serviceTracker = registry.trackServices(\n\t\t\tfilter, new DDMFormFieldRendererServiceTrackerCustomizer());\n\n\t\t_serviceTracker.open();\n\t}","id":16561,"modified_method":"public DDMFormFieldRendererRegistryImpl() {\n\t\tClass<?> clazz = getClass();\n\n\t\tBundle bundle = FrameworkUtil.getBundle(clazz);\n\n\t\t_bundleContext = bundle.getBundleContext();\n\n\t\tFilter filter = null;\n\n\t\ttry {\n\t\t\tfilter = FrameworkUtil.createFilter(\n\t\t\t\t\"(&(objectClass=\" + DDMFormFieldRenderer.class.getName() +\n\t\t\t\t\")(!(objectClass=\" + clazz.getName() + \")))\");\n\t\t}\n\t\tcatch (InvalidSyntaxException ex) {\n\t\t}\n\n\t\t_serviceTracker = new ServiceTracker<>(\n\t\t\t_bundleContext, filter,\n\t\t\tnew DDMFormFieldRendererServiceTrackerCustomizer());\n\n\t\t_serviceTracker.open();\n\t}","commit_id":"5d9666921f1685697a7874e092dcd9b6069e9a62","url":"https://github.com/liferay/liferay-portal"},{"original_method":"@Override\n\t\tpublic DDMFormFieldValueRenderer addingService(\n\t\t\tServiceReference<DDMFormFieldValueRenderer> serviceReference) {\n\n\t\t\tRegistry registry = RegistryUtil.getRegistry();\n\n\t\t\tDDMFormFieldValueRenderer ddmFormFieldValueRenderer =\n\t\t\t\tregistry.getService(serviceReference);\n\n\t\t\tString supportedDDMFormFieldType =\n\t\t\t\tddmFormFieldValueRenderer.getSupportedDDMFormFieldType();\n\n\t\t\tList<DDMFormFieldValueRenderer> ddmFormFieldValueRenderers =\n\t\t\t\t_ddmFormFieldValueRenderersMap.get(supportedDDMFormFieldType);\n\n\t\t\tif (ddmFormFieldValueRenderers == null) {\n\t\t\t\tddmFormFieldValueRenderers = new ArrayList<>();\n\n\t\t\t\t_ddmFormFieldValueRenderersMap.put(\n\t\t\t\t\tsupportedDDMFormFieldType, ddmFormFieldValueRenderers);\n\t\t\t}\n\n\t\t\tddmFormFieldValueRenderers.add(ddmFormFieldValueRenderer);\n\n\t\t\treturn ddmFormFieldValueRenderer;\n\t\t}","id":16562,"modified_method":"@Override\n\t\tpublic DDMFormFieldValueRenderer addingService(\n\t\t\tServiceReference<DDMFormFieldValueRenderer> serviceReference) {\n\n\t\t\tDDMFormFieldValueRenderer ddmFormFieldValueRenderer =\n\t\t\t\t_bundleContext.getService(serviceReference);\n\n\t\t\tString supportedDDMFormFieldType =\n\t\t\t\tddmFormFieldValueRenderer.getSupportedDDMFormFieldType();\n\n\t\t\tList<DDMFormFieldValueRenderer> ddmFormFieldValueRenderers =\n\t\t\t\t_ddmFormFieldValueRenderersMap.get(supportedDDMFormFieldType);\n\n\t\t\tif (ddmFormFieldValueRenderers == null) {\n\t\t\t\tddmFormFieldValueRenderers = new ArrayList<>();\n\n\t\t\t\t_ddmFormFieldValueRenderersMap.put(\n\t\t\t\t\tsupportedDDMFormFieldType, ddmFormFieldValueRenderers);\n\t\t\t}\n\n\t\t\tddmFormFieldValueRenderers.add(ddmFormFieldValueRenderer);\n\n\t\t\treturn ddmFormFieldValueRenderer;\n\t\t}","commit_id":"5d9666921f1685697a7874e092dcd9b6069e9a62","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public DDMFormFieldValueRendererRegistryImpl() {\n\t\tRegistry registry = RegistryUtil.getRegistry();\n\n\t\tClass<?> clazz = getClass();\n\n\t\tFilter filter = registry.getFilter(\n\t\t\t\"(&(objectClass=\" + DDMFormFieldValueRenderer.class.getName() +\n\t\t\t\t\")(!(objectClass=\" + clazz.getName() + \")))\");\n\n\t\t_serviceTracker = registry.trackServices(\n\t\t\tfilter, new DDMFormFieldValueRendererServiceTrackerCustomizer());\n\n\t\t_serviceTracker.open();\n\t}","id":16563,"modified_method":"public DDMFormFieldValueRendererRegistryImpl() {\n\t\tClass<?> clazz = getClass();\n\n\t\tBundle bundle = FrameworkUtil.getBundle(clazz);\n\n\t\t_bundleContext = bundle.getBundleContext();\n\n\t\tFilter filter = null;\n\n\t\ttry {\n\t\t\tfilter = FrameworkUtil.createFilter(\n\t\t\t\t\"(&(objectClass=\" + DDMFormFieldValueRenderer.class.getName() +\n\t\t\t\t\")(!(objectClass=\" + clazz.getName() + \")))\");\n\t\t}\n\t\tcatch (InvalidSyntaxException ex) {\n\t\t}\n\n\t\t_serviceTracker = new ServiceTracker<>(\n\t\t\t_bundleContext, filter,\n\t\t\tnew DDMFormFieldValueRendererServiceTrackerCustomizer());\n\n\t\t_serviceTracker.open();\n\t}","commit_id":"5d9666921f1685697a7874e092dcd9b6069e9a62","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void setDefaultDDMFormFieldValueRenderers(\n\t\tList<DDMFormFieldValueRenderer> ddmFormFieldValueRenderers) {\n\n\t\tRegistry registry = RegistryUtil.getRegistry();\n\n\t\tfor (DDMFormFieldValueRenderer ddmFormFieldValueRenderer :\n\t\t\t\tddmFormFieldValueRenderers) {\n\n\t\t\tregistry.registerService(\n\t\t\t\tDDMFormFieldValueRenderer.class, ddmFormFieldValueRenderer);\n\t\t}\n\t}","id":16564,"modified_method":"public void setDefaultDDMFormFieldValueRenderers(\n\t\tList<DDMFormFieldValueRenderer> ddmFormFieldValueRenderers) {\n\n\t\tfor (DDMFormFieldValueRenderer ddmFormFieldValueRenderer :\n\t\t\t\tddmFormFieldValueRenderers) {\n\n\t\t\t_bundleContext.registerService(\n\t\t\t\tDDMFormFieldValueRenderer.class, ddmFormFieldValueRenderer,\n\t\t\t\tnull);\n\t\t}\n\t}","commit_id":"5d9666921f1685697a7874e092dcd9b6069e9a62","url":"https://github.com/liferay/liferay-portal"},{"original_method":"@Override\n\t\tpublic void removedService(\n\t\t\tServiceReference<DDMFormFieldValueRenderer> serviceReference,\n\t\t\tDDMFormFieldValueRenderer ddmFormFieldValueRenderer) {\n\n\t\t\tRegistry registry = RegistryUtil.getRegistry();\n\n\t\t\tregistry.ungetService(serviceReference);\n\n\t\t\tString supportedDDMFormFieldType =\n\t\t\t\tddmFormFieldValueRenderer.getSupportedDDMFormFieldType();\n\n\t\t\tList<DDMFormFieldValueRenderer> ddmFormFieldValueRenderers =\n\t\t\t\t_ddmFormFieldValueRenderersMap.get(supportedDDMFormFieldType);\n\n\t\t\tif (ddmFormFieldValueRenderers == null) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tddmFormFieldValueRenderers.remove(ddmFormFieldValueRenderer);\n\t\t}","id":16565,"modified_method":"@Override\n\t\tpublic void removedService(\n\t\t\tServiceReference<DDMFormFieldValueRenderer> serviceReference,\n\t\t\tDDMFormFieldValueRenderer ddmFormFieldValueRenderer) {\n\n\t\t\t_bundleContext.ungetService(serviceReference);\n\n\t\t\tString supportedDDMFormFieldType =\n\t\t\t\tddmFormFieldValueRenderer.getSupportedDDMFormFieldType();\n\n\t\t\tList<DDMFormFieldValueRenderer> ddmFormFieldValueRenderers =\n\t\t\t\t_ddmFormFieldValueRenderersMap.get(supportedDDMFormFieldType);\n\n\t\t\tif (ddmFormFieldValueRenderers == null) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tddmFormFieldValueRenderers.remove(ddmFormFieldValueRenderer);\n\t\t}","commit_id":"5d9666921f1685697a7874e092dcd9b6069e9a62","url":"https://github.com/liferay/liferay-portal"},{"original_method":"@Override\n\t\tpublic void removedService(\n\t\t\tServiceReference<StorageAdapter> serviceReference,\n\t\t\tStorageAdapter storageAdapter) {\n\n\t\t\tRegistry registry = RegistryUtil.getRegistry();\n\n\t\t\tregistry.ungetService(serviceReference);\n\t\t}","id":16566,"modified_method":"@Override\n\t\tpublic void removedService(\n\t\t\tServiceReference<StorageAdapter> serviceReference,\n\t\t\tStorageAdapter storageAdapter) {\n\n\t\t\t_bundleContext.ungetService(serviceReference);\n\t\t}","commit_id":"5d9666921f1685697a7874e092dcd9b6069e9a62","url":"https://github.com/liferay/liferay-portal"},{"original_method":"@Override\n\t\tpublic StorageAdapter addingService(\n\t\t\tServiceReference<StorageAdapter> serviceReference) {\n\n\t\t\tRegistry registry = RegistryUtil.getRegistry();\n\n\t\t\tStorageAdapter storageAdapter = registry.getService(\n\t\t\t\tserviceReference);\n\n\t\t\t_storageAdaptersMap.put(\n\t\t\t\tstorageAdapter.getStorageType(), storageAdapter);\n\n\t\t\treturn storageAdapter;\n\t\t}","id":16567,"modified_method":"@Override\n\t\tpublic StorageAdapter addingService(\n\t\t\tServiceReference<StorageAdapter> serviceReference) {\n\n\t\t\tStorageAdapter storageAdapter = _bundleContext.getService(\n\t\t\t\tserviceReference);\n\n\t\t\t_storageAdaptersMap.put(\n\t\t\t\tstorageAdapter.getStorageType(), storageAdapter);\n\n\t\t\treturn storageAdapter;\n\t\t}","commit_id":"5d9666921f1685697a7874e092dcd9b6069e9a62","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public StorageAdapterRegistryImpl() {\n\t\tRegistry registry = RegistryUtil.getRegistry();\n\n\t\tClass<?> clazz = getClass();\n\n\t\tFilter filter = registry.getFilter(\n\t\t\t\"(&(objectClass=\" + StorageAdapter.class.getName() +\n\t\t\t\t\")(!(objectClass=\" + clazz.getName() + \")))\");\n\n\t\t_serviceTracker = registry.trackServices(\n\t\t\tfilter, new StorageAdapterServiceTrackerCustomizer());\n\n\t\t_serviceTracker.open();\n\t}","id":16568,"modified_method":"public StorageAdapterRegistryImpl() {\n\t\tClass<?> clazz = getClass();\n\n\t\tBundle bundle = FrameworkUtil.getBundle(clazz);\n\n\t\t_bundleContext = bundle.getBundleContext();\n\n\t\tFilter filter = null;\n\n\t\ttry {\n\t\t\tfilter = FrameworkUtil.createFilter(\n\t\t\t\t\"(&(objectClass=\" + StorageAdapter.class.getName() +\n\t\t\t\t\")(!(objectClass=\" + clazz.getName() + \")))\");\n\t\t}\n\t\tcatch (InvalidSyntaxException ex) {\n\t\t}\n\n\t\t_serviceTracker = new ServiceTracker<>(\n\t\t\t_bundleContext, filter,\n\t\t\tnew StorageAdapterServiceTrackerCustomizer());\n\n\t\t_serviceTracker.open();\n\t}","commit_id":"5d9666921f1685697a7874e092dcd9b6069e9a62","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void setStorageAdapters(List<StorageAdapter> storageAdapters) {\n\t\tRegistry registry = RegistryUtil.getRegistry();\n\n\t\tfor (StorageAdapter storageAdapter : storageAdapters) {\n\t\t\tregistry.registerService(StorageAdapter.class, storageAdapter);\n\t\t}\n\t}","id":16569,"modified_method":"public void setStorageAdapters(List<StorageAdapter> storageAdapters) {\n\t\tfor (StorageAdapter storageAdapter : storageAdapters) {\n\t\t\t_bundleContext.registerService(\n\t\t\t\tStorageAdapter.class, storageAdapter, null);\n\t\t}\n\t}","commit_id":"5d9666921f1685697a7874e092dcd9b6069e9a62","url":"https://github.com/liferay/liferay-portal"},{"original_method":"@SafeVarargs\n    private final void addFiltered( Collection<StorageCommand> target, Mode mode,\n                                    Collection<? extends Command>... commands )\n    {\n        for ( Collection<? extends Command> c : commands )\n        {\n            for ( Command command : c )\n            {\n                if ( command.getMode() == mode )\n                {\n                    target.add( command );\n                }\n            }\n        }\n    }","id":16570,"modified_method":"@SafeVarargs\n    private final void addFiltered( Collection<StorageCommand> target, Mode mode,\n                                    Command[]... commands )\n    {\n        for ( Command[] c : commands )\n        {\n            for ( Command command : c )\n            {\n                if ( command.getMode() == mode )\n                {\n                    target.add( command );\n                }\n            }\n        }\n    }","commit_id":"19a81a160e939543dd534e973861432d973343a9","url":"https://github.com/neo4j/neo4j"},{"original_method":"@Override\n    public void extractCommands( Collection<StorageCommand> commands ) throws TransactionFailureException\n    {\n    \tassert !prepared : \"Transaction has already been prepared\";\n\n        integrityValidator.validateTransactionStartKnowledge( lastCommittedTxWhenTransactionStarted );\n\n        int noOfCommands = recordChangeSet.changeSize() +\n                           (neoStoreRecord != null ? neoStoreRecord.changeSize() : 0);\n\n        for ( RecordProxy<Integer, LabelTokenRecord, Void> record : recordChangeSet.getLabelTokenChanges().changes() )\n        {\n            commands.add( new Command.LabelTokenCommand( record.getBefore(), record.forReadingLinkage() ) );\n        }\n        for ( RecordProxy<Integer, RelationshipTypeTokenRecord, Void> record :\n            recordChangeSet.getRelationshipTypeTokenChanges().changes() )\n        {\n            commands.add( new Command.RelationshipTypeTokenCommand( record.getBefore(), record.forReadingLinkage() ) );\n        }\n        for ( RecordProxy<Integer, PropertyKeyTokenRecord, Void> record :\n            recordChangeSet.getPropertyKeyTokenChanges().changes() )\n        {\n            commands.add( new Command.PropertyKeyTokenCommand( record.getBefore(), record.forReadingLinkage() ) );\n        }\n\n        // Collect nodes, relationships, properties\n        List<Command> nodeCommands = new ArrayList<>( recordChangeSet.getNodeRecords().changeSize() );\n        for ( RecordProxy<Long, NodeRecord, Void> change : recordChangeSet.getNodeRecords().changes() )\n        {\n            NodeRecord record = change.forReadingLinkage();\n            integrityValidator.validateNodeRecord( record );\n            nodeCommands.add( new Command.NodeCommand( change.getBefore(), record ) );\n        }\n        Collections.sort( nodeCommands, COMMAND_SORTER );\n\n        List<Command> relCommands = new ArrayList<>( recordChangeSet.getRelRecords().changeSize() );\n        for ( RecordProxy<Long, RelationshipRecord, Void> change : recordChangeSet.getRelRecords().changes() )\n        {\n            relCommands.add( new Command.RelationshipCommand( change.getBefore(), change.forReadingLinkage() ) );\n        }\n        Collections.sort( relCommands, COMMAND_SORTER );\n\n        List<Command> propCommands = new ArrayList<>( recordChangeSet.getPropertyRecords().changeSize() );\n        for ( RecordProxy<Long, PropertyRecord, PrimitiveRecord> change :\n            recordChangeSet.getPropertyRecords().changes() )\n        {\n            propCommands.add( new Command.PropertyCommand( change.getBefore(), change.forReadingLinkage() ) );\n        }\n        Collections.sort( propCommands, COMMAND_SORTER );\n\n        List<Command> relGroupCommands = new ArrayList<>( recordChangeSet.getRelGroupRecords().changeSize() );\n        for ( RecordProxy<Long, RelationshipGroupRecord, Integer> change :\n            recordChangeSet.getRelGroupRecords().changes() )\n        {\n            relGroupCommands.add( new Command.RelationshipGroupCommand( change.getBefore(), change.forReadingData() ) );\n        }\n        Collections.sort( relGroupCommands, COMMAND_SORTER );\n\n        addFiltered( commands, Mode.CREATE, propCommands, relCommands, relGroupCommands, nodeCommands );\n        addFiltered( commands, Mode.UPDATE, propCommands, relCommands, relGroupCommands, nodeCommands );\n        addFiltered( commands, Mode.DELETE, propCommands, relCommands, relGroupCommands, nodeCommands );\n\n        if ( neoStoreRecord != null )\n        {\n            for ( RecordProxy<Long,NeoStoreRecord, Void> change : neoStoreRecord.changes() )\n            {\n                commands.add( new Command.NeoStoreCommand( change.getBefore(), change.forReadingData() ) );\n            }\n        }\n        for ( RecordProxy<Long, Collection<DynamicRecord>, SchemaRule> change :\n            recordChangeSet.getSchemaRuleChanges().changes() )\n        {\n            integrityValidator.validateSchemaRule( change.getAdditionalData() );\n            commands.add( new Command.SchemaRuleCommand(\n                    change.getBefore(), change.forChangingData(), change.getAdditionalData() ) );\n        }\n        assert commands.size() == noOfCommands : \"Expected \" + noOfCommands + \" final commands, got \"\n                + commands.size() + \" instead\";\n\n        prepared = true;\n    }","id":16571,"modified_method":"@Override\n    public void extractCommands( Collection<StorageCommand> commands ) throws TransactionFailureException\n    {\n    \tassert !prepared : \"Transaction has already been prepared\";\n\n        integrityValidator.validateTransactionStartKnowledge( lastCommittedTxWhenTransactionStarted );\n\n        int noOfCommands = recordChangeSet.changeSize() +\n                           (neoStoreRecord != null ? neoStoreRecord.changeSize() : 0);\n\n        for ( RecordProxy<Integer, LabelTokenRecord, Void> record : recordChangeSet.getLabelTokenChanges().changes() )\n        {\n            commands.add( new Command.LabelTokenCommand( record.getBefore(), record.forReadingLinkage() ) );\n        }\n        for ( RecordProxy<Integer, RelationshipTypeTokenRecord, Void> record :\n            recordChangeSet.getRelationshipTypeTokenChanges().changes() )\n        {\n            commands.add( new Command.RelationshipTypeTokenCommand( record.getBefore(), record.forReadingLinkage() ) );\n        }\n        for ( RecordProxy<Integer, PropertyKeyTokenRecord, Void> record :\n            recordChangeSet.getPropertyKeyTokenChanges().changes() )\n        {\n            commands.add( new Command.PropertyKeyTokenCommand( record.getBefore(), record.forReadingLinkage() ) );\n        }\n\n        // Collect nodes, relationships, properties\n        Command[] nodeCommands = EMPTY_COMMANDS;\n        if ( recordChangeSet.getNodeRecords().changeSize() > 0 )\n        {\n            nodeCommands = new Command[recordChangeSet.getNodeRecords().changeSize()];\n            int i = 0;\n            for ( RecordProxy<Long, NodeRecord, Void> change : recordChangeSet.getNodeRecords().changes() )\n            {\n                NodeRecord record = change.forReadingLinkage();\n                integrityValidator.validateNodeRecord( record );\n                nodeCommands[i++] = new Command.NodeCommand( change.getBefore(), record );\n            }\n            Arrays.sort( nodeCommands, COMMAND_SORTER );\n        }\n\n        Command[] relCommands = EMPTY_COMMANDS;\n        if ( recordChangeSet.getRelRecords().changeSize() > 0 )\n        {\n            relCommands = new Command[recordChangeSet.getRelRecords().changeSize()];\n            int i = 0;\n            for ( RecordProxy<Long, RelationshipRecord, Void> change : recordChangeSet.getRelRecords().changes() )\n            {\n                relCommands[i++] = new Command.RelationshipCommand( change.getBefore(), change.forReadingLinkage() );\n            }\n            Arrays.sort( relCommands, COMMAND_SORTER );\n        }\n\n        Command[] propCommands = EMPTY_COMMANDS;\n        if ( recordChangeSet.getPropertyRecords().changeSize() > 0 )\n        {\n            propCommands = new Command[recordChangeSet.getPropertyRecords().changeSize()];\n            int i = 0;\n            for ( RecordProxy<Long, PropertyRecord, PrimitiveRecord> change :\n                recordChangeSet.getPropertyRecords().changes() )\n            {\n                propCommands[i++] = new Command.PropertyCommand( change.getBefore(), change.forReadingLinkage() );\n            }\n            Arrays.sort( propCommands, COMMAND_SORTER );\n        }\n\n        Command[] relGroupCommands = EMPTY_COMMANDS;\n        if ( recordChangeSet.getRelGroupRecords().changeSize() > 0 )\n        {\n            relGroupCommands = new Command[recordChangeSet.getRelGroupRecords().changeSize()];\n            int i = 0;\n            for ( RecordProxy<Long, RelationshipGroupRecord, Integer> change :\n                recordChangeSet.getRelGroupRecords().changes() )\n            {\n                relGroupCommands[i++] =\n                        new Command.RelationshipGroupCommand( change.getBefore(), change.forReadingData() );\n            }\n            Arrays.sort( relGroupCommands, COMMAND_SORTER );\n        }\n\n        addFiltered( commands, Mode.CREATE, propCommands, relCommands, relGroupCommands, nodeCommands );\n        addFiltered( commands, Mode.UPDATE, propCommands, relCommands, relGroupCommands, nodeCommands );\n        addFiltered( commands, Mode.DELETE, propCommands, relCommands, relGroupCommands, nodeCommands );\n\n        if ( neoStoreRecord != null )\n        {\n            for ( RecordProxy<Long,NeoStoreRecord, Void> change : neoStoreRecord.changes() )\n            {\n                commands.add( new Command.NeoStoreCommand( change.getBefore(), change.forReadingData() ) );\n            }\n        }\n        for ( RecordProxy<Long, Collection<DynamicRecord>, SchemaRule> change :\n            recordChangeSet.getSchemaRuleChanges().changes() )\n        {\n            integrityValidator.validateSchemaRule( change.getAdditionalData() );\n            commands.add( new Command.SchemaRuleCommand(\n                    change.getBefore(), change.forChangingData(), change.getAdditionalData() ) );\n        }\n        assert commands.size() == noOfCommands : \"Expected \" + noOfCommands + \" final commands, got \"\n                + commands.size() + \" instead\";\n\n        prepared = true;\n    }","commit_id":"19a81a160e939543dd534e973861432d973343a9","url":"https://github.com/neo4j/neo4j"},{"original_method":"private TransactionRecordState injectAllPossibleCommands()\n    {\n        RecordChangeSet recordChangeSet = mock( RecordChangeSet.class );\n\n        RecordChanges<Integer,LabelTokenRecord,Void> labelTokenChanges = mock( RecordChanges.class );\n        RecordChanges<Integer,RelationshipTypeTokenRecord,Void> relationshipTypeTokenChanges =\n                mock( RecordChanges.class );\n        RecordChanges<Integer,PropertyKeyTokenRecord,Void> propertyKeyTokenChanges = mock( RecordChanges.class );\n        RecordChanges<Long,NodeRecord,Void> nodeRecordChanges = mock( RecordChanges.class );\n        RecordChanges<Long,RelationshipRecord,Void> relationshipRecordChanges = mock( RecordChanges.class );\n        RecordChanges<Long,PropertyRecord,PrimitiveRecord> propertyRecordChanges = mock( RecordChanges.class );\n        RecordChanges<Long,RelationshipGroupRecord,Integer> relationshipGroupChanges = mock( RecordChanges.class );\n        RecordChanges<Long,Collection<DynamicRecord>,SchemaRule> schemaRuleChanges = mock( RecordChanges.class );\n\n        when( recordChangeSet.getLabelTokenChanges() ).thenReturn( labelTokenChanges );\n        when( recordChangeSet.getRelationshipTypeTokenChanges() ).thenReturn( relationshipTypeTokenChanges );\n        when( recordChangeSet.getPropertyKeyTokenChanges() ).thenReturn( propertyKeyTokenChanges );\n        when( recordChangeSet.getNodeRecords() ).thenReturn( nodeRecordChanges );\n        when( recordChangeSet.getRelRecords() ).thenReturn( relationshipRecordChanges );\n        when( recordChangeSet.getPropertyRecords() ).thenReturn( propertyRecordChanges );\n        when( recordChangeSet.getRelGroupRecords() ).thenReturn( relationshipGroupChanges );\n        when( recordChangeSet.getSchemaRuleChanges() ).thenReturn( schemaRuleChanges );\n\n        List<RecordProxy<Long,NodeRecord,Void>> nodeChanges = new LinkedList<>();\n\n        RecordChange<Long,NodeRecord,Void> deletedNode = mock( RecordChange.class );\n        when( deletedNode.getBefore() ).thenReturn( inUseNode() );\n        when( deletedNode.forReadingLinkage() ).thenReturn( missingNode() );\n        nodeChanges.add( deletedNode );\n\n        RecordChange<Long,NodeRecord,Void> createdNode = mock( RecordChange.class );\n        when( createdNode.getBefore() ).thenReturn( missingNode() );\n        when( createdNode.forReadingLinkage() ).thenReturn( createdNode() );\n        nodeChanges.add( createdNode );\n\n        RecordChange<Long,NodeRecord,Void> updatedNode = mock( RecordChange.class );\n        when( updatedNode.getBefore() ).thenReturn( inUseNode() );\n        when( updatedNode.forReadingLinkage() ).thenReturn( inUseNode() );\n        nodeChanges.add( updatedNode );\n\n        when( nodeRecordChanges.changes() ).thenReturn( nodeChanges );\n        when( nodeRecordChanges.changeSize() ).thenReturn( 3 );\n\n        when( labelTokenChanges.changes() )\n                .thenReturn( Collections.<RecordProxy<Integer,LabelTokenRecord,Void>>emptyList() );\n        when( relationshipTypeTokenChanges.changes() ).thenReturn(\n                Collections.<RecordProxy<Integer,RelationshipTypeTokenRecord,Void>>emptyList() );\n        when( propertyKeyTokenChanges.changes() )\n                .thenReturn( Collections.<RecordProxy<Integer,PropertyKeyTokenRecord,Void>>emptyList() );\n        when( relationshipRecordChanges.changes() )\n                .thenReturn( Collections.<RecordProxy<Long,RelationshipRecord,Void>>emptyList() );\n        when( propertyRecordChanges.changes() )\n                .thenReturn( Collections.<RecordProxy<Long,PropertyRecord,PrimitiveRecord>>emptyList() );\n        when( relationshipGroupChanges.changes() ).thenReturn(\n                Collections.<RecordProxy<Long,RelationshipGroupRecord,Integer>>emptyList() );\n        when( schemaRuleChanges.changes() ).thenReturn(\n                Collections.<RecordProxy<Long,Collection<DynamicRecord>,SchemaRule>>emptyList() );\n\n        return new TransactionRecordState( mock( NeoStores.class ), mock( IntegrityValidator.class ), recordChangeSet,\n                0, null, null, null, null, null );\n    }","id":16572,"modified_method":"private TransactionRecordState injectAllPossibleCommands()\n    {\n        RecordChangeSet recordChangeSet = mock( RecordChangeSet.class );\n\n        RecordChanges<Integer,LabelTokenRecord,Void> labelTokenChanges = mock( RecordChanges.class );\n        RecordChanges<Integer,RelationshipTypeTokenRecord,Void> relationshipTypeTokenChanges =\n                mock( RecordChanges.class );\n        RecordChanges<Integer,PropertyKeyTokenRecord,Void> propertyKeyTokenChanges = mock( RecordChanges.class );\n        RecordChanges<Long,NodeRecord,Void> nodeRecordChanges = mock( RecordChanges.class );\n        RecordChanges<Long,RelationshipRecord,Void> relationshipRecordChanges = mock( RecordChanges.class );\n        RecordChanges<Long,PropertyRecord,PrimitiveRecord> propertyRecordChanges = mock( RecordChanges.class );\n        RecordChanges<Long,RelationshipGroupRecord,Integer> relationshipGroupChanges = mock( RecordChanges.class );\n        RecordChanges<Long,Collection<DynamicRecord>,SchemaRule> schemaRuleChanges = mock( RecordChanges.class );\n\n        when( recordChangeSet.getLabelTokenChanges() ).thenReturn( labelTokenChanges );\n        when( recordChangeSet.getRelationshipTypeTokenChanges() ).thenReturn( relationshipTypeTokenChanges );\n        when( recordChangeSet.getPropertyKeyTokenChanges() ).thenReturn( propertyKeyTokenChanges );\n        when( recordChangeSet.getNodeRecords() ).thenReturn( nodeRecordChanges );\n        when( recordChangeSet.getRelRecords() ).thenReturn( relationshipRecordChanges );\n        when( recordChangeSet.getPropertyRecords() ).thenReturn( propertyRecordChanges );\n        when( recordChangeSet.getRelGroupRecords() ).thenReturn( relationshipGroupChanges );\n        when( recordChangeSet.getSchemaRuleChanges() ).thenReturn( schemaRuleChanges );\n\n        List<RecordProxy<Long,NodeRecord,Void>> nodeChanges = new LinkedList<>();\n\n        RecordChange<Long,NodeRecord,Void> deletedNode = mock( RecordChange.class );\n        when( deletedNode.getBefore() ).thenReturn( inUseNode() );\n        when( deletedNode.forReadingLinkage() ).thenReturn( missingNode() );\n        nodeChanges.add( deletedNode );\n\n        RecordChange<Long,NodeRecord,Void> createdNode = mock( RecordChange.class );\n        when( createdNode.getBefore() ).thenReturn( missingNode() );\n        when( createdNode.forReadingLinkage() ).thenReturn( createdNode() );\n        nodeChanges.add( createdNode );\n\n        RecordChange<Long,NodeRecord,Void> updatedNode = mock( RecordChange.class );\n        when( updatedNode.getBefore() ).thenReturn( inUseNode() );\n        when( updatedNode.forReadingLinkage() ).thenReturn( inUseNode() );\n        nodeChanges.add( updatedNode );\n\n        when( nodeRecordChanges.changes() ).thenReturn( nodeChanges );\n        when( nodeRecordChanges.changeSize() ).thenReturn( 3 );\n        when( recordChangeSet.changeSize() ).thenReturn( 3 );\n\n        when( labelTokenChanges.changes() )\n                .thenReturn( Collections.<RecordProxy<Integer,LabelTokenRecord,Void>>emptyList() );\n        when( relationshipTypeTokenChanges.changes() ).thenReturn(\n                Collections.<RecordProxy<Integer,RelationshipTypeTokenRecord,Void>>emptyList() );\n        when( propertyKeyTokenChanges.changes() )\n                .thenReturn( Collections.<RecordProxy<Integer,PropertyKeyTokenRecord,Void>>emptyList() );\n        when( relationshipRecordChanges.changes() )\n                .thenReturn( Collections.<RecordProxy<Long,RelationshipRecord,Void>>emptyList() );\n        when( propertyRecordChanges.changes() )\n                .thenReturn( Collections.<RecordProxy<Long,PropertyRecord,PrimitiveRecord>>emptyList() );\n        when( relationshipGroupChanges.changes() ).thenReturn(\n                Collections.<RecordProxy<Long,RelationshipGroupRecord,Integer>>emptyList() );\n        when( schemaRuleChanges.changes() ).thenReturn(\n                Collections.<RecordProxy<Long,Collection<DynamicRecord>,SchemaRule>>emptyList() );\n\n        return new TransactionRecordState( mock( NeoStores.class ), mock( IntegrityValidator.class ), recordChangeSet,\n                0, null, null, null, null, null );\n    }","commit_id":"19a81a160e939543dd534e973861432d973343a9","url":"https://github.com/neo4j/neo4j"},{"original_method":"private void innerHandleMethodGET(URI uri, HTTPRequest httprequest, ToadletContext ctx, int recursion) \n\t\t\tthrows ToadletContextClosedException, IOException, RedirectException {\n\n\t\tString ks = uri.getPath();\n\t\t\n\t\tif (ks.equals(\"/\")) {\n\t\t\tif (httprequest.isParameterSet(\"key\")) {\n\t\t\t\tString k = httprequest.getParam(\"key\");\n\t\t\t\tFreenetURI newURI;\n\t\t\t\ttry {\n\t\t\t\t\tnewURI = new FreenetURI(k);\n\t\t\t\t} catch (MalformedURLException e) {\n\t\t\t\t\tLogger.normal(this, \"Invalid key: \"+e+\" for \"+k, e);\n\t\t\t\t\tsendErrorPage(ctx, 404, l10n(\"notFoundTitle\"), NodeL10n.getBase().getString(\"FProxyToadlet.invalidKeyWithReason\", new String[] { \"reason\" }, new String[] { e.toString() }));\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif(logMINOR) Logger.minor(this, \"Redirecting to FreenetURI: \"+newURI);\n\t\t\t\tString requestedMimeType = httprequest.getParam(\"type\");\n\t\t\t\tlong maxSize = httprequest.getLongParam(\"max-size\", MAX_LENGTH);\n\t\t\t\tString location = getLink(newURI, requestedMimeType, maxSize, httprequest.getParam(\"force\", null), httprequest.isParameterSet(\"forcedownload\"));\n\t\t\t\twriteTemporaryRedirect(ctx, null, location);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t\n\t\t\ttry {\n\t\t\t\tString querystring = uri.getQuery();\n\t\t\t\t\n\t\t\t\tif (querystring == null) {\n\t\t\t\t\tthrow new RedirectException(welcome);\n\t\t\t\t} else {\n\t\t\t\t\t// TODP possibly a proper URLEncode method\n\t\t\t\t\tquerystring = querystring.replace(' ', '+');\n\t\t\t\t\tthrow new RedirectException(\"/welcome/?\" + querystring);\n\t\t\t\t}\n\t\t\t} catch (URISyntaxException e) {\n\t\t\t\t// HUH!?!\n\t\t\t}\n\t\t}else if(ks.equals(\"/favicon.ico\")){\n\t\t\tbyte[] buf = new byte[1024];\n\t\t\tint len;\n\t\t\tInputStream strm = getClass().getResourceAsStream(\"staticfiles/favicon.ico\");\n\t\t\t\n\t\t\ttry {\n\t\t\t\tif (strm == null) {\n\t\t\t\t\tthis.sendErrorPage(ctx, 404, l10n(\"pathNotFoundTitle\"), l10n(\"pathNotFound\"));\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tctx.sendReplyHeaders(200, \"OK\", null, \"image/x-icon\", strm.available());\n\t\t\t\t\n\t\t\t\twhile ( (len = strm.read(buf)) > 0) {\n\t\t\t\t\tctx.writeData(buf, 0, len);\n\t\t\t\t}\n\t\t\t} finally {\n\t\t\t\tstrm.close();\n\t\t\t}\n\t\t\treturn;\n\t\t} else if(ks.startsWith(\"/feed/\") || ks.equals(\"/feed\")) {\n\t\t\t//TODO Better way to find the host. Find if https is used?\n\t\t\tString host = ctx.getHeaders().get(\"host\");\n\t\t\tString atom = core.alerts.getAtom(\"http://\" + host);\n\t\t\tbyte[] buf = atom.getBytes(\"UTF-8\");\n\t\t\tctx.sendReplyHeaders(200, \"OK\", null, \"application/atom+xml\", buf.length);\n\t\t\tctx.writeData(buf, 0, buf.length);\n\t\t\treturn;\n\t\t}else if(ks.equals(\"/robots.txt\") && ctx.doRobots()){\n\t\t\tthis.writeTextReply(ctx, 200, \"Ok\", \"User-agent: *\\nDisallow: /\");\n\t\t\treturn;\n\t\t}else if(ks.startsWith(\"/darknet/\") || ks.equals(\"/darknet\")) { //TODO (pre-build 1045 url format) remove when obsolete\n\t\t\twritePermanentRedirect(ctx, \"obsoleted\", \"/friends/\");\n\t\t\treturn;\n\t\t}else if(ks.startsWith(\"/opennet/\") || ks.equals(\"/opennet\")) { //TODO (pre-build 1045 url format) remove when obsolete\n\t\t\twritePermanentRedirect(ctx, \"obsoleted\", \"/strangers/\");\n\t\t\treturn;\n\t\t} else if(ks.startsWith(\"/queue/\")) {\n\t\t\twritePermanentRedirect(ctx, \"obsoleted\", \"/downloads/\");\n\t\t\treturn;\n\t\t} else if(ks.startsWith(\"/config/\")) {\n\t\t\twritePermanentRedirect(ctx, \"obsoleted\", \"/config/node\");\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tif(ks.startsWith(\"/\"))\n\t\t\tks = ks.substring(1);\n\t\t\n\t\tlong maxSize;\n\t\t\n\t\tboolean restricted = (container.publicGatewayMode() && !ctx.isAllowedFullAccess());\n\t\t\n\t\tif(restricted)\n\t\t\tmaxSize = MAX_LENGTH;\n\t\telse \n\t\t\tmaxSize = httprequest.getLongParam(\"max-size\", MAX_LENGTH);\n\n\t\t//first check of httprange before get\n\t\t// only valid number format is checked here\n\t\tString rangeStr = ctx.getHeaders().get(\"range\");\n\t\tif (rangeStr != null) {\n\t\t\ttry {\n\t\t\t\tparseRange(rangeStr);\n\t\t\t} catch (HTTPRangeException e) {\n\t\t\t\tLogger.normal(this, \"Invalid Range Header: \"+rangeStr, e);\n\t\t\t\tctx.sendReplyHeaders(416, \"Requested Range Not Satisfiable\", null, null, 0);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\t\n\t\tFreenetURI key;\n\t\ttry {\n\t\t\tkey = new FreenetURI(ks);\n\t\t} catch (MalformedURLException e) {\n\t\t\tPageNode page = ctx.getPageMaker().getPageNode(l10n(\"invalidKeyTitle\"), ctx);\n\t\t\tHTMLNode pageNode = page.outer;\n\t\t\tHTMLNode contentNode = page.content;\n\n\t\t\tHTMLNode errorInfobox = contentNode.addChild(\"div\", \"class\", \"infobox infobox-error\");\n\t\t\terrorInfobox.addChild(\"div\", \"class\", \"infobox-header\", NodeL10n.getBase().getString(\"FProxyToadlet.invalidKeyWithReason\", new String[] { \"reason\" }, new String[] { e.toString() }));\n\t\t\tHTMLNode errorContent = errorInfobox.addChild(\"div\", \"class\", \"infobox-content\");\n\t\t\terrorContent.addChild(\"#\", l10n(\"expectedKeyButGot\"));\n\t\t\terrorContent.addChild(\"code\", ks);\n\t\t\terrorContent.addChild(\"br\");\n\t\t\terrorContent.addChild(ctx.getPageMaker().createBackLink(ctx, l10n(\"goBack\")));\n\t\t\terrorContent.addChild(\"br\");\n\t\t\taddHomepageLink(errorContent);\n\n\t\t\tthis.writeHTMLReply(ctx, 400, l10n(\"invalidKeyTitle\"), pageNode.generate());\n\t\t\treturn;\n\t\t}\n\n\t\tFetchContext fctx = getFetchContext(maxSize);\n\n\t\t//We should run the ContentFilter by default\n\t\tString forceString = httprequest.getParam(\"force\");\n\t\tlong now = System.currentTimeMillis();\n\t\tboolean force = false;\n\t\tif(forceString != null) {\n\t\t\tif(forceString.equals(getForceValue(key, now)) ||\n\t\t\t\t\tforceString.equals(getForceValue(key, now-FORCE_GRAIN_INTERVAL)))\n\t\t\t\tforce = true;\n\t\t}\n\t\tif (!force && !httprequest.isParameterSet(\"forcedownload\")) fctx.filterData = true;\n\t\telse if(logMINOR) Logger.minor(this, \"Content filter disabled via request parameter\");\n\t\t//Load the fetch context with the callbacks needed for web-pushing, if enabled\n\t\tif(container.enableInlinePrefetch()) fctx.prefetchHook = prefetchHook;\n\t\tif(container.isFProxyWebPushingEnabled()) fctx.tagReplacer = new PushingTagReplacerCallback(core.getFProxy().fetchTracker, MAX_LENGTH, ctx);\n\n\t\tString requestedMimeType = httprequest.getParam(\"type\", null);\n\t\tfctx.overrideMIME = requestedMimeType;\n\t\tString override = (requestedMimeType == null) ? \"\" : \"?type=\"+URLEncoder.encode(requestedMimeType,true);\n\t\tString maybeCharset = httprequest.isParameterSet(\"maybecharset\") ? httprequest.getParam(\"maybecharset\", null) : null;\n\t\tfctx.charset = maybeCharset;\n\t\tif(override.equals(\"\") && maybeCharset != null)\n\t\t\toverride = \"?maybecharset=\"+URLEncoder.encode(maybeCharset, true);\n\t\t// No point passing ?force= across a redirect, since the key will change.\n\t\t// However, there is every point in passing ?forcedownload.\n\t\tif(httprequest.isParameterSet(\"forcedownload\")) {\n\t\t\tif(override.length() == 0) override = \"?forcedownload\";\n\t\t\telse override = override+\"&forcedownload\";\n\t\t}\n\n\t\tBucket data = null;\n\t\tString mimeType = null;\n\t\tString referer = sanitizeReferer(ctx);\n\t\tFetchException fe = null;\n\t\t\n\n\t\tMultiValueTable<String,String> headers = ctx.getHeaders();\n\t\tString ua = headers.get(\"user-agent\");\n\t\tString accept = headers.get(\"accept\");\n\t\tFProxyFetchResult fr = null;\n\t\tif(logMINOR) Logger.minor(this, \"UA = \"+ua+\" accept = \"+accept);\n\t\t\n\t\tboolean canSendProgress = \n\t\t\tisBrowser(ua) && !ctx.disableProgressPage() && (accept == null || accept.indexOf(\"text/html\") > -1) && !httprequest.isParameterSet(\"forcedownload\");\n\t\t\n\t\t\tFProxyFetchWaiter fetch = null;\n\t\t\ttry {\n\t\t\t\tfetch = fetchTracker.makeFetcher(key, maxSize, fctx, ctx.getReFilterPolicy());\n\t\t\t} catch (FetchException e) {\n\t\t\t\tfe = fr.failed;\n\t\t\t}\n\t\t\tif(fetch != null)\n\t\t\twhile(true) {\n\t\t\tfr = fetch.getResult(!canSendProgress);\n\t\t\tif(fr.hasData()) {\n\t\t\t\t\n\t\t\t\tif(fr.getFetchCount() > 1 && !fr.hasWaited() && fr.getFetchCount() > 1 && key.isUSK() && context.uskManager.lookupKnownGood(USK.create(key)) > key.getSuggestedEdition()) {\n\t\t\t\t\tLogger.normal(this, \"Loading later edition...\");\n\t\t\t\t\tfetch.progress.requestImmediateCancel();\n\t\t\t\t\tfr = null;\n\t\t\t\t\tfetch = null;\n\t\t\t\t\ttry {\n\t\t\t\t\t\tfetch = fetchTracker.makeFetcher(key, maxSize, fctx, ctx.getReFilterPolicy());\n\t\t\t\t\t} catch (FetchException e) {\n\t\t\t\t\t\tfe = fr.failed;\n\t\t\t\t\t}\n\t\t\t\t\tif(fetch == null) break;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif(logMINOR) Logger.minor(this, \"Found data\");\n\t\t\t\tdata = new NoFreeBucket(fr.data);\n\t\t\t\tmimeType = fr.mimeType;\n\t\t\t\tfetch.close(); // Not waiting any more, but still locked the results until sent\n\t\t\t\tbreak;\n\t\t\t} else if(fr.failed != null) {\n\t\t\t\tif(logMINOR) Logger.minor(this, \"Request failed\");\n\t\t\t\tfe = fr.failed;\n\t\t\t\tfetch.close(); // Not waiting any more, but still locked the results until sent\n\t\t\t\tbreak;\n\t\t\t} else if(canSendProgress) {\n\t\t\t\tif(logMINOR) Logger.minor(this, \"Still in progress\");\n\t\t\t\t// Still in progress\n\t\t\t\tboolean isJsEnabled=ctx.getContainer().isFProxyJavascriptEnabled() && ua != null && !ua.contains(\"AppleWebKit/\");\n\t\t\t\tboolean isWebPushingEnabled = false;\n\t\t\t\tPageNode page = ctx.getPageMaker().getPageNode(l10n(\"fetchingPageTitle\"), ctx);\n\t\t\t\tHTMLNode pageNode = page.outer;\n\t\t\t\tString location = getLink(key, requestedMimeType, maxSize, httprequest.getParam(\"force\", null), httprequest.isParameterSet(\"forcedownload\"));\n\t\t\t\tHTMLNode headNode=page.headNode;\n\t\t\t\tif(isJsEnabled){\n\t\t\t\t\t//If the user has enabled javascript, we add a <noscript> http refresh(if he has disabled it in the browser)\n\t\t\t\t\theadNode.addChild(\"noscript\").addChild(\"meta\", \"http-equiv\", \"Refresh\").addAttribute(\"content\", \"2;URL=\" + location);\n\t\t\t\t\t\t// If pushing is disabled, but js is enabled, then we add the original progresspage.js\n\t\t\t\t\t\tif ((isWebPushingEnabled = ctx.getContainer().isFProxyWebPushingEnabled()) == false) {\n\t\t\t\t\t\t\tHTMLNode scriptNode = headNode.addChild(\"script\", \"//abc\");\n\t\t\t\t\t\t\tscriptNode.addAttribute(\"type\", \"text/javascript\");\n\t\t\t\t\t\t\tscriptNode.addAttribute(\"src\", \"/static/js/progresspage.js\");\n\t\t\t\t\t\t}\n\t\t\t\t}else{\n\t\t\t\t\t//If he disabled it, we just put the http refresh meta, without the noscript\n\t\t\t\t\theadNode.addChild(\"meta\", \"http-equiv\", \"Refresh\").addAttribute(\"content\", \"2;URL=\" + location);\n\t\t\t\t}\n\t\t\t\tHTMLNode contentNode = page.content;\n\t\t\t\tHTMLNode infobox = contentNode.addChild(\"div\", \"class\", \"infobox infobox-information\");\n\t\t\t\tinfobox.addChild(\"div\", \"class\", \"infobox-header\", l10n(\"fetchingPageBox\"));\n\t\t\t\tHTMLNode infoboxContent = infobox.addChild(\"div\", \"class\", \"infobox-content\");\n\t\t\t\tinfoboxContent.addAttribute(\"id\", \"infoContent\");\n\t\t\t\tinfoboxContent.addChild(new ProgressInfoElement(fetchTracker, key, fctx, maxSize, core.isAdvancedModeEnabled(), ctx, isWebPushingEnabled));\n\n\t\t\t\t\n\t\t\t\tHTMLNode table = infoboxContent.addChild(\"table\", \"border\", \"0\");\n\t\t\t\tHTMLNode progressCell = table.addChild(\"tr\").addChild(\"td\", \"class\", \"request-progress\");\n\t\t\t\tif(fr.totalBlocks <= 0)\n\t\t\t\t\tprogressCell.addChild(\"#\", NodeL10n.getBase().getString(\"QueueToadlet.unknown\"));\n\t\t\t\telse {\n\t\t\t\t\tprogressCell.addChild(new ProgressBarElement(fetchTracker,key,fctx,maxSize,ctx, isWebPushingEnabled));\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tinfobox = contentNode.addChild(\"div\", \"class\", \"infobox infobox-information\");\n\t\t\t\tinfobox.addChild(\"div\", \"class\", \"infobox-header\", l10n(\"fetchingPageOptions\"));\n\t\t\t\tinfoboxContent = infobox.addChild(\"div\", \"class\", \"infobox-content\");\n\n\t\t\t\tHTMLNode optionList = infoboxContent.addChild(\"ul\");\n\t\t\t\toptionList.addChild(\"li\").addChild(\"p\", l10n(\"progressOptionZero\"));\n\t\t\t\t\n\t\t\t\taddDownloadOptions(ctx, optionList, key, mimeType, false, false, core);\n\n\t\t\t\toptionList.addChild(\"li\").addChild(ctx.getPageMaker().createBackLink(ctx, l10n(\"goBackToPrev\")));\n\t\t\t\toptionList.addChild(\"li\").addChild(\"a\", new String[] { \"href\", \"title\" },\n\t\t\t\t\t\tnew String[] { \"/\", NodeL10n.getBase().getString(\"Toadlet.homepage\") }, l10n(\"abortToHomepage\"));\n\t\t\t\t\n\t\t\t\tMultiValueTable<String, String> retHeaders = new MultiValueTable<String, String>();\n\t\t\t\t//retHeaders.put(\"Refresh\", \"2; url=\"+location);\n\t\t\t\twriteHTMLReply(ctx, 200, \"OK\", retHeaders, pageNode.generate());\n\t\t\t\tfr.close();\n\t\t\t\tfetch.close();\n\t\t\t\treturn;\n\t\t\t} else if(fr != null)\n\t\t\t\tfr.close();\n\t\t\t}\n\t\t\n\t\ttry {\n\t\t\tif(logMINOR)\n\t\t\t\tLogger.minor(this, \"FProxy fetching \"+key+\" (\"+maxSize+ ')');\n\t\t\tif(data == null && fe == null) {\n\t\t\t\tboolean needsFetch=true;\n\t\t\t\t//If we don't have the data, then check if an FProxyFetchInProgress has. It can happen when one FetchInProgress downloaded an image\n\t\t\t\t//asynchronously, then loads it. This way a FetchInprogress will have the full image, and no need to block.\n\t\t\t\tFProxyFetchInProgress progress=fetchTracker.getFetchInProgress(key, maxSize, fctx);\n\t\t\t\tif(progress!=null){\n\t\t\t\t\tFProxyFetchWaiter waiter=null;\n\t\t\t\t\tFProxyFetchResult result=null;\n\t\t\t\t\ttry{\n\t\t\t\t\t\twaiter=progress.getWaiter();\n\t\t\t\t\t\tresult=waiter.getResult(false);\n\t\t\t\t\t\tif(result.failed==null && result.data!=null){\n\t\t\t\t\t\t\tmimeType=result.mimeType;\n\t\t\t\t\t\t\tdata=result.data;\n\t\t\t\t\t\t\tdata=ctx.getBucketFactory().makeBucket(result.data.size());\n\t\t\t\t\t\t\tBucketTools.copy(result.data, data);\n\t\t\t\t\t\t\tneedsFetch=false;\n\t\t\t\t\t\t}\n\t\t\t\t\t}finally{\n\t\t\t\t\t\tif(waiter!=null){\n\t\t\t\t\t\t\tprogress.close(waiter);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif(result!=null){\n\t\t\t\t\t\t\tprogress.close(result);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif(needsFetch){\n\t\t\t\t\t//If we don't have the data, then we need to fetch it and block until it is available\n\t\t\t\t\tFetchResult result = fetch(key, maxSize, new RequestClient() {\n\t\t\t\t\t\tpublic boolean persistent() {\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tpublic void removeFrom(ObjectContainer container) {\n\t\t\t\t\t\t\tthrow new UnsupportedOperationException();\n\t\t\t\t\t\t}\n\t\t\t\t\t\tpublic boolean realTimeFlag() {\n\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t} }, fctx); \n\t\t\t\t\t\n\t\t\t\t\t// Now, is it safe?\n\t\t\t\t\t\n\t\t\t\t\tdata = result.asBucket();\n\t\t\t\t\tmimeType = result.getMimeType();\n\t\t\t\t}\n\t\t\t} else if(fe != null) throw fe;\n\t\t\t\n\t\t\thandleDownload(ctx, data, ctx.getBucketFactory(), mimeType, requestedMimeType, forceString, httprequest.isParameterSet(\"forcedownload\"), \"/\", key, maxSize != MAX_LENGTH ? \"&max-size=\"+maxSize : \"\", referer, true, ctx, core, fr != null, maybeCharset);\n\t\t} catch (FetchException e) {\n\t\t\t//Handle exceptions thrown from the ContentFilter\n\t\t\tString msg = e.getMessage();\n\t\t\tif(logMINOR) {\n\t\t\t\tLogger.minor(this, \"Failed to fetch \"+uri+\" : \"+e);\n\t\t\t}\n\t\t\tif(e.newURI != null) {\n\t\t\t\tif(accept != null && (accept.startsWith(\"text/css\") || accept.startsWith(\"image/\")) && recursion++ < MAX_RECURSION) {\n\t\t\t\t\t// If it's an image or a CSS fetch, auto-follow the redirect, up to a limit.\n\t\t\t\t\tString link = getLink(e.newURI, requestedMimeType, maxSize, httprequest.getParam(\"force\", null), httprequest.isParameterSet(\"forcedownload\"));\n\t\t\t\t\ttry {\n\t\t\t\t\t\turi = new URI(link);\n\t\t\t\t\t\tinnerHandleMethodGET(uri, httprequest, ctx, recursion);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t} catch (URISyntaxException e1) {\n\t\t\t\t\t\tLogger.error(this, \"Caught \"+e1+\" parsing new link \"+link, e1);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tToadlet.writePermanentRedirect(ctx, msg,\n\t\t\t\t\tgetLink(e.newURI, requestedMimeType, maxSize, httprequest.getParam(\"force\", null), httprequest.isParameterSet(\"forcedownload\")));\n\t\t\t} else if(e.mode == FetchException.TOO_BIG) {\n\t\t\t\tPageNode page = ctx.getPageMaker().getPageNode(l10n(\"fileInformationTitle\"), ctx);\n\t\t\t\tHTMLNode pageNode = page.outer;\n\t\t\t\tHTMLNode contentNode = page.content;\n\t\t\t\t\n\t\t\t\tHTMLNode infobox = contentNode.addChild(\"div\", \"class\", \"infobox infobox-information\");\n\t\t\t\tinfobox.addChild(\"div\", \"class\", \"infobox-header\", l10n(\"largeFile\"));\n\t\t\t\tHTMLNode infoboxContent = infobox.addChild(\"div\", \"class\", \"infobox-content\");\n\t\t\t\tHTMLNode fileInformationList = infoboxContent.addChild(\"ul\");\n\t\t\t\tHTMLNode option = fileInformationList.addChild(\"li\");\n\t\t\t\toption.addChild(\"#\", (l10n(\"filenameLabel\") + ' '));\n\t\t\t\toption.addChild(\"a\", \"href\", '/' + key.toString(), getFilename(key, e.getExpectedMimeType()));\n\n\t\t\t\tString mime = writeSizeAndMIME(fileInformationList, e);\n\t\t\t\t\n\t\t\t\tinfobox = contentNode.addChild(\"div\", \"class\", \"infobox infobox-information\");\n\t\t\t\tinfobox.addChild(\"div\", \"class\", \"infobox-header\", l10n(\"explanationTitle\"));\n\t\t\t\tinfoboxContent = infobox.addChild(\"div\", \"class\", \"infobox-content\");\n\t\t\t\tinfoboxContent.addChild(\"#\", l10n(\"largeFileExplanationAndOptions\"));\n\t\t\t\tHTMLNode optionList = infoboxContent.addChild(\"ul\");\n\t\t\t\t//HTMLNode optionTable = infoboxContent.addChild(\"table\", \"border\", \"0\");\n\t\t\t\tif(!restricted) {\n\t\t\t\t\toption = optionList.addChild(\"li\");\n\t\t\t\t\tHTMLNode optionForm = option.addChild(\"form\", new String[] { \"action\", \"method\" }, new String[] {'/' + key.toString(), \"get\" });\n\t\t\t\t\toptionForm.addChild(\"input\", new String[] { \"type\", \"name\", \"value\" }, new String[] { \"hidden\", \"max-size\", String.valueOf(e.expectedSize == -1 ? Long.MAX_VALUE : e.expectedSize*2) });\n\t\t\t\t\toptionForm.addChild(\"input\", new String[] { \"type\", \"name\", \"value\" }, new String[] { \"submit\", \"fetch\", l10n(\"fetchLargeFileAnywayAndDisplayButton\") });\n\t\t\t\t\toptionForm.addChild(\"#\", \" - \" + l10n(\"fetchLargeFileAnywayAndDisplay\"));\n\t\t\t\t\taddDownloadOptions(ctx, optionList, key, mime, false, false, core);\n\t\t\t\t}\n\t\t\t\t\n\n\t\t\t\t//optionTable.addChild(\"tr\").addChild(\"td\", \"colspan\", \"2\").addChild(\"a\", new String[] { \"href\", \"title\" }, new String[] { \"/\", NodeL10n.getBase().getString(\"Toadlet.homepage\") }, l10n(\"abortToHomepage\"));\n\t\t\t\toptionList.addChild(\"li\").addChild(\"a\", new String[] { \"href\", \"title\" }, new String[] { \"/\", NodeL10n.getBase().getString(\"Toadlet.homepage\") }, l10n(\"abortToHomepage\"));\n\t\t\t\t\n\t\t\t\t//option = optionTable.addChild(\"tr\").addChild(\"td\", \"colspan\", \"2\");\n\t\t\t\toptionList.addChild(\"li\").addChild(ctx.getPageMaker().createBackLink(ctx, l10n(\"goBackToPrev\")));\n\t\t\t\t\n\t\t\t\twriteHTMLReply(ctx, 200, \"OK\", pageNode.generate());\n\t\t\t} else {\n\t\t\t\tPageNode page = ctx.getPageMaker().getPageNode(e.getShortMessage(), ctx);\n\t\t\t\tHTMLNode pageNode = page.outer;\n\t\t\t\tHTMLNode contentNode = page.content;\n\n\t\t\t\tHTMLNode infobox = contentNode.addChild(\"div\", \"class\", \"infobox infobox-error\");\n\t\t\t\tinfobox.addChild(\"div\", \"class\", \"infobox-header\", l10n(\"errorWithReason\", \"error\", e.getShortMessage()));\n\t\t\t\tHTMLNode infoboxContent = infobox.addChild(\"div\", \"class\", \"infobox-content\");\n\t\t\t\tHTMLNode fileInformationList = infoboxContent.addChild(\"ul\");\n\t\t\t\tHTMLNode option = fileInformationList.addChild(\"li\");\n\t\t\t\toption.addChild(\"#\", (l10n(\"filenameLabel\") + ' '));\n\t\t\t\toption.addChild(\"a\", \"href\", '/' + key.toString(), getFilename(key, e.getExpectedMimeType()));\n\n\t\t\t\tString mime = writeSizeAndMIME(fileInformationList, e);\n\t\t\t\tinfobox = contentNode.addChild(\"div\", \"class\", \"infobox infobox-error\");\n\t\t\t\tinfobox.addChild(\"div\", \"class\", \"infobox-header\", l10n(\"explanationTitle\"));\n\t\t\t\tinfoboxContent = infobox.addChild(\"div\", \"class\", \"infobox-content\");\n\t\t\t\tinfoboxContent.addChild(\"p\", l10n(\"unableToRetrieve\"));\n\t\t\t\tUnsafeContentTypeException filterException = null;\n\t\t\t\tif(e.getCause() != null && e.getCause() instanceof UnsafeContentTypeException) {\n\t\t\t\t\tfilterException = (UnsafeContentTypeException)e.getCause();\n\t\t\t\t}\n\t\t\t\tif(e.isFatal() && filterException == null)\n\t\t\t\t\tinfoboxContent.addChild(\"p\", l10n(\"errorIsFatal\"));\n\t\t\t\tinfoboxContent.addChild(\"p\", msg);\n\t\t\t\tif(filterException != null) {\n\t\t\t\t\tif(filterException.details() != null) {\n\t\t\t\t\t\tHTMLNode detailList = infoboxContent.addChild(\"ul\");\n\t\t\t\t\t\tfor(String detail : filterException.details()) {\n\t\t\t\t\t\t\tdetailList.addChild(\"li\", detail);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif(e.errorCodes != null) {\n\t\t\t\t\tinfoboxContent.addChild(\"p\").addChild(\"pre\").addChild(\"#\", e.errorCodes.toVerboseString());\n\t\t\t\t}\n\n\t\t\t\tinfobox = contentNode.addChild(\"div\", \"class\", \"infobox infobox-error\");\n\t\t\t\tinfobox.addChild(\"div\", \"class\", \"infobox-header\", l10n(\"options\"));\n\t\t\t\tinfoboxContent = infobox.addChild(\"div\", \"class\", \"infobox-content\");\n\t\t\t\t\n\t\t\t\tHTMLNode optionList = infoboxContent.addChild(\"ul\");\n\n\t\t\t\tPluginInfoWrapper keyUtil;\n\t\t\t\tif((e.mode == FetchException.NOT_IN_ARCHIVE || e.mode == FetchException.NOT_ENOUGH_PATH_COMPONENTS)) { \n\t\t\t\t\t// first look for the newest version\n\t\t\t\t\tif ((keyUtil = core.node.pluginManager.getPluginInfo(\"plugins.KeyUtils.KeyUtilsPlugin\")) != null) {\n\t\t\t\t\t\toption = optionList.addChild(\"li\");\n\t\t\t\t\t\tNodeL10n.getBase().addL10nSubstitution(option, \"FProxyToadlet.openWithKeyExplorer\", new String[] { \"link\" }, new HTMLNode[] { HTMLNode.link(\"/KeyUtils/?automf=true&key=\" + key.toString()) });\n\t\t\t\t\t} else if ((keyUtil = core.node.pluginManager.getPluginInfo(\"plugins.KeyExplorer.KeyExplorer\")) != null) {\n\t\t\t\t\t\toption = optionList.addChild(\"li\");\n\t\t\t\t\t\tif (keyUtil.getPluginLongVersion() > 4999)\n\t\t\t\t\t\t\tNodeL10n.getBase().addL10nSubstitution(option, \"FProxyToadlet.openWithKeyExplorer\", new String[] { \"link\" }, new HTMLNode[] { HTMLNode.link(\"/KeyExplorer/?automf=true&key=\" + key.toString())});\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\tNodeL10n.getBase().addL10nSubstitution(option, \"FProxyToadlet.openWithKeyExplorer\", new String[] { \"link\" }, new HTMLNode[] { HTMLNode.link(\"/plugins/plugins.KeyExplorer.KeyExplorer/?key=\" + key.toString())});\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif(filterException != null) {\n\t\t\t\t\tif((mime.equals(\"application/x-freenet-index\")) && (core.node.pluginManager.isPluginLoaded(\"plugins.ThawIndexBrowser.ThawIndexBrowser\"))) {\n\t\t\t\t\t\toption = optionList.addChild(\"li\");\n\t\t\t\t\t\tNodeL10n.getBase().addL10nSubstitution(option, \"FProxyToadlet.openAsThawIndex\", new String[] { \"link\" }, new HTMLNode[] { HTMLNode.link(\"/plugins/plugins.ThawIndexBrowser.ThawIndexBrowser/?key=\" + key.toString()).addChild(\"b\") });\n\t\t\t\t\t}\n\t\t\t\t\toption = optionList.addChild(\"li\");\n\t\t\t\t\t// FIXME: is this safe? See bug #131\n\t\t\t\t\tNodeL10n.getBase().addL10nSubstitution(option, \"FProxyToadlet.openAsText\", new String[] { \"link\" }, new HTMLNode[] { HTMLNode.link(getLink(key, \"text/plain\", maxSize, null, false)) });\n\t\t\t\t\toption = optionList.addChild(\"li\");\n\t\t\t\t\tNodeL10n.getBase().addL10nSubstitution(option, \"FProxyToadlet.openForceDisk\", new String[] { \"link\" }, new HTMLNode[] { HTMLNode.link(getLink(key, mime, maxSize, null, true)) });\n\t\t\t\t\tif(!(mime.equals(\"application/octet-stream\") || mime.equals(\"application/x-msdownload\"))) {\n\t\t\t\t\t\toption = optionList.addChild(\"li\");\n\t\t\t\t\t\tNodeL10n.getBase().addL10nSubstitution(option, \"FProxyToadlet.openForce\", new String[] { \"link\", \"mime\" }, new HTMLNode[] { HTMLNode.link(getLink(key, mime, maxSize, getForceValue(key, now), false)), HTMLNode.text(HTMLEncoder.encode(mime))});\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif((!e.isFatal() || filterException != null) && (ctx.isAllowedFullAccess() || !container.publicGatewayMode())) {\n\t\t\t\t\taddDownloadOptions(ctx, optionList, key, mimeType, filterException != null, filterException != null, core);\n\t\t\t\t\toptionList.addChild(\"li\").\n\t\t\t\t\t\taddChild(\"a\", \"href\", getLink(key, requestedMimeType, maxSize, httprequest.getParam(\"force\", null),\n\t\t\t\t\t\t\t\t\thttprequest.isParameterSet(\"forcedownload\"))).addChild(\"#\", l10n(\"retryNow\"));\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\toptionList.addChild(\"li\").addChild(\"a\", new String[] { \"href\", \"title\" }, new String[] { \"/\", NodeL10n.getBase().\n\t\t\t\t\t\tgetString(\"Toadlet.homepage\") }, l10n(\"abortToHomepage\"));\n\t\t\t\t\n\t\t\t\toptionList.addChild(\"li\").addChild(ctx.getPageMaker().createBackLink(ctx, l10n(\"goBackToPrev\")));\n\t\t\t\tthis.writeHTMLReply(ctx, (e.mode == 10) ? 404 : 500 /* close enough - FIXME probably should depend on status code */,\n\t\t\t\t\t\t\"Internal Error\", pageNode.generate());\n\t\t\t}\n\t\t} catch (SocketException e) {\n\t\t\t// Probably irrelevant\n\t\t\tif(e.getMessage().equals(\"Broken pipe\")) {\n\t\t\t\tif(logMINOR)\n\t\t\t\t\tLogger.minor(this, \"Caught \"+e+\" while handling GET\", e);\n\t\t\t} else {\n\t\t\t\tLogger.normal(this, \"Caught \"+e);\n\t\t\t}\n\t\t\tthrow e;\n\t\t} catch (Throwable t) {\n\t\t\twriteInternalError(t, ctx);\n\t\t} finally {\n\t\t\tif(fr == null && data != null) data.free();\n\t\t\tif(fr != null) fr.close();\n\t\t}\n\t}","id":16573,"modified_method":"private void innerHandleMethodGET(URI uri, HTTPRequest httprequest, ToadletContext ctx, int recursion) \n\t\t\tthrows ToadletContextClosedException, IOException, RedirectException {\n\n\t\tString ks = uri.getPath();\n\t\t\n\t\tif (ks.equals(\"/\")) {\n\t\t\tif (httprequest.isParameterSet(\"key\")) {\n\t\t\t\tString k = httprequest.getParam(\"key\");\n\t\t\t\tFreenetURI newURI;\n\t\t\t\ttry {\n\t\t\t\t\tnewURI = new FreenetURI(k);\n\t\t\t\t} catch (MalformedURLException e) {\n\t\t\t\t\tLogger.normal(this, \"Invalid key: \"+e+\" for \"+k, e);\n\t\t\t\t\tsendErrorPage(ctx, 404, l10n(\"notFoundTitle\"), NodeL10n.getBase().getString(\"FProxyToadlet.invalidKeyWithReason\", new String[] { \"reason\" }, new String[] { e.toString() }));\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif(logMINOR) Logger.minor(this, \"Redirecting to FreenetURI: \"+newURI);\n\t\t\t\tString requestedMimeType = httprequest.getParam(\"type\");\n\t\t\t\tlong maxSize = httprequest.getLongParam(\"max-size\", MAX_LENGTH);\n\t\t\t\tString location = getLink(newURI, requestedMimeType, maxSize, httprequest.getParam(\"force\", null), httprequest.isParameterSet(\"forcedownload\"));\n\t\t\t\twriteTemporaryRedirect(ctx, null, location);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t\n\t\t\ttry {\n\t\t\t\tString querystring = uri.getQuery();\n\t\t\t\t\n\t\t\t\tif (querystring == null) {\n\t\t\t\t\tthrow new RedirectException(welcome);\n\t\t\t\t} else {\n\t\t\t\t\t// TODP possibly a proper URLEncode method\n\t\t\t\t\tquerystring = querystring.replace(' ', '+');\n\t\t\t\t\tthrow new RedirectException(\"/welcome/?\" + querystring);\n\t\t\t\t}\n\t\t\t} catch (URISyntaxException e) {\n\t\t\t\t// HUH!?!\n\t\t\t}\n\t\t}else if(ks.equals(\"/favicon.ico\")){\n\t\t\tbyte[] buf = new byte[1024];\n\t\t\tint len;\n\t\t\tInputStream strm = getClass().getResourceAsStream(\"staticfiles/favicon.ico\");\n\t\t\t\n\t\t\ttry {\n\t\t\t\tif (strm == null) {\n\t\t\t\t\tthis.sendErrorPage(ctx, 404, l10n(\"pathNotFoundTitle\"), l10n(\"pathNotFound\"));\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tctx.sendReplyHeaders(200, \"OK\", null, \"image/x-icon\", strm.available());\n\t\t\t\t\n\t\t\t\twhile ( (len = strm.read(buf)) > 0) {\n\t\t\t\t\tctx.writeData(buf, 0, len);\n\t\t\t\t}\n\t\t\t} finally {\n\t\t\t\tstrm.close();\n\t\t\t}\n\t\t\treturn;\n\t\t} else if(ks.startsWith(\"/feed/\") || ks.equals(\"/feed\")) {\n\t\t\t//TODO Better way to find the host. Find if https is used?\n\t\t\tString host = ctx.getHeaders().get(\"host\");\n\t\t\tString atom = core.alerts.getAtom(\"http://\" + host);\n\t\t\tbyte[] buf = atom.getBytes(\"UTF-8\");\n\t\t\tctx.sendReplyHeaders(200, \"OK\", null, \"application/atom+xml\", buf.length);\n\t\t\tctx.writeData(buf, 0, buf.length);\n\t\t\treturn;\n\t\t}else if(ks.equals(\"/robots.txt\") && ctx.doRobots()){\n\t\t\tthis.writeTextReply(ctx, 200, \"Ok\", \"User-agent: *\\nDisallow: /\");\n\t\t\treturn;\n\t\t}else if(ks.startsWith(\"/darknet/\") || ks.equals(\"/darknet\")) { //TODO (pre-build 1045 url format) remove when obsolete\n\t\t\twritePermanentRedirect(ctx, \"obsoleted\", \"/friends/\");\n\t\t\treturn;\n\t\t}else if(ks.startsWith(\"/opennet/\") || ks.equals(\"/opennet\")) { //TODO (pre-build 1045 url format) remove when obsolete\n\t\t\twritePermanentRedirect(ctx, \"obsoleted\", \"/strangers/\");\n\t\t\treturn;\n\t\t} else if(ks.startsWith(\"/queue/\")) {\n\t\t\twritePermanentRedirect(ctx, \"obsoleted\", \"/downloads/\");\n\t\t\treturn;\n\t\t} else if(ks.startsWith(\"/config/\")) {\n\t\t\twritePermanentRedirect(ctx, \"obsoleted\", \"/config/node\");\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tif(ks.startsWith(\"/\"))\n\t\t\tks = ks.substring(1);\n\t\t\n\t\tlong maxSize;\n\t\t\n\t\tboolean restricted = (container.publicGatewayMode() && !ctx.isAllowedFullAccess());\n\t\t\n\t\tif(restricted)\n\t\t\tmaxSize = MAX_LENGTH;\n\t\telse \n\t\t\tmaxSize = httprequest.getLongParam(\"max-size\", MAX_LENGTH);\n\n\t\t//first check of httprange before get\n\t\t// only valid number format is checked here\n\t\tString rangeStr = ctx.getHeaders().get(\"range\");\n\t\tif (rangeStr != null) {\n\t\t\ttry {\n\t\t\t\tparseRange(rangeStr);\n\t\t\t} catch (HTTPRangeException e) {\n\t\t\t\tLogger.normal(this, \"Invalid Range Header: \"+rangeStr, e);\n\t\t\t\tctx.sendReplyHeaders(416, \"Requested Range Not Satisfiable\", null, null, 0);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\t\n\t\tFreenetURI key;\n\t\ttry {\n\t\t\tkey = new FreenetURI(ks);\n\t\t} catch (MalformedURLException e) {\n\t\t\tPageNode page = ctx.getPageMaker().getPageNode(l10n(\"invalidKeyTitle\"), ctx);\n\t\t\tHTMLNode pageNode = page.outer;\n\t\t\tHTMLNode contentNode = page.content;\n\n\t\t\tHTMLNode errorInfobox = contentNode.addChild(\"div\", \"class\", \"infobox infobox-error\");\n\t\t\terrorInfobox.addChild(\"div\", \"class\", \"infobox-header\", NodeL10n.getBase().getString(\"FProxyToadlet.invalidKeyWithReason\", new String[] { \"reason\" }, new String[] { e.toString() }));\n\t\t\tHTMLNode errorContent = errorInfobox.addChild(\"div\", \"class\", \"infobox-content\");\n\t\t\terrorContent.addChild(\"#\", l10n(\"expectedKeyButGot\"));\n\t\t\terrorContent.addChild(\"code\", ks);\n\t\t\terrorContent.addChild(\"br\");\n\t\t\terrorContent.addChild(ctx.getPageMaker().createBackLink(ctx, l10n(\"goBack\")));\n\t\t\terrorContent.addChild(\"br\");\n\t\t\taddHomepageLink(errorContent);\n\n\t\t\tthis.writeHTMLReply(ctx, 400, l10n(\"invalidKeyTitle\"), pageNode.generate());\n\t\t\treturn;\n\t\t}\n\n\t\tFetchContext fctx = getFetchContext(maxSize);\n\n\t\t//We should run the ContentFilter by default\n\t\tString forceString = httprequest.getParam(\"force\");\n\t\tlong now = System.currentTimeMillis();\n\t\tboolean force = false;\n\t\tif(forceString != null) {\n\t\t\tif(forceString.equals(getForceValue(key, now)) ||\n\t\t\t\t\tforceString.equals(getForceValue(key, now-FORCE_GRAIN_INTERVAL)))\n\t\t\t\tforce = true;\n\t\t}\n\t\tif (!force && !httprequest.isParameterSet(\"forcedownload\")) fctx.filterData = true;\n\t\telse if(logMINOR) Logger.minor(this, \"Content filter disabled via request parameter\");\n\t\t//Load the fetch context with the callbacks needed for web-pushing, if enabled\n\t\tif(container.enableInlinePrefetch()) fctx.prefetchHook = prefetchHook;\n\t\tif(container.isFProxyWebPushingEnabled()) fctx.tagReplacer = new PushingTagReplacerCallback(core.getFProxy().fetchTracker, MAX_LENGTH, ctx);\n\n\t\tString requestedMimeType = httprequest.getParam(\"type\", null);\n\t\tfctx.overrideMIME = requestedMimeType;\n\t\tString override = (requestedMimeType == null) ? \"\" : \"?type=\"+URLEncoder.encode(requestedMimeType,true);\n\t\tString maybeCharset = httprequest.isParameterSet(\"maybecharset\") ? httprequest.getParam(\"maybecharset\", null) : null;\n\t\tfctx.charset = maybeCharset;\n\t\tif(override.equals(\"\") && maybeCharset != null)\n\t\t\toverride = \"?maybecharset=\"+URLEncoder.encode(maybeCharset, true);\n\t\t// No point passing ?force= across a redirect, since the key will change.\n\t\t// However, there is every point in passing ?forcedownload.\n\t\tif(httprequest.isParameterSet(\"forcedownload\")) {\n\t\t\tif(override.length() == 0) override = \"?forcedownload\";\n\t\t\telse override = override+\"&forcedownload\";\n\t\t}\n\n\t\tBucket data = null;\n\t\tString mimeType = null;\n\t\tString referer = sanitizeReferer(ctx);\n\t\tFetchException fe = null;\n\t\t\n\n\t\tMultiValueTable<String,String> headers = ctx.getHeaders();\n\t\tString ua = headers.get(\"user-agent\");\n\t\tString accept = headers.get(\"accept\");\n\t\tFProxyFetchResult fr = null;\n\t\tif(logMINOR) Logger.minor(this, \"UA = \"+ua+\" accept = \"+accept);\n\t\t\n\t\tboolean canSendProgress = \n\t\t\tisBrowser(ua) && !ctx.disableProgressPage() && (accept == null || accept.indexOf(\"text/html\") > -1) && !httprequest.isParameterSet(\"forcedownload\");\n\t\t\n\t\t\tFProxyFetchWaiter fetch = null;\n\t\t\ttry {\n\t\t\t\tfetch = fetchTracker.makeFetcher(key, maxSize, fctx, ctx.getReFilterPolicy());\n\t\t\t} catch (FetchException e) {\n\t\t\t\tfe = fr.failed;\n\t\t\t}\n\t\t\tif(fetch != null)\n\t\t\twhile(true) {\n\t\t\tfr = fetch.getResult(!canSendProgress);\n\t\t\tif(fr.hasData()) {\n\t\t\t\t\n\t\t\t\tif(fr.getFetchCount() > 1 && !fr.hasWaited() && fr.getFetchCount() > 1 && key.isUSK() && context.uskManager.lookupKnownGood(USK.create(key)) > key.getSuggestedEdition()) {\n\t\t\t\t\tLogger.normal(this, \"Loading later edition...\");\n\t\t\t\t\tfetch.progress.requestImmediateCancel();\n\t\t\t\t\tfr = null;\n\t\t\t\t\tfetch = null;\n\t\t\t\t\ttry {\n\t\t\t\t\t\tfetch = fetchTracker.makeFetcher(key, maxSize, fctx, ctx.getReFilterPolicy());\n\t\t\t\t\t} catch (FetchException e) {\n\t\t\t\t\t\tfe = fr.failed;\n\t\t\t\t\t}\n\t\t\t\t\tif(fetch == null) break;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif(logMINOR) Logger.minor(this, \"Found data\");\n\t\t\t\tdata = new NoFreeBucket(fr.data);\n\t\t\t\tmimeType = fr.mimeType;\n\t\t\t\tfetch.close(); // Not waiting any more, but still locked the results until sent\n\t\t\t\tbreak;\n\t\t\t} else if(fr.failed != null) {\n\t\t\t\tif(logMINOR) Logger.minor(this, \"Request failed\");\n\t\t\t\tfe = fr.failed;\n\t\t\t\tfetch.close(); // Not waiting any more, but still locked the results until sent\n\t\t\t\tbreak;\n\t\t\t} else if(canSendProgress) {\n\t\t\t\tif(logMINOR) Logger.minor(this, \"Still in progress\");\n\t\t\t\t// Still in progress\n\t\t\t\tboolean isJsEnabled=ctx.getContainer().isFProxyJavascriptEnabled() && ua != null && !ua.contains(\"AppleWebKit/\");\n\t\t\t\tboolean isWebPushingEnabled = false;\n\t\t\t\tPageNode page = ctx.getPageMaker().getPageNode(l10n(\"fetchingPageTitle\"), ctx);\n\t\t\t\tHTMLNode pageNode = page.outer;\n\t\t\t\tString location = getLink(key, requestedMimeType, maxSize, httprequest.getParam(\"force\", null), httprequest.isParameterSet(\"forcedownload\"));\n\t\t\t\tHTMLNode headNode=page.headNode;\n\t\t\t\tif(isJsEnabled){\n\t\t\t\t\t//If the user has enabled javascript, we add a <noscript> http refresh(if he has disabled it in the browser)\n\t\t\t\t\theadNode.addChild(\"noscript\").addChild(\"meta\", \"http-equiv\", \"Refresh\").addAttribute(\"content\", \"2;URL=\" + location);\n\t\t\t\t\t\t// If pushing is disabled, but js is enabled, then we add the original progresspage.js\n\t\t\t\t\t\tif ((isWebPushingEnabled = ctx.getContainer().isFProxyWebPushingEnabled()) == false) {\n\t\t\t\t\t\t\tHTMLNode scriptNode = headNode.addChild(\"script\", \"//abc\");\n\t\t\t\t\t\t\tscriptNode.addAttribute(\"type\", \"text/javascript\");\n\t\t\t\t\t\t\tscriptNode.addAttribute(\"src\", \"/static/js/progresspage.js\");\n\t\t\t\t\t\t}\n\t\t\t\t}else{\n\t\t\t\t\t//If he disabled it, we just put the http refresh meta, without the noscript\n\t\t\t\t\theadNode.addChild(\"meta\", \"http-equiv\", \"Refresh\").addAttribute(\"content\", \"2;URL=\" + location);\n\t\t\t\t}\n\t\t\t\tHTMLNode contentNode = page.content;\n\t\t\t\tHTMLNode infobox = contentNode.addChild(\"div\", \"class\", \"infobox infobox-information\");\n\t\t\t\tinfobox.addChild(\"div\", \"class\", \"infobox-header\", l10n(\"fetchingPageBox\"));\n\t\t\t\tHTMLNode infoboxContent = infobox.addChild(\"div\", \"class\", \"infobox-content\");\n\t\t\t\tinfoboxContent.addAttribute(\"id\", \"infoContent\");\n\t\t\t\tinfoboxContent.addChild(new ProgressInfoElement(fetchTracker, key, fctx, maxSize, core.isAdvancedModeEnabled(), ctx, isWebPushingEnabled));\n\n\t\t\t\t\n\t\t\t\tHTMLNode table = infoboxContent.addChild(\"table\", \"border\", \"0\");\n\t\t\t\tHTMLNode progressCell = table.addChild(\"tr\").addChild(\"td\", \"class\", \"request-progress\");\n\t\t\t\tif(fr.totalBlocks <= 0)\n\t\t\t\t\tprogressCell.addChild(\"#\", NodeL10n.getBase().getString(\"QueueToadlet.unknown\"));\n\t\t\t\telse {\n\t\t\t\t\tprogressCell.addChild(new ProgressBarElement(fetchTracker,key,fctx,maxSize,ctx, isWebPushingEnabled));\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tinfobox = contentNode.addChild(\"div\", \"class\", \"infobox infobox-information\");\n\t\t\t\tinfobox.addChild(\"div\", \"class\", \"infobox-header\", l10n(\"fetchingPageOptions\"));\n\t\t\t\tinfoboxContent = infobox.addChild(\"div\", \"class\", \"infobox-content\");\n\n\t\t\t\tHTMLNode optionList = infoboxContent.addChild(\"ul\");\n\t\t\t\toptionList.addChild(\"li\").addChild(\"p\", l10n(\"progressOptionZero\"));\n\t\t\t\t\n\t\t\t\taddDownloadOptions(ctx, optionList, key, mimeType, false, false, core);\n\n\t\t\t\toptionList.addChild(\"li\").addChild(ctx.getPageMaker().createBackLink(ctx, l10n(\"goBackToPrev\")));\n\t\t\t\toptionList.addChild(\"li\").addChild(\"a\", new String[] { \"href\", \"title\" },\n\t\t\t\t\t\tnew String[] { \"/\", NodeL10n.getBase().getString(\"Toadlet.homepage\") }, l10n(\"abortToHomepage\"));\n\t\t\t\t\n\t\t\t\tMultiValueTable<String, String> retHeaders = new MultiValueTable<String, String>();\n\t\t\t\t//retHeaders.put(\"Refresh\", \"2; url=\"+location);\n\t\t\t\twriteHTMLReply(ctx, 200, \"OK\", retHeaders, pageNode.generate());\n\t\t\t\tfr.close();\n\t\t\t\tfetch.close();\n\t\t\t\treturn;\n\t\t\t} else if(fr != null)\n\t\t\t\tfr.close();\n\t\t\t}\n\t\t\n\t\ttry {\n\t\t\tif(logMINOR)\n\t\t\t\tLogger.minor(this, \"FProxy fetching \"+key+\" (\"+maxSize+ ')');\n\t\t\tif(data == null && fe == null) {\n\t\t\t\tboolean needsFetch=true;\n\t\t\t\t//If we don't have the data, then check if an FProxyFetchInProgress has. It can happen when one FetchInProgress downloaded an image\n\t\t\t\t//asynchronously, then loads it. This way a FetchInprogress will have the full image, and no need to block.\n\t\t\t\tFProxyFetchInProgress progress=fetchTracker.getFetchInProgress(key, maxSize, fctx);\n\t\t\t\tif(progress!=null){\n\t\t\t\t\tFProxyFetchWaiter waiter=null;\n\t\t\t\t\tFProxyFetchResult result=null;\n\t\t\t\t\ttry{\n\t\t\t\t\t\twaiter=progress.getWaiter();\n\t\t\t\t\t\tresult=waiter.getResult(false);\n\t\t\t\t\t\tif(result.failed==null && result.data!=null){\n\t\t\t\t\t\t\tmimeType=result.mimeType;\n\t\t\t\t\t\t\tdata=result.data;\n\t\t\t\t\t\t\tdata=ctx.getBucketFactory().makeBucket(result.data.size());\n\t\t\t\t\t\t\tBucketTools.copy(result.data, data);\n\t\t\t\t\t\t\tneedsFetch=false;\n\t\t\t\t\t\t}\n\t\t\t\t\t}finally{\n\t\t\t\t\t\tif(waiter!=null){\n\t\t\t\t\t\t\tprogress.close(waiter);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif(result!=null){\n\t\t\t\t\t\t\tprogress.close(result);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif(needsFetch){\n\t\t\t\t\t//If we don't have the data, then we need to fetch it and block until it is available\n\t\t\t\t\tFetchResult result = fetch(key, maxSize, new RequestClient() {\n\t\t\t\t\t\tpublic boolean persistent() {\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tpublic void removeFrom(ObjectContainer container) {\n\t\t\t\t\t\t\tthrow new UnsupportedOperationException();\n\t\t\t\t\t\t}\n\t\t\t\t\t\tpublic boolean realTimeFlag() {\n\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t} }, fctx); \n\t\t\t\t\t\n\t\t\t\t\t// Now, is it safe?\n\t\t\t\t\t\n\t\t\t\t\tdata = result.asBucket();\n\t\t\t\t\tmimeType = result.getMimeType();\n\t\t\t\t}\n\t\t\t} else if(fe != null) throw fe;\n\t\t\t\n\t\t\thandleDownload(ctx, data, ctx.getBucketFactory(), mimeType, requestedMimeType, forceString, httprequest.isParameterSet(\"forcedownload\"), \"/\", key, maxSize != MAX_LENGTH ? \"&max-size=\"+maxSize : \"\", referer, true, ctx, core, fr != null, maybeCharset);\n\t\t} catch (FetchException e) {\n\t\t\t//Handle exceptions thrown from the ContentFilter\n\t\t\tString msg = e.getMessage();\n\t\t\tif(logMINOR) {\n\t\t\t\tLogger.minor(this, \"Failed to fetch \"+uri+\" : \"+e);\n\t\t\t}\n\t\t\tif(e.newURI != null) {\n\t\t\t\tif(accept != null && (accept.startsWith(\"text/css\") || accept.startsWith(\"image/\")) && recursion++ < MAX_RECURSION) {\n\t\t\t\t\t// If it's an image or a CSS fetch, auto-follow the redirect, up to a limit.\n\t\t\t\t\tString link = getLink(e.newURI, requestedMimeType, maxSize, httprequest.getParam(\"force\", null), httprequest.isParameterSet(\"forcedownload\"));\n\t\t\t\t\ttry {\n\t\t\t\t\t\turi = new URI(link);\n\t\t\t\t\t\tinnerHandleMethodGET(uri, httprequest, ctx, recursion);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t} catch (URISyntaxException e1) {\n\t\t\t\t\t\tLogger.error(this, \"Caught \"+e1+\" parsing new link \"+link, e1);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tToadlet.writePermanentRedirect(ctx, msg,\n\t\t\t\t\tgetLink(e.newURI, requestedMimeType, maxSize, httprequest.getParam(\"force\", null), httprequest.isParameterSet(\"forcedownload\")));\n\t\t\t} else if(e.mode == FetchException.TOO_BIG) {\n\t\t\t\tPageNode page = ctx.getPageMaker().getPageNode(l10n(\"fileInformationTitle\"), ctx);\n\t\t\t\tHTMLNode pageNode = page.outer;\n\t\t\t\tHTMLNode contentNode = page.content;\n\t\t\t\t\n\t\t\t\tHTMLNode infobox = contentNode.addChild(\"div\", \"class\", \"infobox infobox-information\");\n\t\t\t\tinfobox.addChild(\"div\", \"class\", \"infobox-header\", l10n(\"largeFile\"));\n\t\t\t\tHTMLNode infoboxContent = infobox.addChild(\"div\", \"class\", \"infobox-content\");\n\t\t\t\tHTMLNode fileInformationList = infoboxContent.addChild(\"ul\");\n\t\t\t\tHTMLNode option = fileInformationList.addChild(\"li\");\n\t\t\t\toption.addChild(\"#\", (l10n(\"filenameLabel\") + ' '));\n\t\t\t\toption.addChild(\"a\", \"href\", '/' + key.toString(), getFilename(key, e.getExpectedMimeType()));\n\n\t\t\t\tString mime = writeSizeAndMIME(fileInformationList, e);\n\t\t\t\t\n\t\t\t\tinfobox = contentNode.addChild(\"div\", \"class\", \"infobox infobox-information\");\n\t\t\t\tinfobox.addChild(\"div\", \"class\", \"infobox-header\", l10n(\"explanationTitle\"));\n\t\t\t\tinfoboxContent = infobox.addChild(\"div\", \"class\", \"infobox-content\");\n\t\t\t\tinfoboxContent.addChild(\"#\", l10n(\"largeFileExplanationAndOptions\"));\n\t\t\t\tHTMLNode optionList = infoboxContent.addChild(\"ul\");\n\t\t\t\t//HTMLNode optionTable = infoboxContent.addChild(\"table\", \"border\", \"0\");\n\t\t\t\tif(!restricted) {\n\t\t\t\t\toption = optionList.addChild(\"li\");\n\t\t\t\t\tHTMLNode optionForm = option.addChild(\"form\", new String[] { \"action\", \"method\" }, new String[] {'/' + key.toString(), \"get\" });\n\t\t\t\t\toptionForm.addChild(\"input\", new String[] { \"type\", \"name\", \"value\" }, new String[] { \"hidden\", \"max-size\", String.valueOf(e.expectedSize == -1 ? Long.MAX_VALUE : e.expectedSize*2) });\n\t\t\t\t\toptionForm.addChild(\"input\", new String[] { \"type\", \"name\", \"value\" }, new String[] { \"submit\", \"fetch\", l10n(\"fetchLargeFileAnywayAndDisplayButton\") });\n\t\t\t\t\toptionForm.addChild(\"#\", \" - \" + l10n(\"fetchLargeFileAnywayAndDisplay\"));\n\t\t\t\t\taddDownloadOptions(ctx, optionList, key, mime, false, false, core);\n\t\t\t\t}\n\t\t\t\t\n\n\t\t\t\t//optionTable.addChild(\"tr\").addChild(\"td\", \"colspan\", \"2\").addChild(\"a\", new String[] { \"href\", \"title\" }, new String[] { \"/\", NodeL10n.getBase().getString(\"Toadlet.homepage\") }, l10n(\"abortToHomepage\"));\n\t\t\t\toptionList.addChild(\"li\").addChild(\"a\", new String[] { \"href\", \"title\" }, new String[] { \"/\", NodeL10n.getBase().getString(\"Toadlet.homepage\") }, l10n(\"abortToHomepage\"));\n\t\t\t\t\n\t\t\t\t//option = optionTable.addChild(\"tr\").addChild(\"td\", \"colspan\", \"2\");\n\t\t\t\toptionList.addChild(\"li\").addChild(ctx.getPageMaker().createBackLink(ctx, l10n(\"goBackToPrev\")));\n\t\t\t\t\n\t\t\t\twriteHTMLReply(ctx, 200, \"OK\", pageNode.generate());\n\t\t\t} else {\n\t\t\t\tPageNode page = ctx.getPageMaker().getPageNode(e.getShortMessage(), ctx);\n\t\t\t\tHTMLNode pageNode = page.outer;\n\t\t\t\tHTMLNode contentNode = page.content;\n\n\t\t\t\tHTMLNode infobox = contentNode.addChild(\"div\", \"class\", \"infobox infobox-error\");\n\t\t\t\tinfobox.addChild(\"div\", \"class\", \"infobox-header\", l10n(\"errorWithReason\", \"error\", e.getShortMessage()));\n\t\t\t\tHTMLNode infoboxContent = infobox.addChild(\"div\", \"class\", \"infobox-content\");\n\t\t\t\tHTMLNode fileInformationList = infoboxContent.addChild(\"ul\");\n\t\t\t\tHTMLNode option = fileInformationList.addChild(\"li\");\n\t\t\t\toption.addChild(\"#\", (l10n(\"filenameLabel\") + ' '));\n\t\t\t\toption.addChild(\"a\", \"href\", '/' + key.toString(), getFilename(key, e.getExpectedMimeType()));\n\n\t\t\t\tString mime = writeSizeAndMIME(fileInformationList, e);\n\t\t\t\tinfobox = contentNode.addChild(\"div\", \"class\", \"infobox infobox-error\");\n\t\t\t\tinfobox.addChild(\"div\", \"class\", \"infobox-header\", l10n(\"explanationTitle\"));\n\t\t\t\tinfoboxContent = infobox.addChild(\"div\", \"class\", \"infobox-content\");\n\t\t\t\tinfoboxContent.addChild(\"p\", l10n(\"unableToRetrieve\"));\n\t\t\t\tUnsafeContentTypeException filterException = null;\n\t\t\t\tif(e.getCause() != null && e.getCause() instanceof UnsafeContentTypeException) {\n\t\t\t\t\tfilterException = (UnsafeContentTypeException)e.getCause();\n\t\t\t\t}\n\t\t\t\tif(e.isFatal() && filterException == null)\n\t\t\t\t\tinfoboxContent.addChild(\"p\", l10n(\"errorIsFatal\"));\n\t\t\t\tinfoboxContent.addChild(\"p\", msg);\n\t\t\t\tif(filterException != null) {\n\t\t\t\t\tif(filterException.details() != null) {\n\t\t\t\t\t\tHTMLNode detailList = infoboxContent.addChild(\"ul\");\n\t\t\t\t\t\tfor(String detail : filterException.details()) {\n\t\t\t\t\t\t\tdetailList.addChild(\"li\", detail);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif(e.errorCodes != null) {\n\t\t\t\t\tinfoboxContent.addChild(\"p\").addChild(\"pre\").addChild(\"#\", e.errorCodes.toVerboseString());\n\t\t\t\t}\n\n\t\t\t\tinfobox = contentNode.addChild(\"div\", \"class\", \"infobox infobox-error\");\n\t\t\t\tinfobox.addChild(\"div\", \"class\", \"infobox-header\", l10n(\"options\"));\n\t\t\t\tinfoboxContent = infobox.addChild(\"div\", \"class\", \"infobox-content\");\n\t\t\t\t\n\t\t\t\tHTMLNode optionList = infoboxContent.addChild(\"ul\");\n\n\t\t\t\tPluginInfoWrapper keyUtil;\n\t\t\t\tif((e.mode == FetchException.NOT_IN_ARCHIVE || e.mode == FetchException.NOT_ENOUGH_PATH_COMPONENTS)) { \n\t\t\t\t\t// first look for the newest version\n\t\t\t\t\tif ((keyUtil = core.node.pluginManager.getPluginInfo(\"plugins.KeyUtils.KeyUtilsPlugin\")) != null) {\n\t\t\t\t\t\toption = optionList.addChild(\"li\");\n\t\t\t\t\t\tif (keyUtil.getPluginLongVersion() < 5010) \n\t\t\t\t\t\t\tNodeL10n.getBase().addL10nSubstitution(option, \"FProxyToadlet.openWithKeyExplorer\", new String[] { \"link\" }, new HTMLNode[] { HTMLNode.link(\"/KeyUtils/?automf=true&key=\" + key.toString()) });\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tNodeL10n.getBase().addL10nSubstitution(option, \"FProxyToadlet.openWithKeyExplorer\", new String[] { \"link\" }, new HTMLNode[] { HTMLNode.link(\"/KeyUtils/?key=\" + key.toString()) });\n\t\t\t\t\t\t\toption = optionList.addChild(\"li\");\n\t\t\t\t\t\t\tNodeL10n.getBase().addL10nSubstitution(option, \"FProxyToadlet.openWithSiteExplorer\", new String[] { \"link\" }, new HTMLNode[] { HTMLNode.link(\"/KeyUtils/Site?key=\" + key.toString()) });\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if ((keyUtil = core.node.pluginManager.getPluginInfo(\"plugins.KeyExplorer.KeyExplorer\")) != null) {\n\t\t\t\t\t\toption = optionList.addChild(\"li\");\n\t\t\t\t\t\tif (keyUtil.getPluginLongVersion() > 4999)\n\t\t\t\t\t\t\tNodeL10n.getBase().addL10nSubstitution(option, \"FProxyToadlet.openWithKeyExplorer\", new String[] { \"link\" }, new HTMLNode[] { HTMLNode.link(\"/KeyExplorer/?automf=true&key=\" + key.toString())});\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\tNodeL10n.getBase().addL10nSubstitution(option, \"FProxyToadlet.openWithKeyExplorer\", new String[] { \"link\" }, new HTMLNode[] { HTMLNode.link(\"/plugins/plugins.KeyExplorer.KeyExplorer/?key=\" + key.toString())});\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif(filterException != null) {\n\t\t\t\t\tif((mime.equals(\"application/x-freenet-index\")) && (core.node.pluginManager.isPluginLoaded(\"plugins.ThawIndexBrowser.ThawIndexBrowser\"))) {\n\t\t\t\t\t\toption = optionList.addChild(\"li\");\n\t\t\t\t\t\tNodeL10n.getBase().addL10nSubstitution(option, \"FProxyToadlet.openAsThawIndex\", new String[] { \"link\" }, new HTMLNode[] { HTMLNode.link(\"/plugins/plugins.ThawIndexBrowser.ThawIndexBrowser/?key=\" + key.toString()).addChild(\"b\") });\n\t\t\t\t\t}\n\t\t\t\t\toption = optionList.addChild(\"li\");\n\t\t\t\t\t// FIXME: is this safe? See bug #131\n\t\t\t\t\tNodeL10n.getBase().addL10nSubstitution(option, \"FProxyToadlet.openAsText\", new String[] { \"link\" }, new HTMLNode[] { HTMLNode.link(getLink(key, \"text/plain\", maxSize, null, false)) });\n\t\t\t\t\toption = optionList.addChild(\"li\");\n\t\t\t\t\tNodeL10n.getBase().addL10nSubstitution(option, \"FProxyToadlet.openForceDisk\", new String[] { \"link\" }, new HTMLNode[] { HTMLNode.link(getLink(key, mime, maxSize, null, true)) });\n\t\t\t\t\tif(!(mime.equals(\"application/octet-stream\") || mime.equals(\"application/x-msdownload\"))) {\n\t\t\t\t\t\toption = optionList.addChild(\"li\");\n\t\t\t\t\t\tNodeL10n.getBase().addL10nSubstitution(option, \"FProxyToadlet.openForce\", new String[] { \"link\", \"mime\" }, new HTMLNode[] { HTMLNode.link(getLink(key, mime, maxSize, getForceValue(key, now), false)), HTMLNode.text(HTMLEncoder.encode(mime))});\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif((!e.isFatal() || filterException != null) && (ctx.isAllowedFullAccess() || !container.publicGatewayMode())) {\n\t\t\t\t\taddDownloadOptions(ctx, optionList, key, mimeType, filterException != null, filterException != null, core);\n\t\t\t\t\toptionList.addChild(\"li\").\n\t\t\t\t\t\taddChild(\"a\", \"href\", getLink(key, requestedMimeType, maxSize, httprequest.getParam(\"force\", null),\n\t\t\t\t\t\t\t\t\thttprequest.isParameterSet(\"forcedownload\"))).addChild(\"#\", l10n(\"retryNow\"));\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\toptionList.addChild(\"li\").addChild(\"a\", new String[] { \"href\", \"title\" }, new String[] { \"/\", NodeL10n.getBase().\n\t\t\t\t\t\tgetString(\"Toadlet.homepage\") }, l10n(\"abortToHomepage\"));\n\t\t\t\t\n\t\t\t\toptionList.addChild(\"li\").addChild(ctx.getPageMaker().createBackLink(ctx, l10n(\"goBackToPrev\")));\n\t\t\t\tthis.writeHTMLReply(ctx, (e.mode == 10) ? 404 : 500 /* close enough - FIXME probably should depend on status code */,\n\t\t\t\t\t\t\"Internal Error\", pageNode.generate());\n\t\t\t}\n\t\t} catch (SocketException e) {\n\t\t\t// Probably irrelevant\n\t\t\tif(e.getMessage().equals(\"Broken pipe\")) {\n\t\t\t\tif(logMINOR)\n\t\t\t\t\tLogger.minor(this, \"Caught \"+e+\" while handling GET\", e);\n\t\t\t} else {\n\t\t\t\tLogger.normal(this, \"Caught \"+e);\n\t\t\t}\n\t\t\tthrow e;\n\t\t} catch (Throwable t) {\n\t\t\twriteInternalError(t, ctx);\n\t\t} finally {\n\t\t\tif(fr == null && data != null) data.free();\n\t\t\tif(fr != null) fr.close();\n\t\t}\n\t}","commit_id":"d8d5839d623556d5ba1061f55ebfc16ce9c1fdaf","url":"https://github.com/freenet/fred"},{"original_method":"public void handleMethodGET(URI uri, HTTPRequest httprequest, ToadletContext ctx) \n\t\t\tthrows ToadletContextClosedException, IOException, RedirectException {\n\n\t\tString ks = uri.getPath();\n\t\t\n\t\tboolean logMINOR = Logger.shouldLog(Logger.MINOR, this);\n\t\t\n\t\tif (ks.equals(\"/\")) {\n\t\t\tif (httprequest.isParameterSet(\"key\")) {\n\t\t\t\tString k = httprequest.getParam(\"key\");\n\t\t\t\tFreenetURI newURI;\n\t\t\t\ttry {\n\t\t\t\t\tnewURI = new FreenetURI(k);\n\t\t\t\t} catch (MalformedURLException e) {\n\t\t\t\t\tLogger.normal(this, \"Invalid key: \"+e+\" for \"+k, e);\n\t\t\t\t\tsendErrorPage(ctx, 404, l10n(\"notFoundTitle\"), NodeL10n.getBase().getString(\"FProxyToadlet.invalidKeyWithReason\", new String[] { \"reason\" }, new String[] { e.toString() }));\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif(logMINOR) Logger.minor(this, \"Redirecting to FreenetURI: \"+newURI);\n\t\t\t\tString requestedMimeType = httprequest.getParam(\"type\");\n\t\t\t\tlong maxSize = httprequest.getLongParam(\"max-size\", MAX_LENGTH);\n\t\t\t\tString location = getLink(newURI, requestedMimeType, maxSize, httprequest.getParam(\"force\", null), httprequest.isParameterSet(\"forcedownload\"));\n\t\t\t\twriteTemporaryRedirect(ctx, null, location);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t\n\t\t\ttry {\n\t\t\t\tString querystring = uri.getQuery();\n\t\t\t\t\n\t\t\t\tif (querystring == null) {\n\t\t\t\t\tthrow new RedirectException(welcome);\n\t\t\t\t} else {\n\t\t\t\t\t// TODP possibly a proper URLEncode method\n\t\t\t\t\tquerystring = querystring.replace(' ', '+');\n\t\t\t\t\tthrow new RedirectException(\"/welcome/?\" + querystring);\n\t\t\t\t}\n\t\t\t} catch (URISyntaxException e) {\n\t\t\t\t// HUH!?!\n\t\t\t}\n\t\t}else if(ks.equals(\"/favicon.ico\")){\n\t\t\tbyte[] buf = new byte[1024];\n\t\t\tint len;\n\t\t\tInputStream strm = getClass().getResourceAsStream(\"staticfiles/favicon.ico\");\n\t\t\t\n\t\t\tif (strm == null) {\n\t\t\t\tthis.sendErrorPage(ctx, 404, l10n(\"pathNotFoundTitle\"), l10n(\"pathNotFound\"));\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tctx.sendReplyHeaders(200, \"OK\", null, \"image/x-icon\", strm.available());\n\t\t\t\n\t\t\twhile ( (len = strm.read(buf)) > 0) {\n\t\t\t\tctx.writeData(buf, 0, len);\n\t\t\t}\n\t\t\tstrm.close();\n\t\t\treturn;\n\t\t} else if(ks.startsWith(\"/feed/\") || ks.equals(\"/feed\")) {\n\t\t\t//TODO Better way to find the host. Find if https is used?\n\t\t\tString host = ctx.getHeaders().get(\"host\");\n\t\t\tString atom = core.alerts.getAtom(\"http://\" + host);\n\t\t\tbyte[] buf = atom.getBytes(\"UTF-8\");\n\t\t\tctx.sendReplyHeaders(200, \"OK\", null, \"application/atom+xml\", buf.length);\n\t\t\tctx.writeData(buf, 0, buf.length);\n\t\t\treturn;\n\t\t}else if(ks.equals(\"/robots.txt\") && ctx.doRobots()){\n\t\t\tthis.writeTextReply(ctx, 200, \"Ok\", \"User-agent: *\\nDisallow: /\");\n\t\t\treturn;\n\t\t}else if(ks.startsWith(\"/darknet/\") || ks.equals(\"/darknet\")) { //TODO (pre-build 1045 url format) remove when obsolete\n\t\t\twritePermanentRedirect(ctx, \"obsoleted\", \"/friends/\");\n\t\t\treturn;\n\t\t}else if(ks.startsWith(\"/opennet/\") || ks.equals(\"/opennet\")) { //TODO (pre-build 1045 url format) remove when obsolete\n\t\t\twritePermanentRedirect(ctx, \"obsoleted\", \"/strangers/\");\n\t\t\treturn;\n\t\t} else if(ks.startsWith(\"/queue/\")) {\n\t\t\twritePermanentRedirect(ctx, \"obsoleted\", \"/downloads/\");\n\t\t\treturn;\n\t\t} else if(ks.startsWith(\"/config/\")) {\n\t\t\twritePermanentRedirect(ctx, \"obsoleted\", \"/config/node\");\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tif(ks.startsWith(\"/\"))\n\t\t\tks = ks.substring(1);\n\t\t\n\t\tlong maxSize;\n\t\t\n\t\tboolean restricted = (container.publicGatewayMode() && !ctx.isAllowedFullAccess());\n\t\t\n\t\tif(restricted)\n\t\t\tmaxSize = MAX_LENGTH;\n\t\telse \n\t\t\tmaxSize = httprequest.getLongParam(\"max-size\", MAX_LENGTH);\n\t\t\n\t\t//first check of httprange before get\n\t\t// only valid number format is checked here\n\t\tString rangeStr = ctx.getHeaders().get(\"range\");\n\t\tif (rangeStr != null) {\n\t\t\ttry {\n\t\t\t\tparseRange(rangeStr);\n\t\t\t} catch (HTTPRangeException e) {\n\t\t\t\tLogger.normal(this, \"Invalid Range Header: \"+rangeStr, e);\n\t\t\t\tctx.sendReplyHeaders(416, \"Requested Range Not Satisfiable\", null, null, 0);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\t\n\t\tFreenetURI key;\n\t\ttry {\n\t\t\tkey = new FreenetURI(ks);\n\t\t} catch (MalformedURLException e) {\n\t\t\tPageNode page = ctx.getPageMaker().getPageNode(l10n(\"invalidKeyTitle\"), ctx);\n\t\t\tHTMLNode pageNode = page.outer;\n\t\t\tHTMLNode contentNode = page.content;\n\n\t\t\tHTMLNode errorInfobox = contentNode.addChild(\"div\", \"class\", \"infobox infobox-error\");\n\t\t\terrorInfobox.addChild(\"div\", \"class\", \"infobox-header\", NodeL10n.getBase().getString(\"FProxyToadlet.invalidKeyWithReason\", new String[] { \"reason\" }, new String[] { e.toString() }));\n\t\t\tHTMLNode errorContent = errorInfobox.addChild(\"div\", \"class\", \"infobox-content\");\n\t\t\terrorContent.addChild(\"#\", l10n(\"expectedKeyButGot\"));\n\t\t\terrorContent.addChild(\"code\", ks);\n\t\t\terrorContent.addChild(\"br\");\n\t\t\terrorContent.addChild(ctx.getPageMaker().createBackLink(ctx, l10n(\"goBack\")));\n\t\t\terrorContent.addChild(\"br\");\n\t\t\taddHomepageLink(errorContent);\n\n\t\t\tthis.writeHTMLReply(ctx, 400, l10n(\"invalidKeyTitle\"), pageNode.generate());\n\t\t\treturn;\n\t\t}\n\t\tString requestedMimeType = httprequest.getParam(\"type\", null);\n\t\tString override = (requestedMimeType == null) ? \"\" : \"?type=\"+URLEncoder.encode(requestedMimeType,true);\n\t\t// No point passing ?force= across a redirect, since the key will change.\n\t\t// However, there is every point in passing ?forcedownload.\n\t\tif(httprequest.isParameterSet(\"forcedownload\")) {\n\t\t\tif(override.length() == 0) override = \"?forcedownload\";\n\t\t\telse override = override+\"&forcedownload\";\n\t\t}\n\n\t\tBucket data = null;\n\t\tString mimeType = null;\n\t\tString referer = sanitizeReferer(ctx);\n\t\tFetchException fe = null;\n\t\t\n\n\t\tMultiValueTable<String,String> headers = ctx.getHeaders();\n\t\tString ua = headers.get(\"user-agent\");\n\t\tString accept = headers.get(\"accept\");\n\t\tFProxyFetchResult fr = null;\n\t\tif(logMINOR) Logger.minor(this, \"UA = \"+ua+\" accept = \"+accept);\n\t\tif(isBrowser(ua) && !ctx.disableProgressPage() && (accept == null || accept.indexOf(\"text/html\") > -1) && !httprequest.isParameterSet(\"forcedownload\")) {\n\t\t\tFProxyFetchWaiter fetch = null;\n\t\t\ttry {\n\t\t\t\tfetch = fetchTracker.makeFetcher(key, maxSize);\n\t\t\t} catch (FetchException e) {\n\t\t\t\tfe = fr.failed;\n\t\t\t}\n\t\t\tif(fetch != null)\n\t\t\twhile(true) {\n\t\t\tfr = fetch.getResult();\n\t\t\tif(fr.hasData()) {\n\t\t\t\tif(logMINOR) Logger.minor(this, \"Found data\");\n\t\t\t\tdata = fr.data;\n\t\t\t\tmimeType = fr.mimeType;\n\t\t\t\tfetch.close(); // Not waiting any more, but still locked the results until sent\n\t\t\t\tbreak;\n\t\t\t} else if(fr.failed != null) {\n\t\t\t\tif(logMINOR) Logger.minor(this, \"Request failed\");\n\t\t\t\tfe = fr.failed;\n\t\t\t\tfetch.close(); // Not waiting any more, but still locked the results until sent\n\t\t\t\tbreak;\n\t\t\t} else {\n\t\t\t\tif(logMINOR) Logger.minor(this, \"Still in progress\");\n\t\t\t\t// Still in progress\n\t\t\t\tboolean isJsEnabled=ctx.getContainer().isFProxyJavascriptEnabled() && ua != null && !ua.contains(\"AppleWebKit/\");\n\t\t\t\tPageNode page = ctx.getPageMaker().getPageNode(l10n(\"fetchingPageTitle\"), ctx);\n\t\t\t\tHTMLNode pageNode = page.outer;\n\t\t\t\tString location = getLink(key, requestedMimeType, maxSize, httprequest.getParam(\"force\", null), httprequest.isParameterSet(\"forcedownload\"));\n\t\t\t\tHTMLNode headNode=page.headNode;\n\t\t\t\tif(isJsEnabled){\n\t\t\t\t\t//If the user has enabled javascript, we add a <noscript> http refresh(if he has disabled it in the browser)\n\t\t\t\t\t//And the script file\n\t\t\t\t\theadNode.addChild(\"noscript\").addChild(\"meta\", \"http-equiv\", \"Refresh\").addAttribute(\"content\", \"2;URL=\" + location);\n\t\t\t\t\tHTMLNode scriptNode=headNode.addChild(\"script\",\"//abc\");\n\t\t\t\t\tscriptNode.addAttribute(\"type\", \"text/javascript\");\n\t\t\t\t\tscriptNode.addAttribute(\"src\", \"/static/js/progresspage.js\");\n\t\t\t\t}else{\n\t\t\t\t\t//If he disabled it, we just put the http refresh meta, without the noscript\n\t\t\t\t\theadNode.addChild(\"meta\", \"http-equiv\", \"Refresh\").addAttribute(\"content\", \"2;URL=\" + location);\n\t\t\t\t}\n\t\t\t\tHTMLNode contentNode = page.content;\n\t\t\t\tHTMLNode infobox = contentNode.addChild(\"div\", \"class\", \"infobox infobox-information\");\n\t\t\t\tinfobox.addChild(\"div\", \"class\", \"infobox-header\", l10n(\"fetchingPageBox\"));\n\t\t\t\tHTMLNode infoboxContent = infobox.addChild(\"div\", \"class\", \"infobox-content\");\n\t\t\t\tinfoboxContent.addAttribute(\"id\", \"infoContent\");\n\t\t\t\tinfoboxContent.addChild(\"#\", l10n(\"filenameLabel\")+ \" \");\n\t\t\t\tinfoboxContent.addChild(\"a\", \"href\", \"/\"+key.toString(false, false), key.getPreferredFilename());\n\t\t\t\tif(fr.mimeType != null) infoboxContent.addChild(\"br\", l10n(\"contentTypeLabel\")+\" \"+fr.mimeType);\n\t\t\t\tif(fr.size > 0) infoboxContent.addChild(\"br\", \"Size: \"+SizeUtil.formatSize(fr.size));\n\t\t\t\tif(core.isAdvancedModeEnabled()) {\n\t\t\t\t\tinfoboxContent.addChild(\"br\", l10n(\"blocksDetail\", \n\t\t\t\t\t\t\tnew String[] { \"fetched\", \"required\", \"total\", \"failed\", \"fatallyfailed\" },\n\t\t\t\t\t\t\tnew String[] { Integer.toString(fr.fetchedBlocks), Integer.toString(fr.requiredBlocks), Integer.toString(fr.totalBlocks), Integer.toString(fr.failedBlocks), Integer.toString(fr.fatallyFailedBlocks) }));\n\t\t\t\t}\n\t\t\t\tinfoboxContent.addChild(\"br\", l10n(\"timeElapsedLabel\")+\" \"+TimeUtil.formatTime(System.currentTimeMillis() - fr.timeStarted));\n\t\t\t\tlong eta = fr.eta;\n\t\t\t\tif(eta > 0)\n\t\t\t\t\tinfoboxContent.addChild(\"br\", \"ETA: \"+TimeUtil.formatTime(eta));\n\t\t\t\tif(fr.goneToNetwork)\n\t\t\t\t\tinfoboxContent.addChild(\"p\", l10n(\"progressDownloading\"));\n\t\t\t\telse\n\t\t\t\t\tinfoboxContent.addChild(\"p\", l10n(\"progressCheckingStore\"));\n\t\t\t\tif(!fr.finalizedBlocks)\n\t\t\t\t\tinfoboxContent.addChild(\"p\", l10n(\"progressNotFinalized\"));\n\t\t\t\t\n\t\t\t\tHTMLNode table = infoboxContent.addChild(\"table\", \"border\", \"0\");\n\t\t\t\tHTMLNode progressCell = table.addChild(\"tr\").addChild(\"td\", \"class\", \"request-progress\");\n\t\t\t\tif(fr.totalBlocks <= 0)\n\t\t\t\t\tprogressCell.addChild(\"#\", NodeL10n.getBase().getString(\"QueueToadlet.unknown\"));\n\t\t\t\telse {\n\t\t\t\t\tint total = fr.requiredBlocks;\n\t\t\t\t\tint fetchedPercent = (int) (fr.fetchedBlocks / (double) total * 100);\n\t\t\t\t\tint failedPercent = (int) (fr.failedBlocks / (double) total * 100);\n\t\t\t\t\tint fatallyFailedPercent = (int) (fr.fatallyFailedBlocks / (double) total * 100);\n\t\t\t\t\tHTMLNode progressBar = progressCell.addChild(\"div\", \"class\", \"progressbar\");\n\t\t\t\t\tprogressBar.addChild(\"div\", new String[] { \"class\", \"style\" }, new String[] { \"progressbar-done\", \"width: \" + fetchedPercent + \"%;\" });\n\n\t\t\t\t\tif (fr.failedBlocks > 0)\n\t\t\t\t\t\tprogressBar.addChild(\"div\", new String[] { \"class\", \"style\" }, new String[] { \"progressbar-failed\", \"width: \" + failedPercent + \"%;\" });\n\t\t\t\t\tif (fr.fatallyFailedBlocks > 0)\n\t\t\t\t\t\tprogressBar.addChild(\"div\", new String[] { \"class\", \"style\" }, new String[] { \"progressbar-failed2\", \"width: \" + fatallyFailedPercent + \"%;\" });\n\t\t\t\t\t\n\t\t\t\t\tNumberFormat nf = NumberFormat.getInstance();\n\t\t\t\t\tnf.setMaximumFractionDigits(1);\n\t\t\t\t\tString prefix = '('+Integer.toString(fr.fetchedBlocks) + \"/ \" + Integer.toString(total)+\"): \";\n\t\t\t\t\tif (fr.finalizedBlocks) {\n\t\t\t\t\t\tprogressBar.addChild(\"div\", new String[] { \"class\", \"title\" }, new String[] { \"progress_fraction_finalized\", prefix + NodeL10n.getBase().getString(\"QueueToadlet.progressbarAccurate\") }, nf.format((int) ((fr.fetchedBlocks / (double) total) * 1000) / 10.0) + '%');\n\t\t\t\t\t} else {\n\t\t\t\t\t\tString text = nf.format((int) ((fr.fetchedBlocks / (double) total) * 1000) / 10.0)+ '%';\n\t\t\t\t\t\ttext = \"\" + fr.fetchedBlocks + \" (\"+text+\"??)\";\n\t\t\t\t\t\tprogressBar.addChild(\"div\", new String[] { \"class\", \"title\" }, new String[] { \"progress_fraction_not_finalized\", prefix + NodeL10n.getBase().getString(\"QueueToadlet.progressbarNotAccurate\") }, text);\n\t\t\t\t\t}\n\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tinfobox = contentNode.addChild(\"div\", \"class\", \"infobox infobox-information\");\n\t\t\t\tinfobox.addChild(\"div\", \"class\", \"infobox-header\", l10n(\"fetchingPageOptions\"));\n\t\t\t\tinfoboxContent = infobox.addChild(\"div\", \"class\", \"infobox-content\");\n\n\t\t\t\tHTMLNode ul = infoboxContent.addChild(\"ul\");\n\t\t\t\tul.addChild(\"li\").addChild(\"p\", l10n(\"progressOptionZero\"));\n\t\t\t\t\n\t\t\t\tPHYSICAL_THREAT_LEVEL threatLevel = core.node.securityLevels.getPhysicalThreatLevel();\n\t\t\t\t\n\t\t\t\tif(!(threatLevel == PHYSICAL_THREAT_LEVEL.HIGH || threatLevel == PHYSICAL_THREAT_LEVEL.MAXIMUM)) {\n\t\t\t\t\tHTMLNode optionForm = ctx.addFormChild(ul.addChild(\"li\").addChild(\"p\"), \"/downloads/\", \"tooBigQueueForm\");\n\t\t\t\t\toptionForm.addChild(\"input\", new String[] { \"type\", \"name\", \"value\" }, new String[] { \"hidden\", \"key\", key.toString() });\n\t\t\t\t\toptionForm.addChild(\"input\", new String[] { \"type\", \"name\", \"value\" }, new String[] { \"hidden\", \"return-type\", \"disk\" });\n\t\t\t\t\toptionForm.addChild(\"input\", new String[] { \"type\", \"name\", \"value\" }, new String[] { \"hidden\", \"persistence\", \"forever\" });\n\t\t\t\t\toptionForm.addChild(\"input\", new String[] { \"type\", \"name\", \"value\" }, new String[] { \"submit\", \"download\", l10n(\"downloadInBackgroundToDiskButton\") });\n\t\t\t\t\toptionForm.addChild(\"#\", \" - \");\n\t\t\t\t\tNodeL10n.getBase().addL10nSubstitution(optionForm, \"FProxyToadlet.downloadInBackgroundToDisk\", new String[] { \"dir\", \"page\", \"/link\" }, new String[] { HTMLEncoder.encode(core.getDownloadDir().getAbsolutePath()), \"<a href=\\\"/downloads\\\">\", \"<\/a>\" });\n\t\t\t\t}\n\n\t\t\t\tif(threatLevel != PHYSICAL_THREAT_LEVEL.LOW) {\n\t\t\t\t\tHTMLNode optionForm = ctx.addFormChild(ul.addChild(\"li\").addChild(\"p\"), \"/downloads/\", \"tooBigQueueForm\");\n\t\t\t\t\toptionForm.addChild(\"input\", new String[] { \"type\", \"name\", \"value\" }, new String[] { \"hidden\", \"key\", key.toString() });\n\t\t\t\t\toptionForm.addChild(\"input\", new String[] { \"type\", \"name\", \"value\" }, new String[] { \"hidden\", \"return-type\", \"direct\" });\n\t\t\t\t\toptionForm.addChild(\"input\", new String[] { \"type\", \"name\", \"value\" }, new String[] { \"hidden\", \"persistence\", \"forever\" });\n\t\t\t\t\toptionForm.addChild(\"input\", new String[] { \"type\", \"name\", \"value\" }, new String[] { \"submit\", \"download\", l10n(\"downloadInBackgroundToTempSpaceButton\") });\n\t\t\t\t\toptionForm.addChild(\"#\", \" - \");\n\t\t\t\t\tNodeL10n.getBase().addL10nSubstitution(optionForm, \"FProxyToadlet.downloadInBackgroundToTempSpace\", new String[] { \"page\", \"/link\" }, new String[] { \"<a href=\\\"/downloads\\\">\", \"<\/a>\" });\n\n\t\t\t\t}\n\n\t\t\t\tul.addChild(\"li\").addChild(\"p\").addChild(ctx.getPageMaker().createBackLink(ctx, l10n(\"goBackToPrev\")));\n\t\t\t\t\n\t\t\t\tul.addChild(\"li\").addChild(\"p\").addChild(\"a\", new String[] { \"href\", \"title\" }, new String[] { \"/\", NodeL10n.getBase().getString(\"Toadlet.homepage\") }, l10n(\"abortToHomepage\"));\n\t\t\t\t\n\t\t\t\tMultiValueTable<String, String> retHeaders = new MultiValueTable<String, String>();\n\t\t\t\t//retHeaders.put(\"Refresh\", \"2; url=\"+location);\n\t\t\t\twriteHTMLReply(ctx, 200, \"OK\", retHeaders, pageNode.generate());\n\t\t\t\tfr.close();\n\t\t\t\tfetch.close();\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\ttry {\n\t\t\tif(Logger.shouldLog(Logger.MINOR, this))\n\t\t\t\tLogger.minor(this, \"FProxy fetching \"+key+\" (\"+maxSize+ ')');\n\t\t\tif(data == null && fe == null) {\n\t\t\tFetchResult result = fetch(key, maxSize, new RequestClient() {\n\t\t\t\tpublic boolean persistent() {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\tpublic void removeFrom(ObjectContainer container) {\n\t\t\t\t\tthrow new UnsupportedOperationException();\n\t\t\t\t} }); \n\t\t\t\n\t\t\t// Now, is it safe?\n\t\t\t\n\t\t\tdata = result.asBucket();\n\t\t\tmimeType = result.getMimeType();\n\t\t\t} else if(fe != null) throw fe;\n\t\t\t\n\t\t\t\n\t\t\thandleDownload(ctx, data, ctx.getBucketFactory(), mimeType, requestedMimeType, httprequest.getParam(\"force\", null), httprequest.isParameterSet(\"forcedownload\"), \"/\", key, maxSize != MAX_LENGTH ? \"&max-size=\"+maxSize : \"\", referer, true, ctx, core, fr != null);\n\t\t\t\n\t\t} catch (FetchException e) {\n\t\t\tString msg = e.getMessage();\n\t\t\tif(Logger.shouldLog(Logger.MINOR, this))\n\t\t\t\tLogger.minor(this, \"Failed to fetch \"+uri+\" : \"+e);\n\t\t\tif(e.newURI != null) {\n\t\t\t\tToadlet.writePermanentRedirect(ctx, msg,\n\t\t\t\t\tgetLink(e.newURI, requestedMimeType, maxSize, httprequest.getParam(\"force\", null), httprequest.isParameterSet(\"forcedownload\")));\n\t\t\t} else if(e.mode == FetchException.TOO_BIG) {\n\t\t\t\tPageNode page = ctx.getPageMaker().getPageNode(l10n(\"fileInformationTitle\"), ctx);\n\t\t\t\tHTMLNode pageNode = page.outer;\n\t\t\t\tHTMLNode contentNode = page.content;\n\t\t\t\t\n\t\t\t\tHTMLNode infobox = contentNode.addChild(\"div\", \"class\", \"infobox infobox-information\");\n\t\t\t\tinfobox.addChild(\"div\", \"class\", \"infobox-header\", l10n(\"largeFile\"));\n\t\t\t\tHTMLNode infoboxContent = infobox.addChild(\"div\", \"class\", \"infobox-content\");\n\t\t\t\tHTMLNode fileInformationList = infoboxContent.addChild(\"ul\");\n\t\t\t\tHTMLNode option = fileInformationList.addChild(\"li\");\n\t\t\t\toption.addChild(\"#\", (l10n(\"filenameLabel\") + ' '));\n\t\t\t\toption.addChild(\"a\", \"href\", '/' + key.toString(), getFilename(key, e.getExpectedMimeType()));\n\n\t\t\t\tString mime = writeSizeAndMIME(fileInformationList, e);\n\t\t\t\t\n\t\t\t\tinfobox = contentNode.addChild(\"div\", \"class\", \"infobox infobox-information\");\n\t\t\t\tinfobox.addChild(\"div\", \"class\", \"infobox-header\", l10n(\"explanationTitle\"));\n\t\t\t\tinfoboxContent = infobox.addChild(\"div\", \"class\", \"infobox-content\");\n\t\t\t\tinfoboxContent.addChild(\"#\", l10n(\"largeFileExplanationAndOptions\"));\n\t\t\t\tHTMLNode optionTable = infoboxContent.addChild(\"table\", \"border\", \"0\");\n\t\t\t\tif(!restricted) {\n\t\t\t\t\toption = optionTable.addChild(\"tr\");\n\t\t\t\t\tHTMLNode optionForm = option.addChild(\"td\").addChild(\"form\", new String[] { \"action\", \"method\" }, new String[] {'/' + key.toString(), \"get\" });\n\t\t\t\t\toptionForm.addChild(\"input\", new String[] { \"type\", \"name\", \"value\" }, new String[] { \"hidden\", \"max-size\", String.valueOf(e.expectedSize == -1 ? Long.MAX_VALUE : e.expectedSize*2) });\n\t\t\t\t\toptionForm.addChild(\"input\", new String[] { \"type\", \"name\", \"value\" }, new String[] { \"submit\", \"fetch\", l10n(\"fetchLargeFileAnywayAndDisplayButton\") });\n\t\t\t\t\toption.addChild(\"td\", l10n(\"fetchLargeFileAnywayAndDisplay\"));\n\t\t\t\t\tPHYSICAL_THREAT_LEVEL threatLevel = core.node.securityLevels.getPhysicalThreatLevel();\n\t\t\t\t\tif(!(threatLevel == PHYSICAL_THREAT_LEVEL.HIGH || threatLevel == PHYSICAL_THREAT_LEVEL.MAXIMUM)) {\n\t\t\t\t\t\toption = optionTable.addChild(\"tr\");\n\t\t\t\t\t\toptionForm = ctx.addFormChild(option.addChild(\"td\"), \"/downloads/\", \"tooBigQueueForm\");\n\t\t\t\t\t\toptionForm.addChild(\"input\", new String[] { \"type\", \"name\", \"value\" }, new String[] { \"hidden\", \"key\", key.toString() });\n\t\t\t\t\t\toptionForm.addChild(\"input\", new String[] { \"type\", \"name\", \"value\" }, new String[] { \"hidden\", \"return-type\", \"disk\" });\n\t\t\t\t\t\toptionForm.addChild(\"input\", new String[] { \"type\", \"name\", \"value\" }, new String[] { \"hidden\", \"persistence\", \"forever\" });\n\t\t\t\t\t\tif (mime != null) {\n\t\t\t\t\t\t\toptionForm.addChild(\"input\", new String[] { \"type\", \"name\", \"value\" }, new String[] { \"hidden\", \"type\", mime });\n\t\t\t\t\t\t}\n\t\t\t\t\t\toptionForm.addChild(\"input\", new String[] { \"type\", \"name\", \"value\" }, new String[] { \"submit\", \"download\", l10n(\"downloadInBackgroundToDiskButton\") });\n\t\t\t\t\t\tNodeL10n.getBase().addL10nSubstitution(optionForm.addChild(\"td\"), \"FProxyToadlet.downloadInBackgroundToDisk\", new String[] { \"dir\", \"page\", \"/link\" }, new String[] { HTMLEncoder.encode(core.getDownloadDir().getAbsolutePath()), \"<a href=\\\"/downloads\\\">\", \"<\/a>\" });\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tif(threatLevel != PHYSICAL_THREAT_LEVEL.LOW) {\n\t\t\t\t\t\n\t\t\t\t\t\toption = optionTable.addChild(\"tr\");\n\t\t\t\t\t\t\n\t\t\t\t\t\toptionForm = ctx.addFormChild(option.addChild(\"td\"), \"/downloads/\", \"tooBigQueueForm\");\n\t\t\t\t\t\toptionForm.addChild(\"input\", new String[] { \"type\", \"name\", \"value\" }, new String[] { \"hidden\", \"key\", key.toString() });\n\t\t\t\t\t\toptionForm.addChild(\"input\", new String[] { \"type\", \"name\", \"value\" }, new String[] { \"hidden\", \"return-type\", \"direct\" });\n\t\t\t\t\t\toptionForm.addChild(\"input\", new String[] { \"type\", \"name\", \"value\" }, new String[] { \"hidden\", \"persistence\", \"forever\" });\n\t\t\t\t\t\tif (mime != null) {\n\t\t\t\t\t\t\toptionForm.addChild(\"input\", new String[] { \"type\", \"name\", \"value\" }, new String[] { \"hidden\", \"type\", mime });\n\t\t\t\t\t\t}\n\t\t\t\t\t\toptionForm.addChild(\"input\", new String[] { \"type\", \"name\", \"value\" }, new String[] { \"submit\", \"download\", l10n(\"downloadInBackgroundToTempSpaceButton\") });\n\t\t\t\t\t\tNodeL10n.getBase().addL10nSubstitution(option.addChild(\"td\"), \"FProxyToadlet.downloadInBackgroundToTempSpace\", new String[] { \"page\", \"/link\" }, new String[] { \"<a href=\\\"/downloads\\\">\", \"<\/a>\" });\n\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\n\t\t\t\toptionTable.addChild(\"tr\").addChild(\"td\", \"colspan\", \"2\").addChild(\"a\", new String[] { \"href\", \"title\" }, new String[] { \"/\", NodeL10n.getBase().getString(\"Toadlet.homepage\") }, l10n(\"abortToHomepage\"));\n\t\t\t\t\n\t\t\t\toption = optionTable.addChild(\"tr\").addChild(\"td\", \"colspan\", \"2\");\n\t\t\t\toption.addChild(ctx.getPageMaker().createBackLink(ctx, l10n(\"goBackToPrev\")));\n\t\t\t\t\n\t\t\t\twriteHTMLReply(ctx, 200, \"OK\", pageNode.generate());\n\t\t\t} else {\n\t\t\t\tPageNode page = ctx.getPageMaker().getPageNode(FetchException.getShortMessage(e.mode), ctx);\n\t\t\t\tHTMLNode pageNode = page.outer;\n\t\t\t\tHTMLNode contentNode = page.content;\n\n\t\t\t\tHTMLNode infobox = contentNode.addChild(\"div\", \"class\", \"infobox infobox-error\");\n\t\t\t\tinfobox.addChild(\"div\", \"class\", \"infobox-header\", l10n(\"errorWithReason\", \"error\", FetchException.getShortMessage(e.mode)));\n\t\t\t\tHTMLNode infoboxContent = infobox.addChild(\"div\", \"class\", \"infobox-content\");\n\t\t\t\tHTMLNode fileInformationList = infoboxContent.addChild(\"ul\");\n\t\t\t\tHTMLNode option = fileInformationList.addChild(\"li\");\n\t\t\t\toption.addChild(\"#\", (l10n(\"filenameLabel\") + ' '));\n\t\t\t\toption.addChild(\"a\", \"href\", '/' + key.toString(), getFilename(key, e.getExpectedMimeType()));\n\n\t\t\t\tString mime = writeSizeAndMIME(fileInformationList, e);\n\t\t\t\tinfobox = contentNode.addChild(\"div\", \"class\", \"infobox infobox-error\");\n\t\t\t\tinfobox.addChild(\"div\", \"class\", \"infobox-header\", l10n(\"explanationTitle\"));\n\t\t\t\tinfoboxContent = infobox.addChild(\"div\", \"class\", \"infobox-content\");\n\t\t\t\tinfoboxContent.addChild(\"p\", l10n(\"unableToRetrieve\"));\n\t\t\t\tif(e.isFatal())\n\t\t\t\t\tinfoboxContent.addChild(\"p\", l10n(\"errorIsFatal\"));\n\t\t\t\tinfoboxContent.addChild(\"p\", msg);\n\t\t\t\tif(e.errorCodes != null) {\n\t\t\t\t\tinfoboxContent.addChild(\"p\").addChild(\"pre\").addChild(\"#\", e.errorCodes.toVerboseString());\n\t\t\t\t}\n\n\t\t\t\tinfobox = contentNode.addChild(\"div\", \"class\", \"infobox infobox-error\");\n\t\t\t\tinfobox.addChild(\"div\", \"class\", \"infobox-header\", l10n(\"options\"));\n\t\t\t\tinfoboxContent = infobox.addChild(\"div\", \"class\", \"infobox-content\");\n\t\t\t\t\n\t\t\t\tHTMLNode optionList = infoboxContent.addChild(\"ul\");\n\t\t\t\t\n\t\t\t\tif((e.mode == FetchException.NOT_IN_ARCHIVE || e.mode == FetchException.NOT_ENOUGH_PATH_COMPONENTS) && (core.node.pluginManager.isPluginLoaded(\"plugins.KeyExplorer.KeyExplorer\"))) {\n\t\t\t\t\toption = optionList.addChild(\"li\");\n\t\t\t\t\tNodeL10n.getBase().addL10nSubstitution(option, \"FProxyToadlet.openWithKeyExplorer\", new String[] { \"link\", \"/link\" }, new String[] { \"<a href=\\\"/plugins/plugins.KeyExplorer.KeyExplorer/?key=\" + key.toString() + \"\\\">\", \"<\/a>\" });\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif(!e.isFatal() && (ctx.isAllowedFullAccess() || !container.publicGatewayMode())) {\n\t\t\t\t\tPHYSICAL_THREAT_LEVEL threatLevel = core.node.securityLevels.getPhysicalThreatLevel();\n\t\t\t\t\t\n\t\t\t\t\tif(!(threatLevel == PHYSICAL_THREAT_LEVEL.HIGH || threatLevel == PHYSICAL_THREAT_LEVEL.MAXIMUM)) {\n\t\t\t\t\t\toption = optionList.addChild(\"li\");\n\t\t\t\t\t\tHTMLNode optionForm = ctx.addFormChild(option, \"/downloads/\", \"dnfQueueForm\");\n\t\t\t\t\t\toptionForm.addChild(\"input\", new String[] { \"type\", \"name\", \"value\" }, new String[] { \"hidden\", \"key\", key.toString() });\n\t\t\t\t\t\toptionForm.addChild(\"input\", new String[] { \"type\", \"name\", \"value\" }, new String[] { \"hidden\", \"return-type\", \"disk\" });\n\t\t\t\t\t\toptionForm.addChild(\"input\", new String[] { \"type\", \"name\", \"value\" }, new String[] { \"hidden\", \"persistence\", \"forever\" });\n\t\t\t\t\t\tif (mime != null) {\n\t\t\t\t\t\t\toptionForm.addChild(\"input\", new String[] { \"type\", \"name\", \"value\" }, new String[] { \"hidden\", \"type\", mime });\n\t\t\t\t\t\t}\n\t\t\t\t\t\toptionForm.addChild(\"input\", new String[] { \"type\", \"name\", \"value\" }, new String[] { \"submit\", \"download\", l10n(\"downloadInBackgroundToDiskButton\")});\n\t\t\t\t\t\toptionForm.addChild(\"#\", \" - \");\n\t\t\t\t\t\tNodeL10n.getBase().addL10nSubstitution(optionForm, \"FProxyToadlet.downloadInBackgroundToDisk\", new String[] { \"dir\", \"page\", \"/link\" }, new String[] { HTMLEncoder.encode(core.getDownloadDir().getAbsolutePath()), \"<a href=\\\"/downloads\\\">\", \"<\/a>\" });\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tif(threatLevel != PHYSICAL_THREAT_LEVEL.LOW) {\n\t\t\t\t\t\t\n\t\t\t\t\t\toption = optionList.addChild(\"li\");\n\t\t\t\t\t\tHTMLNode optionForm = ctx.addFormChild(option, \"/downloads/\", \"dnfQueueForm\");\n\t\t\t\t\t\toptionForm.addChild(\"input\", new String[] { \"type\", \"name\", \"value\" }, new String[] { \"hidden\", \"key\", key.toString() });\n\t\t\t\t\t\toptionForm.addChild(\"input\", new String[] { \"type\", \"name\", \"value\" }, new String[] { \"hidden\", \"return-type\", \"direct\" });\n\t\t\t\t\t\toptionForm.addChild(\"input\", new String[] { \"type\", \"name\", \"value\" }, new String[] { \"hidden\", \"persistence\", \"forever\" });\n\t\t\t\t\t\tif (mime != null) {\n\t\t\t\t\t\t\toptionForm.addChild(\"input\", new String[] { \"type\", \"name\", \"value\" }, new String[] { \"hidden\", \"type\", mime });\n\t\t\t\t\t\t}\n\t\t\t\t\t\toptionForm.addChild(\"input\", new String[] { \"type\", \"name\", \"value\" }, new String[] { \"submit\", \"download\", l10n(\"downloadInBackgroundToTempSpaceButton\")});\n\t\t\t\t\t\toptionForm.addChild(\"#\", \" - \");\n\t\t\t\t\t\tNodeL10n.getBase().addL10nSubstitution(optionForm, \"FProxyToadlet.downloadInBackgroundToTempSpace\", new String[] { \"page\", \"/link\" }, new String[] { \"<a href=\\\"/downloads\\\">\", \"<\/a>\" });\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\toptionList.addChild(\"li\").\n\t\t\t\t\t\taddChild(\"a\", \"href\", getLink(key, requestedMimeType, maxSize, httprequest.getParam(\"force\", null), httprequest.isParameterSet(\"forcedownload\"))).addChild(\"#\", l10n(\"retryNow\"));\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\toptionList.addChild(\"li\").addChild(\"a\", new String[] { \"href\", \"title\" }, new String[] { \"/\", NodeL10n.getBase().getString(\"Toadlet.homepage\") }, l10n(\"abortToHomepage\"));\n\t\t\t\t\n\t\t\t\toption = optionList.addChild(\"li\");\n\t\t\t\toption.addChild(ctx.getPageMaker().createBackLink(ctx, l10n(\"goBackToPrev\")));\n\t\t\t\t\n\t\t\t\tthis.writeHTMLReply(ctx, (e.mode == 10) ? 404 : 500 /* close enough - FIXME probably should depend on status code */,\n\t\t\t\t\t\t\"Internal Error\", pageNode.generate());\n\t\t\t}\n\t\t} catch (SocketException e) {\n\t\t\t// Probably irrelevant\n\t\t\tif(e.getMessage().equals(\"Broken pipe\")) {\n\t\t\t\tif(Logger.shouldLog(Logger.MINOR, this))\n\t\t\t\t\tLogger.minor(this, \"Caught \"+e+\" while handling GET\", e);\n\t\t\t} else {\n\t\t\t\tLogger.normal(this, \"Caught \"+e);\n\t\t\t}\n\t\t\tthrow e;\n\t\t} catch (Throwable t) {\n\t\t\twriteInternalError(t, ctx);\n\t\t} finally {\n\t\t\tif(fr == null && data != null) data.free();\n\t\t\tif(fr != null) fr.close();\n\t\t}\n\t}","id":16574,"modified_method":"public void handleMethodGET(URI uri, HTTPRequest httprequest, ToadletContext ctx) \n\t\t\tthrows ToadletContextClosedException, IOException, RedirectException {\n\n\t\tString ks = uri.getPath();\n\t\t\n\t\tboolean logMINOR = Logger.shouldLog(Logger.MINOR, this);\n\t\t\n\t\tif (ks.equals(\"/\")) {\n\t\t\tif (httprequest.isParameterSet(\"key\")) {\n\t\t\t\tString k = httprequest.getParam(\"key\");\n\t\t\t\tFreenetURI newURI;\n\t\t\t\ttry {\n\t\t\t\t\tnewURI = new FreenetURI(k);\n\t\t\t\t} catch (MalformedURLException e) {\n\t\t\t\t\tLogger.normal(this, \"Invalid key: \"+e+\" for \"+k, e);\n\t\t\t\t\tsendErrorPage(ctx, 404, l10n(\"notFoundTitle\"), NodeL10n.getBase().getString(\"FProxyToadlet.invalidKeyWithReason\", new String[] { \"reason\" }, new String[] { e.toString() }));\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif(logMINOR) Logger.minor(this, \"Redirecting to FreenetURI: \"+newURI);\n\t\t\t\tString requestedMimeType = httprequest.getParam(\"type\");\n\t\t\t\tlong maxSize = httprequest.getLongParam(\"max-size\", MAX_LENGTH);\n\t\t\t\tString location = getLink(newURI, requestedMimeType, maxSize, httprequest.getParam(\"force\", null), httprequest.isParameterSet(\"forcedownload\"));\n\t\t\t\twriteTemporaryRedirect(ctx, null, location);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t\n\t\t\ttry {\n\t\t\t\tString querystring = uri.getQuery();\n\t\t\t\t\n\t\t\t\tif (querystring == null) {\n\t\t\t\t\tthrow new RedirectException(welcome);\n\t\t\t\t} else {\n\t\t\t\t\t// TODP possibly a proper URLEncode method\n\t\t\t\t\tquerystring = querystring.replace(' ', '+');\n\t\t\t\t\tthrow new RedirectException(\"/welcome/?\" + querystring);\n\t\t\t\t}\n\t\t\t} catch (URISyntaxException e) {\n\t\t\t\t// HUH!?!\n\t\t\t}\n\t\t}else if(ks.equals(\"/favicon.ico\")){\n\t\t\tbyte[] buf = new byte[1024];\n\t\t\tint len;\n\t\t\tInputStream strm = getClass().getResourceAsStream(\"staticfiles/favicon.ico\");\n\t\t\t\n\t\t\tif (strm == null) {\n\t\t\t\tthis.sendErrorPage(ctx, 404, l10n(\"pathNotFoundTitle\"), l10n(\"pathNotFound\"));\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tctx.sendReplyHeaders(200, \"OK\", null, \"image/x-icon\", strm.available());\n\t\t\t\n\t\t\twhile ( (len = strm.read(buf)) > 0) {\n\t\t\t\tctx.writeData(buf, 0, len);\n\t\t\t}\n\t\t\tstrm.close();\n\t\t\treturn;\n\t\t} else if(ks.startsWith(\"/feed/\") || ks.equals(\"/feed\")) {\n\t\t\t//TODO Better way to find the host. Find if https is used?\n\t\t\tString host = ctx.getHeaders().get(\"host\");\n\t\t\tString atom = core.alerts.getAtom(\"http://\" + host);\n\t\t\tbyte[] buf = atom.getBytes(\"UTF-8\");\n\t\t\tctx.sendReplyHeaders(200, \"OK\", null, \"application/atom+xml\", buf.length);\n\t\t\tctx.writeData(buf, 0, buf.length);\n\t\t\treturn;\n\t\t}else if(ks.equals(\"/robots.txt\") && ctx.doRobots()){\n\t\t\tthis.writeTextReply(ctx, 200, \"Ok\", \"User-agent: *\\nDisallow: /\");\n\t\t\treturn;\n\t\t}else if(ks.startsWith(\"/darknet/\") || ks.equals(\"/darknet\")) { //TODO (pre-build 1045 url format) remove when obsolete\n\t\t\twritePermanentRedirect(ctx, \"obsoleted\", \"/friends/\");\n\t\t\treturn;\n\t\t}else if(ks.startsWith(\"/opennet/\") || ks.equals(\"/opennet\")) { //TODO (pre-build 1045 url format) remove when obsolete\n\t\t\twritePermanentRedirect(ctx, \"obsoleted\", \"/strangers/\");\n\t\t\treturn;\n\t\t} else if(ks.startsWith(\"/queue/\")) {\n\t\t\twritePermanentRedirect(ctx, \"obsoleted\", \"/downloads/\");\n\t\t\treturn;\n\t\t} else if(ks.startsWith(\"/config/\")) {\n\t\t\twritePermanentRedirect(ctx, \"obsoleted\", \"/config/node\");\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tif(ks.startsWith(\"/\"))\n\t\t\tks = ks.substring(1);\n\t\t\n\t\tlong maxSize;\n\t\t\n\t\tboolean restricted = (container.publicGatewayMode() && !ctx.isAllowedFullAccess());\n\t\t\n\t\tif(restricted)\n\t\t\tmaxSize = MAX_LENGTH;\n\t\telse \n\t\t\tmaxSize = httprequest.getLongParam(\"max-size\", MAX_LENGTH);\n\t\t\n\t\t//first check of httprange before get\n\t\t// only valid number format is checked here\n\t\tString rangeStr = ctx.getHeaders().get(\"range\");\n\t\tif (rangeStr != null) {\n\t\t\ttry {\n\t\t\t\tparseRange(rangeStr);\n\t\t\t} catch (HTTPRangeException e) {\n\t\t\t\tLogger.normal(this, \"Invalid Range Header: \"+rangeStr, e);\n\t\t\t\tctx.sendReplyHeaders(416, \"Requested Range Not Satisfiable\", null, null, 0);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\t\n\t\tFreenetURI key;\n\t\ttry {\n\t\t\tkey = new FreenetURI(ks);\n\t\t} catch (MalformedURLException e) {\n\t\t\tPageNode page = ctx.getPageMaker().getPageNode(l10n(\"invalidKeyTitle\"), ctx);\n\t\t\tHTMLNode pageNode = page.outer;\n\t\t\tHTMLNode contentNode = page.content;\n\n\t\t\tHTMLNode errorInfobox = contentNode.addChild(\"div\", \"class\", \"infobox infobox-error\");\n\t\t\terrorInfobox.addChild(\"div\", \"class\", \"infobox-header\", NodeL10n.getBase().getString(\"FProxyToadlet.invalidKeyWithReason\", new String[] { \"reason\" }, new String[] { e.toString() }));\n\t\t\tHTMLNode errorContent = errorInfobox.addChild(\"div\", \"class\", \"infobox-content\");\n\t\t\terrorContent.addChild(\"#\", l10n(\"expectedKeyButGot\"));\n\t\t\terrorContent.addChild(\"code\", ks);\n\t\t\terrorContent.addChild(\"br\");\n\t\t\terrorContent.addChild(ctx.getPageMaker().createBackLink(ctx, l10n(\"goBack\")));\n\t\t\terrorContent.addChild(\"br\");\n\t\t\taddHomepageLink(errorContent);\n\n\t\t\tthis.writeHTMLReply(ctx, 400, l10n(\"invalidKeyTitle\"), pageNode.generate());\n\t\t\treturn;\n\t\t}\n\t\tString requestedMimeType = httprequest.getParam(\"type\", null);\n\t\tString override = (requestedMimeType == null) ? \"\" : \"?type=\"+URLEncoder.encode(requestedMimeType,true);\n\t\t// No point passing ?force= across a redirect, since the key will change.\n\t\t// However, there is every point in passing ?forcedownload.\n\t\tif(httprequest.isParameterSet(\"forcedownload\")) {\n\t\t\tif(override.length() == 0) override = \"?forcedownload\";\n\t\t\telse override = override+\"&forcedownload\";\n\t\t}\n\n\t\tBucket data = null;\n\t\tString mimeType = null;\n\t\tString referer = sanitizeReferer(ctx);\n\t\tFetchException fe = null;\n\t\t\n\n\t\tMultiValueTable<String,String> headers = ctx.getHeaders();\n\t\tString ua = headers.get(\"user-agent\");\n\t\tString accept = headers.get(\"accept\");\n\t\tFProxyFetchResult fr = null;\n\t\tif(logMINOR) Logger.minor(this, \"UA = \"+ua+\" accept = \"+accept);\n\t\tif(isBrowser(ua) && !ctx.disableProgressPage() && (accept == null || accept.indexOf(\"text/html\") > -1) && !httprequest.isParameterSet(\"forcedownload\")) {\n\t\t\tFProxyFetchWaiter fetch = null;\n\t\t\ttry {\n\t\t\t\tfetch = fetchTracker.makeFetcher(key, maxSize);\n\t\t\t} catch (FetchException e) {\n\t\t\t\tfe = fr.failed;\n\t\t\t}\n\t\t\tif(fetch != null)\n\t\t\twhile(true) {\n\t\t\tfr = fetch.getResult();\n\t\t\tif(fr.hasData()) {\n\t\t\t\tif(logMINOR) Logger.minor(this, \"Found data\");\n\t\t\t\tdata = fr.data;\n\t\t\t\tmimeType = fr.mimeType;\n\t\t\t\tfetch.close(); // Not waiting any more, but still locked the results until sent\n\t\t\t\tbreak;\n\t\t\t} else if(fr.failed != null) {\n\t\t\t\tif(logMINOR) Logger.minor(this, \"Request failed\");\n\t\t\t\tfe = fr.failed;\n\t\t\t\tfetch.close(); // Not waiting any more, but still locked the results until sent\n\t\t\t\tbreak;\n\t\t\t} else {\n\t\t\t\tif(logMINOR) Logger.minor(this, \"Still in progress\");\n\t\t\t\t// Still in progress\n\t\t\t\tboolean isJsEnabled=ctx.getContainer().isFProxyJavascriptEnabled() && ua != null && !ua.contains(\"AppleWebKit/\");\n\t\t\t\tPageNode page = ctx.getPageMaker().getPageNode(l10n(\"fetchingPageTitle\"), ctx);\n\t\t\t\tHTMLNode pageNode = page.outer;\n\t\t\t\tString location = getLink(key, requestedMimeType, maxSize, httprequest.getParam(\"force\", null), httprequest.isParameterSet(\"forcedownload\"));\n\t\t\t\tHTMLNode headNode=page.headNode;\n\t\t\t\tif(isJsEnabled){\n\t\t\t\t\t//If the user has enabled javascript, we add a <noscript> http refresh(if he has disabled it in the browser)\n\t\t\t\t\t//And the script file\n\t\t\t\t\theadNode.addChild(\"noscript\").addChild(\"meta\", \"http-equiv\", \"Refresh\").addAttribute(\"content\", \"2;URL=\" + location);\n\t\t\t\t\tHTMLNode scriptNode=headNode.addChild(\"script\",\"//abc\");\n\t\t\t\t\tscriptNode.addAttribute(\"type\", \"text/javascript\");\n\t\t\t\t\tscriptNode.addAttribute(\"src\", \"/static/js/progresspage.js\");\n\t\t\t\t}else{\n\t\t\t\t\t//If he disabled it, we just put the http refresh meta, without the noscript\n\t\t\t\t\theadNode.addChild(\"meta\", \"http-equiv\", \"Refresh\").addAttribute(\"content\", \"2;URL=\" + location);\n\t\t\t\t}\n\t\t\t\tHTMLNode contentNode = page.content;\n\t\t\t\tHTMLNode infobox = contentNode.addChild(\"div\", \"class\", \"infobox infobox-information\");\n\t\t\t\tinfobox.addChild(\"div\", \"class\", \"infobox-header\", l10n(\"fetchingPageBox\"));\n\t\t\t\tHTMLNode infoboxContent = infobox.addChild(\"div\", \"class\", \"infobox-content\");\n\t\t\t\tinfoboxContent.addAttribute(\"id\", \"infoContent\");\n\t\t\t\tinfoboxContent.addChild(\"#\", l10n(\"filenameLabel\")+ \" \");\n\t\t\t\tinfoboxContent.addChild(\"a\", \"href\", \"/\"+key.toString(false, false), key.getPreferredFilename());\n\t\t\t\tif(fr.mimeType != null) infoboxContent.addChild(\"br\", l10n(\"contentTypeLabel\")+\" \"+fr.mimeType);\n\t\t\t\tif(fr.size > 0) infoboxContent.addChild(\"br\", \"Size: \"+SizeUtil.formatSize(fr.size));\n\t\t\t\tif(core.isAdvancedModeEnabled()) {\n\t\t\t\t\tinfoboxContent.addChild(\"br\", l10n(\"blocksDetail\", \n\t\t\t\t\t\t\tnew String[] { \"fetched\", \"required\", \"total\", \"failed\", \"fatallyfailed\" },\n\t\t\t\t\t\t\tnew String[] { Integer.toString(fr.fetchedBlocks), Integer.toString(fr.requiredBlocks), Integer.toString(fr.totalBlocks), Integer.toString(fr.failedBlocks), Integer.toString(fr.fatallyFailedBlocks) }));\n\t\t\t\t}\n\t\t\t\tinfoboxContent.addChild(\"br\", l10n(\"timeElapsedLabel\")+\" \"+TimeUtil.formatTime(System.currentTimeMillis() - fr.timeStarted));\n\t\t\t\tlong eta = fr.eta;\n\t\t\t\tif(eta > 0)\n\t\t\t\t\tinfoboxContent.addChild(\"br\", \"ETA: \"+TimeUtil.formatTime(eta));\n\t\t\t\tif(fr.goneToNetwork)\n\t\t\t\t\tinfoboxContent.addChild(\"p\", l10n(\"progressDownloading\"));\n\t\t\t\telse\n\t\t\t\t\tinfoboxContent.addChild(\"p\", l10n(\"progressCheckingStore\"));\n\t\t\t\tif(!fr.finalizedBlocks)\n\t\t\t\t\tinfoboxContent.addChild(\"p\", l10n(\"progressNotFinalized\"));\n\t\t\t\t\n\t\t\t\tHTMLNode table = infoboxContent.addChild(\"table\", \"border\", \"0\");\n\t\t\t\tHTMLNode progressCell = table.addChild(\"tr\").addChild(\"td\", \"class\", \"request-progress\");\n\t\t\t\tif(fr.totalBlocks <= 0)\n\t\t\t\t\tprogressCell.addChild(\"#\", NodeL10n.getBase().getString(\"QueueToadlet.unknown\"));\n\t\t\t\telse {\n\t\t\t\t\tint total = fr.requiredBlocks;\n\t\t\t\t\tint fetchedPercent = (int) (fr.fetchedBlocks / (double) total * 100);\n\t\t\t\t\tint failedPercent = (int) (fr.failedBlocks / (double) total * 100);\n\t\t\t\t\tint fatallyFailedPercent = (int) (fr.fatallyFailedBlocks / (double) total * 100);\n\t\t\t\t\tHTMLNode progressBar = progressCell.addChild(\"div\", \"class\", \"progressbar\");\n\t\t\t\t\tprogressBar.addChild(\"div\", new String[] { \"class\", \"style\" }, new String[] { \"progressbar-done\", \"width: \" + fetchedPercent + \"%;\" });\n\n\t\t\t\t\tif (fr.failedBlocks > 0)\n\t\t\t\t\t\tprogressBar.addChild(\"div\", new String[] { \"class\", \"style\" }, new String[] { \"progressbar-failed\", \"width: \" + failedPercent + \"%;\" });\n\t\t\t\t\tif (fr.fatallyFailedBlocks > 0)\n\t\t\t\t\t\tprogressBar.addChild(\"div\", new String[] { \"class\", \"style\" }, new String[] { \"progressbar-failed2\", \"width: \" + fatallyFailedPercent + \"%;\" });\n\t\t\t\t\t\n\t\t\t\t\tNumberFormat nf = NumberFormat.getInstance();\n\t\t\t\t\tnf.setMaximumFractionDigits(1);\n\t\t\t\t\tString prefix = '('+Integer.toString(fr.fetchedBlocks) + \"/ \" + Integer.toString(total)+\"): \";\n\t\t\t\t\tif (fr.finalizedBlocks) {\n\t\t\t\t\t\tprogressBar.addChild(\"div\", new String[] { \"class\", \"title\" }, new String[] { \"progress_fraction_finalized\", prefix + NodeL10n.getBase().getString(\"QueueToadlet.progressbarAccurate\") }, nf.format((int) ((fr.fetchedBlocks / (double) total) * 1000) / 10.0) + '%');\n\t\t\t\t\t} else {\n\t\t\t\t\t\tString text = nf.format((int) ((fr.fetchedBlocks / (double) total) * 1000) / 10.0)+ '%';\n\t\t\t\t\t\ttext = \"\" + fr.fetchedBlocks + \" (\"+text+\"??)\";\n\t\t\t\t\t\tprogressBar.addChild(\"div\", new String[] { \"class\", \"title\" }, new String[] { \"progress_fraction_not_finalized\", prefix + NodeL10n.getBase().getString(\"QueueToadlet.progressbarNotAccurate\") }, text);\n\t\t\t\t\t}\n\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tinfobox = contentNode.addChild(\"div\", \"class\", \"infobox infobox-information\");\n\t\t\t\tinfobox.addChild(\"div\", \"class\", \"infobox-header\", l10n(\"fetchingPageOptions\"));\n\t\t\t\tinfoboxContent = infobox.addChild(\"div\", \"class\", \"infobox-content\");\n\n\t\t\t\tHTMLNode ul = infoboxContent.addChild(\"ul\");\n\t\t\t\tul.addChild(\"li\").addChild(\"p\", l10n(\"progressOptionZero\"));\n\t\t\t\t\n\t\t\t\tPHYSICAL_THREAT_LEVEL threatLevel = core.node.securityLevels.getPhysicalThreatLevel();\n\t\t\t\t\n\t\t\t\tif(!(threatLevel == PHYSICAL_THREAT_LEVEL.HIGH || threatLevel == PHYSICAL_THREAT_LEVEL.MAXIMUM)) {\n\t\t\t\t\tHTMLNode optionForm = ctx.addFormChild(ul.addChild(\"li\").addChild(\"p\"), \"/downloads/\", \"tooBigQueueForm\");\n\t\t\t\t\toptionForm.addChild(\"input\", new String[] { \"type\", \"name\", \"value\" }, new String[] { \"hidden\", \"key\", key.toString() });\n\t\t\t\t\toptionForm.addChild(\"input\", new String[] { \"type\", \"name\", \"value\" }, new String[] { \"hidden\", \"return-type\", \"disk\" });\n\t\t\t\t\toptionForm.addChild(\"input\", new String[] { \"type\", \"name\", \"value\" }, new String[] { \"hidden\", \"persistence\", \"forever\" });\n\t\t\t\t\toptionForm.addChild(\"input\", new String[] { \"type\", \"name\", \"value\" }, new String[] { \"submit\", \"download\", l10n(\"downloadInBackgroundToDiskButton\") });\n\t\t\t\t\toptionForm.addChild(\"#\", \" - \");\n\t\t\t\t\tNodeL10n.getBase().addL10nSubstitution(optionForm, \"FProxyToadlet.downloadInBackgroundToDisk\", new String[] { \"dir\", \"page\", \"/link\" }, new String[] { HTMLEncoder.encode(core.getDownloadDir().getAbsolutePath()), \"<a href=\\\"/downloads\\\">\", \"<\/a>\" });\n\t\t\t\t}\n\n\t\t\t\tif(threatLevel != PHYSICAL_THREAT_LEVEL.LOW) {\n\t\t\t\t\tHTMLNode optionForm = ctx.addFormChild(ul.addChild(\"li\").addChild(\"p\"), \"/downloads/\", \"tooBigQueueForm\");\n\t\t\t\t\toptionForm.addChild(\"input\", new String[] { \"type\", \"name\", \"value\" }, new String[] { \"hidden\", \"key\", key.toString() });\n\t\t\t\t\toptionForm.addChild(\"input\", new String[] { \"type\", \"name\", \"value\" }, new String[] { \"hidden\", \"return-type\", \"direct\" });\n\t\t\t\t\toptionForm.addChild(\"input\", new String[] { \"type\", \"name\", \"value\" }, new String[] { \"hidden\", \"persistence\", \"forever\" });\n\t\t\t\t\toptionForm.addChild(\"input\", new String[] { \"type\", \"name\", \"value\" }, new String[] { \"submit\", \"download\", l10n(\"downloadInBackgroundToTempSpaceButton\") });\n\t\t\t\t\toptionForm.addChild(\"#\", \" - \");\n\t\t\t\t\tNodeL10n.getBase().addL10nSubstitution(optionForm, \"FProxyToadlet.downloadInBackgroundToTempSpace\", new String[] { \"page\", \"/link\" }, new String[] { \"<a href=\\\"/downloads\\\">\", \"<\/a>\" });\n\n\t\t\t\t}\n\n\t\t\t\tul.addChild(\"li\").addChild(\"p\").addChild(ctx.getPageMaker().createBackLink(ctx, l10n(\"goBackToPrev\")));\n\t\t\t\t\n\t\t\t\tul.addChild(\"li\").addChild(\"p\").addChild(\"a\", new String[] { \"href\", \"title\" }, new String[] { \"/\", NodeL10n.getBase().getString(\"Toadlet.homepage\") }, l10n(\"abortToHomepage\"));\n\t\t\t\t\n\t\t\t\tMultiValueTable<String, String> retHeaders = new MultiValueTable<String, String>();\n\t\t\t\t//retHeaders.put(\"Refresh\", \"2; url=\"+location);\n\t\t\t\twriteHTMLReply(ctx, 200, \"OK\", retHeaders, pageNode.generate());\n\t\t\t\tfr.close();\n\t\t\t\tfetch.close();\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\ttry {\n\t\t\tif(Logger.shouldLog(Logger.MINOR, this))\n\t\t\t\tLogger.minor(this, \"FProxy fetching \"+key+\" (\"+maxSize+ ')');\n\t\t\tif(data == null && fe == null) {\n\t\t\tFetchResult result = fetch(key, maxSize, new RequestClient() {\n\t\t\t\tpublic boolean persistent() {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\tpublic void removeFrom(ObjectContainer container) {\n\t\t\t\t\tthrow new UnsupportedOperationException();\n\t\t\t\t} }); \n\t\t\t\n\t\t\t// Now, is it safe?\n\t\t\t\n\t\t\tdata = result.asBucket();\n\t\t\tmimeType = result.getMimeType();\n\t\t\t} else if(fe != null) throw fe;\n\t\t\t\n\t\t\t\n\t\t\thandleDownload(ctx, data, ctx.getBucketFactory(), mimeType, requestedMimeType, httprequest.getParam(\"force\", null), httprequest.isParameterSet(\"forcedownload\"), \"/\", key, maxSize != MAX_LENGTH ? \"&max-size=\"+maxSize : \"\", referer, true, ctx, core, fr != null);\n\t\t\t\n\t\t} catch (FetchException e) {\n\t\t\tString msg = e.getMessage();\n\t\t\tif(Logger.shouldLog(Logger.MINOR, this))\n\t\t\t\tLogger.minor(this, \"Failed to fetch \"+uri+\" : \"+e);\n\t\t\tif(e.newURI != null) {\n\t\t\t\tToadlet.writePermanentRedirect(ctx, msg,\n\t\t\t\t\tgetLink(e.newURI, requestedMimeType, maxSize, httprequest.getParam(\"force\", null), httprequest.isParameterSet(\"forcedownload\")));\n\t\t\t} else if(e.mode == FetchException.TOO_BIG) {\n\t\t\t\tPageNode page = ctx.getPageMaker().getPageNode(l10n(\"fileInformationTitle\"), ctx);\n\t\t\t\tHTMLNode pageNode = page.outer;\n\t\t\t\tHTMLNode contentNode = page.content;\n\t\t\t\t\n\t\t\t\tHTMLNode infobox = contentNode.addChild(\"div\", \"class\", \"infobox infobox-information\");\n\t\t\t\tinfobox.addChild(\"div\", \"class\", \"infobox-header\", l10n(\"largeFile\"));\n\t\t\t\tHTMLNode infoboxContent = infobox.addChild(\"div\", \"class\", \"infobox-content\");\n\t\t\t\tHTMLNode fileInformationList = infoboxContent.addChild(\"ul\");\n\t\t\t\tHTMLNode option = fileInformationList.addChild(\"li\");\n\t\t\t\toption.addChild(\"#\", (l10n(\"filenameLabel\") + ' '));\n\t\t\t\toption.addChild(\"a\", \"href\", '/' + key.toString(), getFilename(key, e.getExpectedMimeType()));\n\n\t\t\t\tString mime = writeSizeAndMIME(fileInformationList, e);\n\t\t\t\t\n\t\t\t\tinfobox = contentNode.addChild(\"div\", \"class\", \"infobox infobox-information\");\n\t\t\t\tinfobox.addChild(\"div\", \"class\", \"infobox-header\", l10n(\"explanationTitle\"));\n\t\t\t\tinfoboxContent = infobox.addChild(\"div\", \"class\", \"infobox-content\");\n\t\t\t\tinfoboxContent.addChild(\"#\", l10n(\"largeFileExplanationAndOptions\"));\n\t\t\t\tHTMLNode optionTable = infoboxContent.addChild(\"table\", \"border\", \"0\");\n\t\t\t\tif(!restricted) {\n\t\t\t\t\toption = optionTable.addChild(\"tr\");\n\t\t\t\t\tHTMLNode optionForm = option.addChild(\"td\").addChild(\"form\", new String[] { \"action\", \"method\" }, new String[] {'/' + key.toString(), \"get\" });\n\t\t\t\t\toptionForm.addChild(\"input\", new String[] { \"type\", \"name\", \"value\" }, new String[] { \"hidden\", \"max-size\", String.valueOf(e.expectedSize == -1 ? Long.MAX_VALUE : e.expectedSize*2) });\n\t\t\t\t\toptionForm.addChild(\"input\", new String[] { \"type\", \"name\", \"value\" }, new String[] { \"submit\", \"fetch\", l10n(\"fetchLargeFileAnywayAndDisplayButton\") });\n\t\t\t\t\toption.addChild(\"td\", l10n(\"fetchLargeFileAnywayAndDisplay\"));\n\t\t\t\t\tPHYSICAL_THREAT_LEVEL threatLevel = core.node.securityLevels.getPhysicalThreatLevel();\n\t\t\t\t\tif(!(threatLevel == PHYSICAL_THREAT_LEVEL.HIGH || threatLevel == PHYSICAL_THREAT_LEVEL.MAXIMUM)) {\n\t\t\t\t\t\toption = optionTable.addChild(\"tr\");\n\t\t\t\t\t\toptionForm = ctx.addFormChild(option.addChild(\"td\"), \"/downloads/\", \"tooBigQueueForm\");\n\t\t\t\t\t\toptionForm.addChild(\"input\", new String[] { \"type\", \"name\", \"value\" }, new String[] { \"hidden\", \"key\", key.toString() });\n\t\t\t\t\t\toptionForm.addChild(\"input\", new String[] { \"type\", \"name\", \"value\" }, new String[] { \"hidden\", \"return-type\", \"disk\" });\n\t\t\t\t\t\toptionForm.addChild(\"input\", new String[] { \"type\", \"name\", \"value\" }, new String[] { \"hidden\", \"persistence\", \"forever\" });\n\t\t\t\t\t\tif (mime != null) {\n\t\t\t\t\t\t\toptionForm.addChild(\"input\", new String[] { \"type\", \"name\", \"value\" }, new String[] { \"hidden\", \"type\", mime });\n\t\t\t\t\t\t}\n\t\t\t\t\t\toptionForm.addChild(\"input\", new String[] { \"type\", \"name\", \"value\" }, new String[] { \"submit\", \"download\", l10n(\"downloadInBackgroundToDiskButton\") });\n\t\t\t\t\t\tNodeL10n.getBase().addL10nSubstitution(optionForm.addChild(\"td\"), \"FProxyToadlet.downloadInBackgroundToDisk\", new String[] { \"dir\", \"page\", \"/link\" }, new String[] { HTMLEncoder.encode(core.getDownloadDir().getAbsolutePath()), \"<a href=\\\"/downloads\\\">\", \"<\/a>\" });\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tif(threatLevel != PHYSICAL_THREAT_LEVEL.LOW) {\n\t\t\t\t\t\n\t\t\t\t\t\toption = optionTable.addChild(\"tr\");\n\t\t\t\t\t\t\n\t\t\t\t\t\toptionForm = ctx.addFormChild(option.addChild(\"td\"), \"/downloads/\", \"tooBigQueueForm\");\n\t\t\t\t\t\toptionForm.addChild(\"input\", new String[] { \"type\", \"name\", \"value\" }, new String[] { \"hidden\", \"key\", key.toString() });\n\t\t\t\t\t\toptionForm.addChild(\"input\", new String[] { \"type\", \"name\", \"value\" }, new String[] { \"hidden\", \"return-type\", \"direct\" });\n\t\t\t\t\t\toptionForm.addChild(\"input\", new String[] { \"type\", \"name\", \"value\" }, new String[] { \"hidden\", \"persistence\", \"forever\" });\n\t\t\t\t\t\tif (mime != null) {\n\t\t\t\t\t\t\toptionForm.addChild(\"input\", new String[] { \"type\", \"name\", \"value\" }, new String[] { \"hidden\", \"type\", mime });\n\t\t\t\t\t\t}\n\t\t\t\t\t\toptionForm.addChild(\"input\", new String[] { \"type\", \"name\", \"value\" }, new String[] { \"submit\", \"download\", l10n(\"downloadInBackgroundToTempSpaceButton\") });\n\t\t\t\t\t\tNodeL10n.getBase().addL10nSubstitution(option.addChild(\"td\"), \"FProxyToadlet.downloadInBackgroundToTempSpace\", new String[] { \"page\", \"/link\" }, new String[] { \"<a href=\\\"/downloads\\\">\", \"<\/a>\" });\n\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\n\t\t\t\toptionTable.addChild(\"tr\").addChild(\"td\", \"colspan\", \"2\").addChild(\"a\", new String[] { \"href\", \"title\" }, new String[] { \"/\", NodeL10n.getBase().getString(\"Toadlet.homepage\") }, l10n(\"abortToHomepage\"));\n\t\t\t\t\n\t\t\t\toption = optionTable.addChild(\"tr\").addChild(\"td\", \"colspan\", \"2\");\n\t\t\t\toption.addChild(ctx.getPageMaker().createBackLink(ctx, l10n(\"goBackToPrev\")));\n\t\t\t\t\n\t\t\t\twriteHTMLReply(ctx, 200, \"OK\", pageNode.generate());\n\t\t\t} else {\n\t\t\t\tPageNode page = ctx.getPageMaker().getPageNode(FetchException.getShortMessage(e.mode), ctx);\n\t\t\t\tHTMLNode pageNode = page.outer;\n\t\t\t\tHTMLNode contentNode = page.content;\n\n\t\t\t\tHTMLNode infobox = contentNode.addChild(\"div\", \"class\", \"infobox infobox-error\");\n\t\t\t\tinfobox.addChild(\"div\", \"class\", \"infobox-header\", l10n(\"errorWithReason\", \"error\", FetchException.getShortMessage(e.mode)));\n\t\t\t\tHTMLNode infoboxContent = infobox.addChild(\"div\", \"class\", \"infobox-content\");\n\t\t\t\tHTMLNode fileInformationList = infoboxContent.addChild(\"ul\");\n\t\t\t\tHTMLNode option = fileInformationList.addChild(\"li\");\n\t\t\t\toption.addChild(\"#\", (l10n(\"filenameLabel\") + ' '));\n\t\t\t\toption.addChild(\"a\", \"href\", '/' + key.toString(), getFilename(key, e.getExpectedMimeType()));\n\n\t\t\t\tString mime = writeSizeAndMIME(fileInformationList, e);\n\t\t\t\tinfobox = contentNode.addChild(\"div\", \"class\", \"infobox infobox-error\");\n\t\t\t\tinfobox.addChild(\"div\", \"class\", \"infobox-header\", l10n(\"explanationTitle\"));\n\t\t\t\tinfoboxContent = infobox.addChild(\"div\", \"class\", \"infobox-content\");\n\t\t\t\tinfoboxContent.addChild(\"p\", l10n(\"unableToRetrieve\"));\n\t\t\t\tif(e.isFatal())\n\t\t\t\t\tinfoboxContent.addChild(\"p\", l10n(\"errorIsFatal\"));\n\t\t\t\tinfoboxContent.addChild(\"p\", msg);\n\t\t\t\tif(e.errorCodes != null) {\n\t\t\t\t\tinfoboxContent.addChild(\"p\").addChild(\"pre\").addChild(\"#\", e.errorCodes.toVerboseString());\n\t\t\t\t}\n\n\t\t\t\tinfobox = contentNode.addChild(\"div\", \"class\", \"infobox infobox-error\");\n\t\t\t\tinfobox.addChild(\"div\", \"class\", \"infobox-header\", l10n(\"options\"));\n\t\t\t\tinfoboxContent = infobox.addChild(\"div\", \"class\", \"infobox-content\");\n\t\t\t\t\n\t\t\t\tHTMLNode optionList = infoboxContent.addChild(\"ul\");\n\n\t\t\t\tPluginInfoWrapper keyExplorer;\n\t\t\t\tif((e.mode == FetchException.NOT_IN_ARCHIVE || e.mode == FetchException.NOT_ENOUGH_PATH_COMPONENTS) && ((keyExplorer = core.node.pluginManager.getPluginInfo(\"plugins.KeyExplorer.KeyExplorer\")) != null)) {\n\t\t\t\t\toption = optionList.addChild(\"li\");\n\t\t\t\t\tif (keyExplorer.getPluginLongVersion() > 4999)\n\t\t\t\t\t\tNodeL10n.getBase().addL10nSubstitution(option, \"FProxyToadlet.openWithKeyExplorer\", new String[] { \"link\", \"/link\" }, new String[] { \"<a href=\\\"/KeyExplorer/?automf=true&key=\" + key.toString() + \"\\\">\", \"<\/a>\" });\n\t\t\t\t\telse\n\t\t\t\t\t\tNodeL10n.getBase().addL10nSubstitution(option, \"FProxyToadlet.openWithKeyExplorer\", new String[] { \"link\", \"/link\" }, new String[] { \"<a href=\\\"/plugins/plugins.KeyExplorer.KeyExplorer/?key=\" + key.toString() + \"\\\">\", \"<\/a>\" });\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif(!e.isFatal() && (ctx.isAllowedFullAccess() || !container.publicGatewayMode())) {\n\t\t\t\t\tPHYSICAL_THREAT_LEVEL threatLevel = core.node.securityLevels.getPhysicalThreatLevel();\n\t\t\t\t\t\n\t\t\t\t\tif(!(threatLevel == PHYSICAL_THREAT_LEVEL.HIGH || threatLevel == PHYSICAL_THREAT_LEVEL.MAXIMUM)) {\n\t\t\t\t\t\toption = optionList.addChild(\"li\");\n\t\t\t\t\t\tHTMLNode optionForm = ctx.addFormChild(option, \"/downloads/\", \"dnfQueueForm\");\n\t\t\t\t\t\toptionForm.addChild(\"input\", new String[] { \"type\", \"name\", \"value\" }, new String[] { \"hidden\", \"key\", key.toString() });\n\t\t\t\t\t\toptionForm.addChild(\"input\", new String[] { \"type\", \"name\", \"value\" }, new String[] { \"hidden\", \"return-type\", \"disk\" });\n\t\t\t\t\t\toptionForm.addChild(\"input\", new String[] { \"type\", \"name\", \"value\" }, new String[] { \"hidden\", \"persistence\", \"forever\" });\n\t\t\t\t\t\tif (mime != null) {\n\t\t\t\t\t\t\toptionForm.addChild(\"input\", new String[] { \"type\", \"name\", \"value\" }, new String[] { \"hidden\", \"type\", mime });\n\t\t\t\t\t\t}\n\t\t\t\t\t\toptionForm.addChild(\"input\", new String[] { \"type\", \"name\", \"value\" }, new String[] { \"submit\", \"download\", l10n(\"downloadInBackgroundToDiskButton\")});\n\t\t\t\t\t\toptionForm.addChild(\"#\", \" - \");\n\t\t\t\t\t\tNodeL10n.getBase().addL10nSubstitution(optionForm, \"FProxyToadlet.downloadInBackgroundToDisk\", new String[] { \"dir\", \"page\", \"/link\" }, new String[] { HTMLEncoder.encode(core.getDownloadDir().getAbsolutePath()), \"<a href=\\\"/downloads\\\">\", \"<\/a>\" });\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tif(threatLevel != PHYSICAL_THREAT_LEVEL.LOW) {\n\t\t\t\t\t\t\n\t\t\t\t\t\toption = optionList.addChild(\"li\");\n\t\t\t\t\t\tHTMLNode optionForm = ctx.addFormChild(option, \"/downloads/\", \"dnfQueueForm\");\n\t\t\t\t\t\toptionForm.addChild(\"input\", new String[] { \"type\", \"name\", \"value\" }, new String[] { \"hidden\", \"key\", key.toString() });\n\t\t\t\t\t\toptionForm.addChild(\"input\", new String[] { \"type\", \"name\", \"value\" }, new String[] { \"hidden\", \"return-type\", \"direct\" });\n\t\t\t\t\t\toptionForm.addChild(\"input\", new String[] { \"type\", \"name\", \"value\" }, new String[] { \"hidden\", \"persistence\", \"forever\" });\n\t\t\t\t\t\tif (mime != null) {\n\t\t\t\t\t\t\toptionForm.addChild(\"input\", new String[] { \"type\", \"name\", \"value\" }, new String[] { \"hidden\", \"type\", mime });\n\t\t\t\t\t\t}\n\t\t\t\t\t\toptionForm.addChild(\"input\", new String[] { \"type\", \"name\", \"value\" }, new String[] { \"submit\", \"download\", l10n(\"downloadInBackgroundToTempSpaceButton\")});\n\t\t\t\t\t\toptionForm.addChild(\"#\", \" - \");\n\t\t\t\t\t\tNodeL10n.getBase().addL10nSubstitution(optionForm, \"FProxyToadlet.downloadInBackgroundToTempSpace\", new String[] { \"page\", \"/link\" }, new String[] { \"<a href=\\\"/downloads\\\">\", \"<\/a>\" });\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\toptionList.addChild(\"li\").\n\t\t\t\t\t\taddChild(\"a\", \"href\", getLink(key, requestedMimeType, maxSize, httprequest.getParam(\"force\", null), httprequest.isParameterSet(\"forcedownload\"))).addChild(\"#\", l10n(\"retryNow\"));\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\toptionList.addChild(\"li\").addChild(\"a\", new String[] { \"href\", \"title\" }, new String[] { \"/\", NodeL10n.getBase().getString(\"Toadlet.homepage\") }, l10n(\"abortToHomepage\"));\n\t\t\t\t\n\t\t\t\toption = optionList.addChild(\"li\");\n\t\t\t\toption.addChild(ctx.getPageMaker().createBackLink(ctx, l10n(\"goBackToPrev\")));\n\t\t\t\t\n\t\t\t\tthis.writeHTMLReply(ctx, (e.mode == 10) ? 404 : 500 /* close enough - FIXME probably should depend on status code */,\n\t\t\t\t\t\t\"Internal Error\", pageNode.generate());\n\t\t\t}\n\t\t} catch (SocketException e) {\n\t\t\t// Probably irrelevant\n\t\t\tif(e.getMessage().equals(\"Broken pipe\")) {\n\t\t\t\tif(Logger.shouldLog(Logger.MINOR, this))\n\t\t\t\t\tLogger.minor(this, \"Caught \"+e+\" while handling GET\", e);\n\t\t\t} else {\n\t\t\t\tLogger.normal(this, \"Caught \"+e);\n\t\t\t}\n\t\t\tthrow e;\n\t\t} catch (Throwable t) {\n\t\t\twriteInternalError(t, ctx);\n\t\t} finally {\n\t\t\tif(fr == null && data != null) data.free();\n\t\t\tif(fr != null) fr.close();\n\t\t}\n\t}","commit_id":"fb0c5861532c399d2e9a3fc365cb72adaa8e7dbd","url":"https://github.com/freenet/fred"},{"original_method":"private void innerHandleMethodGET(URI uri, HTTPRequest httprequest, ToadletContext ctx, int recursion) \n\t\t\tthrows ToadletContextClosedException, IOException, RedirectException {\n\n\t\tString ks = uri.getPath();\n\t\t\n\t\tif (ks.equals(\"/\")) {\n\t\t\tif (httprequest.isParameterSet(\"key\")) {\n\t\t\t\tString k = httprequest.getParam(\"key\");\n\t\t\t\tFreenetURI newURI;\n\t\t\t\ttry {\n\t\t\t\t\tnewURI = new FreenetURI(k);\n\t\t\t\t} catch (MalformedURLException e) {\n\t\t\t\t\tLogger.normal(this, \"Invalid key: \"+e+\" for \"+k, e);\n\t\t\t\t\tsendErrorPage(ctx, 404, l10n(\"notFoundTitle\"), NodeL10n.getBase().getString(\"FProxyToadlet.invalidKeyWithReason\", new String[] { \"reason\" }, new String[] { e.toString() }));\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif(logMINOR) Logger.minor(this, \"Redirecting to FreenetURI: \"+newURI);\n\t\t\t\tString requestedMimeType = httprequest.getParam(\"type\");\n\t\t\t\tlong maxSize = httprequest.getLongParam(\"max-size\", MAX_LENGTH);\n\t\t\t\tString location = getLink(newURI, requestedMimeType, maxSize, httprequest.getParam(\"force\", null), httprequest.isParameterSet(\"forcedownload\"));\n\t\t\t\twriteTemporaryRedirect(ctx, null, location);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t\n\t\t\ttry {\n\t\t\t\tString querystring = uri.getQuery();\n\t\t\t\t\n\t\t\t\tif (querystring == null) {\n\t\t\t\t\tthrow new RedirectException(welcome);\n\t\t\t\t} else {\n\t\t\t\t\t// TODP possibly a proper URLEncode method\n\t\t\t\t\tquerystring = querystring.replace(' ', '+');\n\t\t\t\t\tthrow new RedirectException(\"/welcome/?\" + querystring);\n\t\t\t\t}\n\t\t\t} catch (URISyntaxException e) {\n\t\t\t\t// HUH!?!\n\t\t\t}\n\t\t}else if(ks.equals(\"/favicon.ico\")){\n\t\t\tbyte[] buf = new byte[1024];\n\t\t\tint len;\n\t\t\tInputStream strm = getClass().getResourceAsStream(\"staticfiles/favicon.ico\");\n\t\t\t\n\t\t\ttry {\n\t\t\t\tif (strm == null) {\n\t\t\t\t\tthis.sendErrorPage(ctx, 404, l10n(\"pathNotFoundTitle\"), l10n(\"pathNotFound\"));\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tctx.sendReplyHeaders(200, \"OK\", null, \"image/x-icon\", strm.available());\n\t\t\t\t\n\t\t\t\twhile ( (len = strm.read(buf)) > 0) {\n\t\t\t\t\tctx.writeData(buf, 0, len);\n\t\t\t\t}\n\t\t\t} finally {\n\t\t\t\tstrm.close();\n\t\t\t}\n\t\t\treturn;\n\t\t} else if(ks.startsWith(\"/feed/\") || ks.equals(\"/feed\")) {\n\t\t\t//TODO Better way to find the host. Find if https is used?\n\t\t\tString host = ctx.getHeaders().get(\"host\");\n\t\t\tString atom = core.alerts.getAtom(\"http://\" + host);\n\t\t\tbyte[] buf = atom.getBytes(\"UTF-8\");\n\t\t\tctx.sendReplyHeaders(200, \"OK\", null, \"application/atom+xml\", buf.length);\n\t\t\tctx.writeData(buf, 0, buf.length);\n\t\t\treturn;\n\t\t}else if(ks.equals(\"/robots.txt\") && ctx.doRobots()){\n\t\t\tthis.writeTextReply(ctx, 200, \"Ok\", \"User-agent: *\\nDisallow: /\");\n\t\t\treturn;\n\t\t}else if(ks.startsWith(\"/darknet/\") || ks.equals(\"/darknet\")) { //TODO (pre-build 1045 url format) remove when obsolete\n\t\t\twritePermanentRedirect(ctx, \"obsoleted\", \"/friends/\");\n\t\t\treturn;\n\t\t}else if(ks.startsWith(\"/opennet/\") || ks.equals(\"/opennet\")) { //TODO (pre-build 1045 url format) remove when obsolete\n\t\t\twritePermanentRedirect(ctx, \"obsoleted\", \"/strangers/\");\n\t\t\treturn;\n\t\t} else if(ks.startsWith(\"/queue/\")) {\n\t\t\twritePermanentRedirect(ctx, \"obsoleted\", \"/downloads/\");\n\t\t\treturn;\n\t\t} else if(ks.startsWith(\"/config/\")) {\n\t\t\twritePermanentRedirect(ctx, \"obsoleted\", \"/config/node\");\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tif(ks.startsWith(\"/\"))\n\t\t\tks = ks.substring(1);\n\t\t\n\t\tlong maxSize;\n\t\t\n\t\tboolean restricted = (container.publicGatewayMode() && !ctx.isAllowedFullAccess());\n\t\t\n\t\tif(restricted)\n\t\t\tmaxSize = MAX_LENGTH;\n\t\telse \n\t\t\tmaxSize = httprequest.getLongParam(\"max-size\", MAX_LENGTH);\n\n\t\t//first check of httprange before get\n\t\t// only valid number format is checked here\n\t\tString rangeStr = ctx.getHeaders().get(\"range\");\n\t\tif (rangeStr != null) {\n\t\t\ttry {\n\t\t\t\tparseRange(rangeStr);\n\t\t\t} catch (HTTPRangeException e) {\n\t\t\t\tLogger.normal(this, \"Invalid Range Header: \"+rangeStr, e);\n\t\t\t\tctx.sendReplyHeaders(416, \"Requested Range Not Satisfiable\", null, null, 0);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\t\n\t\tFreenetURI key;\n\t\ttry {\n\t\t\tkey = new FreenetURI(ks);\n\t\t} catch (MalformedURLException e) {\n\t\t\tPageNode page = ctx.getPageMaker().getPageNode(l10n(\"invalidKeyTitle\"), ctx);\n\t\t\tHTMLNode pageNode = page.outer;\n\t\t\tHTMLNode contentNode = page.content;\n\n\t\t\tHTMLNode errorInfobox = contentNode.addChild(\"div\", \"class\", \"infobox infobox-error\");\n\t\t\terrorInfobox.addChild(\"div\", \"class\", \"infobox-header\", NodeL10n.getBase().getString(\"FProxyToadlet.invalidKeyWithReason\", new String[] { \"reason\" }, new String[] { e.toString() }));\n\t\t\tHTMLNode errorContent = errorInfobox.addChild(\"div\", \"class\", \"infobox-content\");\n\t\t\terrorContent.addChild(\"#\", l10n(\"expectedKeyButGot\"));\n\t\t\terrorContent.addChild(\"code\", ks);\n\t\t\terrorContent.addChild(\"br\");\n\t\t\terrorContent.addChild(ctx.getPageMaker().createBackLink(ctx, l10n(\"goBack\")));\n\t\t\terrorContent.addChild(\"br\");\n\t\t\taddHomepageLink(errorContent);\n\n\t\t\tthis.writeHTMLReply(ctx, 400, l10n(\"invalidKeyTitle\"), pageNode.generate());\n\t\t\treturn;\n\t\t}\n\n\t\tFetchContext fctx = getFetchContext(maxSize);\n\n\t\t//We should run the ContentFilter by default\n\t\tString forceString = httprequest.getParam(\"force\");\n\t\tlong now = System.currentTimeMillis();\n\t\tboolean force = false;\n\t\tif(forceString != null) {\n\t\t\tif(forceString.equals(getForceValue(key, now)) ||\n\t\t\t\t\tforceString.equals(getForceValue(key, now-FORCE_GRAIN_INTERVAL)))\n\t\t\t\tforce = true;\n\t\t}\n\t\tif (!force && !httprequest.isParameterSet(\"forcedownload\")) fctx.filterData = true;\n\t\telse if(logMINOR) Logger.minor(this, \"Content filter disabled via request parameter\");\n\t\t//Load the fetch context with the callbacks needed for web-pushing, if enabled\n\t\tif(container.enableInlinePrefetch()) fctx.prefetchHook = prefetchHook;\n\t\tif(container.isFProxyWebPushingEnabled()) fctx.tagReplacer = new PushingTagReplacerCallback(core.getFProxy().fetchTracker, MAX_LENGTH, ctx);\n\n\t\tString requestedMimeType = httprequest.getParam(\"type\", null);\n\t\tfctx.overrideMIME = requestedMimeType;\n\t\tString override = (requestedMimeType == null) ? \"\" : \"?type=\"+URLEncoder.encode(requestedMimeType,true);\n\t\tString maybeCharset = httprequest.isParameterSet(\"maybecharset\") ? httprequest.getParam(\"maybecharset\", null) : null;\n\t\tfctx.charset = maybeCharset;\n\t\tif(override.equals(\"\") && maybeCharset != null)\n\t\t\toverride = \"?maybecharset=\"+URLEncoder.encode(maybeCharset, true);\n\t\t// No point passing ?force= across a redirect, since the key will change.\n\t\t// However, there is every point in passing ?forcedownload.\n\t\tif(httprequest.isParameterSet(\"forcedownload\")) {\n\t\t\tif(override.length() == 0) override = \"?forcedownload\";\n\t\t\telse override = override+\"&forcedownload\";\n\t\t}\n\n\t\tBucket data = null;\n\t\tString mimeType = null;\n\t\tString referer = sanitizeReferer(ctx);\n\t\tFetchException fe = null;\n\t\t\n\n\t\tMultiValueTable<String,String> headers = ctx.getHeaders();\n\t\tString ua = headers.get(\"user-agent\");\n\t\tString accept = headers.get(\"accept\");\n\t\tFProxyFetchResult fr = null;\n\t\tif(logMINOR) Logger.minor(this, \"UA = \"+ua+\" accept = \"+accept);\n\t\t\n\t\tboolean canSendProgress = \n\t\t\tisBrowser(ua) && !ctx.disableProgressPage() && (accept == null || accept.indexOf(\"text/html\") > -1) && !httprequest.isParameterSet(\"forcedownload\");\n\t\t\n\t\t\tFProxyFetchWaiter fetch = null;\n\t\t\ttry {\n\t\t\t\tfetch = fetchTracker.makeFetcher(key, maxSize, fctx, ctx.getReFilterPolicy());\n\t\t\t} catch (FetchException e) {\n\t\t\t\tfe = fr.failed;\n\t\t\t}\n\t\t\tif(fetch != null)\n\t\t\twhile(true) {\n\t\t\tfr = fetch.getResult(!canSendProgress);\n\t\t\tif(fr.hasData()) {\n\t\t\t\t\n\t\t\t\tif(fr.getFetchCount() > 1 && !fr.hasWaited() && fr.getFetchCount() > 1 && key.isUSK() && context.uskManager.lookupKnownGood(USK.create(key)) > key.getSuggestedEdition()) {\n\t\t\t\t\tLogger.normal(this, \"Loading later edition...\");\n\t\t\t\t\tfetch.progress.requestImmediateCancel();\n\t\t\t\t\tfr = null;\n\t\t\t\t\tfetch = null;\n\t\t\t\t\ttry {\n\t\t\t\t\t\tfetch = fetchTracker.makeFetcher(key, maxSize, fctx, ctx.getReFilterPolicy());\n\t\t\t\t\t} catch (FetchException e) {\n\t\t\t\t\t\tfe = fr.failed;\n\t\t\t\t\t}\n\t\t\t\t\tif(fetch == null) break;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif(logMINOR) Logger.minor(this, \"Found data\");\n\t\t\t\tdata = new NoFreeBucket(fr.data);\n\t\t\t\tmimeType = fr.mimeType;\n\t\t\t\tfetch.close(); // Not waiting any more, but still locked the results until sent\n\t\t\t\tbreak;\n\t\t\t} else if(fr.failed != null) {\n\t\t\t\tif(logMINOR) Logger.minor(this, \"Request failed\");\n\t\t\t\tfe = fr.failed;\n\t\t\t\tfetch.close(); // Not waiting any more, but still locked the results until sent\n\t\t\t\tbreak;\n\t\t\t} else if(canSendProgress) {\n\t\t\t\tif(logMINOR) Logger.minor(this, \"Still in progress\");\n\t\t\t\t// Still in progress\n\t\t\t\tboolean isJsEnabled=ctx.getContainer().isFProxyJavascriptEnabled() && ua != null && !ua.contains(\"AppleWebKit/\");\n\t\t\t\tboolean isWebPushingEnabled = false;\n\t\t\t\tPageNode page = ctx.getPageMaker().getPageNode(l10n(\"fetchingPageTitle\"), ctx);\n\t\t\t\tHTMLNode pageNode = page.outer;\n\t\t\t\tString location = getLink(key, requestedMimeType, maxSize, httprequest.getParam(\"force\", null), httprequest.isParameterSet(\"forcedownload\"));\n\t\t\t\tHTMLNode headNode=page.headNode;\n\t\t\t\tif(isJsEnabled){\n\t\t\t\t\t//If the user has enabled javascript, we add a <noscript> http refresh(if he has disabled it in the browser)\n\t\t\t\t\theadNode.addChild(\"noscript\").addChild(\"meta\", \"http-equiv\", \"Refresh\").addAttribute(\"content\", \"2;URL=\" + location);\n\t\t\t\t\t\t// If pushing is disabled, but js is enabled, then we add the original progresspage.js\n\t\t\t\t\t\tif ((isWebPushingEnabled = ctx.getContainer().isFProxyWebPushingEnabled()) == false) {\n\t\t\t\t\t\t\tHTMLNode scriptNode = headNode.addChild(\"script\", \"//abc\");\n\t\t\t\t\t\t\tscriptNode.addAttribute(\"type\", \"text/javascript\");\n\t\t\t\t\t\t\tscriptNode.addAttribute(\"src\", \"/static/js/progresspage.js\");\n\t\t\t\t\t\t}\n\t\t\t\t}else{\n\t\t\t\t\t//If he disabled it, we just put the http refresh meta, without the noscript\n\t\t\t\t\theadNode.addChild(\"meta\", \"http-equiv\", \"Refresh\").addAttribute(\"content\", \"2;URL=\" + location);\n\t\t\t\t}\n\t\t\t\tHTMLNode contentNode = page.content;\n\t\t\t\tHTMLNode infobox = contentNode.addChild(\"div\", \"class\", \"infobox infobox-information\");\n\t\t\t\tinfobox.addChild(\"div\", \"class\", \"infobox-header\", l10n(\"fetchingPageBox\"));\n\t\t\t\tHTMLNode infoboxContent = infobox.addChild(\"div\", \"class\", \"infobox-content\");\n\t\t\t\tinfoboxContent.addAttribute(\"id\", \"infoContent\");\n\t\t\t\tinfoboxContent.addChild(new ProgressInfoElement(fetchTracker, key, fctx, maxSize, core.isAdvancedModeEnabled(), ctx, isWebPushingEnabled));\n\n\t\t\t\t\n\t\t\t\tHTMLNode table = infoboxContent.addChild(\"table\", \"border\", \"0\");\n\t\t\t\tHTMLNode progressCell = table.addChild(\"tr\").addChild(\"td\", \"class\", \"request-progress\");\n\t\t\t\tif(fr.totalBlocks <= 0)\n\t\t\t\t\tprogressCell.addChild(\"#\", NodeL10n.getBase().getString(\"QueueToadlet.unknown\"));\n\t\t\t\telse {\n\t\t\t\t\tprogressCell.addChild(new ProgressBarElement(fetchTracker,key,fctx,maxSize,ctx, isWebPushingEnabled));\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tinfobox = contentNode.addChild(\"div\", \"class\", \"infobox infobox-information\");\n\t\t\t\tinfobox.addChild(\"div\", \"class\", \"infobox-header\", l10n(\"fetchingPageOptions\"));\n\t\t\t\tinfoboxContent = infobox.addChild(\"div\", \"class\", \"infobox-content\");\n\n\t\t\t\tHTMLNode optionList = infoboxContent.addChild(\"ul\");\n\t\t\t\toptionList.addChild(\"li\").addChild(\"p\", l10n(\"progressOptionZero\"));\n\t\t\t\t\n\t\t\t\taddDownloadOptions(ctx, optionList, key, mimeType, false, false, core);\n\n\t\t\t\toptionList.addChild(\"li\").addChild(ctx.getPageMaker().createBackLink(ctx, l10n(\"goBackToPrev\")));\n\t\t\t\toptionList.addChild(\"li\").addChild(\"a\", new String[] { \"href\", \"title\" },\n\t\t\t\t\t\tnew String[] { \"/\", NodeL10n.getBase().getString(\"Toadlet.homepage\") }, l10n(\"abortToHomepage\"));\n\t\t\t\t\n\t\t\t\tMultiValueTable<String, String> retHeaders = new MultiValueTable<String, String>();\n\t\t\t\t//retHeaders.put(\"Refresh\", \"2; url=\"+location);\n\t\t\t\twriteHTMLReply(ctx, 200, \"OK\", retHeaders, pageNode.generate());\n\t\t\t\tfr.close();\n\t\t\t\tfetch.close();\n\t\t\t\treturn;\n\t\t\t} else if(fr != null)\n\t\t\t\tfr.close();\n\t\t\t}\n\t\t\n\t\ttry {\n\t\t\tif(logMINOR)\n\t\t\t\tLogger.minor(this, \"FProxy fetching \"+key+\" (\"+maxSize+ ')');\n\t\t\tif(data == null && fe == null) {\n\t\t\t\tboolean needsFetch=true;\n\t\t\t\t//If we don't have the data, then check if an FProxyFetchInProgress has. It can happen when one FetchInProgress downloaded an image\n\t\t\t\t//asynchronously, then loads it. This way a FetchInprogress will have the full image, and no need to block.\n\t\t\t\tFProxyFetchInProgress progress=fetchTracker.getFetchInProgress(key, maxSize, fctx);\n\t\t\t\tif(progress!=null){\n\t\t\t\t\tFProxyFetchWaiter waiter=null;\n\t\t\t\t\tFProxyFetchResult result=null;\n\t\t\t\t\ttry{\n\t\t\t\t\t\twaiter=progress.getWaiter();\n\t\t\t\t\t\tresult=waiter.getResult(false);\n\t\t\t\t\t\tif(result.failed==null && result.data!=null){\n\t\t\t\t\t\t\tmimeType=result.mimeType;\n\t\t\t\t\t\t\tdata=result.data;\n\t\t\t\t\t\t\tdata=ctx.getBucketFactory().makeBucket(result.data.size());\n\t\t\t\t\t\t\tBucketTools.copy(result.data, data);\n\t\t\t\t\t\t\tneedsFetch=false;\n\t\t\t\t\t\t}\n\t\t\t\t\t}finally{\n\t\t\t\t\t\tif(waiter!=null){\n\t\t\t\t\t\t\tprogress.close(waiter);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif(result!=null){\n\t\t\t\t\t\t\tprogress.close(result);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif(needsFetch){\n\t\t\t\t\t//If we don't have the data, then we need to fetch it and block until it is available\n\t\t\t\t\tFetchResult result = fetch(key, maxSize, new RequestClient() {\n\t\t\t\t\t\tpublic boolean persistent() {\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tpublic void removeFrom(ObjectContainer container) {\n\t\t\t\t\t\t\tthrow new UnsupportedOperationException();\n\t\t\t\t\t\t}\n\t\t\t\t\t\tpublic boolean realTimeFlag() {\n\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t} }, fctx); \n\t\t\t\t\t\n\t\t\t\t\t// Now, is it safe?\n\t\t\t\t\t\n\t\t\t\t\tdata = result.asBucket();\n\t\t\t\t\tmimeType = result.getMimeType();\n\t\t\t\t}\n\t\t\t} else if(fe != null) throw fe;\n\t\t\t\n\t\t\thandleDownload(ctx, data, ctx.getBucketFactory(), mimeType, requestedMimeType, forceString, httprequest.isParameterSet(\"forcedownload\"), \"/\", key, maxSize != MAX_LENGTH ? \"&max-size=\"+maxSize : \"\", referer, true, ctx, core, fr != null, maybeCharset);\n\t\t} catch (FetchException e) {\n\t\t\t//Handle exceptions thrown from the ContentFilter\n\t\t\tString msg = e.getMessage();\n\t\t\tif(logMINOR) {\n\t\t\t\tLogger.minor(this, \"Failed to fetch \"+uri+\" : \"+e);\n\t\t\t}\n\t\t\tif(e.newURI != null) {\n\t\t\t\tif(accept != null && (accept.startsWith(\"text/css\") || accept.startsWith(\"image/\")) && recursion++ < MAX_RECURSION) {\n\t\t\t\t\t// If it's an image or a CSS fetch, auto-follow the redirect, up to a limit.\n\t\t\t\t\tString link = getLink(e.newURI, requestedMimeType, maxSize, httprequest.getParam(\"force\", null), httprequest.isParameterSet(\"forcedownload\"));\n\t\t\t\t\ttry {\n\t\t\t\t\t\turi = new URI(link);\n\t\t\t\t\t\tinnerHandleMethodGET(uri, httprequest, ctx, recursion);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t} catch (URISyntaxException e1) {\n\t\t\t\t\t\tLogger.error(this, \"Caught \"+e1+\" parsing new link \"+link, e1);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tToadlet.writePermanentRedirect(ctx, msg,\n\t\t\t\t\tgetLink(e.newURI, requestedMimeType, maxSize, httprequest.getParam(\"force\", null), httprequest.isParameterSet(\"forcedownload\")));\n\t\t\t} else if(e.mode == FetchException.TOO_BIG) {\n\t\t\t\tPageNode page = ctx.getPageMaker().getPageNode(l10n(\"fileInformationTitle\"), ctx);\n\t\t\t\tHTMLNode pageNode = page.outer;\n\t\t\t\tHTMLNode contentNode = page.content;\n\t\t\t\t\n\t\t\t\tHTMLNode infobox = contentNode.addChild(\"div\", \"class\", \"infobox infobox-information\");\n\t\t\t\tinfobox.addChild(\"div\", \"class\", \"infobox-header\", l10n(\"largeFile\"));\n\t\t\t\tHTMLNode infoboxContent = infobox.addChild(\"div\", \"class\", \"infobox-content\");\n\t\t\t\tHTMLNode fileInformationList = infoboxContent.addChild(\"ul\");\n\t\t\t\tHTMLNode option = fileInformationList.addChild(\"li\");\n\t\t\t\toption.addChild(\"#\", (l10n(\"filenameLabel\") + ' '));\n\t\t\t\toption.addChild(\"a\", \"href\", '/' + key.toString(), getFilename(key, e.getExpectedMimeType()));\n\n\t\t\t\tString mime = writeSizeAndMIME(fileInformationList, e);\n\t\t\t\t\n\t\t\t\tinfobox = contentNode.addChild(\"div\", \"class\", \"infobox infobox-information\");\n\t\t\t\tinfobox.addChild(\"div\", \"class\", \"infobox-header\", l10n(\"explanationTitle\"));\n\t\t\t\tinfoboxContent = infobox.addChild(\"div\", \"class\", \"infobox-content\");\n\t\t\t\tinfoboxContent.addChild(\"#\", l10n(\"largeFileExplanationAndOptions\"));\n\t\t\t\tHTMLNode optionList = infoboxContent.addChild(\"ul\");\n\t\t\t\t//HTMLNode optionTable = infoboxContent.addChild(\"table\", \"border\", \"0\");\n\t\t\t\tif(!restricted) {\n\t\t\t\t\toption = optionList.addChild(\"li\");\n\t\t\t\t\tHTMLNode optionForm = option.addChild(\"form\", new String[] { \"action\", \"method\" }, new String[] {'/' + key.toString(), \"get\" });\n\t\t\t\t\toptionForm.addChild(\"input\", new String[] { \"type\", \"name\", \"value\" }, new String[] { \"hidden\", \"max-size\", String.valueOf(e.expectedSize == -1 ? Long.MAX_VALUE : e.expectedSize*2) });\n\t\t\t\t\toptionForm.addChild(\"input\", new String[] { \"type\", \"name\", \"value\" }, new String[] { \"submit\", \"fetch\", l10n(\"fetchLargeFileAnywayAndDisplayButton\") });\n\t\t\t\t\toptionForm.addChild(\"#\", \" - \" + l10n(\"fetchLargeFileAnywayAndDisplay\"));\n\t\t\t\t\taddDownloadOptions(ctx, optionList, key, mime, false, false, core);\n\t\t\t\t}\n\t\t\t\t\n\n\t\t\t\t//optionTable.addChild(\"tr\").addChild(\"td\", \"colspan\", \"2\").addChild(\"a\", new String[] { \"href\", \"title\" }, new String[] { \"/\", NodeL10n.getBase().getString(\"Toadlet.homepage\") }, l10n(\"abortToHomepage\"));\n\t\t\t\toptionList.addChild(\"li\").addChild(\"a\", new String[] { \"href\", \"title\" }, new String[] { \"/\", NodeL10n.getBase().getString(\"Toadlet.homepage\") }, l10n(\"abortToHomepage\"));\n\t\t\t\t\n\t\t\t\t//option = optionTable.addChild(\"tr\").addChild(\"td\", \"colspan\", \"2\");\n\t\t\t\toptionList.addChild(\"li\").addChild(ctx.getPageMaker().createBackLink(ctx, l10n(\"goBackToPrev\")));\n\t\t\t\t\n\t\t\t\twriteHTMLReply(ctx, 200, \"OK\", pageNode.generate());\n\t\t\t} else {\n\t\t\t\tPageNode page = ctx.getPageMaker().getPageNode(e.getShortMessage(), ctx);\n\t\t\t\tHTMLNode pageNode = page.outer;\n\t\t\t\tHTMLNode contentNode = page.content;\n\n\t\t\t\tHTMLNode infobox = contentNode.addChild(\"div\", \"class\", \"infobox infobox-error\");\n\t\t\t\tinfobox.addChild(\"div\", \"class\", \"infobox-header\", l10n(\"errorWithReason\", \"error\", e.getShortMessage()));\n\t\t\t\tHTMLNode infoboxContent = infobox.addChild(\"div\", \"class\", \"infobox-content\");\n\t\t\t\tHTMLNode fileInformationList = infoboxContent.addChild(\"ul\");\n\t\t\t\tHTMLNode option = fileInformationList.addChild(\"li\");\n\t\t\t\toption.addChild(\"#\", (l10n(\"filenameLabel\") + ' '));\n\t\t\t\toption.addChild(\"a\", \"href\", '/' + key.toString(), getFilename(key, e.getExpectedMimeType()));\n\n\t\t\t\tString mime = writeSizeAndMIME(fileInformationList, e);\n\t\t\t\tinfobox = contentNode.addChild(\"div\", \"class\", \"infobox infobox-error\");\n\t\t\t\tinfobox.addChild(\"div\", \"class\", \"infobox-header\", l10n(\"explanationTitle\"));\n\t\t\t\tinfoboxContent = infobox.addChild(\"div\", \"class\", \"infobox-content\");\n\t\t\t\tinfoboxContent.addChild(\"p\", l10n(\"unableToRetrieve\"));\n\t\t\t\tUnsafeContentTypeException filterException = null;\n\t\t\t\tif(e.getCause() != null && e.getCause() instanceof UnsafeContentTypeException) {\n\t\t\t\t\tfilterException = (UnsafeContentTypeException)e.getCause();\n\t\t\t\t}\n\t\t\t\tif(e.isFatal() && filterException == null)\n\t\t\t\t\tinfoboxContent.addChild(\"p\", l10n(\"errorIsFatal\"));\n\t\t\t\tinfoboxContent.addChild(\"p\", msg);\n\t\t\t\tif(filterException != null) {\n\t\t\t\t\tif(filterException.details() != null) {\n\t\t\t\t\t\tHTMLNode detailList = infoboxContent.addChild(\"ul\");\n\t\t\t\t\t\tfor(String detail : filterException.details()) {\n\t\t\t\t\t\t\tdetailList.addChild(\"li\", detail);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif(e.errorCodes != null) {\n\t\t\t\t\tinfoboxContent.addChild(\"p\").addChild(\"pre\").addChild(\"#\", e.errorCodes.toVerboseString());\n\t\t\t\t}\n\n\t\t\t\tinfobox = contentNode.addChild(\"div\", \"class\", \"infobox infobox-error\");\n\t\t\t\tinfobox.addChild(\"div\", \"class\", \"infobox-header\", l10n(\"options\"));\n\t\t\t\tinfoboxContent = infobox.addChild(\"div\", \"class\", \"infobox-content\");\n\t\t\t\t\n\t\t\t\tHTMLNode optionList = infoboxContent.addChild(\"ul\");\n\n\t\t\t\tPluginInfoWrapper keyUtil;\n\t\t\t\tif((e.mode == FetchException.NOT_IN_ARCHIVE || e.mode == FetchException.NOT_ENOUGH_PATH_COMPONENTS)) { \n\t\t\t\t\t// first look for the newest version\n\t\t\t\t\tif ((keyUtil = core.node.pluginManager.getPluginInfo(\"plugins.KeyUtils.KeyUtilsPlugin\")) != null) {\n\t\t\t\t\t\toption = optionList.addChild(\"li\");\n\t\t\t\t\t\tNodeL10n.getBase().addL10nSubstitution(option, \"FProxyToadlet.openWithKeyExplorer\", new String[] { \"link\" }, new HTMLNode[] { HTMLNode.link(\"/KeyUtils/?automf=true&key=\" + key.toString()) });\n\t\t\t\t\t} else if ((keyUtil = core.node.pluginManager.getPluginInfo(\"plugins.KeyExplorer.KeyExplorer\")) != null) {\n\t\t\t\t\t\toption = optionList.addChild(\"li\");\n\t\t\t\t\t\tif (keyUtil.getPluginLongVersion() > 4999)\n\t\t\t\t\t\t\tNodeL10n.getBase().addL10nSubstitution(option, \"FProxyToadlet.openWithKeyExplorer\", new String[] { \"link\" }, new HTMLNode[] { HTMLNode.link(\"/KeyExplorer/?automf=true&key=\" + key.toString())});\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\tNodeL10n.getBase().addL10nSubstitution(option, \"FProxyToadlet.openWithKeyExplorer\", new String[] { \"link\" }, new HTMLNode[] { HTMLNode.link(\"/plugins/plugins.KeyExplorer.KeyExplorer/?key=\" + key.toString())});\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif(filterException != null) {\n\t\t\t\t\tif((mime.equals(\"application/x-freenet-index\")) && (core.node.pluginManager.isPluginLoaded(\"plugins.ThawIndexBrowser.ThawIndexBrowser\"))) {\n\t\t\t\t\t\toption = optionList.addChild(\"li\");\n\t\t\t\t\t\tNodeL10n.getBase().addL10nSubstitution(option, \"FProxyToadlet.openAsThawIndex\", new String[] { \"link\" }, new HTMLNode[] { HTMLNode.link(\"/plugins/plugins.ThawIndexBrowser.ThawIndexBrowser/?key=\" + key.toString()).addChild(\"b\") });\n\t\t\t\t\t}\n\t\t\t\t\toption = optionList.addChild(\"li\");\n\t\t\t\t\t// FIXME: is this safe? See bug #131\n\t\t\t\t\tNodeL10n.getBase().addL10nSubstitution(option, \"FProxyToadlet.openAsText\", new String[] { \"link\" }, new HTMLNode[] { HTMLNode.link(getLink(key, \"text/plain\", maxSize, null, false)) });\n\t\t\t\t\toption = optionList.addChild(\"li\");\n\t\t\t\t\tNodeL10n.getBase().addL10nSubstitution(option, \"FProxyToadlet.openForceDisk\", new String[] { \"link\" }, new HTMLNode[] { HTMLNode.link(getLink(key, mime, maxSize, null, true)) });\n\t\t\t\t\tif(!(mime.equals(\"application/octet-stream\") || mime.equals(\"application/x-msdownload\"))) {\n\t\t\t\t\t\toption = optionList.addChild(\"li\");\n\t\t\t\t\t\tNodeL10n.getBase().addL10nSubstitution(option, \"FProxyToadlet.openForce\", new String[] { \"link\", \"mime\" }, new HTMLNode[] { HTMLNode.link(getLink(key, mime, maxSize, getForceValue(key, now), false)), HTMLNode.text(HTMLEncoder.encode(mime))});\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif((!e.isFatal() || filterException != null) && (ctx.isAllowedFullAccess() || !container.publicGatewayMode())) {\n\t\t\t\t\taddDownloadOptions(ctx, optionList, key, mimeType, filterException != null, filterException != null, core);\n\t\t\t\t\toptionList.addChild(\"li\").\n\t\t\t\t\t\taddChild(\"a\", \"href\", getLink(key, requestedMimeType, maxSize, httprequest.getParam(\"force\", null),\n\t\t\t\t\t\t\t\t\thttprequest.isParameterSet(\"forcedownload\"))).addChild(\"#\", l10n(\"retryNow\"));\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\toptionList.addChild(\"li\").addChild(\"a\", new String[] { \"href\", \"title\" }, new String[] { \"/\", NodeL10n.getBase().\n\t\t\t\t\t\tgetString(\"Toadlet.homepage\") }, l10n(\"abortToHomepage\"));\n\t\t\t\t\n\t\t\t\toptionList.addChild(\"li\").addChild(ctx.getPageMaker().createBackLink(ctx, l10n(\"goBackToPrev\")));\n\t\t\t\tthis.writeHTMLReply(ctx, (e.mode == 10) ? 404 : 500 /* close enough - FIXME probably should depend on status code */,\n\t\t\t\t\t\t\"Internal Error\", pageNode.generate());\n\t\t\t}\n\t\t} catch (SocketException e) {\n\t\t\t// Probably irrelevant\n\t\t\tif(e.getMessage().equals(\"Broken pipe\")) {\n\t\t\t\tif(logMINOR)\n\t\t\t\t\tLogger.minor(this, \"Caught \"+e+\" while handling GET\", e);\n\t\t\t} else {\n\t\t\t\tLogger.normal(this, \"Caught \"+e);\n\t\t\t}\n\t\t\tthrow e;\n\t\t} catch (Throwable t) {\n\t\t\twriteInternalError(t, ctx);\n\t\t} finally {\n\t\t\tif(fr == null && data != null) data.free();\n\t\t\tif(fr != null) fr.close();\n\t\t}\n\t}","id":16575,"modified_method":"private void innerHandleMethodGET(URI uri, HTTPRequest httprequest, ToadletContext ctx, int recursion) \n\t\t\tthrows ToadletContextClosedException, IOException, RedirectException {\n\n\t\tString ks = uri.getPath();\n\t\t\n\t\tif (ks.equals(\"/\")) {\n\t\t\tif (httprequest.isParameterSet(\"key\")) {\n\t\t\t\tString k = httprequest.getParam(\"key\");\n\t\t\t\tFreenetURI newURI;\n\t\t\t\ttry {\n\t\t\t\t\tnewURI = new FreenetURI(k);\n\t\t\t\t} catch (MalformedURLException e) {\n\t\t\t\t\tLogger.normal(this, \"Invalid key: \"+e+\" for \"+k, e);\n\t\t\t\t\tsendErrorPage(ctx, 404, l10n(\"notFoundTitle\"), NodeL10n.getBase().getString(\"FProxyToadlet.invalidKeyWithReason\", new String[] { \"reason\" }, new String[] { e.toString() }));\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif(logMINOR) Logger.minor(this, \"Redirecting to FreenetURI: \"+newURI);\n\t\t\t\tString requestedMimeType = httprequest.getParam(\"type\");\n\t\t\t\tlong maxSize = httprequest.getLongParam(\"max-size\", MAX_LENGTH);\n\t\t\t\tString location = getLink(newURI, requestedMimeType, maxSize, httprequest.getParam(\"force\", null), httprequest.isParameterSet(\"forcedownload\"));\n\t\t\t\twriteTemporaryRedirect(ctx, null, location);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t\n\t\t\ttry {\n\t\t\t\tString querystring = uri.getQuery();\n\t\t\t\t\n\t\t\t\tif (querystring == null) {\n\t\t\t\t\tthrow new RedirectException(welcome);\n\t\t\t\t} else {\n\t\t\t\t\t// TODP possibly a proper URLEncode method\n\t\t\t\t\tquerystring = querystring.replace(' ', '+');\n\t\t\t\t\tthrow new RedirectException(\"/welcome/?\" + querystring);\n\t\t\t\t}\n\t\t\t} catch (URISyntaxException e) {\n\t\t\t\t// HUH!?!\n\t\t\t}\n\t\t}else if(ks.equals(\"/favicon.ico\")){\n\t\t\tbyte[] buf = new byte[1024];\n\t\t\tint len;\n\t\t\tInputStream strm = getClass().getResourceAsStream(\"staticfiles/favicon.ico\");\n\t\t\t\n\t\t\ttry {\n\t\t\t\tif (strm == null) {\n\t\t\t\t\tthis.sendErrorPage(ctx, 404, l10n(\"pathNotFoundTitle\"), l10n(\"pathNotFound\"));\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tctx.sendReplyHeaders(200, \"OK\", null, \"image/x-icon\", strm.available());\n\t\t\t\t\n\t\t\t\twhile ( (len = strm.read(buf)) > 0) {\n\t\t\t\t\tctx.writeData(buf, 0, len);\n\t\t\t\t}\n\t\t\t} finally {\n\t\t\t\tstrm.close();\n\t\t\t}\n\t\t\treturn;\n\t\t} else if(ks.startsWith(\"/feed/\") || ks.equals(\"/feed\")) {\n\t\t\t//TODO Better way to find the host. Find if https is used?\n\t\t\tString host = ctx.getHeaders().get(\"host\");\n\t\t\tString atom = core.alerts.getAtom(\"http://\" + host);\n\t\t\tbyte[] buf = atom.getBytes(\"UTF-8\");\n\t\t\tctx.sendReplyHeaders(200, \"OK\", null, \"application/atom+xml\", buf.length);\n\t\t\tctx.writeData(buf, 0, buf.length);\n\t\t\treturn;\n\t\t}else if(ks.equals(\"/robots.txt\") && ctx.doRobots()){\n\t\t\tthis.writeTextReply(ctx, 200, \"Ok\", \"User-agent: *\\nDisallow: /\");\n\t\t\treturn;\n\t\t}else if(ks.startsWith(\"/darknet/\") || ks.equals(\"/darknet\")) { //TODO (pre-build 1045 url format) remove when obsolete\n\t\t\twritePermanentRedirect(ctx, \"obsoleted\", \"/friends/\");\n\t\t\treturn;\n\t\t}else if(ks.startsWith(\"/opennet/\") || ks.equals(\"/opennet\")) { //TODO (pre-build 1045 url format) remove when obsolete\n\t\t\twritePermanentRedirect(ctx, \"obsoleted\", \"/strangers/\");\n\t\t\treturn;\n\t\t} else if(ks.startsWith(\"/queue/\")) {\n\t\t\twritePermanentRedirect(ctx, \"obsoleted\", \"/downloads/\");\n\t\t\treturn;\n\t\t} else if(ks.startsWith(\"/config/\")) {\n\t\t\twritePermanentRedirect(ctx, \"obsoleted\", \"/config/node\");\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tif(ks.startsWith(\"/\"))\n\t\t\tks = ks.substring(1);\n\t\t\n\t\tlong maxSize;\n\t\t\n\t\tboolean restricted = (container.publicGatewayMode() && !ctx.isAllowedFullAccess());\n\t\t\n\t\tif(restricted)\n\t\t\tmaxSize = MAX_LENGTH;\n\t\telse \n\t\t\tmaxSize = httprequest.getLongParam(\"max-size\", MAX_LENGTH);\n\n\t\t//first check of httprange before get\n\t\t// only valid number format is checked here\n\t\tString rangeStr = ctx.getHeaders().get(\"range\");\n\t\tif (rangeStr != null) {\n\t\t\ttry {\n\t\t\t\tparseRange(rangeStr);\n\t\t\t} catch (HTTPRangeException e) {\n\t\t\t\tLogger.normal(this, \"Invalid Range Header: \"+rangeStr, e);\n\t\t\t\tctx.sendReplyHeaders(416, \"Requested Range Not Satisfiable\", null, null, 0);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\t\n\t\tFreenetURI key;\n\t\ttry {\n\t\t\tkey = new FreenetURI(ks);\n\t\t} catch (MalformedURLException e) {\n\t\t\tPageNode page = ctx.getPageMaker().getPageNode(l10n(\"invalidKeyTitle\"), ctx);\n\t\t\tHTMLNode pageNode = page.outer;\n\t\t\tHTMLNode contentNode = page.content;\n\n\t\t\tHTMLNode errorInfobox = contentNode.addChild(\"div\", \"class\", \"infobox infobox-error\");\n\t\t\terrorInfobox.addChild(\"div\", \"class\", \"infobox-header\", NodeL10n.getBase().getString(\"FProxyToadlet.invalidKeyWithReason\", new String[] { \"reason\" }, new String[] { e.toString() }));\n\t\t\tHTMLNode errorContent = errorInfobox.addChild(\"div\", \"class\", \"infobox-content\");\n\t\t\terrorContent.addChild(\"#\", l10n(\"expectedKeyButGot\"));\n\t\t\terrorContent.addChild(\"code\", ks);\n\t\t\terrorContent.addChild(\"br\");\n\t\t\terrorContent.addChild(ctx.getPageMaker().createBackLink(ctx, l10n(\"goBack\")));\n\t\t\terrorContent.addChild(\"br\");\n\t\t\taddHomepageLink(errorContent);\n\n\t\t\tthis.writeHTMLReply(ctx, 400, l10n(\"invalidKeyTitle\"), pageNode.generate());\n\t\t\treturn;\n\t\t}\n\n\t\tFetchContext fctx = getFetchContext(maxSize);\n\n\t\t//We should run the ContentFilter by default\n\t\tString forceString = httprequest.getParam(\"force\");\n\t\tlong now = System.currentTimeMillis();\n\t\tboolean force = false;\n\t\tif(forceString != null) {\n\t\t\tif(forceString.equals(getForceValue(key, now)) ||\n\t\t\t\t\tforceString.equals(getForceValue(key, now-FORCE_GRAIN_INTERVAL)))\n\t\t\t\tforce = true;\n\t\t}\n\t\tif (!force && !httprequest.isParameterSet(\"forcedownload\")) fctx.filterData = true;\n\t\telse if(logMINOR) Logger.minor(this, \"Content filter disabled via request parameter\");\n\t\t//Load the fetch context with the callbacks needed for web-pushing, if enabled\n\t\tif(container.enableInlinePrefetch()) fctx.prefetchHook = prefetchHook;\n\t\tif(container.isFProxyWebPushingEnabled()) fctx.tagReplacer = new PushingTagReplacerCallback(core.getFProxy().fetchTracker, MAX_LENGTH, ctx);\n\n\t\tString requestedMimeType = httprequest.getParam(\"type\", null);\n\t\tfctx.overrideMIME = requestedMimeType;\n\t\tString override = (requestedMimeType == null) ? \"\" : \"?type=\"+URLEncoder.encode(requestedMimeType,true);\n\t\tString maybeCharset = httprequest.isParameterSet(\"maybecharset\") ? httprequest.getParam(\"maybecharset\", null) : null;\n\t\tfctx.charset = maybeCharset;\n\t\tif(override.equals(\"\") && maybeCharset != null)\n\t\t\toverride = \"?maybecharset=\"+URLEncoder.encode(maybeCharset, true);\n\t\t// No point passing ?force= across a redirect, since the key will change.\n\t\t// However, there is every point in passing ?forcedownload.\n\t\tif(httprequest.isParameterSet(\"forcedownload\")) {\n\t\t\tif(override.length() == 0) override = \"?forcedownload\";\n\t\t\telse override = override+\"&forcedownload\";\n\t\t}\n\n\t\tBucket data = null;\n\t\tString mimeType = null;\n\t\tString referer = sanitizeReferer(ctx);\n\t\tFetchException fe = null;\n\t\t\n\n\t\tMultiValueTable<String,String> headers = ctx.getHeaders();\n\t\tString ua = headers.get(\"user-agent\");\n\t\tString accept = headers.get(\"accept\");\n\t\tFProxyFetchResult fr = null;\n\t\tif(logMINOR) Logger.minor(this, \"UA = \"+ua+\" accept = \"+accept);\n\t\t\n\t\tboolean canSendProgress = \n\t\t\tisBrowser(ua) && !ctx.disableProgressPage() && (accept == null || accept.indexOf(\"text/html\") > -1) && !httprequest.isParameterSet(\"forcedownload\");\n\t\t\n\t\t\tFProxyFetchWaiter fetch = null;\n\t\t\ttry {\n\t\t\t\tfetch = fetchTracker.makeFetcher(key, maxSize, fctx, ctx.getReFilterPolicy());\n\t\t\t} catch (FetchException e) {\n\t\t\t\tfe = fr.failed;\n\t\t\t}\n\t\t\tif(fetch != null)\n\t\t\twhile(true) {\n\t\t\tfr = fetch.getResult(!canSendProgress);\n\t\t\tif(fr.hasData()) {\n\t\t\t\t\n\t\t\t\tif(fr.getFetchCount() > 1 && !fr.hasWaited() && fr.getFetchCount() > 1 && key.isUSK() && context.uskManager.lookupKnownGood(USK.create(key)) > key.getSuggestedEdition()) {\n\t\t\t\t\tLogger.normal(this, \"Loading later edition...\");\n\t\t\t\t\tfetch.progress.requestImmediateCancel();\n\t\t\t\t\tfr = null;\n\t\t\t\t\tfetch = null;\n\t\t\t\t\ttry {\n\t\t\t\t\t\tfetch = fetchTracker.makeFetcher(key, maxSize, fctx, ctx.getReFilterPolicy());\n\t\t\t\t\t} catch (FetchException e) {\n\t\t\t\t\t\tfe = fr.failed;\n\t\t\t\t\t}\n\t\t\t\t\tif(fetch == null) break;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif(logMINOR) Logger.minor(this, \"Found data\");\n\t\t\t\tdata = new NoFreeBucket(fr.data);\n\t\t\t\tmimeType = fr.mimeType;\n\t\t\t\tfetch.close(); // Not waiting any more, but still locked the results until sent\n\t\t\t\tbreak;\n\t\t\t} else if(fr.failed != null) {\n\t\t\t\tif(logMINOR) Logger.minor(this, \"Request failed\");\n\t\t\t\tfe = fr.failed;\n\t\t\t\tfetch.close(); // Not waiting any more, but still locked the results until sent\n\t\t\t\tbreak;\n\t\t\t} else if(canSendProgress) {\n\t\t\t\tif(logMINOR) Logger.minor(this, \"Still in progress\");\n\t\t\t\t// Still in progress\n\t\t\t\tboolean isJsEnabled=ctx.getContainer().isFProxyJavascriptEnabled() && ua != null && !ua.contains(\"AppleWebKit/\");\n\t\t\t\tboolean isWebPushingEnabled = false;\n\t\t\t\tPageNode page = ctx.getPageMaker().getPageNode(l10n(\"fetchingPageTitle\"), ctx);\n\t\t\t\tHTMLNode pageNode = page.outer;\n\t\t\t\tString location = getLink(key, requestedMimeType, maxSize, httprequest.getParam(\"force\", null), httprequest.isParameterSet(\"forcedownload\"));\n\t\t\t\tHTMLNode headNode=page.headNode;\n\t\t\t\tif(isJsEnabled){\n\t\t\t\t\t//If the user has enabled javascript, we add a <noscript> http refresh(if he has disabled it in the browser)\n\t\t\t\t\theadNode.addChild(\"noscript\").addChild(\"meta\", \"http-equiv\", \"Refresh\").addAttribute(\"content\", \"2;URL=\" + location);\n\t\t\t\t\t\t// If pushing is disabled, but js is enabled, then we add the original progresspage.js\n\t\t\t\t\t\tif ((isWebPushingEnabled = ctx.getContainer().isFProxyWebPushingEnabled()) == false) {\n\t\t\t\t\t\t\tHTMLNode scriptNode = headNode.addChild(\"script\", \"//abc\");\n\t\t\t\t\t\t\tscriptNode.addAttribute(\"type\", \"text/javascript\");\n\t\t\t\t\t\t\tscriptNode.addAttribute(\"src\", \"/static/js/progresspage.js\");\n\t\t\t\t\t\t}\n\t\t\t\t}else{\n\t\t\t\t\t//If he disabled it, we just put the http refresh meta, without the noscript\n\t\t\t\t\theadNode.addChild(\"meta\", \"http-equiv\", \"Refresh\").addAttribute(\"content\", \"2;URL=\" + location);\n\t\t\t\t}\n\t\t\t\tHTMLNode contentNode = page.content;\n\t\t\t\tHTMLNode infobox = contentNode.addChild(\"div\", \"class\", \"infobox infobox-information\");\n\t\t\t\tinfobox.addChild(\"div\", \"class\", \"infobox-header\", l10n(\"fetchingPageBox\"));\n\t\t\t\tHTMLNode infoboxContent = infobox.addChild(\"div\", \"class\", \"infobox-content\");\n\t\t\t\tinfoboxContent.addAttribute(\"id\", \"infoContent\");\n\t\t\t\tinfoboxContent.addChild(new ProgressInfoElement(fetchTracker, key, fctx, maxSize, core.isAdvancedModeEnabled(), ctx, isWebPushingEnabled));\n\n\t\t\t\t\n\t\t\t\tHTMLNode table = infoboxContent.addChild(\"table\", \"border\", \"0\");\n\t\t\t\tHTMLNode progressCell = table.addChild(\"tr\").addChild(\"td\", \"class\", \"request-progress\");\n\t\t\t\tif(fr.totalBlocks <= 0)\n\t\t\t\t\tprogressCell.addChild(\"#\", NodeL10n.getBase().getString(\"QueueToadlet.unknown\"));\n\t\t\t\telse {\n\t\t\t\t\tprogressCell.addChild(new ProgressBarElement(fetchTracker,key,fctx,maxSize,ctx, isWebPushingEnabled));\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tinfobox = contentNode.addChild(\"div\", \"class\", \"infobox infobox-information\");\n\t\t\t\tinfobox.addChild(\"div\", \"class\", \"infobox-header\", l10n(\"fetchingPageOptions\"));\n\t\t\t\tinfoboxContent = infobox.addChild(\"div\", \"class\", \"infobox-content\");\n\n\t\t\t\tHTMLNode optionList = infoboxContent.addChild(\"ul\");\n\t\t\t\toptionList.addChild(\"li\").addChild(\"p\", l10n(\"progressOptionZero\"));\n\t\t\t\t\n\t\t\t\taddDownloadOptions(ctx, optionList, key, mimeType, false, false, core);\n\n\t\t\t\toptionList.addChild(\"li\").addChild(ctx.getPageMaker().createBackLink(ctx, l10n(\"goBackToPrev\")));\n\t\t\t\toptionList.addChild(\"li\").addChild(\"a\", new String[] { \"href\", \"title\" },\n\t\t\t\t\t\tnew String[] { \"/\", NodeL10n.getBase().getString(\"Toadlet.homepage\") }, l10n(\"abortToHomepage\"));\n\t\t\t\t\n\t\t\t\tMultiValueTable<String, String> retHeaders = new MultiValueTable<String, String>();\n\t\t\t\t//retHeaders.put(\"Refresh\", \"2; url=\"+location);\n\t\t\t\twriteHTMLReply(ctx, 200, \"OK\", retHeaders, pageNode.generate());\n\t\t\t\tfr.close();\n\t\t\t\tfetch.close();\n\t\t\t\treturn;\n\t\t\t} else if(fr != null)\n\t\t\t\tfr.close();\n\t\t\t}\n\t\t\n\t\ttry {\n\t\t\tif(logMINOR)\n\t\t\t\tLogger.minor(this, \"FProxy fetching \"+key+\" (\"+maxSize+ ')');\n\t\t\tif(data == null && fe == null) {\n\t\t\t\tboolean needsFetch=true;\n\t\t\t\t//If we don't have the data, then check if an FProxyFetchInProgress has. It can happen when one FetchInProgress downloaded an image\n\t\t\t\t//asynchronously, then loads it. This way a FetchInprogress will have the full image, and no need to block.\n\t\t\t\tFProxyFetchInProgress progress=fetchTracker.getFetchInProgress(key, maxSize, fctx);\n\t\t\t\tif(progress!=null){\n\t\t\t\t\tFProxyFetchWaiter waiter=null;\n\t\t\t\t\tFProxyFetchResult result=null;\n\t\t\t\t\ttry{\n\t\t\t\t\t\twaiter=progress.getWaiter();\n\t\t\t\t\t\tresult=waiter.getResult(false);\n\t\t\t\t\t\tif(result.failed==null && result.data!=null){\n\t\t\t\t\t\t\tmimeType=result.mimeType;\n\t\t\t\t\t\t\tdata=result.data;\n\t\t\t\t\t\t\tdata=ctx.getBucketFactory().makeBucket(result.data.size());\n\t\t\t\t\t\t\tBucketTools.copy(result.data, data);\n\t\t\t\t\t\t\tneedsFetch=false;\n\t\t\t\t\t\t}\n\t\t\t\t\t}finally{\n\t\t\t\t\t\tif(waiter!=null){\n\t\t\t\t\t\t\tprogress.close(waiter);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif(result!=null){\n\t\t\t\t\t\t\tprogress.close(result);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif(needsFetch){\n\t\t\t\t\t//If we don't have the data, then we need to fetch it and block until it is available\n\t\t\t\t\tFetchResult result = fetch(key, maxSize, new RequestClient() {\n\t\t\t\t\t\tpublic boolean persistent() {\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tpublic void removeFrom(ObjectContainer container) {\n\t\t\t\t\t\t\tthrow new UnsupportedOperationException();\n\t\t\t\t\t\t}\n\t\t\t\t\t\tpublic boolean realTimeFlag() {\n\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t} }, fctx); \n\t\t\t\t\t\n\t\t\t\t\t// Now, is it safe?\n\t\t\t\t\t\n\t\t\t\t\tdata = result.asBucket();\n\t\t\t\t\tmimeType = result.getMimeType();\n\t\t\t\t}\n\t\t\t} else if(fe != null) throw fe;\n\t\t\t\n\t\t\thandleDownload(ctx, data, ctx.getBucketFactory(), mimeType, requestedMimeType, forceString, httprequest.isParameterSet(\"forcedownload\"), \"/\", key, maxSize != MAX_LENGTH ? \"&max-size=\"+maxSize : \"\", referer, true, ctx, core, fr != null, maybeCharset);\n\t\t} catch (FetchException e) {\n\t\t\t//Handle exceptions thrown from the ContentFilter\n\t\t\tString msg = e.getMessage();\n\t\t\tif(logMINOR) {\n\t\t\t\tLogger.minor(this, \"Failed to fetch \"+uri+\" : \"+e);\n\t\t\t}\n\t\t\tif(e.newURI != null) {\n\t\t\t\tif(accept != null && (accept.startsWith(\"text/css\") || accept.startsWith(\"image/\")) && recursion++ < MAX_RECURSION) {\n\t\t\t\t\t// If it's an image or a CSS fetch, auto-follow the redirect, up to a limit.\n\t\t\t\t\tString link = getLink(e.newURI, requestedMimeType, maxSize, httprequest.getParam(\"force\", null), httprequest.isParameterSet(\"forcedownload\"));\n\t\t\t\t\ttry {\n\t\t\t\t\t\turi = new URI(link);\n\t\t\t\t\t\tinnerHandleMethodGET(uri, httprequest, ctx, recursion);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t} catch (URISyntaxException e1) {\n\t\t\t\t\t\tLogger.error(this, \"Caught \"+e1+\" parsing new link \"+link, e1);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tToadlet.writePermanentRedirect(ctx, msg,\n\t\t\t\t\tgetLink(e.newURI, requestedMimeType, maxSize, httprequest.getParam(\"force\", null), httprequest.isParameterSet(\"forcedownload\")));\n\t\t\t} else if(e.mode == FetchException.TOO_BIG) {\n\t\t\t\tPageNode page = ctx.getPageMaker().getPageNode(l10n(\"fileInformationTitle\"), ctx);\n\t\t\t\tHTMLNode pageNode = page.outer;\n\t\t\t\tHTMLNode contentNode = page.content;\n\t\t\t\t\n\t\t\t\tHTMLNode infobox = contentNode.addChild(\"div\", \"class\", \"infobox infobox-information\");\n\t\t\t\tinfobox.addChild(\"div\", \"class\", \"infobox-header\", l10n(\"largeFile\"));\n\t\t\t\tHTMLNode infoboxContent = infobox.addChild(\"div\", \"class\", \"infobox-content\");\n\t\t\t\tHTMLNode fileInformationList = infoboxContent.addChild(\"ul\");\n\t\t\t\tHTMLNode option = fileInformationList.addChild(\"li\");\n\t\t\t\toption.addChild(\"#\", (l10n(\"filenameLabel\") + ' '));\n\t\t\t\toption.addChild(\"a\", \"href\", '/' + key.toString(), getFilename(key, e.getExpectedMimeType()));\n\n\t\t\t\tString mime = writeSizeAndMIME(fileInformationList, e);\n\t\t\t\t\n\t\t\t\tinfobox = contentNode.addChild(\"div\", \"class\", \"infobox infobox-information\");\n\t\t\t\tinfobox.addChild(\"div\", \"class\", \"infobox-header\", l10n(\"explanationTitle\"));\n\t\t\t\tinfoboxContent = infobox.addChild(\"div\", \"class\", \"infobox-content\");\n\t\t\t\tinfoboxContent.addChild(\"#\", l10n(\"largeFileExplanationAndOptions\"));\n\t\t\t\tHTMLNode optionList = infoboxContent.addChild(\"ul\");\n\t\t\t\t//HTMLNode optionTable = infoboxContent.addChild(\"table\", \"border\", \"0\");\n\t\t\t\tif(!restricted) {\n\t\t\t\t\toption = optionList.addChild(\"li\");\n\t\t\t\t\tHTMLNode optionForm = option.addChild(\"form\", new String[] { \"action\", \"method\" }, new String[] {'/' + key.toString(), \"get\" });\n\t\t\t\t\toptionForm.addChild(\"input\", new String[] { \"type\", \"name\", \"value\" }, new String[] { \"hidden\", \"max-size\", String.valueOf(e.expectedSize == -1 ? Long.MAX_VALUE : e.expectedSize*2) });\n\t\t\t\t\toptionForm.addChild(\"input\", new String[] { \"type\", \"name\", \"value\" }, new String[] { \"submit\", \"fetch\", l10n(\"fetchLargeFileAnywayAndDisplayButton\") });\n\t\t\t\t\toptionForm.addChild(\"#\", \" - \" + l10n(\"fetchLargeFileAnywayAndDisplay\"));\n\t\t\t\t\taddDownloadOptions(ctx, optionList, key, mime, false, false, core);\n\t\t\t\t}\n\t\t\t\t\n\n\t\t\t\t//optionTable.addChild(\"tr\").addChild(\"td\", \"colspan\", \"2\").addChild(\"a\", new String[] { \"href\", \"title\" }, new String[] { \"/\", NodeL10n.getBase().getString(\"Toadlet.homepage\") }, l10n(\"abortToHomepage\"));\n\t\t\t\toptionList.addChild(\"li\").addChild(\"a\", new String[] { \"href\", \"title\" }, new String[] { \"/\", NodeL10n.getBase().getString(\"Toadlet.homepage\") }, l10n(\"abortToHomepage\"));\n\t\t\t\t\n\t\t\t\t//option = optionTable.addChild(\"tr\").addChild(\"td\", \"colspan\", \"2\");\n\t\t\t\toptionList.addChild(\"li\").addChild(ctx.getPageMaker().createBackLink(ctx, l10n(\"goBackToPrev\")));\n\t\t\t\t\n\t\t\t\twriteHTMLReply(ctx, 200, \"OK\", pageNode.generate());\n\t\t\t} else {\n\t\t\t\tPageNode page = ctx.getPageMaker().getPageNode(e.getShortMessage(), ctx);\n\t\t\t\tHTMLNode pageNode = page.outer;\n\t\t\t\tHTMLNode contentNode = page.content;\n\n\t\t\t\tHTMLNode infobox = contentNode.addChild(\"div\", \"class\", \"infobox infobox-error\");\n\t\t\t\tinfobox.addChild(\"div\", \"class\", \"infobox-header\", l10n(\"errorWithReason\", \"error\", e.getShortMessage()));\n\t\t\t\tHTMLNode infoboxContent = infobox.addChild(\"div\", \"class\", \"infobox-content\");\n\t\t\t\tHTMLNode fileInformationList = infoboxContent.addChild(\"ul\");\n\t\t\t\tHTMLNode option = fileInformationList.addChild(\"li\");\n\t\t\t\toption.addChild(\"#\", (l10n(\"filenameLabel\") + ' '));\n\t\t\t\toption.addChild(\"a\", \"href\", '/' + key.toString(), getFilename(key, e.getExpectedMimeType()));\n\n\t\t\t\tString mime = writeSizeAndMIME(fileInformationList, e);\n\t\t\t\tinfobox = contentNode.addChild(\"div\", \"class\", \"infobox infobox-error\");\n\t\t\t\tinfobox.addChild(\"div\", \"class\", \"infobox-header\", l10n(\"explanationTitle\"));\n\t\t\t\tinfoboxContent = infobox.addChild(\"div\", \"class\", \"infobox-content\");\n\t\t\t\tinfoboxContent.addChild(\"p\", l10n(\"unableToRetrieve\"));\n\t\t\t\tUnsafeContentTypeException filterException = null;\n\t\t\t\tif(e.getCause() != null && e.getCause() instanceof UnsafeContentTypeException) {\n\t\t\t\t\tfilterException = (UnsafeContentTypeException)e.getCause();\n\t\t\t\t}\n\t\t\t\tif(e.isFatal() && filterException == null)\n\t\t\t\t\tinfoboxContent.addChild(\"p\", l10n(\"errorIsFatal\"));\n\t\t\t\tinfoboxContent.addChild(\"p\", msg);\n\t\t\t\tif(filterException != null) {\n\t\t\t\t\tif(filterException.details() != null) {\n\t\t\t\t\t\tHTMLNode detailList = infoboxContent.addChild(\"ul\");\n\t\t\t\t\t\tfor(String detail : filterException.details()) {\n\t\t\t\t\t\t\tdetailList.addChild(\"li\", detail);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif(e.errorCodes != null) {\n\t\t\t\t\tinfoboxContent.addChild(\"p\").addChild(\"pre\").addChild(\"#\", e.errorCodes.toVerboseString());\n\t\t\t\t}\n\n\t\t\t\tinfobox = contentNode.addChild(\"div\", \"class\", \"infobox infobox-error\");\n\t\t\t\tinfobox.addChild(\"div\", \"class\", \"infobox-header\", l10n(\"options\"));\n\t\t\t\tinfoboxContent = infobox.addChild(\"div\", \"class\", \"infobox-content\");\n\t\t\t\t\n\t\t\t\tHTMLNode optionList = infoboxContent.addChild(\"ul\");\n\n\t\t\t\tPluginInfoWrapper keyUtil;\n\t\t\t\tif((e.mode == FetchException.NOT_IN_ARCHIVE || e.mode == FetchException.NOT_ENOUGH_PATH_COMPONENTS)) { \n\t\t\t\t\t// first look for the newest version\n\t\t\t\t\tif ((keyUtil = core.node.pluginManager.getPluginInfo(\"plugins.KeyUtils.KeyUtilsPlugin\")) != null) {\n\t\t\t\t\t\toption = optionList.addChild(\"li\");\n\t\t\t\t\t\tif (keyUtil.getPluginLongVersion() < 5010) \n\t\t\t\t\t\t\tNodeL10n.getBase().addL10nSubstitution(option, \"FProxyToadlet.openWithKeyExplorer\", new String[] { \"link\" }, new HTMLNode[] { HTMLNode.link(\"/KeyUtils/?automf=true&key=\" + key.toString()) });\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tNodeL10n.getBase().addL10nSubstitution(option, \"FProxyToadlet.openWithKeyExplorer\", new String[] { \"link\" }, new HTMLNode[] { HTMLNode.link(\"/KeyUtils/?key=\" + key.toString()) });\n\t\t\t\t\t\t\toption = optionList.addChild(\"li\");\n\t\t\t\t\t\t\tNodeL10n.getBase().addL10nSubstitution(option, \"FProxyToadlet.openWithSiteExplorer\", new String[] { \"link\" }, new HTMLNode[] { HTMLNode.link(\"/KeyUtils/Site?key=\" + key.toString()) });\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if ((keyUtil = core.node.pluginManager.getPluginInfo(\"plugins.KeyExplorer.KeyExplorer\")) != null) {\n\t\t\t\t\t\toption = optionList.addChild(\"li\");\n\t\t\t\t\t\tif (keyUtil.getPluginLongVersion() > 4999)\n\t\t\t\t\t\t\tNodeL10n.getBase().addL10nSubstitution(option, \"FProxyToadlet.openWithKeyExplorer\", new String[] { \"link\" }, new HTMLNode[] { HTMLNode.link(\"/KeyExplorer/?automf=true&key=\" + key.toString())});\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\tNodeL10n.getBase().addL10nSubstitution(option, \"FProxyToadlet.openWithKeyExplorer\", new String[] { \"link\" }, new HTMLNode[] { HTMLNode.link(\"/plugins/plugins.KeyExplorer.KeyExplorer/?key=\" + key.toString())});\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif(filterException != null) {\n\t\t\t\t\tif((mime.equals(\"application/x-freenet-index\")) && (core.node.pluginManager.isPluginLoaded(\"plugins.ThawIndexBrowser.ThawIndexBrowser\"))) {\n\t\t\t\t\t\toption = optionList.addChild(\"li\");\n\t\t\t\t\t\tNodeL10n.getBase().addL10nSubstitution(option, \"FProxyToadlet.openAsThawIndex\", new String[] { \"link\" }, new HTMLNode[] { HTMLNode.link(\"/plugins/plugins.ThawIndexBrowser.ThawIndexBrowser/?key=\" + key.toString()).addChild(\"b\") });\n\t\t\t\t\t}\n\t\t\t\t\toption = optionList.addChild(\"li\");\n\t\t\t\t\t// FIXME: is this safe? See bug #131\n\t\t\t\t\tNodeL10n.getBase().addL10nSubstitution(option, \"FProxyToadlet.openAsText\", new String[] { \"link\" }, new HTMLNode[] { HTMLNode.link(getLink(key, \"text/plain\", maxSize, null, false)) });\n\t\t\t\t\toption = optionList.addChild(\"li\");\n\t\t\t\t\tNodeL10n.getBase().addL10nSubstitution(option, \"FProxyToadlet.openForceDisk\", new String[] { \"link\" }, new HTMLNode[] { HTMLNode.link(getLink(key, mime, maxSize, null, true)) });\n\t\t\t\t\tif(!(mime.equals(\"application/octet-stream\") || mime.equals(\"application/x-msdownload\"))) {\n\t\t\t\t\t\toption = optionList.addChild(\"li\");\n\t\t\t\t\t\tNodeL10n.getBase().addL10nSubstitution(option, \"FProxyToadlet.openForce\", new String[] { \"link\", \"mime\" }, new HTMLNode[] { HTMLNode.link(getLink(key, mime, maxSize, getForceValue(key, now), false)), HTMLNode.text(HTMLEncoder.encode(mime))});\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif((!e.isFatal() || filterException != null) && (ctx.isAllowedFullAccess() || !container.publicGatewayMode())) {\n\t\t\t\t\taddDownloadOptions(ctx, optionList, key, mimeType, filterException != null, filterException != null, core);\n\t\t\t\t\toptionList.addChild(\"li\").\n\t\t\t\t\t\taddChild(\"a\", \"href\", getLink(key, requestedMimeType, maxSize, httprequest.getParam(\"force\", null),\n\t\t\t\t\t\t\t\t\thttprequest.isParameterSet(\"forcedownload\"))).addChild(\"#\", l10n(\"retryNow\"));\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\toptionList.addChild(\"li\").addChild(\"a\", new String[] { \"href\", \"title\" }, new String[] { \"/\", NodeL10n.getBase().\n\t\t\t\t\t\tgetString(\"Toadlet.homepage\") }, l10n(\"abortToHomepage\"));\n\t\t\t\t\n\t\t\t\toptionList.addChild(\"li\").addChild(ctx.getPageMaker().createBackLink(ctx, l10n(\"goBackToPrev\")));\n\t\t\t\tthis.writeHTMLReply(ctx, (e.mode == 10) ? 404 : 500 /* close enough - FIXME probably should depend on status code */,\n\t\t\t\t\t\t\"Internal Error\", pageNode.generate());\n\t\t\t}\n\t\t} catch (SocketException e) {\n\t\t\t// Probably irrelevant\n\t\t\tif(e.getMessage().equals(\"Broken pipe\")) {\n\t\t\t\tif(logMINOR)\n\t\t\t\t\tLogger.minor(this, \"Caught \"+e+\" while handling GET\", e);\n\t\t\t} else {\n\t\t\t\tLogger.normal(this, \"Caught \"+e);\n\t\t\t}\n\t\t\tthrow e;\n\t\t} catch (Throwable t) {\n\t\t\twriteInternalError(t, ctx);\n\t\t} finally {\n\t\t\tif(fr == null && data != null) data.free();\n\t\t\tif(fr != null) fr.close();\n\t\t}\n\t}","commit_id":"5938a14bfa7c933174df63d1dc5c6e85013a5a25","url":"https://github.com/freenet/fred"},{"original_method":"@Around(\"anyPublicMethod() && @annotation(openEntityManager)\")\n    public Object openEntityManager(ProceedingJoinPoint pjp, OpenEntityManager openEntityManager) throws Throwable {\n\t\tEntityManagerFactory emf = lookupEntityManagerFactory(openEntityManager);\n\t\tboolean participate = false;\n\n\t\tif (TransactionSynchronizationManager.hasResource(emf)) {\n\t\t\t// Do not modify the EntityManager: just set the participate flag.\n\t\t\tparticipate = true;\n\t\t}\n\t\telse {\n\t\t\tlogger.debug(\"Opening JPA EntityManager in OpenEntityManagerAspect\");\n\t\t\ttry {\n\t\t\t\tEntityManager em = createEntityManager(emf);\n\t\t\t\tTransactionSynchronizationManager.bindResource(emf, new EntityManagerHolder(em));\n\t\t\t}\n\t\t\tcatch (PersistenceException ex) {\n\t\t\t\tthrow new DataAccessResourceFailureException(\"Could not create JPA EntityManager\", ex);\n\t\t\t}\n\t\t}\n\n\t\ttry {\n\t\t\treturn pjp.proceed();\n\t\t}\n\n\t\tfinally {\n\t\t\tif (!participate) {\n\t\t\t\tEntityManagerHolder emHolder = (EntityManagerHolder)\n\t\t\t\t\t\tTransactionSynchronizationManager.unbindResource(emf);\n\t\t\t\tlogger.debug(\"Closing JPA EntityManager in OpenEntityManagerAspect\");\n\t\t\t\tEntityManagerFactoryUtils.closeEntityManager(emHolder.getEntityManager());\n\t\t\t}\n\t\t}\n    }","id":16576,"modified_method":"@Around(\"anyPublicMethod() && @annotation(openEntityManager)\")\n    public Object openEntityManager(ProceedingJoinPoint pjp, OpenEntityManager openEntityManager) throws Throwable {\n        final EntityManagerFactory emf = getEntityManagerFactory(openEntityManager);\n        \n        EntityManager em = getTransactionalEntityManager(emf);\n        boolean isNewEm = false;\n        if (em == null) {\n            logger.debug(\"Opening JPA EntityManager in OpenEntityManagerAspect\");\n            em = createEntityManager(emf);\n            isNewEm = true;\n            TransactionSynchronizationManager.bindResource(emf, new EntityManagerHolder(em));\n        }\n        else {\n            logger.debug(\"Using Existing JPA EntityManager in OpenEntityManagerAspect\");\n        }\n\t\ttry {\n\t\t\treturn pjp.proceed();\n\t\t}\n\t\tfinally {\n            if (isNewEm) {\n                logger.debug(\"Closing JPA EntityManager in OpenEntityManagerAspect\");\n                TransactionSynchronizationManager.unbindResource(emf);\n                EntityManagerFactoryUtils.closeEntityManager(em);\n            }\n\t\t}\n    }","commit_id":"7d8ca61c35ac1320f302fc531c5ee0ba82be47d2","url":"https://github.com/Jasig/uPortal"},{"original_method":"@Override\n    public void postExecution(HttpServletRequest request, HttpServletResponse response, IPortletExecutionContext context, Exception e) {\n        final EntityManagerFactory emf = (EntityManagerFactory)context.getExecutionAttribute(ENTITY_MANAGER_FACTORY);\n        final boolean participate = (Boolean)context.getExecutionAttribute(PARTICIPATE);\n        \n        if (!participate) {\n            final EntityManagerHolder emHolder = (EntityManagerHolder)TransactionSynchronizationManager.unbindResource(emf);\n            logger.debug(\"Closing JPA EntityManager in PortletExecutionWorker for {}\", context.getPortletWindowId());\n            EntityManagerFactoryUtils.closeEntityManager(emHolder.getEntityManager());\n        }\n    }","id":16577,"modified_method":"@Override\n    public void postExecution(HttpServletRequest request, HttpServletResponse response, IPortletExecutionContext context, Exception e) {\n        boolean isNewEm = (Boolean)context.getExecutionAttribute(IS_NEW);\n        if (isNewEm) {\n            TransactionSynchronizationManager.unbindResource(getEntityManagerFactory());\n            EntityManager em = (EntityManager)context.getExecutionAttribute(ENTITY_MANAGER_FACTORY);\n            EntityManagerFactoryUtils.closeEntityManager(em);\n        }\n    }","commit_id":"40207de6c55f0e195944dedd1c51db85e9d4f468","url":"https://github.com/Jasig/uPortal"},{"original_method":"@Override\n    public void preExecution(HttpServletRequest request, HttpServletResponse response, IPortletExecutionContext context) {\n        //Use a local reference to the EntityManagerFactory to make sure we return the entity manager to the same place we got it from\n        final EntityManagerFactory emf = entityManagerFactory;\n        context.setExecutionAttribute(ENTITY_MANAGER_FACTORY, emf);        \n        \n        final boolean participate;\n        if (TransactionSynchronizationManager.hasResource(emf)) {\n            // Do not modify the EntityManager: just set the participate flag.\n            participate = true;\n        }\n        else {\n            logger.debug(\"Opening JPA EntityManager in PortletExecutionWorker for {}\", context.getPortletWindowId());\n            try {\n                final EntityManager em = entityManagerFactory.createEntityManager();\n                TransactionSynchronizationManager.bindResource(emf, new EntityManagerHolder(em));\n            }\n            catch (PersistenceException ex) {\n                throw new DataAccessResourceFailureException(\"Could not create JPA EntityManager\", ex);\n            }\n            \n            participate = false;\n        }\n        \n        context.setExecutionAttribute(PARTICIPATE, participate);\n    }","id":16578,"modified_method":"@Override\n    public void preExecution(HttpServletRequest request, HttpServletResponse response, IPortletExecutionContext context) {\n        // Determine current EntityManager: either the transactional one\n        // managed by the factory or a temporary one for the given invocation.\n        EntityManager em = getTransactionalEntityManager();\n        boolean isNewEm = false;\n        if (em == null) {\n            logger.debug(\"Creating new EntityManager for JpaInterceptor invocation\");\n            em = createEntityManager();\n            isNewEm = true;\n            TransactionSynchronizationManager.bindResource(getEntityManagerFactory(), new EntityManagerHolder(em));\n            \n            //For new EM store as attribute so it can be closed\n            context.setExecutionAttribute(ENTITY_MANAGER_FACTORY, em);\n        }\n        \n        context.setExecutionAttribute(IS_NEW, isNewEm);\n    }","commit_id":"40207de6c55f0e195944dedd1c51db85e9d4f468","url":"https://github.com/Jasig/uPortal"},{"original_method":"@Around(\"anyPublicMethod() && @annotation(openEntityManager)\")\n    public Object openEntityManager(ProceedingJoinPoint pjp, OpenEntityManager openEntityManager) throws Throwable {\n\t\tEntityManagerFactory emf = lookupEntityManagerFactory(openEntityManager);\n\t\tboolean participate = false;\n\n\t\tif (TransactionSynchronizationManager.hasResource(emf)) {\n\t\t\t// Do not modify the EntityManager: just set the participate flag.\n\t\t\tparticipate = true;\n\t\t}\n\t\telse {\n\t\t\tlogger.debug(\"Opening JPA EntityManager in OpenEntityManagerAspect\");\n\t\t\ttry {\n\t\t\t\tEntityManager em = createEntityManager(emf);\n\t\t\t\tTransactionSynchronizationManager.bindResource(emf, new EntityManagerHolder(em));\n\t\t\t}\n\t\t\tcatch (PersistenceException ex) {\n\t\t\t\tthrow new DataAccessResourceFailureException(\"Could not create JPA EntityManager\", ex);\n\t\t\t}\n\t\t}\n\n\t\ttry {\n\t\t\treturn pjp.proceed();\n\t\t}\n\n\t\tfinally {\n\t\t\tif (!participate) {\n\t\t\t\tEntityManagerHolder emHolder = (EntityManagerHolder)\n\t\t\t\t\t\tTransactionSynchronizationManager.unbindResource(emf);\n\t\t\t\tlogger.debug(\"Closing JPA EntityManager in OpenEntityManagerAspect\");\n\t\t\t\tEntityManagerFactoryUtils.closeEntityManager(emHolder.getEntityManager());\n\t\t\t}\n\t\t}\n    }","id":16579,"modified_method":"@Around(\"anyPublicMethod() && @annotation(openEntityManager)\")\n    public Object openEntityManager(ProceedingJoinPoint pjp, OpenEntityManager openEntityManager) throws Throwable {\n        final EntityManagerFactory emf = getEntityManagerFactory(openEntityManager);\n        \n        EntityManager em = getTransactionalEntityManager(emf);\n        boolean isNewEm = false;\n        if (em == null) {\n            logger.debug(\"Opening JPA EntityManager in OpenEntityManagerAspect\");\n            em = createEntityManager(emf);\n            isNewEm = true;\n            TransactionSynchronizationManager.bindResource(emf, new EntityManagerHolder(em));\n        }\n        else {\n            logger.debug(\"Using Existing JPA EntityManager in OpenEntityManagerAspect\");\n        }\n\t\ttry {\n\t\t\treturn pjp.proceed();\n\t\t}\n\t\tfinally {\n            if (isNewEm) {\n                logger.debug(\"Closing JPA EntityManager in OpenEntityManagerAspect\");\n                TransactionSynchronizationManager.unbindResource(emf);\n                EntityManagerFactoryUtils.closeEntityManager(em);\n            }\n\t\t}\n    }","commit_id":"2fac493eb65c2be74eb24be2171a02496afb18f3","url":"https://github.com/Jasig/uPortal"},{"original_method":"@Override\n    public boolean prepare(Network network, NicProfile nic, VirtualMachineProfile<? extends VirtualMachine> vm, DeployDestination dest, ReservationContext context) throws ConcurrentOperationException, InsufficientCapacityException, ResourceUnavailableException {\n        if (canHandle(network.getGuestType(), dest, network.getTrafficType())) {\n            \n            if (vm.getType() != VirtualMachine.Type.User) {\n                return false;\n            }\n            \n            @SuppressWarnings(\"unchecked\")\n            VirtualMachineProfile<UserVm> uservm = (VirtualMachineProfile<UserVm>)vm;\n            Map<VirtualMachineProfile.Param, Object> params = new HashMap<VirtualMachineProfile.Param, Object>(1);\n            params.put(VirtualMachineProfile.Param.RestartNetwork, true);\n            return _routerMgr.addVirtualMachineIntoNetwork(network, nic, uservm, dest, context, true) != null;\n        } else {\n            return false;\n        }\n    }","id":16580,"modified_method":"@Override\n    public boolean prepare(Network network, NicProfile nic, VirtualMachineProfile<? extends VirtualMachine> vm, DeployDestination dest, ReservationContext context) throws ConcurrentOperationException, InsufficientCapacityException, ResourceUnavailableException {\n        if (canHandle(network.getGuestType(), dest, network.getTrafficType())) {\n            \n            if (vm.getType() != VirtualMachine.Type.User) {\n                return false;\n            }\n            \n            @SuppressWarnings(\"unchecked\")\n            VirtualMachineProfile<UserVm> uservm = (VirtualMachineProfile<UserVm>)vm;\n            Map<VirtualMachineProfile.Param, Object> params = new HashMap<VirtualMachineProfile.Param, Object>(1);\n            params.put(VirtualMachineProfile.Param.RestartNetwork, true);\n            List<DomainRouterVO> routers = _routerMgr.deployDhcp(network, dest, uservm.getOwner(), uservm.getParameters());\n            List<VirtualRouter> rets = _routerMgr.addVirtualMachineIntoNetwork(network, nic, uservm, dest, context, routers);\n            return (rets != null) && (!rets.isEmpty());\n        } else {\n            return false;\n        }\n    }","commit_id":"470c80a2c6d4d43dcb197c36ffd2c6bcd96d6910","url":"https://github.com/apache/cloudstack"},{"original_method":"@Override\n    public List<VirtualRouter> addVirtualMachineIntoNetwork(Network network, NicProfile nic, VirtualMachineProfile<UserVm> profile, DeployDestination dest, ReservationContext context, Boolean startDhcp)\n            throws ConcurrentOperationException, InsufficientCapacityException, ResourceUnavailableException {\n\n        List<DomainRouterVO> routers = startDhcp ? deployDhcp(network, dest, profile.getOwner(), profile.getParameters()) : deployVirtualRouter(network, dest, profile.getOwner(), profile.getParameters());\n        List<VirtualRouter> rets = new ArrayList<VirtualRouter>(routers.size());\n\n        for (DomainRouterVO router : routers) {\n            _userVmDao.loadDetails((UserVmVO) profile.getVirtualMachine());\n\n            String password = (String) profile.getParameter(VirtualMachineProfile.Param.VmPassword);\n            String userData = profile.getVirtualMachine().getUserData();\n            String sshPublicKey = profile.getVirtualMachine().getDetail(\"SSH.PublicKey\");\n            Commands cmds = new Commands(OnError.Stop);\n\n            String routerControlIpAddress = null;\n            List<NicVO> nics = _nicDao.listByVmId(router.getId());\n            for (NicVO n : nics) {\n                NetworkVO nc = _networkDao.findById(n.getNetworkId());\n                if (nc.getTrafficType() == TrafficType.Control) {\n                    routerControlIpAddress = n.getIp4Address();\n                }\n            }\n\n\t        DhcpEntryCommand dhcpCommand = new DhcpEntryCommand(nic.getMacAddress(), nic.getIp4Address(), profile.getVirtualMachine().getHostName());\n\t        dhcpCommand.setAccessDetail(NetworkElementCommand.ROUTER_IP, routerControlIpAddress);\n\t        dhcpCommand.setAccessDetail(NetworkElementCommand.ROUTER_GUEST_IP, router.getGuestIpAddress());\n\t        dhcpCommand.setAccessDetail(NetworkElementCommand.ROUTER_NAME, router.getInstanceName());\n\t        \n\t        DataCenterVO dcVo = _dcDao.findById(router.getDataCenterIdToDeployIn());\n\t        dhcpCommand.setAccessDetail(NetworkElementCommand.ZONE_NETWORK_TYPE, dcVo.getNetworkType().toString());\n\t        \n\t        cmds.addCommand(\"dhcp\", dhcpCommand);\n\t\n\t        // password should be set only on default network element\n\t        if (password != null && network.isDefault()) {\n\t            final String encodedPassword = PasswordGenerator.rot13(password);\n\t            SavePasswordCommand cmd = new SavePasswordCommand(encodedPassword, nic.getIp4Address(), profile.getVirtualMachine().getHostName());\n\t            cmd.setAccessDetail(NetworkElementCommand.ROUTER_IP, router.getPrivateIpAddress());\n\t            cmd.setAccessDetail(NetworkElementCommand.ROUTER_GUEST_IP, router.getGuestIpAddress());\n\t            cmd.setAccessDetail(NetworkElementCommand.ROUTER_NAME, router.getInstanceName());\n\t            cmd.setAccessDetail(NetworkElementCommand.ZONE_NETWORK_TYPE, dcVo.getNetworkType().toString());\n\t            \n\t            cmds.addCommand(\"password\", cmd);\n\t        }\n\n            String serviceOffering = _serviceOfferingDao.findByIdIncludingRemoved(profile.getServiceOfferingId()).getDisplayText();\n            String zoneName = _dcDao.findById(network.getDataCenterId()).getName();\n\n            cmds.addCommand(\n                    \"vmdata\",\n                    generateVmDataCommand(router, nic.getIp4Address(), userData, serviceOffering, zoneName, nic.getIp4Address(), profile.getVirtualMachine().getHostName(), profile.getVirtualMachine()\n                            .getInstanceName(), profile.getId(), sshPublicKey));\n\n            try {\n                _agentMgr.send(router.getHostId(), cmds);\n            } catch (OperationTimedoutException e) {\n                throw new AgentUnavailableException(\"Unable to reach the agent \", router.getHostId(), e);\n            }\n\n            Answer answer = cmds.getAnswer(\"dhcp\");\n            if (!answer.getResult()) {\n                s_logger.error(\"Unable to set dhcp entry for \" + profile + \" on domR: \" + router.getHostName() + \" due to \" + answer.getDetails());\n                throw new ResourceUnavailableException(\"Unable to set dhcp entry for \" + profile + \" due to \" + answer.getDetails(), DataCenter.class, router.getDataCenterIdToDeployIn());\n            }\n\n            answer = cmds.getAnswer(\"password\");\n            if (answer != null && !answer.getResult()) {\n                s_logger.error(\"Unable to set password for \" + profile + \" due to \" + answer.getDetails());\n                throw new ResourceUnavailableException(\"Unable to set password due to \" + answer.getDetails(), DataCenter.class, router.getDataCenterIdToDeployIn());\n            }\n\n            answer = cmds.getAnswer(\"vmdata\");\n            if (answer != null && !answer.getResult()) {\n                s_logger.error(\"Unable to set VM data for \" + profile + \" due to \" + answer.getDetails());\n                throw new ResourceUnavailableException(\"Unable to set VM data due to \" + answer.getDetails(), DataCenter.class, router.getDataCenterIdToDeployIn());\n            }\n            rets.add(router);\n        }\n        /* Notice we just return the first router in the list, not all */\n        return rets;\n    }","id":16581,"modified_method":"@Override\n    public List<VirtualRouter> addVirtualMachineIntoNetwork(Network network, NicProfile nic, VirtualMachineProfile<UserVm> profile, DeployDestination dest, ReservationContext context, List<DomainRouterVO> routers)\n            throws ConcurrentOperationException, InsufficientCapacityException, ResourceUnavailableException {\n\n        List<VirtualRouter> rets = new ArrayList<VirtualRouter>(routers.size());\n\n        for (DomainRouterVO router : routers) {\n            _userVmDao.loadDetails((UserVmVO) profile.getVirtualMachine());\n\n            String password = (String) profile.getParameter(VirtualMachineProfile.Param.VmPassword);\n            String userData = profile.getVirtualMachine().getUserData();\n            String sshPublicKey = profile.getVirtualMachine().getDetail(\"SSH.PublicKey\");\n            Commands cmds = new Commands(OnError.Stop);\n\n            String routerControlIpAddress = null;\n            List<NicVO> nics = _nicDao.listByVmId(router.getId());\n            for (NicVO n : nics) {\n                NetworkVO nc = _networkDao.findById(n.getNetworkId());\n                if (nc.getTrafficType() == TrafficType.Control) {\n                    routerControlIpAddress = n.getIp4Address();\n                }\n            }\n\n\t        DhcpEntryCommand dhcpCommand = new DhcpEntryCommand(nic.getMacAddress(), nic.getIp4Address(), profile.getVirtualMachine().getHostName());\n\t        dhcpCommand.setAccessDetail(NetworkElementCommand.ROUTER_IP, routerControlIpAddress);\n\t        dhcpCommand.setAccessDetail(NetworkElementCommand.ROUTER_GUEST_IP, router.getGuestIpAddress());\n\t        dhcpCommand.setAccessDetail(NetworkElementCommand.ROUTER_NAME, router.getInstanceName());\n\t        \n\t        DataCenterVO dcVo = _dcDao.findById(router.getDataCenterIdToDeployIn());\n\t        dhcpCommand.setAccessDetail(NetworkElementCommand.ZONE_NETWORK_TYPE, dcVo.getNetworkType().toString());\n\t        \n\t        cmds.addCommand(\"dhcp\", dhcpCommand);\n\t\n\t        // password should be set only on default network element\n\t        if (password != null && network.isDefault()) {\n\t            final String encodedPassword = PasswordGenerator.rot13(password);\n\t            SavePasswordCommand cmd = new SavePasswordCommand(encodedPassword, nic.getIp4Address(), profile.getVirtualMachine().getHostName());\n\t            cmd.setAccessDetail(NetworkElementCommand.ROUTER_IP, router.getPrivateIpAddress());\n\t            cmd.setAccessDetail(NetworkElementCommand.ROUTER_GUEST_IP, router.getGuestIpAddress());\n\t            cmd.setAccessDetail(NetworkElementCommand.ROUTER_NAME, router.getInstanceName());\n\t            cmd.setAccessDetail(NetworkElementCommand.ZONE_NETWORK_TYPE, dcVo.getNetworkType().toString());\n\t            \n\t            cmds.addCommand(\"password\", cmd);\n\t        }\n\n            String serviceOffering = _serviceOfferingDao.findByIdIncludingRemoved(profile.getServiceOfferingId()).getDisplayText();\n            String zoneName = _dcDao.findById(network.getDataCenterId()).getName();\n\n            cmds.addCommand(\n                    \"vmdata\",\n                    generateVmDataCommand(router, nic.getIp4Address(), userData, serviceOffering, zoneName, nic.getIp4Address(), profile.getVirtualMachine().getHostName(), profile.getVirtualMachine()\n                            .getInstanceName(), profile.getId(), sshPublicKey));\n\n            try {\n                _agentMgr.send(router.getHostId(), cmds);\n            } catch (OperationTimedoutException e) {\n                throw new AgentUnavailableException(\"Unable to reach the agent \", router.getHostId(), e);\n            }\n\n            Answer answer = cmds.getAnswer(\"dhcp\");\n            if (!answer.getResult()) {\n                s_logger.error(\"Unable to set dhcp entry for \" + profile + \" on domR: \" + router.getHostName() + \" due to \" + answer.getDetails());\n                throw new ResourceUnavailableException(\"Unable to set dhcp entry for \" + profile + \" due to \" + answer.getDetails(), DataCenter.class, router.getDataCenterIdToDeployIn());\n            }\n\n            answer = cmds.getAnswer(\"password\");\n            if (answer != null && !answer.getResult()) {\n                s_logger.error(\"Unable to set password for \" + profile + \" due to \" + answer.getDetails());\n                throw new ResourceUnavailableException(\"Unable to set password due to \" + answer.getDetails(), DataCenter.class, router.getDataCenterIdToDeployIn());\n            }\n\n            answer = cmds.getAnswer(\"vmdata\");\n            if (answer != null && !answer.getResult()) {\n                s_logger.error(\"Unable to set VM data for \" + profile + \" due to \" + answer.getDetails());\n                throw new ResourceUnavailableException(\"Unable to set VM data due to \" + answer.getDetails(), DataCenter.class, router.getDataCenterIdToDeployIn());\n            }\n            rets.add(router);\n        }\n        return rets;\n    }","commit_id":"470c80a2c6d4d43dcb197c36ffd2c6bcd96d6910","url":"https://github.com/apache/cloudstack"},{"original_method":"@Override\n    public boolean prepare(Network network, NicProfile nic, VirtualMachineProfile<? extends VirtualMachine> vm, DeployDestination dest, ReservationContext context) throws ConcurrentOperationException, InsufficientCapacityException, ResourceUnavailableException {\n        if (canHandle(network.getGuestType(), dest.getDataCenter())) {\n            if (vm.getType() != VirtualMachine.Type.User) {\n                return false;\n            }\n            \n            @SuppressWarnings(\"unchecked\")\n            VirtualMachineProfile<UserVm> uservm = (VirtualMachineProfile<UserVm>)vm;\n            \n            return _routerMgr.addVirtualMachineIntoNetwork(network, nic, uservm, dest, context, false) != null;\n        } else {\n            return false;\n        }\n    }","id":16582,"modified_method":"@Override\n    public boolean prepare(Network network, NicProfile nic, VirtualMachineProfile<? extends VirtualMachine> vm, DeployDestination dest, ReservationContext context) throws ConcurrentOperationException, InsufficientCapacityException, ResourceUnavailableException {\n        if (canHandle(network.getGuestType(), dest.getDataCenter())) {\n            if (vm.getType() != VirtualMachine.Type.User) {\n                return false;\n            }\n            \n            @SuppressWarnings(\"unchecked\")\n            VirtualMachineProfile<UserVm> uservm = (VirtualMachineProfile<UserVm>)vm;\n            List<DomainRouterVO> routers = _routerMgr.deployVirtualRouter(network, dest, uservm.getOwner(), uservm.getParameters());\n            List<VirtualRouter> rets = _routerMgr.addVirtualMachineIntoNetwork(network, nic, uservm, dest, context, routers);\n            return (rets != null) && (!rets.isEmpty());\n        } else {\n            return false;\n        }\n    }","commit_id":"470c80a2c6d4d43dcb197c36ffd2c6bcd96d6910","url":"https://github.com/apache/cloudstack"},{"original_method":"@Override\n    public boolean prepare(Network network, NicProfile nic, VirtualMachineProfile<? extends VirtualMachine> vm, DeployDestination dest, ReservationContext context) throws ConcurrentOperationException, InsufficientCapacityException, ResourceUnavailableException {\n        if (canHandle(network.getGuestType(), dest, network.getTrafficType())) {\n            \n            if (vm.getType() != VirtualMachine.Type.User) {\n                return false;\n            }\n            \n            @SuppressWarnings(\"unchecked\")\n            VirtualMachineProfile<UserVm> uservm = (VirtualMachineProfile<UserVm>)vm;\n            Map<VirtualMachineProfile.Param, Object> params = new HashMap<VirtualMachineProfile.Param, Object>(1);\n            params.put(VirtualMachineProfile.Param.RestartNetwork, true);\n            return _routerMgr.addVirtualMachineIntoNetwork(network, nic, uservm, dest, context, true) != null;\n        } else {\n            return false;\n        }\n    }","id":16583,"modified_method":"@Override\n    public boolean prepare(Network network, NicProfile nic, VirtualMachineProfile<? extends VirtualMachine> vm, DeployDestination dest, ReservationContext context) throws ConcurrentOperationException, InsufficientCapacityException, ResourceUnavailableException {\n        if (canHandle(network.getGuestType(), dest, network.getTrafficType())) {\n            \n            if (vm.getType() != VirtualMachine.Type.User) {\n                return false;\n            }\n            \n            @SuppressWarnings(\"unchecked\")\n            VirtualMachineProfile<UserVm> uservm = (VirtualMachineProfile<UserVm>)vm;\n            Map<VirtualMachineProfile.Param, Object> params = new HashMap<VirtualMachineProfile.Param, Object>(1);\n            params.put(VirtualMachineProfile.Param.RestartNetwork, true);\n            List<DomainRouterVO> routers = _routerMgr.deployDhcp(network, dest, uservm.getOwner(), uservm.getParameters());                                                                                                                        \n            List<VirtualRouter> rets = _routerMgr.addVirtualMachineIntoNetwork(network, nic, uservm, dest, context, routers);                                                                                                                      \n            return (rets != null) && (!rets.isEmpty());\n        } else {\n            return false;\n        }\n    }","commit_id":"978b2640e2789c40a27be61f96fc3708770a0a8e","url":"https://github.com/apache/cloudstack"},{"original_method":"protected DomainRouterDaoImpl() {\n        AllFieldsSearch = createSearchBuilder();\n        AllFieldsSearch.and(\"dc\", AllFieldsSearch.entity().getDataCenterIdToDeployIn(), Op.EQ);\n        AllFieldsSearch.and(\"account\", AllFieldsSearch.entity().getAccountId(), Op.EQ);\n        AllFieldsSearch.and(\"role\", AllFieldsSearch.entity().getRole(), Op.EQ);\n        AllFieldsSearch.and(\"domainId\", AllFieldsSearch.entity().getDomainId(), Op.EQ);\n        AllFieldsSearch.and(\"host\", AllFieldsSearch.entity().getHostId(), Op.EQ);\n        AllFieldsSearch.and(\"lastHost\", AllFieldsSearch.entity().getLastHostId(), Op.EQ);\n        AllFieldsSearch.and(\"state\", AllFieldsSearch.entity().getState(), Op.EQ);\n        AllFieldsSearch.and(\"network\", AllFieldsSearch.entity().getNetworkId(), Op.EQ);\n        AllFieldsSearch.and(\"podId\", AllFieldsSearch.entity().getPodIdToDeployIn(), Op.EQ);\n        AllFieldsSearch.done();\n\n        IdNetworkIdStatesSearch = createSearchBuilder();\n        IdNetworkIdStatesSearch.and(\"id\", IdNetworkIdStatesSearch.entity().getId(), Op.EQ);\n        IdNetworkIdStatesSearch.and(\"network\", IdNetworkIdStatesSearch.entity().getNetworkId(), Op.EQ);\n        IdNetworkIdStatesSearch.and(\"states\", IdNetworkIdStatesSearch.entity().getState(), Op.IN);\n        IdNetworkIdStatesSearch.done();\n\n        HostUpSearch = createSearchBuilder();\n        HostUpSearch.and(\"host\", HostUpSearch.entity().getHostId(), Op.EQ);\n        HostUpSearch.and(\"states\", HostUpSearch.entity().getState(), Op.NIN);\n        SearchBuilder<NetworkVO> joinNetwork = _networksDao.createSearchBuilder();\n        joinNetwork.and(\"guestType\", joinNetwork.entity().getGuestType(), Op.EQ);\n        HostUpSearch.join(\"network\", joinNetwork, joinNetwork.entity().getId(), HostUpSearch.entity().getNetworkId(), JoinType.INNER);\n        HostUpSearch.done();\n        \n        StateNetworkTypeSearch = createSearchBuilder();\n        StateNetworkTypeSearch.and(\"state\", StateNetworkTypeSearch.entity().getState(), Op.EQ);\n        SearchBuilder<NetworkVO> joinStateNetwork = _networksDao.createSearchBuilder();\n        joinStateNetwork.and(\"guestType\", joinStateNetwork.entity().getGuestType(), Op.EQ);\n        StateNetworkTypeSearch.join(\"network\", joinStateNetwork, joinStateNetwork.entity().getId(), StateNetworkTypeSearch.entity().getNetworkId(), JoinType.INNER);\n        StateNetworkTypeSearch.done();\n\n    }","id":16584,"modified_method":"protected DomainRouterDaoImpl() {\n        AllFieldsSearch = createSearchBuilder();\n        AllFieldsSearch.and(\"dc\", AllFieldsSearch.entity().getDataCenterIdToDeployIn(), Op.EQ);\n        AllFieldsSearch.and(\"account\", AllFieldsSearch.entity().getAccountId(), Op.EQ);\n        AllFieldsSearch.and(\"role\", AllFieldsSearch.entity().getRole(), Op.EQ);\n        AllFieldsSearch.and(\"domainId\", AllFieldsSearch.entity().getDomainId(), Op.EQ);\n        AllFieldsSearch.and(\"host\", AllFieldsSearch.entity().getHostId(), Op.EQ);\n        AllFieldsSearch.and(\"lastHost\", AllFieldsSearch.entity().getLastHostId(), Op.EQ);\n        AllFieldsSearch.and(\"state\", AllFieldsSearch.entity().getState(), Op.EQ);\n        AllFieldsSearch.and(\"network\", AllFieldsSearch.entity().getNetworkId(), Op.EQ);\n        AllFieldsSearch.and(\"podId\", AllFieldsSearch.entity().getPodIdToDeployIn(), Op.EQ);\n        AllFieldsSearch.done();\n\n        IdNetworkIdStatesSearch = createSearchBuilder();\n        IdNetworkIdStatesSearch.and(\"id\", IdNetworkIdStatesSearch.entity().getId(), Op.EQ);\n        IdNetworkIdStatesSearch.and(\"network\", IdNetworkIdStatesSearch.entity().getNetworkId(), Op.EQ);\n        IdNetworkIdStatesSearch.and(\"states\", IdNetworkIdStatesSearch.entity().getState(), Op.IN);\n        IdNetworkIdStatesSearch.done();\n\n        HostUpSearch = createSearchBuilder();\n        HostUpSearch.and(\"host\", HostUpSearch.entity().getHostId(), Op.EQ);\n        HostUpSearch.and(\"states\", HostUpSearch.entity().getState(), Op.NIN);\n        SearchBuilder<NetworkVO> joinNetwork = _networksDao.createSearchBuilder();\n        joinNetwork.and(\"guestType\", joinNetwork.entity().getGuestType(), Op.EQ);\n        HostUpSearch.join(\"network\", joinNetwork, joinNetwork.entity().getId(), HostUpSearch.entity().getNetworkId(), JoinType.INNER);\n        HostUpSearch.done();\n        \n        StateNetworkTypeSearch = createSearchBuilder();\n        StateNetworkTypeSearch.and(\"state\", StateNetworkTypeSearch.entity().getState(), Op.EQ);\n        SearchBuilder<NetworkVO> joinStateNetwork = _networksDao.createSearchBuilder();\n        joinStateNetwork.and(\"guestType\", joinStateNetwork.entity().getGuestType(), Op.EQ);\n        StateNetworkTypeSearch.join(\"network\", joinStateNetwork, joinStateNetwork.entity().getId(), StateNetworkTypeSearch.entity().getNetworkId(), JoinType.INNER);\n        StateNetworkTypeSearch.done();\n\n        OutsidePodSearch = createSearchBuilder();\n        OutsidePodSearch.and(\"network\", OutsidePodSearch.entity().getNetworkId(), Op.EQ);\n        OutsidePodSearch.and(\"podId\", OutsidePodSearch.entity().getPodIdToDeployIn(), Op.NEQ);\n        OutsidePodSearch.and(\"state\", OutsidePodSearch.entity().getState(), Op.EQ);\n        OutsidePodSearch.done();\n    }","commit_id":"978b2640e2789c40a27be61f96fc3708770a0a8e","url":"https://github.com/apache/cloudstack"},{"original_method":"@Override\n    public List<DomainRouterVO> deployDhcp(Network guestNetwork, DeployDestination dest, Account owner, Map<Param, Object> params) throws InsufficientCapacityException, StorageUnavailableException,\n            ConcurrentOperationException, ResourceUnavailableException {\n\n        NetworkOffering offering = _networkOfferingDao.findByIdIncludingRemoved(guestNetwork.getNetworkOfferingId());\n        if (offering.isSystemOnly() || guestNetwork.getIsShared()) {\n            owner = _accountMgr.getAccount(Account.ACCOUNT_ID_SYSTEM);\n        }\n\n        if (s_logger.isDebugEnabled()) {\n            s_logger.debug(\"Starting a dhcp for network configurations: dhcp=\" + guestNetwork + \" in \" + dest);\n        }\n        assert guestNetwork.getState() == Network.State.Implemented || guestNetwork.getState() == Network.State.Setup || guestNetwork.getState() == Network.State.Implementing : \"Network is not yet fully implemented: \"\n                + guestNetwork;\n\n        List<DomainRouterVO> routers = findOrCreateDhcpServer(guestNetwork, dest, owner);\n        for (DomainRouterVO router : routers) {\n            State state = router.getState();\n            if (state != State.Running) {\n                router = start(router, _accountService.getSystemUser(), _accountService.getSystemAccount(), params);\n            }\n        }\n        return routers;\n    }","id":16585,"modified_method":"@Override\n    public List<DomainRouterVO> deployDhcp(Network guestNetwork, DeployDestination dest, Account owner, Map<Param, Object> params) throws InsufficientCapacityException, StorageUnavailableException,\n            ConcurrentOperationException, ResourceUnavailableException {\n        NetworkOffering offering = _networkOfferingDao.findByIdIncludingRemoved(guestNetwork.getNetworkOfferingId());\n        if (offering.isSystemOnly() || guestNetwork.getIsShared()) {\n            owner = _accountMgr.getAccount(Account.ACCOUNT_ID_SYSTEM);\n        }\n        \n        if (s_logger.isDebugEnabled()) {\n            s_logger.debug(\"Starting a dhcp server for \" + guestNetwork + \" in \" + dest);\n        }\n        assert guestNetwork.getState() == Network.State.Implemented || guestNetwork.getState() == Network.State.Setup || guestNetwork.getState() == Network.State.Implementing : \"Network is not yet fully implemented: \"\n                + guestNetwork;\n        \n        List<DomainRouterVO> routers = findOrCreateDhcpServers(guestNetwork, dest, owner);\n        List<DomainRouterVO> runningRouters = null;\n        \n        if (routers != null) {\n            runningRouters = new ArrayList<DomainRouterVO>();\n        }\n        \n        for (DomainRouterVO router : routers) {\n            State state = router.getState();\n            if (state != State.Running) {\n                router = this.start(router, _accountService.getSystemUser(), _accountService.getSystemAccount(), params);\n            }\n            runningRouters.add(router);\n        }\n\n        return runningRouters;\n    }","commit_id":"978b2640e2789c40a27be61f96fc3708770a0a8e","url":"https://github.com/apache/cloudstack"},{"original_method":"@Override\n    public boolean applyFirewallRules(Network network, List<? extends FirewallRule> rules) throws ResourceUnavailableException {\n        List<DomainRouterVO> routers = _routerDao.findByNetwork(network.getId());\n        if (routers != null && routers.isEmpty()) {\n            s_logger.warn(\"Unable to apply lb rules, virtual router doesn't exist in the network \" + network.getId());\n            throw new ResourceUnavailableException(\"Unable to apply lb rules\", DataCenter.class, network.getDataCenterId());\n        }\n\n        boolean result = true;\n        for (DomainRouterVO router : routers) {\n            if (router.getState() == State.Running) {\n                if (rules != null && !rules.isEmpty()) {\n                    if (rules.get(0).getPurpose() == Purpose.LoadBalancing) {\n                        // for load balancer we have to resend all lb rules for the network\n                        List<LoadBalancerVO> lbs = _loadBalancerDao.listByNetworkId(network.getId());\n                        List<LoadBalancingRule> lbRules = new ArrayList<LoadBalancingRule>();\n                        for (LoadBalancerVO lb : lbs) {\n                            List<LbDestination> dstList = _lbMgr.getExistingDestinations(lb.getId());\n                            LoadBalancingRule loadBalancing = new LoadBalancingRule(lb, dstList);\n                            lbRules.add(loadBalancing);\n                        }\n                        result = result && applyLBRules(router, lbRules);\n                    } else if (rules.get(0).getPurpose() == Purpose.PortForwarding) {\n                        result = result && applyPortForwardingRules(router, (List<PortForwardingRule>) rules);\n                    } else if (rules.get(0).getPurpose() == Purpose.StaticNat) {\n                        result = result && applyStaticNatRules(router, (List<StaticNatRule>) rules);\n                    } else {\n                        s_logger.warn(\"Unable to apply rules of purpose: \" + rules.get(0).getPurpose());\n                        result = false;\n                    }\n                } \n            } else if (router.getState() == State.Stopped || router.getState() == State.Stopping) {\n                s_logger.debug(\"Router is in \" + router.getState() + \", so not sending apply firewall rules commands to the backend\");\n            } else {\n                s_logger.warn(\"Unable to apply firewall rules, virtual router is not in the right state \" + router.getState());\n                throw new ResourceUnavailableException(\"Unable to apply firewall rules, virtual router is not in the right state\", VirtualRouter.class, router.getId());\n            }\n        }\n        return result;\n    }","id":16586,"modified_method":"@Override\n    public boolean applyFirewallRules(Network network, List<? extends FirewallRule> rules) throws ResourceUnavailableException {\n        List<DomainRouterVO> routers = _routerDao.findByNetwork(network.getId());\n        if (routers == null || routers.isEmpty()) {\n            s_logger.warn(\"Unable to apply lb rules, virtual router doesn't exist in the network \" + network.getId());\n            throw new ResourceUnavailableException(\"Unable to apply lb rules\", DataCenter.class, network.getDataCenterId());\n        }\n\n        boolean result = true;\n        for (DomainRouterVO router : routers) {\n            if (router.getState() == State.Running) {\n                if (rules != null && !rules.isEmpty()) {\n                    if (rules.get(0).getPurpose() == Purpose.LoadBalancing) {\n                        // for load balancer we have to resend all lb rules for the network\n                        List<LoadBalancerVO> lbs = _loadBalancerDao.listByNetworkId(network.getId());\n                        List<LoadBalancingRule> lbRules = new ArrayList<LoadBalancingRule>();\n                        for (LoadBalancerVO lb : lbs) {\n                            List<LbDestination> dstList = _lbMgr.getExistingDestinations(lb.getId());\n                            LoadBalancingRule loadBalancing = new LoadBalancingRule(lb, dstList);\n                            lbRules.add(loadBalancing);\n                        }\n\n                        result = result && applyLBRules(router, lbRules);\n                    } else if (rules.get(0).getPurpose() == Purpose.PortForwarding) {\n                        result = result && applyPortForwardingRules(router, (List<PortForwardingRule>) rules);\n                    } else if (rules.get(0).getPurpose() == Purpose.StaticNat) {\n                        result = result && applyStaticNatRules(router, (List<StaticNatRule>) rules);\n                    } else {\n                        s_logger.warn(\"Unable to apply rules of purpose: \" + rules.get(0).getPurpose());\n                        result = false;\n                    }\n                }\n            } else if (router.getState() == State.Stopped || router.getState() == State.Stopping) {\n                s_logger.debug(\"Router is in \" + router.getState() + \", so not sending apply firewall rules commands to the backend\");\n            } else {\n                s_logger.warn(\"Unable to apply firewall rules, virtual router is not in the right state \" + router.getState());\n                throw new ResourceUnavailableException(\"Unable to apply firewall rules, virtual router is not in the right state\", VirtualRouter.class, router.getId());\n            }\n        }\n        return result;\n    }","commit_id":"978b2640e2789c40a27be61f96fc3708770a0a8e","url":"https://github.com/apache/cloudstack"},{"original_method":"@Override\n    public boolean start() {\n        _executor.scheduleAtFixedRate(new NetworkUsageTask(), _routerStatsInterval, _routerStatsInterval, TimeUnit.SECONDS);\n        _checkExecutor.scheduleAtFixedRate(new CheckRouterTask(), _checkRouterInterval, _checkRouterInterval, TimeUnit.SECONDS);\n        return true;\n    }","id":16587,"modified_method":"@Override\n    public boolean start() {\n    \tif (_routerStatsInterval > 0){\n    \t\t_executor.scheduleAtFixedRate(new NetworkUsageTask(), _routerStatsInterval, _routerStatsInterval, TimeUnit.SECONDS);\n    \t}else{\n    \t\ts_logger.debug(\"router.stats.interval - \" + _routerStatsInterval+ \" so not scheduling the router stats thread\");\n    \t}\n    \t_checkExecutor.scheduleAtFixedRate(new CheckRouterTask(), _checkRouterInterval, _checkRouterInterval, TimeUnit.SECONDS);    \t\n        return true;\n    }","commit_id":"978b2640e2789c40a27be61f96fc3708770a0a8e","url":"https://github.com/apache/cloudstack"},{"original_method":"@Override\n    public List<DomainRouterVO> deployVirtualRouter(Network guestNetwork, DeployDestination dest, Account owner, Map<Param, Object> params) throws InsufficientCapacityException,\n            ConcurrentOperationException, ResourceUnavailableException {\n        long dcId = dest.getDataCenter().getId();\n\n        if (s_logger.isDebugEnabled()) {\n            s_logger.debug(\"Starting a router for network configurations: virtual=\" + guestNetwork + \" in \" + dest);\n        }\n\n        assert guestNetwork.getState() == Network.State.Implemented || guestNetwork.getState() == Network.State.Setup || guestNetwork.getState() == Network.State.Implementing : \"Network is not yet fully implemented: \"\n                + guestNetwork;\n        assert guestNetwork.getTrafficType() == TrafficType.Guest;\n\n        DataCenterDeployment plan = new DataCenterDeployment(dcId);\n\n        List<DomainRouterVO> routers = findOrCreateVirtualRouter(guestNetwork, plan, dest.getCluster().getHypervisorType(), owner);\n        \n        for (DomainRouterVO router : routers) {\n            State state = router.getState();\n            if (state != State.Running) {\n                router = start(router, _accountService.getSystemUser(), _accountService.getSystemAccount(), params);\n            }\n        }\n\n        return routers;\n    }","id":16588,"modified_method":"@Override\n    public List<DomainRouterVO> deployVirtualRouter(Network guestNetwork, DeployDestination dest, Account owner, Map<Param, Object> params, boolean isRedundant) throws InsufficientCapacityException,\n            ConcurrentOperationException, ResourceUnavailableException {\n        if (s_logger.isDebugEnabled()) {\n            s_logger.debug(\"Starting a router for \" + guestNetwork + \" in \" + dest);\n        }\n\n        assert guestNetwork.getState() == Network.State.Implemented || guestNetwork.getState() == Network.State.Setup || guestNetwork.getState() == Network.State.Implementing : \"Network is not yet fully implemented: \"\n                + guestNetwork;\n        assert guestNetwork.getTrafficType() == TrafficType.Guest;\n\n        List<DomainRouterVO> routers = findOrCreateVirtualRouters(guestNetwork, dest, owner, isRedundant);\n        List<DomainRouterVO> runningRouters = null;\n        \n        if (routers != null) {\n            runningRouters = new ArrayList<DomainRouterVO>();\n        }\n        \n        for (DomainRouterVO router : routers) {\n            State state = router.getState();\n            if (state != State.Running) {\n                router = this.start(router, _accountService.getSystemUser(), _accountService.getSystemAccount(), params);\n            }\n            runningRouters.add(router);\n        }\n\n        return runningRouters;\n    }","commit_id":"978b2640e2789c40a27be61f96fc3708770a0a8e","url":"https://github.com/apache/cloudstack"},{"original_method":"@Override\n    public List<VirtualRouter> addVirtualMachineIntoNetwork(Network network, NicProfile nic, VirtualMachineProfile<UserVm> profile, DeployDestination dest, ReservationContext context, Boolean startDhcp)\n            throws ConcurrentOperationException, InsufficientCapacityException, ResourceUnavailableException {\n\n        List<DomainRouterVO> routers = startDhcp ? deployDhcp(network, dest, profile.getOwner(), profile.getParameters()) : deployVirtualRouter(network, dest, profile.getOwner(), profile.getParameters());\n        List<VirtualRouter> rets = new ArrayList<VirtualRouter>(routers.size());\n\n        for (DomainRouterVO router : routers) {\n            _userVmDao.loadDetails((UserVmVO) profile.getVirtualMachine());\n\n            String password = (String) profile.getParameter(VirtualMachineProfile.Param.VmPassword);\n            String userData = profile.getVirtualMachine().getUserData();\n            String sshPublicKey = profile.getVirtualMachine().getDetail(\"SSH.PublicKey\");\n            Commands cmds = new Commands(OnError.Stop);\n\n            String routerControlIpAddress = null;\n            List<NicVO> nics = _nicDao.listByVmId(router.getId());\n            for (NicVO n : nics) {\n                NetworkVO nc = _networkDao.findById(n.getNetworkId());\n                if (nc.getTrafficType() == TrafficType.Control) {\n                    routerControlIpAddress = n.getIp4Address();\n                }\n            }\n\n            DhcpEntryCommand dhcpCommand = new DhcpEntryCommand(nic.getMacAddress(), nic.getIp4Address(), profile.getVirtualMachine().getHostName());\n            dhcpCommand.setAccessDetail(NetworkElementCommand.ROUTER_IP, routerControlIpAddress);\n            dhcpCommand.setAccessDetail(NetworkElementCommand.ROUTER_GUEST_IP, router.getGuestIpAddress());\n            dhcpCommand.setAccessDetail(NetworkElementCommand.ROUTER_NAME, router.getInstanceName());\n\n            DataCenterVO dcVo = _dcDao.findById(router.getDataCenterIdToDeployIn());\n            dhcpCommand.setAccessDetail(NetworkElementCommand.ZONE_NETWORK_TYPE, dcVo.getNetworkType().toString());\n\n            cmds.addCommand(\"dhcp\", dhcpCommand);\n\n            // password should be set only on default network element\n            if (password != null && network.isDefault()) {\n                final String encodedPassword = PasswordGenerator.rot13(password);\n                SavePasswordCommand cmd = new SavePasswordCommand(encodedPassword, nic.getIp4Address(), profile.getVirtualMachine().getHostName());\n                cmd.setAccessDetail(NetworkElementCommand.ROUTER_IP, router.getPrivateIpAddress());\n                cmd.setAccessDetail(NetworkElementCommand.ROUTER_GUEST_IP, router.getGuestIpAddress());\n                cmd.setAccessDetail(NetworkElementCommand.ROUTER_NAME, router.getInstanceName());\n                cmd.setAccessDetail(NetworkElementCommand.ZONE_NETWORK_TYPE, dcVo.getNetworkType().toString());\n\n                cmds.addCommand(\"password\", cmd);\n            }\n\n            String serviceOffering = _serviceOfferingDao.findByIdIncludingRemoved(profile.getServiceOfferingId()).getDisplayText();\n            String zoneName = _dcDao.findById(network.getDataCenterId()).getName();\n\n            cmds.addCommand(\n                    \"vmdata\",\n                    generateVmDataCommand(router, nic.getIp4Address(), userData, serviceOffering, zoneName, nic.getIp4Address(), profile.getVirtualMachine().getHostName(), profile.getVirtualMachine()\n                        .getInstanceName(), profile.getId(), sshPublicKey));\n\n            try {\n                _agentMgr.send(router.getHostId(), cmds);\n            } catch (OperationTimedoutException e) {\n                throw new AgentUnavailableException(\"Unable to reach the agent \", router.getHostId(), e);\n            }\n\n            Answer answer = cmds.getAnswer(\"dhcp\");\n            if (!answer.getResult()) {\n                s_logger.error(\"Unable to set dhcp entry for \" + profile + \" on domR: \" + router.getHostName() + \" due to \" + answer.getDetails());\n                throw new ResourceUnavailableException(\"Unable to set dhcp entry for \" + profile + \" due to \" + answer.getDetails(), DataCenter.class, router.getDataCenterIdToDeployIn());\n            }\n\n            answer = cmds.getAnswer(\"password\");\n            if (answer != null && !answer.getResult()) {\n                s_logger.error(\"Unable to set password for \" + profile + \" due to \" + answer.getDetails());\n                throw new ResourceUnavailableException(\"Unable to set password due to \" + answer.getDetails(), DataCenter.class, router.getDataCenterIdToDeployIn());\n            }\n\n            answer = cmds.getAnswer(\"vmdata\");\n            if (answer != null && !answer.getResult()) {\n                s_logger.error(\"Unable to set VM data for \" + profile + \" due to \" + answer.getDetails());\n                throw new ResourceUnavailableException(\"Unable to set VM data due to \" + answer.getDetails(), DataCenter.class, router.getDataCenterIdToDeployIn());\n            }\n            rets.add(router);\n        }\n        return rets;\n    }","id":16589,"modified_method":"@Override\n    public List<VirtualRouter> addVirtualMachineIntoNetwork(Network network, NicProfile nic, VirtualMachineProfile<UserVm> profile, DeployDestination dest, ReservationContext context, List<DomainRouterVO> routers)\n            throws ConcurrentOperationException, InsufficientCapacityException, ResourceUnavailableException {\n\n        List<VirtualRouter> rets = new ArrayList<VirtualRouter>(routers.size());\n\n        for (DomainRouterVO router : routers) {\n            if (router.getState() != State.Running) {\n                s_logger.warn(\"Unable to add virtual machine \" + profile.getVirtualMachine() + \" to the router \" + router + \" as the router is not in Running state\");\n                continue;\n            }\n            boolean sendPasswordAndVmData = true;\n            boolean sendDnsDhcpData = true;\n            _userVmDao.loadDetails((UserVmVO) profile.getVirtualMachine());\n            \n            //for basic zone: \n            //1) send vm data/password information only to the dhcp in the same pod\n            //2) send dhcp/dns information to all routers in the cloudstack only when _dnsBasicZoneUpdates is set to \"all\" value\n            DataCenter dc = dest.getDataCenter();\n            if (dc.getNetworkType() == NetworkType.Basic) {\n                Long podId = dest.getPod().getId();\n                if (router.getPodIdToDeployIn().longValue() != podId.longValue()) {\n                    sendPasswordAndVmData = false;\n                    if (_dnsBasicZoneUpdates.equalsIgnoreCase(\"pod\")) {\n                        sendDnsDhcpData = false;\n                    }\n                }\n            }\n\n            Commands cmds = new Commands(OnError.Stop);\n\n            String routerControlIpAddress = null;\n            List<NicVO> nics = _nicDao.listByVmId(router.getId());\n            for (NicVO n : nics) {\n                NetworkVO nc = _networkDao.findById(n.getNetworkId());\n                if (nc.getTrafficType() == TrafficType.Control) {\n                    routerControlIpAddress = n.getIp4Address();\n                }\n            }\n\n            if (sendDnsDhcpData) {\n                DhcpEntryCommand dhcpCommand = new DhcpEntryCommand(nic.getMacAddress(), nic.getIp4Address(), profile.getVirtualMachine().getHostName());\n                dhcpCommand.setAccessDetail(NetworkElementCommand.ROUTER_IP, routerControlIpAddress);\n                dhcpCommand.setAccessDetail(NetworkElementCommand.ROUTER_GUEST_IP, router.getGuestIpAddress());\n                dhcpCommand.setAccessDetail(NetworkElementCommand.ROUTER_NAME, router.getInstanceName());\n                \n                dhcpCommand.setAccessDetail(NetworkElementCommand.ZONE_NETWORK_TYPE, dc.getNetworkType().toString());\n                \n                cmds.addCommand(\"dhcp\", dhcpCommand);\n            }\n\t\n            if (sendPasswordAndVmData) {\n                String password = (String) profile.getParameter(VirtualMachineProfile.Param.VmPassword);\n                String userData = profile.getVirtualMachine().getUserData();\n                String sshPublicKey = profile.getVirtualMachine().getDetail(\"SSH.PublicKey\");\n                \n                // password should be set only on default network element\n                if (password != null && network.isDefault()) {\n                    final String encodedPassword = PasswordGenerator.rot13(password);\n                    SavePasswordCommand cmd = new SavePasswordCommand(encodedPassword, nic.getIp4Address(), profile.getVirtualMachine().getHostName());\n                    cmd.setAccessDetail(NetworkElementCommand.ROUTER_IP, router.getPrivateIpAddress());\n                    cmd.setAccessDetail(NetworkElementCommand.ROUTER_GUEST_IP, router.getGuestIpAddress());\n                    cmd.setAccessDetail(NetworkElementCommand.ROUTER_NAME, router.getInstanceName());\n                    cmd.setAccessDetail(NetworkElementCommand.ZONE_NETWORK_TYPE, dc.getNetworkType().toString());\n                    \n                    cmds.addCommand(\"password\", cmd);\n                }\n\n                String serviceOffering = _serviceOfferingDao.findByIdIncludingRemoved(profile.getServiceOfferingId()).getDisplayText();\n                String zoneName = _dcDao.findById(network.getDataCenterId()).getName();\n\n                cmds.addCommand(\n                        \"vmdata\",\n                        generateVmDataCommand(router, nic.getIp4Address(), userData, serviceOffering, zoneName, nic.getIp4Address(), profile.getVirtualMachine().getHostName(), profile.getVirtualMachine()\n                                .getInstanceName(), profile.getId(), sshPublicKey));\n            }\n\n            if (cmds.size() > 0) {\n                try {\n                    _agentMgr.send(router.getHostId(), cmds);\n                } catch (OperationTimedoutException e) {\n                    throw new AgentUnavailableException(\"Unable to reach the agent \", router.getHostId(), e);\n                }\n\n                Answer answer = cmds.getAnswer(\"dhcp\");\n                if (!answer.getResult()) {\n                    s_logger.error(\"Unable to set dhcp entry for \" + profile + \" on domR: \" + router.getHostName() + \" due to \" + answer.getDetails());\n                    throw new ResourceUnavailableException(\"Unable to set dhcp entry for \" + profile + \" due to \" + answer.getDetails(), DataCenter.class, router.getDataCenterIdToDeployIn());\n                }\n\n                answer = cmds.getAnswer(\"password\");\n                if (answer != null && !answer.getResult()) {\n                    s_logger.error(\"Unable to set password for \" + profile + \" due to \" + answer.getDetails());\n                    throw new ResourceUnavailableException(\"Unable to set password due to \" + answer.getDetails(), DataCenter.class, router.getDataCenterIdToDeployIn());\n                }\n\n                answer = cmds.getAnswer(\"vmdata\");\n                if (answer != null && !answer.getResult()) {\n                    s_logger.error(\"Unable to set VM data for \" + profile + \" due to \" + answer.getDetails());\n                    throw new ResourceUnavailableException(\"Unable to set VM data due to \" + answer.getDetails(), DataCenter.class, router.getDataCenterIdToDeployIn());\n                }\n            }\n           \n            rets.add(router);\n        }\n        return rets;\n    }","commit_id":"978b2640e2789c40a27be61f96fc3708770a0a8e","url":"https://github.com/apache/cloudstack"},{"original_method":"@Override\n    public boolean configure(final String name, final Map<String, Object> params) throws ConfigurationException {\n        _name = name;\n\n        _executor = Executors.newScheduledThreadPool(1, new NamedThreadFactory(\"RouterMonitor\"));\n        _checkExecutor = Executors.newScheduledThreadPool(1, new NamedThreadFactory(\"RouterStatusMonitor\"));\n\n        final ComponentLocator locator = ComponentLocator.getCurrentLocator();\n\n        final Map<String, String> configs = _configDao.getConfiguration(\"AgentManager\", params);\n\n        _mgmt_host = configs.get(\"host\");\n        _routerRamSize = NumbersUtil.parseInt(configs.get(\"router.ram.size\"), DEFAULT_ROUTER_VM_RAMSIZE);\n        _routerCpuMHz = NumbersUtil.parseInt(configs.get(\"router.cpu.mhz\"), DEFAULT_ROUTER_CPU_MHZ);\n        String value = configs.get(\"start.retry\");\n        _retry = NumbersUtil.parseInt(value, 2);\n\n        value = configs.get(\"router.stats.interval\");\n        _routerStatsInterval = NumbersUtil.parseInt(value, 300);\n\n        _instance = configs.get(\"instance.name\");\n        if (_instance == null) {\n            _instance = \"DEFAULT\";\n        }\n\n        s_logger.info(\"Router configurations: \" + \"ramsize=\" + _routerRamSize);\n\n        final UserStatisticsDao statsDao = locator.getDao(UserStatisticsDao.class);\n        if (statsDao == null) {\n            throw new ConfigurationException(\"Unable to get \" + UserStatisticsDao.class.getName());\n        }\n\n        _agentMgr.registerForHostEvents(new SshKeysDistriMonitor(this, _hostDao, _configDao), true, false, false);\n        _itMgr.registerGuru(VirtualMachine.Type.DomainRouter, this);\n\n        boolean useLocalStorage = Boolean.parseBoolean(configs.get(Config.SystemVMUseLocalStorage.key()));\n        _offering = new ServiceOfferingVO(\"System Offering For Software Router\", 1, _routerRamSize, _routerCpuMHz, null, null, true, null, useLocalStorage, true, null, true, VirtualMachine.Type.DomainRouter, true);\n        _offering.setUniqueName(\"Cloud.Com-SoftwareRouter\");\n        _offering = _serviceOfferingDao.persistSystemServiceOffering(_offering);\n        \n        // this can sometimes happen, if DB is manually or programmatically manipulated\n        if(_offering == null) {\n        \tString msg = \"Data integrity problem : System Offering For Software router VM has been removed?\";\n        \ts_logger.error(msg);\n            throw new ConfigurationException(msg);\n        }\n\n        _systemAcct = _accountService.getSystemAccount();\n        \n        trafficSentinelHostname = configs.get(\"traffic.sentinel.hostname\");\n\n        s_logger.info(\"DomainRouterManager is configured.\");\n\n        return true;\n    }","id":16590,"modified_method":"@Override\n    public boolean configure(final String name, final Map<String, Object> params) throws ConfigurationException {\n        _name = name;\n\n        _executor = Executors.newScheduledThreadPool(1, new NamedThreadFactory(\"RouterMonitor\"));\n        _checkExecutor = Executors.newScheduledThreadPool(1, new NamedThreadFactory(\"RouterStatusMonitor\"));\n\n        final ComponentLocator locator = ComponentLocator.getCurrentLocator();\n\n        final Map<String, String> configs = _configDao.getConfiguration(\"AgentManager\", params);\n\n        _mgmt_host = configs.get(\"host\");\n        _routerRamSize = NumbersUtil.parseInt(configs.get(\"router.ram.size\"), DEFAULT_ROUTER_VM_RAMSIZE);\n        _routerCpuMHz = NumbersUtil.parseInt(configs.get(\"router.cpu.mhz\"), DEFAULT_ROUTER_CPU_MHZ);\n        String value = configs.get(\"start.retry\");\n        _retry = NumbersUtil.parseInt(value, 2);\n\n        value = configs.get(\"router.stats.interval\");\n        _routerStatsInterval = NumbersUtil.parseInt(value, 300);\n\n        _instance = configs.get(\"instance.name\");\n        if (_instance == null) {\n            _instance = \"DEFAULT\";\n        }\n        \n        _dnsBasicZoneUpdates = String.valueOf(_configDao.getValue(Config.DnsBasicZoneUpdates.key()));\n\n        s_logger.info(\"Router configurations: \" + \"ramsize=\" + _routerRamSize);\n\n        final UserStatisticsDao statsDao = locator.getDao(UserStatisticsDao.class);\n        if (statsDao == null) {\n            throw new ConfigurationException(\"Unable to get \" + UserStatisticsDao.class.getName());\n        }\n\n        _agentMgr.registerForHostEvents(new SshKeysDistriMonitor(this, _hostDao, _configDao), true, false, false);\n        _itMgr.registerGuru(VirtualMachine.Type.DomainRouter, this);\n\n        boolean useLocalStorage = Boolean.parseBoolean(configs.get(Config.SystemVMUseLocalStorage.key()));\n        _offering = new ServiceOfferingVO(\"System Offering For Software Router\", 1, _routerRamSize, _routerCpuMHz, null, null, true, null, useLocalStorage, true, null, true, VirtualMachine.Type.DomainRouter, true);\n        _offering.setUniqueName(\"Cloud.Com-SoftwareRouter\");\n        _offering = _serviceOfferingDao.persistSystemServiceOffering(_offering);\n        \n        // this can sometimes happen, if DB is manually or programmatically manipulated\n        if(_offering == null) {\n        \tString msg = \"Data integrity problem : System Offering For Software router VM has been removed?\";\n        \ts_logger.error(msg);\n            throw new ConfigurationException(msg);\n        }\n\n        _systemAcct = _accountService.getSystemAccount();\n        \n        trafficSentinelHostname = configs.get(\"traffic.sentinel.hostname\");\n\n        s_logger.info(\"DomainRouterManager is configured.\");\n\n        return true;\n    }","commit_id":"978b2640e2789c40a27be61f96fc3708770a0a8e","url":"https://github.com/apache/cloudstack"},{"original_method":"@DB\n    protected List<DomainRouterVO> findOrCreateVirtualRouter(Network guestNetwork, DataCenterDeployment plan, HypervisorType type, Account owner) throws ConcurrentOperationException, InsufficientCapacityException {\n        List<DomainRouterVO> routers = _routerDao.findByNetwork(guestNetwork.getId());\n        \n        boolean isRedundant = _configDao.getValue(\"network.redundantrouter\").equals(\"true\");\n        \n        int router_nr = 1;\n        if (isRedundant) {\n            router_nr = 2;\n        }\n        if (routers.size() == router_nr) {\n            return routers;\n        }\n\n        /* Before starting router, already know the hypervisor type */\n        VMTemplateVO template = _templateDao.findRoutingTemplate(type);\n        \n        List<NetworkOfferingVO> offerings = _networkMgr.getSystemAccountNetworkOfferings(NetworkOfferingVO.SystemControlNetwork);\n        NetworkOfferingVO controlOffering = offerings.get(0);\n        NetworkVO controlConfig = _networkMgr.setupNetwork(_systemAcct, controlOffering, plan, null, null, false, false).get(0);\n\n        NetworkOfferingVO publicOffering = _networkMgr.getSystemAccountNetworkOfferings(NetworkOfferingVO.SystemPublicNetwork).get(0);\n        List<NetworkVO> publicNetworks = _networkMgr.setupNetwork(_systemAcct, publicOffering, plan, null, null, false, false);\n        \n        Transaction txn = Transaction.currentTxn();\n        Network network = _networkDao.acquireInLockTable(guestNetwork.getId());\n        if (network == null) {\n            throw new ConcurrentOperationException(\"Unable to acquire lock on \" + guestNetwork.getId());\n        }\n        \n        try {\n            txn.start();\n            \n            routers = _routerDao.findByNetwork(guestNetwork.getId());\n            if (routers.size() == router_nr) {\n                return routers;\n            }\n            \n            int count = router_nr - routers.size();\n            PublicIp sourceNatIp = _networkMgr.assignSourceNatIpAddress(owner, guestNetwork, _accountService.getSystemUser().getId());\n    \n            NicProfile defaultNic = new NicProfile();\n            defaultNic.setDefaultNic(true);\n            defaultNic.setIp4Address(sourceNatIp.getAddress().addr());\n            defaultNic.setGateway(sourceNatIp.getGateway());\n            defaultNic.setNetmask(sourceNatIp.getNetmask());\n            defaultNic.setMacAddress(sourceNatIp.getMacAddress());\n            defaultNic.setBroadcastType(BroadcastDomainType.Vlan);\n            defaultNic.setBroadcastUri(BroadcastDomainType.Vlan.toUri(sourceNatIp.getVlanTag()));\n            defaultNic.setIsolationUri(IsolationType.Vlan.toUri(sourceNatIp.getVlanTag()));\n            defaultNic.setDeviceId(2);\n            \n            for (int i = 0; i < count; i++) {\n                DomainRouterVO router = null;\n                \n                List<Pair<NetworkVO, NicProfile>> networks = new ArrayList<Pair<NetworkVO, NicProfile>>(3);\n                networks.add(new Pair<NetworkVO, NicProfile>(publicNetworks.get(0), defaultNic));\n                \n                long id = _routerDao.getNextInSequence(Long.class, \"id\");\n                if (s_logger.isDebugEnabled()) {\n                    s_logger.debug(\"Creating the router \" + id);\n                }\n                NicProfile gatewayNic = new NicProfile();\n                /* For redundant router */                                                                          \n                if (isRedundant) {\n                    gatewayNic.setIp4Address(_networkMgr.acquireGuestIpAddress(guestNetwork, null));\n                    gatewayNic.setMacAddress(_networkMgr.getNextAvailableMacAddressInNetwork(guestNetwork.getId()));\n                } else {\n                    gatewayNic.setIp4Address(guestNetwork.getGateway());                                            \n                }\n                gatewayNic.setBroadcastUri(guestNetwork.getBroadcastUri());\n                gatewayNic.setBroadcastType(guestNetwork.getBroadcastDomainType());\n                gatewayNic.setIsolationUri(guestNetwork.getBroadcastUri());\n                gatewayNic.setMode(guestNetwork.getMode());\n\n                String gatewayCidr = guestNetwork.getCidr();\n                gatewayNic.setNetmask(NetUtils.getCidrNetmask(gatewayCidr));\n                networks.add(new Pair<NetworkVO, NicProfile>((NetworkVO) guestNetwork, gatewayNic));\n                networks.add(new Pair<NetworkVO, NicProfile>(controlConfig, null));\n\n                if (routers.size() > 2) {\n                    s_logger.error(\"Too much redundant router!\");\n                }\n                int priority = 0;\n                if (isRedundant) {\n                    priority = 100 - routers.size() * 20;\n                }\n                router = new DomainRouterVO(id, _offering.getId(), VirtualMachineName.getRouterName(id, _instance), template.getId(), template.getHypervisorType(), template.getGuestOSId(),\n                        owner.getDomainId(), owner.getId(), guestNetwork.getId(), isRedundant, priority, RedundantState.UNKNOWN, _offering.getOfferHA());\n                router = _itMgr.allocate(router, template, _offering, networks, plan, null, owner);\n                // Creating stats entry for router\n                UserStatisticsVO stats = _userStatsDao.findBy(owner.getId(), plan.getDataCenterId(), router.getNetworkId(), null, router.getId(), router.getType().toString());\n                if (stats == null) {\n                    if (s_logger.isDebugEnabled()) {\n                        s_logger.debug(\"Creating user statistics for the account: \" + owner.getId() + \" Router Id: \" + router.getId());\n                    }\n                    stats = new UserStatisticsVO(owner.getId(), plan.getDataCenterId(), null, router.getId(), router.getType().toString(), guestNetwork.getId());\n                    _userStatsDao.persist(stats);\n                }\n                routers.add(router);\n            }\n            txn.commit();\n        } finally {\n            if (network != null) {\n                _networkDao.releaseFromLockTable(network.getId());\n            }\n        }\n        return routers;\n    }","id":16591,"modified_method":"@DB\n    protected List<DomainRouterVO> findOrCreateVirtualRouters(Network guestNetwork, DeployDestination dest, Account owner, boolean isRedundant) throws ConcurrentOperationException, InsufficientCapacityException {\n        Transaction txn = Transaction.currentTxn();\n        txn.start();\n        \n        Network network = _networkDao.lockRow(guestNetwork.getId(), true);\n        if (network == null) {\n            throw new ConcurrentOperationException(\"Unable to lock network \" + guestNetwork.getId());\n        }\n        \n        long dcId = dest.getDataCenter().getId();\n        DataCenterDeployment plan = new DataCenterDeployment(dcId);\n\n        List<DomainRouterVO> routers = _routerDao.findByNetwork(guestNetwork.getId());\n        \n        int routerCount = 1;\n        if (isRedundant) {\n            routerCount = 2;\n        }\n        \n        if (routers.size() == routerCount) {\n            return routers;\n        }\n            \n        PublicIp sourceNatIp = _networkMgr.assignSourceNatIpAddress(owner, guestNetwork, _accountService.getSystemUser().getId());\n        NicProfile defaultNic = new NicProfile();\n        defaultNic.setDefaultNic(true);\n        defaultNic.setIp4Address(sourceNatIp.getAddress().addr());\n        defaultNic.setGateway(sourceNatIp.getGateway());\n        defaultNic.setNetmask(sourceNatIp.getNetmask());\n        defaultNic.setMacAddress(sourceNatIp.getMacAddress());\n        defaultNic.setBroadcastType(BroadcastDomainType.Vlan);\n        defaultNic.setBroadcastUri(BroadcastDomainType.Vlan.toUri(sourceNatIp.getVlanTag()));\n        defaultNic.setIsolationUri(IsolationType.Vlan.toUri(sourceNatIp.getVlanTag()));\n        defaultNic.setDeviceId(2);\n        int count = routerCount - routers.size();\n        \n        for (int i = 0; i < count; i++) {\n            long id = _routerDao.getNextInSequence(Long.class, \"id\");\n            if (s_logger.isDebugEnabled()) {\n                s_logger.debug(\"Creating the router \" + id);\n            }\n\n            DomainRouterVO router = null;\n\n            List<NetworkOfferingVO> offerings = _networkMgr.getSystemAccountNetworkOfferings(NetworkOfferingVO.SystemControlNetwork);\n            NetworkOfferingVO controlOffering = offerings.get(0);\n            NetworkVO controlConfig = _networkMgr.setupNetwork(_systemAcct, controlOffering, plan, null, null, false, false).get(0);\n\n            List<Pair<NetworkVO, NicProfile>> networks = new ArrayList<Pair<NetworkVO, NicProfile>>(3);\n            NetworkOfferingVO publicOffering = _networkMgr.getSystemAccountNetworkOfferings(NetworkOfferingVO.SystemPublicNetwork).get(0);\n            List<NetworkVO> publicNetworks = _networkMgr.setupNetwork(_systemAcct, publicOffering, plan, null, null, false, false);\n            networks.add(new Pair<NetworkVO, NicProfile>(publicNetworks.get(0), defaultNic));\n            NicProfile gatewayNic = new NicProfile();\n            if (isRedundant) {\n                gatewayNic.setIp4Address(_networkMgr.acquireGuestIpAddress(guestNetwork, null));\n                gatewayNic.setMacAddress(_networkMgr.getNextAvailableMacAddressInNetwork(guestNetwork.getId()));\n            } else {\n                gatewayNic.setIp4Address(guestNetwork.getGateway());\n            }\n            gatewayNic.setBroadcastUri(guestNetwork.getBroadcastUri());\n            gatewayNic.setBroadcastType(guestNetwork.getBroadcastDomainType());\n            gatewayNic.setIsolationUri(guestNetwork.getBroadcastUri());\n            gatewayNic.setMode(guestNetwork.getMode());\n            String gatewayCidr = guestNetwork.getCidr();\n            gatewayNic.setNetmask(NetUtils.getCidrNetmask(gatewayCidr));\n\n            networks.add(new Pair<NetworkVO, NicProfile>((NetworkVO) guestNetwork, gatewayNic));\n            networks.add(new Pair<NetworkVO, NicProfile>(controlConfig, null));\n\n            /* Before starting router, already know the hypervisor type */\n            VMTemplateVO template = _templateDao.findRoutingTemplate(dest.getCluster().getHypervisorType());\n            if (routers.size() >= 5) {\n                s_logger.error(\"Too much redundant routers!\");\n            }\n            int priority = 0;\n            if (isRedundant) {\n                priority = 100 - routers.size() * 20;\n            }\n            router = new DomainRouterVO(id, _offering.getId(), VirtualMachineName.getRouterName(id, _instance), template.getId(), template.getHypervisorType(), template.getGuestOSId(),\n                    owner.getDomainId(), owner.getId(), guestNetwork.getId(), isRedundant, priority, RedundantState.UNKNOWN, _offering.getOfferHA());\n            router = _itMgr.allocate(router, template, _offering, networks, plan, null, owner);\n            // Creating stats entry for router\n            UserStatisticsVO stats = _userStatsDao.findBy(owner.getId(), dcId, router.getNetworkId(), null, router.getId(), router.getType().toString());\n            if (stats == null) {\n                if (s_logger.isDebugEnabled()) {\n                    s_logger.debug(\"Creating user statistics for the account: \" + owner.getId() + \" Router Id: \" + router.getId());\n                }\n                stats = new UserStatisticsVO(owner.getId(), dcId, null, router.getId(), router.getType().toString(), guestNetwork.getId());\n                _userStatsDao.persist(stats);\n            }\n            routers.add(router);\n        }\n        \n        txn.commit();\n        return routers;\n    }","commit_id":"978b2640e2789c40a27be61f96fc3708770a0a8e","url":"https://github.com/apache/cloudstack"},{"original_method":"@Override\n    public boolean finalizeVirtualMachineProfile(VirtualMachineProfile<DomainRouterVO> profile, DeployDestination dest, ReservationContext context) {\n\n        DomainRouterVO router = profile.getVirtualMachine();\n        NetworkVO network = _networkDao.findById(router.getNetworkId());\n\n        String type = null;\n        String dhcpRange = null;\n\n        DataCenter dc = dest.getDataCenter();\n\n        if (dc.getNetworkType() == NetworkType.Advanced) {\n            String cidr = network.getCidr();\n            if (cidr != null) {\n                dhcpRange = NetUtils.getDhcpRange(cidr);\n            }\n        }\n\n        if (router.getRole() == Role.DHCP_USERDATA) {\n            type = \"dhcpsrvr\";\n        } else {\n            type = \"router\";\n        }\n\n        StringBuilder buf = profile.getBootArgsBuilder();\n        buf.append(\" template=domP type=\" + type);\n        buf.append(\" name=\").append(profile.getHostName());\n        \n        boolean isRedundant = _configDao.getValue(\"network.redundantrouter\").equals(\"true\");\n        if (isRedundant) {\n            buf.append(\" redundant_router=1\");\n        }\n        \n        NicProfile controlNic = null;\n        String defaultDns1 = null;\n        String defaultDns2 = null;\n\n        for (NicProfile nic : profile.getNics()) {\n            int deviceId = nic.getDeviceId();\n            buf.append(\" eth\").append(deviceId).append(\"ip=\").append(nic.getIp4Address());\n            buf.append(\" eth\").append(deviceId).append(\"mask=\").append(nic.getNetmask());\n            if (nic.isDefaultNic()) {\n                buf.append(\" gateway=\").append(nic.getGateway());\n                defaultDns1 = nic.getDns1();\n                defaultDns2 = nic.getDns2();\n\n                if (dc.getNetworkType() == NetworkType.Basic) {\n                    long cidrSize = NetUtils.getCidrSize(nic.getNetmask());\n                    String cidr = NetUtils.getCidrSubNet(nic.getGateway(), cidrSize);\n                    if (cidr != null) {\n                        dhcpRange = NetUtils.getIpRangeStartIpFromCidr(cidr, cidrSize);\n                    }\n                }\n            }\n            if (nic.getTrafficType() == TrafficType.Management) {\n                buf.append(\" localgw=\").append(dest.getPod().getGateway());\n            } else if (nic.getTrafficType() == TrafficType.Control) {\n\n                // DOMR control command is sent over management server in VMware\n                if (dest.getHost().getHypervisorType() == HypervisorType.VMware) {\n                    if (s_logger.isInfoEnabled()) {\n                        s_logger.info(\"Check if we need to add management server explicit route to DomR. pod cidr: \" + dest.getPod().getCidrAddress() + \"/\" + dest.getPod().getCidrSize()\n                                + \", pod gateway: \" + dest.getPod().getGateway() + \", management host: \" + _mgmt_host);\n                    }\n\n                    if (s_logger.isInfoEnabled()) {\n                        s_logger.info(\"Add management server explicit route to DomR.\");\n                    }\n\n                    // always add management explicit route, for basic networking setup, DomR may have two interfaces while both\n                    // are on the same subnet\n                    _mgmt_cidr = _configDao.getValue(Config.ManagementNetwork.key());\n                    if (NetUtils.isValidCIDR(_mgmt_cidr)) {\n                        buf.append(\" mgmtcidr=\").append(_mgmt_cidr);\n                        buf.append(\" localgw=\").append(dest.getPod().getGateway());\n                    }\n                    \n                    \n                    if (dc.getNetworkType() == NetworkType.Basic) {\n                    \t// ask domR to setup SSH on guest network\n                    \tbuf.append(\" sshonguest=true\");\n                    }\n                }\n\n                controlNic = nic;\n            } else if (nic.getTrafficType() == TrafficType.Guest && isRedundant) {\n                Network net = _networkMgr.getNetwork(nic.getNetworkId());\n                buf.append(\" guestgw=\").append(net.getGateway());\n                String brd = NetUtils.long2Ip(NetUtils.ip2Long(nic.getIp4Address()) | ~NetUtils.ip2Long(nic.getNetmask()));\n                buf.append(\" guestbrd=\").append(brd);\n                buf.append(\" guestcidrsize=\").append(NetUtils.getCidrSize(nic.getNetmask()));\n                buf.append(\" router_pr=\").append(router.getPriority());\n            }\n        }\n\n        if (dhcpRange != null) {\n            buf.append(\" dhcprange=\" + dhcpRange);\n        }\n        String domain = network.getNetworkDomain();\n        if (domain != null) {\n            buf.append(\" domain=\" + domain);\n        }\n\n        if (!network.isDefault() && network.getGuestType() == GuestIpType.Direct) {\n            buf.append(\" defaultroute=false\");\n\n            String virtualNetworkElementNicIP = _networkMgr.getIpOfNetworkElementInVirtualNetwork(network.getAccountId(), network.getDataCenterId());\n            if (!network.getIsShared() && virtualNetworkElementNicIP != null) {\n                defaultDns1 = virtualNetworkElementNicIP;\n            } else {\n                s_logger.debug(\"No Virtual network found for account id=\" + network.getAccountId() + \" so setting dns to the dns of the network id=\" + network.getId());\n            }\n        } else {\n            buf.append(\" defaultroute=true\");\n        }\n\n        buf.append(\" dns1=\").append(defaultDns1);\n        if (defaultDns2 != null) {\n            buf.append(\" dns2=\").append(defaultDns2);\n        }\n\n        if (s_logger.isDebugEnabled()) {\n            s_logger.debug(\"Boot Args for \" + profile + \": \" + buf.toString());\n        }\n\n        if (controlNic == null) {\n            throw new CloudRuntimeException(\"Didn't start a control port\");\n        }\n\n        return true;\n    }","id":16592,"modified_method":"@Override\n    public boolean finalizeVirtualMachineProfile(VirtualMachineProfile<DomainRouterVO> profile, DeployDestination dest, ReservationContext context) {\n\n        DomainRouterVO router = profile.getVirtualMachine();\n        NetworkVO network = _networkDao.findById(router.getNetworkId());\n\n        String type = null;\n        String dhcpRange = null;\n\n        DataCenter dc = dest.getDataCenter();\n\n        if (dc.getNetworkType() == NetworkType.Advanced) {\n            String cidr = network.getCidr();\n            if (cidr != null) {\n                dhcpRange = NetUtils.getDhcpRange(cidr);\n            }\n        }\n\n        if (router.getRole() == Role.DHCP_USERDATA) {\n            type = \"dhcpsrvr\";\n        } else {\n            type = \"router\";\n        }\n\n        StringBuilder buf = profile.getBootArgsBuilder();\n        buf.append(\" template=domP type=\" + type);\n        buf.append(\" name=\").append(profile.getHostName());\n\n        NetworkOffering offering = _networkOfferingDao.findById(network.getNetworkOfferingId());\n        if (false) {\n            buf.append(\" redundant_router=1\");\n        }\n        NicProfile controlNic = null;\n        String defaultDns1 = null;\n        String defaultDns2 = null;\n\n        for (NicProfile nic : profile.getNics()) {\n            int deviceId = nic.getDeviceId();\n            buf.append(\" eth\").append(deviceId).append(\"ip=\").append(nic.getIp4Address());\n            buf.append(\" eth\").append(deviceId).append(\"mask=\").append(nic.getNetmask());\n            if (nic.isDefaultNic()) {\n                buf.append(\" gateway=\").append(nic.getGateway());\n                defaultDns1 = nic.getDns1();\n                defaultDns2 = nic.getDns2();\n\n                if (dc.getNetworkType() == NetworkType.Basic) {\n                    long cidrSize = NetUtils.getCidrSize(nic.getNetmask());\n                    String cidr = NetUtils.getCidrSubNet(nic.getGateway(), cidrSize);\n                    if (cidr != null) {\n                        dhcpRange = NetUtils.getIpRangeStartIpFromCidr(cidr, cidrSize);\n                    }\n                }\n            }\n            if (nic.getTrafficType() == TrafficType.Management) {\n                buf.append(\" localgw=\").append(dest.getPod().getGateway());\n            } else if (nic.getTrafficType() == TrafficType.Control) {\n\n                // DOMR control command is sent over management server in VMware\n                if (dest.getHost().getHypervisorType() == HypervisorType.VMware) {\n                    if (s_logger.isInfoEnabled()) {\n                        s_logger.info(\"Check if we need to add management server explicit route to DomR. pod cidr: \" + dest.getPod().getCidrAddress() + \"/\" + dest.getPod().getCidrSize()\n                                + \", pod gateway: \" + dest.getPod().getGateway() + \", management host: \" + _mgmt_host);\n                    }\n\n                    if (s_logger.isInfoEnabled()) {\n                        s_logger.info(\"Add management server explicit route to DomR.\");\n                    }\n\n                    // always add management explicit route, for basic networking setup, DomR may have two interfaces while both\n                    // are on the same subnet\n                    _mgmt_cidr = _configDao.getValue(Config.ManagementNetwork.key());\n                    if (NetUtils.isValidCIDR(_mgmt_cidr)) {\n                        buf.append(\" mgmtcidr=\").append(_mgmt_cidr);\n                        buf.append(\" localgw=\").append(dest.getPod().getGateway());\n                    }\n                    \n                    \n                    if (dc.getNetworkType() == NetworkType.Basic) {\n                    \t// ask domR to setup SSH on guest network\n                    \tbuf.append(\" sshonguest=true\");\n                    }\n                }\n\n                controlNic = nic;\n            } else if (nic.getTrafficType() == TrafficType.Guest && false) {\n                Network net = _networkMgr.getNetwork(nic.getNetworkId());\n                buf.append(\" guestgw=\").append(net.getGateway());\n                String brd = NetUtils.long2Ip(NetUtils.ip2Long(nic.getIp4Address()) | ~NetUtils.ip2Long(nic.getNetmask()));\n                buf.append(\" guestbrd=\").append(brd);\n                buf.append(\" guestcidrsize=\").append(NetUtils.getCidrSize(nic.getNetmask()));\n                buf.append(\" router_pr=\").append(router.getPriority());\n            }\n        }\n\n        if (dhcpRange != null) {\n            buf.append(\" dhcprange=\" + dhcpRange);\n        }\n        String domain = network.getNetworkDomain();\n        if (domain != null) {\n            buf.append(\" domain=\" + domain);\n        }\n\n        if (!network.isDefault() && network.getGuestType() == GuestIpType.Direct) {\n            buf.append(\" defaultroute=false\");\n\n            String virtualNetworkElementNicIP = _networkMgr.getIpOfNetworkElementInVirtualNetwork(network.getAccountId(), network.getDataCenterId());\n            if (!network.getIsShared() && virtualNetworkElementNicIP != null) {\n                defaultDns1 = virtualNetworkElementNicIP;\n            } else {\n                s_logger.debug(\"No Virtual network found for account id=\" + network.getAccountId() + \" so setting dns to the dns of the network id=\" + network.getId());\n            }\n        } else {\n            buf.append(\" defaultroute=true\");\n        }\n\n        buf.append(\" dns1=\").append(defaultDns1);\n        if (defaultDns2 != null) {\n            buf.append(\" dns2=\").append(defaultDns2);\n        }\n\n        if (s_logger.isDebugEnabled()) {\n            s_logger.debug(\"Boot Args for \" + profile + \": \" + buf.toString());\n        }\n\n        if (controlNic == null) {\n            throw new CloudRuntimeException(\"Didn't start a control port\");\n        }\n\n        return true;\n    }","commit_id":"978b2640e2789c40a27be61f96fc3708770a0a8e","url":"https://github.com/apache/cloudstack"},{"original_method":"@Override\n    public boolean savePasswordToRouter(Network network, NicProfile nic, VirtualMachineProfile<UserVm> profile) throws ResourceUnavailableException {\n        List<DomainRouterVO> routers = _routerDao.findByNetwork(network.getId());\n        if (routers == null || routers.isEmpty()) {\n            s_logger.warn(\"Unable save password, router doesn't exist in network \" + network.getId());\n            throw new CloudRuntimeException(\"Unable to save password to router\");\n        }\n        \n        UserVm userVm = profile.getVirtualMachine();\n        String password = (String) profile.getParameter(Param.VmPassword);\n        String encodedPassword = PasswordGenerator.rot13(password);\n\n        boolean result = true;\n        for (DomainRouterVO router : routers) {\n            Commands cmds = new Commands(OnError.Continue);\n            SavePasswordCommand cmd = new SavePasswordCommand(encodedPassword, nic.getIp4Address(), userVm.getHostName());\n            cmd.setAccessDetail(NetworkElementCommand.ROUTER_IP, router.getPrivateIpAddress());\n            cmd.setAccessDetail(NetworkElementCommand.ROUTER_NAME, router.getInstanceName());\n            cmds.addCommand(\"password\", cmd);\n\n            result = result && sendCommandsToRouter(router, cmds);\n        }\n        return result;\n    }","id":16593,"modified_method":"@Override\n    public boolean savePasswordToRouter(Network network, NicProfile nic, VirtualMachineProfile<UserVm> profile) throws ResourceUnavailableException {\n        List<DomainRouterVO> routers = _routerDao.findByNetwork(network.getId());\n        if (routers == null || routers.isEmpty()) {\n            s_logger.warn(\"Unable save password, router doesn't exist in network \" + network.getId());\n            throw new CloudRuntimeException(\"Unable to save password to router\");\n        }\n        \n        UserVm userVm = profile.getVirtualMachine();\n        String password = (String) profile.getParameter(Param.VmPassword);\n        String encodedPassword = PasswordGenerator.rot13(password);\n\n        boolean result = true;\n        for (DomainRouterVO router : routers) {\n            Commands cmds = new Commands(OnError.Continue);\n            SavePasswordCommand cmd = new SavePasswordCommand(encodedPassword, nic.getIp4Address(), userVm.getHostName());\n            cmd.setAccessDetail(NetworkElementCommand.ROUTER_IP, router.getPrivateIpAddress());\n            cmd.setAccessDetail(NetworkElementCommand.ROUTER_NAME, router.getInstanceName());\n            DataCenterVO dcVo = _dcDao.findById(router.getDataCenterIdToDeployIn());\n            cmd.setAccessDetail(NetworkElementCommand.ZONE_NETWORK_TYPE, dcVo.getNetworkType().toString());\n            cmds.addCommand(\"password\", cmd);\n\n            result = result && sendCommandsToRouter(router, cmds);\n        }\n        return result;\n    }","commit_id":"978b2640e2789c40a27be61f96fc3708770a0a8e","url":"https://github.com/apache/cloudstack"},{"original_method":"@Override\n    public boolean associateIP(Network network, List<? extends PublicIpAddress> ipAddress) throws ResourceUnavailableException {\n        List<DomainRouterVO> routers = _routerDao.findByNetwork(network.getId());\n        if (routers != null && routers.isEmpty()) {\n            s_logger.warn(\"Unable to associate ip addresses, virtual router doesn't exist in the network \" + network.getId());\n            throw new ResourceUnavailableException(\"Unable to assign ip addresses\", DataCenter.class, network.getDataCenterId());\n        }\n\n        boolean result = true;\n        for (DomainRouterVO router : routers) {\n            if (router.getState() == State.Running) {\n                Commands cmds = new Commands(OnError.Continue);\n                // Have to resend all already associated ip addresses\n                createAssociateIPCommands(router, ipAddress, cmds, 0);\n\n                result = result && sendCommandsToRouter(router, cmds);\n            } else if (router.getState() != State.Stopped) {\n                s_logger.warn(\"Unable to associate ip addresses, virtual router is not in the right state \" + router.getState());\n                throw new ResourceUnavailableException(\"Unable to assign ip addresses, domR is not in right state \" + router.getState(), DataCenter.class, network.getDataCenterId());\n            }\n        }\n        return result;\n    }","id":16594,"modified_method":"@Override\n    public boolean associateIP(Network network, List<? extends PublicIpAddress> ipAddress) throws ResourceUnavailableException {\n        List<DomainRouterVO> routers = _routerDao.findByNetwork(network.getId());\n        if (routers == null || routers.isEmpty()) {\n            s_logger.warn(\"Unable to associate ip addresses, virtual router doesn't exist in the network \" + network.getId());\n            throw new ResourceUnavailableException(\"Unable to assign ip addresses\", DataCenter.class, network.getDataCenterId());\n        }\n\n        boolean result = true;\n        for (DomainRouterVO router : routers) {\n            if (router.getState() == State.Running) {\n                Commands cmds = new Commands(OnError.Continue);\n                // Have to resend all already associated ip addresses\n                createAssociateIPCommands(router, ipAddress, cmds, 0);\n\n                result = result && sendCommandsToRouter(router, cmds);\n            } else if (router.getState() != State.Stopped) {\n                s_logger.warn(\"Unable to associate ip addresses, virtual router is not in the right state \" + router.getState());\n                throw new ResourceUnavailableException(\"Unable to assign ip addresses, domR is not in right state \" + router.getState(), DataCenter.class, network.getDataCenterId());\n            }\n        }\n        return result;\n    }","commit_id":"978b2640e2789c40a27be61f96fc3708770a0a8e","url":"https://github.com/apache/cloudstack"},{"original_method":"@DB\n    protected List<DomainRouterVO> findOrCreateDhcpServer(Network guestNetwork, DeployDestination dest, Account owner) throws InsufficientCapacityException, ConcurrentOperationException {\n        DataCenterDeployment plan = null;\n\n        long dcId = dest.getDataCenter().getId();\n        \n        DataCenter dc = dest.getDataCenter();\n        DomainRouterVO router = null;\n        Long podId = dest.getPod().getId();\n\n        List<DomainRouterVO> routers = null;\n        // In Basic zone and Guest network we have to start domR per pod, not per network\n        if ((dc.getNetworkType() == NetworkType.Basic || guestNetwork.isSecurityGroupEnabled()) && guestNetwork.getTrafficType() == TrafficType.Guest) {\n            routers = _routerDao.findByNetworkAndPod(guestNetwork.getId(), podId);\n            plan = new DataCenterDeployment(dcId, podId, null, null, null);\n        } else {\n            routers = _routerDao.findByNetwork(guestNetwork.getId());\n            plan = new DataCenterDeployment(dcId);\n        }\n\n        if (routers != null && !routers.isEmpty()) {\n            return routers;\n        }\n        \n        long id = _routerDao.getNextInSequence(Long.class, \"id\");\n        if (s_logger.isDebugEnabled()) {\n            s_logger.debug(\"Creating the router \" + id);\n        }\n\n        List<NetworkOfferingVO> offerings = _networkMgr.getSystemAccountNetworkOfferings(NetworkOfferingVO.SystemControlNetwork);\n        NetworkOfferingVO controlOffering = offerings.get(0);\n        NetworkVO controlConfig = _networkMgr.setupNetwork(_systemAcct, controlOffering, plan, null, null, false, false).get(0);\n\n        List<Pair<NetworkVO, NicProfile>> networks = new ArrayList<Pair<NetworkVO, NicProfile>>(3);\n        NicProfile gatewayNic = new NicProfile();\n        gatewayNic.setDefaultNic(true);\n        networks.add(new Pair<NetworkVO, NicProfile>((NetworkVO) guestNetwork, gatewayNic));\n        networks.add(new Pair<NetworkVO, NicProfile>(controlConfig, null));\n\n        /* Before starting router, already know the hypervisor type */\n        VMTemplateVO template = _templateDao.findRoutingTemplate(dest.getCluster().getHypervisorType());\n\n        Transaction txn = Transaction.currentTxn();\n        Network network = _networkDao.acquireInLockTable(guestNetwork.getId());\n        if (network == null) {\n            throw new ConcurrentOperationException(\"Unable to acquire lock on \" + guestNetwork.getId());\n        }\n        \n        try {\n            txn.start();\n        \n            // In Basic zone and Guest network we have to start domR per pod, not per network\n            if ((dc.getNetworkType() == NetworkType.Basic || guestNetwork.isSecurityGroupEnabled()) && guestNetwork.getTrafficType() == TrafficType.Guest) {\n                routers = _routerDao.findByNetworkAndPod(guestNetwork.getId(), podId);\n                plan = new DataCenterDeployment(dcId, podId, null, null, null);\n            } else {\n                routers = _routerDao.findByNetwork(guestNetwork.getId());\n                plan = new DataCenterDeployment(dcId);\n            }\n    \n            if (routers != null && !routers.isEmpty()) {\n                return routers;\n            }\n            \n            router = new DomainRouterVO(id, _offering.getId(), VirtualMachineName.getRouterName(id, _instance), template.getId(), template.getHypervisorType(), template.getGuestOSId(),\n                    owner.getDomainId(), owner.getId(), guestNetwork.getId(), false, 0, RedundantState.UNKNOWN,_offering.getOfferHA());\n            router.setRole(Role.DHCP_USERDATA);\n            router = _itMgr.allocate(router, template, _offering, networks, plan, null, owner);\n            // Creating stats entry for router\n            UserStatisticsVO stats = _userStatsDao.findBy(owner.getId(), dcId, router.getNetworkId(), null, router.getId(), router.getType().toString());\n            if (stats == null) {\n                if (s_logger.isDebugEnabled()) {\n                    s_logger.debug(\"Creating user statistics for the account: \" + owner.getId() + \" Router Id: \" + router.getId());\n                }\n                stats = new UserStatisticsVO(owner.getId(), dcId, null, router.getId(), router.getType().toString(), guestNetwork.getId());\n                _userStatsDao.persist(stats);\n            }\n            txn.commit();\n        } finally {\n            if (network != null) {\n                _networkDao.releaseFromLockTable(network.getId());\n            }\n        }\n        routers = new ArrayList<DomainRouterVO>(1);\n        routers.add(router);\n        return routers;\n    }","id":16595,"modified_method":"@DB\n    List<DomainRouterVO> findOrCreateDhcpServers(Network guestNetwork, DeployDestination dest, Account owner) throws ConcurrentOperationException, InsufficientCapacityException {\n        Transaction txn = Transaction.currentTxn();\n        txn.start();\n        Network network = _networkDao.lockRow(guestNetwork.getId(), true);\n        if (network == null) {\n            throw new ConcurrentOperationException(\"Unable to lock network \" + guestNetwork.getId());\n        }\n        \n        DataCenterDeployment plan = null;\n        DataCenter dc = dest.getDataCenter();\n        long dcId = dc.getId();\n        boolean isPodBased = (dc.getNetworkType() == NetworkType.Basic || guestNetwork.isSecurityGroupEnabled()) && guestNetwork.getTrafficType() == TrafficType.Guest;\n        DomainRouterVO router = null;\n        \n        List<DomainRouterVO> routers = null;\n        Long podId = dest.getPod().getId();\n\n        // In Basic zone and Guest network we have to start domR per pod, not per network\n        if (isPodBased) {\n            routers = _routerDao.findByNetworkAndPod(guestNetwork.getId(), podId);\n            plan = new DataCenterDeployment(dcId, podId, null, null, null);\n        } else {\n            routers = _routerDao.findByNetwork(guestNetwork.getId());\n            plan = new DataCenterDeployment(dcId);\n        }\n\n        if (!routers.isEmpty()) {\n            //for Basic zone, add all Running routers - we have to send Dhcp/vmData/password info to them when network.dns.basiczone.updates is set to \"all\"\n            if (isPodBased) {\n                List<DomainRouterVO> allRunningRoutersOutsideThePod = _routerDao.findByNetworkOutsideThePod(guestNetwork.getId(), podId, State.Running);\n                routers.addAll(allRunningRoutersOutsideThePod);\n            }\n            return routers;\n        }\n\n        long id = _routerDao.getNextInSequence(Long.class, \"id\");\n        if (s_logger.isDebugEnabled()) {\n            s_logger.debug(\"Creating the dhcp server \" + id);\n        }\n\n        List<NetworkOfferingVO> offerings = _networkMgr.getSystemAccountNetworkOfferings(NetworkOfferingVO.SystemControlNetwork);\n        NetworkOfferingVO controlOffering = offerings.get(0);\n        NetworkVO controlConfig = _networkMgr.setupNetwork(_systemAcct, controlOffering, plan, null, null, false, false).get(0);\n\n        List<Pair<NetworkVO, NicProfile>> networks = new ArrayList<Pair<NetworkVO, NicProfile>>(3);\n        NicProfile gatewayNic = new NicProfile();\n        gatewayNic.setDefaultNic(true);\n        networks.add(new Pair<NetworkVO, NicProfile>((NetworkVO) guestNetwork, gatewayNic));\n        networks.add(new Pair<NetworkVO, NicProfile>(controlConfig, null));\n\n        /* Before starting router, already know the hypervisor type */\n        VMTemplateVO template = _templateDao.findRoutingTemplate(dest.getCluster().getHypervisorType());\n\n        router = new DomainRouterVO(id, _offering.getId(), VirtualMachineName.getRouterName(id, _instance), template.getId(), template.getHypervisorType(), template.getGuestOSId(),\n                owner.getDomainId(), owner.getId(), guestNetwork.getId(), false, 0, RedundantState.UNKNOWN, _offering.getOfferHA());\n        router.setRole(Role.DHCP_USERDATA);\n        router = _itMgr.allocate(router, template, _offering, networks, plan, null, owner);\n        routers.add(router);\n        \n        // Creating stats entry for router\n        UserStatisticsVO stats = _userStatsDao.findBy(owner.getId(), dcId, router.getNetworkId(), null, router.getId(), router.getType().toString());\n        if (stats == null) {\n            if (s_logger.isDebugEnabled()) {\n                s_logger.debug(\"Creating user statistics for the account: \" + owner.getId() + \" Router Id: \" + router.getId());\n            }\n            stats = new UserStatisticsVO(owner.getId(), dcId, null, router.getId(), router.getType().toString(), guestNetwork.getId());\n            _userStatsDao.persist(stats);\n        }\n        \n        txn.commit();\n        \n        return routers;\n    }","commit_id":"978b2640e2789c40a27be61f96fc3708770a0a8e","url":"https://github.com/apache/cloudstack"},{"original_method":"@Override\n    public boolean prepare(Network network, NicProfile nic, VirtualMachineProfile<? extends VirtualMachine> vm, DeployDestination dest, ReservationContext context) throws ConcurrentOperationException, InsufficientCapacityException, ResourceUnavailableException {\n        if (canHandle(network.getGuestType(), dest.getDataCenter())) {\n            if (vm.getType() != VirtualMachine.Type.User) {\n                return false;\n            }\n            \n            @SuppressWarnings(\"unchecked\")\n            VirtualMachineProfile<UserVm> uservm = (VirtualMachineProfile<UserVm>)vm;\n            \n            return _routerMgr.addVirtualMachineIntoNetwork(network, nic, uservm, dest, context, false) != null;\n        } else {\n            return false;\n        }\n    }","id":16596,"modified_method":"@Override\n    public boolean prepare(Network network, NicProfile nic, VirtualMachineProfile<? extends VirtualMachine> vm, DeployDestination dest, ReservationContext context) throws ConcurrentOperationException, InsufficientCapacityException, ResourceUnavailableException {\n        if (canHandle(network.getGuestType(), dest.getDataCenter())) {\n            if (vm.getType() != VirtualMachine.Type.User) {\n                return false;\n            }\n            \n            @SuppressWarnings(\"unchecked\")\n            VirtualMachineProfile<UserVm> uservm = (VirtualMachineProfile<UserVm>)vm;\n            List<DomainRouterVO> routers = _routerMgr.deployVirtualRouter(network, dest, uservm.getOwner(), uservm.getParameters(), false);\n            List<VirtualRouter> rets = _routerMgr.addVirtualMachineIntoNetwork(network, nic, uservm, dest, context, routers);                                                                                                                      \n            return (rets != null) && (!rets.isEmpty());\n        } else {\n            return false;\n        }\n    }","commit_id":"978b2640e2789c40a27be61f96fc3708770a0a8e","url":"https://github.com/apache/cloudstack"},{"original_method":"@Override\n    public boolean implement(Network guestConfig, NetworkOffering offering, DeployDestination dest, ReservationContext context) throws ResourceUnavailableException, ConcurrentOperationException, InsufficientCapacityException {\n        if (!canHandle(guestConfig.getGuestType(), dest.getDataCenter())) {\n            return false;\n        }\n        \n        Map<VirtualMachineProfile.Param, Object> params = new HashMap<VirtualMachineProfile.Param, Object>(1);\n        params.put(VirtualMachineProfile.Param.RestartNetwork, true);\n        _routerMgr.deployVirtualRouter(guestConfig, dest, context.getAccount(), params);\n        \n        return true;\n    }","id":16597,"modified_method":"@Override\n    public boolean implement(Network guestConfig, NetworkOffering offering, DeployDestination dest, ReservationContext context) throws ResourceUnavailableException, ConcurrentOperationException, InsufficientCapacityException {\n        if (!canHandle(guestConfig.getGuestType(), dest.getDataCenter())) {\n            return false;\n        }\n        \n        Map<VirtualMachineProfile.Param, Object> params = new HashMap<VirtualMachineProfile.Param, Object>(1);\n        params.put(VirtualMachineProfile.Param.RestartNetwork, true);\n        _routerMgr.deployVirtualRouter(guestConfig, dest, context.getAccount(), params, false);\n        \n        return true;\n    }","commit_id":"978b2640e2789c40a27be61f96fc3708770a0a8e","url":"https://github.com/apache/cloudstack"},{"original_method":"/**\n     * Initialization, only performed once\n     */\n    private void initOXF() {\n        try {\n            // Only log warnings and higher\n            Properties log4jProperties = new Properties();\n            log4jProperties.put(\"log4j.rootLogger\", \"WARN\");\n            PropertyConfigurator.configure(log4jProperties);\n\n            // Initialize the Resource Manager\n            Map props = new HashMap();\n            props.put(\"oxf.resources.factory\", \"org.orbeon.oxf.resources.ClassLoaderResourceManagerFactory\");\n            ResourceManagerWrapper.init(props);\n\n            // Initialize properties\n            OXFProperties.init(\"oxf:/config/properties.xml\");\n\n            // Create an initial pipeline context\n            PipelineContext pipelineContext = new PipelineContext();\n\n            // Register inital processors with the default XML Processor Registry\n            Processor processorsDefinition = PipelineUtils.createURLGenerator(\"oxf:/processors.xml\");\n            Processor registry = new XMLProcessorRegistry();\n            PipelineUtils.connect(processorsDefinition, \"data\", registry, \"config\");\n            pipelineContext.setAttribute(PipelineContext.JNDI_CONTEXT, new InitialContext());\n            registry.reset(pipelineContext);\n            registry.start(pipelineContext);\n\n            // Check license\n            //LicenseCheck.instance().start(pipelineContext);\n            //LicenseCheck.instance().checkLicense();\n\n            // Create processor service\n            processorService = new ProcessorService();\n            ProcessorDefinition processorDefinition = new ProcessorDefinition();\n            processorDefinition.setUri(\"oxf/processor/page-flow\");\n            processorDefinition.addInput(\"controller\", \"oxf:/config/page-flow.xml\");\n            processorService.init(processorDefinition);\n        } catch (NamingException e) {\n            throw new OXFException(e);\n        }\n    }","id":16598,"modified_method":"/**\n     * Initialization, only performed once\n     */\n    private void initOXF() {\n        try {\n            // Only log warnings and higher\n            Properties log4jProperties = new Properties();\n            log4jProperties.put(\"log4j.rootLogger\", \"WARN\");\n            PropertyConfigurator.configure(log4jProperties);\n\n            // Initialize the Resource Manager\n            Map props = new HashMap();\n            props.put(\"oxf.resources.factory\", \"org.orbeon.oxf.resources.ClassLoaderResourceManagerFactory\");\n            ResourceManagerWrapper.init(props);\n\n            // Initialize properties\n            OXFProperties.init(\"oxf:/config/properties.xml\");\n\n            // Create an initial pipeline context\n            PipelineContext pipelineContext = new PipelineContext();\n\n            // Register inital processors with the default XML Processor Registry\n            Processor processorsDefinition = PipelineUtils.createURLGenerator(\"oxf:/processors.xml\");\n            Processor registry = new XMLProcessorRegistry();\n            PipelineUtils.connect(processorsDefinition, \"data\", registry, \"config\");\n            pipelineContext.setAttribute(PipelineContext.JNDI_CONTEXT, new InitialContext());\n            registry.reset(pipelineContext);\n            registry.start(pipelineContext);\n\n            // Create processor service\n            processorService = new ProcessorService();\n            ProcessorDefinition processorDefinition = new ProcessorDefinition();\n            processorDefinition.setUri(\"oxf/processor/page-flow\");\n            processorDefinition.addInput(\"controller\", \"oxf:/config/page-flow.xml\");\n            processorService.init(processorDefinition, null);\n        } catch (NamingException e) {\n            throw new OXFException(e);\n        }\n    }","commit_id":"e6be08b8bdb9b840876e25b54dcaab3ad2234c7c","url":"https://github.com/orbeon/orbeon-forms"},{"original_method":"public void init() throws PortletException {\n        // NOTE: Here we assume that an Presentation Server WebAppContext context has already\n        // been initialized. This can be done by another Servlet or Filter. The only reason we\n        // cannot use the WebAppContext appears to be that it has to pass the ServletContext to\n        // the resource manager, which uses in turn to read resources from the Web app classloader.\n\n        // Create context initialization parameters Map\n        PortletContext portletContext = getPortletContext();\n        contextInitParameters = createServletInitParametersMap(portletContext);\n\n        // Try to obtain a local processor definition\n        ProcessorDefinition mainProcessorDefinition\n                = InitUtils.getDefinitionFromMap(new PortletInitMap(this), ProcessorService.MAIN_PROCESSOR_PROPERTY_PREFIX,\n                        ProcessorService.MAIN_PROCESSOR_INPUT_PROPERTY_PREFIX);\n        // Try to obtain a processor definition from the properties\n        if (mainProcessorDefinition == null)\n            mainProcessorDefinition = InitUtils.getDefinitionFromProperties(ProcessorService.MAIN_PROCESSOR_PROPERTY_PREFIX,\n                    ProcessorService.MAIN_PROCESSOR_INPUT_PROPERTY_PREFIX);\n        // Try to obtain a processor definition from the context\n        if (mainProcessorDefinition == null)\n            mainProcessorDefinition = InitUtils.getDefinitionFromMap(new PortletContextInitMap(portletContext), ProcessorService.MAIN_PROCESSOR_PROPERTY_PREFIX,\n                    ProcessorService.MAIN_PROCESSOR_INPUT_PROPERTY_PREFIX);\n\n        try {\n            // Create and initialize service\n            processorService = new ProcessorService();\n            processorService.init(mainProcessorDefinition);\n        } catch (Exception e) {\n            throw new PortletException(OXFException.getRootThrowable(e));\n        }\n    }","id":16599,"modified_method":"public void init() throws PortletException {\n        // NOTE: Here we assume that an Presentation Server WebAppContext context has already\n        // been initialized. This can be done by another Servlet or Filter. The only reason we\n        // cannot use the WebAppContext appears to be that it has to pass the ServletContext to\n        // the resource manager, which uses in turn to read resources from the Web app classloader.\n\n        // Create context initialization parameters Map\n        PortletContext portletContext = getPortletContext();\n        contextInitParameters = createServletInitParametersMap(portletContext);\n\n        // Get main processor definition\n        ProcessorDefinition mainProcessorDefinition;\n        {\n            // Try to obtain a local processor definition\n            mainProcessorDefinition\n                    = InitUtils.getDefinitionFromMap(new PortletInitMap(this), ProcessorService.MAIN_PROCESSOR_PROPERTY_PREFIX,\n                            ProcessorService.MAIN_PROCESSOR_INPUT_PROPERTY_PREFIX);\n            // Try to obtain a processor definition from the properties\n            if (mainProcessorDefinition == null)\n                mainProcessorDefinition = InitUtils.getDefinitionFromProperties(ProcessorService.MAIN_PROCESSOR_PROPERTY_PREFIX,\n                        ProcessorService.MAIN_PROCESSOR_INPUT_PROPERTY_PREFIX);\n            // Try to obtain a processor definition from the context\n            if (mainProcessorDefinition == null)\n                mainProcessorDefinition = InitUtils.getDefinitionFromMap(new PortletContextInitMap(portletContext), ProcessorService.MAIN_PROCESSOR_PROPERTY_PREFIX,\n                        ProcessorService.MAIN_PROCESSOR_INPUT_PROPERTY_PREFIX);\n        }\n        // Get error processor definition\n        ProcessorDefinition errorProcessorDefinition;\n        {\n            // Try to obtain a local processor definition\n            errorProcessorDefinition\n                    = InitUtils.getDefinitionFromMap(new PortletInitMap(this), ProcessorService.ERROR_PROCESSOR_PROPERTY_PREFIX,\n                            ProcessorService.ERROR_PROCESSOR_INPUT_PROPERTY_PREFIX);\n            // Try to obtain a processor definition from the properties\n            if (errorProcessorDefinition == null)\n                errorProcessorDefinition = InitUtils.getDefinitionFromProperties(ProcessorService.ERROR_PROCESSOR_PROPERTY_PREFIX,\n                        ProcessorService.ERROR_PROCESSOR_INPUT_PROPERTY_PREFIX);\n            // Try to obtain a processor definition from the context\n            if (errorProcessorDefinition == null)\n                errorProcessorDefinition = InitUtils.getDefinitionFromMap(new PortletContextInitMap(portletContext), ProcessorService.ERROR_PROCESSOR_PROPERTY_PREFIX,\n                        ProcessorService.ERROR_PROCESSOR_INPUT_PROPERTY_PREFIX);\n        }\n\n        try {\n            // Create and initialize service\n            processorService = new ProcessorService();\n            processorService.init(mainProcessorDefinition, errorProcessorDefinition);\n        } catch (Exception e) {\n            throw new PortletException(OXFException.getRootThrowable(e));\n        }\n    }","commit_id":"e6be08b8bdb9b840876e25b54dcaab3ad2234c7c","url":"https://github.com/orbeon/orbeon-forms"},{"original_method":"public void init() throws ServletException {\n        try {\n            // Make sure the Web app context is initialized\n            ServletContext servletContext = getServletContext();\n            webAppContext = WebAppContext.instance(servletContext);\n\n            // Try to obtain a local processor definition\n            ProcessorDefinition mainProcessorDefinition\n                = InitUtils.getDefinitionFromMap(new ServletInitMap( this ), ProcessorService.MAIN_PROCESSOR_PROPERTY_PREFIX,\n                        ProcessorService.MAIN_PROCESSOR_INPUT_PROPERTY_PREFIX);\n            // Try to obtain a processor definition from the properties\n            if (mainProcessorDefinition == null)\n                mainProcessorDefinition = InitUtils.getDefinitionFromProperties(ProcessorService.MAIN_PROCESSOR_PROPERTY_PREFIX,\n                    ProcessorService.MAIN_PROCESSOR_INPUT_PROPERTY_PREFIX);\n            // Try to obtain a processor definition from the context\n            if (mainProcessorDefinition == null)\n                mainProcessorDefinition = InitUtils.getDefinitionFromServletContext(servletContext, ProcessorService.MAIN_PROCESSOR_PROPERTY_PREFIX,\n                    ProcessorService.MAIN_PROCESSOR_INPUT_PROPERTY_PREFIX);\n\n            // Create and initialize service\n            processorService = new ProcessorService();\n            processorService.init(mainProcessorDefinition);\n        } catch (Exception e) {\n            throw new ServletException(OXFException.getRootThrowable(e));\n        }\n    }","id":16600,"modified_method":"public void init() throws ServletException {\n        try {\n            // Make sure the Web app context is initialized\n            ServletContext servletContext = getServletContext();\n            webAppContext = WebAppContext.instance(servletContext);\n\n            // Get main processor definition\n            ProcessorDefinition mainProcessorDefinition;\n            {\n                // Try to obtain a local processor definition\n                mainProcessorDefinition\n                    = InitUtils.getDefinitionFromMap(new ServletInitMap(this), ProcessorService.MAIN_PROCESSOR_PROPERTY_PREFIX,\n                            ProcessorService.MAIN_PROCESSOR_INPUT_PROPERTY_PREFIX);\n                // Try to obtain a processor definition from the properties\n                if (mainProcessorDefinition == null)\n                    mainProcessorDefinition = InitUtils.getDefinitionFromProperties(ProcessorService.MAIN_PROCESSOR_PROPERTY_PREFIX,\n                        ProcessorService.MAIN_PROCESSOR_INPUT_PROPERTY_PREFIX);\n                // Try to obtain a processor definition from the context\n                if (mainProcessorDefinition == null)\n                    mainProcessorDefinition = InitUtils.getDefinitionFromServletContext(servletContext, ProcessorService.MAIN_PROCESSOR_PROPERTY_PREFIX,\n                        ProcessorService.MAIN_PROCESSOR_INPUT_PROPERTY_PREFIX);\n            }\n            // Get error processor definition\n            ProcessorDefinition errorProcessorDefinition;\n            {\n                // Try to obtain a local processor definition\n                errorProcessorDefinition\n                        = InitUtils.getDefinitionFromMap(new ServletInitMap(this), ProcessorService.ERROR_PROCESSOR_PROPERTY_PREFIX,\n                                ProcessorService.ERROR_PROCESSOR_INPUT_PROPERTY_PREFIX);\n                // Try to obtain a processor definition from the properties\n                if (errorProcessorDefinition == null)\n                    errorProcessorDefinition = InitUtils.getDefinitionFromProperties(ProcessorService.ERROR_PROCESSOR_PROPERTY_PREFIX,\n                            ProcessorService.ERROR_PROCESSOR_INPUT_PROPERTY_PREFIX);\n                // Try to obtain a processor definition from the context\n                if (errorProcessorDefinition == null)\n                    errorProcessorDefinition = InitUtils.getDefinitionFromServletContext(servletContext, ProcessorService.ERROR_PROCESSOR_PROPERTY_PREFIX,\n                        ProcessorService.ERROR_PROCESSOR_INPUT_PROPERTY_PREFIX);\n            }\n\n            // Create and initialize service\n            processorService = new ProcessorService();\n            processorService.init(mainProcessorDefinition, errorProcessorDefinition);\n        } catch (Exception e) {\n            throw new ServletException(OXFException.getRootThrowable(e));\n        }\n    }","commit_id":"e6be08b8bdb9b840876e25b54dcaab3ad2234c7c","url":"https://github.com/orbeon/orbeon-forms"},{"original_method":"public void init(FilterConfig config) throws ServletException {\n\n        try {\n            // Make sure the Web app context is initialized\n            servletContext = config.getServletContext();\n            webAppContext = WebAppContext.instance(servletContext);\n\n            // Try to obtain a local processor definition\n            ProcessorDefinition mainProcessorDefinition\n                = InitUtils.getDefinitionFromMap(new ServletFilterInitMap(config), ProcessorService.MAIN_PROCESSOR_PROPERTY_PREFIX,\n                        ProcessorService.MAIN_PROCESSOR_INPUT_PROPERTY_PREFIX);\n            // Try to obtain a processor definition from the properties\n            if (mainProcessorDefinition == null)\n                mainProcessorDefinition = InitUtils.getDefinitionFromProperties(ProcessorService.MAIN_PROCESSOR_PROPERTY_PREFIX,\n                    ProcessorService.MAIN_PROCESSOR_INPUT_PROPERTY_PREFIX);\n            // Try to obtain a processor definition from the context\n            if (mainProcessorDefinition == null)\n                mainProcessorDefinition = InitUtils.getDefinitionFromServletContext(servletContext, ProcessorService.MAIN_PROCESSOR_PROPERTY_PREFIX,\n                    ProcessorService.MAIN_PROCESSOR_INPUT_PROPERTY_PREFIX);\n\n            // Create and initialize service\n            processorService = new ProcessorService();\n            processorService.init(mainProcessorDefinition);\n        } catch (Exception e) {\n            throw new ServletException(OXFException.getRootThrowable(e));\n        }\n    }","id":16601,"modified_method":"public void init(FilterConfig config) throws ServletException {\n\n        try {\n            // Make sure the Web app context is initialized\n            servletContext = config.getServletContext();\n            webAppContext = WebAppContext.instance(servletContext);\n\n            // Get main processor definition\n            ProcessorDefinition mainProcessorDefinition;\n            {\n                // Try to obtain a local processor definition\n                mainProcessorDefinition\n                    = InitUtils.getDefinitionFromMap(new ServletFilterInitMap(config), ProcessorService.MAIN_PROCESSOR_PROPERTY_PREFIX,\n                            ProcessorService.MAIN_PROCESSOR_INPUT_PROPERTY_PREFIX);\n                // Try to obtain a processor definition from the properties\n                if (mainProcessorDefinition == null)\n                    mainProcessorDefinition = InitUtils.getDefinitionFromProperties(ProcessorService.MAIN_PROCESSOR_PROPERTY_PREFIX,\n                        ProcessorService.MAIN_PROCESSOR_INPUT_PROPERTY_PREFIX);\n                // Try to obtain a processor definition from the context\n                if (mainProcessorDefinition == null)\n                    mainProcessorDefinition = InitUtils.getDefinitionFromServletContext(servletContext, ProcessorService.MAIN_PROCESSOR_PROPERTY_PREFIX,\n                        ProcessorService.MAIN_PROCESSOR_INPUT_PROPERTY_PREFIX);\n            }\n            // Get error processor definition\n            ProcessorDefinition errorProcessorDefinition;\n            {\n                // Try to obtain a local processor definition\n                errorProcessorDefinition\n                        = InitUtils.getDefinitionFromMap(new ServletFilterInitMap(config), ProcessorService.ERROR_PROCESSOR_PROPERTY_PREFIX,\n                                ProcessorService.ERROR_PROCESSOR_INPUT_PROPERTY_PREFIX);\n                // Try to obtain a processor definition from the properties\n                if (errorProcessorDefinition == null)\n                    errorProcessorDefinition = InitUtils.getDefinitionFromProperties(ProcessorService.ERROR_PROCESSOR_PROPERTY_PREFIX,\n                            ProcessorService.ERROR_PROCESSOR_INPUT_PROPERTY_PREFIX);\n                // Try to obtain a processor definition from the context\n                if (errorProcessorDefinition == null)\n                    errorProcessorDefinition = InitUtils.getDefinitionFromServletContext(servletContext, ProcessorService.ERROR_PROCESSOR_PROPERTY_PREFIX,\n                        ProcessorService.ERROR_PROCESSOR_INPUT_PROPERTY_PREFIX);\n            }\n\n            // Create and initialize service\n            processorService = new ProcessorService();\n            processorService.init(mainProcessorDefinition, errorProcessorDefinition);\n        } catch (Exception e) {\n            throw new ServletException(OXFException.getRootThrowable(e));\n        }\n    }","commit_id":"e6be08b8bdb9b840876e25b54dcaab3ad2234c7c","url":"https://github.com/orbeon/orbeon-forms"},{"original_method":"public void service(boolean addClient, ExternalContext externalContext, PipelineContext pipelineContext) {\n\n        // Handle license checking\n        ExternalContext.Request request = externalContext.getRequest();\n//        if (addClient && request != null)\n//            LicenseCheck.instance().addClient(request.getRemoteAddr());\n\n        // NOTE: Should this just be available from the ExternalContext?\n        pipelineContext.setAttribute(PipelineContext.JNDI_CONTEXT, jndiContext);\n\n        try {\n            // Run the processor\n            InitUtils.runProcessor(mainProcessor, externalContext, pipelineContext);\n        } catch (Exception e) {\n            // Something bad happened\n            LocationData locationData = ValidationException.getRootLocationData(e);\n            Throwable throwable = OXFException.getRootThrowable(e);\n            // Store the exception; needed if we are in a portlet\n            request.getAttributesMap().put(OXF_EXCEPTION, e);\n            // Try to start the error pipeline if the response has not been committed yet\n            try {\n                ExternalContext.Response response = externalContext.getResponse();\n                if (response != null) {\n                    if (!response.isCommitted()) {\n                        serviceError(externalContext, throwable, locationData);\n                    } else {\n                        serviceStaticError(externalContext, throwable, locationData);\n                    }\n                }\n            } catch (IOException ioe) {\n                throw new OXFException(ioe);\n            }\n        }\n    }","id":16602,"modified_method":"public void service(boolean addClient, ExternalContext externalContext, PipelineContext pipelineContext) {\n\n        // NOTE: Should this just be available from the ExternalContext?\n        pipelineContext.setAttribute(PipelineContext.JNDI_CONTEXT, jndiContext);\n\n        try {\n            // Run the processor\n            InitUtils.runProcessor(mainProcessor, externalContext, pipelineContext);\n        } catch (Exception e) {\n            // Something bad happened\n            LocationData locationData = ValidationException.getRootLocationData(e);\n            Throwable throwable = OXFException.getRootThrowable(e);\n            // Store the exception; needed if we are in a portlet\n            ExternalContext.Request request = externalContext.getRequest();\n            request.getAttributesMap().put(OXF_EXCEPTION, e);\n            // Try to start the error pipeline if the response has not been committed yet\n            try {\n                ExternalContext.Response response = externalContext.getResponse();\n                if (response != null) {\n                    if (!response.isCommitted()) {\n                        serviceError(externalContext, throwable, locationData);\n                    } else {\n                        serviceStaticError(externalContext, throwable, locationData);\n                    }\n                }\n            } catch (IOException ioe) {\n                throw new OXFException(ioe);\n            }\n        }\n    }","commit_id":"e6be08b8bdb9b840876e25b54dcaab3ad2234c7c","url":"https://github.com/orbeon/orbeon-forms"},{"original_method":"public synchronized void init(ProcessorDefinition mainProcessorDefinition) {\n        if (initialized) {\n            logger.debug(\"ProcessorService is already initialized. Skipping new initialization.\");\n            return;\n        }\n\n        try {\n            // Create initial context\n            jndiContext = new InitialContext();\n\n            // Create default definition if needed\n            if (mainProcessorDefinition == null) {\n                mainProcessorDefinition = new ProcessorDefinition();\n                mainProcessorDefinition.setUri(DEFAULT_PROCESSOR_URI);\n                mainProcessorDefinition.addInput(DEFAULT_PROCESSOR_INPUT_NAME, DEFAULT_PROCESSOR_INPUT_URL);\n            }\n\n            // Create and connect main processor\n            mainProcessor = InitUtils.createProcessor(mainProcessorDefinition);\n\n            // Create and connect error processor\n            // TODO: make this configurable like the main processor\n            try {\n                QName processorQName = OXFProperties.instance().getPropertySet().getQName(ERROR_PROCESSOR_URI_PROPERTY);\n                if (processorQName != null) {\n                    errorProcessor = ProcessorFactoryRegistry.lookup(processorQName).createInstance(new PipelineContext());\n\n                    // Add inputs\n                    for (Iterator i = OXFProperties.instance().keySet().iterator(); i.hasNext();) {\n                        String key = (String) i.next();\n                        if (key.startsWith(ERROR_PROCESSOR_INPUT_PROPERTY_PREFIX)) {\n                            // It's an input\n\n                            String inputName = key.substring(ERROR_PROCESSOR_INPUT_PROPERTY_PREFIX.length());\n                            String inputSrc = OXFProperties.instance().getPropertySet().getStringOrURIAsString(key);\n\n                            Processor urlGenerator = PipelineUtils.createURLGenerator(inputSrc);\n                            PipelineUtils.connect(urlGenerator, ProcessorImpl.OUTPUT_DATA, errorProcessor, inputName);\n                        }\n                    }\n                }\n            } catch (Exception e) {\n                logger.warn(\"Can't instanciate the error pipeline\", e);\n            }\n\n            initialized = true;\n        } catch (Exception e) {\n            throw new OXFException(e);\n        }\n    }","id":16603,"modified_method":"public synchronized void init(ProcessorDefinition mainProcessorDefinition, ProcessorDefinition errorProcessorDefinition) {\n        if (initialized) {\n            logger.debug(\"ProcessorService is already initialized. Skipping new initialization.\");\n            return;\n        }\n\n        try {\n            // Create initial context\n            jndiContext = new InitialContext();\n\n            // Create and connect main processor\n            mainProcessor = InitUtils.createProcessor(mainProcessorDefinition);\n\n            // Create and connect error processor if specified\n            if (errorProcessorDefinition != null)\n                errorProcessor = InitUtils.createProcessor(errorProcessorDefinition);\n\n            initialized = true;\n        } catch (Exception e) {\n            throw new OXFException(e);\n        }\n    }","commit_id":"e6be08b8bdb9b840876e25b54dcaab3ad2234c7c","url":"https://github.com/orbeon/orbeon-forms"},{"original_method":"public void applyRule(final SNode nodeToCheck, final TypeCheckingContext typeCheckingContext) {\n    {\n      final SNode type = typeCheckingContext.typeOf(SLinkOperations.getTarget(nodeToCheck, \"literal\", true), \"r:00000000-0000-4000-0000-011c89590452(jetbrains.mps.samples.matrixLanguage.typesystem)\", \"1210175481776\", true);\n      typeCheckingContext.whenConcrete(type, new Runnable() {\n\n        public void run() {\n          if (!(SNodeOperations.isInstanceOf(typeCheckingContext.getEquationManager().getRepresentator(type), \"jetbrains.mps.samples.matrixLanguage.structure.MatrixType\"))) {\n            {\n              BaseIntentionProvider intentionProvider = null;\n              typeCheckingContext.reportTypeError(nodeToCheck, \"Should be matrix but was \" + SPropertyOperations.getString(SNodeOperations.getConceptDeclaration(typeCheckingContext.getEquationManager().getRepresentator(type)), \"name\"), \"r:00000000-0000-4000-0000-011c89590452(jetbrains.mps.samples.matrixLanguage.typesystem)\", \"1210173696595\", intentionProvider);\n            }\n          }\n          SNode matrix = (SNode)typeCheckingContext.getEquationManager().getRepresentator(type);\n          {\n            SNode _nodeToCheck_1029348928467 = nodeToCheck;\n            BaseIntentionProvider intentionProvider = null;\n            typeCheckingContext.createEquation(typeCheckingContext.typeOf(nodeToCheck, \"r:00000000-0000-4000-0000-011c89590452(jetbrains.mps.samples.matrixLanguage.typesystem)\", \"1215405423730\", true), SLinkOperations.getTarget(matrix, \"scalarType\", true), _nodeToCheck_1029348928467, null, \"r:00000000-0000-4000-0000-011c89590452(jetbrains.mps.samples.matrixLanguage.typesystem)\", \"1215405423725\", intentionProvider);\n          }\n        }\n\n      }, \"r:00000000-0000-4000-0000-011c89590452(jetbrains.mps.samples.matrixLanguage.typesystem)\", \"1210172894554\");\n    }\n  }","id":16604,"modified_method":"public void applyRule(final SNode nodeToCheck, final TypeCheckingContext typeCheckingContext) {\n    final SNode T_typevar_1225547330471 = typeCheckingContext.createNewRuntimeTypesVariable();\n    {\n      SNode _nodeToCheck_1029348928467 = nodeToCheck;\n      BaseIntentionProvider intentionProvider = null;\n      typeCheckingContext.createEquation(typeCheckingContext.typeOf(SLinkOperations.getTarget(nodeToCheck, \"literal\", true), \"r:00000000-0000-4000-0000-011c89590452(jetbrains.mps.samples.matrixLanguage.typesystem)\", \"1225547290624\", true), new _Quotations.QuotationClass_2().createNode(typeCheckingContext.getEquationManager().getRepresentator(T_typevar_1225547330471), typeCheckingContext), _nodeToCheck_1029348928467, null, \"r:00000000-0000-4000-0000-011c89590452(jetbrains.mps.samples.matrixLanguage.typesystem)\", \"1225547308673\", intentionProvider);\n    }\n    {\n      SNode _nodeToCheck_1029348928467 = nodeToCheck;\n      BaseIntentionProvider intentionProvider = null;\n      typeCheckingContext.createEquation(typeCheckingContext.typeOf(nodeToCheck, \"r:00000000-0000-4000-0000-011c89590452(jetbrains.mps.samples.matrixLanguage.typesystem)\", \"1225547343050\", true), typeCheckingContext.getEquationManager().getRepresentator(T_typevar_1225547330471), _nodeToCheck_1029348928467, null, \"r:00000000-0000-4000-0000-011c89590452(jetbrains.mps.samples.matrixLanguage.typesystem)\", \"1225547352826\", intentionProvider);\n    }\n  }","commit_id":"57481458fecbec158393c4762becf7041e0cfc9f","url":"https://github.com/JetBrains/MPS"},{"original_method":"public void applyRule(final SNode nodeToCheck, final TypeCheckingContext typeCheckingContext) {\n    {\n      final SNode matrix = typeCheckingContext.typeOf(SLinkOperations.getTarget(nodeToCheck, \"matrix\", true), \"r:00000000-0000-4000-0000-011c89590452(jetbrains.mps.samples.matrixLanguage.typesystem)\", \"1210240202730\", true);\n      typeCheckingContext.whenConcrete(matrix, new Runnable() {\n\n        public void run() {\n          if (!(SNodeOperations.isInstanceOf(typeCheckingContext.getEquationManager().getRepresentator(matrix), \"jetbrains.mps.samples.matrixLanguage.structure.MatrixType\"))) {\n            {\n              BaseIntentionProvider intentionProvider = null;\n              typeCheckingContext.reportTypeError(nodeToCheck, \"Should be matrix, but \" + SNodeOperations.getConceptDeclaration(typeCheckingContext.getEquationManager().getRepresentator(matrix)), \"r:00000000-0000-4000-0000-011c89590452(jetbrains.mps.samples.matrixLanguage.typesystem)\", \"1210240609365\", intentionProvider);\n            }\n          }\n          SNode t = ((SNode)typeCheckingContext.getEquationManager().getRepresentator(matrix));\n          {\n            SNode _nodeToCheck_1029348928467 = nodeToCheck;\n            BaseIntentionProvider intentionProvider = null;\n            typeCheckingContext.createEquation(typeCheckingContext.typeOf(SLinkOperations.getTarget(nodeToCheck, \"element\", true), \"r:00000000-0000-4000-0000-011c89590452(jetbrains.mps.samples.matrixLanguage.typesystem)\", \"1210241241539\", true), SLinkOperations.getTarget(t, \"scalarType\", true), _nodeToCheck_1029348928467, null, \"r:00000000-0000-4000-0000-011c89590452(jetbrains.mps.samples.matrixLanguage.typesystem)\", \"1210241241537\", intentionProvider);\n          }\n        }\n\n      }, \"r:00000000-0000-4000-0000-011c89590452(jetbrains.mps.samples.matrixLanguage.typesystem)\", \"1210240199916\");\n    }\n  }","id":16605,"modified_method":"public void applyRule(final SNode nodeToCheck, final TypeCheckingContext typeCheckingContext) {\n    final SNode T_typevar_1225547192044 = typeCheckingContext.createNewRuntimeTypesVariable();\n    {\n      SNode _nodeToCheck_1029348928467 = nodeToCheck;\n      BaseIntentionProvider intentionProvider = null;\n      typeCheckingContext.createEquation(typeCheckingContext.typeOf(SLinkOperations.getTarget(nodeToCheck, \"matrix\", true), \"r:00000000-0000-4000-0000-011c89590452(jetbrains.mps.samples.matrixLanguage.typesystem)\", \"1225547112334\", true), new _Quotations.QuotationClass_12().createNode(typeCheckingContext.getEquationManager().getRepresentator(T_typevar_1225547192044), typeCheckingContext), _nodeToCheck_1029348928467, null, \"r:00000000-0000-4000-0000-011c89590452(jetbrains.mps.samples.matrixLanguage.typesystem)\", \"1225547123338\", intentionProvider);\n    }\n    {\n      SNode _nodeToCheck_1029348928467 = nodeToCheck;\n      BaseIntentionProvider intentionProvider = null;\n      typeCheckingContext.createEquation(typeCheckingContext.typeOf(SLinkOperations.getTarget(nodeToCheck, \"element\", true), \"r:00000000-0000-4000-0000-011c89590452(jetbrains.mps.samples.matrixLanguage.typesystem)\", \"1225547230060\", true), typeCheckingContext.getEquationManager().getRepresentator(T_typevar_1225547192044), _nodeToCheck_1029348928467, null, \"r:00000000-0000-4000-0000-011c89590452(jetbrains.mps.samples.matrixLanguage.typesystem)\", \"1225547241737\", intentionProvider);\n    }\n  }","commit_id":"57481458fecbec158393c4762becf7041e0cfc9f","url":"https://github.com/JetBrains/MPS"},{"original_method":"public void applyRule(final SNode nodeToCheck, final TypeCheckingContext typeCheckingContext) {\n    final SNode v_typevar_1215411668136 = typeCheckingContext.createNewRuntimeTypesVariable();\n    {\n      final SNode left = SLinkOperations.getTarget(nodeToCheck, \"leftExpression\", true);\n      typeCheckingContext.whenConcrete(left, new Runnable() {\n\n        public void run() {\n          {\n            final SNode right = SLinkOperations.getTarget(nodeToCheck, \"rightExpression\", true);\n            typeCheckingContext.whenConcrete(right, new Runnable() {\n\n              public void run() {\n                {\n                  SNode _nodeToCheck_1029348928467 = nodeToCheck;\n                  BaseIntentionProvider intentionProvider = null;\n                  typeCheckingContext.createEquation(typeCheckingContext.typeOf(nodeToCheck, \"r:00000000-0000-4000-0000-011c89590452(jetbrains.mps.samples.matrixLanguage.typesystem)\", \"1215411640551\", true), typeCheckingContext.getEquationManager().getRepresentator(v_typevar_1215411668136), _nodeToCheck_1029348928467, null, \"r:00000000-0000-4000-0000-011c89590452(jetbrains.mps.samples.matrixLanguage.typesystem)\", \"1215411640547\", intentionProvider);\n                }\n                {\n                  SNode _nodeToCheck_1029348928467 = nodeToCheck;\n                  BaseIntentionProvider intentionProvider = null;\n                  typeCheckingContext.createEquation(typeCheckingContext.typeOf(typeCheckingContext.getEquationManager().getRepresentator(left), \"r:00000000-0000-4000-0000-011c89590452(jetbrains.mps.samples.matrixLanguage.typesystem)\", \"1215411640557\", true), typeCheckingContext.getEquationManager().getRepresentator(v_typevar_1215411668136), _nodeToCheck_1029348928467, null, \"r:00000000-0000-4000-0000-011c89590452(jetbrains.mps.samples.matrixLanguage.typesystem)\", \"1215411640553\", intentionProvider);\n                }\n                {\n                  SNode _nodeToCheck_1029348928467 = nodeToCheck;\n                  BaseIntentionProvider intentionProvider = null;\n                  typeCheckingContext.createEquation(typeCheckingContext.typeOf(typeCheckingContext.getEquationManager().getRepresentator(right), \"r:00000000-0000-4000-0000-011c89590452(jetbrains.mps.samples.matrixLanguage.typesystem)\", \"1215411640565\", true), typeCheckingContext.getEquationManager().getRepresentator(v_typevar_1215411668136), _nodeToCheck_1029348928467, null, \"r:00000000-0000-4000-0000-011c89590452(jetbrains.mps.samples.matrixLanguage.typesystem)\", \"1215411640561\", intentionProvider);\n                }\n              }\n\n            }, \"r:00000000-0000-4000-0000-011c89590452(jetbrains.mps.samples.matrixLanguage.typesystem)\", \"1215411596973\");\n          }\n        }\n\n      }, \"r:00000000-0000-4000-0000-011c89590452(jetbrains.mps.samples.matrixLanguage.typesystem)\", \"1215411450860\");\n    }\n    {\n      final SNode type = typeCheckingContext.getEquationManager().getRepresentator(v_typevar_1215411668136);\n      typeCheckingContext.whenConcrete(type, new Runnable() {\n\n        public void run() {\n          if (!(SNodeOperations.isInstanceOf(typeCheckingContext.getEquationManager().getRepresentator(type), \"jetbrains.mps.samples.matrixLanguage.structure.MatrixType\"))) {\n            {\n              BaseIntentionProvider intentionProvider = null;\n              typeCheckingContext.reportTypeError(nodeToCheck, \"Should be matrix, but \" + SNodeOperations.getConceptDeclaration(typeCheckingContext.getEquationManager().getRepresentator(v_typevar_1215411668136)), \"r:00000000-0000-4000-0000-011c89590452(jetbrains.mps.samples.matrixLanguage.typesystem)\", \"1210175079706\", intentionProvider);\n            }\n          }\n        }\n\n      }, \"r:00000000-0000-4000-0000-011c89590452(jetbrains.mps.samples.matrixLanguage.typesystem)\", \"1210175079702\");\n    }\n  }","id":16606,"modified_method":"public void applyRule(final SNode nodeToCheck, final TypeCheckingContext typeCheckingContext) {\n    final SNode V_typevar_1215411668136 = typeCheckingContext.createNewRuntimeTypesVariable();\n    final SNode Elem_typevar_1225547607537 = typeCheckingContext.createNewRuntimeTypesVariable();\n    {\n      SNode _nodeToCheck_1029348928467 = nodeToCheck;\n      BaseIntentionProvider intentionProvider = null;\n      typeCheckingContext.createEquation(new _Quotations.QuotationClass_9().createNode(typeCheckingContext.getEquationManager().getRepresentator(Elem_typevar_1225547607537), typeCheckingContext), typeCheckingContext.getEquationManager().getRepresentator(V_typevar_1215411668136), _nodeToCheck_1029348928467, null, \"r:00000000-0000-4000-0000-011c89590452(jetbrains.mps.samples.matrixLanguage.typesystem)\", \"1225547927667\", intentionProvider);\n    }\n    {\n      SNode _nodeToCheck_1029348928467 = nodeToCheck;\n      BaseIntentionProvider intentionProvider = null;\n      typeCheckingContext.createEquation(typeCheckingContext.typeOf(nodeToCheck, \"r:00000000-0000-4000-0000-011c89590452(jetbrains.mps.samples.matrixLanguage.typesystem)\", \"1215411640551\", true), typeCheckingContext.getEquationManager().getRepresentator(V_typevar_1215411668136), _nodeToCheck_1029348928467, null, \"r:00000000-0000-4000-0000-011c89590452(jetbrains.mps.samples.matrixLanguage.typesystem)\", \"1215411640547\", intentionProvider);\n    }\n    {\n      SNode _nodeToCheck_1029348928467 = nodeToCheck;\n      BaseIntentionProvider intentionProvider = null;\n      typeCheckingContext.createEquation(typeCheckingContext.typeOf(SLinkOperations.getTarget(nodeToCheck, \"leftExpression\", true), \"r:00000000-0000-4000-0000-011c89590452(jetbrains.mps.samples.matrixLanguage.typesystem)\", \"1215411640557\", true), typeCheckingContext.getEquationManager().getRepresentator(V_typevar_1215411668136), _nodeToCheck_1029348928467, null, \"r:00000000-0000-4000-0000-011c89590452(jetbrains.mps.samples.matrixLanguage.typesystem)\", \"1215411640553\", intentionProvider);\n    }\n    {\n      SNode _nodeToCheck_1029348928467 = nodeToCheck;\n      BaseIntentionProvider intentionProvider = null;\n      typeCheckingContext.createEquation(typeCheckingContext.typeOf(SLinkOperations.getTarget(nodeToCheck, \"rightExpression\", true), \"r:00000000-0000-4000-0000-011c89590452(jetbrains.mps.samples.matrixLanguage.typesystem)\", \"1215411640565\", true), typeCheckingContext.getEquationManager().getRepresentator(V_typevar_1215411668136), _nodeToCheck_1029348928467, null, \"r:00000000-0000-4000-0000-011c89590452(jetbrains.mps.samples.matrixLanguage.typesystem)\", \"1215411640561\", intentionProvider);\n    }\n  }","commit_id":"57481458fecbec158393c4762becf7041e0cfc9f","url":"https://github.com/JetBrains/MPS"},{"original_method":"public void applyRule(final SNode nodeToCheck, final TypeCheckingContext typeCheckingContext) {\n    final SNode v_typevar_1210172745581 = typeCheckingContext.createNewRuntimeTypesVariable();\n    {\n      SNode _nodeToCheck_1029348928467 = nodeToCheck;\n      BaseIntentionProvider intentionProvider = null;\n      typeCheckingContext.createEquation(typeCheckingContext.typeOf(nodeToCheck, \"r:00000000-0000-4000-0000-011c89590452(jetbrains.mps.samples.matrixLanguage.typesystem)\", \"1210172745586\", true), typeCheckingContext.getEquationManager().getRepresentator(v_typevar_1210172745581), _nodeToCheck_1029348928467, null, \"r:00000000-0000-4000-0000-011c89590452(jetbrains.mps.samples.matrixLanguage.typesystem)\", \"1210172745582\", intentionProvider);\n    }\n    {\n      SNode _nodeToCheck_1029348928467 = nodeToCheck;\n      BaseIntentionProvider intentionProvider = null;\n      typeCheckingContext.createEquation(typeCheckingContext.typeOf(SLinkOperations.getTarget(nodeToCheck, \"leftExpression\", true), \"r:00000000-0000-4000-0000-011c89590452(jetbrains.mps.samples.matrixLanguage.typesystem)\", \"1210172745592\", true), typeCheckingContext.getEquationManager().getRepresentator(v_typevar_1210172745581), _nodeToCheck_1029348928467, null, \"r:00000000-0000-4000-0000-011c89590452(jetbrains.mps.samples.matrixLanguage.typesystem)\", \"1210172745588\", intentionProvider);\n    }\n    {\n      SNode _nodeToCheck_1029348928467 = nodeToCheck;\n      BaseIntentionProvider intentionProvider = null;\n      typeCheckingContext.createLessThanInequation(typeCheckingContext.typeOf(SLinkOperations.getTarget(nodeToCheck, \"rightExpression\", true), \"r:00000000-0000-4000-0000-011c89590452(jetbrains.mps.samples.matrixLanguage.typesystem)\", \"1210152315158\", true), new _Quotations.QuotationClass_8().createNode(typeCheckingContext), _nodeToCheck_1029348928467, null, \"r:00000000-0000-4000-0000-011c89590452(jetbrains.mps.samples.matrixLanguage.typesystem)\", \"1210152315156\", false, 0, intentionProvider);\n    }\n  }","id":16607,"modified_method":"public void applyRule(final SNode nodeToCheck, final TypeCheckingContext typeCheckingContext) {\n    final SNode v_typevar_1210172745581 = typeCheckingContext.createNewRuntimeTypesVariable();\n    {\n      SNode _nodeToCheck_1029348928467 = nodeToCheck;\n      BaseIntentionProvider intentionProvider = null;\n      typeCheckingContext.createEquation(typeCheckingContext.typeOf(nodeToCheck, \"r:00000000-0000-4000-0000-011c89590452(jetbrains.mps.samples.matrixLanguage.typesystem)\", \"1210172745586\", true), typeCheckingContext.getEquationManager().getRepresentator(v_typevar_1210172745581), _nodeToCheck_1029348928467, null, \"r:00000000-0000-4000-0000-011c89590452(jetbrains.mps.samples.matrixLanguage.typesystem)\", \"1210172745582\", intentionProvider);\n    }\n    {\n      SNode _nodeToCheck_1029348928467 = nodeToCheck;\n      BaseIntentionProvider intentionProvider = null;\n      typeCheckingContext.createEquation(typeCheckingContext.typeOf(SLinkOperations.getTarget(nodeToCheck, \"leftExpression\", true), \"r:00000000-0000-4000-0000-011c89590452(jetbrains.mps.samples.matrixLanguage.typesystem)\", \"1210172745592\", true), typeCheckingContext.getEquationManager().getRepresentator(v_typevar_1210172745581), _nodeToCheck_1029348928467, null, \"r:00000000-0000-4000-0000-011c89590452(jetbrains.mps.samples.matrixLanguage.typesystem)\", \"1210172745588\", intentionProvider);\n    }\n    {\n      SNode _nodeToCheck_1029348928467 = nodeToCheck;\n      BaseIntentionProvider intentionProvider = null;\n      typeCheckingContext.createLessThanInequation(typeCheckingContext.typeOf(SLinkOperations.getTarget(nodeToCheck, \"rightExpression\", true), \"r:00000000-0000-4000-0000-011c89590452(jetbrains.mps.samples.matrixLanguage.typesystem)\", \"1210152315158\", true), new _Quotations.QuotationClass_10().createNode(typeCheckingContext), _nodeToCheck_1029348928467, null, \"r:00000000-0000-4000-0000-011c89590452(jetbrains.mps.samples.matrixLanguage.typesystem)\", \"1210152315156\", false, 0, intentionProvider);\n    }\n  }","commit_id":"57481458fecbec158393c4762becf7041e0cfc9f","url":"https://github.com/JetBrains/MPS"},{"original_method":"public void applyRule(final SNode nodeToCheck, final TypeCheckingContext typeCheckingContext) {\n    {\n      SNode _nodeToCheck_1029348928467 = nodeToCheck;\n      BaseIntentionProvider intentionProvider = null;\n      typeCheckingContext.createEquation(typeCheckingContext.typeOf(nodeToCheck, \"r:00000000-0000-4000-0000-011c89590452(jetbrains.mps.samples.matrixLanguage.typesystem)\", \"1210248715900\", true), new _Quotations.QuotationClass_10().createNode(typeCheckingContext), _nodeToCheck_1029348928467, null, \"r:00000000-0000-4000-0000-011c89590452(jetbrains.mps.samples.matrixLanguage.typesystem)\", \"1210248722055\", intentionProvider);\n    }\n  }","id":16608,"modified_method":"public void applyRule(final SNode nodeToCheck, final TypeCheckingContext typeCheckingContext) {\n    {\n      SNode _nodeToCheck_1029348928467 = nodeToCheck;\n      BaseIntentionProvider intentionProvider = null;\n      typeCheckingContext.createEquation(typeCheckingContext.typeOf(nodeToCheck, \"r:00000000-0000-4000-0000-011c89590452(jetbrains.mps.samples.matrixLanguage.typesystem)\", \"1210248715900\", true), new _Quotations.QuotationClass_13().createNode(typeCheckingContext), _nodeToCheck_1029348928467, null, \"r:00000000-0000-4000-0000-011c89590452(jetbrains.mps.samples.matrixLanguage.typesystem)\", \"1210248722055\", intentionProvider);\n    }\n  }","commit_id":"57481458fecbec158393c4762becf7041e0cfc9f","url":"https://github.com/JetBrains/MPS"},{"original_method":"public void applyRule(final SNode nodeToCheck, final TypeCheckingContext typeCheckingContext) {\n    {\n      final SNode left = typeCheckingContext.typeOf(SLinkOperations.getTarget(nodeToCheck, \"leftExpression\", true), \"r:00000000-0000-4000-0000-011c89590452(jetbrains.mps.samples.matrixLanguage.typesystem)\", \"1210005562793\", true);\n      typeCheckingContext.whenConcrete(left, new Runnable() {\n\n        public void run() {\n          {\n            final SNode right = typeCheckingContext.typeOf(SLinkOperations.getTarget(nodeToCheck, \"rightExpression\", true), \"r:00000000-0000-4000-0000-011c89590452(jetbrains.mps.samples.matrixLanguage.typesystem)\", \"1210005567145\", true);\n            typeCheckingContext.whenConcrete(right, new Runnable() {\n\n              public void run() {\n                boolean done = false;\n                if (TypeChecker.getInstance().getSubtypingManager().isSubtype(typeCheckingContext.getEquationManager().getRepresentator(left), new _Quotations.QuotationClass_5().createNode(typeCheckingContext))) {\n                  {\n                    IMatchingPattern pattern_0 = HUtil.createMatchingPatternByConceptFQName(\"jetbrains.mps.samples.matrixLanguage.structure.MatrixType\");\n                    SNode coercedNode_0 = TypeChecker.getInstance().getRuntimeSupport().coerce_(typeCheckingContext.getEquationManager().getRepresentator(right), pattern_0, typeCheckingContext);\n                    if (coercedNode_0 != null) {\n                      {\n                        SNode _nodeToCheck_1029348928467 = nodeToCheck;\n                        BaseIntentionProvider intentionProvider = null;\n                        typeCheckingContext.createEquation(typeCheckingContext.typeOf(nodeToCheck, \"r:00000000-0000-4000-0000-011c89590452(jetbrains.mps.samples.matrixLanguage.typesystem)\", \"1210171765363\", true), new _Quotations.QuotationClass_4().createNode(SLinkOperations.getTarget(coercedNode_0, \"scalarType\", true), typeCheckingContext), _nodeToCheck_1029348928467, null, \"r:00000000-0000-4000-0000-011c89590452(jetbrains.mps.samples.matrixLanguage.typesystem)\", \"1210171765353\", intentionProvider);\n                      }\n                      done = true;\n                    }\n                  }\n                  if (!(done)) {\n                    {\n                      BaseIntentionProvider intentionProvider = null;\n                      typeCheckingContext.reportTypeError(SLinkOperations.getTarget(nodeToCheck, \"rightExpression\", true), \"Type must be Matrix but \" + SNodeOperations.getConceptDeclaration(typeCheckingContext.getEquationManager().getRepresentator(right)), \"r:00000000-0000-4000-0000-011c89590452(jetbrains.mps.samples.matrixLanguage.typesystem)\", \"1210175930104\", intentionProvider);\n                    }\n                  }\n                } else\n                if (TypeChecker.getInstance().getSubtypingManager().isSubtype(typeCheckingContext.getEquationManager().getRepresentator(right), new _Quotations.QuotationClass_7().createNode(typeCheckingContext))) {\n                  {\n                    IMatchingPattern pattern_1 = HUtil.createMatchingPatternByConceptFQName(\"jetbrains.mps.samples.matrixLanguage.structure.MatrixType\");\n                    SNode coercedNode_1 = TypeChecker.getInstance().getRuntimeSupport().coerce_(typeCheckingContext.getEquationManager().getRepresentator(left), pattern_1, typeCheckingContext);\n                    if (coercedNode_1 != null) {\n                      {\n                        SNode _nodeToCheck_1029348928467 = nodeToCheck;\n                        BaseIntentionProvider intentionProvider = null;\n                        typeCheckingContext.createEquation(typeCheckingContext.typeOf(nodeToCheck, \"r:00000000-0000-4000-0000-011c89590452(jetbrains.mps.samples.matrixLanguage.typesystem)\", \"1210174269273\", true), new _Quotations.QuotationClass_6().createNode(SLinkOperations.getTarget(coercedNode_1, \"scalarType\", true), typeCheckingContext), _nodeToCheck_1029348928467, null, \"r:00000000-0000-4000-0000-011c89590452(jetbrains.mps.samples.matrixLanguage.typesystem)\", \"1210174269263\", intentionProvider);\n                      }\n                      done = true;\n                    }\n                  }\n                  if (!(done)) {\n                    {\n                      BaseIntentionProvider intentionProvider = null;\n                      typeCheckingContext.reportTypeError(SLinkOperations.getTarget(nodeToCheck, \"leftExpression\", true), \"Type must be Matrix but \" + SNodeOperations.getConceptDeclaration(typeCheckingContext.getEquationManager().getRepresentator(left)), \"r:00000000-0000-4000-0000-011c89590452(jetbrains.mps.samples.matrixLanguage.typesystem)\", \"1210176257229\", intentionProvider);\n                    }\n                  }\n                } else\n                {\n                  final SNode v_typevar_1210174591724 = typeCheckingContext.createNewRuntimeTypesVariable();\n                  {\n                    SNode _nodeToCheck_1029348928467 = nodeToCheck;\n                    BaseIntentionProvider intentionProvider = null;\n                    typeCheckingContext.createEquation(typeCheckingContext.typeOf(nodeToCheck, \"r:00000000-0000-4000-0000-011c89590452(jetbrains.mps.samples.matrixLanguage.typesystem)\", \"1210174591729\", true), typeCheckingContext.getEquationManager().getRepresentator(v_typevar_1210174591724), _nodeToCheck_1029348928467, null, \"r:00000000-0000-4000-0000-011c89590452(jetbrains.mps.samples.matrixLanguage.typesystem)\", \"1210174591725\", intentionProvider);\n                  }\n                  {\n                    SNode _nodeToCheck_1029348928467 = nodeToCheck;\n                    BaseIntentionProvider intentionProvider = null;\n                    typeCheckingContext.createEquation(typeCheckingContext.typeOf(SLinkOperations.getTarget(nodeToCheck, \"leftExpression\", true), \"r:00000000-0000-4000-0000-011c89590452(jetbrains.mps.samples.matrixLanguage.typesystem)\", \"1210174591735\", true), typeCheckingContext.getEquationManager().getRepresentator(v_typevar_1210174591724), _nodeToCheck_1029348928467, null, \"r:00000000-0000-4000-0000-011c89590452(jetbrains.mps.samples.matrixLanguage.typesystem)\", \"1210174591731\", intentionProvider);\n                  }\n                  {\n                    SNode _nodeToCheck_1029348928467 = nodeToCheck;\n                    BaseIntentionProvider intentionProvider = null;\n                    typeCheckingContext.createEquation(typeCheckingContext.typeOf(SLinkOperations.getTarget(nodeToCheck, \"rightExpression\", true), \"r:00000000-0000-4000-0000-011c89590452(jetbrains.mps.samples.matrixLanguage.typesystem)\", \"1210174591743\", true), typeCheckingContext.getEquationManager().getRepresentator(v_typevar_1210174591724), _nodeToCheck_1029348928467, null, \"r:00000000-0000-4000-0000-011c89590452(jetbrains.mps.samples.matrixLanguage.typesystem)\", \"1210174591739\", intentionProvider);\n                  }\n                  done = true;\n                }\n              }\n\n            }, \"r:00000000-0000-4000-0000-011c89590452(jetbrains.mps.samples.matrixLanguage.typesystem)\", \"1210004912543\");\n          }\n        }\n\n      }, \"r:00000000-0000-4000-0000-011c89590452(jetbrains.mps.samples.matrixLanguage.typesystem)\", \"1210004689795\");\n    }\n  }","id":16609,"modified_method":"public void applyRule(final SNode nodeToCheck, final TypeCheckingContext typeCheckingContext) {\n    {\n      final SNode left = typeCheckingContext.typeOf(SLinkOperations.getTarget(nodeToCheck, \"leftExpression\", true), \"r:00000000-0000-4000-0000-011c89590452(jetbrains.mps.samples.matrixLanguage.typesystem)\", \"1210005562793\", true);\n      typeCheckingContext.whenConcrete(left, new Runnable() {\n\n        public void run() {\n          {\n            final SNode right = typeCheckingContext.typeOf(SLinkOperations.getTarget(nodeToCheck, \"rightExpression\", true), \"r:00000000-0000-4000-0000-011c89590452(jetbrains.mps.samples.matrixLanguage.typesystem)\", \"1210005567145\", true);\n            typeCheckingContext.whenConcrete(right, new Runnable() {\n\n              public void run() {\n                boolean done = false;\n                if (TypeChecker.getInstance().getSubtypingManager().isSubtype(typeCheckingContext.getEquationManager().getRepresentator(left), new _Quotations.QuotationClass_6().createNode(typeCheckingContext))) {\n                  {\n                    IMatchingPattern pattern_0 = HUtil.createMatchingPatternByConceptFQName(\"jetbrains.mps.samples.matrixLanguage.structure.MatrixType\");\n                    SNode coercedNode_0 = TypeChecker.getInstance().getRuntimeSupport().coerce_(typeCheckingContext.getEquationManager().getRepresentator(right), pattern_0, typeCheckingContext);\n                    if (coercedNode_0 != null) {\n                      {\n                        SNode _nodeToCheck_1029348928467 = nodeToCheck;\n                        BaseIntentionProvider intentionProvider = null;\n                        typeCheckingContext.createEquation(typeCheckingContext.typeOf(nodeToCheck, \"r:00000000-0000-4000-0000-011c89590452(jetbrains.mps.samples.matrixLanguage.typesystem)\", \"1210171765363\", true), new _Quotations.QuotationClass_5().createNode(SLinkOperations.getTarget(coercedNode_0, \"scalarType\", true), typeCheckingContext), _nodeToCheck_1029348928467, null, \"r:00000000-0000-4000-0000-011c89590452(jetbrains.mps.samples.matrixLanguage.typesystem)\", \"1210171765353\", intentionProvider);\n                      }\n                      done = true;\n                    }\n                  }\n                  if (!(done)) {\n                    {\n                      BaseIntentionProvider intentionProvider = null;\n                      typeCheckingContext.reportTypeError(SLinkOperations.getTarget(nodeToCheck, \"rightExpression\", true), \"Type must be Matrix but \" + SNodeOperations.getConceptDeclaration(typeCheckingContext.getEquationManager().getRepresentator(right)), \"r:00000000-0000-4000-0000-011c89590452(jetbrains.mps.samples.matrixLanguage.typesystem)\", \"1210175930104\", intentionProvider);\n                    }\n                  }\n                } else\n                if (TypeChecker.getInstance().getSubtypingManager().isSubtype(typeCheckingContext.getEquationManager().getRepresentator(right), new _Quotations.QuotationClass_8().createNode(typeCheckingContext))) {\n                  {\n                    IMatchingPattern pattern_1 = HUtil.createMatchingPatternByConceptFQName(\"jetbrains.mps.samples.matrixLanguage.structure.MatrixType\");\n                    SNode coercedNode_1 = TypeChecker.getInstance().getRuntimeSupport().coerce_(typeCheckingContext.getEquationManager().getRepresentator(left), pattern_1, typeCheckingContext);\n                    if (coercedNode_1 != null) {\n                      {\n                        SNode _nodeToCheck_1029348928467 = nodeToCheck;\n                        BaseIntentionProvider intentionProvider = null;\n                        typeCheckingContext.createEquation(typeCheckingContext.typeOf(nodeToCheck, \"r:00000000-0000-4000-0000-011c89590452(jetbrains.mps.samples.matrixLanguage.typesystem)\", \"1210174269273\", true), new _Quotations.QuotationClass_7().createNode(SLinkOperations.getTarget(coercedNode_1, \"scalarType\", true), typeCheckingContext), _nodeToCheck_1029348928467, null, \"r:00000000-0000-4000-0000-011c89590452(jetbrains.mps.samples.matrixLanguage.typesystem)\", \"1210174269263\", intentionProvider);\n                      }\n                      done = true;\n                    }\n                  }\n                  if (!(done)) {\n                    {\n                      BaseIntentionProvider intentionProvider = null;\n                      typeCheckingContext.reportTypeError(SLinkOperations.getTarget(nodeToCheck, \"leftExpression\", true), \"Type must be Matrix but \" + SNodeOperations.getConceptDeclaration(typeCheckingContext.getEquationManager().getRepresentator(left)), \"r:00000000-0000-4000-0000-011c89590452(jetbrains.mps.samples.matrixLanguage.typesystem)\", \"1210176257229\", intentionProvider);\n                    }\n                  }\n                } else\n                {\n                  final SNode v_typevar_1210174591724 = typeCheckingContext.createNewRuntimeTypesVariable();\n                  {\n                    SNode _nodeToCheck_1029348928467 = nodeToCheck;\n                    BaseIntentionProvider intentionProvider = null;\n                    typeCheckingContext.createEquation(typeCheckingContext.typeOf(nodeToCheck, \"r:00000000-0000-4000-0000-011c89590452(jetbrains.mps.samples.matrixLanguage.typesystem)\", \"1210174591729\", true), typeCheckingContext.getEquationManager().getRepresentator(v_typevar_1210174591724), _nodeToCheck_1029348928467, null, \"r:00000000-0000-4000-0000-011c89590452(jetbrains.mps.samples.matrixLanguage.typesystem)\", \"1210174591725\", intentionProvider);\n                  }\n                  {\n                    SNode _nodeToCheck_1029348928467 = nodeToCheck;\n                    BaseIntentionProvider intentionProvider = null;\n                    typeCheckingContext.createEquation(typeCheckingContext.typeOf(SLinkOperations.getTarget(nodeToCheck, \"leftExpression\", true), \"r:00000000-0000-4000-0000-011c89590452(jetbrains.mps.samples.matrixLanguage.typesystem)\", \"1210174591735\", true), typeCheckingContext.getEquationManager().getRepresentator(v_typevar_1210174591724), _nodeToCheck_1029348928467, null, \"r:00000000-0000-4000-0000-011c89590452(jetbrains.mps.samples.matrixLanguage.typesystem)\", \"1210174591731\", intentionProvider);\n                  }\n                  {\n                    SNode _nodeToCheck_1029348928467 = nodeToCheck;\n                    BaseIntentionProvider intentionProvider = null;\n                    typeCheckingContext.createEquation(typeCheckingContext.typeOf(SLinkOperations.getTarget(nodeToCheck, \"rightExpression\", true), \"r:00000000-0000-4000-0000-011c89590452(jetbrains.mps.samples.matrixLanguage.typesystem)\", \"1210174591743\", true), typeCheckingContext.getEquationManager().getRepresentator(v_typevar_1210174591724), _nodeToCheck_1029348928467, null, \"r:00000000-0000-4000-0000-011c89590452(jetbrains.mps.samples.matrixLanguage.typesystem)\", \"1210174591739\", intentionProvider);\n                  }\n                  done = true;\n                }\n              }\n\n            }, \"r:00000000-0000-4000-0000-011c89590452(jetbrains.mps.samples.matrixLanguage.typesystem)\", \"1210004912543\");\n          }\n        }\n\n      }, \"r:00000000-0000-4000-0000-011c89590452(jetbrains.mps.samples.matrixLanguage.typesystem)\", \"1210004689795\");\n    }\n  }","commit_id":"57481458fecbec158393c4762becf7041e0cfc9f","url":"https://github.com/JetBrains/MPS"},{"original_method":"public void applyRule(final SNode nodeToCheck, final TypeCheckingContext typeCheckingContext) {\n    {\n      SNode _nodeToCheck_1029348928467 = nodeToCheck;\n      BaseIntentionProvider intentionProvider = null;\n      typeCheckingContext.createLessThanInequation(SLinkOperations.getTarget(nodeToCheck, \"scalarType\", true), SLinkOperations.getTarget(new _Quotations.QuotationClass_9().createNode(typeCheckingContext), \"descriptor\", false), _nodeToCheck_1029348928467, null, \"r:00000000-0000-4000-0000-011c89590452(jetbrains.mps.samples.matrixLanguage.typesystem)\", \"1210166478532\", false, 0, intentionProvider);\n    }\n  }","id":16610,"modified_method":"public void applyRule(final SNode nodeToCheck, final TypeCheckingContext typeCheckingContext) {\n    {\n      SNode _nodeToCheck_1029348928467 = nodeToCheck;\n      BaseIntentionProvider intentionProvider = null;\n      typeCheckingContext.createLessThanInequation(SLinkOperations.getTarget(nodeToCheck, \"scalarType\", true), SLinkOperations.getTarget(new _Quotations.QuotationClass_11().createNode(typeCheckingContext), \"descriptor\", false), _nodeToCheck_1029348928467, null, \"r:00000000-0000-4000-0000-011c89590452(jetbrains.mps.samples.matrixLanguage.typesystem)\", \"1210166478532\", false, 0, intentionProvider);\n    }\n  }","commit_id":"57481458fecbec158393c4762becf7041e0cfc9f","url":"https://github.com/JetBrains/MPS"},{"original_method":"public void applyRule(final SNode nodeToCheck, final TypeCheckingContext typeCheckingContext) {\n    {\n      SNode _nodeToCheck_1029348928467 = nodeToCheck;\n      BaseIntentionProvider intentionProvider = null;\n      typeCheckingContext.createEquation(typeCheckingContext.typeOf(nodeToCheck, \"r:00000000-0000-4000-0000-011c89590452(jetbrains.mps.samples.matrixLanguage.typesystem)\", \"1210002063731\", true), new _Quotations.QuotationClass_2().createNode(typeCheckingContext), _nodeToCheck_1029348928467, null, \"r:00000000-0000-4000-0000-011c89590452(jetbrains.mps.samples.matrixLanguage.typesystem)\", \"1210002075604\", intentionProvider);\n    }\n    {\n      SNode _nodeToCheck_1029348928467 = nodeToCheck;\n      BaseIntentionProvider intentionProvider = null;\n      typeCheckingContext.createEquation(typeCheckingContext.typeOf(SLinkOperations.getTarget(nodeToCheck, \"matrix\", true), \"r:00000000-0000-4000-0000-011c89590452(jetbrains.mps.samples.matrixLanguage.typesystem)\", \"1210003493660\", true), new _Quotations.QuotationClass_3().createNode(typeCheckingContext), _nodeToCheck_1029348928467, null, \"r:00000000-0000-4000-0000-011c89590452(jetbrains.mps.samples.matrixLanguage.typesystem)\", \"1210003510632\", intentionProvider);\n    }\n  }","id":16611,"modified_method":"public void applyRule(final SNode nodeToCheck, final TypeCheckingContext typeCheckingContext) {\n    {\n      SNode _nodeToCheck_1029348928467 = nodeToCheck;\n      BaseIntentionProvider intentionProvider = null;\n      typeCheckingContext.createEquation(typeCheckingContext.typeOf(nodeToCheck, \"r:00000000-0000-4000-0000-011c89590452(jetbrains.mps.samples.matrixLanguage.typesystem)\", \"1210002063731\", true), new _Quotations.QuotationClass_3().createNode(typeCheckingContext), _nodeToCheck_1029348928467, null, \"r:00000000-0000-4000-0000-011c89590452(jetbrains.mps.samples.matrixLanguage.typesystem)\", \"1210002075604\", intentionProvider);\n    }\n    {\n      SNode _nodeToCheck_1029348928467 = nodeToCheck;\n      BaseIntentionProvider intentionProvider = null;\n      typeCheckingContext.createEquation(typeCheckingContext.typeOf(SLinkOperations.getTarget(nodeToCheck, \"matrix\", true), \"r:00000000-0000-4000-0000-011c89590452(jetbrains.mps.samples.matrixLanguage.typesystem)\", \"1210003493660\", true), new _Quotations.QuotationClass_4().createNode(typeCheckingContext), _nodeToCheck_1029348928467, null, \"r:00000000-0000-4000-0000-011c89590452(jetbrains.mps.samples.matrixLanguage.typesystem)\", \"1210003510632\", intentionProvider);\n    }\n  }","commit_id":"57481458fecbec158393c4762becf7041e0cfc9f","url":"https://github.com/JetBrains/MPS"},{"original_method":"public static List<SNode> getInterfaces() {\n    if (ourInterfaces == null) {\n      ourInterfaces = SModelOperations.getNodes(SNodeOperations.getModel(SLinkOperations.getTarget(new _Quotations.QuotationClass_2().createNode(), \"classifier\", false)), \"jetbrains.mps.baseLanguage.structure.Interface\");\n      ClassLoaderManager.getInstance().addReloadHandler(new ReloadAdapter() {\n\n        public void onReload() {\n          RulesUtil_Closures.ourInterfaces = null;\n          ClassLoaderManager.getInstance().removeReloadHandler(this);\n        }\n\n      });\n    }\n    return ourInterfaces;\n  }","id":16612,"modified_method":"public static List<SNode> getInterfaces() {\n    if (ourInterfaces == null) {\n      ourInterfaces = SModelOperations.getNodes(SNodeOperations.getModel(SLinkOperations.getTarget(new _Quotations.QuotationClass_4().createNode(), \"classifier\", false)), \"jetbrains.mps.baseLanguage.structure.Interface\");\n      ClassLoaderManager.getInstance().addReloadHandler(new ReloadAdapter() {\n\n        public void onReload() {\n          RulesUtil_Closures.ourInterfaces = null;\n          ClassLoaderManager.getInstance().removeReloadHandler(this);\n        }\n\n      });\n    }\n    return ourInterfaces;\n  }","commit_id":"3b87fa97e0d48aa6690638628ff1f8edae961ef2","url":"https://github.com/JetBrains/MPS"},{"original_method":"public List<SNode> getSubOrSuperTypes(SNode ct) {\n    List<SNode> supertypes = Collections.emptyList();\n    SNode classifier = SLinkOperations.getTarget(ct, \"classifier\", false);\n    if (SNodeOperations.isInstanceOf(classifier, \"jetbrains.mps.baseLanguage.structure.Interface\")) {\n      List<SNode> methods = SLinkOperations.getTargets(classifier, \"method\", true);\n      if (methods != null && methods.size() == 1) {\n        SNode md = methods.get(0);\n        List<SNode> paramTypes = new ArrayList<SNode>();\n        for(SNode p : SLinkOperations.getTargets(md, \"parameter\", true)) {\n          paramTypes.add(ClassifierTypeUtil.resolveType(SLinkOperations.getTarget(p, \"type\", true), ct));\n        }\n        SNode resType = ClassifierTypeUtil.resolveType(SLinkOperations.getTarget(md, \"returnType\", true), ct);\n        supertypes = Collections.singletonList(new _Quotations.QuotationClass_0().createNode(paramTypes, resType));\n      }\n    }\n    return supertypes;\n  }","id":16613,"modified_method":"public List<SNode> getSubOrSuperTypes(SNode ct) {\n    List<SNode> supertypes = Collections.emptyList();\n    SNode classifier = SLinkOperations.getTarget(ct, \"classifier\", false);\n    if (SNodeOperations.isInstanceOf(classifier, \"jetbrains.mps.baseLanguage.structure.Interface\")) {\n      List<SNode> methods = SLinkOperations.getTargets(classifier, \"method\", true);\n      if (methods != null && methods.size() == 1) {\n        SNode md = methods.get(0);\n        List<SNode> paramTypes = new ArrayList<SNode>();\n        for(SNode p : SLinkOperations.getTargets(md, \"parameter\", true)) {\n          paramTypes.add(ClassifierTypeUtil.resolveType(SLinkOperations.getTarget(p, \"type\", true), ct));\n        }\n        SNode resType = ClassifierTypeUtil.resolveType(SLinkOperations.getTarget(md, \"returnType\", true), ct);\n        supertypes = Collections.singletonList(new _Quotations.QuotationClass_2().createNode(paramTypes, resType));\n      }\n    }\n    return supertypes;\n  }","commit_id":"3b87fa97e0d48aa6690638628ff1f8edae961ef2","url":"https://github.com/JetBrains/MPS"},{"original_method":"public List<SNode> getSubOrSuperTypes(SNode ft) {\n    List<SNode> supertypes = Collections.emptyList();\n    String rtSig = \"_FunctionTypes.\" + FunctionType_Behavior.call_getRuntimeSignature_1213877404927(ft);\n    List<SNode> interfaces = RulesUtil_Closures.getInterfaces();\n    for(SNode ice : interfaces) {\n      if (rtSig.equals(SPropertyOperations.getString(ice, \"name\"))) {\n        SNode ct = new _Quotations.QuotationClass_1().createNode(ice);\n        if ((SLinkOperations.getTarget(ft, \"resultType\", true) != null) && !(SNodeOperations.isInstanceOf(SLinkOperations.getTarget(ft, \"resultType\", true), \"jetbrains.mps.baseLanguage.structure.VoidType\"))) {\n          SLinkOperations.addChild(ct, \"parameter\", SNodeOperations.copyNode(SLinkOperations.getTarget(ft, \"resultType\", true)));\n        }\n        for(SNode pt : SLinkOperations.getTargets(ft, \"parameterType\", true)) {\n          SLinkOperations.addChild(ct, \"parameter\", SNodeOperations.copyNode(pt));\n        }\n        supertypes = Collections.singletonList(ct);\n        break;\n      }\n    }\n    return supertypes;\n  }","id":16614,"modified_method":"public List<SNode> getSubOrSuperTypes(SNode ft) {\n    List<SNode> supertypes = Collections.emptyList();\n    String rtSig = \"_FunctionTypes.\" + FunctionType_Behavior.call_getRuntimeSignature_1213877404927(ft);\n    List<SNode> interfaces = RulesUtil_Closures.getInterfaces();\n    for(SNode ice : interfaces) {\n      if (rtSig.equals(SPropertyOperations.getString(ice, \"name\"))) {\n        SNode ct = new _Quotations.QuotationClass_3().createNode(ice);\n        if ((SLinkOperations.getTarget(ft, \"resultType\", true) != null) && !(SNodeOperations.isInstanceOf(SLinkOperations.getTarget(ft, \"resultType\", true), \"jetbrains.mps.baseLanguage.structure.VoidType\"))) {\n          SLinkOperations.addChild(ct, \"parameter\", SNodeOperations.copyNode(SLinkOperations.getTarget(ft, \"resultType\", true)));\n        }\n        for(SNode pt : SLinkOperations.getTargets(ft, \"parameterType\", true)) {\n          SLinkOperations.addChild(ct, \"parameter\", SNodeOperations.copyNode(pt));\n        }\n        supertypes = Collections.singletonList(ct);\n        break;\n      }\n    }\n    return supertypes;\n  }","commit_id":"3b87fa97e0d48aa6690638628ff1f8edae961ef2","url":"https://github.com/JetBrains/MPS"},{"original_method":"public void applyRule(final SNode closure, final TypeCheckingContext typeCheckingContext) {\n    List<SNode> paramTypes = new ArrayList<SNode>();\n    for(SNode param : SLinkOperations.getTargets(closure, \"parameter\", true)) {\n      if (SNodeOperations.isInstanceOf(SLinkOperations.getTarget(param, \"type\", true), \"jetbrains.mps.baseLanguage.structure.WildCardType\")) {\n        final SNode pt_typevar_1221579075465 = typeCheckingContext.createNewRuntimeTypesVariable();\n        {\n          SNode _nodeToCheck_1029348928467 = closure;\n          BaseIntentionProvider intentionProvider = null;\n          typeCheckingContext.createEquation(typeCheckingContext.getEquationManager().getRepresentator(pt_typevar_1221579075465), typeCheckingContext.typeOf(param, \"r:00000000-0000-4000-0000-011c89590337(jetbrains.mps.baseLanguage.closures.typesystem)\", \"1221579075470\", true), _nodeToCheck_1029348928467, null, \"r:00000000-0000-4000-0000-011c89590337(jetbrains.mps.baseLanguage.closures.typesystem)\", \"1221579075466\", intentionProvider);\n        }\n        paramTypes.add(typeCheckingContext.getEquationManager().getRepresentator(pt_typevar_1221579075465));\n      } else\n      {\n        paramTypes.add(SLinkOperations.getTarget(param, \"type\", true));\n      }\n    }\n    List<SNode> allRets = new ArrayList<SNode>();\n    List<SNode> allYlds = new ArrayList<SNode>();\n    LinkedList<SNode> allStmts = new LinkedList<SNode>();\n    List<SNode> allThrows = new ArrayList<SNode>();\n    for(SNode c : SNodeOperations.getChildren(SLinkOperations.getTarget(closure, \"body\", true))) {\n      if (SNodeOperations.isInstanceOf(c, \"jetbrains.mps.baseLanguage.structure.ReturnStatement\")) {\n        allRets.add(c);\n      } else\n      if (SNodeOperations.isInstanceOf(c, \"jetbrains.mps.baseLanguage.closures.structure.YieldStatement\")) {\n        allYlds.add(c);\n      } else\n      if (!(SNodeOperations.isInstanceOf(c, \"jetbrains.mps.baseLanguage.structure.CommentedStatementsBlock\")) && !(SNodeOperations.isInstanceOf(c, \"jetbrains.mps.baseLanguage.structure.IStatementListContainer\"))) {\n        allStmts.addLast(c);\n      }\n    }\n    while (!(allStmts.isEmpty())) {\n      SNode stmt = allStmts.removeFirst();\n      if (SNodeOperations.isInstanceOf(stmt, \"jetbrains.mps.baseLanguage.structure.ReturnStatement\")) {\n        allRets.add(stmt);\n      } else\n      if (SNodeOperations.isInstanceOf(stmt, \"jetbrains.mps.baseLanguage.closures.structure.YieldStatement\")) {\n        allYlds.add(stmt);\n      } else\n      {\n        if (SNodeOperations.isInstanceOf(stmt, \"jetbrains.mps.baseLanguage.structure.ThrowStatement\")) {\n          final SNode tt_typevar_1221579075612 = typeCheckingContext.createNewRuntimeTypesVariable();\n          {\n            SNode _nodeToCheck_1029348928467 = closure;\n            BaseIntentionProvider intentionProvider = null;\n            typeCheckingContext.createEquation(typeCheckingContext.getEquationManager().getRepresentator(tt_typevar_1221579075612), typeCheckingContext.typeOf(SLinkOperations.getTarget(stmt, \"throwable\", true), \"r:00000000-0000-4000-0000-011c89590337(jetbrains.mps.baseLanguage.closures.typesystem)\", \"1221579075617\", true), _nodeToCheck_1029348928467, null, \"r:00000000-0000-4000-0000-011c89590337(jetbrains.mps.baseLanguage.closures.typesystem)\", \"1221579075613\", intentionProvider);\n          }\n          allThrows.add(typeCheckingContext.getEquationManager().getRepresentator(tt_typevar_1221579075612));\n        } else\n        if (SNodeOperations.isInstanceOf(stmt, \"jetbrains.mps.baseLanguage.structure.IMethodCall\")) {\n          for(SNode thr : SLinkOperations.getTargets(SLinkOperations.getTarget(stmt, \"baseMethodDeclaration\", false), \"throwsItem\", true)) {\n            allThrows.add(SNodeOperations.copyNode(thr));\n          }\n        }\n        for(SNode c : SNodeOperations.getChildren(stmt)) {\n          if (SNodeOperations.isInstanceOf(c, \"jetbrains.mps.baseLanguage.structure.StatementList\")) {\n            for(SNode cstmt : SLinkOperations.getTargets(c, \"statement\", true)) {\n              if (!(SNodeOperations.isInstanceOf(cstmt, \"jetbrains.mps.baseLanguage.structure.CommentedStatementsBlock\")) && !(SNodeOperations.isInstanceOf(cstmt, \"jetbrains.mps.baseLanguage.structure.IStatementListContainer\"))) {\n                allStmts.addLast(cstmt);\n              }\n            }\n          }\n        }\n      }\n    }\n    final SNode RLCS_typevar_1221579075692 = typeCheckingContext.createNewRuntimeTypesVariable();\n    final SNode YLCS_typevar_1221579075693 = typeCheckingContext.createNewRuntimeTypesVariable();\n    boolean returnsValue = !(allRets.isEmpty());\n    boolean yieldsValue = !(allYlds.isEmpty());\n    for(SNode rs : allRets) {\n      {\n        SNode _nodeToCheck_1029348928467 = closure;\n        BaseIntentionProvider intentionProvider = null;\n        typeCheckingContext.createGreaterThanInequation(typeCheckingContext.getEquationManager().getRepresentator(RLCS_typevar_1221579075692), typeCheckingContext.typeOf(SLinkOperations.getTarget(rs, \"expression\", true), \"r:00000000-0000-4000-0000-011c89590337(jetbrains.mps.baseLanguage.closures.typesystem)\", \"1221579075714\", true), _nodeToCheck_1029348928467, null, \"r:00000000-0000-4000-0000-011c89590337(jetbrains.mps.baseLanguage.closures.typesystem)\", \"1221579075710\", false, 0, intentionProvider);\n      }\n    }\n    for(SNode ys : allYlds) {\n      {\n        SNode _nodeToCheck_1029348928467 = closure;\n        BaseIntentionProvider intentionProvider = null;\n        typeCheckingContext.createGreaterThanInequation(typeCheckingContext.getEquationManager().getRepresentator(YLCS_typevar_1221579075693), typeCheckingContext.typeOf(SLinkOperations.getTarget(ys, \"expression\", true), \"r:00000000-0000-4000-0000-011c89590337(jetbrains.mps.baseLanguage.closures.typesystem)\", \"1221579075728\", true), _nodeToCheck_1029348928467, null, \"r:00000000-0000-4000-0000-011c89590337(jetbrains.mps.baseLanguage.closures.typesystem)\", \"1221579075724\", false, 0, intentionProvider);\n      }\n    }\n    List<SNode> stmts = SLinkOperations.getTargets(SLinkOperations.getTarget(closure, \"body\", true), \"statement\", true);\n    SNode lastStmt = (stmts != null && stmts.size() > 0 ?\n      stmts.get(stmts.size() - 1) :\n      null\n    );\n    final SNode RESULT_typevar_1221579592331 = typeCheckingContext.createNewRuntimeTypesVariable();\n    if (SNodeOperations.isInstanceOf(lastStmt, \"jetbrains.mps.baseLanguage.structure.ExpressionStatement\")) {\n      {\n        SNode _nodeToCheck_1029348928467 = closure;\n        BaseIntentionProvider intentionProvider = null;\n        typeCheckingContext.createGreaterThanInequation(typeCheckingContext.getEquationManager().getRepresentator(RLCS_typevar_1221579075692), typeCheckingContext.typeOf(SLinkOperations.getTarget(lastStmt, \"expression\", true), \"r:00000000-0000-4000-0000-011c89590337(jetbrains.mps.baseLanguage.closures.typesystem)\", \"1221579075774\", true), _nodeToCheck_1029348928467, null, \"r:00000000-0000-4000-0000-011c89590337(jetbrains.mps.baseLanguage.closures.typesystem)\", \"1221579075770\", false, 0, intentionProvider);\n      }\n      if (returnsValue) {\n        {\n          SNode _nodeToCheck_1029348928467 = closure;\n          BaseIntentionProvider intentionProvider = null;\n          typeCheckingContext.createEquation(typeCheckingContext.getEquationManager().getRepresentator(RESULT_typevar_1221579592331), typeCheckingContext.getEquationManager().getRepresentator(RLCS_typevar_1221579075692), _nodeToCheck_1029348928467, null, \"r:00000000-0000-4000-0000-011c89590337(jetbrains.mps.baseLanguage.closures.typesystem)\", \"1221663085197\", intentionProvider);\n        }\n      } else\n      {\n        {\n          SNode _nodeToCheck_1029348928467 = closure;\n          BaseIntentionProvider intentionProvider = null;\n          typeCheckingContext.createEquation(typeCheckingContext.getEquationManager().getRepresentator(RESULT_typevar_1221579592331), new _Quotations.QuotationClass_3().createNode(typeCheckingContext.getEquationManager().getRepresentator(RLCS_typevar_1221579075692), typeCheckingContext), _nodeToCheck_1029348928467, null, \"r:00000000-0000-4000-0000-011c89590337(jetbrains.mps.baseLanguage.closures.typesystem)\", \"1221579747323\", intentionProvider);\n        }\n      }\n      returnsValue = true;\n    } else\n    {\n      {\n        SNode _nodeToCheck_1029348928467 = closure;\n        BaseIntentionProvider intentionProvider = null;\n        typeCheckingContext.createEquation(typeCheckingContext.getEquationManager().getRepresentator(RESULT_typevar_1221579592331), typeCheckingContext.getEquationManager().getRepresentator(RLCS_typevar_1221579075692), _nodeToCheck_1029348928467, null, \"r:00000000-0000-4000-0000-011c89590337(jetbrains.mps.baseLanguage.closures.typesystem)\", \"1221663751995\", intentionProvider);\n      }\n    }\n    List<SNode> realThrows = new ArrayList<SNode>();\nwith_allThrows:\n    for(SNode another : allThrows) {\n      for(SNode one : realThrows) {\n        if (SNodeOperations.isInstanceOf(one, \"jetbrains.mps.baseLanguage.structure.ClassifierType\") && SNodeOperations.isInstanceOf(another, \"jetbrains.mps.baseLanguage.structure.ClassifierType\") && SLinkOperations.getTarget(one, \"classifier\", false) == SLinkOperations.getTarget(another, \"classifier\", false)) {\n          continue with_allThrows;\n        }\n        if (MatchingUtil.matchNodes(one, another)) {\n          continue with_allThrows;\n        }\n      }\n      realThrows.add(another);\n    }\n    if (returnsValue && yieldsValue) {\n      if (!(false)) {\n        BaseIntentionProvider intentionProvider = null;\n        typeCheckingContext.reportTypeError(closure, \"closure must either return or yield value\", \"r:00000000-0000-4000-0000-011c89590337(jetbrains.mps.baseLanguage.closures.typesystem)\", \"1221579075859\", intentionProvider);\n      }\n    } else\n    if (returnsValue) {\n      {\n        SNode _nodeToCheck_1029348928467 = closure;\n        BaseIntentionProvider intentionProvider = null;\n        typeCheckingContext.createEquation(typeCheckingContext.typeOf(closure, \"r:00000000-0000-4000-0000-011c89590337(jetbrains.mps.baseLanguage.closures.typesystem)\", \"1221579075870\", true), new _Quotations.QuotationClass_4().createNode(paramTypes, typeCheckingContext.getEquationManager().getRepresentator(RESULT_typevar_1221579592331), realThrows, typeCheckingContext), _nodeToCheck_1029348928467, null, \"r:00000000-0000-4000-0000-011c89590337(jetbrains.mps.baseLanguage.closures.typesystem)\", \"1221579075868\", intentionProvider);\n      }\n    } else\n    if (yieldsValue) {\n      SNode st = SConceptOperations.createNewNode(\"jetbrains.mps.baseLanguage.collections.structure.SequenceType\", null);\n      SLinkOperations.setTarget(st, \"elementType\", typeCheckingContext.getEquationManager().getRepresentator(YLCS_typevar_1221579075693), true);\n      {\n        SNode _nodeToCheck_1029348928467 = closure;\n        BaseIntentionProvider intentionProvider = null;\n        typeCheckingContext.createEquation(typeCheckingContext.typeOf(closure, \"r:00000000-0000-4000-0000-011c89590337(jetbrains.mps.baseLanguage.closures.typesystem)\", \"1221579075903\", true), new _Quotations.QuotationClass_5().createNode(paramTypes, st, realThrows, typeCheckingContext), _nodeToCheck_1029348928467, null, \"r:00000000-0000-4000-0000-011c89590337(jetbrains.mps.baseLanguage.closures.typesystem)\", \"1221579075901\", intentionProvider);\n      }\n    } else\n    {\n      {\n        SNode _nodeToCheck_1029348928467 = closure;\n        BaseIntentionProvider intentionProvider = null;\n        typeCheckingContext.createEquation(typeCheckingContext.typeOf(closure, \"r:00000000-0000-4000-0000-011c89590337(jetbrains.mps.baseLanguage.closures.typesystem)\", \"1221579075922\", true), new _Quotations.QuotationClass_6().createNode(paramTypes, realThrows, typeCheckingContext), _nodeToCheck_1029348928467, null, \"r:00000000-0000-4000-0000-011c89590337(jetbrains.mps.baseLanguage.closures.typesystem)\", \"1221579075920\", intentionProvider);\n      }\n    }\n  }","id":16615,"modified_method":"public void applyRule(final SNode closure, final TypeCheckingContext typeCheckingContext) {\n    List<SNode> paramTypes = new ArrayList<SNode>();\n    for(SNode param : SLinkOperations.getTargets(closure, \"parameter\", true)) {\n      if (SNodeOperations.isInstanceOf(SLinkOperations.getTarget(param, \"type\", true), \"jetbrains.mps.baseLanguage.structure.WildCardType\")) {\n        final SNode pt_typevar_1221579075465 = typeCheckingContext.createNewRuntimeTypesVariable();\n        {\n          SNode _nodeToCheck_1029348928467 = closure;\n          BaseIntentionProvider intentionProvider = null;\n          typeCheckingContext.createEquation(typeCheckingContext.getEquationManager().getRepresentator(pt_typevar_1221579075465), typeCheckingContext.typeOf(param, \"r:00000000-0000-4000-0000-011c89590337(jetbrains.mps.baseLanguage.closures.typesystem)\", \"1221579075470\", true), _nodeToCheck_1029348928467, null, \"r:00000000-0000-4000-0000-011c89590337(jetbrains.mps.baseLanguage.closures.typesystem)\", \"1221579075466\", intentionProvider);\n        }\n        paramTypes.add(typeCheckingContext.getEquationManager().getRepresentator(pt_typevar_1221579075465));\n      } else\n      {\n        paramTypes.add(SLinkOperations.getTarget(param, \"type\", true));\n      }\n    }\n    List<SNode> allRets = new ArrayList<SNode>();\n    List<SNode> allYlds = new ArrayList<SNode>();\n    LinkedList<SNode> allStmts = new LinkedList<SNode>();\n    List<SNode> allThrows = new ArrayList<SNode>();\n    for(SNode c : SNodeOperations.getChildren(SLinkOperations.getTarget(closure, \"body\", true))) {\n      if (SNodeOperations.isInstanceOf(c, \"jetbrains.mps.baseLanguage.structure.ReturnStatement\")) {\n        allRets.add(c);\n      } else\n      if (SNodeOperations.isInstanceOf(c, \"jetbrains.mps.baseLanguage.closures.structure.YieldStatement\")) {\n        allYlds.add(c);\n      } else\n      if (!(SNodeOperations.isInstanceOf(c, \"jetbrains.mps.baseLanguage.structure.CommentedStatementsBlock\")) && !(SNodeOperations.isInstanceOf(c, \"jetbrains.mps.baseLanguage.structure.IStatementListContainer\"))) {\n        allStmts.addLast(c);\n      }\n    }\n    while (!(allStmts.isEmpty())) {\n      SNode stmt = allStmts.removeFirst();\n      if (SNodeOperations.isInstanceOf(stmt, \"jetbrains.mps.baseLanguage.structure.ReturnStatement\")) {\n        allRets.add(stmt);\n      } else\n      if (SNodeOperations.isInstanceOf(stmt, \"jetbrains.mps.baseLanguage.closures.structure.YieldStatement\")) {\n        allYlds.add(stmt);\n      } else\n      {\n        if (SNodeOperations.isInstanceOf(stmt, \"jetbrains.mps.baseLanguage.structure.ThrowStatement\")) {\n          final SNode tt_typevar_1221579075612 = typeCheckingContext.createNewRuntimeTypesVariable();\n          {\n            SNode _nodeToCheck_1029348928467 = closure;\n            BaseIntentionProvider intentionProvider = null;\n            typeCheckingContext.createEquation(typeCheckingContext.getEquationManager().getRepresentator(tt_typevar_1221579075612), typeCheckingContext.typeOf(SLinkOperations.getTarget(stmt, \"throwable\", true), \"r:00000000-0000-4000-0000-011c89590337(jetbrains.mps.baseLanguage.closures.typesystem)\", \"1221579075617\", true), _nodeToCheck_1029348928467, null, \"r:00000000-0000-4000-0000-011c89590337(jetbrains.mps.baseLanguage.closures.typesystem)\", \"1221579075613\", intentionProvider);\n          }\n          allThrows.add(typeCheckingContext.getEquationManager().getRepresentator(tt_typevar_1221579075612));\n        } else\n        if (SNodeOperations.isInstanceOf(stmt, \"jetbrains.mps.baseLanguage.structure.IMethodCall\")) {\n          for(SNode thr : SLinkOperations.getTargets(SLinkOperations.getTarget(stmt, \"baseMethodDeclaration\", false), \"throwsItem\", true)) {\n            allThrows.add(SNodeOperations.copyNode(thr));\n          }\n        }\n        for(SNode c : SNodeOperations.getChildren(stmt)) {\n          if (SNodeOperations.isInstanceOf(c, \"jetbrains.mps.baseLanguage.structure.StatementList\")) {\n            for(SNode cstmt : SLinkOperations.getTargets(c, \"statement\", true)) {\n              if (!(SNodeOperations.isInstanceOf(cstmt, \"jetbrains.mps.baseLanguage.structure.CommentedStatementsBlock\")) && !(SNodeOperations.isInstanceOf(cstmt, \"jetbrains.mps.baseLanguage.structure.IStatementListContainer\"))) {\n                allStmts.addLast(cstmt);\n              }\n            }\n          }\n        }\n      }\n    }\n    final SNode RLCS_typevar_1221579075692 = typeCheckingContext.createNewRuntimeTypesVariable();\n    final SNode YLCS_typevar_1221579075693 = typeCheckingContext.createNewRuntimeTypesVariable();\n    boolean returnsValue = !(allRets.isEmpty());\n    boolean yieldsValue = !(allYlds.isEmpty());\n    for(SNode rs : allRets) {\n      {\n        SNode _nodeToCheck_1029348928467 = closure;\n        BaseIntentionProvider intentionProvider = null;\n        typeCheckingContext.createGreaterThanInequation(typeCheckingContext.getEquationManager().getRepresentator(RLCS_typevar_1221579075692), typeCheckingContext.typeOf(SLinkOperations.getTarget(rs, \"expression\", true), \"r:00000000-0000-4000-0000-011c89590337(jetbrains.mps.baseLanguage.closures.typesystem)\", \"1221579075714\", true), _nodeToCheck_1029348928467, null, \"r:00000000-0000-4000-0000-011c89590337(jetbrains.mps.baseLanguage.closures.typesystem)\", \"1221579075710\", false, 0, intentionProvider);\n      }\n    }\n    for(SNode ys : allYlds) {\n      {\n        SNode _nodeToCheck_1029348928467 = closure;\n        BaseIntentionProvider intentionProvider = null;\n        typeCheckingContext.createGreaterThanInequation(typeCheckingContext.getEquationManager().getRepresentator(YLCS_typevar_1221579075693), typeCheckingContext.typeOf(SLinkOperations.getTarget(ys, \"expression\", true), \"r:00000000-0000-4000-0000-011c89590337(jetbrains.mps.baseLanguage.closures.typesystem)\", \"1221579075728\", true), _nodeToCheck_1029348928467, null, \"r:00000000-0000-4000-0000-011c89590337(jetbrains.mps.baseLanguage.closures.typesystem)\", \"1221579075724\", false, 0, intentionProvider);\n      }\n    }\n    List<SNode> stmts = SLinkOperations.getTargets(SLinkOperations.getTarget(closure, \"body\", true), \"statement\", true);\n    SNode lastStmt = (stmts != null && stmts.size() > 0 ?\n      stmts.get(stmts.size() - 1) :\n      null\n    );\n    final SNode RESULT_typevar_1221579592331 = typeCheckingContext.createNewRuntimeTypesVariable();\n    if (SNodeOperations.isInstanceOf(lastStmt, \"jetbrains.mps.baseLanguage.structure.ExpressionStatement\")) {\n      {\n        SNode _nodeToCheck_1029348928467 = closure;\n        BaseIntentionProvider intentionProvider = null;\n        typeCheckingContext.createGreaterThanInequation(typeCheckingContext.getEquationManager().getRepresentator(RLCS_typevar_1221579075692), typeCheckingContext.typeOf(SLinkOperations.getTarget(lastStmt, \"expression\", true), \"r:00000000-0000-4000-0000-011c89590337(jetbrains.mps.baseLanguage.closures.typesystem)\", \"1221579075774\", true), _nodeToCheck_1029348928467, null, \"r:00000000-0000-4000-0000-011c89590337(jetbrains.mps.baseLanguage.closures.typesystem)\", \"1221579075770\", false, 0, intentionProvider);\n      }\n      if (returnsValue) {\n        {\n          SNode _nodeToCheck_1029348928467 = closure;\n          BaseIntentionProvider intentionProvider = null;\n          typeCheckingContext.createEquation(typeCheckingContext.getEquationManager().getRepresentator(RESULT_typevar_1221579592331), typeCheckingContext.getEquationManager().getRepresentator(RLCS_typevar_1221579075692), _nodeToCheck_1029348928467, null, \"r:00000000-0000-4000-0000-011c89590337(jetbrains.mps.baseLanguage.closures.typesystem)\", \"1221663085197\", intentionProvider);\n        }\n      } else\n      {\n        {\n          SNode _nodeToCheck_1029348928467 = closure;\n          BaseIntentionProvider intentionProvider = null;\n          typeCheckingContext.createEquation(typeCheckingContext.getEquationManager().getRepresentator(RESULT_typevar_1221579592331), new _Quotations.QuotationClass_5().createNode(typeCheckingContext.getEquationManager().getRepresentator(RLCS_typevar_1221579075692), typeCheckingContext), _nodeToCheck_1029348928467, null, \"r:00000000-0000-4000-0000-011c89590337(jetbrains.mps.baseLanguage.closures.typesystem)\", \"1221579747323\", intentionProvider);\n        }\n      }\n      returnsValue = true;\n    } else\n    {\n      {\n        SNode _nodeToCheck_1029348928467 = closure;\n        BaseIntentionProvider intentionProvider = null;\n        typeCheckingContext.createEquation(typeCheckingContext.getEquationManager().getRepresentator(RESULT_typevar_1221579592331), typeCheckingContext.getEquationManager().getRepresentator(RLCS_typevar_1221579075692), _nodeToCheck_1029348928467, null, \"r:00000000-0000-4000-0000-011c89590337(jetbrains.mps.baseLanguage.closures.typesystem)\", \"1221663751995\", intentionProvider);\n      }\n    }\n    List<SNode> realThrows = new ArrayList<SNode>();\nwith_allThrows:\n    for(SNode another : allThrows) {\n      for(SNode one : realThrows) {\n        if (SNodeOperations.isInstanceOf(one, \"jetbrains.mps.baseLanguage.structure.ClassifierType\") && SNodeOperations.isInstanceOf(another, \"jetbrains.mps.baseLanguage.structure.ClassifierType\") && SLinkOperations.getTarget(one, \"classifier\", false) == SLinkOperations.getTarget(another, \"classifier\", false)) {\n          continue with_allThrows;\n        }\n        if (MatchingUtil.matchNodes(one, another)) {\n          continue with_allThrows;\n        }\n      }\n      realThrows.add(another);\n    }\n    if (returnsValue && yieldsValue) {\n      if (!(false)) {\n        BaseIntentionProvider intentionProvider = null;\n        typeCheckingContext.reportTypeError(closure, \"closure must either return or yield value\", \"r:00000000-0000-4000-0000-011c89590337(jetbrains.mps.baseLanguage.closures.typesystem)\", \"1221579075859\", intentionProvider);\n      }\n    } else\n    if (returnsValue) {\n      {\n        SNode _nodeToCheck_1029348928467 = closure;\n        BaseIntentionProvider intentionProvider = null;\n        typeCheckingContext.createEquation(typeCheckingContext.typeOf(closure, \"r:00000000-0000-4000-0000-011c89590337(jetbrains.mps.baseLanguage.closures.typesystem)\", \"1221579075870\", true), new _Quotations.QuotationClass_6().createNode(paramTypes, typeCheckingContext.getEquationManager().getRepresentator(RESULT_typevar_1221579592331), realThrows, typeCheckingContext), _nodeToCheck_1029348928467, null, \"r:00000000-0000-4000-0000-011c89590337(jetbrains.mps.baseLanguage.closures.typesystem)\", \"1221579075868\", intentionProvider);\n      }\n    } else\n    if (yieldsValue) {\n      SNode st = SConceptOperations.createNewNode(\"jetbrains.mps.baseLanguage.collections.structure.SequenceType\", null);\n      SLinkOperations.setTarget(st, \"elementType\", typeCheckingContext.getEquationManager().getRepresentator(YLCS_typevar_1221579075693), true);\n      {\n        SNode _nodeToCheck_1029348928467 = closure;\n        BaseIntentionProvider intentionProvider = null;\n        typeCheckingContext.createEquation(typeCheckingContext.typeOf(closure, \"r:00000000-0000-4000-0000-011c89590337(jetbrains.mps.baseLanguage.closures.typesystem)\", \"1221579075903\", true), new _Quotations.QuotationClass_7().createNode(paramTypes, st, realThrows, typeCheckingContext), _nodeToCheck_1029348928467, null, \"r:00000000-0000-4000-0000-011c89590337(jetbrains.mps.baseLanguage.closures.typesystem)\", \"1221579075901\", intentionProvider);\n      }\n    } else\n    {\n      {\n        SNode _nodeToCheck_1029348928467 = closure;\n        BaseIntentionProvider intentionProvider = null;\n        typeCheckingContext.createEquation(typeCheckingContext.typeOf(closure, \"r:00000000-0000-4000-0000-011c89590337(jetbrains.mps.baseLanguage.closures.typesystem)\", \"1221579075922\", true), new _Quotations.QuotationClass_8().createNode(paramTypes, realThrows, typeCheckingContext), _nodeToCheck_1029348928467, null, \"r:00000000-0000-4000-0000-011c89590337(jetbrains.mps.baseLanguage.closures.typesystem)\", \"1221579075920\", intentionProvider);\n      }\n    }\n  }","commit_id":"3b87fa97e0d48aa6690638628ff1f8edae961ef2","url":"https://github.com/JetBrains/MPS"},{"original_method":"public void applyRule(final SNode invoke, final TypeCheckingContext typeCheckingContext) {\n    final SNode cl = SNodeOperations.getAncestor(invoke, \"jetbrains.mps.baseLanguage.closures.structure.ClosureLiteral\", false, false);\n    if (!((cl != null))) {\n      BaseIntentionProvider intentionProvider = null;\n      typeCheckingContext.reportTypeError(invoke, \"Must be within ClosureLiteral\", \"r:00000000-0000-4000-0000-011c89590337(jetbrains.mps.baseLanguage.closures.typesystem)\", \"1199711581032\", intentionProvider);\n    }\n    {\n      final SNode _representatorVar1 = typeCheckingContext.typeOf(cl, \"r:00000000-0000-4000-0000-011c89590337(jetbrains.mps.baseLanguage.closures.typesystem)\", \"1199711625694\", true);\n      typeCheckingContext.whenConcrete(_representatorVar1, new Runnable() {\n\n        public void run() {\n          SNode ft = typeCheckingContext.typeOf(cl, \"r:00000000-0000-4000-0000-011c89590337(jetbrains.mps.baseLanguage.closures.typesystem)\", \"1199711616632\", true);\n          {\n            SNode _nodeToCheck_1029348928467 = invoke;\n            BaseIntentionProvider intentionProvider = null;\n            typeCheckingContext.createEquation(typeCheckingContext.typeOf(invoke, \"r:00000000-0000-4000-0000-011c89590337(jetbrains.mps.baseLanguage.closures.typesystem)\", \"1199711815333\", true), SLinkOperations.getTarget(ft, \"resultType\", true), _nodeToCheck_1029348928467, null, \"r:00000000-0000-4000-0000-011c89590337(jetbrains.mps.baseLanguage.closures.typesystem)\", \"1199711813747\", intentionProvider);\n          }\n          if (!(SLinkOperations.getCount(ft, \"parameterType\") == SLinkOperations.getCount(invoke, \"parameter\"))) {\n            BaseIntentionProvider intentionProvider = null;\n            typeCheckingContext.reportTypeError(invoke, \"Wrong parameters number\", \"r:00000000-0000-4000-0000-011c89590337(jetbrains.mps.baseLanguage.closures.typesystem)\", \"1199711857568\", intentionProvider);\n          }\n          {\n            SNode pt;\n            SNode p;\n            Iterator<SNode> pt_iterator = SLinkOperations.getTargets(ft, \"parameterType\", true).iterator();\n            Iterator<SNode> p_iterator = SLinkOperations.getTargets(invoke, \"parameter\", true).iterator();\n            while (true) {\n              if (!(pt_iterator.hasNext())) {\n                break;\n              }\n              if (!(p_iterator.hasNext())) {\n                break;\n              }\n              pt = pt_iterator.next();\n              p = p_iterator.next();\n              {\n                SNode _nodeToCheck_1029348928467 = invoke;\n                BaseIntentionProvider intentionProvider = null;\n                typeCheckingContext.createLessThanInequation(typeCheckingContext.typeOf(p, \"r:00000000-0000-4000-0000-011c89590337(jetbrains.mps.baseLanguage.closures.typesystem)\", \"1202920161360\", true), pt, _nodeToCheck_1029348928467, null, \"r:00000000-0000-4000-0000-011c89590337(jetbrains.mps.baseLanguage.closures.typesystem)\", \"1202920161358\", false, 0, intentionProvider);\n              }\n            }\n          }\n        }\n\n      }, \"r:00000000-0000-4000-0000-011c89590337(jetbrains.mps.baseLanguage.closures.typesystem)\", \"1199711624300\");\n    }\n  }","id":16616,"modified_method":"public void applyRule(final SNode invoke, final TypeCheckingContext typeCheckingContext) {\n    final SNode cl = SNodeOperations.getAncestor(invoke, \"jetbrains.mps.baseLanguage.closures.structure.ClosureLiteral\", false, false);\n    if (!((cl != null))) {\n      BaseIntentionProvider intentionProvider = null;\n      typeCheckingContext.reportTypeError(invoke, \"Must be within ClosureLiteral\", \"r:00000000-0000-4000-0000-011c89590337(jetbrains.mps.baseLanguage.closures.typesystem)\", \"1199711581032\", intentionProvider);\n    }\n    List<SNode> ptypes = new ArrayList<SNode>();\n    for(SNode p : SLinkOperations.getTargets(invoke, \"parameter\", true)) {\n      ptypes.add(typeCheckingContext.typeOf(p, \"r:00000000-0000-4000-0000-011c89590337(jetbrains.mps.baseLanguage.closures.typesystem)\", \"1225469598353\", true));\n    }\n    final SNode ret_typevar_1225469708846 = typeCheckingContext.createNewRuntimeTypesVariable();\n    {\n      SNode _nodeToCheck_1029348928467 = invoke;\n      BaseIntentionProvider intentionProvider = null;\n      typeCheckingContext.createEquation(typeCheckingContext.typeOf(invoke, \"r:00000000-0000-4000-0000-011c89590337(jetbrains.mps.baseLanguage.closures.typesystem)\", \"1225469808572\", true), typeCheckingContext.getEquationManager().getRepresentator(ret_typevar_1225469708846), _nodeToCheck_1029348928467, null, \"r:00000000-0000-4000-0000-011c89590337(jetbrains.mps.baseLanguage.closures.typesystem)\", \"1225469813196\", intentionProvider);\n    }\n    {\n      SNode _nodeToCheck_1029348928467 = invoke;\n      BaseIntentionProvider intentionProvider = null;\n      typeCheckingContext.createLessThanInequation(typeCheckingContext.typeOf(cl, \"r:00000000-0000-4000-0000-011c89590337(jetbrains.mps.baseLanguage.closures.typesystem)\", \"1225469748561\", true), new _Quotations.QuotationClass_1().createNode(ptypes, typeCheckingContext.getEquationManager().getRepresentator(ret_typevar_1225469708846), typeCheckingContext), _nodeToCheck_1029348928467, null, \"r:00000000-0000-4000-0000-011c89590337(jetbrains.mps.baseLanguage.closures.typesystem)\", \"1225469753779\", false, 0, intentionProvider);\n    }\n  }","commit_id":"3b87fa97e0d48aa6690638628ff1f8edae961ef2","url":"https://github.com/JetBrains/MPS"},{"original_method":"public void applyRule(final SNode invoke, final TypeCheckingContext typeCheckingContext) {\n    {\n      final SNode _representatorVar0 = typeCheckingContext.typeOf(SLinkOperations.getTarget(invoke, \"function\", true), \"r:00000000-0000-4000-0000-011c89590337(jetbrains.mps.baseLanguage.closures.typesystem)\", \"1199567116884\", true);\n      typeCheckingContext.whenConcrete(_representatorVar0, new Runnable() {\n\n        public void run() {\n          SNode ft = typeCheckingContext.typeOf(SLinkOperations.getTarget(invoke, \"function\", true), \"r:00000000-0000-4000-0000-011c89590337(jetbrains.mps.baseLanguage.closures.typesystem)\", \"1199567532549\", true);\n          {\n            SNode _nodeToCheck_1029348928467 = invoke;\n            BaseIntentionProvider intentionProvider = null;\n            typeCheckingContext.createEquation(typeCheckingContext.typeOf(invoke, \"r:00000000-0000-4000-0000-011c89590337(jetbrains.mps.baseLanguage.closures.typesystem)\", \"1199711684834\", true), SLinkOperations.getTarget(ft, \"resultType\", true), _nodeToCheck_1029348928467, null, \"r:00000000-0000-4000-0000-011c89590337(jetbrains.mps.baseLanguage.closures.typesystem)\", \"1199711681931\", intentionProvider);\n          }\n          if (!(SLinkOperations.getCount(ft, \"parameterType\") == SLinkOperations.getCount(invoke, \"parameter\"))) {\n            BaseIntentionProvider intentionProvider = null;\n            typeCheckingContext.reportTypeError(invoke, \"Wrong parameters number\", \"r:00000000-0000-4000-0000-011c89590337(jetbrains.mps.baseLanguage.closures.typesystem)\", \"1199568419784\", intentionProvider);\n          }\n          {\n            SNode pt;\n            SNode p;\n            Iterator<SNode> pt_iterator = SLinkOperations.getTargets(ft, \"parameterType\", true).iterator();\n            Iterator<SNode> p_iterator = SLinkOperations.getTargets(invoke, \"parameter\", true).iterator();\n            while (true) {\n              if (!(pt_iterator.hasNext())) {\n                break;\n              }\n              if (!(p_iterator.hasNext())) {\n                break;\n              }\n              pt = pt_iterator.next();\n              p = p_iterator.next();\n              {\n                SNode _nodeToCheck_1029348928467 = invoke;\n                BaseIntentionProvider intentionProvider = null;\n                typeCheckingContext.createLessThanInequation(typeCheckingContext.typeOf(p, \"r:00000000-0000-4000-0000-011c89590337(jetbrains.mps.baseLanguage.closures.typesystem)\", \"1202920138888\", true), pt, _nodeToCheck_1029348928467, null, \"r:00000000-0000-4000-0000-011c89590337(jetbrains.mps.baseLanguage.closures.typesystem)\", \"1202920135673\", false, 0, intentionProvider);\n              }\n            }\n          }\n        }\n\n      }, \"r:00000000-0000-4000-0000-011c89590337(jetbrains.mps.baseLanguage.closures.typesystem)\", \"1199567113016\");\n    }\n  }","id":16617,"modified_method":"public void applyRule(final SNode invoke, final TypeCheckingContext typeCheckingContext) {\n    List<SNode> ptypes = new ArrayList<SNode>();\n    for(SNode p : SLinkOperations.getTargets(invoke, \"parameter\", true)) {\n      ptypes.add(typeCheckingContext.typeOf(p, \"r:00000000-0000-4000-0000-011c89590337(jetbrains.mps.baseLanguage.closures.typesystem)\", \"1225470166988\", true));\n    }\n    final SNode ret_typevar_1225470166995 = typeCheckingContext.createNewRuntimeTypesVariable();\n    {\n      SNode _nodeToCheck_1029348928467 = invoke;\n      BaseIntentionProvider intentionProvider = null;\n      typeCheckingContext.createEquation(typeCheckingContext.typeOf(invoke, \"r:00000000-0000-4000-0000-011c89590337(jetbrains.mps.baseLanguage.closures.typesystem)\", \"1225470167000\", true), typeCheckingContext.getEquationManager().getRepresentator(ret_typevar_1225470166995), _nodeToCheck_1029348928467, null, \"r:00000000-0000-4000-0000-011c89590337(jetbrains.mps.baseLanguage.closures.typesystem)\", \"1225470166996\", intentionProvider);\n    }\n    {\n      SNode _nodeToCheck_1029348928467 = invoke;\n      BaseIntentionProvider intentionProvider = null;\n      typeCheckingContext.createLessThanInequation(typeCheckingContext.typeOf(SLinkOperations.getTarget(invoke, \"function\", true), \"r:00000000-0000-4000-0000-011c89590337(jetbrains.mps.baseLanguage.closures.typesystem)\", \"1225470167013\", true), new _Quotations.QuotationClass_0().createNode(ptypes, typeCheckingContext.getEquationManager().getRepresentator(ret_typevar_1225470166995), typeCheckingContext), _nodeToCheck_1029348928467, null, \"r:00000000-0000-4000-0000-011c89590337(jetbrains.mps.baseLanguage.closures.typesystem)\", \"1225470167002\", false, 0, intentionProvider);\n    }\n  }","commit_id":"3b87fa97e0d48aa6690638628ff1f8edae961ef2","url":"https://github.com/JetBrains/MPS"},{"original_method":"@Override\n        public String toString() {\n            StringBuffer buffer = new StringBuffer();\n            buffer.append(\"HttpAttribute: \");\n            buffer.append(getName());\n            buffer.append(\":\");\n            buffer.append(getType());\n            buffer.append(\":\");\n            buffer.append(getValue());\n            return buffer.toString();\n        }","id":16618,"modified_method":"@Override\n        public String toString() {\n            StringBuffer buffer = new StringBuffer();\n            buffer.append(\"HttpAttribute: \");\n            buffer.append(getName());\n            buffer.append(\":\");\n            buffer.append(getType());\n            buffer.append(\":\");\n            buffer.append(getValueAsString());\n            return buffer.toString();\n        }","commit_id":"656e67bc06271c5304ed65b3429e05ae39b9d184","url":"https://github.com/OpenNMS/opennms"},{"original_method":"public String getValue() {\n            return m_value;\n        }","id":16619,"modified_method":"public Number getValue() {\n            return m_value;\n        }","commit_id":"656e67bc06271c5304ed65b3429e05ae39b9d184","url":"https://github.com/OpenNMS/opennms"},{"original_method":"private void persistResponse(final HttpCollectionSet collectionSet, final HttpClient client, final HttpMethod method) throws IOException, RrdException {\n        List<HttpCollectionAttribute> butes = processResponse(method.getResponseBodyAsString(), collectionSet);\n        if (butes.isEmpty()) {\n            log().warn(\"doCollection: no attributes defined for collection were found in response text matching regular expression '\" + collectionSet.getUriDef().getUrl().getMatches() + \"'\");\n            throw new HttpCollectorException(\"No attributes specified were found: \", client);\n        }\n        \n        String collectionName = collectionSet.getParameters().get(\"http-collection\");\n        RrdRepository rrdRepository = HttpCollectionConfigFactory.getInstance().getRrdRepository(collectionName);\n        ResourceIdentifier resource = new ResourceIdentifier() {\n\n            public String getOwnerName() {\n                return collectionSet.getAgent().getHostAddress();\n            }\n\n            public File getResourceDir(RrdRepository repository) {\n                return new File(repository.getRrdBaseDir(), Integer.toString(collectionSet.getAgent().getNodeId()));\n            }\n            \n        };\n        \n        log().info(\"doCollection: persisting \"+butes.size()+\" attributes\");\n        \n        for (HttpCollectionAttribute attribute : butes) {\n            PersistOperationBuilder builder = new PersistOperationBuilder(rrdRepository, resource, attribute.getName());\n            builder.declareAttribute(attribute);\n            log().debug(\"doCollection: setting attribute: \"+attribute);\n            builder.setAttributeValue(attribute, attribute.getValue());\n            builder.commit();\n        }\n    }","id":16620,"modified_method":"private void persistResponse(final HttpCollectionSet collectionSet, final HttpClient client, final HttpMethod method) throws IOException, RrdException {\n        List<HttpCollectionAttribute> butes = processResponse(method.getResponseBodyAsString(), collectionSet);\n        if (butes.isEmpty()) {\n            log().warn(\"doCollection: no attributes defined for collection were found in response text matching regular expression '\" + collectionSet.getUriDef().getUrl().getMatches() + \"'\");\n            throw new HttpCollectorException(\"No attributes specified were found: \", client);\n        }\n        \n        String collectionName = collectionSet.getParameters().get(\"http-collection\");\n        RrdRepository rrdRepository = HttpCollectionConfigFactory.getInstance().getRrdRepository(collectionName);\n        ResourceIdentifier resource = new ResourceIdentifier() {\n\n            public String getOwnerName() {\n                return collectionSet.getAgent().getHostAddress();\n            }\n\n            public File getResourceDir(RrdRepository repository) {\n                return new File(repository.getRrdBaseDir(), Integer.toString(collectionSet.getAgent().getNodeId()));\n            }\n            \n        };\n        \n        log().info(\"doCollection: persisting \"+butes.size()+\" attributes\");\n        \n        for (HttpCollectionAttribute attribute : butes) {\n            PersistOperationBuilder builder = new PersistOperationBuilder(rrdRepository, resource, attribute.getName());\n            builder.declareAttribute(attribute);\n            log().debug(\"doCollection: setting attribute: \"+attribute);\n            builder.setAttributeValue(attribute, attribute.getValueAsString());\n            builder.commit();\n        }\n    }","commit_id":"656e67bc06271c5304ed65b3429e05ae39b9d184","url":"https://github.com/OpenNMS/opennms"},{"original_method":"HttpCollectionAttribute(String alias, String type, String value) {\n            m_alias = alias;\n            m_type= type;\n            m_value = value;\n        }","id":16621,"modified_method":"HttpCollectionAttribute(String alias, String type, Number value) {\n            m_alias = alias;\n            m_type= type;\n            m_value = value;\n        }","commit_id":"656e67bc06271c5304ed65b3429e05ae39b9d184","url":"https://github.com/OpenNMS/opennms"},{"original_method":"@SuppressWarnings(\"unchecked\")\n    private List<HttpCollectionAttribute> processResponse(final String responseBodyAsString, final HttpCollectionSet collectionSet) {\n        log().debug(\"processResponse: \");\n        List<HttpCollectionAttribute> butes = new LinkedList<HttpCollectionAttribute>();\n        Pattern p = Pattern.compile(collectionSet.getUriDef().getUrl().getMatches());\n        Matcher m = p.matcher(responseBodyAsString);\n        \n        final boolean matches = m.matches();\n        if (matches) {\n            log().debug(\"processResponse: found matching attributes: \"+matches);\n            List<Attrib> attribDefs = collectionSet.getUriDef().getAttributes().getAttribCollection();\n            \n            for (Attrib attribDef : attribDefs) {\n                HttpCollectionAttribute bute = new HttpCollectionAttribute(attribDef.getAlias(),\n                        attribDef.getType(), m.group(attribDef.getMatchGroup()));\n                log().debug(\"processResponse: adding found attribute: \"+bute);\n                butes.add(bute);\n            }\n        } else {\n            log().debug(\"processResponse: found matching attributes: \"+matches);\n        }\n        return butes;\n    }","id":16622,"modified_method":"@SuppressWarnings(\"unchecked\")\n    private List<HttpCollectionAttribute> processResponse(final String responseBodyAsString, final HttpCollectionSet collectionSet) {\n        log().debug(\"processResponse: \");\n        List<HttpCollectionAttribute> butes = new LinkedList<HttpCollectionAttribute>();\n        Pattern p = Pattern.compile(collectionSet.getUriDef().getUrl().getMatches());\n        Matcher m = p.matcher(responseBodyAsString);\n        \n        final boolean matches = m.matches();\n        if (matches) {\n            log().debug(\"processResponse: found matching attributes: \"+matches);\n            List<Attrib> attribDefs = collectionSet.getUriDef().getAttributes().getAttribCollection();\n            \n            for (Attrib attribDef : attribDefs) {\n                try {\n                    Number num = NumberFormat.getNumberInstance().parse(m.group(attribDef.getMatchGroup()));\n                    HttpCollectionAttribute bute = new HttpCollectionAttribute(attribDef.getAlias(), attribDef.getType(), num);\n                    log().debug(\"processResponse: adding found attribute: \"+bute);\n                    butes.add(bute);\n                } catch (ParseException e) {\n                    log().error(\"attribute \"+attribDef.getAlias()+\" failed to match a parsable number! Matched \"+m.group(attribDef.getMatchGroup())+\" instead.\");\n                }\n            }\n        } else {\n            log().debug(\"processResponse: found matching attributes: \"+matches);\n        }\n        return butes;\n    }","commit_id":"656e67bc06271c5304ed65b3429e05ae39b9d184","url":"https://github.com/OpenNMS/opennms"},{"original_method":"private Reader getConfigRdr() {\n        return new StringReader(\"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n\" + \n                \"<http-datacollection-config  \\n\" + \n                \"    xmlns:http-dc=\\\"http://xmlns.opennms.org/xsd/config/http-datacollection\\\" \\n\" + \n                \"    xmlns:xsi=\\\"http://www.w3.org/2001/XMLSchema-instance\\\" \\n\" + \n                \"    xsi:schemaLocation=\\\"http://xmlns.opennms.org/xsd/config/http-datacollection \" +\n                \"      http://www.opennms.org/xsd/config/http-datacollection-config.xsd\\\" \\n\" + \n                \"    rrdRepository=\\\"@install.share.dir@/rrd/snmp/\\\" >\\n\" + \n                \"  <http-collection name=\\\"default\\\">\\n\" + \n                \"    <rrd step=\\\"300\\\">\\n\" + \n                \"      <rra>RRA:AVERAGE:0.5:1:8928<\/rra>\\n\" + \n                \"      <rra>RRA:AVERAGE:0.5:12:8784<\/rra>\\n\" + \n                \"      <rra>RRA:MIN:0.5:12:8784<\/rra>\\n\" + \n                \"      <rra>RRA:MAX:0.5:12:8784<\/rra>\\n\" + \n                \"    <\/rrd>\\n\" + \n                \"    <uris>\\n\" + \n                \"      <uri name=\\\"test-document-count\\\">\\n\" + \n                \"        <url path=\\\"/test/resources/httpcolltest.html\\\"\\n\" + \n                \"             user-agent=\\\"Mozilla/5.0 (Macintosh; U; PPC Mac OS X; en) \" +\n                \"AppleWebKit/412 (KHTML, like Gecko) Safari/412\\\" \\n\" + \n                \"             matches=\\\"(?s).*Document Count:\\\\s+([0-9]+).*\\\" response-range=\\\"100-399\\\" virtual-host=\\\"www.opennms.org\\\">\\n\" + \n                \"        <\/url>\\n\" + \n                \"        <attributes>\\n\" + \n                \"          <attrib alias=\\\"documentCount\\\" match-group=\\\"1\\\" type=\\\"counter32\\\"/>\\n\" + \n                \"        <\/attributes>\\n\" + \n                \"      <\/uri>\\n\" + \n                \"    <\/uris>\\n\" + \n                \"  <\/http-collection>\\n\" + \n                \"<\/http-datacollection-config>\");\n    }","id":16623,"modified_method":"private Reader getConfigRdr() {\n        return new StringReader(\"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n\" + \n                \"<http-datacollection-config  \\n\" + \n                \"    xmlns:http-dc=\\\"http://xmlns.opennms.org/xsd/config/http-datacollection\\\" \\n\" + \n                \"    xmlns:xsi=\\\"http://www.w3.org/2001/XMLSchema-instance\\\" \\n\" + \n                \"    xsi:schemaLocation=\\\"http://xmlns.opennms.org/xsd/config/http-datacollection \" +\n                \"      http://www.opennms.org/xsd/config/http-datacollection-config.xsd\\\" \\n\" + \n                \"    rrdRepository=\\\"@install.share.dir@/rrd/snmp/\\\" >\\n\" + \n                \"  <http-collection name=\\\"default\\\">\\n\" + \n                \"    <rrd step=\\\"300\\\">\\n\" + \n                \"      <rra>RRA:AVERAGE:0.5:1:8928<\/rra>\\n\" + \n                \"      <rra>RRA:AVERAGE:0.5:12:8784<\/rra>\\n\" + \n                \"      <rra>RRA:MIN:0.5:12:8784<\/rra>\\n\" + \n                \"      <rra>RRA:MAX:0.5:12:8784<\/rra>\\n\" + \n                \"    <\/rrd>\\n\" + \n                \"    <uris>\\n\" + \n                \"      <uri name=\\\"test-document-count\\\">\\n\" + \n                \"        <url path=\\\"/test/resources/httpcolltest.html\\\"\\n\" + \n                \"             user-agent=\\\"Mozilla/5.0 (Macintosh; U; PPC Mac OS X; en) \" +\n                \"AppleWebKit/412 (KHTML, like Gecko) Safari/412\\\" \\n\" + \n                \"             matches=\\\"(?s).*Document Count:\\\\s+([0-9,]+(\\\\.[0-9]*)?).*\\\" response-range=\\\"100-399\\\" virtual-host=\\\"www.opennms.org\\\">\\n\" + \n                \"        <\/url>\\n\" + \n                \"        <attributes>\\n\" + \n                \"          <attrib alias=\\\"documentCount\\\" match-group=\\\"1\\\" type=\\\"counter32\\\"/>\\n\" + \n                \"        <\/attributes>\\n\" + \n                \"      <\/uri>\\n\" + \n                \"    <\/uris>\\n\" + \n                \"  <\/http-collection>\\n\" + \n                \"<\/http-datacollection-config>\");\n    }","commit_id":"656e67bc06271c5304ed65b3429e05ae39b9d184","url":"https://github.com/OpenNMS/opennms"},{"original_method":"@SuppressWarnings(\"unchecked\")\n    private List<HttpCollectionAttribute> processResponse(final String responseBodyAsString, final HttpCollectionSet collectionSet) {\n        log().debug(\"processResponse: \");\n        List<HttpCollectionAttribute> butes = new LinkedList<HttpCollectionAttribute>();\n        Pattern p = Pattern.compile(collectionSet.getUriDef().getUrl().getMatches());\n        Matcher m = p.matcher(responseBodyAsString);\n        \n        final boolean matches = m.matches();\n        if (matches) {\n            log().debug(\"processResponse: found matching attributes: \"+matches);\n            List<Attrib> attribDefs = collectionSet.getUriDef().getAttributes().getAttribCollection();\n            \n            for (Attrib attribDef : attribDefs) {\n                HttpCollectionAttribute bute = new HttpCollectionAttribute(attribDef.getAlias(),\n                        attribDef.getType(), m.group(attribDef.getMatchGroup()));\n                log().debug(\"processResponse: adding found attribute: \"+bute);\n                butes.add(bute);\n            }\n        } else {\n            log().debug(\"processResponse: found matching attributes: \"+matches);\n        }\n        return butes;\n    }","id":16624,"modified_method":"@SuppressWarnings(\"unchecked\")\n    private List<HttpCollectionAttribute> processResponse(final String responseBodyAsString, final HttpCollectionSet collectionSet) {\n        log().debug(\"processResponse: \");\n        List<HttpCollectionAttribute> butes = new LinkedList<HttpCollectionAttribute>();\n        Pattern p = Pattern.compile(collectionSet.getUriDef().getUrl().getMatches());\n        Matcher m = p.matcher(responseBodyAsString);\n        \n        final boolean matches = m.matches();\n        if (matches) {\n            log().debug(\"processResponse: found matching attributes: \"+matches);\n            List<Attrib> attribDefs = collectionSet.getUriDef().getAttributes().getAttribCollection();\n            \n            for (Attrib attribDef : attribDefs) {\n                try {\n                    Number num = NumberFormat.getNumberInstance().parse(m.group(attribDef.getMatchGroup()));\n                    HttpCollectionAttribute bute = new HttpCollectionAttribute(attribDef.getAlias(), attribDef.getType(), num);\n                    log().debug(\"processResponse: adding found attribute: \"+bute);\n                    butes.add(bute);\n                } catch (ParseException e) {\n                    log().error(\"attribute \"+attribDef.getAlias()+\" failed to match a parsable number! Matched \"+m.group(attribDef.getMatchGroup())+\" instead.\");\n                }\n            }\n        } else {\n            log().debug(\"processResponse: found matching attributes: \"+matches);\n        }\n        return butes;\n    }","commit_id":"95658e983f5d5062b90cfeb3b21b94cc9611bcf1","url":"https://github.com/OpenNMS/opennms"},{"original_method":"HttpCollectionAttribute(String alias, String type, String value) {\n            m_alias = alias;\n            m_type= type;\n            m_value = value;\n        }","id":16625,"modified_method":"HttpCollectionAttribute(String alias, String type, Number value) {\n            m_alias = alias;\n            m_type= type;\n            m_value = value;\n        }","commit_id":"95658e983f5d5062b90cfeb3b21b94cc9611bcf1","url":"https://github.com/OpenNMS/opennms"},{"original_method":"private void persistResponse(final HttpCollectionSet collectionSet, final HttpClient client, final HttpMethod method) throws IOException, RrdException {\n        List<HttpCollectionAttribute> butes = processResponse(method.getResponseBodyAsString(), collectionSet);\n        if (butes.isEmpty()) {\n            log().warn(\"doCollection: no attributes defined for collection were found in response text matching regular expression '\" + collectionSet.getUriDef().getUrl().getMatches() + \"'\");\n            throw new HttpCollectorException(\"No attributes specified were found: \", client);\n        }\n        \n        String collectionName = collectionSet.getParameters().get(\"http-collection\");\n        RrdRepository rrdRepository = HttpCollectionConfigFactory.getInstance().getRrdRepository(collectionName);\n        ResourceIdentifier resource = new ResourceIdentifier() {\n\n            public String getOwnerName() {\n                return collectionSet.getAgent().getHostAddress();\n            }\n\n            public File getResourceDir(RrdRepository repository) {\n                return new File(repository.getRrdBaseDir(), Integer.toString(collectionSet.getAgent().getNodeId()));\n            }\n            \n        };\n        \n        log().info(\"doCollection: persisting \"+butes.size()+\" attributes\");\n        \n        for (HttpCollectionAttribute attribute : butes) {\n            PersistOperationBuilder builder = new PersistOperationBuilder(rrdRepository, resource, attribute.getName());\n            builder.declareAttribute(attribute);\n            log().debug(\"doCollection: setting attribute: \"+attribute);\n            builder.setAttributeValue(attribute, attribute.getValue());\n            builder.commit();\n        }\n    }","id":16626,"modified_method":"private void persistResponse(final HttpCollectionSet collectionSet, final HttpClient client, final HttpMethod method) throws IOException, RrdException {\n        List<HttpCollectionAttribute> butes = processResponse(method.getResponseBodyAsString(), collectionSet);\n        if (butes.isEmpty()) {\n            log().warn(\"doCollection: no attributes defined for collection were found in response text matching regular expression '\" + collectionSet.getUriDef().getUrl().getMatches() + \"'\");\n            throw new HttpCollectorException(\"No attributes specified were found: \", client);\n        }\n        \n        String collectionName = collectionSet.getParameters().get(\"http-collection\");\n        RrdRepository rrdRepository = HttpCollectionConfigFactory.getInstance().getRrdRepository(collectionName);\n        ResourceIdentifier resource = new ResourceIdentifier() {\n\n            public String getOwnerName() {\n                return collectionSet.getAgent().getHostAddress();\n            }\n\n            public File getResourceDir(RrdRepository repository) {\n                return new File(repository.getRrdBaseDir(), Integer.toString(collectionSet.getAgent().getNodeId()));\n            }\n            \n        };\n        \n        log().info(\"doCollection: persisting \"+butes.size()+\" attributes\");\n        \n        for (HttpCollectionAttribute attribute : butes) {\n            PersistOperationBuilder builder = new PersistOperationBuilder(rrdRepository, resource, attribute.getName());\n            builder.declareAttribute(attribute);\n            log().debug(\"doCollection: setting attribute: \"+attribute);\n            builder.setAttributeValue(attribute, attribute.getValueAsString());\n            builder.commit();\n        }\n    }","commit_id":"95658e983f5d5062b90cfeb3b21b94cc9611bcf1","url":"https://github.com/OpenNMS/opennms"},{"original_method":"@Override\n        public String toString() {\n            StringBuffer buffer = new StringBuffer();\n            buffer.append(\"HttpAttribute: \");\n            buffer.append(getName());\n            buffer.append(\":\");\n            buffer.append(getType());\n            buffer.append(\":\");\n            buffer.append(getValue());\n            return buffer.toString();\n        }","id":16627,"modified_method":"@Override\n        public String toString() {\n            StringBuffer buffer = new StringBuffer();\n            buffer.append(\"HttpAttribute: \");\n            buffer.append(getName());\n            buffer.append(\":\");\n            buffer.append(getType());\n            buffer.append(\":\");\n            buffer.append(getValueAsString());\n            return buffer.toString();\n        }","commit_id":"95658e983f5d5062b90cfeb3b21b94cc9611bcf1","url":"https://github.com/OpenNMS/opennms"},{"original_method":"public String getValue() {\n            return m_value;\n        }","id":16628,"modified_method":"public Number getValue() {\n            return m_value;\n        }","commit_id":"95658e983f5d5062b90cfeb3b21b94cc9611bcf1","url":"https://github.com/OpenNMS/opennms"},{"original_method":"private Reader getConfigRdr() {\n        return new StringReader(\"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n\" + \n                \"<http-datacollection-config  \\n\" + \n                \"    xmlns:http-dc=\\\"http://xmlns.opennms.org/xsd/config/http-datacollection\\\" \\n\" + \n                \"    xmlns:xsi=\\\"http://www.w3.org/2001/XMLSchema-instance\\\" \\n\" + \n                \"    xsi:schemaLocation=\\\"http://xmlns.opennms.org/xsd/config/http-datacollection \" +\n                \"      http://www.opennms.org/xsd/config/http-datacollection-config.xsd\\\" \\n\" + \n                \"    rrdRepository=\\\"@install.share.dir@/rrd/snmp/\\\" >\\n\" + \n                \"  <http-collection name=\\\"default\\\">\\n\" + \n                \"    <rrd step=\\\"300\\\">\\n\" + \n                \"      <rra>RRA:AVERAGE:0.5:1:8928<\/rra>\\n\" + \n                \"      <rra>RRA:AVERAGE:0.5:12:8784<\/rra>\\n\" + \n                \"      <rra>RRA:MIN:0.5:12:8784<\/rra>\\n\" + \n                \"      <rra>RRA:MAX:0.5:12:8784<\/rra>\\n\" + \n                \"    <\/rrd>\\n\" + \n                \"    <uris>\\n\" + \n                \"      <uri name=\\\"test-document-count\\\">\\n\" + \n                \"        <url path=\\\"/test/resources/httpcolltest.html\\\"\\n\" + \n                \"             user-agent=\\\"Mozilla/5.0 (Macintosh; U; PPC Mac OS X; en) \" +\n                \"AppleWebKit/412 (KHTML, like Gecko) Safari/412\\\" \\n\" + \n                \"             matches=\\\"(?s).*Document Count:\\\\s+([0-9]+).*\\\" response-range=\\\"100-399\\\" virtual-host=\\\"www.opennms.org\\\">\\n\" + \n                \"        <\/url>\\n\" + \n                \"        <attributes>\\n\" + \n                \"          <attrib alias=\\\"documentCount\\\" match-group=\\\"1\\\" type=\\\"counter32\\\"/>\\n\" + \n                \"        <\/attributes>\\n\" + \n                \"      <\/uri>\\n\" + \n                \"    <\/uris>\\n\" + \n                \"  <\/http-collection>\\n\" + \n                \"<\/http-datacollection-config>\");\n    }","id":16629,"modified_method":"private Reader getConfigRdr() {\n        return new StringReader(\"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n\" + \n                \"<http-datacollection-config  \\n\" + \n                \"    xmlns:http-dc=\\\"http://xmlns.opennms.org/xsd/config/http-datacollection\\\" \\n\" + \n                \"    xmlns:xsi=\\\"http://www.w3.org/2001/XMLSchema-instance\\\" \\n\" + \n                \"    xsi:schemaLocation=\\\"http://xmlns.opennms.org/xsd/config/http-datacollection \" +\n                \"      http://www.opennms.org/xsd/config/http-datacollection-config.xsd\\\" \\n\" + \n                \"    rrdRepository=\\\"@install.share.dir@/rrd/snmp/\\\" >\\n\" + \n                \"  <http-collection name=\\\"default\\\">\\n\" + \n                \"    <rrd step=\\\"300\\\">\\n\" + \n                \"      <rra>RRA:AVERAGE:0.5:1:8928<\/rra>\\n\" + \n                \"      <rra>RRA:AVERAGE:0.5:12:8784<\/rra>\\n\" + \n                \"      <rra>RRA:MIN:0.5:12:8784<\/rra>\\n\" + \n                \"      <rra>RRA:MAX:0.5:12:8784<\/rra>\\n\" + \n                \"    <\/rrd>\\n\" + \n                \"    <uris>\\n\" + \n                \"      <uri name=\\\"test-document-count\\\">\\n\" + \n                \"        <url path=\\\"/test/resources/httpcolltest.html\\\"\\n\" + \n                \"             user-agent=\\\"Mozilla/5.0 (Macintosh; U; PPC Mac OS X; en) \" +\n                \"AppleWebKit/412 (KHTML, like Gecko) Safari/412\\\" \\n\" + \n                \"             matches=\\\"(?s).*Document Count:\\\\s+([0-9,]+(\\\\.[0-9]*)?).*\\\" response-range=\\\"100-399\\\" virtual-host=\\\"www.opennms.org\\\">\\n\" + \n                \"        <\/url>\\n\" + \n                \"        <attributes>\\n\" + \n                \"          <attrib alias=\\\"documentCount\\\" match-group=\\\"1\\\" type=\\\"counter32\\\"/>\\n\" + \n                \"        <\/attributes>\\n\" + \n                \"      <\/uri>\\n\" + \n                \"    <\/uris>\\n\" + \n                \"  <\/http-collection>\\n\" + \n                \"<\/http-datacollection-config>\");\n    }","commit_id":"95658e983f5d5062b90cfeb3b21b94cc9611bcf1","url":"https://github.com/OpenNMS/opennms"},{"original_method":"HttpCollectionAttribute(String alias, String type, String value) {\n            m_alias = alias;\n            m_type= type;\n            m_value = value;\n        }","id":16630,"modified_method":"HttpCollectionAttribute(String alias, String type, Number value) {\n            m_alias = alias;\n            m_type= type;\n            m_value = value;\n        }","commit_id":"5e1cc07bba73fb31157c79a64b5778f9468cc06c","url":"https://github.com/OpenNMS/opennms"},{"original_method":"public String getValue() {\n            return m_value;\n        }","id":16631,"modified_method":"public Number getValue() {\n            return m_value;\n        }","commit_id":"5e1cc07bba73fb31157c79a64b5778f9468cc06c","url":"https://github.com/OpenNMS/opennms"},{"original_method":"@Override\n        public String toString() {\n            StringBuffer buffer = new StringBuffer();\n            buffer.append(\"HttpAttribute: \");\n            buffer.append(getName());\n            buffer.append(\":\");\n            buffer.append(getType());\n            buffer.append(\":\");\n            buffer.append(getValue());\n            return buffer.toString();\n        }","id":16632,"modified_method":"@Override\n        public String toString() {\n            StringBuffer buffer = new StringBuffer();\n            buffer.append(\"HttpAttribute: \");\n            buffer.append(getName());\n            buffer.append(\":\");\n            buffer.append(getType());\n            buffer.append(\":\");\n            buffer.append(getValueAsString());\n            return buffer.toString();\n        }","commit_id":"5e1cc07bba73fb31157c79a64b5778f9468cc06c","url":"https://github.com/OpenNMS/opennms"},{"original_method":"private void persistResponse(final HttpCollectionSet collectionSet, final HttpClient client, final HttpMethod method) throws IOException, RrdException {\n        List<HttpCollectionAttribute> butes = processResponse(method.getResponseBodyAsString(), collectionSet);\n        if (butes.isEmpty()) {\n            log().warn(\"doCollection: no attributes defined for collection were found in response text matching regular expression '\" + collectionSet.getUriDef().getUrl().getMatches() + \"'\");\n            throw new HttpCollectorException(\"No attributes specified were found: \", client);\n        }\n        \n        String collectionName = collectionSet.getParameters().get(\"http-collection\");\n        RrdRepository rrdRepository = HttpCollectionConfigFactory.getInstance().getRrdRepository(collectionName);\n        ResourceIdentifier resource = new ResourceIdentifier() {\n\n            public String getOwnerName() {\n                return collectionSet.getAgent().getHostAddress();\n            }\n\n            public File getResourceDir(RrdRepository repository) {\n                return new File(repository.getRrdBaseDir(), Integer.toString(collectionSet.getAgent().getNodeId()));\n            }\n            \n        };\n        \n        log().info(\"doCollection: persisting \"+butes.size()+\" attributes\");\n        \n        for (HttpCollectionAttribute attribute : butes) {\n            PersistOperationBuilder builder = new PersistOperationBuilder(rrdRepository, resource, attribute.getName());\n            builder.declareAttribute(attribute);\n            log().debug(\"doCollection: setting attribute: \"+attribute);\n            builder.setAttributeValue(attribute, attribute.getValue());\n            builder.commit();\n        }\n    }","id":16633,"modified_method":"private void persistResponse(final HttpCollectionSet collectionSet, final HttpClient client, final HttpMethod method) throws IOException, RrdException {\n        List<HttpCollectionAttribute> butes = processResponse(method.getResponseBodyAsString(), collectionSet);\n        if (butes.isEmpty()) {\n            log().warn(\"doCollection: no attributes defined for collection were found in response text matching regular expression '\" + collectionSet.getUriDef().getUrl().getMatches() + \"'\");\n            throw new HttpCollectorException(\"No attributes specified were found: \", client);\n        }\n        \n        String collectionName = collectionSet.getParameters().get(\"http-collection\");\n        RrdRepository rrdRepository = HttpCollectionConfigFactory.getInstance().getRrdRepository(collectionName);\n        ResourceIdentifier resource = new ResourceIdentifier() {\n\n            public String getOwnerName() {\n                return collectionSet.getAgent().getHostAddress();\n            }\n\n            public File getResourceDir(RrdRepository repository) {\n                return new File(repository.getRrdBaseDir(), Integer.toString(collectionSet.getAgent().getNodeId()));\n            }\n            \n        };\n        \n        log().info(\"doCollection: persisting \"+butes.size()+\" attributes\");\n        \n        for (HttpCollectionAttribute attribute : butes) {\n            PersistOperationBuilder builder = new PersistOperationBuilder(rrdRepository, resource, attribute.getName());\n            builder.declareAttribute(attribute);\n            log().debug(\"doCollection: setting attribute: \"+attribute);\n            builder.setAttributeValue(attribute, attribute.getValueAsString());\n            builder.commit();\n        }\n    }","commit_id":"5e1cc07bba73fb31157c79a64b5778f9468cc06c","url":"https://github.com/OpenNMS/opennms"},{"original_method":"@SuppressWarnings(\"unchecked\")\n    private List<HttpCollectionAttribute> processResponse(final String responseBodyAsString, final HttpCollectionSet collectionSet) {\n        log().debug(\"processResponse: \");\n        List<HttpCollectionAttribute> butes = new LinkedList<HttpCollectionAttribute>();\n        Pattern p = Pattern.compile(collectionSet.getUriDef().getUrl().getMatches());\n        Matcher m = p.matcher(responseBodyAsString);\n        \n        final boolean matches = m.matches();\n        if (matches) {\n            log().debug(\"processResponse: found matching attributes: \"+matches);\n            List<Attrib> attribDefs = collectionSet.getUriDef().getAttributes().getAttribCollection();\n            \n            for (Attrib attribDef : attribDefs) {\n                HttpCollectionAttribute bute = new HttpCollectionAttribute(attribDef.getAlias(),\n                        attribDef.getType(), m.group(attribDef.getMatchGroup()));\n                log().debug(\"processResponse: adding found attribute: \"+bute);\n                butes.add(bute);\n            }\n        } else {\n            log().debug(\"processResponse: found matching attributes: \"+matches);\n        }\n        return butes;\n    }","id":16634,"modified_method":"@SuppressWarnings(\"unchecked\")\n    private List<HttpCollectionAttribute> processResponse(final String responseBodyAsString, final HttpCollectionSet collectionSet) {\n        log().debug(\"processResponse: \");\n        List<HttpCollectionAttribute> butes = new LinkedList<HttpCollectionAttribute>();\n        Pattern p = Pattern.compile(collectionSet.getUriDef().getUrl().getMatches());\n        Matcher m = p.matcher(responseBodyAsString);\n        \n        final boolean matches = m.matches();\n        if (matches) {\n            log().debug(\"processResponse: found matching attributes: \"+matches);\n            List<Attrib> attribDefs = collectionSet.getUriDef().getAttributes().getAttribCollection();\n            \n            for (Attrib attribDef : attribDefs) {\n                try {\n                    Number num = NumberFormat.getNumberInstance().parse(m.group(attribDef.getMatchGroup()));\n                    HttpCollectionAttribute bute = new HttpCollectionAttribute(attribDef.getAlias(), attribDef.getType(), num);\n                    log().debug(\"processResponse: adding found attribute: \"+bute);\n                    butes.add(bute);\n                } catch (ParseException e) {\n                    log().error(\"attribute \"+attribDef.getAlias()+\" failed to match a parsable number! Matched \"+m.group(attribDef.getMatchGroup())+\" instead.\");\n                }\n            }\n        } else {\n            log().debug(\"processResponse: found matching attributes: \"+matches);\n        }\n        return butes;\n    }","commit_id":"5e1cc07bba73fb31157c79a64b5778f9468cc06c","url":"https://github.com/OpenNMS/opennms"},{"original_method":"private Reader getConfigRdr() {\n        return new StringReader(\"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n\" + \n                \"<http-datacollection-config  \\n\" + \n                \"    xmlns:http-dc=\\\"http://xmlns.opennms.org/xsd/config/http-datacollection\\\" \\n\" + \n                \"    xmlns:xsi=\\\"http://www.w3.org/2001/XMLSchema-instance\\\" \\n\" + \n                \"    xsi:schemaLocation=\\\"http://xmlns.opennms.org/xsd/config/http-datacollection \" +\n                \"      http://www.opennms.org/xsd/config/http-datacollection-config.xsd\\\" \\n\" + \n                \"    rrdRepository=\\\"@install.share.dir@/rrd/snmp/\\\" >\\n\" + \n                \"  <http-collection name=\\\"default\\\">\\n\" + \n                \"    <rrd step=\\\"300\\\">\\n\" + \n                \"      <rra>RRA:AVERAGE:0.5:1:8928<\/rra>\\n\" + \n                \"      <rra>RRA:AVERAGE:0.5:12:8784<\/rra>\\n\" + \n                \"      <rra>RRA:MIN:0.5:12:8784<\/rra>\\n\" + \n                \"      <rra>RRA:MAX:0.5:12:8784<\/rra>\\n\" + \n                \"    <\/rrd>\\n\" + \n                \"    <uris>\\n\" + \n                \"      <uri name=\\\"test-document-count\\\">\\n\" + \n                \"        <url path=\\\"/test/resources/httpcolltest.html\\\"\\n\" + \n                \"             user-agent=\\\"Mozilla/5.0 (Macintosh; U; PPC Mac OS X; en) \" +\n                \"AppleWebKit/412 (KHTML, like Gecko) Safari/412\\\" \\n\" + \n                \"             matches=\\\"(?s).*Document Count:\\\\s+([0-9]+).*\\\" response-range=\\\"100-399\\\" virtual-host=\\\"www.opennms.org\\\">\\n\" + \n                \"        <\/url>\\n\" + \n                \"        <attributes>\\n\" + \n                \"          <attrib alias=\\\"documentCount\\\" match-group=\\\"1\\\" type=\\\"counter32\\\"/>\\n\" + \n                \"        <\/attributes>\\n\" + \n                \"      <\/uri>\\n\" + \n                \"    <\/uris>\\n\" + \n                \"  <\/http-collection>\\n\" + \n                \"<\/http-datacollection-config>\");\n    }","id":16635,"modified_method":"private Reader getConfigRdr() {\n        return new StringReader(\"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n\" + \n                \"<http-datacollection-config  \\n\" + \n                \"    xmlns:http-dc=\\\"http://xmlns.opennms.org/xsd/config/http-datacollection\\\" \\n\" + \n                \"    xmlns:xsi=\\\"http://www.w3.org/2001/XMLSchema-instance\\\" \\n\" + \n                \"    xsi:schemaLocation=\\\"http://xmlns.opennms.org/xsd/config/http-datacollection \" +\n                \"      http://www.opennms.org/xsd/config/http-datacollection-config.xsd\\\" \\n\" + \n                \"    rrdRepository=\\\"@install.share.dir@/rrd/snmp/\\\" >\\n\" + \n                \"  <http-collection name=\\\"default\\\">\\n\" + \n                \"    <rrd step=\\\"300\\\">\\n\" + \n                \"      <rra>RRA:AVERAGE:0.5:1:8928<\/rra>\\n\" + \n                \"      <rra>RRA:AVERAGE:0.5:12:8784<\/rra>\\n\" + \n                \"      <rra>RRA:MIN:0.5:12:8784<\/rra>\\n\" + \n                \"      <rra>RRA:MAX:0.5:12:8784<\/rra>\\n\" + \n                \"    <\/rrd>\\n\" + \n                \"    <uris>\\n\" + \n                \"      <uri name=\\\"test-document-count\\\">\\n\" + \n                \"        <url path=\\\"/test/resources/httpcolltest.html\\\"\\n\" + \n                \"             user-agent=\\\"Mozilla/5.0 (Macintosh; U; PPC Mac OS X; en) \" +\n                \"AppleWebKit/412 (KHTML, like Gecko) Safari/412\\\" \\n\" + \n                \"             matches=\\\"(?s).*Document Count:\\\\s+([0-9,]+(\\\\.[0-9]*)?).*\\\" response-range=\\\"100-399\\\" virtual-host=\\\"www.opennms.org\\\">\\n\" + \n                \"        <\/url>\\n\" + \n                \"        <attributes>\\n\" + \n                \"          <attrib alias=\\\"documentCount\\\" match-group=\\\"1\\\" type=\\\"counter32\\\"/>\\n\" + \n                \"        <\/attributes>\\n\" + \n                \"      <\/uri>\\n\" + \n                \"    <\/uris>\\n\" + \n                \"  <\/http-collection>\\n\" + \n                \"<\/http-datacollection-config>\");\n    }","commit_id":"5e1cc07bba73fb31157c79a64b5778f9468cc06c","url":"https://github.com/OpenNMS/opennms"},{"original_method":"public FacetValue(String key, K value){\n    this.key = key;\n    this.value = value;\n  }","id":16636,"modified_method":"public FacetValue(String key, Integer value){\n    this.key = key;\n    this.value = value;\n  }","commit_id":"9ddb131f257168074ae681723a967ad2e7b91591","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"public void setValue(K value) {\n    this.value = value;\n  }","id":16637,"modified_method":"public void setValue(Integer value) {\n    this.value = value;\n  }","commit_id":"9ddb131f257168074ae681723a967ad2e7b91591","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"public K getValue() {\n    return value;\n  }","id":16638,"modified_method":"public Integer getValue() {\n    return value;\n  }","commit_id":"9ddb131f257168074ae681723a967ad2e7b91591","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"@CheckForNull\n  public Collection<String> getFacetKeys(String facetName) {\n    if (this.facets.containsKey(facetName)) {\n      List<String> keys = new ArrayList<String>();\n      for (FacetValue facetValue : facets.get(facetName)) {\n        keys.add(facetValue.getKey());\n      }\n      return keys;\n    }\n    return null;\n  }","id":16639,"modified_method":"@CheckForNull\n  public List<String> getFacetKeys(String facetName) {\n    if (this.facets.containsKey(facetName)) {\n      List<String> keys = new ArrayList<String>();\n      for (FacetValue facetValue : facets.get(facetName)) {\n        keys.add(facetValue.getKey());\n      }\n      return keys;\n    }\n    return null;\n  }","commit_id":"9ddb131f257168074ae681723a967ad2e7b91591","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"public Result(SearchResponse response) {\n    this.hits = new ArrayList<K>();\n    this.facets = new HashMap<String, List<FacetValue>>();\n\n    this.total = (int) response.getHits().totalHits();\n    this.timeInMillis = response.getTookInMillis();\n\n    for (SearchHit hit : response.getHits()) {\n      this.hits.add(getSearchResult(hit.getSource()));\n    }\n\n    if (response.getFacets() != null &&\n      !response.getFacets().facets().isEmpty()) {\n      for (Facet facet : response.getFacets().facets()) {\n        TermsFacet termFacet = (TermsFacet) facet;\n        List<FacetValue> facetValues = new ArrayList<FacetValue>();\n        for (TermsFacet.Entry facetValue : termFacet.getEntries()) {\n          facetValues.add(new FacetValue<Integer>(facetValue.getTerm().string(),\n            facetValue.getCount()));\n        }\n        this.facets.put(facet.getName(), facetValues);\n      }\n    }\n  }","id":16640,"modified_method":"public Result(SearchResponse response) {\n    this.hits = new ArrayList<K>();\n    this.facets = LinkedListMultimap.create();\n    this.total = (int) response.getHits().totalHits();\n    this.timeInMillis = response.getTookInMillis();\n\n    for (SearchHit hit : response.getHits()) {\n      this.hits.add(getSearchResult(hit.getSource()));\n    }\n\n    if (response.getAggregations() != null) {\n      for (Map.Entry<String, Aggregation> facet : response.getAggregations().asMap().entrySet()) {\n        Terms aggregation = (Terms) facet.getValue();\n        for (Terms.Bucket value : aggregation.getBuckets()) {\n          this.facets.put(facet.getKey(), new FacetValue(value.getKey(), (int) value.getDocCount()));\n        }\n      }\n    }\n  }","commit_id":"9ddb131f257168074ae681723a967ad2e7b91591","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"@CheckForNull\n  public List<FacetValue> getFacet(String facetName) {\n    return this.facets.get(facetName);\n  }","id":16641,"modified_method":"@CheckForNull\n  public Collection<FacetValue> getFacetValues(String facetName) {\n    return this.facets.get(facetName);\n  }","commit_id":"9ddb131f257168074ae681723a967ad2e7b91591","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"public Map<String, List<FacetValue>> getFacets() {\n    return this.facets;\n  }","id":16642,"modified_method":"public Map<String, Collection<FacetValue>> getFacets() {\n    return this.facets.asMap();\n  }","commit_id":"9ddb131f257168074ae681723a967ad2e7b91591","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"protected void setFacets(SearchRequestBuilder query) {\n    //TODO there are no aggregation in 0.9!!! Must use facet...\n\n     /* the Lang facet */\n    query.addFacet(FacetBuilders.termsFacet(\"languages\")\n      .field(RuleNormalizer.RuleField.LANGUAGE.key())\n      .size(10)\n      .global(true)\n      .order(TermsFacet.ComparatorType.COUNT));\n\n    /* the Tag facet */\n    query.addFacet(FacetBuilders.termsFacet(\"tags\")\n      .field(RuleNormalizer.RuleField.TAGS.key())\n      .size(10)\n      .global(true)\n      .order(TermsFacet.ComparatorType.COUNT));\n\n    /* the Repo facet */\n    query.addFacet(FacetBuilders.termsFacet(\"repositories\")\n      .field(RuleNormalizer.RuleField.REPOSITORY.key())\n      .size(10)\n      .global(true)\n      .order(TermsFacet.ComparatorType.COUNT));\n  }","id":16643,"modified_method":"protected void setFacets(SearchRequestBuilder query) {\n\n          /* the Lang facet */\n    query.addAggregation(AggregationBuilders\n      .terms(\"Languages\")\n      .field(RuleNormalizer.RuleField.LANGUAGE.key())\n      .order(Terms.Order.count(false))\n      .size(10)\n      .minDocCount(0));\n\n     /* the Tag facet */\n    query.addAggregation(AggregationBuilders\n      .terms(\"Tags\")\n      .field(RuleNormalizer.RuleField.SYSTEM_TAGS.key())\n      .field(RuleNormalizer.RuleField.TAGS.key())\n      .order(Terms.Order.count(false))\n      .size(10)\n      .minDocCount(0));\n\n     /* the Repo facet */\n    query.addAggregation(AggregationBuilders\n      .terms(\"Repositories\")\n      .field(RuleNormalizer.RuleField.REPOSITORY.key())\n      .order(Terms.Order.count(false))\n      .size(10)\n      .minDocCount(0));\n\n  }","commit_id":"9ddb131f257168074ae681723a967ad2e7b91591","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"@Test\n  public void global_facet_on_repositories() {\n    dao.insert(newRuleDto(RuleKey.of(\"javascript\", \"S001\")).setRuleKey(\"X001\"), dbSession);\n    dao.insert(newRuleDto(RuleKey.of(\"php\", \"S001\")), dbSession);\n    dao.insert(newRuleDto(RuleKey.of(\"javascript\", \"S002\")).setRuleKey(\"X002\"), dbSession);\n    dbSession.commit();\n    index.refresh();\n\n    // should not have any facet!\n    RuleQuery query = new RuleQuery();\n    Result result = index.search(query, new QueryOptions().setFacet(false));\n    assertThat(result.getFacets()).isEmpty();\n\n    // Repositories Facet is preset\n    result = index.search(query, new QueryOptions().setFacet(true));\n\n    assertThat(result.getFacets()).isNotNull();\n    assertThat(result.getFacets()).hasSize(3);\n    List<FacetValue> repoFacets = result.getFacet(\"repositories\");\n    assertThat(repoFacets).hasSize(2);\n    assertThat(repoFacets.get(0).getKey()).isEqualTo(\"javascript\");\n    assertThat(repoFacets.get(0).getValue()).isEqualTo(2);\n    assertThat(repoFacets.get(1).getKey()).isEqualTo(\"php\");\n    assertThat(repoFacets.get(1).getValue()).isEqualTo(1);\n  }","id":16644,"modified_method":"@Test\n  public void global_facet_on_repositories() {\n    dao.insert(newRuleDto(RuleKey.of(\"javascript\", \"S001\")).setRuleKey(\"X001\"), dbSession);\n    dao.insert(newRuleDto(RuleKey.of(\"php\", \"S001\")), dbSession);\n    dao.insert(newRuleDto(RuleKey.of(\"javascript\", \"S002\")).setRuleKey(\"X002\")\n      .setTags(ImmutableSet.of(\"tag1\")), dbSession);\n    dbSession.commit();\n    index.refresh();\n\n    // should not have any facet!\n    RuleQuery query = new RuleQuery();\n    Result result = index.search(query, new QueryOptions().setFacet(false));\n    assertThat(result.getFacets()).isEmpty();\n\n    // Repositories Facet is preset\n    result = index.search(query, new QueryOptions().setFacet(true));\n\n    assertThat(result.getFacets()).isNotNull();\n    assertThat(result.getFacets()).hasSize(3);\n    Collection<FacetValue> repoFacets = result.getFacetValues(\"Repositories\");\n    assertThat(repoFacets).hasSize(2);\n    assertThat(Iterables.get(repoFacets, 0).getKey()).isEqualTo(\"javascript\");\n    assertThat(Iterables.get(repoFacets, 0).getValue()).isEqualTo(2);\n    assertThat(Iterables.get(repoFacets, 1).getKey()).isEqualTo(\"php\");\n    assertThat(Iterables.get(repoFacets, 1).getValue()).isEqualTo(1);\n  }","commit_id":"9ddb131f257168074ae681723a967ad2e7b91591","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"private void writeFacets(RuleResult results, JsonWriter json) {\n    json.name(\"facets\").beginArray();\n    for (Map.Entry<String, List<FacetValue>> facet : results.getFacets().entrySet()) {\n      json.beginObject();\n      json.prop(\"name\", facet.getKey());\n      json.name(\"values\").beginArray();\n      for (FacetValue facetValue : facet.getValue()) {\n        json.beginObject();\n        json.prop(\"val\", facetValue.getKey());\n        json.prop(\"count\", (Integer) facetValue.getValue());\n        json.endObject();\n      }\n      json.endArray();\n      json.endObject();\n    }\n    json.endArray();\n  }","id":16645,"modified_method":"private void writeFacets(RuleResult results, JsonWriter json) {\n    json.name(\"facets\").beginArray();\n    for (Map.Entry<String, Collection<FacetValue>> facet : results.getFacets().entrySet()) {\n      System.out.println(\"facet = \" + facet);\n      json.beginObject();\n      json.prop(\"name\", facet.getKey());\n      json.name(\"values\").beginArray();\n      for (FacetValue facetValue : facet.getValue()) {\n        json.beginObject();\n        json.prop(\"val\", facetValue.getKey());\n        json.prop(\"count\", (Integer) facetValue.getValue());\n        json.endObject();\n      }\n      json.endArray();\n      json.endObject();\n    }\n    json.endArray();\n  }","commit_id":"9ddb131f257168074ae681723a967ad2e7b91591","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"@NotNull\n  public String getText() {\n    if (showContainingClass) {\n      final PsiClass containingClass = myMember.getContainingClass();\n      String containingClassName;\n      if (containingClass != null) {\n        containingClassName = containingClass.getName() + \".\";\n      }\n      else {\n        containingClassName = \"\";\n      }\n      String modifierText = VisibilityUtil.toPresentableText(myModifier);\n\n      return GroovyBundle.message(\"change.modifier\", containingClassName + myMember.getName(), modifierText);\n    }\n    else {\n      return GroovyBundle.message(\"change.modifier\", myMember.getName(), myModifier);\n    }\n  }","id":16646,"modified_method":"@NotNull\n  public String getText() {\n    String name;\n    if (myShowContainingClass) {\n      final PsiClass containingClass = myMember.getContainingClass();\n      String containingClassName;\n      if (containingClass != null) {\n        containingClassName = containingClass.getName() + \".\";\n      }\n      else {\n        containingClassName = \"\";\n      }\n\n      name = containingClassName + myMember.getName();\n    }\n    else {\n      name = myMember.getName();\n    }\n    String modifierText = VisibilityUtil.toPresentableText(myModifier);\n\n    if (myDoSet) {\n      return GroovyBundle.message(\"change.modifier\", name, modifierText);\n    }\n    else {\n      return GroovyBundle.message(\"change.modifier.not\", name, modifierText);\n    }\n  }","commit_id":"78f9b956b322c21c1925fe379f14aae988c07f9f","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public boolean isAvailable(@NotNull Project project, Editor editor, PsiFile file) {\n    final PsiReference ref = file.findReferenceAt(editor.getCaretModel().getOffset());\n    if (ref == null) return false;\n    final PsiElement element = ref.getElement();\n    if (element instanceof GrReferenceElement) {\n      final GroovyResolveResult resolveResult = ((GrReferenceElement)element).advancedResolve();\n      if (!resolveResult.isAccessible() && resolveResult.getElement() instanceof PsiMember) {\n        return true;\n      }\n    }\n    return false;\n  }","id":16647,"modified_method":"public boolean isAvailable(@NotNull Project project, Editor editor, PsiFile file) {\n    return myModifierList != null && myModifierList.isValid();\n  }","commit_id":"78f9b956b322c21c1925fe379f14aae988c07f9f","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public GrModifierFix(PsiMember member, String modifier, boolean showContainingClass) {\n    myMember = member;\n    myModifier = modifier;\n    this.showContainingClass = showContainingClass;\n  }","id":16648,"modified_method":"public GrModifierFix(@NotNull PsiMember member,\n                       @NotNull PsiModifierList modifierList,\n                       String modifier,\n                       boolean showContainingClass,\n                       boolean doSet) {\n    myMember = member;\n    myModifier = modifier;\n    myShowContainingClass = showContainingClass;\n    myModifierList = modifierList;\n    myDoSet = doSet;\n  }","commit_id":"78f9b956b322c21c1925fe379f14aae988c07f9f","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void invoke(@NotNull Project project, Editor editor, PsiFile file) throws IncorrectOperationException {\n    final PsiModifierList list = myMember.getModifierList();\n    if (list != null) {\n      list.setModifierProperty(myModifier, true);\n    }\n  }","id":16649,"modified_method":"public void invoke(@NotNull Project project, Editor editor, PsiFile file) throws IncorrectOperationException {\n    myModifierList.setModifierProperty(myModifier, myDoSet);\n  }","commit_id":"78f9b956b322c21c1925fe379f14aae988c07f9f","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private void setModifierPropertyInternal(String name, boolean doSet) {\n    if (doSet) {\n      final ASTNode modifierNode = GroovyPsiElementFactory.getInstance(getProject()).createModifierFromText(name).getNode();\n      addInternal(modifierNode, modifierNode, null, null);\n    }\n    else {\n      final PsiElement[] modifiers = findChildrenByType(TokenSets.MODIFIERS, PsiElement.class);\n      for (PsiElement modifier : modifiers) {\n        if (name.equals(modifier.getText())) {\n          getNode().removeChild(modifier.getNode());\n        }\n      }\n    }\n  }","id":16650,"modified_method":"private void setModifierPropertyInternal(String name, boolean doSet) {\n    if (doSet) {\n      final ASTNode modifierNode = GroovyPsiElementFactory.getInstance(getProject()).createModifierFromText(name).getNode();\n      addInternal(modifierNode, modifierNode, null, null);\n    }\n    else {\n      final PsiElement[] modifiers = findChildrenByType(TokenSets.MODIFIERS, PsiElement.class);\n      for (PsiElement modifier : modifiers) {\n        if (name.equals(modifier.getText())) {\n          deleteChildRange(modifier, modifier);\n          break;\n        }\n      }\n    }\n  }","commit_id":"78f9b956b322c21c1925fe379f14aae988c07f9f","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private static void checkTypeDefinitionModifiers(AnnotationHolder holder, GrTypeDefinition typeDefinition) {\n    PsiModifierList modifiersList = typeDefinition.getModifierList();\n\n    if (modifiersList == null) return;\n\n    /**** class ****/\n    checkAccessModifiers(holder, modifiersList);\n\n    PsiClassType[] extendsListTypes = typeDefinition.getExtendsListTypes();\n\n    for (PsiClassType classType : extendsListTypes) {\n      PsiClass psiClass = classType.resolve();\n\n      if (psiClass != null) {\n        PsiModifierList modifierList = psiClass.getModifierList();\n        if (modifierList != null) {\n          if (modifierList.hasExplicitModifier(GrModifier.FINAL)) {\n            holder.createErrorAnnotation(typeDefinition.getNameIdentifierGroovy(), GroovyBundle.message(\"final.class.cannot.be.extended\"));\n          }\n        }\n      }\n    }\n\n    if (modifiersList.hasExplicitModifier(GrModifier.ABSTRACT) && modifiersList.hasExplicitModifier(GrModifier.FINAL)) {\n      holder.createErrorAnnotation(modifiersList, GroovyBundle.message(\"illegal.combination.of.modifiers.abstract.and.final\"));\n    }\n\n    if (modifiersList.hasExplicitModifier(GrModifier.TRANSIENT)) {\n      holder.createErrorAnnotation(modifiersList, GroovyBundle.message(\"modifier.transient.not.allowed.here\"));\n    }\n    if (modifiersList.hasExplicitModifier(GrModifier.VOLATILE)) {\n      holder.createErrorAnnotation(modifiersList, GroovyBundle.message(\"modifier.volatile.not.allowed.here\"));\n    }\n\n    /**** interface ****/\n    if (typeDefinition.isInterface()) {\n      if (modifiersList.hasExplicitModifier(GrModifier.FINAL)) {\n        holder.createErrorAnnotation(modifiersList, GroovyBundle.message(\"intarface.cannot.have.modifier.final\"));\n      }\n\n      if (modifiersList.hasExplicitModifier(GrModifier.VOLATILE)) {\n        holder.createErrorAnnotation(modifiersList, GroovyBundle.message(\"modifier.volatile.not.allowed.here\"));\n      }\n\n      if (modifiersList.hasExplicitModifier(GrModifier.TRANSIENT)) {\n        holder.createErrorAnnotation(modifiersList, GroovyBundle.message(\"modifier.transient.not.allowed.here\"));\n      }\n    }\n\n    checkStaticDeclarationsInInnerClass(typeDefinition, holder);\n  }","id":16651,"modified_method":"private static void checkTypeDefinitionModifiers(AnnotationHolder holder, GrTypeDefinition typeDefinition) {\n    GrModifierList modifiersList = typeDefinition.getModifierList();\n\n    if (modifiersList == null) return;\n\n    /**** class ****/\n    checkAccessModifiers(holder, modifiersList, typeDefinition);\n    checkDuplicateModifiers(holder, modifiersList, typeDefinition);\n\n    PsiClassType[] extendsListTypes = typeDefinition.getExtendsListTypes();\n\n    for (PsiClassType classType : extendsListTypes) {\n      PsiClass psiClass = classType.resolve();\n\n      if (psiClass != null) {\n        PsiModifierList modifierList = psiClass.getModifierList();\n        if (modifierList != null) {\n          if (modifierList.hasExplicitModifier(GrModifier.FINAL)) {\n            final Annotation annotation = holder\n              .createErrorAnnotation(typeDefinition.getNameIdentifierGroovy(), GroovyBundle.message(\"final.class.cannot.be.extended\"));\n            annotation.registerFix(new GrModifierFix(typeDefinition, modifiersList, GrModifier.FINAL, false, false));\n          }\n        }\n      }\n    }\n\n    if (modifiersList.hasExplicitModifier(GrModifier.ABSTRACT) && modifiersList.hasExplicitModifier(GrModifier.FINAL)) {\n      final Annotation annotation =\n        holder.createErrorAnnotation(modifiersList, GroovyBundle.message(\"illegal.combination.of.modifiers.abstract.and.final\"));\n      annotation.registerFix(new GrModifierFix(typeDefinition, modifiersList, GrModifier.FINAL, false, false));\n      annotation.registerFix(new GrModifierFix(typeDefinition, modifiersList, GrModifier.ABSTRACT, false, false));\n\n    }\n\n    if (modifiersList.hasExplicitModifier(GrModifier.TRANSIENT)) {\n      final Annotation annotation =\n        holder.createErrorAnnotation(modifiersList, GroovyBundle.message(\"modifier.transient.not.allowed.here\"));\n      annotation.registerFix(new GrModifierFix(typeDefinition, modifiersList, GrModifier.TRANSIENT, false, false));\n    }\n    if (modifiersList.hasExplicitModifier(GrModifier.VOLATILE)) {\n      final Annotation annotation = holder.createErrorAnnotation(modifiersList, GroovyBundle.message(\"modifier.volatile.not.allowed.here\"));\n      annotation.registerFix(new GrModifierFix(typeDefinition, modifiersList, GrModifier.VOLATILE, false, false));\n    }\n\n    /**** interface ****/\n    if (typeDefinition.isInterface()) {\n      if (modifiersList.hasExplicitModifier(GrModifier.FINAL)) {\n        final Annotation annotation =\n          holder.createErrorAnnotation(modifiersList, GroovyBundle.message(\"intarface.cannot.have.modifier.final\"));\n        annotation.registerFix(new GrModifierFix(typeDefinition, modifiersList, GrModifier.FINAL, false, false));\n      }\n    }\n\n    checkStaticDeclarationsInInnerClass(typeDefinition, holder);\n  }","commit_id":"78f9b956b322c21c1925fe379f14aae988c07f9f","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private static void checkStaticDeclarationsInInnerClass(GrMember classMember, AnnotationHolder holder) {\n    final PsiClass containingClass = classMember.getContainingClass();\n    if (containingClass == null) return;\n    if (com.intellij.psi.util.PsiUtil.isInnerClass(containingClass)) {\n      if (classMember.hasModifierProperty(GrModifier.STATIC)) {\n        final PsiElement modifier = findModifierStatic(classMember);\n        if (modifier != null) {\n          holder.createErrorAnnotation(modifier, GroovyBundle.message(\"cannot.have.static.declarations\"));\n        }\n      }\n    }\n  }","id":16652,"modified_method":"private static void checkStaticDeclarationsInInnerClass(GrMember classMember, AnnotationHolder holder) {\n    final PsiClass containingClass = classMember.getContainingClass();\n    if (containingClass == null) return;\n    if (com.intellij.psi.util.PsiUtil.isInnerClass(containingClass)) {\n      if (classMember.hasModifierProperty(GrModifier.STATIC)) {\n        final PsiElement modifier = findModifierStatic(classMember);\n        if (modifier != null) {\n          final Annotation annotation = holder.createErrorAnnotation(modifier, GroovyBundle.message(\"cannot.have.static.declarations\"));\n          annotation.registerFix(new GrModifierFix(classMember, classMember.getModifierList(), GrModifier.STATIC, true, false));\n        }\n      }\n    }\n  }","commit_id":"78f9b956b322c21c1925fe379f14aae988c07f9f","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private static void checkAccessModifiers(AnnotationHolder holder, @NotNull PsiModifierList modifierList) {\n    boolean hasPrivate = modifierList.hasExplicitModifier(GrModifier.PRIVATE);\n    boolean hasPublic = modifierList.hasExplicitModifier(GrModifier.PUBLIC);\n    boolean hasProtected = modifierList.hasExplicitModifier(GrModifier.PROTECTED);\n\n    if (hasPrivate && hasPublic || hasPrivate && hasProtected || hasPublic && hasProtected) {\n      holder.createErrorAnnotation(modifierList, GroovyBundle.message(\"illegal.combination.of.modifiers\"));\n    }\n  }","id":16653,"modified_method":"private static void checkAccessModifiers(AnnotationHolder holder, @NotNull PsiModifierList modifierList, PsiMember member) {\n    boolean hasPrivate = modifierList.hasExplicitModifier(GrModifier.PRIVATE);\n    boolean hasPublic = modifierList.hasExplicitModifier(GrModifier.PUBLIC);\n    boolean hasProtected = modifierList.hasExplicitModifier(GrModifier.PROTECTED);\n\n    if (hasPrivate && hasPublic || hasPrivate && hasProtected || hasPublic && hasProtected) {\n      final Annotation annotation = holder.createErrorAnnotation(modifierList, GroovyBundle.message(\"illegal.combination.of.modifiers\"));\n      if (hasPrivate) {\n        annotation.registerFix(new GrModifierFix(member, modifierList, GrModifier.PRIVATE, false, false));\n      }\n      if (hasProtected) {\n        annotation.registerFix(new GrModifierFix(member, modifierList, GrModifier.PROTECTED, false, false));\n      }\n      if (hasPublic) {\n        annotation.registerFix(new GrModifierFix(member, modifierList, GrModifier.PUBLIC, false, false));\n      }\n    }\n  }","commit_id":"78f9b956b322c21c1925fe379f14aae988c07f9f","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private static void checkMethodDefinitionModifiers(AnnotationHolder holder, GrMethod method) {\n    final PsiModifierList modifiersList = method.getModifierList();\n    checkAccessModifiers(holder, modifiersList);\n\n    //script methods\n    boolean isMethodAbstract = modifiersList.hasExplicitModifier(GrModifier.ABSTRACT);\n    final boolean isMethodStatic = modifiersList.hasExplicitModifier(GrModifier.STATIC);\n    if (method.getParent() instanceof GroovyFileBase) {\n      if (isMethodAbstract) {\n        holder.createErrorAnnotation(modifiersList, GroovyBundle.message(\"script.cannot.have.modifier.abstract\"));\n      }\n\n      if (modifiersList.hasExplicitModifier(GrModifier.NATIVE)) {\n        holder.createErrorAnnotation(modifiersList, GroovyBundle.message(\"script.cannot.have.modifier.native\"));\n      }\n    }\n    else  //type definition methods\n      if (method.getParent() != null && method.getParent().getParent() instanceof GrTypeDefinition) {\n        GrTypeDefinition containingTypeDef = ((GrTypeDefinition)method.getParent().getParent());\n\n        //interface\n        if (containingTypeDef.isInterface()) {\n          if (isMethodStatic) {\n            holder.createErrorAnnotation(modifiersList, GroovyBundle.message(\"interface.must.have.no.static.method\"));\n          }\n\n          if (modifiersList.hasExplicitModifier(GrModifier.PRIVATE)) {\n            holder.createErrorAnnotation(modifiersList, GroovyBundle.message(\"interface.must.have.no.private.method\"));\n          }\n\n        }\n        else if (containingTypeDef.isEnum()) {\n          //enumeration\n          //todo\n        }\n        else if (containingTypeDef.isAnnotationType()) {\n          //annotation\n          //todo\n        }\n        else if (containingTypeDef.isAnonymous()) {\n          //anonymous class\n          if (isMethodStatic) {\n            holder.createErrorAnnotation(modifiersList, GroovyBundle.message(\"static.declaration.in.inner.class\"));\n          }\n          if (method.isConstructor()) {\n            holder.createErrorAnnotation(method.getNameIdentifierGroovy(),\n                                         GroovyBundle.message(\"constructors.are.not.allowed.in.anonymous.class\"));\n          }\n          if (isMethodAbstract) {\n            holder.createErrorAnnotation(modifiersList, GroovyBundle.message(\"not.abstract.class.cannot.have.abstract.method\"));\n          }\n        }\n        else {\n          //class\n          PsiModifierList typeDefModifiersList = containingTypeDef.getModifierList();\n          LOG.assertTrue(typeDefModifiersList != null, \"modifiers list must be not null\");\n\n          if (!typeDefModifiersList.hasExplicitModifier(GrModifier.ABSTRACT)) {\n            if (isMethodAbstract) {\n              holder.createErrorAnnotation(modifiersList, GroovyBundle.message(\"not.abstract.class.cannot.have.abstract.method\"));\n            }\n          }\n\n          if (!isMethodAbstract) {\n            if (method.getBlock() == null) {\n              holder.createErrorAnnotation(method.getNameIdentifierGroovy(), GroovyBundle.message(\"not.abstract.method.should.have.body\"));\n            }\n          }\n          if (isMethodStatic) {\n            checkStaticDeclarationsInInnerClass(method, holder);\n          }\n        }\n      }\n  }","id":16654,"modified_method":"private static void checkMethodDefinitionModifiers(AnnotationHolder holder, GrMethod method) {\n    final GrModifierList modifiersList = method.getModifierList();\n    checkAccessModifiers(holder, modifiersList, method);\n    checkDuplicateModifiers(holder, modifiersList, method);\n\n    //script methods\n    boolean isMethodAbstract = modifiersList.hasExplicitModifier(GrModifier.ABSTRACT);\n    final boolean isMethodStatic = modifiersList.hasExplicitModifier(GrModifier.STATIC);\n    if (method.getParent() instanceof GroovyFileBase) {\n      if (isMethodAbstract) {\n        final Annotation annotation =\n          holder.createErrorAnnotation(modifiersList, GroovyBundle.message(\"script.cannot.have.modifier.abstract\"));\n        registerAbstractMethodFix(annotation, method, false);\n      }\n\n      if (modifiersList.hasExplicitModifier(GrModifier.NATIVE)) {\n        final Annotation annotation =\n          holder.createErrorAnnotation(modifiersList, GroovyBundle.message(\"script.cannot.have.modifier.native\"));\n        annotation.registerFix(new GrModifierFix(method, modifiersList, GrModifier.NATIVE, false, false));\n      }\n    }\n    else  //type definition methods\n      if (method.getParent() != null && method.getParent().getParent() instanceof GrTypeDefinition) {\n        GrTypeDefinition containingTypeDef = ((GrTypeDefinition)method.getParent().getParent());\n\n        //interface\n        if (containingTypeDef.isInterface()) {\n          if (isMethodStatic) {\n            final Annotation annotation =\n              holder.createErrorAnnotation(modifiersList, GroovyBundle.message(\"interface.must.have.no.static.method\"));\n            annotation.registerFix(new GrModifierFix(method, modifiersList, GrModifier.STATIC, true, false));\n          }\n\n          if (modifiersList.hasExplicitModifier(GrModifier.PRIVATE)) {\n            final Annotation annotation =\n              holder.createErrorAnnotation(modifiersList, GroovyBundle.message(\"interface.must.have.no.private.method\"));\n            annotation.registerFix(new GrModifierFix(method, modifiersList, GrModifier.PRIVATE, true, false));\n          }\n\n        }\n        else if (containingTypeDef.isEnum()) {\n          //enumeration\n          //todo\n        }\n        else if (containingTypeDef.isAnnotationType()) {\n          //annotation\n          //todo\n        }\n        else if (containingTypeDef.isAnonymous()) {\n          //anonymous class\n          if (isMethodStatic) {\n            final Annotation annotation =\n              holder.createErrorAnnotation(modifiersList, GroovyBundle.message(\"static.declaration.in.inner.class\"));\n            annotation.registerFix(new GrModifierFix(method, modifiersList, GrModifier.STATIC, false, false));\n          }\n          if (method.isConstructor()) {\n            holder.createErrorAnnotation(method.getNameIdentifierGroovy(),\n                                         GroovyBundle.message(\"constructors.are.not.allowed.in.anonymous.class\"));\n          }\n          if (isMethodAbstract) {\n            final Annotation annotation =\n              holder.createErrorAnnotation(modifiersList, GroovyBundle.message(\"anonymous.class.cannot.have.abstract.method\"));\n            registerAbstractMethodFix(annotation, method, false);\n          }\n        }\n        else {\n          //class\n          PsiModifierList typeDefModifiersList = containingTypeDef.getModifierList();\n          LOG.assertTrue(typeDefModifiersList != null, \"modifiers list must be not null\");\n\n          if (!typeDefModifiersList.hasExplicitModifier(GrModifier.ABSTRACT)) {\n            if (isMethodAbstract) {\n              final Annotation annotation =\n                holder.createErrorAnnotation(modifiersList, GroovyBundle.message(\"only.abstract.class.can.have.abstract.method\"));\n              registerAbstractMethodFix(annotation, method, true);\n            }\n          }\n\n          if (!isMethodAbstract) {\n            if (method.getBlock() == null) {\n              final Annotation annotation = holder\n                .createErrorAnnotation(method.getNameIdentifierGroovy(), GroovyBundle.message(\"not.abstract.method.should.have.body\"));\n              annotation.registerFix(new AddMethodBodyFix(method));\n\n            }\n          }\n          if (isMethodStatic) {\n            checkStaticDeclarationsInInnerClass(method, holder);\n          }\n        }\n      }\n  }","commit_id":"78f9b956b322c21c1925fe379f14aae988c07f9f","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private static void registerAccessFix(Annotation annotation, GrReferenceExpression place, PsiMember refElement) {\n    if (refElement instanceof PsiCompiledElement) return;\n    PsiModifierList modifierList = refElement.getModifierList();\n    if (modifierList == null) return;\n\n    try {\n      Project project = refElement.getProject();\n      JavaPsiFacade facade = JavaPsiFacade.getInstance(project);\n      PsiModifierList modifierListCopy = facade.getElementFactory().createFieldFromText(\"int a;\", null).getModifierList();\n      modifierListCopy.setModifierProperty(PsiModifier.STATIC, modifierList.hasModifierProperty(PsiModifier.STATIC));\n      @Modifier String minModifier = PsiModifier.PROTECTED;\n      if (refElement.hasModifierProperty(PsiModifier.PROTECTED)) {\n        minModifier = PsiModifier.PUBLIC;\n      }\n      String[] modifiers = {PsiModifier.PROTECTED, PsiModifier.PUBLIC,};\n      PsiClass accessObjectClass = PsiTreeUtil.getParentOfType(place, PsiClass.class, false);\n      if (accessObjectClass == null) {\n        accessObjectClass = ((GroovyFile)place.getContainingFile()).getScriptClass();\n      }\n      for (int i = ArrayUtil.indexOf(modifiers, minModifier); i < modifiers.length; i++) {\n        String modifier = modifiers[i];\n        modifierListCopy.setModifierProperty(modifier, true);\n        if (facade.getResolveHelper().isAccessible(refElement, modifierListCopy, place, accessObjectClass, null)) {\n          IntentionAction fix = new GrModifierFix(refElement, modifier, true);\n          annotation.registerFix(fix);\n        }\n      }\n    }\n    catch (IncorrectOperationException e) {\n      LOG.error(e);\n    }\n  }","id":16655,"modified_method":"private static void registerAccessFix(Annotation annotation, GrReferenceExpression place, PsiMember refElement) {\n    if (refElement instanceof PsiCompiledElement) return;\n    PsiModifierList modifierList = refElement.getModifierList();\n    if (modifierList == null) return;\n\n    try {\n      Project project = refElement.getProject();\n      JavaPsiFacade facade = JavaPsiFacade.getInstance(project);\n      PsiModifierList modifierListCopy = facade.getElementFactory().createFieldFromText(\"int a;\", null).getModifierList();\n      modifierListCopy.setModifierProperty(PsiModifier.STATIC, modifierList.hasModifierProperty(PsiModifier.STATIC));\n      @Modifier String minModifier = PsiModifier.PROTECTED;\n      if (refElement.hasModifierProperty(PsiModifier.PROTECTED)) {\n        minModifier = PsiModifier.PUBLIC;\n      }\n      String[] modifiers = {PsiModifier.PROTECTED, PsiModifier.PUBLIC,};\n      PsiClass accessObjectClass = PsiTreeUtil.getParentOfType(place, PsiClass.class, false);\n      if (accessObjectClass == null) {\n        accessObjectClass = ((GroovyFile)place.getContainingFile()).getScriptClass();\n      }\n      for (int i = ArrayUtil.indexOf(modifiers, minModifier); i < modifiers.length; i++) {\n        String modifier = modifiers[i];\n        modifierListCopy.setModifierProperty(modifier, true);\n        if (facade.getResolveHelper().isAccessible(refElement, modifierListCopy, place, accessObjectClass, null)) {\n          IntentionAction fix = new GrModifierFix(refElement, refElement.getModifierList(), modifier, true, true);\n          annotation.registerFix(fix);\n        }\n      }\n    }\n    catch (IncorrectOperationException e) {\n      LOG.error(e);\n    }\n  }","commit_id":"78f9b956b322c21c1925fe379f14aae988c07f9f","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Override\n  public void visitVariableDeclaration(GrVariableDeclaration variableDeclaration) {\n\n    PsiElement parent = variableDeclaration.getParent();\n    assert parent != null;\n\n    PsiElement typeDef = parent.getParent();\n    if (typeDef != null && typeDef instanceof GrTypeDefinition) {\n      PsiModifierList modifiersList = variableDeclaration.getModifierList();\n      checkAccessModifiers(myHolder, modifiersList);\n\n      if (modifiersList.hasExplicitModifier(GrModifier.VOLATILE) && modifiersList.hasExplicitModifier(GrModifier.FINAL)) {\n        myHolder.createErrorAnnotation(modifiersList, GroovyBundle.message(\"illegal.combination.of.modifiers.volatile.and.final\"));\n      }\n\n      if (modifiersList.hasExplicitModifier(GrModifier.NATIVE)) {\n        myHolder.createErrorAnnotation(modifiersList, GroovyBundle.message(\"variable.cannot.be.native\"));\n      }\n\n      if (modifiersList.hasExplicitModifier(GrModifier.ABSTRACT)) {\n        myHolder.createErrorAnnotation(modifiersList, GroovyBundle.message(\"variable.cannot.be.abstract\"));\n      }\n    }\n  }","id":16656,"modified_method":"@Override\n  public void visitVariableDeclaration(GrVariableDeclaration variableDeclaration) {\n\n    PsiElement parent = variableDeclaration.getParent();\n    assert parent != null;\n\n    PsiElement typeDef = parent.getParent();\n    if (typeDef != null && typeDef instanceof GrTypeDefinition) {\n      PsiModifierList modifiersList = variableDeclaration.getModifierList();\n      final GrMember member = variableDeclaration.getMembers()[0];\n      checkAccessModifiers(myHolder, modifiersList, member);\n      checkDuplicateModifiers(myHolder, variableDeclaration.getModifierList(), member);\n\n      if (modifiersList.hasExplicitModifier(GrModifier.VOLATILE) && modifiersList.hasExplicitModifier(GrModifier.FINAL)) {\n        final Annotation annotation =\n          myHolder.createErrorAnnotation(modifiersList, GroovyBundle.message(\"illegal.combination.of.modifiers.volatile.and.final\"));\n        annotation.registerFix(new GrModifierFix(member, modifiersList, GrModifier.VOLATILE, true, false));\n        annotation.registerFix(new GrModifierFix(member, modifiersList, GrModifier.FINAL, true, false));\n      }\n\n      if (modifiersList.hasExplicitModifier(GrModifier.NATIVE)) {\n        final Annotation annotation = myHolder.createErrorAnnotation(modifiersList, GroovyBundle.message(\"variable.cannot.be.native\"));\n        annotation.registerFix(new GrModifierFix(member, modifiersList, GrModifier.NATIVE, true, false));\n      }\n\n      if (modifiersList.hasExplicitModifier(GrModifier.ABSTRACT)) {\n        final Annotation annotation = myHolder.createErrorAnnotation(modifiersList, GroovyBundle.message(\"variable.cannot.be.abstract\"));\n        annotation.registerFix(new GrModifierFix(member, modifiersList, GrModifier.ABSTRACT, true, false));\n      }\n    }\n  }","commit_id":"78f9b956b322c21c1925fe379f14aae988c07f9f","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"/**\n   * Parses optional modifiers\n   *\n   * @param builder Given builder\n   */\n  private static void parseOptionalModifier(PsiBuilder builder, GroovyParser parser) {\n\n    Set<IElementType> modSet = new HashSet<IElementType>();\n\n    PsiBuilder.Marker marker = builder.mark();\n\n    while (builder.getTokenType() == kFINAL ||\n            builder.getTokenType() == kDEF ||\n            builder.getTokenType() == mAT) {\n\n      if (kFINAL.equals(builder.getTokenType())) {\n        if (modSet.contains(kFINAL)) {\n          ParserUtils.wrapError(builder, GroovyBundle.message(\"duplicate.modifier\"));\n        } else {\n          builder.advanceLexer();\n          modSet.add(kFINAL);\n        }\n        ParserUtils.getToken(builder, mNLS);\n      } else if (kDEF.equals(builder.getTokenType())) {\n        if (modSet.contains(kDEF)) {\n          ParserUtils.wrapError(builder, GroovyBundle.message(\"duplicate.modifier\"));\n        } else {\n          builder.advanceLexer();\n          modSet.add(kDEF);\n        }\n        ParserUtils.getToken(builder, mNLS);\n      } else if (Annotation.parse(builder, parser)) {\n        ParserUtils.getToken(builder, mNLS);\n      }\n    }\n    marker.done(MODIFIERS);\n  }","id":16657,"modified_method":"/**\n   * Parses optional modifiers\n   *\n   * @param builder Given builder\n   */\n  private static void parseOptionalModifier(PsiBuilder builder, GroovyParser parser) {\n\n    Set<IElementType> modSet = new HashSet<IElementType>();\n\n    PsiBuilder.Marker marker = builder.mark();\n\n    while (builder.getTokenType() == kFINAL ||\n            builder.getTokenType() == kDEF ||\n            builder.getTokenType() == mAT) {\n\n      if (kFINAL.equals(builder.getTokenType())) {\n        if (modSet.contains(kFINAL)) {\n          ParserUtils.wrapError(builder, GroovyBundle.message(\"duplicate.modifier\", GrModifier.FINAL));\n        } else {\n          builder.advanceLexer();\n          modSet.add(kFINAL);\n        }\n        ParserUtils.getToken(builder, mNLS);\n      } else if (kDEF.equals(builder.getTokenType())) {\n        if (modSet.contains(kDEF)) {\n          ParserUtils.wrapError(builder, GroovyBundle.message(\"duplicate.modifier\", GrModifier.DEF));\n        } else {\n          builder.advanceLexer();\n          modSet.add(kDEF);\n        }\n        ParserUtils.getToken(builder, mNLS);\n      } else if (Annotation.parse(builder, parser)) {\n        ParserUtils.getToken(builder, mNLS);\n      }\n    }\n    marker.done(MODIFIERS);\n  }","commit_id":"78f9b956b322c21c1925fe379f14aae988c07f9f","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"/**\n     * @throws Exception If failed.\n     */\n    public void testNoDataInCache() throws Exception {\n        CacheQuery<List<?>> qry = ((IgniteKernal)grid(0))\n            .getCache(null).queries().createSqlFieldsQuery(\"select age from Person where orgId = 999\");\n\n        Collection<IgniteBiTuple<Integer, Integer>> res = qry.execute(new AverageRemoteReducer()).get();\n\n        assertEquals(\"Result\", 0, F.reduce(res, new AverageLocalReducer()).intValue());\n    }","id":16658,"modified_method":"/**\n     * @throws Exception If failed.\n     */\n    public void testNoDataInCache() throws Exception {\n        SqlFieldsQuery qry = new SqlFieldsQuery(\"select age from Person where orgId = 999\");\n\n        Collection<List<?>> res = grid(0).cache(null).query(qry).getAll();\n\n        IgniteBiTuple<Integer, Integer> redRes = F.reduce(res, new AverageRemoteReducer());\n\n        assertEquals(\"Result\", 0, F.reduce(Collections.singleton(redRes), new AverageLocalReducer()).intValue());\n    }","commit_id":"8420ea2aae5029325ce455a0ee3d981cae02de39","url":"https://github.com/apache/ignite"},{"original_method":"/**\n     * @throws Exception If failed.\n     */\n    public void testAverageQuery() throws Exception {\n        CacheQuery<List<?>> qry = ((IgniteKernal)grid(0)).getCache(null).queries().createSqlFieldsQuery(\"select age from Person\");\n\n        Collection<IgniteBiTuple<Integer, Integer>> res = qry.execute(new AverageRemoteReducer()).get();\n\n        assertEquals(\"Average\", 33, F.reduce(res, new AverageLocalReducer()).intValue());\n    }","id":16659,"modified_method":"/**\n     * @throws Exception If failed.\n     */\n    public void testAverageQuery() throws Exception {\n        SqlFieldsQuery qry = new SqlFieldsQuery(\"select age from Person\");\n\n        Collection<List<?>> res = grid(0).cache(null).query(qry).getAll();\n\n        IgniteBiTuple<Integer, Integer> redRes = F.reduce(res, new AverageRemoteReducer());\n\n        assertEquals(\"Average\", 33, F.reduce(Collections.singleton(redRes), new AverageLocalReducer()).intValue());\n    }","commit_id":"8420ea2aae5029325ce455a0ee3d981cae02de39","url":"https://github.com/apache/ignite"},{"original_method":"/**\n     * @throws Exception If failed.\n     */\n    public void testAverageQueryWithArguments() throws Exception {\n        CacheQuery<List<?>> qry = ((IgniteKernal)grid(0)).getCache(null).queries().createSqlFieldsQuery(\n            \"select age from Person where orgId = ?\");\n\n        Collection<IgniteBiTuple<Integer, Integer>> res = qry.execute(new AverageRemoteReducer(), 1).get();\n\n        assertEquals(\"Average\", 30, F.reduce(res, new AverageLocalReducer()).intValue());\n    }","id":16660,"modified_method":"/**\n     * @throws Exception If failed.\n     */\n    public void testAverageQueryWithArguments() throws Exception {\n        SqlFieldsQuery qry = new SqlFieldsQuery(\"select age from Person where orgId = ?\");\n        qry.setArgs(1);\n\n        Collection<List<?>> res = grid(0).cache(null).query(qry).getAll();\n\n        IgniteBiTuple<Integer, Integer> redRes = F.reduce(res, new AverageRemoteReducer());\n\n        assertEquals(\"Average\", 30, F.reduce(Collections.singleton(redRes), new AverageLocalReducer()).intValue());\n    }","commit_id":"8420ea2aae5029325ce455a0ee3d981cae02de39","url":"https://github.com/apache/ignite"},{"original_method":"/**\n\t * Saves a Store in the Context of an XQuery\n\t * \n\t * @param context \tThe Context of the XQuery to save the Store in\n\t * @param store \tThe Store to store\n\t * \n\t * @return A unique handle representing the Store\n\t */\n\tfinal static synchronized long storeStore( XQueryContext context, Store store ) \n\t{\n\t\t// get the existing stores map from the context\n\t\t\n\t\tHashMap<Long, Store> stores = (HashMap<Long, Store>)context.getXQueryContextVar( MailModule.STORES_CONTEXTVAR );\n\t\t\n\t\tif( stores == null ) {\n\t\t\t// if there is no stores map, create a new one\n\t\t\tstores = new HashMap<Long, Store>();\n\t\t}\n\n\t\t// get an handle for the store\n\t\tlong storeHandle = getHandle();\n\n\t\t// place the store in the stores map\n\t\tstores.put( new Long( storeHandle ), store );\n\n\t\t// save the updated stores map back in the context\n\t\tcontext.setXQueryContextVar( MailModule.STORES_CONTEXTVAR, stores );\n\n\t\treturn( storeHandle );\n\t}","id":16661,"modified_method":"/**\n     * Saves a Store in the Context of an XQuery\n     * \n     * @param context \tThe Context of the XQuery to save the Store in\n     * @param store \tThe Store to store\n     * \n     * @return A unique handle representing the Store\n     */\n    static long storeStore(XQueryContext context, Store store) {\n        return ModuleUtils.storeObjectInContextMap(context, MailModule.STORES_CONTEXTVAR, store);\n    }","commit_id":"13e9213abb84f47623b20ccc03fbb87e3df6e7a7","url":"https://github.com/eXist-db/exist"},{"original_method":"/**\n\t * Stores a Session in the Context of an XQuery\n\t * \n\t * @param context \tThe Context of the XQuery to store the Session in\n\t * @param session \tThe Session to store\n\t * \n\t * @return A unique handle representing the Session\n\t */\n\tfinal static synchronized long storeSession( XQueryContext context, Session session ) \n\t{\n\t\t// get the existing sessions map from the context\n\t\t\n\t\tHashMap<Long, Session> sessions = (HashMap<Long, Session>)context.getXQueryContextVar( MailModule.SESSIONS_CONTEXTVAR );\n\t\t\n\t\tif( sessions == null ) {\n\t\t\t// if there is no sessions map, create a new one\n\t\t\tsessions = new HashMap<Long, Session>();\n\t\t}\n\n\t\t// get an handle for the session\n\t\tlong sessionHandle = getHandle();\n\n\t\t// place the session in the sessions map\n\t\tsessions.put( new Long( sessionHandle ), session );\n\t\t\n\t\t// store the updated sessions map back in the context\n\t\tcontext.setXQueryContextVar( MailModule.SESSIONS_CONTEXTVAR, sessions );\n\n\t\treturn( sessionHandle );\n\t}","id":16662,"modified_method":"/**\n     * Stores a Session in the Context of an XQuery\n     * \n     * @param context \tThe Context of the XQuery to store the Session in\n     * @param session \tThe Session to store\n     * \n     * @return A unique handle representing the Session\n     */\n    static long storeSession(XQueryContext context, Session session) {\n        return ModuleUtils.storeObjectInContextMap(context, MailModule.SESSIONS_CONTEXTVAR, session);\n    }","commit_id":"13e9213abb84f47623b20ccc03fbb87e3df6e7a7","url":"https://github.com/eXist-db/exist"},{"original_method":"/**\n\t * Remove the store from the specified XQueryContext\n\t * \n\t * @param context The context to remove the store for\n\t */\n\tfinal static synchronized  void removeStore( XQueryContext context, long storeHandle ) \n\t{\n\t\t// get the existing stores map from the context\n\t\tHashMap<Long, Store> stores = (HashMap<Long, Store>)context.getXQueryContextVar( MailModule.STORES_CONTEXTVAR );\n\t\t\n\t\tif( stores != null ) {\n\t\t\tstores.remove( new Long( storeHandle ) ) ;\n\n\t\t\t// update the context\n\t\t\tcontext.setXQueryContextVar( MailModule.STORES_CONTEXTVAR, stores );\n\t\t}\n\t}","id":16663,"modified_method":"/**\n     * Remove the store from the specified XQueryContext\n     * \n     * @param context The context to remove the store for\n     */\n    static void removeStore(XQueryContext context, final long storeHandle) {\n        \n        ModuleUtils.modifyContextMap(context, MailModule.STORES_CONTEXTVAR, new ContextMapModifier<Store>(){\n            @Override\n            public void modify(Map<Long, Store> map) {\n                map.remove(storeHandle);\n            }\n        });\n        \n        //update the context\n        //context.setXQueryContextVar(MailModule.STORES_CONTEXTVAR, stores);\n    }","commit_id":"13e9213abb84f47623b20ccc03fbb87e3df6e7a7","url":"https://github.com/eXist-db/exist"},{"original_method":"/**\n\t * Saves a Folder in the Context of an XQuery\n\t * \n\t * @param context \tThe Context of the XQuery to save the Folder in\n\t * @param folder \tThe Folder to store\n\t * \n\t * @return A unique handle representing the Store\n\t */\n\tfinal static synchronized long storeFolder( XQueryContext context, Folder folder ) \n\t{\n\t\t// get the existing stores map from the context\n\t\t\n\t\tHashMap<Long, Folder> folders = (HashMap<Long, Folder>)context.getXQueryContextVar( MailModule.FOLDERS_CONTEXTVAR );\n\t\t\n\t\tif( folders == null ) {\n\t\t\t// if there is no folders map, create a new one\n\t\t\tfolders = new HashMap<Long, Folder>();\n\t\t}\n\n\t\t// get an handle for the folder\n\t\tlong folderHandle = getHandle();\n\n\t\t// place the store in the folders map\n\t\tfolders.put( new Long( folderHandle ), folder );\n\n\t\t// save the updated folders map back in the context\n\t\tcontext.setXQueryContextVar( MailModule.FOLDERS_CONTEXTVAR, folders );\n\n\t\treturn( folderHandle );\n\t}","id":16664,"modified_method":"/**\n     * Saves a Folder in the Context of an XQuery\n     * \n     * @param context \tThe Context of the XQuery to save the Folder in\n     * @param folder \tThe Folder to store\n     * \n     * @return A unique handle representing the Store\n     */\n    static long storeFolder(XQueryContext context, Folder folder) {\n        return ModuleUtils.storeObjectInContextMap(context,  MailModule.FOLDERS_CONTEXTVAR, folder);\n    }","commit_id":"13e9213abb84f47623b20ccc03fbb87e3df6e7a7","url":"https://github.com/eXist-db/exist"},{"original_method":"/**\n\t * Retrieves a previously stored Session from the Context of an XQuery\n\t * \n\t * @param context \t\t\tThe Context of the XQuery containing the Session\n\t * @param sessionHandle\t \tThe handle of the Session to retrieve from the Context of the XQuery\n\t */\n\tfinal static Session retrieveSession( XQueryContext context, long sessionHandle ) \n\t{\n\t\tSession session = null;\n\t\t\n\t\t// get the existing sessions map from the context\n\t\t\n\t\tHashMap<Long, Session> sessions = (HashMap<Long, Session>)context.getXQueryContextVar( MailModule.SESSIONS_CONTEXTVAR );\n\t\t\n\t\tif( sessions != null ) {\n\t\t\tsession = sessions.get( new Long( sessionHandle ) );\n\t\t}\n\t\t\n\t\treturn( session );\n\t}","id":16665,"modified_method":"/**\n     * Retrieves a previously stored Session from the Context of an XQuery\n     * \n     * @param context \t\t\tThe Context of the XQuery containing the Session\n     * @param sessionHandle\t \tThe handle of the Session to retrieve from the Context of the XQuery\n     */\n    static Session retrieveSession(XQueryContext context, long sessionHandle) {\n        return ModuleUtils.retrieveObjectFromContextMap(context, MailModule.SESSIONS_CONTEXTVAR, sessionHandle);\n    }","commit_id":"13e9213abb84f47623b20ccc03fbb87e3df6e7a7","url":"https://github.com/eXist-db/exist"},{"original_method":"/**\n\t * Saves a MessageList in the Context of an XQuery\n\t * \n\t * @param context \tThe Context of the XQuery to save the MessageList in\n\t * @param msgList \tThe MessageList to store\n\t * \n\t * @return A unique handle representing the Store\n\t */\n\tfinal static synchronized long storeMessageList( XQueryContext context, Message[] msgList, long folderHandle ) \n\t{\n\t\t// get the existing msgLists map from the context\n\t\t\n\t\tHashMap<Long, Message[]> msgLists = (HashMap<Long, Message[]>)context.getXQueryContextVar( MailModule.MSGLISTS_CONTEXTVAR );\n\t\t\n\t\tif( msgLists == null ) {\n\t\t\t// if there is no msgLists map, create a new one\n\t\t\tmsgLists = new HashMap<Long, Message[]>();\n\t\t}\n\n\t\t// get an handle for the msgList\n\t\tlong msgListHandle = getHandle();\n\n\t\t// place the msgList in the msgLists map\n\t\tmsgLists.put( new Long( msgListHandle ), msgList );\n\n\t\t// save the updated msgLists map back in the context\n\t\tcontext.setXQueryContextVar( MailModule.MSGLISTS_CONTEXTVAR, msgLists );\n\t\t\n\t\t// get the existing folderMsgLists map from the context\n\t\t\n\t\tHashMap<Long, HashMap<Long, Message[]>> folderMsgLists = (HashMap<Long, HashMap<Long, Message[]>>)context.getXQueryContextVar( MailModule.FOLDERMSGLISTS_CONTEXTVAR );\n\t\t\n\t\tif( folderMsgLists == null ) {\n\t\t\t// if there is no folderMsgLists map, create a new one\n\t\t\tfolderMsgLists = new HashMap<Long, HashMap<Long, Message[]>>();\n\t\t}\t\n\t\t\n\t\t// get the folders message list\n\t\tHashMap<Long, Message[]> folderMsgList = (HashMap<Long, Message[]>)folderMsgLists.get( new Long( folderHandle ) );\n\t\t\n\t\tif( folderMsgList == null ) {\n\t\t\tfolderMsgList = new HashMap<Long, Message[]>();\n\t\t\tfolderMsgLists.put( new Long( folderHandle ), folderMsgList );\n\t\t}\n\t\t\n\t\t// place the msgList in the folderMsgList map\n\t\tfolderMsgList.put( new Long( msgListHandle ), msgList );\n\n\t\t// save the updated folderMsgLists map back in the context\n\t\tcontext.setXQueryContextVar( MailModule.FOLDERMSGLISTS_CONTEXTVAR, folderMsgLists );\n\n\t\treturn( msgListHandle );\n\t}","id":16666,"modified_method":"/**\n     * Saves a MessageList in the Context of an XQuery\n     * \n     * @param context \tThe Context of the XQuery to save the MessageList in\n     * @param msgList \tThe MessageList to store\n     * \n     * @return A unique handle representing the Store\n     */\n    static long storeMessageList(XQueryContext context, final Message[] msgList, final long folderHandle) {\n            \n        final long msgListHandle = ModuleUtils.storeObjectInContextMap(context, MailModule.MSGLISTS_CONTEXTVAR, msgList);\n\n        ModuleUtils.modifyContextMap(context, MailModule.FOLDERMSGLISTS_CONTEXTVAR, new ContextMapModifier<Map<Long, Message[]>>(){\n\n            @Override\n            public void modify(Map<Long, Map<Long, Message[]>> map) {\n                Map<Long, Message[]> folderMsgList = map.get(folderHandle);\n                if(folderMsgList == null) {\n                    folderMsgList = new HashMap<Long, Message[]>();\n                    map.put(folderHandle, folderMsgList);\n                }\n\n                folderMsgList.put(msgListHandle, msgList);\n            }\n        });\n\n        return msgListHandle;\n    }","commit_id":"13e9213abb84f47623b20ccc03fbb87e3df6e7a7","url":"https://github.com/eXist-db/exist"},{"original_method":"/**\n\t * Remove the MessageList from the specified XQueryContext\n\t * \n\t * @param context The context to remove the MessageList for\n\t */\n\tfinal static synchronized void removeMessageList( XQueryContext context, long msgListHandle ) \n\t{\n\t\t// get the existing msgLists map from the context\n\t\tHashMap<Long, Message[]> msgLists = (HashMap<Long, Message[]>)context.getXQueryContextVar( MailModule.MSGLISTS_CONTEXTVAR );\n\t\t\n\t\tif( msgLists != null ) {\n\t\t\tmsgLists.remove( new Long( msgListHandle ) ) ;\n\n\t\t\t// update the context\n\t\t\tcontext.setXQueryContextVar( MailModule.MSGLISTS_CONTEXTVAR, msgLists );\n\t\t}\n\t}","id":16667,"modified_method":"/**\n     * Remove the MessageList from the specified XQueryContext\n     * \n     * @param context The context to remove the MessageList for\n     */\n    static void removeMessageList(XQueryContext context, final long msgListHandle) {\n        ModuleUtils.modifyContextMap(context, MailModule.MSGLISTS_CONTEXTVAR, new ContextMapModifier<Message[]>(){\n            @Override\n            public void modify(Map<Long, Message[]> map) {\n                map.remove(msgListHandle);\n            }\n        });\n        \n        // update the context\n        //context.setXQueryContextVar( MailModule.MSGLISTS_CONTEXTVAR, msgLists );\n    }","commit_id":"13e9213abb84f47623b20ccc03fbb87e3df6e7a7","url":"https://github.com/eXist-db/exist"},{"original_method":"/**\n\t * Retrieves a previously saved MessageList from the Context of an XQuery\n\t * \n\t * @param context \t\t\tThe Context of the XQuery containing the Message List\n\t * @param msgListHandle\t \tThe handle of the Message List to retrieve from the Context of the XQuery\n\t */\n\tfinal static Message[] retrieveMessageList( XQueryContext context, long msgListHandle ) \n\t{\n\t\tMessage[] msgList = null;\n\t\t\n\t\t// get the existing msgLists map from the context\n\t\t\n\t\tHashMap<Long, Message[]> msgLists = (HashMap<Long, Message[]>)context.getXQueryContextVar( MailModule.MSGLISTS_CONTEXTVAR );\n\t\t\n\t\tif( msgLists != null ) {\n\t\t\tmsgList = msgLists.get( new Long( msgListHandle ) );\n\t\t}\n\n\t\treturn( msgList );\n\t}","id":16668,"modified_method":"/**\n     * Retrieves a previously saved MessageList from the Context of an XQuery\n     * \n     * @param context \t\t\tThe Context of the XQuery containing the Message List\n     * @param msgListHandle\t \tThe handle of the Message List to retrieve from the Context of the XQuery\n     */\n    static Message[] retrieveMessageList(XQueryContext context, long msgListHandle) {\n        return ModuleUtils.retrieveObjectFromContextMap(context, MailModule.MSGLISTS_CONTEXTVAR, msgListHandle);\n    }","commit_id":"13e9213abb84f47623b20ccc03fbb87e3df6e7a7","url":"https://github.com/eXist-db/exist"},{"original_method":"/**\n\t * Closes all the open stores for the specified XQueryContext\n\t * \n\t * @param context The context to close stores for\n\t */\n\tprivate final static synchronized void closeAllStores( XQueryContext context ) \n\t{\n\t\t// get the existing stores map from the context\n\t\tHashMap<Long, Store> stores = (HashMap<Long, Store>)context.getXQueryContextVar( MailModule.STORES_CONTEXTVAR );\n\t\t\n\t\tif( stores != null ) {\n\t\t\t// iterate over each store\n\t\t\tSet<Long> keys = stores.keySet();\n\t\t\tfor( Iterator<Long> itKeys = keys.iterator(); itKeys.hasNext(); ) {\n\t\t\t\t// get the store\n\t\t\t\tLong storeHandle = itKeys.next();\n\t\t\t\tStore store = stores.get( storeHandle );\n\t\t\t\t\n\t\t\t\ttry {\n\t\t\t\t\t// close the store\n\t\t\t\t\tstore.close();\n\n\t\t\t\t\t// remove it from the stores map\n\t\t\t\t\tstores.remove( storeHandle) ;\n\t\t\t\t} \n\t\t\t\tcatch( MessagingException me ) {\n\t\t\t\t\tLOG.debug( \"Unable to close Mail Store\", me );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// update the context\n\t\t\tcontext.setXQueryContextVar( MailModule.STORES_CONTEXTVAR, stores );\n\t\t}\n\t}","id":16669,"modified_method":"/**\n     * Closes all the open stores for the specified XQueryContext\n     * \n     * @param context The context to close stores for\n     */\n    private static void closeAllStores(XQueryContext context)  {\n        ModuleUtils.modifyContextMap(context,  MailModule.STORES_CONTEXTVAR, new ContextMapEntryModifier<Store>(){\n            @Override\n            public void modify(Map<Long, Store> map) {\n                super.modify(map);\n                \n                //remove all stores from map\n                map.clear();\n            }\n\n            @Override\n            public void modify(Entry<Long, Store> entry) {\n                final Store store = entry.getValue();\n                try {\n                    // close the store\n                    store.close();\n                }  catch(MessagingException me) {\n                    LOG.warn(\"Unable to close Mail Store: \" + me.getMessage(), me);\n                }\n            }\n        });\n        \n        // update the context\n        //context.setXQueryContextVar(MailModule.STORES_CONTEXTVAR, stores);\n    }","commit_id":"13e9213abb84f47623b20ccc03fbb87e3df6e7a7","url":"https://github.com/eXist-db/exist"},{"original_method":"/**\n\t * Retrieves a previously saved Folder from the Context of an XQuery\n\t * \n\t * @param context \t\t\tThe Context of the XQuery containing the Folder\n\t * @param folderHandle\t \tThe handle of the Folder to retrieve from the Context of the XQuery\n\t */\n\tfinal static Folder retrieveFolder( XQueryContext context, long folderHandle ) \n\t{\n\t\tFolder folder = null;\n\t\t\n\t\t// get the existing folders map from the context\n\t\t\n\t\tHashMap<Long, Folder> folders = (HashMap<Long, Folder>)context.getXQueryContextVar( MailModule.FOLDERS_CONTEXTVAR );\n\t\t\n\t\tif( folders != null ) {\n\t\t\tfolder = folders.get( new Long( folderHandle ) );\n\t\t}\n\n\t\treturn( folder );\n\t}","id":16670,"modified_method":"/**\n     * Retrieves a previously saved Folder from the Context of an XQuery\n     * \n     * @param context \t\t\tThe Context of the XQuery containing the Folder\n     * @param folderHandle\t \tThe handle of the Folder to retrieve from the Context of the XQuery\n     */\n    static Folder retrieveFolder(XQueryContext context, long folderHandle) {\n        return ModuleUtils.retrieveObjectFromContextMap(context, MailModule.FOLDERS_CONTEXTVAR, folderHandle);\n    }","commit_id":"13e9213abb84f47623b20ccc03fbb87e3df6e7a7","url":"https://github.com/eXist-db/exist"},{"original_method":"/**\n\t * Closes all the open folders for the specified XQueryContext\n\t * \n\t * @param context The context to close folders for\n\t */\n\tprivate final static synchronized void closeAllFolders( XQueryContext context ) \n\t{\n\t\t// get the existing folders map from the context\n\t\tHashMap<Long, Folder> folders = (HashMap<Long, Folder>)context.getXQueryContextVar( MailModule.FOLDERS_CONTEXTVAR );\n\t\t\n\t\tif( folders != null ) {\n\t\t\t// iterate over each folder\n\t\t\tSet<Long> keys = folders.keySet();\n\t\t\tfor( Iterator<Long> itKeys = keys.iterator(); itKeys.hasNext(); ) {\n\t\t\t\t// get the folder\n\t\t\t\tLong folderHandle = itKeys.next();\n\t\t\t\tFolder folder = folders.get( folderHandle );\n\t\t\t\t\n\t\t\t\ttry {\n\t\t\t\t\t// close the folder\n\t\t\t\t\tfolder.close( false );\n\n\t\t\t\t\t// remove it from the folders map\n\t\t\t\t\tfolders.remove( folderHandle ) ;\n\t\t\t\t} \n\t\t\t\tcatch( MessagingException me ) {\n\t\t\t\t\tLOG.debug( \"Unable to close Mail Folder\", me );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// update the context\n\t\t\tcontext.setXQueryContextVar( MailModule.FOLDERS_CONTEXTVAR, folders );\n\t\t}\n\t}","id":16671,"modified_method":"/**\n     * Closes all the open folders for the specified XQueryContext\n     * \n     * @param context The context to close folders for\n     */\n    private static void closeAllFolders(XQueryContext context) {\n        ModuleUtils.modifyContextMap(context, MailModule.FOLDERS_CONTEXTVAR, new ContextMapEntryModifier<Folder>(){\n\n            @Override\n            public void modify(Map<Long, Folder> map) {\n                super.modify(map);\n                \n                //remove all from the folders map\n                map.clear();\n            }\n            \n            @Override\n            public void modify(Entry<Long, Folder> entry) {\n                final Folder folder = entry.getValue();\n\n                //close the folder\n                try {\n                    folder.close(false);\n                } catch(MessagingException me) {\n                    LOG.warn( \"Unable to close Mail Folder: \" + me.getMessage(), me);\n                }\n            }\n        });\n        \n        // update the context\n        // context.setXQueryContextVar( MailModule.FOLDERS_CONTEXTVAR, folders );\n    }","commit_id":"13e9213abb84f47623b20ccc03fbb87e3df6e7a7","url":"https://github.com/eXist-db/exist"},{"original_method":"/**\n\t * Closes all the open MessageLists for the specified XQueryContext\n\t * \n\t * @param context The context to close MessageLists for\n\t */\n\tprivate final static synchronized void closeAllMessageLists( XQueryContext context ) \n\t{\n\t\t// get the existing msgLists map from the context\n\t\tHashMap<Long, Message[]> msgLists = (HashMap<Long, Message[]>)context.getXQueryContextVar( MailModule.MSGLISTS_CONTEXTVAR );\n\t\t\n\t\tif( msgLists != null ) {\n\t\t\t// iterate over each msgList\n\t\t\tSet<Long> keys = msgLists.keySet();\n\t\t\tfor( Iterator<Long> itKeys = keys.iterator(); itKeys.hasNext(); ) {\n\t\t\t\tmsgLists.remove( itKeys.next() ) ;\n\t\t\t}\n\n\t\t\t// update the context\n\t\t\tcontext.setXQueryContextVar( MailModule.MSGLISTS_CONTEXTVAR, msgLists );\n\t\t}\n\t}","id":16672,"modified_method":"/**\n     * Closes all the open MessageLists for the specified XQueryContext\n     * \n     * @param context The context to close MessageLists for\n     */\n    private static void closeAllMessageLists(XQueryContext context) {\n        ModuleUtils.modifyContextMap(context, MailModule.MSGLISTS_CONTEXTVAR, new ContextMapModifier<Message[]>(){\n            @Override\n            public void modify(Map<Long, Message[]> map) {\n                map.clear();\n            }\n        });\n        \n        // update the context\n        //context.setXQueryContextVar( MailModule.MSGLISTS_CONTEXTVAR, msgLists );\n    }","commit_id":"13e9213abb84f47623b20ccc03fbb87e3df6e7a7","url":"https://github.com/eXist-db/exist"},{"original_method":"/**\n\t * Remove the folder from the specified XQueryContext\n\t * \n\t * @param context The context to remove the store for\n\t */\n\tfinal static synchronized void removeFolder( XQueryContext context, long folderHandle ) \n\t{\n\t\t// get the existing folders map from the context\n\t\tHashMap<Long, Folder> folders = (HashMap<Long, Folder>)context.getXQueryContextVar( MailModule.FOLDERS_CONTEXTVAR );\n\t\t\n\t\tif( folders != null ) {\n\t\t\tfolders.remove( new Long( folderHandle ) ) ;\n\n\t\t\t// update the context\n\t\t\tcontext.setXQueryContextVar( MailModule.FOLDERS_CONTEXTVAR, folders );\n\t\t\t\n\t\t\t// get the existing folderMsgLists map from the context and remove all the folder's message lists\n\t\t\n\t\t\tHashMap<Long, HashMap<Long, Object>> folderMsgLists = (HashMap<Long, HashMap<Long, Object>>)context.getXQueryContextVar( MailModule.FOLDERMSGLISTS_CONTEXTVAR );\n\t\t\tHashMap msgLists = (HashMap)context.getXQueryContextVar( MailModule.MSGLISTS_CONTEXTVAR );\n\t\t\n\t\t\tif( folderMsgLists != null ) {\n\t\t\t\t// get the folders message list\n\t\t\t\tHashMap<Long, Object> folderMsgList = (HashMap<Long, Object>)folderMsgLists.get( new Long( folderHandle ) );\n\t\t\t\t\n\t\t\t\tif( folderMsgList != null ) {\n\t\t\t\t\t// iterate over each message list in this folder\n\t\t\t\t\tSet<Long> keys = folderMsgList.keySet();\n\t\t\t\t\tfor( Iterator<Long> itKeys = keys.iterator(); itKeys.hasNext(); ) {\n\t\t\t\t\t\tLong msgList = itKeys.next();\n\t\t\t\t\t\tif( msgLists != null ) {\n\t\t\t\t\t\t\tmsgLists.remove( msgList ) ;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tfolderMsgLists.remove( new Long( folderHandle ) );\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t// update the context\n\t\t\t\tcontext.setXQueryContextVar( MailModule.FOLDERMSGLISTS_CONTEXTVAR, folderMsgLists );\n\t\t\t}\n\t\t}\t\n\t}","id":16673,"modified_method":"/**\n     * Remove the folder from the specified XQueryContext\n     * \n     * @param context The context to remove the store for\n     */\n    static void removeFolder(final XQueryContext context, final long folderHandle) {\n            \n        ModuleUtils.modifyContextMap(context, MailModule.FOLDERS_CONTEXTVAR, new ContextMapModifier<Folder>(){\n            @Override\n            public void modify(Map<Long, Folder> map) {\n\n                //remove the message lists for the folder\n                ModuleUtils.modifyContextMap(context, MailModule.FOLDERMSGLISTS_CONTEXTVAR, new ContextMapModifier<Map<Long, Message[]>>(){\n                    @Override\n                    public void modify(Map<Long, Map<Long, Message[]>> map) {\n                        \n                        final Map<Long, Message[]> folderMsgList = map.get(folderHandle);\n                        \n                        ModuleUtils.modifyContextMap(context, MailModule.MSGLISTS_CONTEXTVAR, new ContextMapModifier<Message[]>(){\n                            @Override\n                            public void modify(Map<Long, Message[]> map) {\n                                for(final Long msgListKey : folderMsgList.keySet()){\n                                    map.remove(msgListKey);\n                                }\n                            }\n                        });\n                        \n                        //remove the folder message kist\n                        map.remove(folderHandle);\n                    }\n                });\n\n                //remove the folder\n                map.remove(folderHandle);\n            }\n        });\n    }","commit_id":"13e9213abb84f47623b20ccc03fbb87e3df6e7a7","url":"https://github.com/eXist-db/exist"},{"original_method":"/**\n\t * Retrieves a previously saved Store from the Context of an XQuery\n\t * \n\t * @param context \t\t\tThe Context of the XQuery containing the Store\n\t * @param storeHandle\t \tThe handle of the Store to retrieve from the Context of the XQuery\n\t */\n\tfinal static Store retrieveStore( XQueryContext context, long storeHandle ) \n\t{\n\t\tStore store = null;\n\t\t\n\t\t// get the existing stores map from the context\n\t\t\n\t\tHashMap<Long, Store> stores = (HashMap<Long, Store>)context.getXQueryContextVar( MailModule.STORES_CONTEXTVAR );\n\t\t\n\t\tif( stores != null ) {\n\t\t\tstore = stores.get( new Long( storeHandle ) );\n\t\t}\n\n\t\treturn( store );\n\t}","id":16674,"modified_method":"/**\n     * Retrieves a previously saved Store from the Context of an XQuery\n     * \n     * @param context \t\t\tThe Context of the XQuery containing the Store\n     * @param storeHandle\t \tThe handle of the Store to retrieve from the Context of the XQuery\n     */\n    static Store retrieveStore(XQueryContext context, long storeHandle) {\n        return ModuleUtils.retrieveObjectFromContextMap(context, MailModule.STORES_CONTEXTVAR, storeHandle);\n    }","commit_id":"13e9213abb84f47623b20ccc03fbb87e3df6e7a7","url":"https://github.com/eXist-db/exist"},{"original_method":"/**\r\n     * Stores an Object in the Context of an XQuery.\r\n     *\r\n     * @param   context         The Context of the XQuery to store the Object in\r\n     * @param   contextMapName  The name of the context map\r\n     * @param   o               The Object to store\r\n     *\r\n     * @return  A unique ID representing the Object\r\n     */\r\n    public static <T> long storeObjectInContextMap(XQueryContext context, String contextMapName, T o) {\r\n        \r\n        contextMapLocks.getWriteLock(contextMapName).lock();\r\n        try{\r\n\r\n            // get the existing map from the context\r\n            Map<Long, T> map = (HashMap<Long, T>)context.getXQueryContextVar(contextMapName);\r\n\r\n            if(map == null) {\r\n                // if there is no map, create a new one\r\n                map = new HashMap<Long, T>();\r\n            }\r\n\r\n            // get an id for the map\r\n            long uid = 0;\r\n            while(uid == 0 || map.keySet().contains(uid)) {\r\n                uid = getUID();\r\n            }\r\n\r\n            // place the object in the map\r\n            map.put(uid, o);\r\n\r\n            // store the map back in the context\r\n            context.setXQueryContextVar(contextMapName, map);\r\n\r\n            return (uid);\r\n        } finally {\r\n            contextMapLocks.getWriteLock(contextMapName).unlock();\r\n        }\r\n    }","id":16675,"modified_method":"/**\r\n     * Stores an Object in the Context of an XQuery.\r\n     *\r\n     * @param   context         The Context of the XQuery to store the Object in\r\n     * @param   contextMapName  The name of the context map\r\n     * @param   o               The Object to store\r\n     *\r\n     * @return  A unique ID representing the Object\r\n     */\r\n    public static <T> long storeObjectInContextMap(XQueryContext context, String contextMapName, T o) {\r\n        \r\n        contextMapLocks.getWriteLock(contextMapName).lock();\r\n        try{\r\n\r\n            // get the existing map from the context\r\n            Map<Long, T> map = (Map<Long, T>)context.getXQueryContextVar(contextMapName);\r\n\r\n            if(map == null) {\r\n                // if there is no map, create a new one\r\n                map = new HashMap<Long, T>();\r\n            }\r\n\r\n            // get an id for the map\r\n            long uid = 0;\r\n            while(uid == 0 || map.keySet().contains(uid)) {\r\n                uid = getUID();\r\n            }\r\n\r\n            // place the object in the map\r\n            map.put(uid, o);\r\n\r\n            // store the map back in the context\r\n            context.setXQueryContextVar(contextMapName, map);\r\n\r\n            return (uid);\r\n        } finally {\r\n            contextMapLocks.getWriteLock(contextMapName).unlock();\r\n        }\r\n    }","commit_id":"13e9213abb84f47623b20ccc03fbb87e3df6e7a7","url":"https://github.com/eXist-db/exist"},{"original_method":"public static <T> void modifyContextMap(XQueryContext context, String contextMapName, ContextMapModifier<T> modifier) {\r\n        contextMapLocks.getWriteLock(contextMapName).lock();\r\n        try {\r\n            // get the existing map from the context\r\n            final Map<Long, T> map = (Map<Long, T>)context.getXQueryContextVar(contextMapName);\r\n            if(map == null) {\r\n                return;\r\n            }\r\n            \r\n            modifier.modify(map);\r\n            \r\n        } finally {\r\n            contextMapLocks.getWriteLock(contextMapName).unlock();\r\n        }\r\n    }","id":16676,"modified_method":"public static <T> void modifyContextMap(XQueryContext context, String contextMapName, ContextMapModifier<T> modifier) {\r\n        contextMapLocks.getWriteLock(contextMapName).lock();\r\n        try {\r\n            // get the existing map from the context\r\n            Map<Long, T> map = (Map<Long, T>)context.getXQueryContextVar(contextMapName);\r\n            if(map == null) {\r\n                //create a new map if it doesnt exist\r\n                map = new HashMap<Long, T>();\r\n                context.setXQueryContextVar(contextMapName, map);\r\n            }\r\n            \r\n            //modify the map\r\n            modifier.modify(map);\r\n            \r\n        } finally {\r\n            contextMapLocks.getWriteLock(contextMapName).unlock();\r\n        }\r\n    }","commit_id":"13e9213abb84f47623b20ccc03fbb87e3df6e7a7","url":"https://github.com/eXist-db/exist"},{"original_method":"@Test\n    public void testSignatureTimestamp() throws Exception {\n        // Create + configure service\n        createService();\n        \n        // Create + configure client\n        Echo echo = createClientProxy();\n        \n        Client client = ClientProxy.getClient(echo);\n        client.getInInterceptors().add(new LoggingInInterceptor());\n        client.getOutInterceptors().add(new LoggingOutInterceptor());\n        \n        WSSSecurityProperties properties = new WSSSecurityProperties();\n        properties.setOutAction(\n            new XMLSecurityConstants.Action[]{WSSConstants.SIGNATURE, WSSConstants.TIMESTAMP}\n        );\n        properties.addSignaturePart(\n            new SecurePart(new QName(WSSConstants.NS_WSSE10, \"Timestamp\"), SecurePart.Modifier.Element)\n        );\n        properties.addSignaturePart(\n            new SecurePart(new QName(WSSConstants.NS_SOAP11, \"Body\"), SecurePart.Modifier.Element)\n        );\n        properties.setSignatureUser(\"myalias\");\n        \n        Properties cryptoProperties = \n            CryptoFactory.getProperties(\"outsecurity.properties\", this.getClass().getClassLoader());\n        properties.setSignatureCryptoProperties(cryptoProperties);\n        properties.setCallbackHandler(new TestPwdCallback());\n        WSS4JStaxOutInterceptor ohandler = new WSS4JStaxOutInterceptor(properties);\n        client.getOutInterceptors().add(ohandler);\n\n        assertEquals(\"test\", echo.echo(\"test\"));\n    }","id":16677,"modified_method":"@Test\n    public void testSignatureTimestamp() throws Exception {\n        // Create + configure service\n        Service service = createService();\n        \n        WSSSecurityProperties inProperties = new WSSSecurityProperties();\n        inProperties.setCallbackHandler(new TestPwdCallback());\n        Properties cryptoProperties = \n            CryptoFactory.getProperties(\"insecurity.properties\", this.getClass().getClassLoader());\n        inProperties.setSignatureVerificationCryptoProperties(cryptoProperties);\n        WSS4JStaxInInterceptor inhandler = new WSS4JStaxInInterceptor(inProperties);\n        service.getInInterceptors().add(inhandler);\n        \n        // Create + configure client\n        Echo echo = createClientProxy();\n        \n        Client client = ClientProxy.getClient(echo);\n        client.getInInterceptors().add(new LoggingInInterceptor());\n        client.getOutInterceptors().add(new LoggingOutInterceptor());\n        \n        WSSSecurityProperties properties = new WSSSecurityProperties();\n        properties.setOutAction(\n            new XMLSecurityConstants.Action[]{WSSConstants.SIGNATURE, WSSConstants.TIMESTAMP}\n        );\n        properties.addSignaturePart(\n            new SecurePart(new QName(WSSConstants.NS_WSU10, \"Timestamp\"), SecurePart.Modifier.Element)\n        );\n        properties.addSignaturePart(\n            new SecurePart(new QName(WSSConstants.NS_SOAP11, \"Body\"), SecurePart.Modifier.Element)\n        );\n        properties.setSignatureUser(\"myalias\");\n        \n        Properties outCryptoProperties = \n            CryptoFactory.getProperties(\"outsecurity.properties\", this.getClass().getClassLoader());\n        properties.setSignatureCryptoProperties(outCryptoProperties);\n        properties.setCallbackHandler(new TestPwdCallback());\n        WSS4JStaxOutInterceptor ohandler = new WSS4JStaxOutInterceptor(properties);\n        client.getOutInterceptors().add(ohandler);\n\n        assertEquals(\"test\", echo.echo(\"test\"));\n    }","commit_id":"bb2757c945ea3bcd93d321782fb4df39aaadd133","url":"https://github.com/apache/cxf"},{"original_method":"@Test\n    public void testUsernameTokenText() throws Exception {\n        // Create + configure service\n        createService();\n        \n        // Create + configure client\n        Echo echo = createClientProxy();\n        \n        Client client = ClientProxy.getClient(echo);\n        client.getInInterceptors().add(new LoggingInInterceptor());\n        client.getOutInterceptors().add(new LoggingOutInterceptor());\n        \n        WSSSecurityProperties properties = new WSSSecurityProperties();\n        properties.setOutAction(new XMLSecurityConstants.Action[]{WSSConstants.USERNAMETOKEN});\n        properties.setUsernameTokenPasswordType(WSSConstants.UsernameTokenPasswordType.PASSWORD_TEXT);\n        properties.setTokenUser(\"username\");\n        properties.setCallbackHandler(new TestPwdCallback());\n        WSS4JStaxOutInterceptor ohandler = new WSS4JStaxOutInterceptor(properties);\n        client.getOutInterceptors().add(ohandler);\n\n        assertEquals(\"test\", echo.echo(\"test\"));\n    }","id":16678,"modified_method":"@Test\n    public void testUsernameTokenText() throws Exception {\n        // Create + configure service\n        Service service = createService();\n        \n        WSSSecurityProperties inProperties = new WSSSecurityProperties();\n        inProperties.setCallbackHandler(new TestPwdCallback());\n        WSS4JStaxInInterceptor inhandler = new WSS4JStaxInInterceptor(inProperties);\n        service.getInInterceptors().add(inhandler);\n\n        // Create + configure client\n        Echo echo = createClientProxy();\n        \n        Client client = ClientProxy.getClient(echo);\n        client.getInInterceptors().add(new LoggingInInterceptor());\n        client.getOutInterceptors().add(new LoggingOutInterceptor());\n        \n        WSSSecurityProperties properties = new WSSSecurityProperties();\n        properties.setOutAction(new XMLSecurityConstants.Action[]{WSSConstants.USERNAMETOKEN});\n        properties.setUsernameTokenPasswordType(WSSConstants.UsernameTokenPasswordType.PASSWORD_TEXT);\n        properties.setTokenUser(\"username\");\n        properties.setCallbackHandler(new TestPwdCallback());\n        WSS4JStaxOutInterceptor ohandler = new WSS4JStaxOutInterceptor(properties);\n        client.getOutInterceptors().add(ohandler);\n\n        assertEquals(\"test\", echo.echo(\"test\"));\n    }","commit_id":"bb2757c945ea3bcd93d321782fb4df39aaadd133","url":"https://github.com/apache/cxf"},{"original_method":"@Test\n    public void testUsernameTokenDigest() throws Exception {\n        // Create + configure service\n        createService();\n        \n        // Create + configure client\n        Echo echo = createClientProxy();\n        \n        Client client = ClientProxy.getClient(echo);\n        client.getInInterceptors().add(new LoggingInInterceptor());\n        client.getOutInterceptors().add(new LoggingOutInterceptor());\n        \n        WSSSecurityProperties properties = new WSSSecurityProperties();\n        properties.setOutAction(new XMLSecurityConstants.Action[]{WSSConstants.USERNAMETOKEN});\n        properties.setUsernameTokenPasswordType(WSSConstants.UsernameTokenPasswordType.PASSWORD_DIGEST);\n        properties.setTokenUser(\"username\");\n        properties.setCallbackHandler(new TestPwdCallback());\n        WSS4JStaxOutInterceptor ohandler = new WSS4JStaxOutInterceptor(properties);\n        client.getOutInterceptors().add(ohandler);\n\n        assertEquals(\"test\", echo.echo(\"test\"));\n    }","id":16679,"modified_method":"@Test\n    public void testUsernameTokenDigest() throws Exception {\n        // Create + configure service\n        Service service = createService();\n        \n        WSSSecurityProperties inProperties = new WSSSecurityProperties();\n        inProperties.setCallbackHandler(new TestPwdCallback());\n        WSS4JStaxInInterceptor inhandler = new WSS4JStaxInInterceptor(inProperties);\n        service.getInInterceptors().add(inhandler);\n        \n        // Create + configure client\n        Echo echo = createClientProxy();\n        \n        Client client = ClientProxy.getClient(echo);\n        client.getInInterceptors().add(new LoggingInInterceptor());\n        client.getOutInterceptors().add(new LoggingOutInterceptor());\n        \n        WSSSecurityProperties properties = new WSSSecurityProperties();\n        properties.setOutAction(new XMLSecurityConstants.Action[]{WSSConstants.USERNAMETOKEN});\n        properties.setUsernameTokenPasswordType(WSSConstants.UsernameTokenPasswordType.PASSWORD_DIGEST);\n        properties.setTokenUser(\"username\");\n        properties.setCallbackHandler(new TestPwdCallback());\n        WSS4JStaxOutInterceptor ohandler = new WSS4JStaxOutInterceptor(properties);\n        client.getOutInterceptors().add(ohandler);\n\n        assertEquals(\"test\", echo.echo(\"test\"));\n    }","commit_id":"bb2757c945ea3bcd93d321782fb4df39aaadd133","url":"https://github.com/apache/cxf"},{"original_method":"@Test\n    @org.junit.Ignore\n    public void testEncrypt() throws Exception {\n        // Create + configure service\n        createService();\n        \n        // Create + configure client\n        Echo echo = createClientProxy();\n        \n        Client client = ClientProxy.getClient(echo);\n        client.getInInterceptors().add(new LoggingInInterceptor());\n        client.getOutInterceptors().add(new LoggingOutInterceptor());\n        \n        WSSSecurityProperties properties = new WSSSecurityProperties();\n        properties.setOutAction(new XMLSecurityConstants.Action[]{WSSConstants.ENCRYPT});\n        properties.setEncryptionUser(\"myalias\");\n        \n        Properties cryptoProperties = \n            CryptoFactory.getProperties(\"outsecurity.properties\", this.getClass().getClassLoader());\n        properties.setEncryptionCryptoProperties(cryptoProperties);\n        properties.setCallbackHandler(new TestPwdCallback());\n        WSS4JStaxOutInterceptor ohandler = new WSS4JStaxOutInterceptor(properties);\n        client.getOutInterceptors().add(ohandler);\n\n        assertEquals(\"test\", echo.echo(\"test\"));\n    }","id":16680,"modified_method":"@Test\n    public void testEncrypt() throws Exception {\n        // Create + configure service\n        Service service = createService();\n        \n        WSSSecurityProperties inProperties = new WSSSecurityProperties();\n        inProperties.setCallbackHandler(new TestPwdCallback());\n        Properties cryptoProperties = \n            CryptoFactory.getProperties(\"insecurity.properties\", this.getClass().getClassLoader());\n        inProperties.setDecryptionCryptoProperties(cryptoProperties);\n        WSS4JStaxInInterceptor inhandler = new WSS4JStaxInInterceptor(inProperties);\n        service.getInInterceptors().add(inhandler);\n        \n        // Create + configure client\n        Echo echo = createClientProxy();\n        \n        Client client = ClientProxy.getClient(echo);\n        client.getInInterceptors().add(new LoggingInInterceptor());\n        client.getOutInterceptors().add(new LoggingOutInterceptor());\n        \n        WSSSecurityProperties properties = new WSSSecurityProperties();\n        properties.setOutAction(new XMLSecurityConstants.Action[]{WSSConstants.ENCRYPT});\n        properties.setEncryptionUser(\"myalias\");\n        \n        Properties outCryptoProperties = \n            CryptoFactory.getProperties(\"outsecurity.properties\", this.getClass().getClassLoader());\n        properties.setEncryptionCryptoProperties(outCryptoProperties);\n        properties.setCallbackHandler(new TestPwdCallback());\n        WSS4JStaxOutInterceptor ohandler = new WSS4JStaxOutInterceptor(properties);\n        client.getOutInterceptors().add(ohandler);\n\n        assertEquals(\"test\", echo.echo(\"test\"));\n    }","commit_id":"bb2757c945ea3bcd93d321782fb4df39aaadd133","url":"https://github.com/apache/cxf"},{"original_method":"@Test\n    public void testSignaturePKI() throws Exception {\n        // Create + configure service\n        createService();\n        \n        // Create + configure client\n        Echo echo = createClientProxy();\n        \n        Client client = ClientProxy.getClient(echo);\n        client.getInInterceptors().add(new LoggingInInterceptor());\n        client.getOutInterceptors().add(new LoggingOutInterceptor());\n        \n        WSSSecurityProperties properties = new WSSSecurityProperties();\n        properties.setOutAction(\n            new XMLSecurityConstants.Action[]{WSSConstants.SIGNATURE}\n        );\n        properties.setSignatureUser(\"alice\");\n        \n        Properties cryptoProperties = \n            CryptoFactory.getProperties(\"alice.properties\", this.getClass().getClassLoader());\n        properties.setSignatureCryptoProperties(cryptoProperties);\n        properties.setCallbackHandler(new KeystorePasswordCallback());\n        properties.setUseSingleCert(true);\n        properties.setSignatureKeyIdentifier(\n            WSSecurityTokenConstants.KeyIdentifier_SecurityTokenDirectReference\n        );\n        \n        WSS4JStaxOutInterceptor ohandler = new WSS4JStaxOutInterceptor(properties);\n        client.getOutInterceptors().add(ohandler);\n\n        assertEquals(\"test\", echo.echo(\"test\"));\n    }","id":16681,"modified_method":"@Test\n    public void testSignaturePKI() throws Exception {\n        // Create + configure service\n        Service service = createService();\n        \n        WSSSecurityProperties inProperties = new WSSSecurityProperties();\n        inProperties.setCallbackHandler(new TestPwdCallback());\n        Properties cryptoProperties = \n            CryptoFactory.getProperties(\"cxfca.properties\", this.getClass().getClassLoader());\n        inProperties.setSignatureVerificationCryptoProperties(cryptoProperties);\n        WSS4JStaxInInterceptor inhandler = new WSS4JStaxInInterceptor(inProperties);\n        service.getInInterceptors().add(inhandler);\n        \n        // Create + configure client\n        Echo echo = createClientProxy();\n        \n        Client client = ClientProxy.getClient(echo);\n        client.getInInterceptors().add(new LoggingInInterceptor());\n        client.getOutInterceptors().add(new LoggingOutInterceptor());\n        \n        WSSSecurityProperties properties = new WSSSecurityProperties();\n        properties.setOutAction(\n            new XMLSecurityConstants.Action[]{WSSConstants.SIGNATURE}\n        );\n        properties.setSignatureUser(\"alice\");\n        \n        Properties outCryptoProperties = \n            CryptoFactory.getProperties(\"alice.properties\", this.getClass().getClassLoader());\n        properties.setSignatureCryptoProperties(outCryptoProperties);\n        properties.setCallbackHandler(new KeystorePasswordCallback());\n        properties.setUseSingleCert(true);\n        properties.setSignatureKeyIdentifier(\n            WSSecurityTokenConstants.KeyIdentifier_SecurityTokenDirectReference\n        );\n        \n        WSS4JStaxOutInterceptor ohandler = new WSS4JStaxOutInterceptor(properties);\n        client.getOutInterceptors().add(ohandler);\n\n        assertEquals(\"test\", echo.echo(\"test\"));\n    }","commit_id":"bb2757c945ea3bcd93d321782fb4df39aaadd133","url":"https://github.com/apache/cxf"},{"original_method":"@Test\n    public void testSignature() throws Exception {\n        // Create + configure service\n        createService();\n        \n        // Create + configure client\n        Echo echo = createClientProxy();\n        \n        Client client = ClientProxy.getClient(echo);\n        client.getInInterceptors().add(new LoggingInInterceptor());\n        client.getOutInterceptors().add(new LoggingOutInterceptor());\n        \n        WSSSecurityProperties properties = new WSSSecurityProperties();\n        properties.setOutAction(new XMLSecurityConstants.Action[]{WSSConstants.SIGNATURE});\n        properties.setSignatureUser(\"myalias\");\n        \n        Properties cryptoProperties = \n            CryptoFactory.getProperties(\"outsecurity.properties\", this.getClass().getClassLoader());\n        properties.setSignatureCryptoProperties(cryptoProperties);\n        properties.setCallbackHandler(new TestPwdCallback());\n        WSS4JStaxOutInterceptor ohandler = new WSS4JStaxOutInterceptor(properties);\n        client.getOutInterceptors().add(ohandler);\n\n        assertEquals(\"test\", echo.echo(\"test\"));\n    }","id":16682,"modified_method":"@Test\n    public void testSignature() throws Exception {\n        // Create + configure service\n        Service service = createService();\n        \n        WSSSecurityProperties inProperties = new WSSSecurityProperties();\n        inProperties.setCallbackHandler(new TestPwdCallback());\n        Properties cryptoProperties = \n            CryptoFactory.getProperties(\"insecurity.properties\", this.getClass().getClassLoader());\n        inProperties.setSignatureVerificationCryptoProperties(cryptoProperties);\n        WSS4JStaxInInterceptor inhandler = new WSS4JStaxInInterceptor(inProperties);\n        service.getInInterceptors().add(inhandler);\n        \n        // Create + configure client\n        Echo echo = createClientProxy();\n        \n        Client client = ClientProxy.getClient(echo);\n        client.getInInterceptors().add(new LoggingInInterceptor());\n        client.getOutInterceptors().add(new LoggingOutInterceptor());\n        \n        WSSSecurityProperties properties = new WSSSecurityProperties();\n        properties.setOutAction(new XMLSecurityConstants.Action[]{WSSConstants.SIGNATURE});\n        properties.setSignatureUser(\"myalias\");\n        \n        Properties outCryptoProperties = \n            CryptoFactory.getProperties(\"outsecurity.properties\", this.getClass().getClassLoader());\n        properties.setSignatureCryptoProperties(outCryptoProperties);\n        properties.setCallbackHandler(new TestPwdCallback());\n        WSS4JStaxOutInterceptor ohandler = new WSS4JStaxOutInterceptor(properties);\n        client.getOutInterceptors().add(ohandler);\n\n        assertEquals(\"test\", echo.echo(\"test\"));\n    }","commit_id":"bb2757c945ea3bcd93d321782fb4df39aaadd133","url":"https://github.com/apache/cxf"},{"original_method":"@Test\n    public void testEncryptUsernameToken() throws Exception {\n        // Create + configure service\n        createService();\n        \n        // Create + configure client\n        Echo echo = createClientProxy();\n        \n        Client client = ClientProxy.getClient(echo);\n        client.getInInterceptors().add(new LoggingInInterceptor());\n        client.getOutInterceptors().add(new LoggingOutInterceptor());\n        \n        WSSSecurityProperties properties = new WSSSecurityProperties();\n        properties.setOutAction(\n            new XMLSecurityConstants.Action[]{WSSConstants.USERNAMETOKEN, WSSConstants.ENCRYPT}\n        );\n        properties.addEncryptionPart(\n            new SecurePart(new QName(WSSConstants.NS_WSSE10, \"UsernameToken\"), SecurePart.Modifier.Element)\n        );\n        properties.setEncryptionUser(\"myalias\");\n        properties.setTokenUser(\"username\");\n        \n        Properties cryptoProperties = \n            CryptoFactory.getProperties(\"outsecurity.properties\", this.getClass().getClassLoader());\n        properties.setEncryptionCryptoProperties(cryptoProperties);\n        properties.setCallbackHandler(new TestPwdCallback());\n        WSS4JStaxOutInterceptor ohandler = new WSS4JStaxOutInterceptor(properties);\n        client.getOutInterceptors().add(ohandler);\n\n        assertEquals(\"test\", echo.echo(\"test\"));\n    }","id":16683,"modified_method":"@Test\n    public void testEncryptUsernameToken() throws Exception {\n        // Create + configure service\n        Service service = createService();\n        \n        WSSSecurityProperties inProperties = new WSSSecurityProperties();\n        inProperties.setCallbackHandler(new TestPwdCallback());\n        Properties cryptoProperties = \n            CryptoFactory.getProperties(\"insecurity.properties\", this.getClass().getClassLoader());\n        inProperties.setDecryptionCryptoProperties(cryptoProperties);\n        WSS4JStaxInInterceptor inhandler = new WSS4JStaxInInterceptor(inProperties);\n        service.getInInterceptors().add(inhandler);\n        \n        // Create + configure client\n        Echo echo = createClientProxy();\n        \n        Client client = ClientProxy.getClient(echo);\n        client.getInInterceptors().add(new LoggingInInterceptor());\n        client.getOutInterceptors().add(new LoggingOutInterceptor());\n        \n        WSSSecurityProperties properties = new WSSSecurityProperties();\n        properties.setOutAction(\n            new XMLSecurityConstants.Action[]{WSSConstants.USERNAMETOKEN, WSSConstants.ENCRYPT}\n        );\n        properties.addEncryptionPart(\n            new SecurePart(new QName(WSSConstants.NS_WSSE10, \"UsernameToken\"), SecurePart.Modifier.Element)\n        );\n        properties.setEncryptionUser(\"myalias\");\n        properties.setTokenUser(\"username\");\n        \n        Properties outCryptoProperties = \n            CryptoFactory.getProperties(\"outsecurity.properties\", this.getClass().getClassLoader());\n        properties.setEncryptionCryptoProperties(outCryptoProperties);\n        properties.setCallbackHandler(new TestPwdCallback());\n        WSS4JStaxOutInterceptor ohandler = new WSS4JStaxOutInterceptor(properties);\n        client.getOutInterceptors().add(ohandler);\n\n        assertEquals(\"test\", echo.echo(\"test\"));\n    }","commit_id":"bb2757c945ea3bcd93d321782fb4df39aaadd133","url":"https://github.com/apache/cxf"},{"original_method":"@Test\n    @org.junit.Ignore\n    public void testEncryptSignature() throws Exception {\n        // Create + configure service\n        createService();\n        \n        // Create + configure client\n        Echo echo = createClientProxy();\n        \n        Client client = ClientProxy.getClient(echo);\n        client.getInInterceptors().add(new LoggingInInterceptor());\n        client.getOutInterceptors().add(new LoggingOutInterceptor());\n        \n        WSSSecurityProperties properties = new WSSSecurityProperties();\n        properties.setOutAction(\n            new XMLSecurityConstants.Action[]{WSSConstants.ENCRYPT, WSSConstants.SIGNATURE}\n        );\n        properties.setEncryptionUser(\"myalias\");\n        properties.setSignatureUser(\"myalias\");\n        \n        Properties cryptoProperties = \n            CryptoFactory.getProperties(\"outsecurity.properties\", this.getClass().getClassLoader());\n        properties.setEncryptionCryptoProperties(cryptoProperties);\n        properties.setSignatureCryptoProperties(cryptoProperties);\n        properties.setCallbackHandler(new TestPwdCallback());\n        WSS4JStaxOutInterceptor ohandler = new WSS4JStaxOutInterceptor(properties);\n        client.getOutInterceptors().add(ohandler);\n\n        assertEquals(\"test\", echo.echo(\"test\"));\n    }","id":16684,"modified_method":"@Test\n    public void testEncryptSignature() throws Exception {\n        // Create + configure service\n        Service service = createService();\n        \n        WSSSecurityProperties inProperties = new WSSSecurityProperties();\n        inProperties.setCallbackHandler(new TestPwdCallback());\n        Properties cryptoProperties = \n            CryptoFactory.getProperties(\"insecurity.properties\", this.getClass().getClassLoader());\n        inProperties.setSignatureVerificationCryptoProperties(cryptoProperties);\n        inProperties.setDecryptionCryptoProperties(cryptoProperties);\n        WSS4JStaxInInterceptor inhandler = new WSS4JStaxInInterceptor(inProperties);\n        service.getInInterceptors().add(inhandler);\n        \n        // Create + configure client\n        Echo echo = createClientProxy();\n        \n        Client client = ClientProxy.getClient(echo);\n        client.getInInterceptors().add(new LoggingInInterceptor());\n        client.getOutInterceptors().add(new LoggingOutInterceptor());\n        \n        WSSSecurityProperties properties = new WSSSecurityProperties();\n        properties.setOutAction(\n            new XMLSecurityConstants.Action[]{WSSConstants.ENCRYPT, WSSConstants.SIGNATURE}\n        );\n        properties.setEncryptionUser(\"myalias\");\n        properties.setSignatureUser(\"myalias\");\n        \n        Properties outCryptoProperties = \n            CryptoFactory.getProperties(\"outsecurity.properties\", this.getClass().getClassLoader());\n        properties.setSignatureCryptoProperties(outCryptoProperties);\n        properties.setEncryptionCryptoProperties(outCryptoProperties);\n        properties.setCallbackHandler(new TestPwdCallback());\n        WSS4JStaxOutInterceptor ohandler = new WSS4JStaxOutInterceptor(properties);\n        client.getOutInterceptors().add(ohandler);\n\n        assertEquals(\"test\", echo.echo(\"test\"));\n    }","commit_id":"bb2757c945ea3bcd93d321782fb4df39aaadd133","url":"https://github.com/apache/cxf"},{"original_method":"@Test\n    public void testTimestamp() throws Exception {\n        // Create + configure service\n        createService();\n        \n        // Create + configure client\n        Echo echo = createClientProxy();\n        \n        Client client = ClientProxy.getClient(echo);\n        client.getInInterceptors().add(new LoggingInInterceptor());\n        client.getOutInterceptors().add(new LoggingOutInterceptor());\n        \n        WSSSecurityProperties properties = new WSSSecurityProperties();\n        properties.setOutAction(new XMLSecurityConstants.Action[]{WSSConstants.TIMESTAMP});\n        \n        WSS4JStaxOutInterceptor ohandler = new WSS4JStaxOutInterceptor(properties);\n        client.getOutInterceptors().add(ohandler);\n\n        assertEquals(\"test\", echo.echo(\"test\"));\n    }","id":16685,"modified_method":"@Test\n    public void testTimestamp() throws Exception {\n        // Create + configure service\n        Service service = createService();\n        \n        WSSSecurityProperties inProperties = new WSSSecurityProperties();\n        WSS4JStaxInInterceptor inhandler = new WSS4JStaxInInterceptor(inProperties);\n        service.getInInterceptors().add(inhandler);\n        \n        // Create + configure client\n        Echo echo = createClientProxy();\n        \n        Client client = ClientProxy.getClient(echo);\n        client.getInInterceptors().add(new LoggingInInterceptor());\n        client.getOutInterceptors().add(new LoggingOutInterceptor());\n        \n        WSSSecurityProperties properties = new WSSSecurityProperties();\n        properties.setOutAction(new XMLSecurityConstants.Action[]{WSSConstants.TIMESTAMP});\n        \n        WSS4JStaxOutInterceptor ohandler = new WSS4JStaxOutInterceptor(properties);\n        client.getOutInterceptors().add(ohandler);\n\n        assertEquals(\"test\", echo.echo(\"test\"));\n    }","commit_id":"bb2757c945ea3bcd93d321782fb4df39aaadd133","url":"https://github.com/apache/cxf"},{"original_method":"@Configuration\n    public Option[] config() {\n        return new Option[]{\n                esbDistributionConfiguration(\"jboss-fuse-minimal\"), keepRuntimeFolder(),\n                editConfigurationFilePut(\"system.properties\", \"esb.version\", MavenUtils.asInProject().getVersion(GROUP_ID, ARTIFACT_ID)),\n                logLevel(LogLevelOption.LogLevel.INFO)};\n    }","id":16686,"modified_method":"@Configuration\n    public Option[] config() {\n        return new Option[]{\n                new DefaultCompositeOption(esbDistributionConfiguration(\"jboss-fuse-minimal\")),\n        };\n    }","commit_id":"18458f077df104c5bb09db9fb4e9563028fddb17","url":"https://github.com/fabric8io/fabric8"},{"original_method":"@Configuration\n    public Option[] config() {\n        return new Option[] {\n                karafDistributionConfiguration().frameworkUrl(maven().groupId(\"org.jboss.fuse\").artifactId(\"jboss-fuse-full\").versionAsInProject().type(\"zip\"))\n                        .karafVersion(MavenUtils.getArtifactVersion(\"org.jboss.fuse\", \"jboss-fuse-full\")).name(\"JBoss Fuse\").unpackDirectory(new File(\"target/exam\")), \n                        useOwnExamBundlesStartLevel(50),\n                        editConfigurationFilePut(\"etc/config.properties\", \"karaf.startlevel.bundle\", \"50\"),\n                        editConfigurationFilePut(\"etc/config.properties\", \"karaf.startup.message\", \"Loading Fuse from: ${karaf.home}\"),\n                        editConfigurationFilePut(\"etc/users.properties\", \"admin\", \"admin,admin\"),\n                        mavenBundle(\"org.fusesource.tooling.testing\", \"pax-exam-karaf\", MavenUtils.getArtifactVersion(\"org.fusesource.tooling.testing\", \"pax-exam-karaf\")),                      \n                        keepRuntimeFolder(),\n                        logLevel(LogLevelOption.LogLevel.ERROR) };\n    }","id":16687,"modified_method":"@Configuration\n    public Option[] config() {\n        return new Option[]{\n                new DefaultCompositeOption(esbDistributionConfiguration(\"jboss-fuse-full\")),\n        };\n    }","commit_id":"18458f077df104c5bb09db9fb4e9563028fddb17","url":"https://github.com/fabric8io/fabric8"},{"original_method":"@Test\n    @Ignore\n    public void testJms() throws Exception {\n        installUninstallFeature(\"quickstart-jms\");\n    }","id":16688,"modified_method":"@Test\n    @Ignore\n    public void testJms() throws Exception {\n        installUninstallCommand(\"quickstart-jms\");\n    }","commit_id":"18458f077df104c5bb09db9fb4e9563028fddb17","url":"https://github.com/fabric8io/fabric8"},{"original_method":"@Configuration\n    public Option[] config() {\n        return new Option[] {\n                karafDistributionConfiguration().frameworkUrl(maven().groupId(\"org.jboss.fuse\").artifactId(\"jboss-fuse-full\").versionAsInProject().type(\"zip\"))\n                        .karafVersion(MavenUtils.getArtifactVersion(\"org.jboss.fuse\", \"jboss-fuse-full\")).name(\"JBoss Fuse\").unpackDirectory(new File(\"target/exam\")), \n                        useOwnExamBundlesStartLevel(50),\n                        editConfigurationFilePut(\"etc/config.properties\", \"karaf.startlevel.bundle\", \"50\"),\n                        editConfigurationFilePut(\"etc/config.properties\", \"karaf.startup.message\", \"Loading Fuse from: ${karaf.home}\"),\n                        editConfigurationFilePut(\"etc/users.properties\", \"admin\", \"admin,admin\"),\n                        mavenBundle(\"org.fusesource.tooling.testing\", \"pax-exam-karaf\", MavenUtils.getArtifactVersion(\"org.fusesource.tooling.testing\", \"pax-exam-karaf\")),                      \n                        keepRuntimeFolder(),\n                        logLevel(LogLevelOption.LogLevel.ERROR) };\n    }","id":16689,"modified_method":"@Configuration\n    public Option[] config() {\n        return new Option[]{\n                new DefaultCompositeOption(esbDistributionConfiguration(\"jboss-fuse-full\")),\n        };\n    }","commit_id":"18458f077df104c5bb09db9fb4e9563028fddb17","url":"https://github.com/fabric8io/fabric8"},{"original_method":"@Configuration\n    public Option[] config() {\n        return new Option[]{\n                esbDistributionConfiguration(\"jboss-fuse-full\"), keepRuntimeFolder(),\n                editConfigurationFilePut(\"system.properties\", \"esb.version\", MavenUtils.asInProject().getVersion(GROUP_ID, \"jboss-fuse-full\")),\n                logLevel(LogLevelOption.LogLevel.INFO)};\n    }","id":16690,"modified_method":"@Configuration\n    public Option[] config() {\n        return new Option[]{\n                new DefaultCompositeOption(esbDistributionConfiguration(\"jboss-fuse-full\")),\n        };\n    }","commit_id":"18458f077df104c5bb09db9fb4e9563028fddb17","url":"https://github.com/fabric8io/fabric8"},{"original_method":"@Configuration\n    public Option[] config() {\n        return new Option[]{\n                esbDistributionConfiguration(\"jboss-fuse-medium\"), keepRuntimeFolder(),\n                editConfigurationFilePut(\"system.properties\", \"esb.version\", MavenUtils.asInProject().getVersion(GROUP_ID, \"jboss-fuse-medium\")),\n                logLevel(LogLevelOption.LogLevel.INFO)};\n    }","id":16691,"modified_method":"@Configuration\n    public Option[] config() {\n        return new Option[]{\n                new DefaultCompositeOption(esbDistributionConfiguration(\"jboss-fuse-medium\")),\n        };\n    }","commit_id":"18458f077df104c5bb09db9fb4e9563028fddb17","url":"https://github.com/fabric8io/fabric8"},{"original_method":"/**\n     * Create an {@link org.ops4j.pax.exam.Option} for using a ESB distribution.\n     *\n     * @return\n     */\n    protected Option esbDistributionConfiguration(String distroArtifactId) {\n        if (distroArtifactId == null) {\n            distroArtifactId = ARTIFACT_ID;\n        }\n        return new DefaultCompositeOption(\n                new Option[]{karafDistributionConfiguration().frameworkUrl(\n                        maven().groupId(GROUP_ID).artifactId(distroArtifactId).versionAsInProject().type(\"zip\"))\n                        .karafVersion(getKarafVersion()).name(\"JBoss Fuse Distro\").unpackDirectory(new File(\"target/paxexam/unpack/\")),\n                        useOwnExamBundlesStartLevel(50),\n                      editConfigurationFilePut(\"etc/config.properties\", \"karaf.startlevel.bundle\", \"50\"),\n                      mavenBundle(\"org.fusesource.tooling.testing\",\"pax-exam-karaf\", MavenUtils.getArtifactVersion(\"org.fusesource.tooling.testing\", \"pax-exam-karaf\")),\n                      mavenBundle(\"org.jboss.fuse.itests\",\"esb-itests-common\", MavenUtils.getArtifactVersion(\"org.jboss.fuse.itests\", \"esb-itests-common\")),\n                editConfigurationFilePut(\"etc/config.properties\", \"karaf.startup.message\", \"Loading Jboss Fuse from: ${karaf.home}\"),\n                editConfigurationFilePut(\"etc/users.properties\", \"admin\", \"admin,admin\"),\n                new DoNotModifyLogOption(),\n                keepRuntimeFolder()\n\n                });\n    }","id":16692,"modified_method":"/**\n     * Create an {@link org.ops4j.pax.exam.Option} for using a ESB distribution.\n     *\n     * @return\n     */\n    protected Option[] esbDistributionConfiguration(String distroArtifactId) {\n        if (distroArtifactId == null) {\n            distroArtifactId = ARTIFACT_ID;\n        }\n        return new Option[] {karafDistributionConfiguration().frameworkUrl(maven().groupId(\"org.jboss.fuse\").artifactId(distroArtifactId).versionAsInProject().type(\"zip\"))\n        .karafVersion(MavenUtils.getArtifactVersion(\"org.jboss.fuse\", distroArtifactId)).name(\"JBoss Fuse\").unpackDirectory(new File(\"target/exam\")), \n        useOwnExamBundlesStartLevel(50),\n        editConfigurationFilePut(\"etc/config.properties\", \"karaf.startlevel.bundle\", \"50\"),\n        editConfigurationFilePut(\"etc/config.properties\", \"karaf.startup.message\", \"Loading Fuse from: ${karaf.home}\"),\n        editConfigurationFilePut(\"etc/users.properties\", \"admin\", \"admin,admin\"),\n        mavenBundle(\"org.fusesource.tooling.testing\", \"pax-exam-karaf\", MavenUtils.getArtifactVersion(\"org.fusesource.tooling.testing\", \"pax-exam-karaf\")), \n        mavenBundle(\"org.jboss.fuse.itests\",\"esb-itests-common\", MavenUtils.getArtifactVersion(\"org.jboss.fuse.itests\", \"esb-itests-common\")),\n        keepRuntimeFolder(),\n        logLevel(LogLevelOption.LogLevel.ERROR)};\n    }","commit_id":"18458f077df104c5bb09db9fb4e9563028fddb17","url":"https://github.com/fabric8io/fabric8"},{"original_method":"public int run(String[] args) throws Exception {\n    if (args.length == 0) {\n      System.out.println(\"pentomino <output>\");\n      ToolRunner.printGenericCommandUsage(System.out);\n      return 2;\n    }\n\n    Configuration conf = getConf();\n    int width = conf.getInt(Pentomino.WIDTH, PENT_WIDTH);\n    int height = conf.getInt(Pentomino.HEIGHT, PENT_HEIGHT);\n    int depth = conf.getInt(Pentomino.DEPTH, PENT_DEPTH);\n    Class<? extends Pentomino> pentClass = conf.getClass(Pentomino.CLASS, \n      OneSidedPentomino.class, Pentomino.class);\n    int numMaps = conf.getInt(MRJobConfig.NUM_MAPS, DEFAULT_MAPS);\n    Path output = new Path(args[0]);\n    Path input = new Path(output + \"_input\");\n    FileSystem fileSys = FileSystem.get(conf);\n    try {\n      Job job = new Job(conf);\n      FileInputFormat.setInputPaths(job, input);\n      FileOutputFormat.setOutputPath(job, output);\n      job.setJarByClass(PentMap.class);\n      \n      job.setJobName(\"dancingElephant\");\n      Pentomino pent = ReflectionUtils.newInstance(pentClass, conf);\n      pent.initialize(width, height);\n      long inputSize = createInputDirectory(fileSys, input, pent, depth);\n      // for forcing the number of maps\n      FileInputFormat.setMaxInputSplitSize(job, (inputSize/numMaps));\n   \n      // the keys are the prefix strings\n      job.setOutputKeyClass(Text.class);\n      // the values are puzzle solutions\n      job.setOutputValueClass(Text.class);\n      \n      job.setMapperClass(PentMap.class);        \n      job.setReducerClass(Reducer.class);\n      \n      job.setNumReduceTasks(1);\n      \n      return (job.waitForCompletion(true) ? 0 : 1);\n      } finally {\n      fileSys.delete(input, true);\n    }\n  }","id":16693,"modified_method":"public int run(String[] args) throws Exception {\n    Configuration conf = getConf();\n    if (args.length == 0) {\n      System.out.println(\"Usage: pentomino <output> [-depth #] [-height #] [-width #]\");\n      ToolRunner.printGenericCommandUsage(System.out);\n      return 2;\n    }\n    // check for passed parameters, otherwise use defaults\n    int width = PENT_WIDTH;\n    int height = PENT_HEIGHT;\n    int depth = PENT_DEPTH;\n    for (int i = 0; i < args.length; i++) {\n      if (args[i].equalsIgnoreCase(\"-depth\")) {\n          depth = Integer.parseInt(args[i++].trim());\n      } else if (args[i].equalsIgnoreCase(\"-height\")) {\n\t  height = Integer.parseInt(args[i++].trim());\n      } else if (args[i].equalsIgnoreCase(\"-width\") ) {\n\t  width = Integer.parseInt(args[i++].trim()); \n      }\n    }\n    // now set the values within conf for M/R tasks to read, this\n    // will ensure values are set preventing MAPREDUCE-4678\n    conf.setInt(Pentomino.WIDTH, width);\n    conf.setInt(Pentomino.HEIGHT, height);\n    conf.setInt(Pentomino.DEPTH, depth);\n    Class<? extends Pentomino> pentClass = conf.getClass(Pentomino.CLASS, \n      OneSidedPentomino.class, Pentomino.class);\n    int numMaps = conf.getInt(MRJobConfig.NUM_MAPS, DEFAULT_MAPS);\n    Path output = new Path(args[0]);\n    Path input = new Path(output + \"_input\");\n    FileSystem fileSys = FileSystem.get(conf);\n    try {\n      Job job = new Job(conf);\n      FileInputFormat.setInputPaths(job, input);\n      FileOutputFormat.setOutputPath(job, output);\n      job.setJarByClass(PentMap.class);\n      \n      job.setJobName(\"dancingElephant\");\n      Pentomino pent = ReflectionUtils.newInstance(pentClass, conf);\n      pent.initialize(width, height);\n      long inputSize = createInputDirectory(fileSys, input, pent, depth);\n      // for forcing the number of maps\n      FileInputFormat.setMaxInputSplitSize(job, (inputSize/numMaps));\n   \n      // the keys are the prefix strings\n      job.setOutputKeyClass(Text.class);\n      // the values are puzzle solutions\n      job.setOutputValueClass(Text.class);\n      \n      job.setMapperClass(PentMap.class);        \n      job.setReducerClass(Reducer.class);\n      \n      job.setNumReduceTasks(1);\n      \n      return (job.waitForCompletion(true) ? 0 : 1);\n      } finally {\n      fileSys.delete(input, true);\n    }\n  }","commit_id":"e45b10365568185d0fd22546a4b666fa77dea7a9","url":"https://github.com/apache/hadoop"},{"original_method":"public final void actionPerformed(final AnActionEvent e) {\n    final ArrayList<RadComponent> selectedComponents = FormEditingUtil.getSelectedComponents(myEditor);\n    final JComponent rootContainerDelegee = myEditor.getRootContainer().getDelegee();\n    if(selectedComponents.size() == 0){\n      moveToFirstComponent(rootContainerDelegee);\n      return;\n    }\n    final RadComponent selectedComponent = selectedComponents.get(0);\n\n    if (moveSelectionByGrid(selectedComponent)) {\n      return;\n    }\n\n    // 1. We need to get coordinates of all editor's component in the same\n    // coordinate system. For example, in the RadRootContainer rootContainerDelegee's coordinate system.\n\n    final ArrayList<RadComponent> components = new ArrayList<RadComponent>();\n    final ArrayList<Point> points = new ArrayList<Point>();\n    FormEditingUtil.iterate(\n      myEditor.getRootContainer(),\n      new FormEditingUtil.ComponentVisitor<RadComponent>() {\n        public boolean visit(final RadComponent component) {\n          if (component instanceof RadAtomicComponent) {\n            if(selectedComponent.equals(component)){\n              return true;\n            }\n            components.add(component);\n            final JComponent _delegee = component.getDelegee();\n            final Point p = SwingUtilities.convertPoint(\n              _delegee,\n              new Point(0, 0),\n              rootContainerDelegee\n            );\n            p.x += _delegee.getWidth() / 2;\n            p.y += _delegee.getHeight() / 2;\n            points.add(p);\n          }\n          return true;\n        }\n      }\n    );\n    if(components.size() == 0){\n      return;\n    }\n\n    // 2.\n    final Point source = SwingUtilities.convertPoint(\n      selectedComponent.getDelegee(),\n      new Point(0, 0),\n      rootContainerDelegee\n    );\n    source.x += selectedComponent.getDelegee().getWidth() / 2;\n    source.y += selectedComponent.getDelegee().getHeight() / 2;\n    int min = Integer.MAX_VALUE;\n    int nextSelectedIndex = -1;\n    for(int i = points.size() - 1; i >= 0; i--){\n      final int distance = calcDistance(source, points.get(i));\n      if(distance < min){\n        min = distance;\n        nextSelectedIndex = i;\n      }\n    }\n    if(min == Integer.MAX_VALUE){\n      return;\n    }\n\n    LOG.assertTrue(nextSelectedIndex != -1);\n    final RadComponent component = components.get(nextSelectedIndex);\n    GuiEditorUtil.selectSingleComponent(component);\n  }","id":16694,"modified_method":"public final void actionPerformed(final AnActionEvent e) {\n    final ArrayList<RadComponent> selectedComponents = FormEditingUtil.getSelectedComponents(myEditor);\n    final JComponent rootContainerDelegee = myEditor.getRootContainer().getDelegee();\n    if(selectedComponents.size() == 0){\n      moveToFirstComponent(rootContainerDelegee);\n      return;\n    }\n    final RadComponent selectedComponent = selectedComponents.get(0);\n\n    if (moveSelectionByGrid(selectedComponent)) {\n      return;\n    }\n\n    // 1. We need to get coordinates of all editor's component in the same\n    // coordinate system. For example, in the RadRootContainer rootContainerDelegee's coordinate system.\n\n    final ArrayList<RadComponent> components = new ArrayList<RadComponent>();\n    final ArrayList<Point> points = new ArrayList<Point>();\n    FormEditingUtil.iterate(\n      myEditor.getRootContainer(),\n      new FormEditingUtil.ComponentVisitor<RadComponent>() {\n        public boolean visit(final RadComponent component) {\n          if (component instanceof RadAtomicComponent) {\n            if(selectedComponent.equals(component)){\n              return true;\n            }\n            components.add(component);\n            final JComponent _delegee = component.getDelegee();\n            final Point p = SwingUtilities.convertPoint(\n              _delegee,\n              new Point(0, 0),\n              rootContainerDelegee\n            );\n            p.x += _delegee.getWidth() / 2;\n            p.y += _delegee.getHeight() / 2;\n            points.add(p);\n          }\n          return true;\n        }\n      }\n    );\n    if(components.size() == 0){\n      return;\n    }\n\n    // 2.\n    final Point source = SwingUtilities.convertPoint(\n      selectedComponent.getDelegee(),\n      new Point(0, 0),\n      rootContainerDelegee\n    );\n    source.x += selectedComponent.getDelegee().getWidth() / 2;\n    source.y += selectedComponent.getDelegee().getHeight() / 2;\n    int min = Integer.MAX_VALUE;\n    int nextSelectedIndex = -1;\n    for(int i = points.size() - 1; i >= 0; i--){\n      final int distance = calcDistance(source, points.get(i));\n      if(distance < min){\n        min = distance;\n        nextSelectedIndex = i;\n      }\n    }\n    if(min == Integer.MAX_VALUE){\n      return;\n    }\n\n    LOG.assertTrue(nextSelectedIndex != -1);\n    final RadComponent component = components.get(nextSelectedIndex);\n    selectOrExtend(component);\n  }","commit_id":"98f865d09cbbf8846d21a75b92a5b1c3dab2f4c0","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public AbstractMoveSelectionAction(@NotNull final GuiEditor editor) {\n    myEditor = editor;\n  }","id":16695,"modified_method":"public AbstractMoveSelectionAction(@NotNull final GuiEditor editor, boolean extend) {\n    myEditor = editor;\n    myExtend = extend;\n  }","commit_id":"98f865d09cbbf8846d21a75b92a5b1c3dab2f4c0","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private boolean moveSelectionByGrid(final RadComponent selectedComponent) {\n    final RadContainer parent = selectedComponent.getParent();\n    if (parent == null || !parent.isGrid()) {\n      return false;\n    }\n\n    final GridLayoutManager grid = (GridLayoutManager) parent.getLayout();\n    int row = selectedComponent.getConstraints().getRow();\n    int column = selectedComponent.getConstraints().getColumn();\n\n    do {\n      row += getRowMoveDelta();\n      column += getColumnMoveDelta();\n      if (row < 0 || row >= grid.getRowCount() || column < 0 || column >= grid.getColumnCount()) {\n        return false;\n      }\n\n      final RadComponent component = parent.getComponentAtGrid(row, column);\n      if (component != null && component != selectedComponent) {\n        GuiEditorUtil.selectSingleComponent(component);\n        return true;\n      }\n    } while(true);\n  }","id":16696,"modified_method":"private boolean moveSelectionByGrid(final RadComponent selectedComponent) {\n    final RadContainer parent = selectedComponent.getParent();\n    if (parent == null || !parent.isGrid()) {\n      return false;\n    }\n\n    final GridLayoutManager grid = (GridLayoutManager) parent.getLayout();\n    int row = selectedComponent.getConstraints().getRow();\n    int column = selectedComponent.getConstraints().getColumn();\n\n    do {\n      row += getRowMoveDelta();\n      column += getColumnMoveDelta();\n      if (row < 0 || row >= grid.getRowCount() || column < 0 || column >= grid.getColumnCount()) {\n        return false;\n      }\n\n      final RadComponent component = parent.getComponentAtGrid(row, column);\n      if (component != null && component != selectedComponent) {\n        selectOrExtend(component);\n        return true;\n      }\n    } while(true);\n  }","commit_id":"98f865d09cbbf8846d21a75b92a5b1c3dab2f4c0","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public GlassLayer(final GuiEditor editor){\n    myEditor = editor;\n    enableEvents(AWTEvent.KEY_EVENT_MASK | AWTEvent.MOUSE_EVENT_MASK | AWTEvent.MOUSE_MOTION_EVENT_MASK);\n\n    final MoveSelectionToRightAction moveSelectionToRightAction = new MoveSelectionToRightAction(myEditor);\n    moveSelectionToRightAction.registerCustomShortcutSet(\n      ActionManager.getInstance().getAction(IdeActions.ACTION_EDITOR_MOVE_CARET_RIGHT).getShortcutSet(),\n      this\n    );\n\n    final MoveSelectionToLeftAction moveSelectionToLeftAction = new MoveSelectionToLeftAction(myEditor);\n    moveSelectionToLeftAction.registerCustomShortcutSet(\n      ActionManager.getInstance().getAction(IdeActions.ACTION_EDITOR_MOVE_CARET_LEFT).getShortcutSet(),\n      this\n    );\n\n    final MoveSelectionToUpAction moveSelectionToUpAction = new MoveSelectionToUpAction(myEditor);\n    moveSelectionToUpAction.registerCustomShortcutSet(\n      ActionManager.getInstance().getAction(IdeActions.ACTION_EDITOR_MOVE_CARET_UP).getShortcutSet(),\n      this\n    );\n\n    final MoveSelectionToDownAction moveSelectionToDownAction = new MoveSelectionToDownAction(myEditor);\n    moveSelectionToDownAction.registerCustomShortcutSet(\n      ActionManager.getInstance().getAction(IdeActions.ACTION_EDITOR_MOVE_CARET_DOWN).getShortcutSet(),\n      this\n    );\n\n    // F2 should start inplace editing\n    final StartInplaceEditingAction startInplaceEditingAction = new StartInplaceEditingAction(editor);\n    startInplaceEditingAction.registerCustomShortcutSet(\n      new CustomShortcutSet(KeyStroke.getKeyStroke(KeyEvent.VK_F2, 0)),\n      this\n    );\n  }","id":16697,"modified_method":"public GlassLayer(final GuiEditor editor){\n    myEditor = editor;\n    enableEvents(AWTEvent.KEY_EVENT_MASK | AWTEvent.MOUSE_EVENT_MASK | AWTEvent.MOUSE_MOTION_EVENT_MASK);\n\n    registerKeyboardAction(new MoveSelectionToRightAction(myEditor, false), IdeActions.ACTION_EDITOR_MOVE_CARET_RIGHT);\n    registerKeyboardAction(new MoveSelectionToLeftAction(myEditor, false), IdeActions.ACTION_EDITOR_MOVE_CARET_LEFT);\n    registerKeyboardAction(new MoveSelectionToUpAction(myEditor, false), IdeActions.ACTION_EDITOR_MOVE_CARET_UP);\n    registerKeyboardAction(new MoveSelectionToDownAction(myEditor, false), IdeActions.ACTION_EDITOR_MOVE_CARET_DOWN);\n\n    registerKeyboardAction(new MoveSelectionToRightAction(myEditor, true), \"EditorRightWithSelection\");\n    registerKeyboardAction(new MoveSelectionToLeftAction(myEditor, true), \"EditorLeftWithSelection\");\n    registerKeyboardAction(new MoveSelectionToUpAction(myEditor, true), \"EditorUpWithSelection\");\n    registerKeyboardAction(new MoveSelectionToDownAction(myEditor, true), \"EditorDownWithSelection\");\n\n    // F2 should start inplace editing\n    final StartInplaceEditingAction startInplaceEditingAction = new StartInplaceEditingAction(editor);\n    startInplaceEditingAction.registerCustomShortcutSet(\n      new CustomShortcutSet(KeyStroke.getKeyStroke(KeyEvent.VK_F2, 0)),\n      this\n    );\n  }","commit_id":"98f865d09cbbf8846d21a75b92a5b1c3dab2f4c0","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public MoveSelectionToDownAction(final GuiEditor editor) {\n    super(editor);\n  }","id":16698,"modified_method":"public MoveSelectionToDownAction(final GuiEditor editor, boolean extend) {\n    super(editor, extend);\n  }","commit_id":"98f865d09cbbf8846d21a75b92a5b1c3dab2f4c0","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public MoveSelectionToLeftAction(final GuiEditor editor) {\n    super(editor);\n  }","id":16699,"modified_method":"public MoveSelectionToLeftAction(final GuiEditor editor, boolean extend) {\n    super(editor, extend);\n  }","commit_id":"98f865d09cbbf8846d21a75b92a5b1c3dab2f4c0","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public MoveSelectionToRightAction(final GuiEditor editor) {\n    super(editor);\n  }","id":16700,"modified_method":"public MoveSelectionToRightAction(final GuiEditor editor, final boolean extend) {\n    super(editor, extend);\n  }","commit_id":"98f865d09cbbf8846d21a75b92a5b1c3dab2f4c0","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public MoveSelectionToUpAction(final GuiEditor editor) {\n    super(editor);\n  }","id":16701,"modified_method":"public MoveSelectionToUpAction(final GuiEditor editor, boolean extend) {\n    super(editor, extend);\n  }","commit_id":"98f865d09cbbf8846d21a75b92a5b1c3dab2f4c0","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private static SNode _quotation_createNode_ol94f8_a0a0b0b0d0a3a0a22(Object parameter_1) {\n    PersistenceFacade facade = PersistenceFacade.getInstance();\n    SNode quotedNode_2 = null;\n    quotedNode_2 = SModelUtil_new.instantiateConceptDeclaration(MetaAdapterFactory.getConcept(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc59b314L, \"jetbrains.mps.baseLanguage.structure.IntegerConstant\"), null, null, false);\n    SNodeAccessUtil.setProperty(quotedNode_2, MetaAdapterFactory.getProperty(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc59b314L, 0xf8cc59b315L, \"value\"), (String) parameter_1);\n    return quotedNode_2;\n  }","id":16702,"modified_method":"private static SNode _quotation_createNode_ol94f8_a0a0b0b0e0a3a0a22(Object parameter_1) {\n    PersistenceFacade facade = PersistenceFacade.getInstance();\n    SNode quotedNode_2 = null;\n    quotedNode_2 = SModelUtil_new.instantiateConceptDeclaration(MetaAdapterFactory.getConcept(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc59b314L, \"jetbrains.mps.baseLanguage.structure.IntegerConstant\"), null, null, false);\n    SNodeAccessUtil.setProperty(quotedNode_2, MetaAdapterFactory.getProperty(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc59b314L, 0xf8cc59b315L, \"value\"), (String) parameter_1);\n    return quotedNode_2;\n  }","commit_id":"a664884433c3b03a962604b6817fc9fc31b8a497","url":"https://github.com/JetBrains/MPS"},{"original_method":"private void updateStaticFields(SNode cls) {\n    for (ASMField field : myParsedClass.getDeclaredFields()) {\n      if (shallSkip(field)) {\n        continue;\n      }\n      if (!(field.isStatic())) {\n        continue;\n      }\n      if (field.isCompilerGenerated()) {\n        continue;\n      }\n      if (field.isEnumConstant()) {\n        SNode enumClass = SNodeOperations.cast(cls, MetaAdapterFactory.getConcept(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xfc367070a5L, \"jetbrains.mps.baseLanguage.structure.EnumClass\"));\n        SNode ecd = _quotation_createNode_ol94f8_a0b0d0a0w(null, ASMNodeId.createId(myParsedClass, field), field.getName());\n\n        ListSequence.fromList(SLinkOperations.getChildren(enumClass, MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xfc367070a5L, 0xfc367503acL, \"enumConstant\"))).addElement(ecd);\n      } else {\n        SNode decl = _quotation_createNode_ol94f8_a0a0a3a0a22(null, ASMNodeId.createId(myParsedClass, field), createVisibility(field), getTypeByASMType(field.getGenericType(), null, cls), field.getName());\n        SPropertyOperations.set(decl, MetaAdapterFactory.getProperty(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x11d2ea8a339L, 0x11d2ea948a4L, \"isDeprecated\"), \"\" + (field.isDeprecated()));\n        for (ASMAnnotation annotation : field.getAnnotations()) {\n          ListSequence.fromList(SLinkOperations.getChildren(decl, MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x114a6be947aL, 0x114a6beb0bdL, \"annotation\"))).addElement(createAnnotation(annotation));\n        }\n        if (field.isFinal()) {\n          SPropertyOperations.set(decl, MetaAdapterFactory.getProperty(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37a7f6eL, 0x111f9e9f00cL, \"isFinal\"), \"\" + (true));\n          if (field.hasValue()) {\n            Object value = field.getValue();\n            if (value instanceof Integer) {\n              SLinkOperations.setTarget(decl, MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37a7f6eL, 0xf8c37f506eL, \"initializer\"), _quotation_createNode_ol94f8_a0a0b0b0d0a3a0a22(value.toString()));\n            } else if (value instanceof String) {\n              SLinkOperations.setTarget(decl, MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37a7f6eL, 0xf8c37f506eL, \"initializer\"), _quotation_createNode_ol94f8_a0a0a1a1a3a0d0a0w((String) value));\n            }\n          }\n        }\n\n        ListSequence.fromList(SLinkOperations.getChildren(cls, MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x101d9d3ca30L, 0x4a9a46de59132803L, \"member\"))).addElement(decl);\n      }\n    }\n  }","id":16703,"modified_method":"private void updateStaticFields(SNode cls) {\n    for (ASMField field : myParsedClass.getDeclaredFields()) {\n      if (shallSkip(field)) {\n        continue;\n      }\n      if (!(field.isStatic())) {\n        continue;\n      }\n      if (field.isCompilerGenerated()) {\n        continue;\n      }\n      if (field.isEnumConstant()) {\n        SNode enumClass = SNodeOperations.cast(cls, MetaAdapterFactory.getConcept(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xfc367070a5L, \"jetbrains.mps.baseLanguage.structure.EnumClass\"));\n        SNode ecd = _quotation_createNode_ol94f8_a0b0d0a0w(null, ASMNodeId.createId(myParsedClass, field), field.getName());\n\n        ListSequence.fromList(SLinkOperations.getChildren(enumClass, MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xfc367070a5L, 0xfc367503acL, \"enumConstant\"))).addElement(ecd);\n      } else {\n        SNode decl = _quotation_createNode_ol94f8_a0a0a3a0a22(null, ASMNodeId.createId(myParsedClass, field), createVisibility(field), getTypeByASMType(field.getGenericType(), null, cls), field.getName());\n        if (field.isDeprecated()) {\n          BehaviorReflection.invokeVirtual(Void.class, decl, \"virtual_markDeprecated_7983358747957651026\", new Object[]{});\n        }\n\n        for (ASMAnnotation annotation : field.getAnnotations()) {\n          ListSequence.fromList(SLinkOperations.getChildren(decl, MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x114a6be947aL, 0x114a6beb0bdL, \"annotation\"))).addElement(createAnnotation(annotation));\n        }\n        if (field.isFinal()) {\n          SPropertyOperations.set(decl, MetaAdapterFactory.getProperty(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37a7f6eL, 0x111f9e9f00cL, \"isFinal\"), \"\" + (true));\n          if (field.hasValue()) {\n            Object value = field.getValue();\n            if (value instanceof Integer) {\n              SLinkOperations.setTarget(decl, MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37a7f6eL, 0xf8c37f506eL, \"initializer\"), _quotation_createNode_ol94f8_a0a0b0b0e0a3a0a22(value.toString()));\n            } else if (value instanceof String) {\n              SLinkOperations.setTarget(decl, MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37a7f6eL, 0xf8c37f506eL, \"initializer\"), _quotation_createNode_ol94f8_a0a0a1a1a4a0d0a0w((String) value));\n            }\n          }\n        }\n\n        ListSequence.fromList(SLinkOperations.getChildren(cls, MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x101d9d3ca30L, 0x4a9a46de59132803L, \"member\"))).addElement(decl);\n      }\n    }\n  }","commit_id":"a664884433c3b03a962604b6817fc9fc31b8a497","url":"https://github.com/JetBrains/MPS"},{"original_method":"private static SNode _quotation_createNode_ol94f8_a0c0g0g0g0a0y(Object parameter_1, Object parameter_2) {\n    PersistenceFacade facade = PersistenceFacade.getInstance();\n    SNode quotedNode_3 = null;\n    SNode quotedNode_4 = null;\n    quotedNode_3 = SModelUtil_new.instantiateConceptDeclaration(MetaAdapterFactory.getConcept(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c77f1e94L, \"jetbrains.mps.baseLanguage.structure.ParameterDeclaration\"), null, null, false);\n    SNodeAccessUtil.setProperty(quotedNode_3, MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, \"name\"), (String) parameter_2);\n    quotedNode_4 = (SNode) parameter_1;\n    if (quotedNode_4 != null) {\n      quotedNode_3.addChild(MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x450368d90ce15bc3L, 0x4ed4d318133c80ceL, \"type\"), HUtil.copyIfNecessary(quotedNode_4));\n    }\n    return quotedNode_3;\n  }","id":16704,"modified_method":"private static SNode _quotation_createNode_ol94f8_a0c0g0g0h0a0y(Object parameter_1, Object parameter_2) {\n    PersistenceFacade facade = PersistenceFacade.getInstance();\n    SNode quotedNode_3 = null;\n    SNode quotedNode_4 = null;\n    quotedNode_3 = SModelUtil_new.instantiateConceptDeclaration(MetaAdapterFactory.getConcept(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c77f1e94L, \"jetbrains.mps.baseLanguage.structure.ParameterDeclaration\"), null, null, false);\n    SNodeAccessUtil.setProperty(quotedNode_3, MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, \"name\"), (String) parameter_2);\n    quotedNode_4 = (SNode) parameter_1;\n    if (quotedNode_4 != null) {\n      quotedNode_3.addChild(MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x450368d90ce15bc3L, 0x4ed4d318133c80ceL, \"type\"), HUtil.copyIfNecessary(quotedNode_4));\n    }\n    return quotedNode_3;\n  }","commit_id":"a664884433c3b03a962604b6817fc9fc31b8a497","url":"https://github.com/JetBrains/MPS"},{"original_method":"private void updateBaseMethod(ASMMethod m, SNode md, SNode cls) {\n    SPropertyOperations.set(md, MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, \"name\"), m.getName());\n    SLinkOperations.setTarget(md, MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b1fcL, 0xf8cc56b1ffL, \"body\"), _quotation_createNode_ol94f8_a0b0bb());\n    SPropertyOperations.set(md, MetaAdapterFactory.getProperty(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b1fcL, 0x113294bffd2L, \"isFinal\"), \"\" + (m.isFinal()));\n    SPropertyOperations.set(md, MetaAdapterFactory.getProperty(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x11d2ea8a339L, 0x11d2ea948a4L, \"isDeprecated\"), \"\" + (m.isDeprecated()));\n    SPropertyOperations.set(md, MetaAdapterFactory.getProperty(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b1fcL, 0x3b576cda23612c7aL, \"isSynchronized\"), \"\" + (m.isSynchronized()));\n    updateTypeVariables(m, md, cls);\n    SLinkOperations.setTarget(md, MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b1fcL, 0xf8cc56b1fdL, \"returnType\"), getTypeByASMType(m.getGenericReturnType(), md, cls));\n    {\n      ASMType pt;\n      String pn;\n      List<ASMAnnotation> pa;\n      Iterator<ASMType> pt_iterator = ListSequence.fromList(m.getGenericParameterTypes()).iterator();\n      Iterator<String> pn_iterator = ListSequence.fromList(m.getParameterNames()).iterator();\n      Iterator<List<ASMAnnotation>> pa_iterator = ListSequence.fromList(m.getParameterAnnotations()).iterator();\n      while (true) {\n        if (!(pt_iterator.hasNext())) {\n          break;\n        }\n        if (!(pn_iterator.hasNext())) {\n          break;\n        }\n        if (!(pa_iterator.hasNext())) {\n          break;\n        }\n        pt = pt_iterator.next();\n        pn = pn_iterator.next();\n        pa = pa_iterator.next();\n        {\n          SNode pd = _quotation_createNode_ol94f8_a0a0g0g0h0bb(getTypeByASMType(pt, md, cls), pn);\n          addAnnotationsToParameter(pd, pa);\n          ListSequence.fromList(SLinkOperations.getChildren(md, MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b1fcL, 0xf8cc56b1feL, \"parameter\"))).addElement(pd);\n        }\n      }\n    }\n    for (ASMType exception : m.getExceptionTypes()) {\n      ListSequence.fromList(SLinkOperations.getChildren(md, MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b1fcL, 0x10f383d6949L, \"throwsItem\"))).addElement(getTypeByASMType(exception, md, cls));\n    }\n    for (ASMAnnotation annotation : m.getAnnotations()) {\n      ListSequence.fromList(SLinkOperations.getChildren(md, MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x114a6be947aL, 0x114a6beb0bdL, \"annotation\"))).addElement(createAnnotation(annotation));\n    }\n  }","id":16705,"modified_method":"private void updateBaseMethod(ASMMethod m, SNode md, SNode cls) {\n    SPropertyOperations.set(md, MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, \"name\"), m.getName());\n    SLinkOperations.setTarget(md, MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b1fcL, 0xf8cc56b1ffL, \"body\"), _quotation_createNode_ol94f8_a0b0bb());\n    SPropertyOperations.set(md, MetaAdapterFactory.getProperty(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b1fcL, 0x113294bffd2L, \"isFinal\"), \"\" + (m.isFinal()));\n    if (m.isDeprecated()) {\n      BehaviorReflection.invokeVirtual(Void.class, md, \"virtual_markDeprecated_7983358747957651026\", new Object[]{});\n    }\n    SPropertyOperations.set(md, MetaAdapterFactory.getProperty(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b1fcL, 0x3b576cda23612c7aL, \"isSynchronized\"), \"\" + (m.isSynchronized()));\n    updateTypeVariables(m, md, cls);\n    SLinkOperations.setTarget(md, MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b1fcL, 0xf8cc56b1fdL, \"returnType\"), getTypeByASMType(m.getGenericReturnType(), md, cls));\n    {\n      ASMType pt;\n      String pn;\n      List<ASMAnnotation> pa;\n      Iterator<ASMType> pt_iterator = ListSequence.fromList(m.getGenericParameterTypes()).iterator();\n      Iterator<String> pn_iterator = ListSequence.fromList(m.getParameterNames()).iterator();\n      Iterator<List<ASMAnnotation>> pa_iterator = ListSequence.fromList(m.getParameterAnnotations()).iterator();\n      while (true) {\n        if (!(pt_iterator.hasNext())) {\n          break;\n        }\n        if (!(pn_iterator.hasNext())) {\n          break;\n        }\n        if (!(pa_iterator.hasNext())) {\n          break;\n        }\n        pt = pt_iterator.next();\n        pn = pn_iterator.next();\n        pa = pa_iterator.next();\n        {\n          SNode pd = _quotation_createNode_ol94f8_a0a0g0g0h0bb(getTypeByASMType(pt, md, cls), pn);\n          addAnnotationsToParameter(pd, pa);\n          ListSequence.fromList(SLinkOperations.getChildren(md, MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b1fcL, 0xf8cc56b1feL, \"parameter\"))).addElement(pd);\n        }\n      }\n    }\n    for (ASMType exception : m.getExceptionTypes()) {\n      ListSequence.fromList(SLinkOperations.getChildren(md, MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b1fcL, 0x10f383d6949L, \"throwsItem\"))).addElement(getTypeByASMType(exception, md, cls));\n    }\n    for (ASMAnnotation annotation : m.getAnnotations()) {\n      ListSequence.fromList(SLinkOperations.getChildren(md, MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x114a6be947aL, 0x114a6beb0bdL, \"annotation\"))).addElement(createAnnotation(annotation));\n    }\n  }","commit_id":"a664884433c3b03a962604b6817fc9fc31b8a497","url":"https://github.com/JetBrains/MPS"},{"original_method":"private static SNode _quotation_createNode_ol94f8_a0a0a5a0a42(Object parameter_1) {\n    PersistenceFacade facade = PersistenceFacade.getInstance();\n    SNode quotedNode_2 = null;\n    quotedNode_2 = SModelUtil_new.instantiateConceptDeclaration(MetaAdapterFactory.getConcept(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x1024639ed74L, \"jetbrains.mps.baseLanguage.structure.TypeVariableDeclaration\"), null, null, false);\n    SNodeAccessUtil.setProperty(quotedNode_2, MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, \"name\"), (String) parameter_1);\n    return quotedNode_2;\n  }","id":16706,"modified_method":"private static SNode _quotation_createNode_ol94f8_a0a0a6a0a42(Object parameter_1) {\n    PersistenceFacade facade = PersistenceFacade.getInstance();\n    SNode quotedNode_2 = null;\n    quotedNode_2 = SModelUtil_new.instantiateConceptDeclaration(MetaAdapterFactory.getConcept(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x1024639ed74L, \"jetbrains.mps.baseLanguage.structure.TypeVariableDeclaration\"), null, null, false);\n    SNodeAccessUtil.setProperty(quotedNode_2, MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, \"name\"), (String) parameter_1);\n    return quotedNode_2;\n  }","commit_id":"a664884433c3b03a962604b6817fc9fc31b8a497","url":"https://github.com/JetBrains/MPS"},{"original_method":"private void initInterface(SNode intfc) {\n    SPropertyOperations.set(intfc, MetaAdapterFactory.getProperty(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x11d2ea8a339L, 0x11d2ea948a4L, \"isDeprecated\"), \"\" + (myParsedClass.isDeprecated()));\n    updateAnnotations(intfc);\n    updateTypeVariables(intfc);\n    updateExtendsForInterface(intfc);\n    updateStaticFields(intfc);\n    updateInstanceMethods(intfc);\n    updateStaticMethods(intfc);\n    updateVisibility();\n  }","id":16707,"modified_method":"private void initInterface(SNode intfc) {\n    if (myParsedClass.isDeprecated()) {\n      BehaviorReflection.invokeVirtual(Void.class, intfc, \"virtual_markDeprecated_7983358747957651026\", new Object[]{});\n    }\n\n    updateAnnotations(intfc);\n    updateTypeVariables(intfc);\n    updateExtendsForInterface(intfc);\n    updateStaticFields(intfc);\n    updateInstanceMethods(intfc);\n    updateStaticMethods(intfc);\n    updateVisibility();\n  }","commit_id":"a664884433c3b03a962604b6817fc9fc31b8a497","url":"https://github.com/JetBrains/MPS"},{"original_method":"private void updateInstanceFields(SNode cls) {\n    for (ASMField field : myParsedClass.getDeclaredFields()) {\n      if (shallSkip(field)) {\n        continue;\n      }\n      if (field.isStatic()) {\n        continue;\n      }\n      if (field.isCompilerGenerated()) {\n        continue;\n      }\n      SNode decl = _quotation_createNode_ol94f8_a0d0a0v(null, ASMNodeId.createId(myParsedClass, field), createVisibility(field), getTypeByASMType(field.getGenericType(), null, cls), field.getName());\n      SPropertyOperations.set(decl, MetaAdapterFactory.getProperty(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x11d2ea8a339L, 0x11d2ea948a4L, \"isDeprecated\"), \"\" + (field.isDeprecated()));\n      for (ASMAnnotation annotation : field.getAnnotations()) {\n        ListSequence.fromList(SLinkOperations.getChildren(decl, MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x114a6be947aL, 0x114a6beb0bdL, \"annotation\"))).addElement(createAnnotation(annotation));\n      }\n\n      ListSequence.fromList(SLinkOperations.getChildren(cls, MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x101d9d3ca30L, 0x4a9a46de59132803L, \"member\"))).addElement(decl);\n    }\n  }","id":16708,"modified_method":"private void updateInstanceFields(SNode cls) {\n    for (ASMField field : myParsedClass.getDeclaredFields()) {\n      if (shallSkip(field)) {\n        continue;\n      }\n      if (field.isStatic()) {\n        continue;\n      }\n      if (field.isCompilerGenerated()) {\n        continue;\n      }\n      SNode decl = _quotation_createNode_ol94f8_a0d0a0v(null, ASMNodeId.createId(myParsedClass, field), createVisibility(field), getTypeByASMType(field.getGenericType(), null, cls), field.getName());\n      if (field.isDeprecated()) {\n        BehaviorReflection.invokeVirtual(Void.class, decl, \"virtual_markDeprecated_7983358747957651026\", new Object[]{});\n      }\n\n      for (ASMAnnotation annotation : field.getAnnotations()) {\n        ListSequence.fromList(SLinkOperations.getChildren(decl, MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x114a6be947aL, 0x114a6beb0bdL, \"annotation\"))).addElement(createAnnotation(annotation));\n      }\n\n      ListSequence.fromList(SLinkOperations.getChildren(cls, MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x101d9d3ca30L, 0x4a9a46de59132803L, \"member\"))).addElement(decl);\n    }\n  }","commit_id":"a664884433c3b03a962604b6817fc9fc31b8a497","url":"https://github.com/JetBrains/MPS"},{"original_method":"private void initClass(SNode cls) {\n    SPropertyOperations.set(cls, MetaAdapterFactory.getProperty(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c108ca66L, 0xfa5cee6dfaL, \"abstractClass\"), \"\" + (myParsedClass.isAbstract()));\n    SPropertyOperations.set(cls, MetaAdapterFactory.getProperty(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x11d2ea8a339L, 0x11d2ea948a4L, \"isDeprecated\"), \"\" + (myParsedClass.isDeprecated()));\n    SPropertyOperations.set(cls, MetaAdapterFactory.getProperty(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c108ca66L, 0x11c6af4b284L, \"isFinal\"), \"\" + (myParsedClass.isFinal()));\n\n    updateAnnotations(cls);\n    updateTypeVariables(cls);\n    updateExtendsAndImplements(cls);\n    updateInstanceFields(cls);\n    updateStaticFields(cls);\n    updateConstructors(cls);\n    updateInstanceMethods(cls);\n    updateStaticMethods(cls);\n    updateVisibility();\n  }","id":16709,"modified_method":"private void initClass(SNode cls) {\n    SPropertyOperations.set(cls, MetaAdapterFactory.getProperty(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c108ca66L, 0xfa5cee6dfaL, \"abstractClass\"), \"\" + (myParsedClass.isAbstract()));\n    if (myParsedClass.isDeprecated()) {\n      BehaviorReflection.invokeVirtual(Void.class, cls, \"virtual_markDeprecated_7983358747957651026\", new Object[]{});\n    }\n\n    SPropertyOperations.set(cls, MetaAdapterFactory.getProperty(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c108ca66L, 0x11c6af4b284L, \"isFinal\"), \"\" + (myParsedClass.isFinal()));\n\n    updateAnnotations(cls);\n    updateTypeVariables(cls);\n    updateExtendsAndImplements(cls);\n    updateInstanceFields(cls);\n    updateStaticFields(cls);\n    updateConstructors(cls);\n    updateInstanceMethods(cls);\n    updateStaticMethods(cls);\n    updateVisibility();\n  }","commit_id":"a664884433c3b03a962604b6817fc9fc31b8a497","url":"https://github.com/JetBrains/MPS"},{"original_method":"private void updateConstructors(final SNode cls) {\n    for (ASMMethod c : myParsedClass.getDeclaredConstructors()) {\n      if (c.isSynthetic()) {\n        continue;\n      }\n      if (shallSkip(c)) {\n        continue;\n      }\n\n      SNode constructor = _quotation_createNode_ol94f8_a0d0a0y(null, ASMNodeId.createId(myParsedClass, c), createVisibility(c), SConceptOperations.createNewNode(SNodeOperations.asInstanceConcept(MetaAdapterFactory.getConcept(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x4975dc2bdcfa0c49L, \"jetbrains.mps.baseLanguage.structure.StubStatementList\"))), SPropertyOperations.getString(cls, MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, \"name\")));\n      SPropertyOperations.set(constructor, MetaAdapterFactory.getProperty(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x11d2ea8a339L, 0x11d2ea948a4L, \"isDeprecated\"), \"\" + (c.isDeprecated()));\n      for (ASMTypeVariable tv : c.getTypeParameters()) {\n        ListSequence.fromList(SLinkOperations.getChildren(constructor, MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x102463b447aL, 0x102463bb98eL, \"typeVariableDeclaration\"))).addElement(_quotation_createNode_ol94f8_a0a0a5a0a42(tv.getName()));\n      }\n      {\n        ASMType pt;\n        String pn;\n        List<ASMAnnotation> pa;\n        Iterator<ASMType> pt_iterator = ListSequence.fromList(c.getGenericParameterTypes()).iterator();\n        Iterator<String> pn_iterator = ListSequence.fromList(c.getParameterNames()).iterator();\n        Iterator<List<ASMAnnotation>> pa_iterator = ListSequence.fromList(c.getParameterAnnotations()).iterator();\n        while (true) {\n          if (!(pt_iterator.hasNext())) {\n            break;\n          }\n          if (!(pn_iterator.hasNext())) {\n            break;\n          }\n          if (!(pa_iterator.hasNext())) {\n            break;\n          }\n          pt = pt_iterator.next();\n          pn = pn_iterator.next();\n          pa = pa_iterator.next();\n          {\n            if (!(SPropertyOperations.getBoolean(cls, MetaAdapterFactory.getProperty(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c108ca66L, 0x451f9e9f920b7f7dL, \"isStatic\"))) && c.getGenericParameterTypes().get(0) == pt) {\n              continue;\n            }\n\n            SNode pd = _quotation_createNode_ol94f8_a0c0g0g0g0a0y(getTypeByASMType(pt, constructor, cls), pn);\n            addAnnotationsToParameter(pd, pa);\n            ListSequence.fromList(SLinkOperations.getChildren(constructor, MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b1fcL, 0xf8cc56b1feL, \"parameter\"))).addElement(pd);\n          }\n        }\n      }\n      for (ASMAnnotation annotation : c.getAnnotations()) {\n        ListSequence.fromList(SLinkOperations.getChildren(constructor, MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x114a6be947aL, 0x114a6beb0bdL, \"annotation\"))).addElement(createAnnotation(annotation));\n      }\n      for (ASMType exception : c.getExceptionTypes()) {\n        ListSequence.fromList(SLinkOperations.getChildren(constructor, MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b1fcL, 0x10f383d6949L, \"throwsItem\"))).addElement(getTypeByASMType(exception, constructor, cls));\n      }\n\n      ListSequence.fromList(SLinkOperations.getChildren(cls, MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x101d9d3ca30L, 0x4a9a46de59132803L, \"member\"))).addElement(constructor);\n    }\n  }","id":16710,"modified_method":"private void updateConstructors(final SNode cls) {\n    for (ASMMethod c : myParsedClass.getDeclaredConstructors()) {\n      if (c.isSynthetic()) {\n        continue;\n      }\n      if (shallSkip(c)) {\n        continue;\n      }\n\n      SNode constructor = _quotation_createNode_ol94f8_a0d0a0y(null, ASMNodeId.createId(myParsedClass, c), createVisibility(c), SConceptOperations.createNewNode(SNodeOperations.asInstanceConcept(MetaAdapterFactory.getConcept(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x4975dc2bdcfa0c49L, \"jetbrains.mps.baseLanguage.structure.StubStatementList\"))), SPropertyOperations.getString(cls, MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, \"name\")));\n      if (c.isDeprecated()) {\n        BehaviorReflection.invokeVirtual(Void.class, constructor, \"virtual_markDeprecated_7983358747957651026\", new Object[]{});\n      }\n\n      for (ASMTypeVariable tv : c.getTypeParameters()) {\n        ListSequence.fromList(SLinkOperations.getChildren(constructor, MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x102463b447aL, 0x102463bb98eL, \"typeVariableDeclaration\"))).addElement(_quotation_createNode_ol94f8_a0a0a6a0a42(tv.getName()));\n      }\n      {\n        ASMType pt;\n        String pn;\n        List<ASMAnnotation> pa;\n        Iterator<ASMType> pt_iterator = ListSequence.fromList(c.getGenericParameterTypes()).iterator();\n        Iterator<String> pn_iterator = ListSequence.fromList(c.getParameterNames()).iterator();\n        Iterator<List<ASMAnnotation>> pa_iterator = ListSequence.fromList(c.getParameterAnnotations()).iterator();\n        while (true) {\n          if (!(pt_iterator.hasNext())) {\n            break;\n          }\n          if (!(pn_iterator.hasNext())) {\n            break;\n          }\n          if (!(pa_iterator.hasNext())) {\n            break;\n          }\n          pt = pt_iterator.next();\n          pn = pn_iterator.next();\n          pa = pa_iterator.next();\n          {\n            if (!(SPropertyOperations.getBoolean(cls, MetaAdapterFactory.getProperty(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c108ca66L, 0x451f9e9f920b7f7dL, \"isStatic\"))) && c.getGenericParameterTypes().get(0) == pt) {\n              continue;\n            }\n\n            SNode pd = _quotation_createNode_ol94f8_a0c0g0g0h0a0y(getTypeByASMType(pt, constructor, cls), pn);\n            addAnnotationsToParameter(pd, pa);\n            ListSequence.fromList(SLinkOperations.getChildren(constructor, MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b1fcL, 0xf8cc56b1feL, \"parameter\"))).addElement(pd);\n          }\n        }\n      }\n      for (ASMAnnotation annotation : c.getAnnotations()) {\n        ListSequence.fromList(SLinkOperations.getChildren(constructor, MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x114a6be947aL, 0x114a6beb0bdL, \"annotation\"))).addElement(createAnnotation(annotation));\n      }\n      for (ASMType exception : c.getExceptionTypes()) {\n        ListSequence.fromList(SLinkOperations.getChildren(constructor, MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b1fcL, 0x10f383d6949L, \"throwsItem\"))).addElement(getTypeByASMType(exception, constructor, cls));\n      }\n\n      ListSequence.fromList(SLinkOperations.getChildren(cls, MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x101d9d3ca30L, 0x4a9a46de59132803L, \"member\"))).addElement(constructor);\n    }\n  }","commit_id":"a664884433c3b03a962604b6817fc9fc31b8a497","url":"https://github.com/JetBrains/MPS"},{"original_method":"private static SNode _quotation_createNode_ol94f8_a0a0a1a1a3a0d0a0w(Object parameter_1) {\n    PersistenceFacade facade = PersistenceFacade.getInstance();\n    SNode quotedNode_2 = null;\n    quotedNode_2 = SModelUtil_new.instantiateConceptDeclaration(MetaAdapterFactory.getConcept(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf93d565d10L, \"jetbrains.mps.baseLanguage.structure.StringLiteral\"), null, null, false);\n    SNodeAccessUtil.setProperty(quotedNode_2, MetaAdapterFactory.getProperty(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf93d565d10L, 0xf93d565d11L, \"value\"), (String) parameter_1);\n    return quotedNode_2;\n  }","id":16711,"modified_method":"private static SNode _quotation_createNode_ol94f8_a0a0a1a1a4a0d0a0w(Object parameter_1) {\n    PersistenceFacade facade = PersistenceFacade.getInstance();\n    SNode quotedNode_2 = null;\n    quotedNode_2 = SModelUtil_new.instantiateConceptDeclaration(MetaAdapterFactory.getConcept(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf93d565d10L, \"jetbrains.mps.baseLanguage.structure.StringLiteral\"), null, null, false);\n    SNodeAccessUtil.setProperty(quotedNode_2, MetaAdapterFactory.getProperty(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf93d565d10L, 0xf93d565d11L, \"value\"), (String) parameter_1);\n    return quotedNode_2;\n  }","commit_id":"a664884433c3b03a962604b6817fc9fc31b8a497","url":"https://github.com/JetBrains/MPS"},{"original_method":"static void writeDynamicRecord( DynamicRecord record, ByteBuffer buffer ) \n\t{\n\t\t// id+in_use(byte)+prev_block(int)+nr_of_bytes(int)+next_block(int) \n\t\t// buffer.clear();\n\t\tif ( record.inUse() )\n\t\t{\n\t\t\t// byte inUse = record.inUse() ? \n\t\t\t// Record.IN_USE.byteValue() : Record.NOT_IN_USE.byteValue();\n\t\t\tbyte inUse = Record.IN_USE.byteValue();\n\t\t\tbuffer.putInt( record.getId() ).put( inUse ).putInt( \n\t\t\trecord.getPrevBlock() ).putInt( record.getLength() \n\t\t\t).putInt( record.getNextBlock() ).put( record.getData() );\n\t\t}\n\t\telse\n\t\t{\n\t\t\tbyte inUse = Record.NOT_IN_USE.byteValue();\n\t\t\tbuffer.putInt( record.getId() ).put( inUse );\n\t\t}\n\t\t// buffer.flip();\n\t\t// fileChannel.write( buffer );\n\t}","id":16712,"modified_method":"static void writeDynamicRecord( DynamicRecord record, \n\t\t\tFileChannel fileChannel, ByteBuffer buffer ) throws IOException  \n\t{\n\t\t// id+in_use(byte)+prev_block(int)+nr_of_bytes(int)+next_block(int) \n\t\tbuffer.clear();\n\t\tbyte inUse = record.inUse() ? \n\t\t\tRecord.IN_USE.byteValue() : Record.NOT_IN_USE.byteValue();\n\t\tbuffer.putInt( record.getId() ).put( inUse ).putInt( \n\t\t\trecord.getPrevBlock() ).putInt( record.getLength() \n\t\t\t).putInt( record.getNextBlock() ).put( record.getData() );\n\t\tbuffer.flip();\n\t\tfileChannel.write( buffer );\n\t}","commit_id":"645e5d983a0ae29b4a64f92ba10f31c8d7aaa147","url":"https://github.com/neo4j/neo4j"},{"original_method":"static DynamicRecord readDynamicRecord( FileChannel fileChannel, \n\t\tByteBuffer buffer) throws IOException\n\t{\n\t\t// id+in_use(byte)+prev_block(int)+nr_of_bytes(int)+next_block(int)\n\t\tbuffer.clear(); buffer.limit( 17 );\n\t\tif ( fileChannel.read( buffer ) != buffer.limit() )\n\t\t{\n\t\t\treturn null;\n\t\t}\n\t\tbuffer.flip();\n\t\tint id = buffer.getInt();\n\t\tbyte inUseFlag = buffer.get();\n\t\tboolean inUse = false;\n\t\tif ( inUseFlag == Record.IN_USE.byteValue() )\n\t\t{\n\t\t\tinUse = true;\n\t\t}\n\t\telse if ( inUseFlag != Record.NOT_IN_USE.byteValue() )\n\t\t{\n\t\t\tthrow new IOException( \"Illegal in use flag: \" + inUseFlag );\n\t\t}\n\t\tDynamicRecord record = new DynamicRecord( id );\n\t\trecord.setInUse( inUse );\n\t\tif ( inUse )\n\t\t{\n\t\t\trecord.setPrevBlock( buffer.getInt() );\n\t\t\tint nrOfBytes = buffer.getInt();\n\t\t\trecord.setNextBlock( buffer.getInt() );\n\t\t\tbuffer.clear(); buffer.limit( nrOfBytes );\n\t\t\tif ( fileChannel.read( buffer ) != buffer.limit() )\n\t\t\t{\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\tbuffer.flip();\n\t\t\tbyte data[] = new byte[ nrOfBytes ];\n\t\t\tbuffer.get( data );\n\t\t\trecord.setData( data );\n\t\t}\n\t\treturn record;\n\t}","id":16713,"modified_method":"static DynamicRecord readDynamicRecord( FileChannel fileChannel, \n\t\tByteBuffer buffer) throws IOException\n\t{\n\t\t// id+in_use(byte)+prev_block(int)+nr_of_bytes(int)+next_block(int)\n\t\tbuffer.clear(); buffer.limit( 17 );\n\t\tif ( fileChannel.read( buffer ) != buffer.limit() )\n\t\t{\n\t\t\treturn null;\n\t\t}\n\t\tbuffer.flip();\n\t\tint id = buffer.getInt();\n\t\tbyte inUseFlag = buffer.get();\n\t\tboolean inUse = false;\n\t\tif ( inUseFlag == Record.IN_USE.byteValue() )\n\t\t{\n\t\t\tinUse = true;\n\t\t}\n\t\telse if ( inUseFlag != Record.NOT_IN_USE.byteValue() )\n\t\t{\n\t\t\tthrow new IOException( \"Illegal in use flag: \" + inUseFlag );\n\t\t}\n\t\tDynamicRecord record = new DynamicRecord( id );\n\t\trecord.setInUse( inUse );\n\t\trecord.setPrevBlock( buffer.getInt() );\n\t\tint nrOfBytes = buffer.getInt();\n\t\trecord.setNextBlock( buffer.getInt() );\n\t\tbuffer.clear(); buffer.limit( nrOfBytes );\n\t\tif ( fileChannel.read( buffer ) != buffer.limit() )\n\t\t{\n\t\t\treturn null;\n\t\t}\n\t\tbuffer.flip();\n\t\tbyte data[] = new byte[ nrOfBytes ];\n\t\tbuffer.get( data );\n\t\trecord.setData( data );\n\t\treturn record;\n\t}","commit_id":"645e5d983a0ae29b4a64f92ba10f31c8d7aaa147","url":"https://github.com/neo4j/neo4j"},{"original_method":"@Override\n\t\tpublic void writeToFile( FileChannel fileChannel, ByteBuffer buffer ) \n\t\t\tthrows IOException\n\t\t{\n\t\t\t// id+in_use(byte)+type_blockId(int)+nr_type_records(int)\n\t\t\tbuffer.clear();\n\t\t\tbyte inUse = record.inUse() ? \n\t\t\t\tRecord.IN_USE.byteValue() : Record.NOT_IN_USE.byteValue();\n\t\t\tbuffer.put( REL_TYPE_COMMAND );\n\t\t\tbuffer.putInt( record.getId() ).put( inUse ).putInt( \n\t\t\t\trecord.getTypeBlock() );\n\t\t\tCollection<DynamicRecord> typeRecords = record.getTypeRecords();\n\t\t\tbuffer.putInt( typeRecords.size() );\n//\t\t\tbuffer.flip();\n//\t\t\tfileChannel.write( buffer );\n\t\t\tfor ( DynamicRecord typeRecord : typeRecords )\n\t\t\t{\n\t\t\t\tif ( ( buffer.capacity() - buffer.position() ) < \n\t\t\t\t\ttypeRecord.getLength() )\n\t\t\t\t{\n\t\t\t\t\tbuffer.flip();\n\t\t\t\t\tfileChannel.write( buffer );\n\t\t\t\t\tbuffer.flip();\n\t\t\t\t}\n\t\t\t\twriteDynamicRecord( typeRecord, buffer );\n\t\t\t}\n\t\t\tbuffer.flip();\n\t\t\tfileChannel.write( buffer );\n\t\t}","id":16714,"modified_method":"@Override\n\t\tpublic void writeToFile( FileChannel fileChannel, ByteBuffer buffer ) \n\t\t\tthrows IOException\n\t\t{\n\t\t\t// id+in_use(byte)+type_blockId(int)+nr_type_records(int)\n\t\t\tbuffer.clear();\n\t\t\tbyte inUse = record.inUse() ? \n\t\t\t\tRecord.IN_USE.byteValue() : Record.NOT_IN_USE.byteValue();\n\t\t\tbuffer.put( REL_TYPE_COMMAND );\n\t\t\tbuffer.putInt( record.getId() ).put( inUse ).putInt( \n\t\t\t\trecord.getTypeBlock() );\n\t\t\tCollection<DynamicRecord> typeRecords = record.getTypeRecords();\n\t\t\tbuffer.putInt( typeRecords.size() );\n\t\t\tbuffer.flip();\n\t\t\tfileChannel.write( buffer );\n\t\t\tfor ( DynamicRecord typeRecord : typeRecords )\n\t\t\t{\n\t\t\t\twriteDynamicRecord( typeRecord, fileChannel, buffer );\n\t\t\t}\n\t\t}","commit_id":"645e5d983a0ae29b4a64f92ba10f31c8d7aaa147","url":"https://github.com/neo4j/neo4j"},{"original_method":"@Override\n\t\tpublic void writeToFile( FileChannel fileChannel, ByteBuffer buffer ) \n\t\t\tthrows IOException\n\t\t{\n\t\t\t// id+in_use(byte)+type(int)+key_blockId(int)+prop_blockId(long)+\n\t\t\t// prev_prop_id(int)+next_prop_id(int)+nr_key_records(int)+\n\t\t\t// nr_value_records(int)\n\t\t\tbuffer.clear();\n\t\t\tbyte inUse = record.inUse() ? \n\t\t\t\tRecord.IN_USE.byteValue() : Record.NOT_IN_USE.byteValue();\n\t\t\tbuffer.put( PROP_COMMAND );\n\t\t\tbuffer.putInt( record.getId() ).put( inUse ).putInt(  \n\t\t\t\trecord.getType().intValue() ).putInt( record.getKeyBlock() \n\t\t\t\t).putLong( record.getPropBlock() ).putInt( \n\t\t\t\trecord.getPrevProp() ).putInt( record.getNextProp() );\n\t\t\tCollection<DynamicRecord> keyRecords = record.getKeyRecords();\n\t\t\tbuffer.putInt( keyRecords.size() );\n\t\t\tCollection<DynamicRecord> valueRecords = record.getValueRecords();\n\t\t\tbuffer.putInt( valueRecords.size() );\n//\t\t\tbuffer.flip();\n//\t\t\tfileChannel.write( buffer );\n\t\t\tfor ( DynamicRecord keyRecord : keyRecords )\n\t\t\t{\n\t\t\t\tif ( ( buffer.capacity() - buffer.position() ) < \n\t\t\t\t\tkeyRecord.getLength() )\n\t\t\t\t{\n\t\t\t\t\tbuffer.flip();\n\t\t\t\t\tfileChannel.write( buffer );\n\t\t\t\t\tbuffer.flip();\n\t\t\t\t}\n\t\t\t\twriteDynamicRecord( keyRecord, buffer );\n\t\t\t}\n\t\t\tfor ( DynamicRecord valueRecord : valueRecords )\n\t\t\t{\n\t\t\t\tif ( ( buffer.capacity() - buffer.position() ) < \n\t\t\t\t\tvalueRecord.getLength() )\n\t\t\t\t{\n\t\t\t\t\tbuffer.flip();\n\t\t\t\t\tfileChannel.write( buffer );\n\t\t\t\t\tbuffer.flip();\n\t\t\t\t}\n\t\t\t\twriteDynamicRecord( valueRecord, buffer );\n\t\t\t}\n\t\t\tbuffer.flip();\n\t\t\tfileChannel.write( buffer );\n\t\t}","id":16715,"modified_method":"@Override\n\t\tpublic void writeToFile( FileChannel fileChannel, ByteBuffer buffer ) \n\t\t\tthrows IOException\n\t\t{\n\t\t\t// id+in_use(byte)+type(int)+key_blockId(int)+prop_blockId(long)+\n\t\t\t// prev_prop_id(int)+next_prop_id(int)+nr_key_records(int)+\n\t\t\t// nr_value_records(int)\n\t\t\tbuffer.clear();\n\t\t\tbyte inUse = record.inUse() ? \n\t\t\t\tRecord.IN_USE.byteValue() : Record.NOT_IN_USE.byteValue();\n\t\t\tbuffer.put( PROP_COMMAND );\n\t\t\tbuffer.putInt( record.getId() ).put( inUse ).putInt(  \n\t\t\t\trecord.getType().intValue() ).putInt( record.getKeyBlock() \n\t\t\t\t).putLong( record.getPropBlock() ).putInt( \n\t\t\t\trecord.getPrevProp() ).putInt( record.getNextProp() );\n\t\t\tCollection<DynamicRecord> keyRecords = record.getKeyRecords();\n\t\t\tbuffer.putInt( keyRecords.size() );\n\t\t\tCollection<DynamicRecord> valueRecords = record.getValueRecords();\n\t\t\tbuffer.putInt( valueRecords.size() );\n\t\t\tbuffer.flip();\n\t\t\tfileChannel.write( buffer );\n\t\t\tfor ( DynamicRecord keyRecord : keyRecords )\n\t\t\t{\n\t\t\t\twriteDynamicRecord( keyRecord, fileChannel, buffer );\n\t\t\t}\n\t\t\tfor ( DynamicRecord valueRecord : valueRecords )\n\t\t\t{\n\t\t\t\twriteDynamicRecord( valueRecord, fileChannel, buffer );\n\t\t\t}\n\t\t}","commit_id":"645e5d983a0ae29b4a64f92ba10f31c8d7aaa147","url":"https://github.com/neo4j/neo4j"},{"original_method":"static DynamicRecord readDynamicRecord( FileChannel fileChannel, \n\t\tByteBuffer buffer) throws IOException\n\t{\n\t\t// id+in_use(byte)+prev_block(int)+nr_of_bytes(int)+next_block(int)\n\t\tbuffer.clear(); buffer.limit( 17 );\n\t\tif ( fileChannel.read( buffer ) != buffer.limit() )\n\t\t{\n\t\t\treturn null;\n\t\t}\n\t\tbuffer.flip();\n\t\tint id = buffer.getInt();\n\t\tbyte inUseFlag = buffer.get();\n\t\tboolean inUse = false;\n\t\tif ( inUseFlag == Record.IN_USE.byteValue() )\n\t\t{\n\t\t\tinUse = true;\n\t\t}\n\t\telse if ( inUseFlag != Record.NOT_IN_USE.byteValue() )\n\t\t{\n\t\t\tthrow new IOException( \"Illegal in use flag: \" + inUseFlag );\n\t\t}\n\t\tDynamicRecord record = new DynamicRecord( id );\n\t\trecord.setInUse( inUse );\n\t\tif ( inUse )\n\t\t{\n\t\t\trecord.setPrevBlock( buffer.getInt() );\n\t\t\tint nrOfBytes = buffer.getInt();\n\t\t\trecord.setNextBlock( buffer.getInt() );\n\t\t\tbuffer.clear(); buffer.limit( nrOfBytes );\n\t\t\tif ( fileChannel.read( buffer ) != buffer.limit() )\n\t\t\t{\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\tbuffer.flip();\n\t\t\tbyte data[] = new byte[ nrOfBytes ];\n\t\t\tbuffer.get( data );\n\t\t\trecord.setData( data );\n\t\t}\n\t\treturn record;\n\t}","id":16716,"modified_method":"static DynamicRecord readDynamicRecord( FileChannel fileChannel, \n\t\tByteBuffer buffer) throws IOException\n\t{\n\t\t// id+in_use(byte)+prev_block(int)+nr_of_bytes(int)+next_block(int)\n\t\tbuffer.clear(); buffer.limit( 17 );\n\t\tif ( fileChannel.read( buffer ) != buffer.limit() )\n\t\t{\n\t\t\treturn null;\n\t\t}\n\t\tbuffer.flip();\n\t\tint id = buffer.getInt();\n\t\tbyte inUseFlag = buffer.get();\n\t\tboolean inUse = false;\n\t\tif ( inUseFlag == Record.IN_USE.byteValue() )\n\t\t{\n\t\t\tinUse = true;\n\t\t}\n\t\telse if ( inUseFlag != Record.NOT_IN_USE.byteValue() )\n\t\t{\n\t\t\tthrow new IOException( \"Illegal in use flag: \" + inUseFlag );\n\t\t}\n\t\tDynamicRecord record = new DynamicRecord( id );\n\t\trecord.setInUse( inUse );\n\t\trecord.setPrevBlock( buffer.getInt() );\n\t\tint nrOfBytes = buffer.getInt();\n\t\trecord.setNextBlock( buffer.getInt() );\n\t\tbuffer.clear(); buffer.limit( nrOfBytes );\n\t\tif ( fileChannel.read( buffer ) != buffer.limit() )\n\t\t{\n\t\t\treturn null;\n\t\t}\n\t\tbuffer.flip();\n\t\tbyte data[] = new byte[ nrOfBytes ];\n\t\tbuffer.get( data );\n\t\trecord.setData( data );\n\t\treturn record;\n\t}","commit_id":"1acad77116df962b8ede591872094eda4f13cc28","url":"https://github.com/neo4j/neo4j"},{"original_method":"static void writeDynamicRecord( DynamicRecord record, ByteBuffer buffer ) \n\t{\n\t\t// id+in_use(byte)+prev_block(int)+nr_of_bytes(int)+next_block(int) \n\t\t// buffer.clear();\n\t\tif ( record.inUse() )\n\t\t{\n\t\t\t// byte inUse = record.inUse() ? \n\t\t\t// Record.IN_USE.byteValue() : Record.NOT_IN_USE.byteValue();\n\t\t\tbyte inUse = Record.IN_USE.byteValue();\n\t\t\tbuffer.putInt( record.getId() ).put( inUse ).putInt( \n\t\t\trecord.getPrevBlock() ).putInt( record.getLength() \n\t\t\t).putInt( record.getNextBlock() ).put( record.getData() );\n\t\t}\n\t\telse\n\t\t{\n\t\t\tbyte inUse = Record.NOT_IN_USE.byteValue();\n\t\t\tbuffer.putInt( record.getId() ).put( inUse );\n\t\t}\n\t\t// buffer.flip();\n\t\t// fileChannel.write( buffer );\n\t}","id":16717,"modified_method":"static void writeDynamicRecord( DynamicRecord record, \n\t\t\tFileChannel fileChannel, ByteBuffer buffer ) throws IOException  \n\t{\n\t\t// id+in_use(byte)+prev_block(int)+nr_of_bytes(int)+next_block(int) \n\t\tbuffer.clear();\n\t\tbyte inUse = record.inUse() ? \n\t\t\tRecord.IN_USE.byteValue() : Record.NOT_IN_USE.byteValue();\n\t\tbuffer.putInt( record.getId() ).put( inUse ).putInt( \n\t\t\trecord.getPrevBlock() ).putInt( record.getLength() \n\t\t\t).putInt( record.getNextBlock() ).put( record.getData() );\n\t\tbuffer.flip();\n\t\tfileChannel.write( buffer );\n\t}","commit_id":"1acad77116df962b8ede591872094eda4f13cc28","url":"https://github.com/neo4j/neo4j"},{"original_method":"@Override\n\t\tpublic void writeToFile( FileChannel fileChannel, ByteBuffer buffer ) \n\t\t\tthrows IOException\n\t\t{\n\t\t\t// id+in_use(byte)+type_blockId(int)+nr_type_records(int)\n\t\t\tbuffer.clear();\n\t\t\tbyte inUse = record.inUse() ? \n\t\t\t\tRecord.IN_USE.byteValue() : Record.NOT_IN_USE.byteValue();\n\t\t\tbuffer.put( REL_TYPE_COMMAND );\n\t\t\tbuffer.putInt( record.getId() ).put( inUse ).putInt( \n\t\t\t\trecord.getTypeBlock() );\n\t\t\tCollection<DynamicRecord> typeRecords = record.getTypeRecords();\n\t\t\tbuffer.putInt( typeRecords.size() );\n//\t\t\tbuffer.flip();\n//\t\t\tfileChannel.write( buffer );\n\t\t\tfor ( DynamicRecord typeRecord : typeRecords )\n\t\t\t{\n\t\t\t\tif ( ( buffer.capacity() - buffer.position() ) < \n\t\t\t\t\ttypeRecord.getLength() )\n\t\t\t\t{\n\t\t\t\t\tbuffer.flip();\n\t\t\t\t\tfileChannel.write( buffer );\n\t\t\t\t\tbuffer.flip();\n\t\t\t\t}\n\t\t\t\twriteDynamicRecord( typeRecord, buffer );\n\t\t\t}\n\t\t\tbuffer.flip();\n\t\t\tfileChannel.write( buffer );\n\t\t}","id":16718,"modified_method":"@Override\n\t\tpublic void writeToFile( FileChannel fileChannel, ByteBuffer buffer ) \n\t\t\tthrows IOException\n\t\t{\n\t\t\t// id+in_use(byte)+type_blockId(int)+nr_type_records(int)\n\t\t\tbuffer.clear();\n\t\t\tbyte inUse = record.inUse() ? \n\t\t\t\tRecord.IN_USE.byteValue() : Record.NOT_IN_USE.byteValue();\n\t\t\tbuffer.put( REL_TYPE_COMMAND );\n\t\t\tbuffer.putInt( record.getId() ).put( inUse ).putInt( \n\t\t\t\trecord.getTypeBlock() );\n\t\t\tCollection<DynamicRecord> typeRecords = record.getTypeRecords();\n\t\t\tbuffer.putInt( typeRecords.size() );\n\t\t\tbuffer.flip();\n\t\t\tfileChannel.write( buffer );\n\t\t\tfor ( DynamicRecord typeRecord : typeRecords )\n\t\t\t{\n\t\t\t\twriteDynamicRecord( typeRecord, fileChannel, buffer );\n\t\t\t}\n\t\t}","commit_id":"1acad77116df962b8ede591872094eda4f13cc28","url":"https://github.com/neo4j/neo4j"},{"original_method":"@Override\n\t\tpublic void writeToFile( FileChannel fileChannel, ByteBuffer buffer ) \n\t\t\tthrows IOException\n\t\t{\n\t\t\t// id+in_use(byte)+type(int)+key_blockId(int)+prop_blockId(long)+\n\t\t\t// prev_prop_id(int)+next_prop_id(int)+nr_key_records(int)+\n\t\t\t// nr_value_records(int)\n\t\t\tbuffer.clear();\n\t\t\tbyte inUse = record.inUse() ? \n\t\t\t\tRecord.IN_USE.byteValue() : Record.NOT_IN_USE.byteValue();\n\t\t\tbuffer.put( PROP_COMMAND );\n\t\t\tbuffer.putInt( record.getId() ).put( inUse ).putInt(  \n\t\t\t\trecord.getType().intValue() ).putInt( record.getKeyBlock() \n\t\t\t\t).putLong( record.getPropBlock() ).putInt( \n\t\t\t\trecord.getPrevProp() ).putInt( record.getNextProp() );\n\t\t\tCollection<DynamicRecord> keyRecords = record.getKeyRecords();\n\t\t\tbuffer.putInt( keyRecords.size() );\n\t\t\tCollection<DynamicRecord> valueRecords = record.getValueRecords();\n\t\t\tbuffer.putInt( valueRecords.size() );\n//\t\t\tbuffer.flip();\n//\t\t\tfileChannel.write( buffer );\n\t\t\tfor ( DynamicRecord keyRecord : keyRecords )\n\t\t\t{\n\t\t\t\tif ( ( buffer.capacity() - buffer.position() ) < \n\t\t\t\t\tkeyRecord.getLength() )\n\t\t\t\t{\n\t\t\t\t\tbuffer.flip();\n\t\t\t\t\tfileChannel.write( buffer );\n\t\t\t\t\tbuffer.flip();\n\t\t\t\t}\n\t\t\t\twriteDynamicRecord( keyRecord, buffer );\n\t\t\t}\n\t\t\tfor ( DynamicRecord valueRecord : valueRecords )\n\t\t\t{\n\t\t\t\tif ( ( buffer.capacity() - buffer.position() ) < \n\t\t\t\t\tvalueRecord.getLength() )\n\t\t\t\t{\n\t\t\t\t\tbuffer.flip();\n\t\t\t\t\tfileChannel.write( buffer );\n\t\t\t\t\tbuffer.flip();\n\t\t\t\t}\n\t\t\t\twriteDynamicRecord( valueRecord, buffer );\n\t\t\t}\n\t\t\tbuffer.flip();\n\t\t\tfileChannel.write( buffer );\n\t\t}","id":16719,"modified_method":"@Override\n\t\tpublic void writeToFile( FileChannel fileChannel, ByteBuffer buffer ) \n\t\t\tthrows IOException\n\t\t{\n\t\t\t// id+in_use(byte)+type(int)+key_blockId(int)+prop_blockId(long)+\n\t\t\t// prev_prop_id(int)+next_prop_id(int)+nr_key_records(int)+\n\t\t\t// nr_value_records(int)\n\t\t\tbuffer.clear();\n\t\t\tbyte inUse = record.inUse() ? \n\t\t\t\tRecord.IN_USE.byteValue() : Record.NOT_IN_USE.byteValue();\n\t\t\tbuffer.put( PROP_COMMAND );\n\t\t\tbuffer.putInt( record.getId() ).put( inUse ).putInt(  \n\t\t\t\trecord.getType().intValue() ).putInt( record.getKeyBlock() \n\t\t\t\t).putLong( record.getPropBlock() ).putInt( \n\t\t\t\trecord.getPrevProp() ).putInt( record.getNextProp() );\n\t\t\tCollection<DynamicRecord> keyRecords = record.getKeyRecords();\n\t\t\tbuffer.putInt( keyRecords.size() );\n\t\t\tCollection<DynamicRecord> valueRecords = record.getValueRecords();\n\t\t\tbuffer.putInt( valueRecords.size() );\n\t\t\tbuffer.flip();\n\t\t\tfileChannel.write( buffer );\n\t\t\tfor ( DynamicRecord keyRecord : keyRecords )\n\t\t\t{\n\t\t\t\twriteDynamicRecord( keyRecord, fileChannel, buffer );\n\t\t\t}\n\t\t\tfor ( DynamicRecord valueRecord : valueRecords )\n\t\t\t{\n\t\t\t\twriteDynamicRecord( valueRecord, fileChannel, buffer );\n\t\t\t}\n\t\t}","commit_id":"1acad77116df962b8ede591872094eda4f13cc28","url":"https://github.com/neo4j/neo4j"},{"original_method":"@Override\n\t\tpublic void writeToFile( FileChannel fileChannel, ByteBuffer buffer ) \n\t\t\tthrows IOException\n\t\t{\n\t\t\t// id+in_use(byte)+type_blockId(int)+nr_type_records(int)\n\t\t\tbuffer.clear();\n\t\t\tbyte inUse = record.inUse() ? \n\t\t\t\tRecord.IN_USE.byteValue() : Record.NOT_IN_USE.byteValue();\n\t\t\tbuffer.put( REL_TYPE_COMMAND );\n\t\t\tbuffer.putInt( record.getId() ).put( inUse ).putInt( \n\t\t\t\trecord.getTypeBlock() );\n\t\t\tCollection<DynamicRecord> typeRecords = record.getTypeRecords();\n\t\t\tbuffer.putInt( typeRecords.size() );\n//\t\t\tbuffer.flip();\n//\t\t\tfileChannel.write( buffer );\n\t\t\tfor ( DynamicRecord typeRecord : typeRecords )\n\t\t\t{\n\t\t\t\tif ( ( buffer.capacity() - buffer.position() ) < \n\t\t\t\t\ttypeRecord.getLength() )\n\t\t\t\t{\n\t\t\t\t\tbuffer.flip();\n\t\t\t\t\tfileChannel.write( buffer );\n\t\t\t\t\tbuffer.flip();\n\t\t\t\t}\n\t\t\t\twriteDynamicRecord( typeRecord, buffer );\n\t\t\t}\n\t\t\tbuffer.flip();\n\t\t\tfileChannel.write( buffer );\n\t\t}","id":16720,"modified_method":"@Override\n\t\tpublic void writeToFile( FileChannel fileChannel, ByteBuffer buffer ) \n\t\t\tthrows IOException\n\t\t{\n\t\t\t// id+in_use(byte)+type_blockId(int)+nr_type_records(int)\n\t\t\tbuffer.clear();\n\t\t\tbyte inUse = record.inUse() ? \n\t\t\t\tRecord.IN_USE.byteValue() : Record.NOT_IN_USE.byteValue();\n\t\t\tbuffer.put( REL_TYPE_COMMAND );\n\t\t\tbuffer.putInt( record.getId() ).put( inUse ).putInt( \n\t\t\t\trecord.getTypeBlock() );\n\t\t\tCollection<DynamicRecord> typeRecords = record.getTypeRecords();\n\t\t\tbuffer.putInt( typeRecords.size() );\n\t\t\tbuffer.flip();\n\t\t\tfileChannel.write( buffer );\n\t\t\tfor ( DynamicRecord typeRecord : typeRecords )\n\t\t\t{\n\t\t\t\twriteDynamicRecord( typeRecord, fileChannel, buffer );\n\t\t\t}\n\t\t}","commit_id":"a601eb64fb0f7ff498df148e7b4cce2acf1aa1a1","url":"https://github.com/neo4j/neo4j"},{"original_method":"static DynamicRecord readDynamicRecord( FileChannel fileChannel, \n\t\tByteBuffer buffer) throws IOException\n\t{\n\t\t// id+in_use(byte)+prev_block(int)+nr_of_bytes(int)+next_block(int)\n\t\tbuffer.clear(); buffer.limit( 17 );\n\t\tif ( fileChannel.read( buffer ) != buffer.limit() )\n\t\t{\n\t\t\treturn null;\n\t\t}\n\t\tbuffer.flip();\n\t\tint id = buffer.getInt();\n\t\tbyte inUseFlag = buffer.get();\n\t\tboolean inUse = false;\n\t\tif ( inUseFlag == Record.IN_USE.byteValue() )\n\t\t{\n\t\t\tinUse = true;\n\t\t}\n\t\telse if ( inUseFlag != Record.NOT_IN_USE.byteValue() )\n\t\t{\n\t\t\tthrow new IOException( \"Illegal in use flag: \" + inUseFlag );\n\t\t}\n\t\tDynamicRecord record = new DynamicRecord( id );\n\t\trecord.setInUse( inUse );\n\t\tif ( inUse )\n\t\t{\n\t\t\trecord.setPrevBlock( buffer.getInt() );\n\t\t\tint nrOfBytes = buffer.getInt();\n\t\t\trecord.setNextBlock( buffer.getInt() );\n\t\t\tbuffer.clear(); buffer.limit( nrOfBytes );\n\t\t\tif ( fileChannel.read( buffer ) != buffer.limit() )\n\t\t\t{\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\tbuffer.flip();\n\t\t\tbyte data[] = new byte[ nrOfBytes ];\n\t\t\tbuffer.get( data );\n\t\t\trecord.setData( data );\n\t\t}\n\t\treturn record;\n\t}","id":16721,"modified_method":"static DynamicRecord readDynamicRecord( FileChannel fileChannel, \n\t\tByteBuffer buffer) throws IOException\n\t{\n\t\t// id+in_use(byte)+prev_block(int)+nr_of_bytes(int)+next_block(int)\n\t\tbuffer.clear(); buffer.limit( 17 );\n\t\tif ( fileChannel.read( buffer ) != buffer.limit() )\n\t\t{\n\t\t\treturn null;\n\t\t}\n\t\tbuffer.flip();\n\t\tint id = buffer.getInt();\n\t\tbyte inUseFlag = buffer.get();\n\t\tboolean inUse = false;\n\t\tif ( inUseFlag == Record.IN_USE.byteValue() )\n\t\t{\n\t\t\tinUse = true;\n\t\t}\n\t\telse if ( inUseFlag != Record.NOT_IN_USE.byteValue() )\n\t\t{\n\t\t\tthrow new IOException( \"Illegal in use flag: \" + inUseFlag );\n\t\t}\n\t\tDynamicRecord record = new DynamicRecord( id );\n\t\trecord.setInUse( inUse );\n\t\trecord.setPrevBlock( buffer.getInt() );\n\t\tint nrOfBytes = buffer.getInt();\n\t\trecord.setNextBlock( buffer.getInt() );\n\t\tbuffer.clear(); buffer.limit( nrOfBytes );\n\t\tif ( fileChannel.read( buffer ) != buffer.limit() )\n\t\t{\n\t\t\treturn null;\n\t\t}\n\t\tbuffer.flip();\n\t\tbyte data[] = new byte[ nrOfBytes ];\n\t\tbuffer.get( data );\n\t\trecord.setData( data );\n\t\treturn record;\n\t}","commit_id":"a601eb64fb0f7ff498df148e7b4cce2acf1aa1a1","url":"https://github.com/neo4j/neo4j"},{"original_method":"static void writeDynamicRecord( DynamicRecord record, ByteBuffer buffer ) \n\t{\n\t\t// id+in_use(byte)+prev_block(int)+nr_of_bytes(int)+next_block(int) \n\t\t// buffer.clear();\n\t\tif ( record.inUse() )\n\t\t{\n\t\t\t// byte inUse = record.inUse() ? \n\t\t\t// Record.IN_USE.byteValue() : Record.NOT_IN_USE.byteValue();\n\t\t\tbyte inUse = Record.IN_USE.byteValue();\n\t\t\tbuffer.putInt( record.getId() ).put( inUse ).putInt( \n\t\t\trecord.getPrevBlock() ).putInt( record.getLength() \n\t\t\t).putInt( record.getNextBlock() ).put( record.getData() );\n\t\t}\n\t\telse\n\t\t{\n\t\t\tbyte inUse = Record.NOT_IN_USE.byteValue();\n\t\t\tbuffer.putInt( record.getId() ).put( inUse );\n\t\t}\n\t\t// buffer.flip();\n\t\t// fileChannel.write( buffer );\n\t}","id":16722,"modified_method":"static void writeDynamicRecord( DynamicRecord record, \n\t\t\tFileChannel fileChannel, ByteBuffer buffer ) throws IOException  \n\t{\n\t\t// id+in_use(byte)+prev_block(int)+nr_of_bytes(int)+next_block(int) \n\t\tbuffer.clear();\n\t\tbyte inUse = record.inUse() ? \n\t\t\tRecord.IN_USE.byteValue() : Record.NOT_IN_USE.byteValue();\n\t\tbuffer.putInt( record.getId() ).put( inUse ).putInt( \n\t\t\trecord.getPrevBlock() ).putInt( record.getLength() \n\t\t\t).putInt( record.getNextBlock() ).put( record.getData() );\n\t\tbuffer.flip();\n\t\tfileChannel.write( buffer );\n\t}","commit_id":"a601eb64fb0f7ff498df148e7b4cce2acf1aa1a1","url":"https://github.com/neo4j/neo4j"},{"original_method":"@Override\n\t\tpublic void writeToFile( FileChannel fileChannel, ByteBuffer buffer ) \n\t\t\tthrows IOException\n\t\t{\n\t\t\t// id+in_use(byte)+type(int)+key_blockId(int)+prop_blockId(long)+\n\t\t\t// prev_prop_id(int)+next_prop_id(int)+nr_key_records(int)+\n\t\t\t// nr_value_records(int)\n\t\t\tbuffer.clear();\n\t\t\tbyte inUse = record.inUse() ? \n\t\t\t\tRecord.IN_USE.byteValue() : Record.NOT_IN_USE.byteValue();\n\t\t\tbuffer.put( PROP_COMMAND );\n\t\t\tbuffer.putInt( record.getId() ).put( inUse ).putInt(  \n\t\t\t\trecord.getType().intValue() ).putInt( record.getKeyBlock() \n\t\t\t\t).putLong( record.getPropBlock() ).putInt( \n\t\t\t\trecord.getPrevProp() ).putInt( record.getNextProp() );\n\t\t\tCollection<DynamicRecord> keyRecords = record.getKeyRecords();\n\t\t\tbuffer.putInt( keyRecords.size() );\n\t\t\tCollection<DynamicRecord> valueRecords = record.getValueRecords();\n\t\t\tbuffer.putInt( valueRecords.size() );\n//\t\t\tbuffer.flip();\n//\t\t\tfileChannel.write( buffer );\n\t\t\tfor ( DynamicRecord keyRecord : keyRecords )\n\t\t\t{\n\t\t\t\tif ( ( buffer.capacity() - buffer.position() ) < \n\t\t\t\t\tkeyRecord.getLength() )\n\t\t\t\t{\n\t\t\t\t\tbuffer.flip();\n\t\t\t\t\tfileChannel.write( buffer );\n\t\t\t\t\tbuffer.flip();\n\t\t\t\t}\n\t\t\t\twriteDynamicRecord( keyRecord, buffer );\n\t\t\t}\n\t\t\tfor ( DynamicRecord valueRecord : valueRecords )\n\t\t\t{\n\t\t\t\tif ( ( buffer.capacity() - buffer.position() ) < \n\t\t\t\t\tvalueRecord.getLength() )\n\t\t\t\t{\n\t\t\t\t\tbuffer.flip();\n\t\t\t\t\tfileChannel.write( buffer );\n\t\t\t\t\tbuffer.flip();\n\t\t\t\t}\n\t\t\t\twriteDynamicRecord( valueRecord, buffer );\n\t\t\t}\n\t\t\tbuffer.flip();\n\t\t\tfileChannel.write( buffer );\n\t\t}","id":16723,"modified_method":"@Override\n\t\tpublic void writeToFile( FileChannel fileChannel, ByteBuffer buffer ) \n\t\t\tthrows IOException\n\t\t{\n\t\t\t// id+in_use(byte)+type(int)+key_blockId(int)+prop_blockId(long)+\n\t\t\t// prev_prop_id(int)+next_prop_id(int)+nr_key_records(int)+\n\t\t\t// nr_value_records(int)\n\t\t\tbuffer.clear();\n\t\t\tbyte inUse = record.inUse() ? \n\t\t\t\tRecord.IN_USE.byteValue() : Record.NOT_IN_USE.byteValue();\n\t\t\tbuffer.put( PROP_COMMAND );\n\t\t\tbuffer.putInt( record.getId() ).put( inUse ).putInt(  \n\t\t\t\trecord.getType().intValue() ).putInt( record.getKeyBlock() \n\t\t\t\t).putLong( record.getPropBlock() ).putInt( \n\t\t\t\trecord.getPrevProp() ).putInt( record.getNextProp() );\n\t\t\tCollection<DynamicRecord> keyRecords = record.getKeyRecords();\n\t\t\tbuffer.putInt( keyRecords.size() );\n\t\t\tCollection<DynamicRecord> valueRecords = record.getValueRecords();\n\t\t\tbuffer.putInt( valueRecords.size() );\n\t\t\tbuffer.flip();\n\t\t\tfileChannel.write( buffer );\n\t\t\tfor ( DynamicRecord keyRecord : keyRecords )\n\t\t\t{\n\t\t\t\twriteDynamicRecord( keyRecord, fileChannel, buffer );\n\t\t\t}\n\t\t\tfor ( DynamicRecord valueRecord : valueRecords )\n\t\t\t{\n\t\t\t\twriteDynamicRecord( valueRecord, fileChannel, buffer );\n\t\t\t}\n\t\t}","commit_id":"a601eb64fb0f7ff498df148e7b4cce2acf1aa1a1","url":"https://github.com/neo4j/neo4j"},{"original_method":"public static void assertPredicateEventuallyTrue(final Entity entity, final Predicate<Entity> predicate) {\n        assertPredicateEventuallyTrue(Maps.newLinkedHashMap(), entity, predicate);\n    }","id":16724,"modified_method":"public static <T extends Entity> void assertPredicateEventuallyTrue(final T entity, final Predicate<T> predicate) {\n        assertPredicateEventuallyTrue(Maps.newLinkedHashMap(), entity, predicate);\n    }","commit_id":"ce5a0e4235b2a71b28edb1eaed9d1cdf34d97509","url":"https://github.com/apache/incubator-brooklyn"},{"original_method":"public static void assertPredicateEventuallyTrue(Map<?,?> flags, final Entity entity, final Predicate<Entity> predicate) {\n        TestUtils.executeUntilSucceeds(flags, new Runnable() {\n                public void run() {\n                    assertTrue(predicate.apply(entity));\n                }});\n    }","id":16725,"modified_method":"public static <T extends Entity> void assertPredicateEventuallyTrue(Map<?,?> flags, final T entity, final Predicate<T> predicate) {\n        TestUtils.executeUntilSucceeds(flags, new Runnable() {\n                public void run() {\n                    assertTrue(predicate.apply(entity));\n                }});\n    }","commit_id":"ce5a0e4235b2a71b28edb1eaed9d1cdf34d97509","url":"https://github.com/apache/incubator-brooklyn"},{"original_method":"@Override\n    protected void connectSensors() {\n        super.connectSensors();\n\n        connectServiceUpIsRunning();\n\n        // Find an SshMachineLocation for the UPTIME feed\n        Optional<Location> location = Iterables.tryFind(getLocations(), Predicates.instanceOf(SshMachineLocation.class));\n        if (!location.isPresent()) throw new IllegalStateException(\"Could not find SshMachineLocation in list of locations\");\n        SshMachineLocation machine = (SshMachineLocation) location.get();\n        String statsCommand = getDriver().getRunDir() + \"/bin/redis-cli info stats\";\n\n        sshFeed = SshFeed.builder()\n                .entity(this)\n                .machine(machine)\n                .poll(new SshPollConfig<Integer>(UPTIME)\n                        .command(getDriver().getRunDir() + \"/bin/redis-cli info server\")\n                        .onException(Functions.constant(-1))\n                        .onFailure(Functions.constant(-1))\n                        .onSuccess(infoFunction(\"uptime_in_seconds\")))\n                .poll(new SshPollConfig<Integer>(TOTAL_CONNECTIONS_RECEIVED)\n                        .command(statsCommand)\n                        .onException(Functions.constant(-1))\n                        .onFailure(Functions.constant(-1))\n                        .onSuccess(infoFunction(\"total_connections_received\")))\n                .poll(new SshPollConfig<Integer>(TOTAL_COMMANDS_PROCESSED)\n                        .command(statsCommand)\n                        .onException(Functions.constant(-1))\n                        .onFailure(Functions.constant(-1))\n                        .onSuccess(infoFunction(\"total_commands_processed\")))\n                .poll(new SshPollConfig<Integer>(EXPIRED_KEYS)\n                        .command(statsCommand)\n                        .onException(Functions.constant(-1))\n                        .onFailure(Functions.constant(-1))\n                        .onSuccess(infoFunction(\"expired_keys\")))\n                .poll(new SshPollConfig<Integer>(EVICTED_KEYS)\n                        .command(statsCommand)\n                        .onException(Functions.constant(-1))\n                        .onFailure(Functions.constant(-1))\n                        .onSuccess(infoFunction(\"evicted_keys\")))\n                .poll(new SshPollConfig<Integer>(KEYSPACE_HITS)\n                        .command(statsCommand)\n                        .onException(Functions.constant(-1))\n                        .onFailure(Functions.constant(-1))\n                        .onSuccess(infoFunction(\"keyspace_hits\")))\n                .poll(new SshPollConfig<Integer>(KEYSPACE_MISSES)\n                        .command(statsCommand)\n                        .onException(Functions.constant(-1))\n                        .onFailure(Functions.constant(-1))\n                        .onSuccess(infoFunction(\"keyspace_misses\")))\n                .build();\n    }","id":16726,"modified_method":"@Override\n    protected void connectSensors() {\n        super.connectSensors();\n\n        connectServiceUpIsRunning();\n\n        // Find an SshMachineLocation for the UPTIME feed\n        Optional<Location> location = Iterables.tryFind(getLocations(), Predicates.instanceOf(SshMachineLocation.class));\n        if (!location.isPresent()) throw new IllegalStateException(\"Could not find SshMachineLocation in list of locations\");\n        SshMachineLocation machine = (SshMachineLocation) location.get();\n        String statsCommand = getDriver().getRunDir() + \"/bin/redis-cli -p \" + getRedisPort() + \" info stats\";\n\n        sshFeed = SshFeed.builder()\n                .entity(this)\n                .machine(machine)\n                .poll(new SshPollConfig<Integer>(UPTIME)\n                        .command(getDriver().getRunDir() + \"/bin/redis-cli -p \" + getRedisPort() + \" info server\")\n                        .onFailureOrException(Functions.constant(-1))\n                        .onSuccess(infoFunction(\"uptime_in_seconds\")))\n                .poll(new SshPollConfig<Integer>(TOTAL_CONNECTIONS_RECEIVED)\n                        .command(statsCommand)\n                        .onFailureOrException(Functions.constant(-1))\n                        .onSuccess(infoFunction(\"total_connections_received\")))\n                .poll(new SshPollConfig<Integer>(TOTAL_COMMANDS_PROCESSED)\n                        .command(statsCommand)\n                        .onFailureOrException(Functions.constant(-1))\n                        .onSuccess(infoFunction(\"total_commands_processed\")))\n                .poll(new SshPollConfig<Integer>(EXPIRED_KEYS)\n                        .command(statsCommand)\n                        .onFailureOrException(Functions.constant(-1))\n                        .onSuccess(infoFunction(\"expired_keys\")))\n                .poll(new SshPollConfig<Integer>(EVICTED_KEYS)\n                        .command(statsCommand)\n                        .onFailureOrException(Functions.constant(-1))\n                        .onSuccess(infoFunction(\"evicted_keys\")))\n                .poll(new SshPollConfig<Integer>(KEYSPACE_HITS)\n                        .command(statsCommand)\n                        .onFailureOrException(Functions.constant(-1))\n                        .onSuccess(infoFunction(\"keyspace_hits\")))\n                .poll(new SshPollConfig<Integer>(KEYSPACE_MISSES)\n                        .command(statsCommand)\n                        .onFailureOrException(Functions.constant(-1))\n                        .onSuccess(infoFunction(\"keyspace_misses\")))\n                .build();\n    }","commit_id":"ce5a0e4235b2a71b28edb1eaed9d1cdf34d97509","url":"https://github.com/apache/incubator-brooklyn"},{"original_method":"/**\n   * Delete Account in the system\n   *\n   * @param accountId AccountId to be deleted\n   * @return boolean status of account deletion\n   * @throws {@code RetryException}\n   */\n  @Override\n  public boolean deleteAccount(String accountId) throws ConfigurationException, RuntimeException {\n\n    if(this.poolManager == null){\n      throw new ConfigurationException(\"DBConnection pool is null. DAO is not configured\");\n    }\n    try {\n      Connection connection = this.poolManager.getConnection();\n      SQLChain chain = SQLChainImpl.getSqlChain(connection);\n      chain.delete(DBUtils.AccountTable.TABLE_NAME)\n           .where(DBUtils.AccountTable.EMAIL_COLUMN).equal(accountId).execute();\n\n    }\n    catch (SQLException e){\n      throw new RuntimeException(e.getMessage(),e.getCause());\n    }\n    return true;\n  }","id":16727,"modified_method":"/**\n   * Delete Account in the system\n   *\n   * @param accountId AccountId to be deleted\n   * @return boolean status of account deletion\n   * @throws {@code RetryException}\n   */\n  @Override\n  public boolean deleteAccount(String accountId) throws ConfigurationException, RuntimeException {\n\n    //TODO: accountId to int\n    if(this.poolManager == null){\n      throw new ConfigurationException(\"DBConnection pool is null. DAO is not configured\");\n    }\n    try {\n      Connection connection = this.poolManager.getConnection();\n      String SQL = String.format( \"DELETE FROM %s WHERE %s = ?\",\n                                  DBUtils.AccountTable.TABLE_NAME,\n                                  DBUtils.AccountTable.ID_COLUMN);\n      PreparedStatement ps = connection.prepareStatement(SQL);\n\n      ps.setString(1, accountId);\n      ps.executeUpdate();\n\n    }\n    catch (SQLException e){\n      throw new RuntimeException(e.getMessage(),e.getCause());\n    }\n    return true;\n  }","commit_id":"a783a6e6cb83a25300802fbdd8c79a40ea1c4feb","url":"https://github.com/caskdata/cdap"},{"original_method":"@Override\n  public boolean updateBillingInfo(int accountId, BillingInfo billingInfo) throws ConfigurationException,RuntimeException {\n    if(this.poolManager == null){\n      throw new ConfigurationException(\"DBConnection pool is null. DAO is not configured\");\n    }\n    try {\n      Connection connection = this.poolManager.getConnection();\n      SQLChain chain = SQLChainImpl.getSqlChain(connection);\n      chain.insert(DBUtils.AccountPayment.TABLE_NAME)\n           .columns(DBUtils.AccountPayment.ACCOUNT_ID_COLUMN, DBUtils.AccountPayment.CREDIT_CARD_NAME_COLUMN,\n                    DBUtils.AccountPayment.CREDIT_CARD_NUMBER_COLUMN, DBUtils.AccountPayment.CREDIT_CARD_CVV_COLUMN,\n                    DBUtils.AccountPayment.CREDIT_CARD_EXPIRY_COLUMN)\n           .values(accountId,billingInfo.getCreditCardName(),billingInfo.getCreditCardNumber(),\n                   billingInfo.getCvv(),billingInfo.getExpirationDate())\n           .execute();\n    }\n    catch (SQLException e){\n      throw new RuntimeException(e.getMessage(),e.getCause());\n    }\n\n    return false;  //To change body of implemented methods use File | Settings | File Templates.\n  }","id":16728,"modified_method":"@Override\n  public boolean updateBillingInfo(int accountId, BillingInfo billingInfo) throws ConfigurationException,RuntimeException {\n    if(this.poolManager == null){\n      throw new ConfigurationException(\"DBConnection pool is null. DAO is not configured\");\n    }\n    try {\n      Connection connection = this.poolManager.getConnection();\n\n\n      String SQL = String.format( \"INSERT INTO %s (%s,%s,%s,%s,%s) VALUES(?,?,?,?,?)\" ,\n                                    DBUtils.AccountPayment.TABLE_NAME,\n                                    DBUtils.AccountPayment.ACCOUNT_ID_COLUMN,\n                                    DBUtils.AccountPayment.CREDIT_CARD_NAME_COLUMN,\n                                    DBUtils.AccountPayment.CREDIT_CARD_NUMBER_COLUMN,\n                                    DBUtils.AccountPayment.CREDIT_CARD_CVV_COLUMN,\n                                    DBUtils.AccountPayment.CREDIT_CARD_EXPIRY_COLUMN);\n\n      PreparedStatement ps = connection.prepareStatement(SQL);\n\n      ps.setInt(1,accountId);\n      ps.setString(2, billingInfo.getCreditCardName());\n      ps.setString(3, billingInfo.getCreditCardNumber());\n      ps.setString(4,billingInfo.getCvv());\n      ps.setString(5,billingInfo.getExpirationDate());\n\n      ps.executeUpdate();\n\n    }\n    catch (SQLException e){\n      throw new RuntimeException(e.getMessage(),e.getCause());\n    }\n\n    return false;  //To change body of implemented methods use File | Settings | File Templates.\n  }","commit_id":"a783a6e6cb83a25300802fbdd8c79a40ea1c4feb","url":"https://github.com/caskdata/cdap"},{"original_method":"@Override\n  public boolean addRoleType(int accountId, Role role) throws ConfigurationException, RuntimeException {\n    if(this.poolManager == null){\n      throw new ConfigurationException(\"DBConnection pool is null. DAO is not configured\");\n    }\n    try {\n      Connection connection = this.poolManager.getConnection();\n\n      SQLChain chain = SQLChainImpl.getSqlChain(connection);\n      chain.insert(DBUtils.AccountRoleType.TABLE_NAME)\n           .columns(DBUtils.AccountRoleType.ACCOUNT_ID_COLUMN, DBUtils.AccountRoleType.ROLE_NAME_COLUMN,\n                    DBUtils.AccountRoleType.PERMISSIONS_COLUMN)\n           .values(accountId, role.getRoleName(),role.getPermissions())\n           .execute();\n    }\n    catch (SQLException e) {\n      throw new RuntimeException(e.getMessage(),e.getCause());\n    }\n    return false;  //To change body of implemented methods use File | Settings | File Templates.\n  }","id":16729,"modified_method":"@Override\n  public boolean addRoleType(int accountId, Role role) throws ConfigurationException, RuntimeException {\n    if(this.poolManager == null){\n      throw new ConfigurationException(\"DBConnection pool is null. DAO is not configured\");\n    }\n    try {\n      Connection connection = this.poolManager.getConnection();\n      String SQL = String.format( \"INSERT INTO %s (%s,%s,%s,%s,%s) VALUES(?,?,?,?,?)\" ,\n                                              DBUtils.AccountRoleType.TABLE_NAME,\n                                              DBUtils.AccountRoleType.ACCOUNT_ID_COLUMN,\n                                              DBUtils.AccountRoleType.ROLE_NAME_COLUMN,\n                                              DBUtils.AccountRoleType.PERMISSIONS_COLUMN);\n\n      PreparedStatement ps = connection.prepareStatement(SQL);\n\n      ps.setInt(1,accountId);\n      ps.setString(2,role.getRoleName());\n      ps.setString(3,role.getPermissions());\n      ps.executeUpdate();\n\n    }\n    catch (SQLException e) {\n      throw new RuntimeException(e.getMessage(),e.getCause());\n    }\n    return false;  //To change body of implemented methods use File | Settings | File Templates.\n  }","commit_id":"a783a6e6cb83a25300802fbdd8c79a40ea1c4feb","url":"https://github.com/caskdata/cdap"},{"original_method":"/**\n   * GetAccount\n   *\n   * @param accountId id of the account\n   * @return null if no entry matches, Instance of {@code Account} otherwise\n   * @throws {@code RetryException}\n   */\n  @Override\n  public Account getAccount(int accountId) throws ConfigurationException, RuntimeException {\n\n    Account account = null;\n\n    if(this.poolManager == null){\n      throw new ConfigurationException(\"DBConnection pool is null. DAO is not configured\");\n    }\n    try {\n      Connection connection = this.poolManager.getConnection();\n      SQLChain chain = SQLChainImpl.getSqlChain(connection);\n\n      List<Map<String,Object>> resultSet = chain.select(DBUtils.AccountTable.TABLE_NAME)\n                                                .include(DBUtils.AccountTable.ID_COLUMN,\n                                                         DBUtils.AccountTable.EMAIL_COLUMN,\n                                                         DBUtils.AccountTable.FIRST_NAME_COLUMN,\n                                                         DBUtils.AccountTable.LAST_NAME_COLUMN,\n                                                         DBUtils.AccountTable.COMPANY_COLUMN)\n                                                .where(DBUtils.AccountTable.ID_COLUMN).equal(accountId)\n                                                .execute();\n\n\n       if (resultSet.size() == 1 ) {\n\n\n         Map<String,Object> dataSet = resultSet.get(0);\n         account = new Account((String)dataSet.get(DBUtils.AccountTable.FIRST_NAME_COLUMN.toLowerCase()),\n                               (String)dataSet.get(DBUtils.AccountTable.LAST_NAME_COLUMN.toLowerCase()),\n                               (String)dataSet.get(DBUtils.AccountTable.COMPANY_COLUMN.toLowerCase()),\n                               (String)dataSet.get(DBUtils.AccountTable.EMAIL_COLUMN.toLowerCase()),\n                               (Integer)dataSet.get(DBUtils.AccountTable.ID_COLUMN.toLowerCase()));\n\n       }\n\n\n    }\n    catch (SQLException e) {\n      throw new RuntimeException(e.getMessage(),e.getCause());\n    }\n    return account;\n  }","id":16730,"modified_method":"/**\n   * GetAccount\n   *\n   * @param accountId id of the account\n   * @return null if no entry matches, Instance of {@code Account} otherwise\n   * @throws {@code RetryException}\n   */\n  @Override\n  public Account getAccount(int accountId) throws ConfigurationException, RuntimeException {\n\n    Account account = null;\n\n    if(this.poolManager == null){\n      throw new ConfigurationException(\"DBConnection pool is null. DAO is not configured\");\n    }\n    try {\n      Connection connection = this.poolManager.getConnection();\n\n      String SQL = String.format( \"SELECT %s,%s,%s,%s,%s FROM %s WHERE %s = ?\",\n                                  DBUtils.AccountTable.FIRST_NAME_COLUMN,DBUtils.AccountTable.LAST_NAME_COLUMN,\n                                  DBUtils.AccountTable.COMPANY_COLUMN, DBUtils.AccountTable.EMAIL_COLUMN,\n                                  DBUtils.AccountTable.ID_COLUMN,\n                                  DBUtils.AccountTable.TABLE_NAME,\n                                  DBUtils.AccountTable.ID_COLUMN);\n\n      PreparedStatement ps = connection.prepareStatement(SQL);\n      ps.setInt(1,accountId);\n      ResultSet rs = ps.executeQuery();\n\n      int count  = 0;\n      while(rs.next()) {\n        count++;\n        account = new Account(rs.getString(1),rs.getString(2),rs.getString(3),rs.getString(4),rs.getInt(5));\n        if (count > 1 ) { // Note: This condition should never occur since ids are auto generated.\n          throw new RuntimeException(\"Multiple accounts with same account ID\");\n        }\n      }\n\n    }\n    catch (SQLException e) {\n      throw new RuntimeException(e.getMessage(),e.getCause());\n    }\n    return account;\n  }","commit_id":"a783a6e6cb83a25300802fbdd8c79a40ea1c4feb","url":"https://github.com/caskdata/cdap"},{"original_method":"/**\n   * Create Account in the system\n   * @param account Instance of {@code Account}\n   * @return boolean status of account creation\n   * @throws {@code RetryException}\n   */\n  @Override\n  public long createAccount(Account account) throws ConfigurationException, RuntimeException {\n    //TODO: Return boolean?\n    if (this.poolManager == null){\n      throw new ConfigurationException(\"DBConnection pool is null. DAO is not configured\");\n    }\n    try {\n      Connection connection= this.poolManager.getConnection();\n\n      PreparedStatement ps = null;\n      String SQL = String.format( \"INSERT INTO %s (%s,%s,%s,%s,%s) VALUES (?,?,?,?,?)\", DBUtils.AccountTable.TABLE_NAME,\n                                  DBUtils.AccountTable.EMAIL_COLUMN,\n                                  DBUtils.AccountTable.FIRST_NAME_COLUMN, DBUtils.AccountTable.LAST_NAME_COLUMN,\n                                  DBUtils.AccountTable.COMPANY_COLUMN, DBUtils.AccountTable.CONFIRMED_COLUMN);\n\n      ps = connection.prepareStatement(SQL, Statement.RETURN_GENERATED_KEYS);\n      ps.setString(1, account.getEmailId());\n      ps.setString(2,account.getFirstName());\n      ps.setString(3,account.getLastName());\n      ps.setString(4,account.getCompany());\n      ps.setInt(5, 0);\n\n      ps.executeUpdate();\n      ResultSet result = ps.getGeneratedKeys();\n      if (result == null) {\n        throw new RuntimeException(\"Failed Insert\");\n      }\n      result.next();\n      long id = result.getLong(1);\n\n      return id;\n    } catch (SQLException e) {\n      //TODO: Log\n      throw new RuntimeException(e.getMessage(), e.getCause());\n    }\n  }","id":16731,"modified_method":"/**\n   * Create Account in the system\n   * @param account Instance of {@code Account}\n   * @return boolean status of account creation\n   * @throws {@code RetryException}\n   */\n  @Override\n  public long createAccount(Account account) throws ConfigurationException, RuntimeException {\n    //TODO: Return boolean?\n    if (this.poolManager == null){\n      throw new ConfigurationException(\"DBConnection pool is null. DAO is not configured\");\n    }\n    try {\n      Connection connection= this.poolManager.getConnection();\n\n      String SQL = String.format( \"INSERT INTO %s (%s,%s,%s,%s,%s) VALUES (?,?,?,?,?)\", DBUtils.AccountTable.TABLE_NAME,\n                                  DBUtils.AccountTable.EMAIL_COLUMN,\n                                  DBUtils.AccountTable.FIRST_NAME_COLUMN, DBUtils.AccountTable.LAST_NAME_COLUMN,\n                                  DBUtils.AccountTable.COMPANY_COLUMN, DBUtils.AccountTable.CONFIRMED_COLUMN);\n\n      PreparedStatement ps = connection.prepareStatement(SQL, Statement.RETURN_GENERATED_KEYS);\n      ps.setString(1, account.getEmailId());\n      ps.setString(2,account.getFirstName());\n      ps.setString(3,account.getLastName());\n      ps.setString(4,account.getCompany());\n      ps.setInt(5, DBUtils.AccountTable.ACCOUNT_UNCONFIRMED);\n\n      ps.executeUpdate();\n      ResultSet result = ps.getGeneratedKeys();\n      if (result == null) {\n        throw new RuntimeException(\"Failed Insert\");\n      }\n      result.next();\n      long id = result.getLong(1);\n\n      return id;\n    } catch (SQLException e) {\n      //TODO: Log\n      throw new RuntimeException(e.getMessage(), e.getCause());\n    }\n  }","commit_id":"a783a6e6cb83a25300802fbdd8c79a40ea1c4feb","url":"https://github.com/caskdata/cdap"},{"original_method":"public boolean confirmRegistration(AccountSecurity security) throws ConfigurationException, RuntimeException{\n\n    if (this.poolManager == null){\n      throw new ConfigurationException(\"DBConnection pool is null. DAO is not configured\");\n    }\n    try {\n      Connection connection = this.poolManager.getConnection();\n      SQLChain chain = SQLChainImpl.getSqlChain(connection);\n      //TODO: Update count should be 1\n      chain.update(DBUtils.AccountTable.TABLE_NAME)\n           .set(DBUtils.AccountTable.PASSWORD_COLUMN, generateSaltedHashedPassword(security.getPassword()))\n           .set(DBUtils.AccountTable.CONFIRMED_COLUMN, DBUtils.AccountTable.ACCOUNT_CONFIRMED)\n           .setLast(DBUtils.AccountTable.API_KEY_COLUMN, generateAPIKey())\n           .where(DBUtils.AccountTable.ID_COLUMN).equal(security.getAccountId()).execute();\n    }\n    catch (SQLException e){\n      throw new RuntimeException(e.getMessage(),e.getCause());\n    }\n\n    return true;\n  }","id":16732,"modified_method":"public boolean confirmRegistration(AccountSecurity security) throws ConfigurationException, RuntimeException{\n\n    if (this.poolManager == null){\n      throw new ConfigurationException(\"DBConnection pool is null. DAO is not configured\");\n    }\n    try {\n      Connection connection = this.poolManager.getConnection();\n      String SQL = String.format( \"UPDATE %s SET %s = ?, %s = ?, %s = ? WHERE %s = ?\" ,\n                                          DBUtils.AccountTable.TABLE_NAME,\n                                          DBUtils.AccountTable.PASSWORD_COLUMN, DBUtils.AccountTable.CONFIRMED_COLUMN,\n                                          DBUtils.AccountTable.API_KEY_COLUMN, DBUtils.AccountTable.ID_COLUMN);\n\n      PreparedStatement ps = connection.prepareStatement(SQL);\n      ps.setString(1, generateSaltedHashedPassword(security.getPassword()));\n      ps.setInt(2, DBUtils.AccountTable.ACCOUNT_CONFIRMED);\n      ps.setString(3,generateAPIKey());\n      ps.setInt(4, security.getAccountId());\n\n      ps.executeUpdate();\n\n    }\n    catch (SQLException e){\n      throw new RuntimeException(e.getMessage(),e.getCause());\n    }\n\n    return true;\n  }","commit_id":"a783a6e6cb83a25300802fbdd8c79a40ea1c4feb","url":"https://github.com/caskdata/cdap"},{"original_method":"public Role(String roleName, String permissions) {\n    this(-1,roleName,permissions);\n  }","id":16733,"modified_method":"public Role(String roleName, String permissions) {\n    this(\"\",roleName,permissions);\n  }","commit_id":"a783a6e6cb83a25300802fbdd8c79a40ea1c4feb","url":"https://github.com/caskdata/cdap"},{"original_method":"public int getRoleId() {\n    return roleId;\n  }","id":16734,"modified_method":"public String getRoleType() {\n    return roleType;\n  }","commit_id":"a783a6e6cb83a25300802fbdd8c79a40ea1c4feb","url":"https://github.com/caskdata/cdap"},{"original_method":"public Role(int roleId, String roleName, String permissions) {\n    this.roleId = roleId;\n    this.roleName = roleName;\n    this.permissions = permissions;\n  }","id":16735,"modified_method":"public Role(String roleType, String roleName, String permissions) {\n    this.roleType = roleType;\n    this.roleName = roleName;\n    this.permissions = permissions;\n  }","commit_id":"a783a6e6cb83a25300802fbdd8c79a40ea1c4feb","url":"https://github.com/caskdata/cdap"},{"original_method":"@Test\n  public void testInsertAndSelect() throws SQLException, ClassNotFoundException {\n\n\n    //Startup HSQL instance\n    TestHelper.startHsqlDB();\n    Connection connection =DriverManager.getConnection(\"jdbc:hsqldb:mem:test;\" +\n                             \"hsqldb.default_table_type=cached;hsqldb.sql.enforce_size=false\", \"sa\", \"\");\n\n\n    //Insert\n    //PreparedStatment's execute returns false on inserts\n    assertFalse(insertSingleInAccount(connection, \"sree@gmail.com\", \"sree\"));\n\n    //Select all and verify insert\n    assertEquals(1,selectAllFromAccount(connection).size() );\n\n    //Insert into VPC table;\n    assertFalse(insertOneIntoVPC(connection,\"sree\",\"vpc1\"));\n\n    //Select from VPC and veriofy\n    assertEquals(1,selectFromVPC(connection,\"sree\").size());\n\n    //Check Join\n    List<Map<String,Object>> data = selectJoin(connection);\n    assertEquals(1,data.size());\n\n    for( Map<String,Object> d : data) {\n      assertEquals(\"sree\",d.get(\"NAME\"));\n      assertEquals(\"vpc1\",d.get(\"VPC_NAME\"));\n    }\n\n\n    //Select none\n    assertEquals(0, selectNone(connection).size());\n\n    //Insert again\n    assertFalse(insertSingleInAccount(connection,\"simpson@homer.com\",\"homer simpson\"));\n\n    //Select by name\n    assertEquals(1,selectNameFromAccount(connection,\"homer simpson\").size());\n\n    //Select all count 2\n    assertEquals(2, selectAllFromAccount(connection).size());\n\n    //Delete one\n    assertFalse(deleteOneFromAccount(connection, \"simpson@homer.com\"));\n\n    //Verify the data is deleted\n    assertEquals(1, selectAllFromAccount(connection).size());\n\n\n    //Update an entry\n    assertFalse(updateOneInAccount(connection));\n\n    //Verify Updates\n    data  = selectEmail(connection,\"sree@gmail.com\");\n    for  (Map<String,Object> d : data){\n      assertEquals(\"Sreevatsan Raman\",d.get(\"NAME\"));\n    }\n\n    //Update multiple Entries\n    assertFalse(updateManyColumnsInAccount(connection));\n\n    //Verify result of updating multiple columns\n     data  = selectEmail(connection,\"sree@continuuity.com\");\n    for  (Map<String,Object> d : data){\n      assertEquals(\"Sree\",d.get(\"NAME\"));\n      assertEquals(\"Continuuity\",d.get(\"COMPANY\"));\n    }\n\n    //Delete all\n    assertFalse(deleteAllFromAccount(connection));\n\n    //Verify if delete all worked\n    assertEquals(0,selectAllFromAccount(connection).size());\n\n    //Stop HSQL instance\n    TestHelper.stopHsqlDB();\n\n  }","id":16736,"modified_method":"@Test\n  public void testInsertAndSelect() throws SQLException, ClassNotFoundException {\n\n\n    //Startup HSQL instance\n    TestHelper.startHsqlDB();\n    Connection connection =DriverManager.getConnection(\"jdbc:hsqldb:mem:test;\" +\n                             \"hsqldb.default_table_type=cached;hsqldb.sql.enforce_size=false\", \"sa\", \"\");\n\n\n    //TODO: Add test cases\n    //Note: Removed SQLCHain related test cases should add in DAL specific test cases.\n\n    //Stop HSQL instance\n    TestHelper.stopHsqlDB();\n\n  }","commit_id":"a783a6e6cb83a25300802fbdd8c79a40ea1c4feb","url":"https://github.com/caskdata/cdap"},{"original_method":"@Override\n  public long addVPC(int accountId, VPC vpc) throws ConfigurationException, RuntimeException {\n    if (this.poolManager == null){\n      throw new ConfigurationException(\"DBConnection pool is null. DAO is not configured\");\n    }\n    try {\n      Connection connection= this.poolManager.getConnection();\n//\n      PreparedStatement ps = null;\n      String SQL = String.format( \"INSERT INTO %s (%s,%s) VALUES (?,?)\",\n                                  DBUtils.VPC.TABLE_NAME,\n                                  DBUtils.VPC.ACCOUNT_ID_COLUMN, DBUtils.VPC.NAME_COLUMN );\n\n\n      ps = connection.prepareStatement(SQL, Statement.RETURN_GENERATED_KEYS);\n      ps.setInt(1, accountId);\n      ps.setString(2, vpc.getVpcName());\n\n      ps.executeUpdate();\n      ResultSet result = ps.getGeneratedKeys();\n      if (result == null) {\n        throw new RuntimeException(\"Failed Insert\");\n      }\n      result.next();\n      long id = result.getLong(1);\n      return id;\n    } catch (SQLException e) {\n      //TODO: Log\n      throw new RuntimeException(e.getMessage(), e.getCause());\n    }\n  }","id":16737,"modified_method":"@Override\n  public long addVPC(int accountId, VPC vpc) throws ConfigurationException, RuntimeException {\n    if (this.poolManager == null){\n      throw new ConfigurationException(\"DBConnection pool is null. DAO is not configured\");\n    }\n    try {\n      Connection connection= this.poolManager.getConnection();\n\n      String SQL = String.format( \"INSERT INTO %s (%s,%s) VALUES (?,?)\",\n                                  DBUtils.VPC.TABLE_NAME,\n                                  DBUtils.VPC.ACCOUNT_ID_COLUMN, DBUtils.VPC.NAME_COLUMN );\n\n      PreparedStatement ps = connection.prepareStatement(SQL, Statement.RETURN_GENERATED_KEYS);\n      ps.setInt(1, accountId);\n      ps.setString(2, vpc.getVpcName());\n      ps.executeUpdate();\n\n      ResultSet result = ps.getGeneratedKeys();\n      if (result == null) {\n        throw new RuntimeException(\"Failed Insert\");\n      }\n      result.next();\n      long id = result.getLong(1);\n      return id;\n    } catch (SQLException e) {\n      //TODO: Log\n      throw new RuntimeException(e.getMessage(), e.getCause());\n    }\n  }","commit_id":"a783a6e6cb83a25300802fbdd8c79a40ea1c4feb","url":"https://github.com/caskdata/cdap"},{"original_method":"@Override\n  public List<VPC> getVPC(int accountId) throws RuntimeException, ConfigurationException {\n\n    List<VPC> vpcList = new ArrayList<VPC>();\n    if (this.poolManager == null){\n      throw new ConfigurationException(\"DBConnection pool is null. DAO is not configured\");\n    }\n    try {\n      Connection connection= this.poolManager.getConnection();\n      SQLChain chain =  SQLChainImpl.getSqlChain(connection);\n      List<Map<String,Object>> resultSet =  chain.select(DBUtils.VPC.TABLE_NAME)\n                                                 .includeAll()\n                                                 .where(DBUtils.VPC.ACCOUNT_ID_COLUMN).equal(accountId)\n                                                 .execute();\n      for(Map<String,Object> result : resultSet) {\n        VPC vpc = new VPC((Integer)result.get(DBUtils.VPC.VPC_ID_COLUMN),(String)result.get(DBUtils.VPC.NAME_COLUMN));\n        vpcList.add(vpc);\n      }\n\n      }\n    catch (SQLException e) {\n      //TODO: Log\n      throw new RuntimeException(e.getMessage(), e.getCause());\n    }\n    return vpcList;\n  }","id":16738,"modified_method":"@Override\n  public List<VPC> getVPC(int accountId) throws RuntimeException, ConfigurationException {\n\n    List<VPC> vpcList = new ArrayList<VPC>();\n    if (this.poolManager == null){\n      throw new ConfigurationException(\"DBConnection pool is null. DAO is not configured\");\n    }\n    try {\n      Connection connection = this.poolManager.getConnection();\n      String SQL = String.format( \"SELECT %s, %s FROM %s WHERE %s = ?\",\n                                  DBUtils.VPC.VPC_ID_COLUMN, DBUtils.VPC.NAME_COLUMN, //COLUMNS\n                                  DBUtils.VPC.TABLE_NAME, //FROM\n                                  DBUtils.VPC.ACCOUNT_ID_COLUMN); //WHERE\n\n      PreparedStatement ps = connection.prepareStatement(SQL);\n      ps.setInt(1,accountId);\n      ResultSet rs = ps.executeQuery();\n\n\n      while(rs.next()) {\n        VPC vpc = new VPC(rs.getInt(1),rs.getString(2));\n        vpcList.add(vpc);\n\n      }\n\n    }\n    catch (SQLException e) {\n      //TODO: Log\n      throw new RuntimeException(e.getMessage(), e.getCause());\n    }\n    return vpcList;\n  }","commit_id":"a783a6e6cb83a25300802fbdd8c79a40ea1c4feb","url":"https://github.com/caskdata/cdap"},{"original_method":"@Override\n  public boolean removeVPC( int vpcId) throws ConfigurationException, RuntimeException {\n    if (this.poolManager == null){\n      throw new ConfigurationException(\"DBConnection pool is null. DAO is not configured\");\n    }\n    try {\n      Connection connection= this.poolManager.getConnection();\n      //TODO: Execute in a thread ...\n      SQLChain chain =  SQLChainImpl.getSqlChain(connection);\n      chain.delete(DBUtils.VPC.TABLE_NAME)\n           .where(DBUtils.VPC.VPC_ID_COLUMN).equal(vpcId)\n           .execute();\n    } catch (SQLException e) {\n      //TODO: Log\n      throw new RuntimeException(e.getMessage(), e.getCause());\n    }\n    return true;\n  }","id":16739,"modified_method":"@Override\n  public boolean removeVPC( int vpcId) throws ConfigurationException, RuntimeException {\n    if (this.poolManager == null){\n      throw new ConfigurationException(\"DBConnection pool is null. DAO is not configured\");\n    }\n    try {\n      Connection connection= this.poolManager.getConnection();\n\n      String SQL = String.format( \"DELETE FROM %s WHERE %s = ?\",\n                                  DBUtils.VPC.TABLE_NAME,\n                                  DBUtils.VPC.VPC_ID_COLUMN);\n      PreparedStatement ps = connection.prepareStatement(SQL);\n\n      ps.setInt(1,vpcId);\n      ps.executeUpdate();\n\n    } catch (SQLException e) {\n      //TODO: Log\n      throw new RuntimeException(e.getMessage(), e.getCause());\n    }\n    return true;\n  }","commit_id":"a783a6e6cb83a25300802fbdd8c79a40ea1c4feb","url":"https://github.com/caskdata/cdap"},{"original_method":"@Override\n  public boolean addRoles(int accountId, int vpcId, int userId, Role role, String overrides)\n           throws ConfigurationException, RuntimeException {\n\n    if (this.poolManager == null){\n      throw new ConfigurationException(\"DBConnection pool is null. DAO is not configured\");\n    }\n    try {\n      Connection connection= this.poolManager.getConnection();\n      //TODO: Execute in a thread ...\n      SQLChain chain =  SQLChainImpl.getSqlChain(connection);\n      chain.insert(DBUtils.VPCRole.TABLE_NAME)\n           .columns(DBUtils.VPCRole.VPC_ID_COLUMN, DBUtils.VPCRole.ACCOUNT_ID_COLUMN, DBUtils.VPCRole.USER_ID_COLUMN,\n                    DBUtils.VPCRole.ROLE_TYPE_COLUMN, DBUtils.VPCRole.ROLE_OVERRIDES_COLUMN)\n           .values(vpcId,accountId,userId,role.getRoleId(),overrides).execute();\n    }\n    catch (SQLException e) {\n      //TODO: Log\n      throw new RuntimeException(e.getMessage(), e.getCause());\n    }\n    return false;  //To change body of implemented methods use File | Settings | File Templates.\n  }","id":16740,"modified_method":"@Override\n  public boolean addRoles(int accountId, int vpcId, int userId, Role role, String overrides)\n           throws ConfigurationException, RuntimeException {\n\n    if (this.poolManager == null){\n      throw new ConfigurationException(\"DBConnection pool is null. DAO is not configured\");\n    }\n    try {\n      Connection connection= this.poolManager.getConnection();\n\n\n      String SQL = String.format( \"INSERT INTO %s (%s,%s,%s,%s,%s) VALUES (?,?,?,?,?)\",\n                                  DBUtils.VPCRole.TABLE_NAME,\n                                  DBUtils.VPCRole.VPC_ID_COLUMN, DBUtils.VPCRole.ACCOUNT_ID_COLUMN,\n                                  DBUtils.VPCRole.USER_ID_COLUMN, DBUtils.VPCRole.ROLE_TYPE_COLUMN,\n                                  DBUtils.VPCRole.ROLE_OVERRIDES_COLUMN);\n\n      PreparedStatement ps = connection.prepareStatement(SQL, Statement.RETURN_GENERATED_KEYS);\n      ps.setInt(1, vpcId);\n      ps.setInt(2, accountId);\n      ps.setInt(3, userId);\n      ps.setString(4, role.getRoleType());\n      ps.setString(5,overrides);\n      ps.executeUpdate();\n\n    }\n    catch (SQLException e) {\n      //TODO: Log\n      throw new RuntimeException(e.getMessage(), e.getCause());\n    }\n    return false;  //To change body of implemented methods use File | Settings | File Templates.\n  }","commit_id":"a783a6e6cb83a25300802fbdd8c79a40ea1c4feb","url":"https://github.com/caskdata/cdap"},{"original_method":"private boolean _hasSearchResults() {\n\t\tSearchContainer searchContainer = getSearchContainer();\n\n\t\tif (searchContainer != null) {\n\t\t\tDisplayTerms displayTerms =\n\t\t\t\t(DisplayTerms)searchContainer.getDisplayTerms();\n\n\t\t\tboolean searchResults = displayTerms.isAdvancedSearch();\n\n\t\t\tString keywords = displayTerms.getKeywords();\n\n\t\t\treturn (searchResults || !keywords.equals(StringPool.BLANK));\n\t\t}\n\n\t\treturn false;\n\t}","id":16741,"modified_method":"private boolean _hasSearchResults() {\n\t\tSearchContainer<?> searchContainer = getSearchContainer();\n\n\t\tif (searchContainer == null) {\n\t\t\treturn false;\n\t\t}\n\n\t\tDisplayTerms displayTerms = searchContainer.getDisplayTerms();\n\n\t\tString keywords = displayTerms.getKeywords();\n\n\t\tif (displayTerms.isAdvancedSearch() ||\n\t\t\t!keywords.equals(StringPool.BLANK)) {\n\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\t}","commit_id":"9cb5a345ba5c105ab6005b915cb87c14df63c4ab","url":"https://github.com/liferay/liferay-portal"},{"original_method":"private boolean _hasSearchResults() {\n\t\tSearchContainer searchContainer = getSearchContainer();\n\n\t\tif (searchContainer != null) {\n\t\t\tDisplayTerms displayTerms =\n\t\t\t\t(DisplayTerms)searchContainer.getDisplayTerms();\n\n\t\t\tboolean searchResults = displayTerms.isAdvancedSearch();\n\n\t\t\tString keywords = displayTerms.getKeywords();\n\n\t\t\treturn (searchResults || !keywords.equals(StringPool.BLANK));\n\t\t}\n\n\t\treturn false;\n\t}","id":16742,"modified_method":"private boolean _hasSearchResults() {\n\t\tSearchContainer<?> searchContainer = getSearchContainer();\n\n\t\tif (searchContainer == null) {\n\t\t\treturn false;\n\t\t}\n\n\t\tDisplayTerms displayTerms = searchContainer.getDisplayTerms();\n\n\t\tString keywords = displayTerms.getKeywords();\n\n\t\tif (displayTerms.isAdvancedSearch() ||\n\t\t\t!keywords.equals(StringPool.BLANK)) {\n\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\t}","commit_id":"9cb5a345ba5c105ab6005b915cb87c14df63c4ab","url":"https://github.com/liferay/liferay-portal"},{"original_method":"private boolean _hasSearchResults() {\n\t\tSearchContainer searchContainer = getSearchContainer();\n\n\t\tif (searchContainer != null) {\n\t\t\tDisplayTerms displayTerms =\n\t\t\t\t(DisplayTerms)searchContainer.getDisplayTerms();\n\n\t\t\tboolean searchResults = displayTerms.isAdvancedSearch();\n\n\t\t\tString keywords = displayTerms.getKeywords();\n\n\t\t\treturn (searchResults || !keywords.equals(StringPool.BLANK));\n\t\t}\n\n\t\treturn false;\n\t}","id":16743,"modified_method":"private boolean _hasSearchResults() {\n\t\tSearchContainer<?> searchContainer = getSearchContainer();\n\n\t\tif (searchContainer == null) {\n\t\t\treturn false;\n\t\t}\n\n\t\tDisplayTerms displayTerms = searchContainer.getDisplayTerms();\n\n\t\tString keywords = displayTerms.getKeywords();\n\n\t\tif (displayTerms.isAdvancedSearch() ||\n\t\t\t!keywords.equals(StringPool.BLANK)) {\n\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\t}","commit_id":"ac432406c792d6603b8a42894ab07cc207d9f94e","url":"https://github.com/liferay/liferay-portal"},{"original_method":"private boolean _hasSearchResults() {\n\t\tSearchContainer searchContainer = getSearchContainer();\n\n\t\tif (searchContainer != null) {\n\t\t\tDisplayTerms displayTerms =\n\t\t\t\t(DisplayTerms)searchContainer.getDisplayTerms();\n\n\t\t\tboolean searchResults = displayTerms.isAdvancedSearch();\n\n\t\t\tString keywords = displayTerms.getKeywords();\n\n\t\t\treturn (searchResults || !keywords.equals(StringPool.BLANK));\n\t\t}\n\n\t\treturn false;\n\t}","id":16744,"modified_method":"private boolean _hasSearchResults() {\n\t\tSearchContainer<?> searchContainer = getSearchContainer();\n\n\t\tif (searchContainer == null) {\n\t\t\treturn false;\n\t\t}\n\n\t\tDisplayTerms displayTerms = searchContainer.getDisplayTerms();\n\n\t\tString keywords = displayTerms.getKeywords();\n\n\t\tif (displayTerms.isAdvancedSearch() ||\n\t\t\t!keywords.equals(StringPool.BLANK)) {\n\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\t}","commit_id":"ac432406c792d6603b8a42894ab07cc207d9f94e","url":"https://github.com/liferay/liferay-portal"},{"original_method":"/**\n     * Partition refresh callback.\n     */\n    void refreshPartitions() {\n        ClusterNode oldest = CU.oldestAliveCacheServerNode(cctx, AffinityTopologyVersion.NONE);\n\n        if (oldest == null) {\n            if (log.isDebugEnabled())\n                log.debug(\"Skip partitions refresh, there are no server nodes [loc=\" + cctx.localNodeId() + ']');\n\n            return;\n        }\n\n        if (log.isDebugEnabled())\n            log.debug(\"Refreshing partitions [oldest=\" + oldest.id() + \", loc=\" + cctx.localNodeId() + ']');\n\n        Collection<ClusterNode> rmts = null;\n\n        // If this is the oldest node.\n        if (oldest.id().equals(cctx.localNodeId())) {\n            rmts = CU.remoteNodes(cctx, AffinityTopologyVersion.NONE);\n\n            if (log.isDebugEnabled())\n                log.debug(\"Refreshing partitions from oldest node: \" + cctx.localNodeId());\n\n            sendAllPartitions(rmts);\n        }\n        else {\n            if (log.isDebugEnabled())\n                log.debug(\"Refreshing local partitions from non-oldest node: \" +\n                    cctx.localNodeId());\n\n            sendLocalPartitions(oldest, null);\n        }\n    }","id":16745,"modified_method":"/**\n     * Partition refresh callback.\n     */\n    void refreshPartitions() {\n        ClusterNode oldest = CU.oldestAliveCacheServerNode(cctx, AffinityTopologyVersion.NONE);\n\n        if (oldest == null) {\n            if (log.isDebugEnabled())\n                log.debug(\"Skip partitions refresh, there are no server nodes [loc=\" + cctx.localNodeId() + ']');\n\n            return;\n        }\n\n        if (log.isDebugEnabled())\n            log.debug(\"Refreshing partitions [oldest=\" + oldest.id() + \", loc=\" + cctx.localNodeId() + ']');\n\n        Collection<ClusterNode> rmts;\n\n        // If this is the oldest node.\n        if (oldest.id().equals(cctx.localNodeId())) {\n            rmts = CU.remoteNodes(cctx, AffinityTopologyVersion.NONE);\n\n            if (log.isDebugEnabled())\n                log.debug(\"Refreshing partitions from oldest node: \" + cctx.localNodeId());\n\n            sendAllPartitions(rmts);\n        }\n        else {\n            if (log.isDebugEnabled())\n                log.debug(\"Refreshing local partitions from non-oldest node: \" +\n                    cctx.localNodeId());\n\n            sendLocalPartitions(oldest, null);\n        }\n    }","commit_id":"67f88584a4ab330bbda956b3d0d830468d28920f","url":"https://github.com/apache/ignite"},{"original_method":"/** {@inheritDoc} */\n        @Override protected void body() throws InterruptedException, IgniteInterruptedCheckedException {\n            long timeout = cctx.gridConfig().getNetworkTimeout();\n\n            boolean startEvtFired = false;\n\n            int cnt = 0;\n\n            IgniteInternalFuture asyncStartFut = null;\n\n            while (!isCancelled()) {\n                GridDhtPartitionsExchangeFuture exchFut = null;\n\n                cnt++;\n\n                try {\n                    boolean preloadFinished = true;\n\n                    for (GridCacheContext cacheCtx : cctx.cacheContexts()) {\n                        preloadFinished &= cacheCtx.preloader().syncFuture().isDone();\n\n                        if (!preloadFinished)\n                            break;\n                    }\n\n                    // If not first preloading and no more topology events present,\n                    // then we periodically refresh partition map.\n                    if (!cctx.kernalContext().clientNode() && futQ.isEmpty() && preloadFinished) {\n                        refreshPartitions(timeout);\n\n                        timeout = cctx.gridConfig().getNetworkTimeout();\n                    }\n\n                    // After workers line up and before preloading starts we initialize all futures.\n                    if (log.isDebugEnabled())\n                        log.debug(\"Before waiting for exchange futures [futs\" +\n                            F.view(exchFuts.values(), F.unfinishedFutures()) + \", worker=\" + this + ']');\n\n                    // Take next exchange future.\n                    exchFut = poll(futQ, timeout, this);\n\n                    if (exchFut == null)\n                        continue; // Main while loop.\n\n                    busy = true;\n\n                    Map<Integer, GridDhtPreloaderAssignments> assignsMap = null;\n\n                    boolean dummyReassign = exchFut.dummyReassign();\n                    boolean forcePreload = exchFut.forcePreload();\n\n                    try {\n                        if (isCancelled())\n                            break;\n\n                        if (!exchFut.dummy() && !exchFut.forcePreload()) {\n                            lastInitializedFut = exchFut;\n\n                            exchFut.init();\n\n                            exchFut.get();\n\n                            if (log.isDebugEnabled())\n                                log.debug(\"After waiting for exchange future [exchFut=\" + exchFut + \", worker=\" +\n                                    this + ']');\n\n                            if (exchFut.exchangeId().nodeId().equals(cctx.localNodeId()))\n                                lastRefresh.compareAndSet(-1, U.currentTimeMillis());\n\n                            boolean changed = false;\n\n                            // Just pick first worker to do this, so we don't\n                            // invoke topology callback more than once for the\n                            // same event.\n                            for (GridCacheContext cacheCtx : cctx.cacheContexts()) {\n                                if (cacheCtx.isLocal())\n                                    continue;\n\n                                changed |= cacheCtx.topology().afterExchange(exchFut);\n\n                                // Preload event notification.\n                                if (!exchFut.skipPreload() && cacheCtx.events().isRecordable(EVT_CACHE_REBALANCE_STARTED)) {\n                                    if (!cacheCtx.isReplicated() || !startEvtFired) {\n                                        DiscoveryEvent discoEvt = exchFut.discoveryEvent();\n\n                                        cacheCtx.events().addPreloadEvent(-1, EVT_CACHE_REBALANCE_STARTED,\n                                            discoEvt.eventNode(), discoEvt.type(), discoEvt.timestamp());\n                                    }\n                                }\n                            }\n\n                            startEvtFired = true;\n\n                            if (!cctx.kernalContext().clientNode() && changed && futQ.isEmpty())\n                                refreshPartitions();\n                        }\n                        else {\n                            if (log.isDebugEnabled())\n                                log.debug(\"Got dummy exchange (will reassign)\");\n\n                            if (!dummyReassign) {\n                                timeout = 0; // Force refresh.\n\n                                continue;\n                            }\n                        }\n\n                        if (!exchFut.skipPreload()) {\n                            assignsMap = new HashMap<>();\n\n                            for (GridCacheContext cacheCtx : cctx.cacheContexts()) {\n                                long delay = cacheCtx.config().getRebalanceDelay();\n\n                                GridDhtPreloaderAssignments assigns = null;\n\n                                // Don't delay for dummy reassigns to avoid infinite recursion.\n                                if (delay == 0 || forcePreload)\n                                    assigns = cacheCtx.preloader().assign(exchFut);\n\n                                assignsMap.put(cacheCtx.cacheId(), assigns);\n                            }\n                        }\n                    }\n                    finally {\n                        // Must flip busy flag before assignments are given to demand workers.\n                        busy = false;\n                    }\n\n                    if (assignsMap != null) {\n                        int size = assignsMap.size();\n\n                        rebalanceQ.clear();\n\n                        NavigableMap<Integer, List<Integer>> orderMap = new TreeMap<>();\n\n                        for (Map.Entry<Integer, GridDhtPreloaderAssignments> e : assignsMap.entrySet()) {\n                            int cacheId = e.getKey();\n\n                            GridCacheContext<K, V> cacheCtx = cctx.cacheContext(cacheId);\n\n                            int order = cacheCtx.config().getRebalanceOrder();\n\n                            if (orderMap.get(order) == null)\n                                orderMap.put(order, new ArrayList<Integer>(size));\n\n                            orderMap.get(order).add(cacheId);\n                        }\n\n                        Callable<Boolean> marshR = null;\n                        List<Callable<Boolean>> orderedRs = new ArrayList<>(size);\n\n                        //Ordered rebalance scheduling.\n                        for (Integer order : orderMap.keySet()) {\n                            for (Integer cacheId : orderMap.get(order)) {\n                                GridCacheContext<K, V> cacheCtx = cctx.cacheContext(cacheId);\n\n                                List<String> waitList = new ArrayList<>(size - 1);\n\n                                for (List<Integer> cIds : orderMap.headMap(order).values()) {\n                                    for (Integer cId : cIds) {\n                                        waitList.add(cctx.cacheContext(cId).name());\n                                    }\n                                }\n\n                                Callable<Boolean> r = cacheCtx.preloader().addAssignments(\n                                    assignsMap.get(cacheId), forcePreload, waitList, cnt);\n\n                                if (r != null) {\n                                    U.log(log, \"Cache rebalancing scheduled: [cache=\" + cacheCtx.name() +\n                                        \", waitList=\" + waitList.toString() + \"]\");\n\n                                    if (cacheId == CU.cacheId(GridCacheUtils.MARSH_CACHE_NAME))\n                                        marshR = r;\n                                    else\n                                        orderedRs.add(r);\n                                }\n                            }\n                        }\n\n                        if (asyncStartFut != null)\n                            asyncStartFut.get(); // Wait for thread stop.\n\n                        rebalanceQ.addAll(orderedRs);\n\n                        if (marshR != null || !rebalanceQ.isEmpty()) {\n                            if (futQ.isEmpty()) {\n                                U.log(log, \"Starting caches rebalancing [top=\" + exchFut.topologyVersion() + \"]\");\n\n                                if (marshR != null)\n                                    try {\n                                        marshR.call(); //Marshaller cache rebalancing launches in sync way.\n                                    }\n                                    catch (Exception ex) {\n                                        if (log.isDebugEnabled())\n                                            log.debug(\"Failed to send initial demand request to node\");\n\n                                        continue;\n                                    }\n\n                                final GridFutureAdapter fut = new GridFutureAdapter();\n\n                                asyncStartFut = fut;\n\n                                cctx.kernalContext().closure().callLocalSafe(new GPC<Boolean>() {\n                                    @Override public Boolean call() {\n                                        try {\n                                            while (true) {\n                                                Callable<Boolean> r = rebalanceQ.poll();\n\n                                                if (r == null)\n                                                    return false;\n\n                                                if (!r.call())\n                                                    return false;\n                                            }\n                                        }\n                                        catch (Exception ex) {\n                                            if (log.isDebugEnabled())\n                                                log.debug(\"Failed to send initial demand request to node\");\n\n                                            return false;\n                                        }\n                                        finally {\n                                            fut.onDone();\n                                        }\n                                    }\n                                }, /*system pool*/ true);\n                            }\n                            else {\n                                U.log(log, \"Obsolete exchange, skipping rebalancing [top=\" + exchFut.topologyVersion() + \"]\");\n                            }\n                        }\n                        else {\n                            U.log(log, \"Nothing scheduled, skipping rebalancing [top=\" + exchFut.topologyVersion() + \"]\");\n                        }\n                    }\n                }\n                catch (IgniteInterruptedCheckedException e) {\n                    throw e;\n                }\n                catch (IgniteClientDisconnectedCheckedException e) {\n                    return;\n                }\n                catch (IgniteCheckedException e) {\n                    U.error(log, \"Failed to wait for completion of partition map exchange \" +\n                        \"(preloading will not start): \" + exchFut, e);\n                }\n            }\n        }","id":16746,"modified_method":"/** {@inheritDoc} */\n        @Override protected void body() throws InterruptedException, IgniteInterruptedCheckedException {\n            long timeout = cctx.gridConfig().getNetworkTimeout();\n\n            boolean startEvtFired = false;\n\n            int cnt = 0;\n\n            IgniteInternalFuture asyncStartFut = null;\n\n            while (!isCancelled()) {\n                GridDhtPartitionsExchangeFuture exchFut = null;\n\n                cnt++;\n\n                try {\n                    boolean preloadFinished = true;\n\n                    for (GridCacheContext cacheCtx : cctx.cacheContexts()) {\n                        preloadFinished &= cacheCtx.preloader().syncFuture().isDone();\n\n                        if (!preloadFinished)\n                            break;\n                    }\n\n                    // If not first preloading and no more topology events present,\n                    // then we periodically refresh partition map.\n                    if (!cctx.kernalContext().clientNode() && futQ.isEmpty() && preloadFinished) {\n                        refreshPartitions(timeout);\n\n                        timeout = cctx.gridConfig().getNetworkTimeout();\n                    }\n\n                    // After workers line up and before preloading starts we initialize all futures.\n                    if (log.isDebugEnabled())\n                        log.debug(\"Before waiting for exchange futures [futs\" +\n                            F.view(exchFuts.values(), F.unfinishedFutures()) + \", worker=\" + this + ']');\n\n                    // Take next exchange future.\n                    exchFut = poll(futQ, timeout, this);\n\n                    if (exchFut == null)\n                        continue; // Main while loop.\n\n                    busy = true;\n\n                    Map<Integer, GridDhtPreloaderAssignments> assignsMap = null;\n\n                    boolean dummyReassign = exchFut.dummyReassign();\n                    boolean forcePreload = exchFut.forcePreload();\n\n                    try {\n                        if (isCancelled())\n                            break;\n\n                        if (!exchFut.dummy() && !exchFut.forcePreload()) {\n                            lastInitializedFut = exchFut;\n\n                            exchFut.init();\n\n                            exchFut.get();\n\n                            if (log.isDebugEnabled())\n                                log.debug(\"After waiting for exchange future [exchFut=\" + exchFut + \", worker=\" +\n                                    this + ']');\n\n                            if (exchFut.exchangeId().nodeId().equals(cctx.localNodeId()))\n                                lastRefresh.compareAndSet(-1, U.currentTimeMillis());\n\n                            boolean changed = false;\n\n                            // Just pick first worker to do this, so we don't\n                            // invoke topology callback more than once for the\n                            // same event.\n                            for (GridCacheContext cacheCtx : cctx.cacheContexts()) {\n                                if (cacheCtx.isLocal())\n                                    continue;\n\n                                changed |= cacheCtx.topology().afterExchange(exchFut);\n\n                                // Preload event notification.\n                                if (!exchFut.skipPreload() && cacheCtx.events().isRecordable(EVT_CACHE_REBALANCE_STARTED)) {\n                                    if (!cacheCtx.isReplicated() || !startEvtFired) {\n                                        DiscoveryEvent discoEvt = exchFut.discoveryEvent();\n\n                                        cacheCtx.events().addPreloadEvent(-1, EVT_CACHE_REBALANCE_STARTED,\n                                            discoEvt.eventNode(), discoEvt.type(), discoEvt.timestamp());\n                                    }\n                                }\n                            }\n\n                            startEvtFired = true;\n\n                            if (!cctx.kernalContext().clientNode() && changed && futQ.isEmpty())\n                                refreshPartitions();\n                        }\n                        else {\n                            if (log.isDebugEnabled())\n                                log.debug(\"Got dummy exchange (will reassign)\");\n\n                            if (!dummyReassign) {\n                                timeout = 0; // Force refresh.\n\n                                continue;\n                            }\n                        }\n\n                        if (!exchFut.skipPreload()) {\n                            assignsMap = new HashMap<>();\n\n                            for (GridCacheContext cacheCtx : cctx.cacheContexts()) {\n                                long delay = cacheCtx.config().getRebalanceDelay();\n\n                                GridDhtPreloaderAssignments assigns = null;\n\n                                // Don't delay for dummy reassigns to avoid infinite recursion.\n                                if (delay == 0 || forcePreload)\n                                    assigns = cacheCtx.preloader().assign(exchFut);\n\n                                assignsMap.put(cacheCtx.cacheId(), assigns);\n                            }\n                        }\n                    }\n                    finally {\n                        // Must flip busy flag before assignments are given to demand workers.\n                        busy = false;\n                    }\n\n                    if (assignsMap != null) {\n                        int size = assignsMap.size();\n\n                        rebalanceQ.clear();\n\n                        NavigableMap<Integer, List<Integer>> orderMap = new TreeMap<>();\n\n                        for (Map.Entry<Integer, GridDhtPreloaderAssignments> e : assignsMap.entrySet()) {\n                            int cacheId = e.getKey();\n\n                            GridCacheContext<K, V> cacheCtx = cctx.cacheContext(cacheId);\n\n                            int order = cacheCtx.config().getRebalanceOrder();\n\n                            if (orderMap.get(order) == null)\n                                orderMap.put(order, new ArrayList<Integer>(size));\n\n                            orderMap.get(order).add(cacheId);\n                        }\n\n                        Callable<Boolean> marshR = null;\n                        List<Callable<Boolean>> orderedRs = new ArrayList<>(size);\n\n                        //Ordered rebalance scheduling.\n                        for (Integer order : orderMap.keySet()) {\n                            for (Integer cacheId : orderMap.get(order)) {\n                                GridCacheContext<K, V> cacheCtx = cctx.cacheContext(cacheId);\n\n                                List<String> waitList = new ArrayList<>(size - 1);\n\n                                for (List<Integer> cIds : orderMap.headMap(order).values()) {\n                                    for (Integer cId : cIds) {\n                                        waitList.add(cctx.cacheContext(cId).name());\n                                    }\n                                }\n\n                                Callable<Boolean> r = cacheCtx.preloader().addAssignments(\n                                    assignsMap.get(cacheId), forcePreload, waitList, cnt);\n\n                                if (r != null) {\n                                    U.log(log, \"Cache rebalancing scheduled: [cache=\" + cacheCtx.name() +\n                                        \", waitList=\" + waitList.toString() + \"]\");\n\n                                    if (cacheId == CU.cacheId(GridCacheUtils.MARSH_CACHE_NAME))\n                                        marshR = r;\n                                    else\n                                        orderedRs.add(r);\n                                }\n                            }\n                        }\n\n                        if (asyncStartFut != null)\n                            asyncStartFut.get(); // Wait for thread stop.\n\n                        rebalanceQ.addAll(orderedRs);\n\n                        if (marshR != null || !rebalanceQ.isEmpty()) {\n                            if (futQ.isEmpty()) {\n                                U.log(log, \"Rebalancing required\" +\n                                    \"[top=\" + exchFut.topologyVersion() + \", evt=\" + exchFut.discoveryEvent().name() +\n                                    \", node=\" + exchFut.discoveryEvent().node().id() + ']');\n\n                                if (marshR != null)\n                                    try {\n                                        marshR.call(); //Marshaller cache rebalancing launches in sync way.\n                                    }\n                                    catch (Exception ex) {\n                                        if (log.isDebugEnabled())\n                                            log.debug(\"Failed to send initial demand request to node\");\n\n                                        continue;\n                                    }\n\n                                final GridFutureAdapter fut = new GridFutureAdapter();\n\n                                asyncStartFut = fut;\n\n                                cctx.kernalContext().closure().callLocalSafe(new GPC<Boolean>() {\n                                    @Override public Boolean call() {\n                                        try {\n                                            while (true) {\n                                                Callable<Boolean> r = rebalanceQ.poll();\n\n                                                if (r == null)\n                                                    return false;\n\n                                                if (!r.call())\n                                                    return false;\n                                            }\n                                        }\n                                        catch (Exception ex) {\n                                            if (log.isDebugEnabled())\n                                                log.debug(\"Failed to send initial demand request to node\");\n\n                                            return false;\n                                        }\n                                        finally {\n                                            fut.onDone();\n                                        }\n                                    }\n                                }, /*system pool*/ true);\n                            }\n                            else\n                                U.log(log, \"Skipping rebalancing (obsolete exchange ID) \" +\n                                    \"[top=\" + exchFut.topologyVersion() + \", evt=\" + exchFut.discoveryEvent().name() +\n                                    \", node=\" + exchFut.discoveryEvent().node().id() + ']');\n                        }\n                        else\n                            U.log(log, \"Skipping rebalancing (nothing scheduled) \" +\n                                \"[top=\" + exchFut.topologyVersion() + \", evt=\" + exchFut.discoveryEvent().name() +\n                                \", node=\" + exchFut.discoveryEvent().node().id() + ']');\n                    }\n                }\n                catch (IgniteInterruptedCheckedException e) {\n                    throw e;\n                }\n                catch (IgniteClientDisconnectedCheckedException e) {\n                    return;\n                }\n                catch (IgniteCheckedException e) {\n                    U.error(log, \"Failed to wait for completion of partition map exchange \" +\n                        \"(preloading will not start): \" + exchFut, e);\n                }\n            }\n        }","commit_id":"67f88584a4ab330bbda956b3d0d830468d28920f","url":"https://github.com/apache/ignite"},{"original_method":"/**\n     * Stop.\n     */\n    void stop() {\n        try {\n            rebalanceFut.cancel();\n        }\n        catch (Exception ex) {\n            rebalanceFut.onDone(false);\n        }\n\n        lastExchangeFut = null;\n\n        lastTimeoutObj.set(null);\n    }","id":16747,"modified_method":"/**\n     * Stop.\n     */\n    void stop() {\n        try {\n            rebalanceFut.cancel();\n        }\n        catch (Exception ex) {\n            rebalanceFut.onDone(false);\n        }\n\n        DemandWorker dw = worker;\n\n        if (dw != null)\n            dw.cancel();\n\n        lastExchangeFut = null;\n\n        lastTimeoutObj.set(null);\n    }","commit_id":"67f88584a4ab330bbda956b3d0d830468d28920f","url":"https://github.com/apache/ignite"},{"original_method":"/**\n         * @param node Node to demand from.\n         * @param topVer Topology version.\n         * @param d Demand message.\n         * @param exchFut Exchange future.\n         * @throws InterruptedException If interrupted.\n         * @throws ClusterTopologyCheckedException If node left.\n         * @throws IgniteCheckedException If failed to send message.\n         */\n        private void demandFromNode(\n            ClusterNode node,\n            final AffinityTopologyVersion topVer,\n            GridDhtPartitionDemandMessage d,\n            GridDhtPartitionsExchangeFuture exchFut\n        ) throws InterruptedException, IgniteCheckedException {\n            GridDhtPartitionTopology top = cctx.dht().topology();\n\n            cntr++;\n\n            d.topic(topic(cntr));\n            d.workerId(id);\n\n            if (topologyChanged(fut))\n                return;\n\n            cctx.io().addOrderedHandler(d.topic(), new CI2<UUID, GridDhtPartitionSupplyMessage>() {\n                @Override public void apply(UUID nodeId, GridDhtPartitionSupplyMessage msg) {\n                    addMessage(new SupplyMessage(nodeId, msg));\n                }\n            });\n\n            try {\n                boolean retry;\n\n                // DoWhile.\n                // =======\n                do {\n                    retry = false;\n\n                    // Create copy.\n                    d = new GridDhtPartitionDemandMessage(d, fut.remaining.get(node.id()).get2());\n\n                    long timeout = cctx.config().getRebalanceTimeout();\n\n                    d.timeout(timeout);\n\n                    if (log.isDebugEnabled())\n                        log.debug(\"Sending demand message [node=\" + node.id() + \", demand=\" + d + ']');\n\n                    // Send demand message.\n                    cctx.io().send(node, d, cctx.ioPolicy());\n\n                    // While.\n                    // =====\n                    while (!fut.isDone() && !topologyChanged(fut)) {\n                        SupplyMessage s = poll(msgQ, timeout);\n\n                        // If timed out.\n                        if (s == null) {\n                            if (msgQ.isEmpty()) { // Safety check.\n                                U.warn(log, \"Timed out waiting for partitions to load, will retry in \" + timeout +\n                                    \" ms (you may need to increase 'networkTimeout' or 'rebalanceBatchSize'\" +\n                                    \" configuration properties).\");\n\n                                // Ordered listener was removed if timeout expired.\n                                cctx.io().removeOrderedHandler(d.topic());\n\n                                // Must create copy to be able to work with IO manager thread local caches.\n                                d = new GridDhtPartitionDemandMessage(d, fut.remaining.get(node.id()).get2());\n\n                                // Create new topic.\n                                d.topic(topic(++cntr));\n\n                                // Create new ordered listener.\n                                cctx.io().addOrderedHandler(d.topic(),\n                                    new CI2<UUID, GridDhtPartitionSupplyMessage>() {\n                                        @Override public void apply(UUID nodeId,\n                                            GridDhtPartitionSupplyMessage msg) {\n                                            addMessage(new SupplyMessage(nodeId, msg));\n                                        }\n                                    });\n\n                                // Resend message with larger timeout.\n                                retry = true;\n\n                                break; // While.\n                            }\n                            else\n                                continue; // While.\n                        }\n\n                        // Check that message was received from expected node.\n                        if (!s.senderId().equals(node.id())) {\n                            U.warn(log, \"Received supply message from unexpected node [expectedId=\" + node.id() +\n                                \", rcvdId=\" + s.senderId() + \", msg=\" + s + ']');\n\n                            continue; // While.\n                        }\n\n                        if (log.isDebugEnabled())\n                            log.debug(\"Received supply message: \" + s);\n\n                        GridDhtPartitionSupplyMessage supply = s.supply();\n\n                        // Check whether there were class loading errors on unmarshal\n                        if (supply.classError() != null) {\n                            if (log.isDebugEnabled())\n                                log.debug(\"Class got undeployed during preloading: \" + supply.classError());\n\n                            retry = true;\n\n                            // Quit preloading.\n                            break;\n                        }\n\n                        // Preload.\n                        for (Map.Entry<Integer, CacheEntryInfoCollection> e : supply.infos().entrySet()) {\n                            int p = e.getKey();\n\n                            if (cctx.affinity().localNode(p, topVer)) {\n                                GridDhtLocalPartition part = top.localPartition(p, topVer, true);\n\n                                assert part != null;\n\n                                if (part.state() == MOVING) {\n                                    boolean reserved = part.reserve();\n\n                                    assert reserved : \"Failed to reserve partition [gridName=\" +\n                                        cctx.gridName() + \", cacheName=\" + cctx.namex() + \", part=\" + part + ']';\n\n                                    part.lock();\n\n                                    try {\n                                        Collection<Integer> invalidParts = new GridLeanSet<>();\n\n                                        // Loop through all received entries and try to preload them.\n                                        for (GridCacheEntryInfo entry : e.getValue().infos()) {\n                                            if (!invalidParts.contains(p)) {\n                                                if (!part.preloadingPermitted(entry.key(), entry.version())) {\n                                                    if (log.isDebugEnabled())\n                                                        log.debug(\"Preloading is not permitted for entry due to \" +\n                                                            \"evictions [key=\" + entry.key() +\n                                                            \", ver=\" + entry.version() + ']');\n\n                                                    continue;\n                                                }\n\n                                                if (!preloadEntry(node, p, entry, topVer)) {\n                                                    invalidParts.add(p);\n\n                                                    if (log.isDebugEnabled())\n                                                        log.debug(\"Got entries for invalid partition during \" +\n                                                            \"preloading (will skip) [p=\" + p + \", entry=\" + entry + ']');\n                                                }\n                                            }\n                                        }\n\n                                        boolean last = supply.last().contains(p);\n\n                                        // If message was last for this partition,\n                                        // then we take ownership.\n                                        if (last) {\n                                            fut.partitionDone(node.id(), p);\n\n                                            top.own(part);\n\n                                            if (log.isDebugEnabled())\n                                                log.debug(\"Finished rebalancing partition: \" + part);\n\n                                            if (cctx.events().isRecordable(EVT_CACHE_REBALANCE_PART_LOADED))\n                                                preloadEvent(p, EVT_CACHE_REBALANCE_PART_LOADED,\n                                                    exchFut.discoveryEvent());\n                                        }\n                                    }\n                                    finally {\n                                        part.unlock();\n                                        part.release();\n                                    }\n                                }\n                                else {\n                                    fut.partitionDone(node.id(), p);\n\n                                    if (log.isDebugEnabled())\n                                        log.debug(\"Skipping rebalancing partition (state is not MOVING): \" + part);\n                                }\n                            }\n                            else {\n                                fut.partitionDone(node.id(), p);\n\n                                if (log.isDebugEnabled())\n                                    log.debug(\"Skipping rebalancing partition (it does not belong on current node): \" + p);\n                            }\n                        }\n\n                        // Only request partitions based on latest topology version.\n                        for (Integer miss : s.supply().missed()) {\n                            if (cctx.affinity().localNode(miss, topVer))\n                                fut.partitionMissed(node.id(), miss);\n                        }\n\n                        for (Integer miss : s.supply().missed())\n                            fut.partitionDone(node.id(), miss);\n\n                        if (fut.remaining.get(node.id()) == null)\n                            break; // While.\n\n                        if (s.supply().ack()) {\n                            retry = true;\n\n                            break;\n                        }\n                    }\n                }\n                while (retry && !fut.isDone() && !topologyChanged(fut));\n            }\n            finally {\n                cctx.io().removeOrderedHandler(d.topic());\n            }\n        }","id":16748,"modified_method":"/**\n         * @param node Node to demand from.\n         * @param topVer Topology version.\n         * @param d Demand message.\n         * @param exchFut Exchange future.\n         * @throws InterruptedException If interrupted.\n         * @throws ClusterTopologyCheckedException If node left.\n         * @throws IgniteCheckedException If failed to send message.\n         */\n        private void demandFromNode(\n            ClusterNode node,\n            final AffinityTopologyVersion topVer,\n            GridDhtPartitionDemandMessage d,\n            GridDhtPartitionsExchangeFuture exchFut\n        ) throws InterruptedException, IgniteCheckedException {\n            GridDhtPartitionTopology top = cctx.dht().topology();\n\n            cntr++;\n\n            d.topic(topic(cntr));\n            d.workerId(id);\n\n            if (fut.isDone() || topologyChanged(fut))\n                return;\n\n            cctx.io().addOrderedHandler(d.topic(), new CI2<UUID, GridDhtPartitionSupplyMessage>() {\n                @Override public void apply(UUID nodeId, GridDhtPartitionSupplyMessage msg) {\n                    addMessage(new SupplyMessage(nodeId, msg));\n                }\n            });\n\n            try {\n                boolean retry;\n\n                // DoWhile.\n                // =======\n                do {\n                    retry = false;\n\n                    // Create copy.\n                    d = new GridDhtPartitionDemandMessage(d, fut.remaining.get(node.id()).get2());\n\n                    long timeout = cctx.config().getRebalanceTimeout();\n\n                    d.timeout(timeout);\n\n                    if (log.isDebugEnabled())\n                        log.debug(\"Sending demand message [node=\" + node.id() + \", demand=\" + d + ']');\n\n                    // Send demand message.\n                    cctx.io().send(node, d, cctx.ioPolicy());\n\n                    // While.\n                    // =====\n                    while (!fut.isDone() && !topologyChanged(fut)) {\n                        SupplyMessage s = poll(msgQ, timeout);\n\n                        // If timed out.\n                        if (s == null) {\n                            if (msgQ.isEmpty()) { // Safety check.\n                                U.warn(log, \"Timed out waiting for partitions to load, will retry in \" + timeout +\n                                    \" ms (you may need to increase 'networkTimeout' or 'rebalanceBatchSize'\" +\n                                    \" configuration properties).\");\n\n                                // Ordered listener was removed if timeout expired.\n                                cctx.io().removeOrderedHandler(d.topic());\n\n                                // Must create copy to be able to work with IO manager thread local caches.\n                                d = new GridDhtPartitionDemandMessage(d, fut.remaining.get(node.id()).get2());\n\n                                // Create new topic.\n                                d.topic(topic(++cntr));\n\n                                // Create new ordered listener.\n                                cctx.io().addOrderedHandler(d.topic(),\n                                    new CI2<UUID, GridDhtPartitionSupplyMessage>() {\n                                        @Override public void apply(UUID nodeId,\n                                            GridDhtPartitionSupplyMessage msg) {\n                                            addMessage(new SupplyMessage(nodeId, msg));\n                                        }\n                                    });\n\n                                // Resend message with larger timeout.\n                                retry = true;\n\n                                break; // While.\n                            }\n                            else\n                                continue; // While.\n                        }\n\n                        if (s.senderId() == null)\n                            return; // Stopping now.\n\n                        // Check that message was received from expected node.\n                        if (!s.senderId().equals(node.id())) {\n                            U.warn(log, \"Received supply message from unexpected node [expectedId=\" + node.id() +\n                                \", rcvdId=\" + s.senderId() + \", msg=\" + s + ']');\n\n                            continue; // While.\n                        }\n\n                        if (log.isDebugEnabled())\n                            log.debug(\"Received supply message: \" + s);\n\n                        GridDhtPartitionSupplyMessage supply = s.supply();\n\n                        // Check whether there were class loading errors on unmarshal\n                        if (supply.classError() != null) {\n                            if (log.isDebugEnabled())\n                                log.debug(\"Class got undeployed during preloading: \" + supply.classError());\n\n                            retry = true;\n\n                            // Quit preloading.\n                            break;\n                        }\n\n                        // Preload.\n                        for (Map.Entry<Integer, CacheEntryInfoCollection> e : supply.infos().entrySet()) {\n                            int p = e.getKey();\n\n                            if (cctx.affinity().localNode(p, topVer)) {\n                                GridDhtLocalPartition part = top.localPartition(p, topVer, true);\n\n                                assert part != null;\n\n                                if (part.state() == MOVING) {\n                                    boolean reserved = part.reserve();\n\n                                    assert reserved : \"Failed to reserve partition [gridName=\" +\n                                        cctx.gridName() + \", cacheName=\" + cctx.namex() + \", part=\" + part + ']';\n\n                                    part.lock();\n\n                                    try {\n                                        Collection<Integer> invalidParts = new GridLeanSet<>();\n\n                                        // Loop through all received entries and try to preload them.\n                                        for (GridCacheEntryInfo entry : e.getValue().infos()) {\n                                            if (!invalidParts.contains(p)) {\n                                                if (!part.preloadingPermitted(entry.key(), entry.version())) {\n                                                    if (log.isDebugEnabled())\n                                                        log.debug(\"Preloading is not permitted for entry due to \" +\n                                                            \"evictions [key=\" + entry.key() +\n                                                            \", ver=\" + entry.version() + ']');\n\n                                                    continue;\n                                                }\n\n                                                if (!preloadEntry(node, p, entry, topVer)) {\n                                                    invalidParts.add(p);\n\n                                                    if (log.isDebugEnabled())\n                                                        log.debug(\"Got entries for invalid partition during \" +\n                                                            \"preloading (will skip) [p=\" + p + \", entry=\" + entry + ']');\n                                                }\n                                            }\n                                        }\n\n                                        boolean last = supply.last().contains(p);\n\n                                        // If message was last for this partition,\n                                        // then we take ownership.\n                                        if (last) {\n                                            fut.partitionDone(node.id(), p);\n\n                                            top.own(part);\n\n                                            if (log.isDebugEnabled())\n                                                log.debug(\"Finished rebalancing partition: \" + part);\n\n                                            if (cctx.events().isRecordable(EVT_CACHE_REBALANCE_PART_LOADED))\n                                                preloadEvent(p, EVT_CACHE_REBALANCE_PART_LOADED,\n                                                    exchFut.discoveryEvent());\n                                        }\n                                    }\n                                    finally {\n                                        part.unlock();\n                                        part.release();\n                                    }\n                                }\n                                else {\n                                    fut.partitionDone(node.id(), p);\n\n                                    if (log.isDebugEnabled())\n                                        log.debug(\"Skipping rebalancing partition (state is not MOVING): \" + part);\n                                }\n                            }\n                            else {\n                                fut.partitionDone(node.id(), p);\n\n                                if (log.isDebugEnabled())\n                                    log.debug(\"Skipping rebalancing partition (it does not belong on current node): \" + p);\n                            }\n                        }\n\n                        // Only request partitions based on latest topology version.\n                        for (Integer miss : s.supply().missed()) {\n                            if (cctx.affinity().localNode(miss, topVer))\n                                fut.partitionMissed(node.id(), miss);\n                        }\n\n                        for (Integer miss : s.supply().missed())\n                            fut.partitionDone(node.id(), miss);\n\n                        if (fut.remaining.get(node.id()) == null)\n                            break; // While.\n\n                        if (s.supply().ack()) {\n                            retry = true;\n\n                            break;\n                        }\n                    }\n                }\n                while (retry && !fut.isDone() && !topologyChanged(fut));\n            }\n            finally {\n                cctx.io().removeOrderedHandler(d.topic());\n            }\n        }","commit_id":"67f88584a4ab330bbda956b3d0d830468d28920f","url":"https://github.com/apache/ignite"},{"original_method":"/**\n     * @param fut Future.\n     */\n    private boolean requestPartitions(\n        RebalanceFuture fut,\n        GridDhtPreloaderAssignments assigns\n    ) throws IgniteCheckedException {\n        for (Map.Entry<ClusterNode, GridDhtPartitionDemandMessage> e : assigns.entrySet()) {\n            if (topologyChanged(fut))\n                return false;\n\n            final ClusterNode node = e.getKey();\n\n            GridDhtPartitionDemandMessage d = e.getValue();\n\n            fut.appendPartitions(node.id(), d.partitions());//Future preparation.\n        }\n\n        for (Map.Entry<ClusterNode, GridDhtPartitionDemandMessage> e : assigns.entrySet()) {\n            final ClusterNode node = e.getKey();\n\n            final CacheConfiguration cfg = cctx.config();\n\n            final Collection<Integer> parts = fut.remaining.get(node.id()).get2();\n\n            GridDhtPartitionDemandMessage d = e.getValue();\n\n            //Check remote node rebalancing API version.\n            if (node.version().compareTo(GridDhtPreloader.REBALANCING_VER_2_SINCE) >= 0) {\n                U.log(log, \"Starting rebalancing [cache=\" + cctx.name() + \", mode=\" + cfg.getRebalanceMode() +\n                    \", fromNode=\" + node.id() + \", partitionsCount=\" + parts.size() +\n                    \", topology=\" + fut.topologyVersion() + \", updateSeq=\" + fut.updateSeq + \"]\");\n\n                int lsnrCnt = cctx.gridConfig().getRebalanceThreadPoolSize();\n\n                List<Set<Integer>> sParts = new ArrayList<>(lsnrCnt);\n\n                for (int cnt = 0; cnt < lsnrCnt; cnt++)\n                    sParts.add(new HashSet<Integer>());\n\n                Iterator<Integer> it = parts.iterator();\n\n                int cnt = 0;\n\n                while (it.hasNext())\n                    sParts.get(cnt++ % lsnrCnt).add(it.next());\n\n                for (cnt = 0; cnt < lsnrCnt; cnt++) {\n                    if (!sParts.get(cnt).isEmpty()) {\n\n                        // Create copy.\n                        GridDhtPartitionDemandMessage initD = new GridDhtPartitionDemandMessage(d, sParts.get(cnt));\n\n                        initD.topic(rebalanceTopics.get(cnt));\n                        initD.updateSequence(fut.updateSeq);\n                        initD.timeout(cctx.config().getRebalanceTimeout());\n\n                        synchronized (fut) {\n                            if (!fut.isDone())// Future can be already cancelled at this moment and all failovers happened.\n                                // New requests will not be covered by failovers.\n                                cctx.io().sendOrderedMessage(node,\n                                    rebalanceTopics.get(cnt), initD, cctx.ioPolicy(), initD.timeout());\n                        }\n\n                        if (log.isDebugEnabled())\n                            log.debug(\"Requested rebalancing [from node=\" + node.id() + \", listener index=\" +\n                                cnt + \", partitions count=\" + sParts.get(cnt).size() +\n                                \" (\" + partitionsList(sParts.get(cnt)) + \")]\");\n                    }\n                }\n            }\n            else {\n                U.log(log, \"Starting rebalancing (old api) [cache=\" + cctx.name() + \", mode=\" + cfg.getRebalanceMode() +\n                    \", fromNode=\" + node.id() + \", partitionsCount=\" + parts.size() +\n                    \", topology=\" + fut.topologyVersion() + \", updateSeq=\" + fut.updateSeq + \"]\");\n\n                d.timeout(cctx.config().getRebalanceTimeout());\n                d.workerId(0);//old api support.\n\n                DemandWorker dw = new DemandWorker(dmIdx.incrementAndGet(), fut);\n\n                dw.run(node, d);\n            }\n        }\n\n        return true;\n    }","id":16749,"modified_method":"/**\n     * @param fut Future.\n     */\n    private boolean requestPartitions(\n        RebalanceFuture fut,\n        GridDhtPreloaderAssignments assigns\n    ) throws IgniteCheckedException {\n        for (Map.Entry<ClusterNode, GridDhtPartitionDemandMessage> e : assigns.entrySet()) {\n            if (topologyChanged(fut))\n                return false;\n\n            final ClusterNode node = e.getKey();\n\n            GridDhtPartitionDemandMessage d = e.getValue();\n\n            fut.appendPartitions(node.id(), d.partitions());//Future preparation.\n        }\n\n        for (Map.Entry<ClusterNode, GridDhtPartitionDemandMessage> e : assigns.entrySet()) {\n            final ClusterNode node = e.getKey();\n\n            final CacheConfiguration cfg = cctx.config();\n\n            final Collection<Integer> parts = fut.remaining.get(node.id()).get2();\n\n            GridDhtPartitionDemandMessage d = e.getValue();\n\n            //Check remote node rebalancing API version.\n            if (node.version().compareTo(GridDhtPreloader.REBALANCING_VER_2_SINCE) >= 0) {\n                U.log(log, \"Starting rebalancing [cache=\" + cctx.name() + \", mode=\" + cfg.getRebalanceMode() +\n                    \", fromNode=\" + node.id() + \", partitionsCount=\" + parts.size() +\n                    \", topology=\" + fut.topologyVersion() + \", updateSeq=\" + fut.updateSeq + \"]\");\n\n                int lsnrCnt = cctx.gridConfig().getRebalanceThreadPoolSize();\n\n                List<Set<Integer>> sParts = new ArrayList<>(lsnrCnt);\n\n                for (int cnt = 0; cnt < lsnrCnt; cnt++)\n                    sParts.add(new HashSet<Integer>());\n\n                Iterator<Integer> it = parts.iterator();\n\n                int cnt = 0;\n\n                while (it.hasNext())\n                    sParts.get(cnt++ % lsnrCnt).add(it.next());\n\n                for (cnt = 0; cnt < lsnrCnt; cnt++) {\n                    if (!sParts.get(cnt).isEmpty()) {\n\n                        // Create copy.\n                        GridDhtPartitionDemandMessage initD = new GridDhtPartitionDemandMessage(d, sParts.get(cnt));\n\n                        initD.topic(rebalanceTopics.get(cnt));\n                        initD.updateSequence(fut.updateSeq);\n                        initD.timeout(cctx.config().getRebalanceTimeout());\n\n                        synchronized (fut) {\n                            if (!fut.isDone())// Future can be already cancelled at this moment and all failovers happened.\n                                // New requests will not be covered by failovers.\n                                cctx.io().sendOrderedMessage(node,\n                                    rebalanceTopics.get(cnt), initD, cctx.ioPolicy(), initD.timeout());\n                        }\n\n                        if (log.isDebugEnabled())\n                            log.debug(\"Requested rebalancing [from node=\" + node.id() + \", listener index=\" +\n                                cnt + \", partitions count=\" + sParts.get(cnt).size() +\n                                \" (\" + partitionsList(sParts.get(cnt)) + \")]\");\n                    }\n                }\n            }\n            else {\n                U.log(log, \"Starting rebalancing (old api) [cache=\" + cctx.name() + \", mode=\" + cfg.getRebalanceMode() +\n                    \", fromNode=\" + node.id() + \", partitionsCount=\" + parts.size() +\n                    \", topology=\" + fut.topologyVersion() + \", updateSeq=\" + fut.updateSeq + \"]\");\n\n                d.timeout(cctx.config().getRebalanceTimeout());\n                d.workerId(0);//old api support.\n\n                worker = new DemandWorker(dmIdx.incrementAndGet(), fut);\n\n                worker.run(node, d);\n            }\n        }\n\n        return true;\n    }","commit_id":"67f88584a4ab330bbda956b3d0d830468d28920f","url":"https://github.com/apache/ignite"},{"original_method":"public MetricsHelper(CMetrics metrics,\n                       Class<?> scope, String meter, String counter) {\n    this.metrics = metrics;\n    this.scope = scope;\n    this.startTime = System.currentTimeMillis();\n\n    if (meter != null) metrics.meter(scope, meter, 1);\n    if (counter != null) metrics.counter(scope, counter, 1);\n  }","id":16750,"modified_method":"public MetricsHelper(CMetrics metrics, Class<?> scope,\n                       String meter, String counter, String histogram) {\n    this.metrics = metrics;\n    this.scope = scope;\n    this.startTime = System.currentTimeMillis();\n    this.histogram = histogram;\n\n    if (meter != null) metrics.meter(scope, meter, 1);\n    if (counter != null) metrics.counter(scope, counter, 1);\n  }","commit_id":"9399b60e6d83d549105783e60c2d6a6325c2af88","url":"https://github.com/caskdata/cdap"},{"original_method":"@Override\n  public boolean execute(CompareAndSwap compareAndSwap) {\n\n    MetricsHelper helper = new MetricsHelper(this.metrics, this.getClass(),\n        Constants.METRIC_REQUESTS, Constants.METRIC_COMPAREANDSWAP_REQUESTS);\n\n    try {\n      if (Log.isDebugEnabled())\n        Log.debug(\"Received \" + compareAndSwap);\n\n      TCompareAndSwap tCompareAndSwap = wrap(compareAndSwap);\n\n      if (Log.isDebugEnabled())\n        Log.debug(\"Sending \" + tCompareAndSwap);\n\n      boolean result = client.compareAndSwap(tCompareAndSwap);\n\n      if (Log.isDebugEnabled())\n        Log.debug(\"Result of TCompareAndSwap: \" + result);\n\n      helper.finish(Constants.METRIC_SUCCESS,\n          Constants.METRIC_COMPAREANDSWAP_LATENCY);\n      return result;\n\n    } catch (TException e) {\n      helper.finish(Constants.METRIC_FAILURE, null);\n      Log.error(\"Thrift Call for CompareAndSwap for key '\" +\n          new String(compareAndSwap.getKey()) +\n          \"' failed with message: \" + e.getMessage());\n      return false; // TODO execute() must be able to return an error\n    }\n  }","id":16751,"modified_method":"@Override\n  public boolean execute(CompareAndSwap compareAndSwap) {\n\n    MetricsHelper helper = newHelper(\n        Constants.METRIC_COMPAREANDSWAP_REQUESTS,\n        Constants.METRIC_COMPAREANDSWAP_LATENCY);\n\n    try {\n      if (Log.isDebugEnabled())\n        Log.debug(\"Received \" + compareAndSwap);\n\n      TCompareAndSwap tCompareAndSwap = wrap(compareAndSwap);\n\n      if (Log.isDebugEnabled())\n        Log.debug(\"Sending \" + tCompareAndSwap);\n\n      boolean success = client.compareAndSwap(tCompareAndSwap);\n\n      if (Log.isDebugEnabled())\n        Log.debug(\"Result of TCompareAndSwap: \" + success);\n\n      helper.finish(success);\n      return success;\n\n    } catch (TException e) {\n\n      helper.failure();\n      Log.error(\"Thrift Call for CompareAndSwap for key '\" +\n          new String(compareAndSwap.getKey()) +\n          \"' failed with message: \" + e.getMessage());\n      return false; // TODO execute() must be able to return an error\n    }\n  }","commit_id":"9399b60e6d83d549105783e60c2d6a6325c2af88","url":"https://github.com/caskdata/cdap"},{"original_method":"@Override\n  public boolean execute(Increment increment) {\n\n    MetricsHelper helper = new MetricsHelper(this.metrics, this.getClass(),\n        Constants.METRIC_REQUESTS, Constants.METRIC_INCREMENT_REQUESTS);\n\n    try {\n      if (Log.isDebugEnabled())\n        Log.debug(\"Received \" + increment);\n\n      TIncrement tIncrement = wrap(increment);\n\n      if (Log.isDebugEnabled())\n        Log.debug(\"Sending \" + tIncrement);\n\n      boolean result = client.increment(tIncrement);\n\n      if (Log.isDebugEnabled())\n        Log.debug(\"Result of TIncrement: \" + result);\n\n      helper.finish(Constants.METRIC_SUCCESS,\n          Constants.METRIC_INCREMENT_LATENCY);\n      return result;\n\n    } catch (TException e) {\n      helper.finish(Constants.METRIC_FAILURE, null);\n      Log.error(\"Thrift Call for Increment for key '\" +\n          new String(increment.getKey()) +\n          \"' failed with message: \" + e.getMessage());\n      return false; // TODO execute() must be able to return an error\n    }\n  }","id":16752,"modified_method":"@Override\n  public boolean execute(Increment increment) {\n\n    MetricsHelper helper = newHelper(\n        Constants.METRIC_INCREMENT_REQUESTS,\n        Constants.METRIC_INCREMENT_LATENCY);\n\n    try {\n      if (Log.isDebugEnabled())\n        Log.debug(\"Received \" + increment);\n\n      TIncrement tIncrement = wrap(increment);\n\n      if (Log.isDebugEnabled())\n        Log.debug(\"Sending \" + tIncrement);\n\n      boolean success = client.increment(tIncrement);\n\n      if (Log.isDebugEnabled())\n        Log.debug(\"Result of TIncrement: \" + success);\n\n      helper.finish(success);\n      return success;\n\n    } catch (TException e) {\n\n      helper.failure();\n      Log.error(\"Thrift Call for Increment for key '\" +\n          new String(increment.getKey()) +\n          \"' failed with message: \" + e.getMessage());\n      return false; // TODO execute() must be able to return an error\n    }\n  }","commit_id":"9399b60e6d83d549105783e60c2d6a6325c2af88","url":"https://github.com/caskdata/cdap"},{"original_method":"@Override\n  public Map<byte[], byte[]> execute(Read read) {\n\n    MetricsHelper helper = new MetricsHelper(this.metrics, this.getClass(),\n        Constants.METRIC_REQUESTS, Constants.METRIC_READ_REQUESTS);\n\n    try {\n      if (Log.isDebugEnabled())\n        Log.debug(\"Received \" + read);\n\n      TRead tRead = wrap(read);\n\n      if (Log.isDebugEnabled())\n        Log.debug(\"Sending \" + tRead);\n\n      TOptionalBinaryMap tResult = client.read(tRead);\n\n      if (Log.isDebugEnabled())\n        Log.debug(\"Result of TRead: \" + tResult);\n\n      Map<byte[], byte[]> result = unwrap(tResult);\n      helper.finish(Constants.METRIC_SUCCESS, Constants.METRIC_READ_LATENCY);\n      return result;\n\n    } catch (TException e) {\n      helper.finish(Constants.METRIC_FAILURE, null);\n      Log.error(\"Thrift Call for Read for key '\" +\n          new String(read.getKey()) +\n          \"' failed with message: \" + e.getMessage());\n      return null; // TODO execute() must be able to return an error\n    }\n  }","id":16753,"modified_method":"@Override\n  public Map<byte[], byte[]> execute(Read read) {\n\n    MetricsHelper helper = newHelper(\n        Constants.METRIC_READ_REQUESTS,\n        Constants.METRIC_READ_LATENCY);\n\n    try {\n      if (Log.isDebugEnabled())\n        Log.debug(\"Received \" + read);\n\n      TRead tRead = wrap(read);\n\n      if (Log.isDebugEnabled())\n        Log.debug(\"Sending \" + tRead);\n\n      TOptionalBinaryMap tResult = client.read(tRead);\n\n      if (Log.isDebugEnabled())\n        Log.debug(\"Result of TRead: \" + tResult);\n\n      Map<byte[], byte[]> result = unwrap(tResult);\n      helper.success();\n      return result;\n\n    } catch (TException e) {\n\n      helper.failure();\n      Log.error(\"Thrift Call for Read for key '\" +\n          new String(read.getKey()) +\n          \"' failed with message: \" + e.getMessage());\n      return null; // TODO execute() must be able to return an error\n    }\n  }","commit_id":"9399b60e6d83d549105783e60c2d6a6325c2af88","url":"https://github.com/caskdata/cdap"},{"original_method":"@Override\n  public byte[] execute(ReadKey readKey) {\n\n    MetricsHelper helper = new MetricsHelper(this.metrics, this.getClass(),\n        Constants.METRIC_REQUESTS, Constants.METRIC_READKEY_REQUESTS);\n\n    try {\n      if (Log.isDebugEnabled())\n        Log.debug(\"Received \" + readKey);\n\n      TReadKey tReadKey = wrap(readKey);\n\n      if (Log.isDebugEnabled())\n        Log.debug(\"Sending \" + tReadKey);\n\n      TOptionalBinary tResult = client.readKey(tReadKey);\n\n      if (Log.isDebugEnabled())\n        Log.debug(\"Result of TReadKey: \" + tResult);\n\n      byte[] result = unwrap(tResult);\n      helper.finish(Constants.METRIC_SUCCESS, Constants.METRIC_READKEY_LATENCY);\n      return result;\n\n    } catch (TException e) {\n      helper.finish(Constants.METRIC_FAILURE, null);\n      Log.error(\"Thrift Call for ReadKey for key '\" +\n          new String(readKey.getKey()) +\n          \"' failed with message: \" + e.getMessage());\n      return null; // TODO execute() must be able to return an error\n    }\n  }","id":16754,"modified_method":"@Override\n  public byte[] execute(ReadKey readKey) {\n\n    MetricsHelper helper = newHelper(\n        Constants.METRIC_READKEY_REQUESTS,\n        Constants.METRIC_READKEY_LATENCY);\n\n    try {\n      if (Log.isDebugEnabled())\n        Log.debug(\"Received \" + readKey);\n\n      TReadKey tReadKey = wrap(readKey);\n\n      if (Log.isDebugEnabled())\n        Log.debug(\"Sending \" + tReadKey);\n\n      TOptionalBinary tResult = client.readKey(tReadKey);\n\n      if (Log.isDebugEnabled())\n        Log.debug(\"Result of TReadKey: \" + tResult);\n\n      byte[] result = unwrap(tResult);\n      helper.success();\n      return result;\n\n    } catch (TException e) {\n\n      helper.failure();\n      Log.error(\"Thrift Call for ReadKey for key '\" +\n          new String(readKey.getKey()) +\n          \"' failed with message: \" + e.getMessage());\n      return null; // TODO execute() must be able to return an error\n    }\n  }","commit_id":"9399b60e6d83d549105783e60c2d6a6325c2af88","url":"https://github.com/caskdata/cdap"},{"original_method":"@Override\n  public boolean execute(QueueEnqueue enqueue) {\n\n    MetricsHelper helper = new MetricsHelper(this.metrics, this.getClass(),\n        Constants.METRIC_REQUESTS, Constants.METRIC_ENQUEUE_REQUESTS);\n\n    try {\n      if (Log.isDebugEnabled())\n        Log.debug(\"Received \" + enqueue);\n\n      TQueueEnqueue tQueueEnqueue = wrap(enqueue);\n\n      if (Log.isDebugEnabled())\n        Log.debug(\"Sending \" + tQueueEnqueue);\n\n      boolean result = client.queueEnqueue(tQueueEnqueue);\n\n      if (Log.isDebugEnabled())\n        Log.debug(\"Result of TQueueEnqueue: \" + result);\n\n      helper.finish(Constants.METRIC_SUCCESS,\n          Constants.METRIC_ENQUEUE_LATENCY);\n      return result;\n\n    } catch (TException e) {\n      helper.finish(Constants.METRIC_FAILURE, null);\n      Log.error(\"Thrift Call for QueueEnqueue for queue '\" +\n          new String(enqueue.getKey()) +\n          \"' failed with message: \" + e.getMessage());\n      return false; // TODO execute() must be able to return an error\n    }\n  }","id":16755,"modified_method":"@Override\n  public boolean execute(QueueEnqueue enqueue) {\n\n    MetricsHelper helper = newHelper(\n        Constants.METRIC_ENQUEUE_REQUESTS,\n        Constants.METRIC_ENQUEUE_LATENCY);\n\n    try {\n      if (Log.isDebugEnabled())\n        Log.debug(\"Received \" + enqueue);\n\n      TQueueEnqueue tQueueEnqueue = wrap(enqueue);\n\n      if (Log.isDebugEnabled())\n        Log.debug(\"Sending \" + tQueueEnqueue);\n\n      boolean success = client.queueEnqueue(tQueueEnqueue);\n\n      if (Log.isDebugEnabled())\n        Log.debug(\"Result of TQueueEnqueue: \" + success);\n\n      helper.finish(success);\n      return success;\n\n    } catch (TException e) {\n\n      helper.failure();\n      Log.error(\"Thrift Call for QueueEnqueue for queue '\" +\n          new String(enqueue.getKey()) +\n          \"' failed with message: \" + e.getMessage());\n      return false; // TODO execute() must be able to return an error\n    }\n  }","commit_id":"9399b60e6d83d549105783e60c2d6a6325c2af88","url":"https://github.com/caskdata/cdap"},{"original_method":"@Override\n  public Map<byte[], byte[]> execute(ReadColumnRange readColumnRange) {\n\n    MetricsHelper helper = new MetricsHelper(this.metrics, this.getClass(),\n        Constants.METRIC_REQUESTS, Constants.METRIC_READCOLUMNRANGE_REQUESTS);\n\n    try {\n      if (Log.isDebugEnabled())\n        Log.debug(\"Received \" + readColumnRange);\n\n      TReadColumnRange tReadColumnRange = wrap(readColumnRange);\n\n      if (Log.isDebugEnabled())\n        Log.debug(\"Sending \" + tReadColumnRange);\n\n      TOptionalBinaryMap tResult = client.readColumnRange(tReadColumnRange);\n\n      if (Log.isDebugEnabled())\n        Log.debug(\"Result of TReadColumnRange: \" + tResult);\n\n      Map<byte[], byte[]> result = unwrap(tResult);\n      helper.finish(Constants.METRIC_SUCCESS,\n          Constants.METRIC_READCOLUMNRANGE_LATENCY);\n      return result;\n\n    } catch (TException e) {\n      helper.finish(Constants.METRIC_FAILURE, null);\n      Log.error(\"Thrift Call for ReadColumnRange for key '\" +\n          new String(readColumnRange.getKey()) +\n          \"' failed with message: \" + e.getMessage());\n      return null; // TODO execute() must be able to return an error\n    }\n  }","id":16756,"modified_method":"@Override\n  public Map<byte[], byte[]> execute(ReadColumnRange readColumnRange) {\n\n    MetricsHelper helper = newHelper(\n        Constants.METRIC_READCOLUMNRANGE_REQUESTS,\n        Constants.METRIC_READCOLUMNRANGE_LATENCY);\n\n    try {\n      if (Log.isDebugEnabled())\n        Log.debug(\"Received \" + readColumnRange);\n\n      TReadColumnRange tReadColumnRange = wrap(readColumnRange);\n\n      if (Log.isDebugEnabled())\n        Log.debug(\"Sending \" + tReadColumnRange);\n\n      TOptionalBinaryMap tResult = client.readColumnRange(tReadColumnRange);\n\n      if (Log.isDebugEnabled())\n        Log.debug(\"Result of TReadColumnRange: \" + tResult);\n\n      Map<byte[], byte[]> result = unwrap(tResult);\n      helper.success();\n      return result;\n\n    } catch (TException e) {\n\n      helper.failure();\n      Log.error(\"Thrift Call for ReadColumnRange for key '\" +\n          new String(readColumnRange.getKey()) +\n          \"' failed with message: \" + e.getMessage());\n      return null; // TODO execute() must be able to return an error\n    }\n  }","commit_id":"9399b60e6d83d549105783e60c2d6a6325c2af88","url":"https://github.com/caskdata/cdap"},{"original_method":"@Override\n  public boolean execute(QueueAck ack) {\n\n    MetricsHelper helper = new MetricsHelper(this.metrics, this.getClass(),\n        Constants.METRIC_REQUESTS, Constants.METRIC_ACK_REQUESTS);\n\n    try {\n      if (Log.isDebugEnabled())\n        Log.debug(\"Received \" + ack);\n\n      TQueueAck tQueueAck = wrap(ack);\n\n      if (Log.isDebugEnabled())\n        Log.debug(\"Sending \" + tQueueAck);\n\n      boolean result = client.queueAck(tQueueAck);\n\n      if (Log.isDebugEnabled())\n        Log.debug(\"Result of TQueueAck: \" + result);\n\n      helper.finish(Constants.METRIC_SUCCESS, Constants.METRIC_ACK_LATENCY);\n      return result;\n\n    } catch (TException e) {\n      helper.finish(Constants.METRIC_FAILURE, null);\n      Log.error(\"Thrift Call for QueueAck for queue '\" +\n          new String(ack.getKey()) +\n          \"' failed with message: \" + e.getMessage());\n      return false; // TODO execute() must be able to return an error\n    }\n  }","id":16757,"modified_method":"@Override\n  public boolean execute(QueueAck ack) {\n\n    MetricsHelper helper = newHelper(\n        Constants.METRIC_ACK_REQUESTS,\n        Constants.METRIC_ACK_LATENCY);\n\n    try {\n      if (Log.isDebugEnabled())\n        Log.debug(\"Received \" + ack);\n\n      TQueueAck tQueueAck = wrap(ack);\n\n      if (Log.isDebugEnabled())\n        Log.debug(\"Sending \" + tQueueAck);\n\n      boolean success = client.queueAck(tQueueAck);\n\n      if (Log.isDebugEnabled())\n        Log.debug(\"Result of TQueueAck: \" + success);\n\n      helper.finish(success);\n      return success;\n\n    } catch (TException e) {\n\n      helper.failure();\n      Log.error(\"Thrift Call for QueueAck for queue '\" +\n          new String(ack.getKey()) +\n          \"' failed with message: \" + e.getMessage());\n      return false; // TODO execute() must be able to return an error\n    }\n  }","commit_id":"9399b60e6d83d549105783e60c2d6a6325c2af88","url":"https://github.com/caskdata/cdap"},{"original_method":"@Override\n  public List<byte[]> execute(ReadAllKeys readKeys) {\n\n    MetricsHelper helper = new MetricsHelper(this.metrics, this.getClass(),\n        Constants.METRIC_REQUESTS, Constants.METRIC_READALLKEYS_REQUESTS);\n\n    try {\n      if (Log.isDebugEnabled())\n        Log.debug(\"Received \" + readKeys);\n\n      TReadAllKeys tReadAllKeys = wrap(readKeys);\n\n      if (Log.isDebugEnabled())\n        Log.debug(\"Sending \" + tReadAllKeys);\n\n      TOptionalBinaryList tResult = client.readAllKeys(tReadAllKeys);\n\n      if (Log.isDebugEnabled())\n        Log.debug(\"Result of TReadAllKeys: \" + tResult);\n\n      List<byte[]> result = unwrap(tResult);\n      helper.finish(Constants.METRIC_SUCCESS,\n          Constants.METRIC_READALLKEYS_LATENCY);\n      return result;\n\n    } catch (TException e) {\n      helper.finish(Constants.METRIC_FAILURE, null);\n      Log.error(\"Thrift Call for ReadAllKeys(\" + readKeys.getOffset() + \", \" +\n          readKeys.getLimit() + \") failed with message: \" + e.getMessage());\n      return new ArrayList<byte[]>(0);\n      // TODO execute() must be able to return an error\n    }\n  }","id":16758,"modified_method":"@Override\n  public List<byte[]> execute(ReadAllKeys readKeys) {\n\n    MetricsHelper helper = newHelper(\n        Constants.METRIC_READALLKEYS_REQUESTS,\n        Constants.METRIC_READALLKEYS_LATENCY);\n\n    try {\n      if (Log.isDebugEnabled())\n        Log.debug(\"Received \" + readKeys);\n\n      TReadAllKeys tReadAllKeys = wrap(readKeys);\n\n      if (Log.isDebugEnabled())\n        Log.debug(\"Sending \" + tReadAllKeys);\n\n      TOptionalBinaryList tResult = client.readAllKeys(tReadAllKeys);\n\n      if (Log.isDebugEnabled())\n        Log.debug(\"Result of TReadAllKeys: \" + tResult);\n\n      List<byte[]> result = unwrap(tResult);\n      helper.success();\n      return result;\n\n    } catch (TException e) {\n\n      helper.failure();\n      Log.error(\"Thrift Call for ReadAllKeys(\" + readKeys.getOffset() + \", \" +\n          readKeys.getLimit() + \") failed with message: \" + e.getMessage());\n      return new ArrayList<byte[]>(0);\n      // TODO execute() must be able to return an error\n    }\n  }","commit_id":"9399b60e6d83d549105783e60c2d6a6325c2af88","url":"https://github.com/caskdata/cdap"},{"original_method":"@Override\n  public BatchOperationResult execute(List<WriteOperation> writes)\n      throws BatchOperationException {\n\n    MetricsHelper helper = new MetricsHelper(this.metrics, this.getClass(),\n        Constants.METRIC_REQUESTS, Constants.METRIC_BATCH_REQUESTS);\n\n    if (Log.isDebugEnabled())\n      Log.debug(\"Received Batch of \" + writes.size() + \"WriteOperations: \");\n\n    List<TWriteOperation> tWrites = Lists.newArrayList();\n    for (WriteOperation writeOp : writes) {\n      if (Log.isDebugEnabled())\n        Log.debug(\"  WriteOperation: \" + writeOp.toString());\n      TWriteOperation tWriteOp = new TWriteOperation();\n      if (writeOp instanceof Write)\n        tWriteOp.setWrite(wrap((Write)writeOp));\n      else if (writeOp instanceof Delete)\n        tWriteOp.setDelet(wrap((Delete)writeOp));\n      else if (writeOp instanceof Increment)\n        tWriteOp.setIncrement(wrap((Increment) writeOp));\n      else if (writeOp instanceof CompareAndSwap)\n        tWriteOp.setCompareAndSwap(wrap((CompareAndSwap) writeOp));\n      else if (writeOp instanceof QueueEnqueue)\n        tWriteOp.setQueueEnqueue(wrap((QueueEnqueue) writeOp));\n      else if (writeOp instanceof QueueAck)\n        tWriteOp.setQueueAck(wrap((QueueAck) writeOp));\n      else {\n        Log.error(\"Internal Error: Received an unknown WriteOperation of class \"\n            + writeOp.getClass().getName() + \".\");\n        continue;\n      }\n      tWrites.add(tWriteOp);\n    }\n    try {\n      if (Log.isDebugEnabled())\n        Log.debug(\"Sending Batch: \" + Arrays.toString(writes.toArray()));\n\n      TBatchOperationResult tResult = client.batch(tWrites);\n\n      if (Log.isDebugEnabled())\n        Log.debug(\"Result of Batch: \" + tResult);\n\n      BatchOperationResult result = unwrap(tResult);\n\n      helper.finish(Constants.METRIC_SUCCESS, Constants.METRIC_BATCH_LATENCY);\n      return result;\n\n    } catch (Exception e) {\n      helper.finish(Constants.METRIC_FAILURE, null);\n      throw new BatchOperationException(e.getMessage(), e);\n    }\n  }","id":16759,"modified_method":"@Override\n  public BatchOperationResult execute(List<WriteOperation> writes)\n      throws BatchOperationException {\n\n    MetricsHelper helper = newHelper(\n        Constants.METRIC_BATCH_REQUESTS,\n        Constants.METRIC_BATCH_LATENCY);\n\n    if (Log.isDebugEnabled())\n      Log.debug(\"Received Batch of \" + writes.size() + \"WriteOperations: \");\n\n    List<TWriteOperation> tWrites = Lists.newArrayList();\n    for (WriteOperation writeOp : writes) {\n      if (Log.isDebugEnabled())\n        Log.debug(\"  WriteOperation: \" + writeOp.toString());\n      TWriteOperation tWriteOp = new TWriteOperation();\n      if (writeOp instanceof Write)\n        tWriteOp.setWrite(wrap((Write)writeOp));\n      else if (writeOp instanceof Delete)\n        tWriteOp.setDelet(wrap((Delete)writeOp));\n      else if (writeOp instanceof Increment)\n        tWriteOp.setIncrement(wrap((Increment) writeOp));\n      else if (writeOp instanceof CompareAndSwap)\n        tWriteOp.setCompareAndSwap(wrap((CompareAndSwap) writeOp));\n      else if (writeOp instanceof QueueEnqueue)\n        tWriteOp.setQueueEnqueue(wrap((QueueEnqueue) writeOp));\n      else if (writeOp instanceof QueueAck)\n        tWriteOp.setQueueAck(wrap((QueueAck) writeOp));\n      else {\n        Log.error(\"Internal Error: Received an unknown WriteOperation of class \"\n            + writeOp.getClass().getName() + \".\");\n        continue;\n      }\n      tWrites.add(tWriteOp);\n    }\n    try {\n      if (Log.isDebugEnabled())\n        Log.debug(\"Sending Batch: \" + Arrays.toString(writes.toArray()));\n\n      TBatchOperationResult tResult = client.batch(tWrites);\n\n      if (Log.isDebugEnabled())\n        Log.debug(\"Result of Batch: \" + tResult);\n\n      BatchOperationResult result = unwrap(tResult);\n\n      helper.finish(result.isSuccess());\n      return result;\n\n    } catch (Exception e) {\n\n      String message = \"Thrift Call for Batch failed: \" + e.getMessage();\n      Log.error(message);\n      helper.failure();\n      throw new BatchOperationException(message, e);\n    }\n  }","commit_id":"9399b60e6d83d549105783e60c2d6a6325c2af88","url":"https://github.com/caskdata/cdap"},{"original_method":"@Override\n  public long execute(QueueAdmin.GetGroupID getGroupId) {\n\n    MetricsHelper helper = new MetricsHelper(this.metrics, this.getClass(),\n        Constants.METRIC_REQUESTS, Constants.METRIC_GETGROUPID_REQUESTS);\n\n    try {\n      if (Log.isDebugEnabled())\n        Log.debug(\"Received \" + getGroupId);\n\n      TGetGroupId tGetGroupId = wrap(getGroupId);\n\n      if (Log.isDebugEnabled())\n        Log.debug(\"Sending \" + tGetGroupId);\n\n      long result = client.getGroupId(tGetGroupId);\n\n      if (Log.isDebugEnabled())\n        Log.debug(\"Result of TGetGroupId: \" + result);\n\n      helper.finish(Constants.METRIC_SUCCESS,\n          Constants.METRIC_GETGROUPID_LATENCY);\n      return result;\n\n    } catch (TException e) {\n      helper.finish(Constants.METRIC_FAILURE, null);\n      Log.error(\"Thrift Call for GetGroupId failed for queue \" +\n          new String(getGroupId.getQueueName()) + \": \" + e.getMessage());\n      return 0; // TODO execute() must be able to return an error\n    }\n  }","id":16760,"modified_method":"@Override\n  public long execute(QueueAdmin.GetGroupID getGroupId) {\n\n    MetricsHelper helper = newHelper(\n        Constants.METRIC_GETGROUPID_REQUESTS,\n        Constants.METRIC_GETGROUPID_LATENCY);\n\n    try {\n      if (Log.isDebugEnabled())\n        Log.debug(\"Received \" + getGroupId);\n\n      TGetGroupId tGetGroupId = wrap(getGroupId);\n\n      if (Log.isDebugEnabled())\n        Log.debug(\"Sending \" + tGetGroupId);\n\n      long result = client.getGroupId(tGetGroupId);\n\n      if (Log.isDebugEnabled())\n        Log.debug(\"Result of TGetGroupId: \" + result);\n\n      helper.success();\n      return result;\n\n    } catch (TException e) {\n\n      helper.failure();\n      Log.error(\"Thrift Call for GetGroupId failed for queue \" +\n          new String(getGroupId.getQueueName()) + \": \" + e.getMessage());\n      return 0; // TODO execute() must be able to return an error\n    }\n  }","commit_id":"9399b60e6d83d549105783e60c2d6a6325c2af88","url":"https://github.com/caskdata/cdap"},{"original_method":"@Override\n  public boolean execute(Delete delete) {\n\n    MetricsHelper helper = new MetricsHelper(this.metrics, this.getClass(),\n        Constants.METRIC_REQUESTS, Constants.METRIC_DELETE_REQUESTS);\n\n    try {\n      if (Log.isDebugEnabled())\n        Log.debug(\"Received \" + delete);\n\n      TDelete tDelete = wrap(delete);\n\n      if (Log.isDebugEnabled())\n        Log.debug(\"Sending \" + tDelete);\n\n      boolean result = client.delet(tDelete);\n\n      if (Log.isDebugEnabled())\n        Log.debug(\"Result of TDelete: \" + result);\n\n      helper.finish(Constants.METRIC_SUCCESS, Constants.METRIC_DELETE_LATENCY);\n      return result;\n\n    } catch (TException e) {\n      helper.finish(Constants.METRIC_FAILURE, null);\n      Log.error(\"Thrift Call for Delete for key '\" + new String(delete.getKey())\n          + \"' failed with message: \" + e.getMessage());\n      return false; // TODO execute() must be able to return an error\n    }\n  }","id":16761,"modified_method":"@Override\n  public boolean execute(Delete delete) {\n\n    MetricsHelper helper = newHelper(\n        Constants.METRIC_DELETE_REQUESTS,\n        Constants.METRIC_DELETE_LATENCY);\n\n    try {\n      if (Log.isDebugEnabled())\n        Log.debug(\"Received \" + delete);\n\n      TDelete tDelete = wrap(delete);\n\n      if (Log.isDebugEnabled())\n        Log.debug(\"Sending \" + tDelete);\n\n      boolean success = client.delet(tDelete);\n\n      if (Log.isDebugEnabled())\n        Log.debug(\"Result of TDelete: \" + success);\n\n      helper.finish(success);\n      return success;\n\n    } catch (TException e) {\n\n      helper.failure();\n      Log.error(\"Thrift Call for Delete for key '\" + new String(delete.getKey())\n          + \"' failed with message: \" + e.getMessage());\n      return false; // TODO execute() must be able to return an error\n    }\n  }","commit_id":"9399b60e6d83d549105783e60c2d6a6325c2af88","url":"https://github.com/caskdata/cdap"},{"original_method":"@Override\n  public QueueAdmin.QueueMeta execute(QueueAdmin.GetQueueMeta getQueueMeta) {\n\n    MetricsHelper helper = new MetricsHelper(this.metrics, this.getClass(),\n        Constants.METRIC_REQUESTS, Constants.METRIC_GETQUEUEMETA_REQUESTS);\n\n    try {\n      if (Log.isDebugEnabled())\n        Log.debug(\"Received \" + getQueueMeta);\n\n      TGetQueueMeta tGetQueueMeta = wrap(getQueueMeta);\n\n      if (Log.isDebugEnabled())\n        Log.debug(\"Sending \" + tGetQueueMeta);\n\n      TQueueMeta tQueueMeta = client.getQueueMeta(tGetQueueMeta);\n\n      if (Log.isDebugEnabled())\n        Log.debug(\"Result of TGetQueueMeta: \" + tQueueMeta);\n\n      QueueAdmin.QueueMeta queueMeta = unwrap(tQueueMeta);\n      helper.finish(Constants.METRIC_SUCCESS,\n          Constants.METRIC_GETQUEUEMETA_LATENCY);\n      return queueMeta;\n\n    } catch (TException e) {\n      helper.finish(Constants.METRIC_FAILURE, null);\n      Log.error(\"Thrift Call for GetQueueMeta failed for queue \" +\n          new String(getQueueMeta.getQueueName()) + \": \" + e.getMessage());\n      return null; // TODO execute() must be able to return an error\n    }\n  }","id":16762,"modified_method":"@Override\n  public QueueAdmin.QueueMeta execute(QueueAdmin.GetQueueMeta getQueueMeta) {\n\n    MetricsHelper helper = newHelper(\n        Constants.METRIC_GETQUEUEMETA_REQUESTS,\n        Constants.METRIC_GETQUEUEMETA_LATENCY);\n\n    try {\n      if (Log.isDebugEnabled())\n        Log.debug(\"Received \" + getQueueMeta);\n\n      TGetQueueMeta tGetQueueMeta = wrap(getQueueMeta);\n\n      if (Log.isDebugEnabled())\n        Log.debug(\"Sending \" + tGetQueueMeta);\n\n      TQueueMeta tQueueMeta = client.getQueueMeta(tGetQueueMeta);\n\n      if (Log.isDebugEnabled())\n        Log.debug(\"Result of TGetQueueMeta: \" + tQueueMeta);\n\n      QueueAdmin.QueueMeta queueMeta = unwrap(tQueueMeta);\n\n      helper.success();\n      return queueMeta;\n\n    } catch (TException e) {\n      helper.failure();\n      Log.error(\"Thrift Call for GetQueueMeta failed for queue \" +\n          new String(getQueueMeta.getQueueName()) + \": \" + e.getMessage());\n      return null; // TODO execute() must be able to return an error\n    }\n  }","commit_id":"9399b60e6d83d549105783e60c2d6a6325c2af88","url":"https://github.com/caskdata/cdap"},{"original_method":"@Override\n  public DequeueResult execute(QueueDequeue dequeue) {\n\n    MetricsHelper helper = new MetricsHelper(this.metrics, this.getClass(),\n        Constants.METRIC_REQUESTS, Constants.METRIC_DEQUEUE_REQUESTS);\n\n    try {\n      if (Log.isDebugEnabled())\n        Log.debug(\"Received \" + dequeue);\n\n      TQueueDequeue tDequeue = wrap(dequeue);\n\n      if (Log.isDebugEnabled())\n        Log.debug(\"Sending \" + tDequeue);\n\n      TDequeueResult tDequeueResult = client.dequeue(tDequeue);\n\n      if (Log.isDebugEnabled())\n        Log.debug(\"Result of TDequeue: \" + tDequeueResult);\n\n      DequeueResult dequeueResult = unwrap(tDequeueResult);\n      helper.finish(Constants.METRIC_SUCCESS, Constants.METRIC_DEQUEUE_LATENCY);\n      return dequeueResult;\n\n    } catch (TException e) {\n      String message = \"Thrift Call for QueueDequeue failed for queue \" +\n          new String(dequeue.getKey()) + \": \" + e.getMessage();\n      Log.error(message);\n      helper.finish(Constants.METRIC_FAILURE, null);\n      return new DequeueResult(DequeueResult.DequeueStatus.FAILURE, message);\n    }\n  }","id":16763,"modified_method":"@Override\n  public DequeueResult execute(QueueDequeue dequeue) {\n\n    MetricsHelper helper = newHelper(\n        Constants.METRIC_DEQUEUE_REQUESTS,\n        Constants.METRIC_DEQUEUE_LATENCY);\n\n    try {\n      if (Log.isDebugEnabled())\n        Log.debug(\"Received \" + dequeue);\n\n      TQueueDequeue tDequeue = wrap(dequeue);\n\n      if (Log.isDebugEnabled())\n        Log.debug(\"Sending \" + tDequeue);\n\n      TDequeueResult tDequeueResult = client.dequeue(tDequeue);\n\n      if (Log.isDebugEnabled())\n        Log.debug(\"Result of TDequeue: \" + tDequeueResult);\n\n      DequeueResult dequeueResult = unwrap(tDequeueResult);\n      helper.finish(dequeueResult.isSuccess());\n      return dequeueResult;\n\n    } catch (TException e) {\n\n      String message = \"Thrift Call for QueueDequeue failed for queue \" +\n          new String(dequeue.getKey()) + \": \" + e.getMessage();\n      Log.error(message);\n      helper.failure();\n      return new DequeueResult(DequeueResult.DequeueStatus.FAILURE, message);\n    }\n  }","commit_id":"9399b60e6d83d549105783e60c2d6a6325c2af88","url":"https://github.com/caskdata/cdap"},{"original_method":"@Override\n  public void execute(ClearFabric clearFabric) {\n\n    MetricsHelper helper = new MetricsHelper(this.metrics, this.getClass(),\n        Constants.METRIC_REQUESTS, Constants.METRIC_CLEARFABRIC_REQUESTS);\n\n    try {\n      if (Log.isDebugEnabled())\n        Log.debug(\"Received \" + clearFabric);\n\n      TClearFabric tClearFabric = wrap(clearFabric);\n\n      if (Log.isDebugEnabled())\n        Log.debug(\"Sending \" + tClearFabric);\n\n      client.clearFabric(tClearFabric);\n\n      helper.finish(Constants.METRIC_SUCCESS,\n          Constants.METRIC_CLEARFABRIC_LATENCY);\n\n    } catch (TException e) {\n      helper.finish(Constants.METRIC_FAILURE, null);\n      Log.error(\"Thrift Call for ClearFabric failed with message: \" +\n          e.getMessage());\n      // TODO execute() must be able to return an error\n    }\n  }","id":16764,"modified_method":"@Override\n  public void execute(ClearFabric clearFabric) {\n\n    MetricsHelper helper = newHelper(\n        Constants.METRIC_CLEARFABRIC_REQUESTS,\n        Constants.METRIC_CLEARFABRIC_LATENCY);\n\n    try {\n      if (Log.isDebugEnabled())\n        Log.debug(\"Received \" + clearFabric);\n\n      TClearFabric tClearFabric = wrap(clearFabric);\n\n      if (Log.isDebugEnabled())\n        Log.debug(\"Sending \" + tClearFabric);\n\n      client.clearFabric(tClearFabric);\n      helper.success();\n\n    } catch (TException e) {\n\n      helper.failure();\n      Log.error(\"Thrift Call for ClearFabric failed with message: \" +\n          e.getMessage());\n      // TODO execute() must be able to return an error\n    }\n  }","commit_id":"9399b60e6d83d549105783e60c2d6a6325c2af88","url":"https://github.com/caskdata/cdap"},{"original_method":"@Override\n  public boolean execute(Write write) {\n\n    MetricsHelper helper = new MetricsHelper(this.metrics, this.getClass(),\n        Constants.METRIC_REQUESTS, Constants.METRIC_WRITE_REQUESTS);\n\n    try {\n      if (Log.isDebugEnabled())\n        Log.debug(\"Received \" + write);\n\n      TWrite tWrite = wrap(write);\n\n      if (Log.isDebugEnabled())\n        Log.debug(\"Sending \" + tWrite);\n\n      boolean result = client.write(tWrite);\n\n      if (Log.isDebugEnabled())\n        Log.debug(\"Result of TWrite: \" + result);\n\n      helper.finish(Constants.METRIC_SUCCESS, Constants.METRIC_WRITE_LATENCY);\n      return result;\n\n    } catch (TException e) {\n      helper.finish(Constants.METRIC_FAILURE, null);\n      Log.error(\"Thrift Call for Write for key '\" + new String(write.getKey()) +\n          \"' failed with message: \" + e.getMessage());\n      return false; // TODO execute() must be able to return an error\n    }\n  }","id":16765,"modified_method":"@Override\n  public boolean execute(Write write) {\n\n    MetricsHelper helper = newHelper(\n        Constants.METRIC_WRITE_REQUESTS,\n        Constants.METRIC_WRITE_LATENCY);\n\n    try {\n      if (Log.isDebugEnabled())\n        Log.debug(\"Received \" + write);\n\n      TWrite tWrite = wrap(write);\n\n      if (Log.isDebugEnabled())\n        Log.debug(\"Sending \" + tWrite);\n\n      boolean success = client.write(tWrite);\n\n      if (Log.isDebugEnabled())\n        Log.debug(\"Result of TWrite: \" + success);\n\n      helper.finish(success);\n      return success;\n\n    } catch (TException e) {\n\n      Log.error(\"Thrift Call for Write for key '\" + new String(write.getKey()) +\n          \"' failed with message: \" + e.getMessage());\n      helper.failure();\n      return false;\n      // TODO execute() must be able to return an error\n    }\n  }","commit_id":"9399b60e6d83d549105783e60c2d6a6325c2af88","url":"https://github.com/caskdata/cdap"},{"original_method":"@Override\n  public TOptionalBinaryMap read(TRead tRead) throws TException {\n    if (Log.isDebugEnabled())\n      Log.debug(\"Received TRead: \" + tRead);\n    Read read = unwrap(tRead);\n    Map<byte[], byte[]> result = this.opex.execute(read);\n    TOptionalBinaryMap tResult = wrapMap(result);\n    if (Log.isDebugEnabled())\n      Log.debug(\"Read result: \" + tResult);\n    return tResult;\n  }","id":16766,"modified_method":"@Override\n  public TOptionalBinaryMap read(TRead tRead) throws TException {\n\n    MetricsHelper helper = newHelper(\n        Constants.METRIC_READ_REQUESTS,\n        Constants.METRIC_READ_LATENCY);\n\n    if (Log.isDebugEnabled())\n      Log.debug(\"Received TRead: \" + tRead);\n\n    Read read = unwrap(tRead);\n    Map<byte[], byte[]> result = this.opex.execute(read);\n    TOptionalBinaryMap tResult = wrapMap(result);\n\n    if (Log.isDebugEnabled())\n      Log.debug(\"Read result: \" + tResult);\n\n    helper.success();\n    return tResult;\n  }","commit_id":"9399b60e6d83d549105783e60c2d6a6325c2af88","url":"https://github.com/caskdata/cdap"},{"original_method":"@Override\n  public boolean queueEnqueue(TQueueEnqueue tQueueEnqueue) throws TException {\n    if (Log.isDebugEnabled())\n      Log.debug(\"Received TQueueEnqueue: \" + tQueueEnqueue);\n    QueueEnqueue queueEnqueue = unwrap(tQueueEnqueue);\n    boolean success = this.opex.execute(queueEnqueue);\n    if (Log.isDebugEnabled())\n      Log.debug(\"QueueEnqueue result: \" + success);\n    return success;\n  }","id":16767,"modified_method":"@Override\n  public boolean queueEnqueue(TQueueEnqueue tQueueEnqueue) throws TException {\n\n    MetricsHelper helper = newHelper(\n        Constants.METRIC_ENQUEUE_REQUESTS,\n        Constants.METRIC_ENQUEUE_LATENCY);\n\n    if (Log.isDebugEnabled())\n      Log.debug(\"Received TQueueEnqueue: \" + tQueueEnqueue);\n\n    QueueEnqueue queueEnqueue = unwrap(tQueueEnqueue);\n    boolean success = this.opex.execute(queueEnqueue);\n\n    if (Log.isDebugEnabled())\n      Log.debug(\"QueueEnqueue result: \" + success);\n\n    helper.finish(success);\n    return success;\n  }","commit_id":"9399b60e6d83d549105783e60c2d6a6325c2af88","url":"https://github.com/caskdata/cdap"},{"original_method":"@Override\n  public TDequeueResult dequeue(TQueueDequeue tQueueDequeue) throws TException {\n    if (Log.isDebugEnabled())\n      Log.debug(\"Received TQueueDequeue\" + tQueueDequeue.toString());\n    QueueDequeue queueDequeue = unwrap(tQueueDequeue);\n    DequeueResult result = this.opex.execute(queueDequeue);\n    if (Log.isDebugEnabled())\n      Log.debug(\"QueueDequeue result: \" + result);\n    return wrap(result);\n  }","id":16768,"modified_method":"@Override\n  public TDequeueResult dequeue(TQueueDequeue tQueueDequeue) throws TException {\n\n    MetricsHelper helper = newHelper(\n        Constants.METRIC_DEQUEUE_REQUESTS,\n        Constants.METRIC_DEQUEUE_LATENCY);\n\n    if (Log.isDebugEnabled())\n      Log.debug(\"Received TQueueDequeue\" + tQueueDequeue.toString());\n\n    QueueDequeue queueDequeue = unwrap(tQueueDequeue);\n    DequeueResult result = this.opex.execute(queueDequeue);\n\n    if (Log.isDebugEnabled())\n      Log.debug(\"QueueDequeue result: \" + result);\n\n    TDequeueResult tResult = wrap(result);\n    helper.success();\n    return tResult;\n  }","commit_id":"9399b60e6d83d549105783e60c2d6a6325c2af88","url":"https://github.com/caskdata/cdap"},{"original_method":"@Override\n  public TQueueMeta getQueueMeta(TGetQueueMeta tGetQueueMeta)\n      throws TException {\n    if (Log.isDebugEnabled())\n      Log.debug(\"Received TGetQueueMeta: \" + tGetQueueMeta);\n    QueueAdmin.GetQueueMeta getQueueMeta = unwrap(tGetQueueMeta);\n    QueueAdmin.QueueMeta queueMeta = this.opex.execute(getQueueMeta);\n    if (Log.isDebugEnabled())\n      Log.debug(\"GetQueueMeta result: \" +\n          (queueMeta == null ? \"<null>\" : queueMeta.toString()));\n    return wrap(queueMeta);\n  }","id":16769,"modified_method":"@Override\n  public TQueueMeta getQueueMeta(TGetQueueMeta tGetQueueMeta)\n      throws TException {\n\n    MetricsHelper helper = newHelper(\n        Constants.METRIC_GETQUEUEMETA_REQUESTS,\n        Constants.METRIC_GETQUEUEMETA_LATENCY);\n\n    if (Log.isDebugEnabled())\n      Log.debug(\"Received TGetQueueMeta: \" + tGetQueueMeta);\n\n    QueueAdmin.GetQueueMeta getQueueMeta = unwrap(tGetQueueMeta);\n    QueueAdmin.QueueMeta queueMeta = this.opex.execute(getQueueMeta);\n\n    if (Log.isDebugEnabled())\n      Log.debug(\"GetQueueMeta result: \" +\n          (queueMeta == null ? \"<null>\" : queueMeta.toString()));\n\n    TQueueMeta tQueueMeta =  wrap(queueMeta);\n    helper.success();\n    return tQueueMeta;\n  }","commit_id":"9399b60e6d83d549105783e60c2d6a6325c2af88","url":"https://github.com/caskdata/cdap"},{"original_method":"@Override\n  public boolean increment(TIncrement tIncrement) throws TException {\n    if (Log.isDebugEnabled())\n      Log.debug(\"Received TIncrement: \" + tIncrement);\n    Increment increment = unwrap(tIncrement);\n    boolean success = this.opex.execute(increment);\n    if (Log.isDebugEnabled())\n      Log.debug(\"Increment result: \" + success);\n    return success;\n  }","id":16770,"modified_method":"@Override\n  public boolean increment(TIncrement tIncrement) throws TException {\n\n    MetricsHelper helper = newHelper(\n        Constants.METRIC_INCREMENT_REQUESTS,\n        Constants.METRIC_INCREMENT_LATENCY);\n\n    if (Log.isDebugEnabled())\n      Log.debug(\"Received TIncrement: \" + tIncrement);\n\n    Increment increment = unwrap(tIncrement);\n    boolean success = this.opex.execute(increment);\n\n    if (Log.isDebugEnabled())\n      Log.debug(\"Increment result: \" + success);\n\n    helper.finish(success);\n    return success;\n  }","commit_id":"9399b60e6d83d549105783e60c2d6a6325c2af88","url":"https://github.com/caskdata/cdap"},{"original_method":"@Override\n  public TOptionalBinary readKey(TReadKey tReadKey) throws TException {\n    if (Log.isDebugEnabled())\n      Log.debug(\"Received TReadKey: \" + tReadKey);\n    ReadKey readKey = unwrap(tReadKey);\n    byte[] result = this.opex.execute(readKey);\n    if (Log.isDebugEnabled())\n      Log.debug(\"ReadKey result: \"\n        + (result == null ? \"<null>\" : Arrays.toString(result)));\n    return wrapBinary(result);\n  }","id":16771,"modified_method":"@Override\n  public TOptionalBinary readKey(TReadKey tReadKey) throws TException {\n\n    MetricsHelper helper = newHelper(\n        Constants.METRIC_READKEY_REQUESTS,\n        Constants.METRIC_READKEY_LATENCY);\n\n    if (Log.isDebugEnabled())\n      Log.debug(\"Received TReadKey: \" + tReadKey);\n\n    ReadKey readKey = unwrap(tReadKey);\n    byte[] result = this.opex.execute(readKey);\n\n    if (Log.isDebugEnabled())\n      Log.debug(\"ReadKey result: \"\n        + (result == null ? \"<null>\" : Arrays.toString(result)));\n\n    TOptionalBinary tResult = wrapBinary(result);\n    helper.success();\n    return tResult;\n  }","commit_id":"9399b60e6d83d549105783e60c2d6a6325c2af88","url":"https://github.com/caskdata/cdap"},{"original_method":"@Override\n  public boolean queueAck(TQueueAck tQueueAck) throws TException {\n    if (Log.isDebugEnabled())\n      Log.debug(\"Received TQueueAck: \" + tQueueAck);\n    QueueAck queueAck = unwrap(tQueueAck);\n    boolean success = this.opex.execute(queueAck);\n    if (Log.isDebugEnabled())\n      Log.debug(\"QueueAck result: \" + success);\n    return success;\n  }","id":16772,"modified_method":"@Override\n  public boolean queueAck(TQueueAck tQueueAck) throws TException {\n\n    MetricsHelper helper = newHelper(\n        Constants.METRIC_ACK_REQUESTS,\n        Constants.METRIC_ACK_LATENCY);\n\n    if (Log.isDebugEnabled())\n      Log.debug(\"Received TQueueAck: \" + tQueueAck);\n\n    QueueAck queueAck = unwrap(tQueueAck);\n    boolean success = this.opex.execute(queueAck);\n\n    if (Log.isDebugEnabled())\n      Log.debug(\"QueueAck result: \" + success);\n\n    helper.finish(success);\n    return success;\n  }","commit_id":"9399b60e6d83d549105783e60c2d6a6325c2af88","url":"https://github.com/caskdata/cdap"},{"original_method":"@Override\n  public TBatchOperationResult batch(List<TWriteOperation> batch)\n      throws TBatchOperationException, TException {\n    if (Log.isDebugEnabled())\n      Log.debug(\"Received Batch\");\n    List<WriteOperation> writes = new ArrayList<WriteOperation>(batch.size());\n    for (TWriteOperation tWriteOp : batch) {\n      WriteOperation writeOp;\n      if (tWriteOp.isSetWrite())\n        writeOp = unwrap(tWriteOp.getWrite());\n      else if (tWriteOp.isSetDelet())\n        writeOp = unwrap(tWriteOp.getDelet());\n      else if (tWriteOp.isSetIncrement())\n        writeOp = unwrap(tWriteOp.getIncrement());\n      else if (tWriteOp.isSetCompareAndSwap())\n        writeOp = unwrap(tWriteOp.getCompareAndSwap());\n      else if (tWriteOp.isSetQueueEnqueue())\n        writeOp = new QueueEnqueue(tWriteOp.getQueueEnqueue().getQueueName(),\n            tWriteOp.getQueueEnqueue().getValue());\n      else if (tWriteOp.isSetQueueAck())\n        writeOp = unwrap(tWriteOp.getQueueAck());\n      else {\n        Log.error(\"Internal Error: Unkown TWriteOperation \"\n            + tWriteOp.toString() + \" in batch. Skipping.\");\n        continue;\n      }\n      if (Log.isDebugEnabled())\n        Log.debug(\"Operation in batch: \" + writeOp);\n      writes.add(writeOp);\n    }\n    BatchOperationResult result;\n    try {\n      result = this.opex.execute(writes);\n    } catch (BatchOperationException e) {\n      throw new TBatchOperationException(e.getMessage());\n    }\n    if (Log.isDebugEnabled())\n      Log.debug(\"Batch result: \" + result);\n    return new TBatchOperationResult(result.isSuccess(), result.getMessage());\n  }","id":16773,"modified_method":"@Override\n  public TBatchOperationResult batch(List<TWriteOperation> batch)\n      throws TBatchOperationException, TException {\n\n    MetricsHelper helper = newHelper(\n        Constants.METRIC_BATCH_REQUESTS,\n        Constants.METRIC_BATCH_LATENCY);\n\n    if (Log.isDebugEnabled())\n      Log.debug(\"Received Batch\");\n    List<WriteOperation> writes = new ArrayList<WriteOperation>(batch.size());\n    for (TWriteOperation tWriteOp : batch) {\n      WriteOperation writeOp;\n      if (tWriteOp.isSetWrite())\n        writeOp = unwrap(tWriteOp.getWrite());\n      else if (tWriteOp.isSetDelet())\n        writeOp = unwrap(tWriteOp.getDelet());\n      else if (tWriteOp.isSetIncrement())\n        writeOp = unwrap(tWriteOp.getIncrement());\n      else if (tWriteOp.isSetCompareAndSwap())\n        writeOp = unwrap(tWriteOp.getCompareAndSwap());\n      else if (tWriteOp.isSetQueueEnqueue())\n        writeOp = new QueueEnqueue(tWriteOp.getQueueEnqueue().getQueueName(),\n            tWriteOp.getQueueEnqueue().getValue());\n      else if (tWriteOp.isSetQueueAck())\n        writeOp = unwrap(tWriteOp.getQueueAck());\n      else {\n        Log.error(\"Internal Error: Unkown TWriteOperation \"\n            + tWriteOp.toString() + \" in batch. Skipping.\");\n        continue;\n      }\n      if (Log.isDebugEnabled())\n        Log.debug(\"Operation in batch: \" + writeOp);\n      writes.add(writeOp);\n    }\n    BatchOperationResult result;\n\n    try {\n      result = this.opex.execute(writes);\n    } catch (BatchOperationException e) {\n      throw new TBatchOperationException(e.getMessage());\n    }\n\n    if (Log.isDebugEnabled())\n      Log.debug(\"Batch result: \" + result);\n\n    TBatchOperationResult tResult = wrap(result);\n    helper.finish(result.isSuccess());\n    return tResult;\n  }","commit_id":"9399b60e6d83d549105783e60c2d6a6325c2af88","url":"https://github.com/caskdata/cdap"},{"original_method":"@Override\n  public void clearFabric(TClearFabric tClearFabric) throws TException {\n    if (Log.isDebugEnabled())\n      Log.debug(\"Received TClearFabric: \" + tClearFabric);\n    ClearFabric clearFabric = unwrap(tClearFabric);\n    this.opex.execute(clearFabric);\n    if (Log.isDebugEnabled())\n      Log.debug(\"ClearFabric completed.\");\n  }","id":16774,"modified_method":"@Override\n  public void clearFabric(TClearFabric tClearFabric) throws TException {\n\n    MetricsHelper helper = newHelper(\n        Constants.METRIC_CLEARFABRIC_REQUESTS,\n        Constants.METRIC_CLEARFABRIC_LATENCY);\n\n    if (Log.isDebugEnabled())\n      Log.debug(\"Received TClearFabric: \" + tClearFabric);\n\n    ClearFabric clearFabric = unwrap(tClearFabric);\n    this.opex.execute(clearFabric);\n\n    if (Log.isDebugEnabled())\n      Log.debug(\"ClearFabric completed.\");\n\n    helper.success();\n  }","commit_id":"9399b60e6d83d549105783e60c2d6a6325c2af88","url":"https://github.com/caskdata/cdap"},{"original_method":"@Override\n  public boolean delet(TDelete tDelete) throws TException {\n    if (Log.isDebugEnabled())\n      Log.debug(\"Received TDelete: \" + tDelete);\n    Delete delete = unwrap(tDelete);\n    boolean success = this.opex.execute(delete);\n    if (Log.isDebugEnabled())\n      Log.debug(\"Delete result: \" + success);\n    return success;\n  }","id":16775,"modified_method":"@Override\n  public boolean delet(TDelete tDelete) throws TException {\n\n    MetricsHelper helper = newHelper(\n        Constants.METRIC_DELETE_REQUESTS,\n        Constants.METRIC_DELETE_LATENCY);\n\n    if (Log.isDebugEnabled())\n      Log.debug(\"Received TDelete: \" + tDelete);\n\n    Delete delete = unwrap(tDelete);\n    boolean success = this.opex.execute(delete);\n\n    if (Log.isDebugEnabled())\n      Log.debug(\"Delete result: \" + success);\n\n    helper.finish(success);\n    return success;\n  }","commit_id":"9399b60e6d83d549105783e60c2d6a6325c2af88","url":"https://github.com/caskdata/cdap"},{"original_method":"@Override\n  public long getGroupId(TGetGroupId tGetGroupId) throws TException {\n    if (Log.isDebugEnabled())\n      Log.debug(\"Received TGetGroupID: \" + tGetGroupId);\n    QueueAdmin.GetGroupID getGroupID = unwrap(tGetGroupId);\n    long groupId = this.opex.execute(getGroupID);\n    if (Log.isDebugEnabled())\n      Log.debug(\"GetGroupID result: \" + groupId);\n    return groupId;\n  }","id":16776,"modified_method":"@Override\n  public long getGroupId(TGetGroupId tGetGroupId) throws TException {\n\n    MetricsHelper helper = newHelper(\n        Constants.METRIC_GETGROUPID_REQUESTS,\n        Constants.METRIC_GETGROUPID_LATENCY);\n\n    if (Log.isDebugEnabled())\n      Log.debug(\"Received TGetGroupID: \" + tGetGroupId);\n\n    QueueAdmin.GetGroupID getGroupID = unwrap(tGetGroupId);\n    long groupId = this.opex.execute(getGroupID);\n\n    if (Log.isDebugEnabled())\n      Log.debug(\"GetGroupID result: \" + groupId);\n\n    helper.success();\n    return groupId;\n  }","commit_id":"9399b60e6d83d549105783e60c2d6a6325c2af88","url":"https://github.com/caskdata/cdap"},{"original_method":"@Override\n  public boolean write(TWrite tWrite) throws TException {\n    if (Log.isDebugEnabled())\n      Log.debug(\"Received TWrite: \" + tWrite);\n    Write write = unwrap(tWrite);\n    boolean success = this.opex.execute(write);\n    if (Log.isDebugEnabled())\n      Log.debug(\"Write result: \" + success);\n    return success;\n  }","id":16777,"modified_method":"@Override\n  public boolean write(TWrite tWrite) throws TException {\n\n    MetricsHelper helper = newHelper(\n        Constants.METRIC_WRITE_REQUESTS,\n        Constants.METRIC_WRITE_LATENCY);\n\n    if (Log.isDebugEnabled())\n      Log.debug(\"Received TWrite: \" + tWrite);\n\n    Write write = unwrap(tWrite);\n    boolean success = this.opex.execute(write);\n\n    if (Log.isDebugEnabled())\n      Log.debug(\"Write result: \" + success);\n\n    helper.finish(success);\n    return success;\n  }","commit_id":"9399b60e6d83d549105783e60c2d6a6325c2af88","url":"https://github.com/caskdata/cdap"},{"original_method":"@Override\n  public TOptionalBinaryMap\n  readColumnRange(TReadColumnRange tReadColumnRange) throws TException {\n    if (Log.isDebugEnabled())\n      Log.debug(\"Received TReadColumnRange: \" + tReadColumnRange);\n    ReadColumnRange readColumnRange = unwrap(tReadColumnRange);\n    Map<byte[], byte[]> result = this.opex.execute(readColumnRange);\n    TOptionalBinaryMap tResult = wrapMap(result);\n    if (Log.isDebugEnabled())\n      Log.debug(\"ReadColumnRange result: \" + tResult);\n    return tResult;\n  }","id":16778,"modified_method":"@Override\n  public TOptionalBinaryMap\n  readColumnRange(TReadColumnRange tReadColumnRange) throws TException {\n\n    MetricsHelper helper = newHelper(\n        Constants.METRIC_READCOLUMNRANGE_REQUESTS,\n        Constants.METRIC_READCOLUMNRANGE_LATENCY);\n\n    if (Log.isDebugEnabled())\n      Log.debug(\"Received TReadColumnRange: \" + tReadColumnRange);\n\n    ReadColumnRange readColumnRange = unwrap(tReadColumnRange);\n    Map<byte[], byte[]> result = this.opex.execute(readColumnRange);\n    TOptionalBinaryMap tResult = wrapMap(result);\n\n    if (Log.isDebugEnabled())\n      Log.debug(\"ReadColumnRange result: \" + tResult);\n\n    helper.success();\n    return tResult;\n  }","commit_id":"9399b60e6d83d549105783e60c2d6a6325c2af88","url":"https://github.com/caskdata/cdap"},{"original_method":"@Override\n  public TOptionalBinaryList readAllKeys(TReadAllKeys tReadAllKeys)\n      throws TException {\n    if (Log.isDebugEnabled())\n      Log.debug(\"Received TReadAllKeys: \" + tReadAllKeys);\n    ReadAllKeys readAllKeys = unwrap(tReadAllKeys);\n    List<byte[]> result = this.opex.execute(readAllKeys);\n    TOptionalBinaryList tResult = wrapList(result);\n    if (Log.isDebugEnabled())\n      Log.debug(\"ReadAllKeys result: \" + tResult);\n    return tResult;\n  }","id":16779,"modified_method":"@Override\n  public TOptionalBinaryList readAllKeys(TReadAllKeys tReadAllKeys)\n      throws TException {\n\n    MetricsHelper helper = newHelper(\n        Constants.METRIC_READALLKEYS_REQUESTS,\n        Constants.METRIC_READALLKEYS_LATENCY);\n\n    if (Log.isDebugEnabled())\n      Log.debug(\"Received TReadAllKeys: \" + tReadAllKeys);\n\n    ReadAllKeys readAllKeys = unwrap(tReadAllKeys);\n    List<byte[]> result = this.opex.execute(readAllKeys);\n    TOptionalBinaryList tResult = wrapList(result);\n\n    if (Log.isDebugEnabled())\n      Log.debug(\"ReadAllKeys result: \" + tResult);\n\n    helper.success();\n    return tResult;\n  }","commit_id":"9399b60e6d83d549105783e60c2d6a6325c2af88","url":"https://github.com/caskdata/cdap"},{"original_method":"@Override\n  public boolean compareAndSwap(TCompareAndSwap tCompareAndSwap)\n      throws TException {\n    if (Log.isDebugEnabled())\n      Log.debug(\"Received TCompareAndSwap: \" + tCompareAndSwap);\n    CompareAndSwap compareAndSwap = unwrap(tCompareAndSwap);\n    boolean success = this.opex.execute(compareAndSwap);\n    if (Log.isDebugEnabled())\n      Log.debug(\"CompareAndSwap result: \" + success);\n    return success;\n  }","id":16780,"modified_method":"@Override\n  public boolean compareAndSwap(TCompareAndSwap tCompareAndSwap)\n      throws TException {\n\n    MetricsHelper helper = newHelper(\n        Constants.METRIC_COMPAREANDSWAP_REQUESTS,\n        Constants.METRIC_COMPAREANDSWAP_LATENCY);\n\n    if (Log.isDebugEnabled())\n      Log.debug(\"Received TCompareAndSwap: \" + tCompareAndSwap);\n\n    CompareAndSwap compareAndSwap = unwrap(tCompareAndSwap);\n    boolean success = this.opex.execute(compareAndSwap);\n\n    if (Log.isDebugEnabled())\n      Log.debug(\"CompareAndSwap result: \" + success);\n\n    helper.finish(success);\n    return success;\n  }","commit_id":"9399b60e6d83d549105783e60c2d6a6325c2af88","url":"https://github.com/caskdata/cdap"},{"original_method":"public static boolean contains(\n\t\t\tPermissionChecker permissionChecker, DLFileEntry fileEntry,\n\t\t\tString actionId)\n\t\tthrows PortalException, SystemException {\n\n\t\tDLFileVersion latestFileVersion =\n\t\t\tDLFileVersionLocalServiceUtil.getLatestFileVersion(\n\t\t\t\tfileEntry.getGroupId(), fileEntry.getFolderId(),\n\t\t\t\tfileEntry.getName());\n\n\t\tif (latestFileVersion.isPending()) {\n\t\t\tBoolean hasPermission = WorkflowPermissionUtil.hasPermission(\n\t\t\t\tpermissionChecker, fileEntry.getGroupId(),\n\t\t\t\tDLFileEntry.class.getName(), fileEntry.getFileEntryId(),\n\t\t\t\tactionId);\n\n\t\t\tif (hasPermission != null) {\n\t\t\t\treturn hasPermission.booleanValue();\n\t\t\t}\n\t\t}\n\n\t\tif (PropsValues.PERMISSIONS_VIEW_DYNAMIC_INHERITANCE) {\n\t\t\tif (fileEntry.getFolderId() !=\n\t\t\t\t\tDLFolderConstants.DEFAULT_PARENT_FOLDER_ID) {\n\n\t\t\t\tDLFolder folder = DLFolderLocalServiceUtil.getFolder(\n\t\t\t\t\tfileEntry.getFolderId());\n\n\t\t\t\tif (!DLFolderPermission.contains(\n\t\t\t\t\t\tpermissionChecker, folder, ActionKeys.ACCESS) &&\n\t\t\t\t\t!DLFolderPermission.contains(\n\t\t\t\t\t\tpermissionChecker, folder, ActionKeys.VIEW)) {\n\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (permissionChecker.hasOwnerPermission(\n\t\t\t\tfileEntry.getCompanyId(), DLFileEntry.class.getName(),\n\t\t\t\tfileEntry.getFileEntryId(), fileEntry.getUserId(), actionId)) {\n\n\t\t\treturn true;\n\t\t}\n\n\t\treturn permissionChecker.hasPermission(\n\t\t\tfileEntry.getGroupId(), DLFileEntry.class.getName(),\n\t\t\tfileEntry.getFileEntryId(), actionId);\n\t}","id":16781,"modified_method":"public static boolean contains(\n\t\t\tPermissionChecker permissionChecker, DLFileEntry fileEntry,\n\t\t\tString actionId)\n\t\tthrows PortalException, SystemException {\n\n\t\tBoolean hasPermission = StagingPermissionUtil.hasPermission(\n\t\t\tpermissionChecker, fileEntry.getGroupId(),\n\t\t\tDLFileEntry.class.getName(), fileEntry.getFileEntryId(),\n\t\t\tPortletKeys.DOCUMENT_LIBRARY, actionId);\n\n\t\tif (hasPermission != null) {\n\t\t\treturn hasPermission.booleanValue();\n\t\t}\n\n\t\tDLFileVersion latestFileVersion =\n\t\t\tDLFileVersionLocalServiceUtil.getLatestFileVersion(\n\t\t\t\tfileEntry.getGroupId(), fileEntry.getFolderId(),\n\t\t\t\tfileEntry.getName());\n\n\t\tif (latestFileVersion.isPending()) {\n\t\t\thasPermission = WorkflowPermissionUtil.hasPermission(\n\t\t\t\tpermissionChecker, fileEntry.getGroupId(),\n\t\t\t\tDLFileEntry.class.getName(), fileEntry.getFileEntryId(),\n\t\t\t\tactionId);\n\n\t\t\tif (hasPermission != null) {\n\t\t\t\treturn hasPermission.booleanValue();\n\t\t\t}\n\t\t}\n\n\t\tif (PropsValues.PERMISSIONS_VIEW_DYNAMIC_INHERITANCE) {\n\t\t\tif (fileEntry.getFolderId() !=\n\t\t\t\t\tDLFolderConstants.DEFAULT_PARENT_FOLDER_ID) {\n\n\t\t\t\tDLFolder folder = DLFolderLocalServiceUtil.getFolder(\n\t\t\t\t\tfileEntry.getFolderId());\n\n\t\t\t\tif (!DLFolderPermission.contains(\n\t\t\t\t\t\tpermissionChecker, folder, ActionKeys.ACCESS) &&\n\t\t\t\t\t!DLFolderPermission.contains(\n\t\t\t\t\t\tpermissionChecker, folder, ActionKeys.VIEW)) {\n\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (permissionChecker.hasOwnerPermission(\n\t\t\t\tfileEntry.getCompanyId(), DLFileEntry.class.getName(),\n\t\t\t\tfileEntry.getFileEntryId(), fileEntry.getUserId(), actionId)) {\n\n\t\t\treturn true;\n\t\t}\n\n\t\treturn permissionChecker.hasPermission(\n\t\t\tfileEntry.getGroupId(), DLFileEntry.class.getName(),\n\t\t\tfileEntry.getFileEntryId(), actionId);\n\t}","commit_id":"9c78fceadc9f4b893e70e3e1c371ffd3324f89d7","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public static boolean contains(\n\t\tPermissionChecker permissionChecker, DLFileShortcut fileShortcut,\n\t\tString actionId) {\n\n\t\tif (permissionChecker.hasOwnerPermission(\n\t\t\t\tfileShortcut.getCompanyId(), DLFileShortcut.class.getName(),\n\t\t\t\tfileShortcut.getFileShortcutId(), fileShortcut.getUserId(),\n\t\t\t\tactionId)) {\n\n\t\t\treturn true;\n\t\t}\n\n\t\treturn permissionChecker.hasPermission(\n\t\t\tfileShortcut.getGroupId(), DLFileShortcut.class.getName(),\n\t\t\tfileShortcut.getFileShortcutId(), actionId);\n\t}","id":16782,"modified_method":"public static boolean contains(\n\t\tPermissionChecker permissionChecker, DLFileShortcut fileShortcut,\n\t\tString actionId) {\n\n\t\tBoolean hasPermission = StagingPermissionUtil.hasPermission(\n\t\t\tpermissionChecker, fileShortcut.getGroupId(),\n\t\t\tDLFileShortcut.class.getName(), fileShortcut.getFileShortcutId(),\n\t\t\tPortletKeys.DOCUMENT_LIBRARY, actionId);\n\n\t\tif (hasPermission != null) {\n\t\t\treturn hasPermission.booleanValue();\n\t\t}\n\n\t\tif (permissionChecker.hasOwnerPermission(\n\t\t\t\tfileShortcut.getCompanyId(), DLFileShortcut.class.getName(),\n\t\t\t\tfileShortcut.getFileShortcutId(), fileShortcut.getUserId(),\n\t\t\t\tactionId)) {\n\n\t\t\treturn true;\n\t\t}\n\n\t\treturn permissionChecker.hasPermission(\n\t\t\tfileShortcut.getGroupId(), DLFileShortcut.class.getName(),\n\t\t\tfileShortcut.getFileShortcutId(), actionId);\n\t}","commit_id":"9c78fceadc9f4b893e70e3e1c371ffd3324f89d7","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public static boolean contains(\n\t\t\tPermissionChecker permissionChecker, DLFolder folder,\n\t\t\tString actionId)\n\t\tthrows PortalException, SystemException {\n\n\t\tif (actionId.equals(ActionKeys.ADD_FOLDER)) {\n\t\t\tactionId = ActionKeys.ADD_SUBFOLDER;\n\t\t}\n\n\t\tlong folderId = folder.getFolderId();\n\n\t\tif (actionId.equals(ActionKeys.VIEW)) {\n\t\t\twhile (folderId != DLFolderConstants.DEFAULT_PARENT_FOLDER_ID) {\n\t\t\t\tfolder = DLFolderLocalServiceUtil.getFolder(folderId);\n\n\t\t\t\tfolderId = folder.getParentFolderId();\n\n\t\t\t\tif (!permissionChecker.hasOwnerPermission(\n\t\t\t\t\t\tfolder.getCompanyId(), DLFolder.class.getName(),\n\t\t\t\t\t\tfolder.getFolderId(), folder.getUserId(), actionId) &&\n\t\t\t\t\t!permissionChecker.hasPermission(\n\t\t\t\t\t\tfolder.getGroupId(), DLFolder.class.getName(),\n\t\t\t\t\t\tfolder.getFolderId(), actionId)) {\n\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\tif (!PropsValues.PERMISSIONS_VIEW_DYNAMIC_INHERITANCE) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn true;\n\t\t}\n\t\telse {\n\t\t\twhile (folderId != DLFolderConstants.DEFAULT_PARENT_FOLDER_ID) {\n\t\t\t\tfolder = DLFolderLocalServiceUtil.getFolder(folderId);\n\n\t\t\t\tfolderId = folder.getParentFolderId();\n\n\t\t\t\tif (permissionChecker.hasOwnerPermission(\n\t\t\t\t\t\tfolder.getCompanyId(), DLFolder.class.getName(),\n\t\t\t\t\t\tfolder.getFolderId(), folder.getUserId(), actionId)) {\n\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\n\t\t\t\tif (permissionChecker.hasPermission(\n\t\t\t\t\t\tfolder.getGroupId(), DLFolder.class.getName(),\n\t\t\t\t\t\tfolder.getFolderId(), actionId)) {\n\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn false;\n\t\t}\n\t}","id":16783,"modified_method":"public static boolean contains(\n\t\t\tPermissionChecker permissionChecker, DLFolder folder,\n\t\t\tString actionId)\n\t\tthrows PortalException, SystemException {\n\n\t\tif (actionId.equals(ActionKeys.ADD_FOLDER)) {\n\t\t\tactionId = ActionKeys.ADD_SUBFOLDER;\n\t\t}\n\n\t\tBoolean hasPermission = StagingPermissionUtil.hasPermission(\n\t\t\tpermissionChecker, folder.getGroupId(), DLFolder.class.getName(),\n\t\t\tfolder.getFolderId(), PortletKeys.DOCUMENT_LIBRARY, actionId);\n\n\t\tif (hasPermission != null) {\n\t\t\treturn hasPermission.booleanValue();\n\t\t}\n\n\t\tlong folderId = folder.getFolderId();\n\n\t\tif (actionId.equals(ActionKeys.VIEW)) {\n\t\t\twhile (folderId != DLFolderConstants.DEFAULT_PARENT_FOLDER_ID) {\n\t\t\t\tfolder = DLFolderLocalServiceUtil.getFolder(folderId);\n\n\t\t\t\tfolderId = folder.getParentFolderId();\n\n\t\t\t\tif (!permissionChecker.hasOwnerPermission(\n\t\t\t\t\t\tfolder.getCompanyId(), DLFolder.class.getName(),\n\t\t\t\t\t\tfolder.getFolderId(), folder.getUserId(), actionId) &&\n\t\t\t\t\t!permissionChecker.hasPermission(\n\t\t\t\t\t\tfolder.getGroupId(), DLFolder.class.getName(),\n\t\t\t\t\t\tfolder.getFolderId(), actionId)) {\n\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\tif (!PropsValues.PERMISSIONS_VIEW_DYNAMIC_INHERITANCE) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn true;\n\t\t}\n\t\telse {\n\t\t\twhile (folderId != DLFolderConstants.DEFAULT_PARENT_FOLDER_ID) {\n\t\t\t\tfolder = DLFolderLocalServiceUtil.getFolder(folderId);\n\n\t\t\t\tfolderId = folder.getParentFolderId();\n\n\t\t\t\tif (permissionChecker.hasOwnerPermission(\n\t\t\t\t\t\tfolder.getCompanyId(), DLFolder.class.getName(),\n\t\t\t\t\t\tfolder.getFolderId(), folder.getUserId(), actionId)) {\n\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\n\t\t\t\tif (permissionChecker.hasPermission(\n\t\t\t\t\t\tfolder.getGroupId(), DLFolder.class.getName(),\n\t\t\t\t\t\tfolder.getFolderId(), actionId)) {\n\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn false;\n\t\t}\n\t}","commit_id":"9c78fceadc9f4b893e70e3e1c371ffd3324f89d7","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public static boolean contains(\n\t\tPermissionChecker permissionChecker, long groupId, String actionId) {\n\n\t\treturn permissionChecker.hasPermission(\n\t\t\tgroupId, \"com.liferay.portlet.documentlibrary\", groupId, actionId);\n\t}","id":16784,"modified_method":"public static boolean contains(\n\t\tPermissionChecker permissionChecker, long groupId, String actionId) {\n\n\t\tBoolean hasPermission = StagingPermissionUtil.hasPermission(\n\t\t\tpermissionChecker, groupId, _CLASS_NAME, groupId,\n\t\t\tPortletKeys.DOCUMENT_LIBRARY, actionId);\n\n\t\tif (hasPermission != null) {\n\t\t\treturn hasPermission.booleanValue();\n\t\t}\n\n\t\treturn permissionChecker.hasPermission(\n\t\t\tgroupId, _CLASS_NAME, groupId, actionId);\n\t}","commit_id":"9c78fceadc9f4b893e70e3e1c371ffd3324f89d7","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public static boolean contains(\n\t\tPermissionChecker permissionChecker, BlogsEntry entry,\n\t\tString actionId) {\n\n\t\tif (entry.isPending()) {\n\t\t\tBoolean hasPermission = WorkflowPermissionUtil.hasPermission(\n\t\t\t\tpermissionChecker, entry.getGroupId(),\n\t\t\t\tBlogsEntry.class.getName(), entry.getEntryId(), actionId);\n\n\t\t\tif (hasPermission != null) {\n\t\t\t\treturn hasPermission.booleanValue();\n\t\t\t}\n\t\t}\n\n\t\tif (permissionChecker.hasOwnerPermission(\n\t\t\t\tentry.getCompanyId(), BlogsEntry.class.getName(),\n\t\t\t\tentry.getEntryId(), entry.getUserId(), actionId)) {\n\n\t\t\treturn true;\n\t\t}\n\n\t\treturn permissionChecker.hasPermission(\n\t\t\tentry.getGroupId(), BlogsEntry.class.getName(), entry.getEntryId(),\n\t\t\tactionId);\n\t}","id":16785,"modified_method":"public static boolean contains(\n\t\tPermissionChecker permissionChecker, BlogsEntry entry,\n\t\tString actionId) {\n\n\t\tBoolean hasPermission = StagingPermissionUtil.hasPermission(\n\t\t\tpermissionChecker, entry.getGroupId(), BlogsEntry.class.getName(),\n\t\t\tentry.getEntryId(), PortletKeys.BLOGS, actionId);\n\n\t\tif (hasPermission != null) {\n\t\t\treturn hasPermission.booleanValue();\n\t\t}\n\n\t\tif (entry.isPending()) {\n\t\t\thasPermission = WorkflowPermissionUtil.hasPermission(\n\t\t\t\tpermissionChecker, entry.getGroupId(),\n\t\t\t\tBlogsEntry.class.getName(), entry.getEntryId(), actionId);\n\n\t\t\tif (hasPermission != null) {\n\t\t\t\treturn hasPermission.booleanValue();\n\t\t\t}\n\t\t}\n\n\t\tif (permissionChecker.hasOwnerPermission(\n\t\t\t\tentry.getCompanyId(), BlogsEntry.class.getName(),\n\t\t\t\tentry.getEntryId(), entry.getUserId(), actionId)) {\n\n\t\t\treturn true;\n\t\t}\n\n\t\treturn permissionChecker.hasPermission(\n\t\t\tentry.getGroupId(), BlogsEntry.class.getName(), entry.getEntryId(),\n\t\t\tactionId);\n\t}","commit_id":"cd9ddb1ab66e49c97f5616d82ec9f95afe6785a6","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public static boolean contains(\n\t\tPermissionChecker permissionChecker, long groupId, String actionId) {\n\n\t\treturn permissionChecker.hasPermission(\n\t\t\tgroupId, \"com.liferay.portlet.blogs\", groupId, actionId);\n\t}","id":16786,"modified_method":"public static boolean contains(\n\t\tPermissionChecker permissionChecker, long groupId, String actionId) {\n\n\t\tBoolean hasPermission = StagingPermissionUtil.hasPermission(\n\t\t\tpermissionChecker, groupId, \"com.liferay.portlet.blogs\", groupId,\n\t\t\tPortletKeys.BLOGS, actionId);\n\n\t\tif (hasPermission != null) {\n\t\t\treturn hasPermission.booleanValue();\n\t\t}\n\n\t\treturn permissionChecker.hasPermission(\n\t\t\tgroupId, \"com.liferay.portlet.blogs\", groupId, actionId);\n\t}","commit_id":"cd9ddb1ab66e49c97f5616d82ec9f95afe6785a6","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public static boolean contains(\n\t\tPermissionChecker permissionChecker, JournalArticle article,\n\t\tString actionId) {\n\n\t\tif (article.isPending()) {\n\t\t\tBoolean hasPermission = WorkflowPermissionUtil.hasPermission(\n\t\t\t\tpermissionChecker, article.getGroupId(),\n\t\t\t\tJournalArticle.class.getName(), article.getResourcePrimKey(),\n\t\t\t\tactionId);\n\n\t\t\tif (hasPermission != null) {\n\t\t\t\treturn hasPermission.booleanValue();\n\t\t\t}\n\t\t}\n\n\t\tif (permissionChecker.hasOwnerPermission(\n\t\t\t\tarticle.getCompanyId(), JournalArticle.class.getName(),\n\t\t\t\tarticle.getResourcePrimKey(), article.getUserId(), actionId)) {\n\n\t\t\treturn true;\n\t\t}\n\n\t\treturn permissionChecker.hasPermission(\n\t\t\tarticle.getGroupId(), JournalArticle.class.getName(),\n\t\t\tarticle.getResourcePrimKey(), actionId);\n\t}","id":16787,"modified_method":"public static boolean contains(\n\t\tPermissionChecker permissionChecker, JournalArticle article,\n\t\tString actionId) {\n\n\t\tBoolean hasPermission = StagingPermissionUtil.hasPermission(\n\t\t\tpermissionChecker, article.getGroupId(), BlogsEntry.class.getName(),\n\t\t\tarticle.getResourcePrimKey(), PortletKeys.JOURNAL,\n\t\t\tactionId);\n\n\t\tif (hasPermission != null) {\n\t\t\treturn hasPermission.booleanValue();\n\t\t}\n\n\t\tif (article.isPending()) {\n\t\t\thasPermission = WorkflowPermissionUtil.hasPermission(\n\t\t\t\tpermissionChecker, article.getGroupId(),\n\t\t\t\tJournalArticle.class.getName(), article.getResourcePrimKey(),\n\t\t\t\tactionId);\n\n\t\t\tif (hasPermission != null) {\n\t\t\t\treturn hasPermission.booleanValue();\n\t\t\t}\n\t\t}\n\n\t\tif (permissionChecker.hasOwnerPermission(\n\t\t\t\tarticle.getCompanyId(), JournalArticle.class.getName(),\n\t\t\t\tarticle.getResourcePrimKey(), article.getUserId(), actionId)) {\n\n\t\t\treturn true;\n\t\t}\n\n\t\treturn permissionChecker.hasPermission(\n\t\t\tarticle.getGroupId(), JournalArticle.class.getName(),\n\t\t\tarticle.getResourcePrimKey(), actionId);\n\t}","commit_id":"0aba819141c098a93b792cc03afed926108dfa71","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public static boolean contains(\n\t\tPermissionChecker permissionChecker, long groupId, String actionId) {\n\n\t\treturn permissionChecker.hasPermission(\n\t\t\tgroupId, \"com.liferay.portlet.journal\", groupId, actionId);\n\t}","id":16788,"modified_method":"public static boolean contains(\n\t\tPermissionChecker permissionChecker, long groupId, String actionId) {\n\n\t\tBoolean hasPermission = StagingPermissionUtil.hasPermission(\n\t\t\tpermissionChecker, groupId, _CLASS_NAME, groupId,\n\t\t\tPortletKeys.JOURNAL, actionId);\n\n\t\tif (hasPermission != null) {\n\t\t\treturn hasPermission.booleanValue();\n\t\t}\n\n\t\treturn permissionChecker.hasPermission(\n\t\t\tgroupId, _CLASS_NAME, groupId, actionId);\n\t}","commit_id":"0aba819141c098a93b792cc03afed926108dfa71","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public boolean contains(\n\t\t\tPermissionChecker permissionChecker, long groupId, long plid,\n\t\t\tString portletId, String actionId, boolean strict)\n\t\tthrows PortalException, SystemException {\n\n\t\tString name = null;\n\t\tString primKey = null;\n\n\t\tif (plid > 0) {\n\t\t\tLayout layout = LayoutLocalServiceUtil.getLayout(plid);\n\n\t\t\tgroupId = layout.getGroupId();\n\t\t\tname = PortletConstants.getRootPortletId(portletId);\n\t\t\tprimKey = getPrimaryKey(plid, portletId);\n\n\t\t\tif ((layout.isPrivateLayout() &&\n\t\t\t\t !PropsValues.LAYOUT_USER_PRIVATE_LAYOUTS_MODIFIABLE) ||\n\t\t\t\t(layout.isPublicLayout() &&\n\t\t\t\t !PropsValues.LAYOUT_USER_PUBLIC_LAYOUTS_MODIFIABLE)) {\n\n\t\t\t\tif (actionId.equals(ActionKeys.CONFIGURATION)) {\n\t\t\t\t\tGroup group = GroupLocalServiceUtil.getGroup(\n\t\t\t\t\t\tlayout.getGroupId());\n\n\t\t\t\t\tif (group.isUser()) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (actionId.equals(ActionKeys.VIEW)) {\n\t\t\t\tGroup group = GroupLocalServiceUtil.getGroup(\n\t\t\t\t\tlayout.getGroupId());\n\n\t\t\t\tif (group.isControlPanel()) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!strict) {\n\t\t\t\tif (LayoutPermissionUtil.contains(\n\t\t\t\t\t\tpermissionChecker, groupId, layout.isPrivateLayout(),\n\t\t\t\t\t\tlayout.getLayoutId(), ActionKeys.UPDATE) &&\n\t\t\t\t\thasLayoutManagerPermission(portletId, actionId)) {\n\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tname = portletId;\n\t\t\tprimKey = portletId;\n\t\t}\n\n\t\treturn permissionChecker.hasPermission(\n\t\t\tgroupId, name, primKey, actionId);\n\t}","id":16789,"modified_method":"public boolean contains(\n\t\t\tPermissionChecker permissionChecker, long groupId, long plid,\n\t\t\tString portletId, String actionId, boolean strict)\n\t\tthrows PortalException, SystemException {\n\n\t\tString name = null;\n\t\tString primKey = null;\n\n\t\tif (plid > 0) {\n\t\t\tLayout layout = LayoutLocalServiceUtil.getLayout(plid);\n\n\t\t\tgroupId = layout.getGroupId();\n\t\t\tname = PortletConstants.getRootPortletId(portletId);\n\t\t\tprimKey = getPrimaryKey(plid, portletId);\n\n\t\t\tBoolean hasPermission = StagingPermissionUtil.hasPermission(\n\t\t\t\tpermissionChecker, groupId, name, groupId,\n\t\t\t\tname, actionId);\n\n\t\t\tif (hasPermission != null) {\n\t\t\t\treturn hasPermission.booleanValue();\n\t\t\t}\n\n\t\t\tif ((layout.isPrivateLayout() &&\n\t\t\t\t !PropsValues.LAYOUT_USER_PRIVATE_LAYOUTS_MODIFIABLE) ||\n\t\t\t\t(layout.isPublicLayout() &&\n\t\t\t\t !PropsValues.LAYOUT_USER_PUBLIC_LAYOUTS_MODIFIABLE)) {\n\n\t\t\t\tif (actionId.equals(ActionKeys.CONFIGURATION)) {\n\t\t\t\t\tGroup group = GroupLocalServiceUtil.getGroup(\n\t\t\t\t\t\tlayout.getGroupId());\n\n\t\t\t\t\tif (group.isUser()) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (actionId.equals(ActionKeys.VIEW)) {\n\t\t\t\tGroup group = GroupLocalServiceUtil.getGroup(\n\t\t\t\t\tlayout.getGroupId());\n\n\t\t\t\tif (group.isControlPanel()) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!strict) {\n\t\t\t\tif (LayoutPermissionUtil.contains(\n\t\t\t\t\t\tpermissionChecker, groupId, layout.isPrivateLayout(),\n\t\t\t\t\t\tlayout.getLayoutId(), ActionKeys.UPDATE) &&\n\t\t\t\t\thasLayoutManagerPermission(portletId, actionId)) {\n\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tname = portletId;\n\t\t\tprimKey = portletId;\n\t\t}\n\n\t\treturn permissionChecker.hasPermission(\n\t\t\tgroupId, name, primKey, actionId);\n\t}","commit_id":"0aba819141c098a93b792cc03afed926108dfa71","url":"https://github.com/liferay/liferay-portal"},{"original_method":"protected void sendClosest(Hash key, Set<Hash> routerHashes, Hash toPeer, TunnelId replyTunnel) {\n        if (_log.shouldLog(Log.DEBUG))\n            _log.debug(\"Sending closest routers to key \" + key.toBase64() + \": # peers = \" \n                       + routerHashes.size() + \" tunnel \" + replyTunnel);\n        DatabaseSearchReplyMessage msg = new DatabaseSearchReplyMessage(getContext());\n        msg.setFromHash(getContext().routerHash());\n        msg.setSearchKey(key);\n        int i = 0;\n        for (Hash h : routerHashes) {\n            msg.addReply(h);\n            if (++i >= MAX_ROUTERS_RETURNED)\n                break;\n        }\n        getContext().statManager().addRateData(\"netDb.lookupsHandled\", 1, 0);\n        sendMessage(msg, toPeer, replyTunnel); // should this go via garlic messages instead?\n    }","id":16790,"modified_method":"protected void sendClosest(Hash key, Set<Hash> routerHashes, Hash toPeer, TunnelId replyTunnel) {\n        if (_log.shouldLog(Log.DEBUG))\n            _log.debug(\"Sending closest routers to key \" + key + \": # peers = \" \n                       + routerHashes.size() + \" tunnel \" + replyTunnel);\n        DatabaseSearchReplyMessage msg = new DatabaseSearchReplyMessage(getContext());\n        msg.setFromHash(getContext().routerHash());\n        msg.setSearchKey(key);\n        int i = 0;\n        for (Hash h : routerHashes) {\n            msg.addReply(h);\n            if (++i >= MAX_ROUTERS_RETURNED)\n                break;\n        }\n        getContext().statManager().addRateData(\"netDb.lookupsHandled\", 1, 0);\n        sendMessage(msg, toPeer, replyTunnel); // should this go via garlic messages instead?\n    }","commit_id":"67beebf859e2078c014a203e3285f64958fb3299","url":"https://github.com/i2p/i2p.i2p"},{"original_method":"public void runJob() {\n        if (_log.shouldLog(Log.DEBUG))\n            _log.debug(\"Handling database lookup message for \" + _message.getSearchKey());\n\n        Hash fromKey = _message.getFrom();\n\n        if (_log.shouldLog(Log.DEBUG)) {\n            if (_message.getReplyTunnel() != null)\n                _log.debug(\"dbLookup received with replies going to \" + fromKey \n                          + \" (tunnel \" + _message.getReplyTunnel() + \")\");\n        }\n\n        // If we are hidden we should not get queries, log and return\n        if (getContext().router().isHidden()) {\n            if (_log.shouldLog(Log.ERROR)) {\n                _log.error(\"Uninvited dbLookup received with replies going to \" + fromKey\n                           + \" (tunnel \" + _message.getReplyTunnel() + \")\");\n            }\n            return;\n        }\n\n        // TODO only look up once, then check type\n        LeaseSet ls = getContext().netDb().lookupLeaseSetLocally(_message.getSearchKey());\n        if (ls != null) {\n            // We have to be very careful here to decide whether or not to send out the leaseSet,\n            // to avoid anonymity vulnerabilities.\n            // As this is complex, lots of comments follow...\n\n            boolean isLocal = getContext().clientManager().isLocal(ls.getDestination());\n            boolean shouldPublishLocal = isLocal && getContext().clientManager().shouldPublishLeaseSet(_message.getSearchKey());\n        \n            // Only answer a request for a LeaseSet if it has been published\n            // to us, or, if its local, if we would have published to ourselves\n\n            // answerAllQueries: We are floodfill\n            // getReceivedAsPublished:\n            //    false for local\n            //    false for received over a tunnel\n            //    false for received in response to our lookups\n            //    true for received in a DatabaseStoreMessage unsolicited\n            if (ls.getReceivedAsPublished()) {\n                // Answer anything that was stored to us directly\n                // (i.e. \"received as published\" - not the result of a query, or received\n                // over a client tunnel).\n                // This is probably because we are floodfill, but also perhaps we used to be floodfill,\n                // so we don't check the answerAllQueries() flag.\n                // Local leasesets are not handled here\n                if (_log.shouldLog(Log.INFO))\n                    _log.info(\"We have the published LS \" + _message.getSearchKey().toBase64() + \", answering query\");\n                getContext().statManager().addRateData(\"netDb.lookupsMatchedReceivedPublished\", 1, 0);\n                sendData(_message.getSearchKey(), ls, fromKey, _message.getReplyTunnel());\n            } else if (shouldPublishLocal && answerAllQueries()) {\n                // We are floodfill, and this is our local leaseset, and we publish it.\n                // Only send it out if it is in our estimated keyspace.\n                // For this, we do NOT use their dontInclude list as it can't be trusted\n                // (i.e. it could mess up the closeness calculation)\n                Set<Hash> closestHashes = getContext().netDb().findNearestRouters(_message.getSearchKey(), \n                                                                            CLOSENESS_THRESHOLD, null);\n                if (weAreClosest(closestHashes)) {\n                    // It's in our keyspace, so give it to them\n                    if (_log.shouldLog(Log.INFO))\n                        _log.info(\"We have local LS \" + _message.getSearchKey().toBase64() + \", answering query, in our keyspace\");\n                    getContext().statManager().addRateData(\"netDb.lookupsMatchedLocalClosest\", 1, 0);\n                    sendData(_message.getSearchKey(), ls, fromKey, _message.getReplyTunnel());\n                } else {\n                    // Lie, pretend we don't have it\n                    if (_log.shouldLog(Log.INFO))\n                        _log.info(\"We have local LS \" + _message.getSearchKey().toBase64() + \", NOT answering query, out of our keyspace\");\n                    getContext().statManager().addRateData(\"netDb.lookupsMatchedLocalNotClosest\", 1, 0);\n                    Set<Hash> routerHashSet = getNearestRouters();\n                    sendClosest(_message.getSearchKey(), routerHashSet, fromKey, _message.getReplyTunnel());\n                }\n            } else {\n                // It was not published to us (we looked it up, for example)\n                // or it's local and we aren't floodfill,\n                // or it's local and we don't publish it.\n                // Lie, pretend we don't have it\n                if (_log.shouldLog(Log.INFO))\n                    _log.info(\"We have LS \" + _message.getSearchKey().toBase64() +\n                               \", NOT answering query - local? \" + isLocal + \" shouldPublish? \" + shouldPublishLocal +\n                               \" RAP? \" + ls.getReceivedAsPublished() + \" RAR? \" + ls.getReceivedAsReply());\n                getContext().statManager().addRateData(\"netDb.lookupsMatchedRemoteNotClosest\", 1, 0);\n                Set<Hash> routerHashSet = getNearestRouters();\n                sendClosest(_message.getSearchKey(), routerHashSet, fromKey, _message.getReplyTunnel());\n            }\n        } else {\n            RouterInfo info = getContext().netDb().lookupRouterInfoLocally(_message.getSearchKey());\n            if ( (info != null) && (info.isCurrent(EXPIRE_DELAY)) ) {\n                if ( (info.getIdentity().isHidden()) || (isUnreachable(info) && !publishUnreachable()) ) {\n                    if (_log.shouldLog(Log.DEBUG))\n                        _log.debug(\"Not answering a query for a netDb peer who isn't reachable\");\n                    Set<Hash> us = new HashSet<Hash>(1);\n                    us.add(getContext().routerHash());\n                    sendClosest(_message.getSearchKey(), us, fromKey, _message.getReplyTunnel());\n                //} else if (info.isHidden()) {\n                //    // Don't return hidden nodes\n                //    ERR: we don't want to explicitly reject lookups for hidden nodes, since they\n                //         may have just sent the hidden mode to only us and bundled a lookup with\n                //         a payload targetting some hidden destination (and if we refused to answer,\n                //         yet answered the bundled data message [e.g. HTTP GET], they'd know that\n                //         *we* were hosting that destination).  To operate safely,\n                //         perhaps we should refuse to honor lookups bundled down client tunnels?\n                } else {\n                    // send that routerInfo to the _message.getFromHash peer\n                    if (_log.shouldLog(Log.DEBUG))\n                        _log.debug(\"We do have key \" + _message.getSearchKey().toBase64() \n                                   + \" locally as a router info.  sending to \" + fromKey.toBase64());\n                    sendData(_message.getSearchKey(), info, fromKey, _message.getReplyTunnel());\n                }\n            } else {\n                // not found locally - return closest peer hashes\n                Set<Hash> routerHashSet = getNearestRouters();\n\n                // ERR: see above\n                // // Remove hidden nodes from set..\n                // for (Iterator iter = routerInfoSet.iterator(); iter.hasNext();) {\n                //     RouterInfo peer = (RouterInfo)iter.next();\n                //     if (peer.isHidden()) {\n                //         iter.remove();\n                //     }\n                // }\n\n                if (_log.shouldLog(Log.DEBUG))\n                    _log.debug(\"We do not have key \" + _message.getSearchKey().toBase64() + \n                               \" locally.  sending back \" + routerHashSet.size() + \" peers to \" + fromKey.toBase64());\n                sendClosest(_message.getSearchKey(), routerHashSet, fromKey, _message.getReplyTunnel());\n            }\n        }\n    }","id":16791,"modified_method":"public void runJob() {\n        if (_log.shouldLog(Log.DEBUG))\n            _log.debug(\"Handling database lookup message for \" + _message.getSearchKey());\n\n        Hash fromKey = _message.getFrom();\n\n        if (_log.shouldLog(Log.DEBUG)) {\n            if (_message.getReplyTunnel() != null)\n                _log.debug(\"dbLookup received with replies going to \" + fromKey \n                          + \" (tunnel \" + _message.getReplyTunnel() + \")\");\n        }\n\n        // If we are hidden we should not get queries, log and return\n        if (getContext().router().isHidden()) {\n            if (_log.shouldLog(Log.ERROR)) {\n                _log.error(\"Uninvited dbLookup received with replies going to \" + fromKey\n                           + \" (tunnel \" + _message.getReplyTunnel() + \")\");\n            }\n            return;\n        }\n\n        // only lookup once, then cast to correct type\n        DatabaseEntry dbe = getContext().netDb().lookupLocally(_message.getSearchKey());\n        if (dbe != null && dbe.getType() == DatabaseEntry.KEY_TYPE_LEASESET) {\n            LeaseSet ls = (LeaseSet) dbe;\n            // We have to be very careful here to decide whether or not to send out the leaseSet,\n            // to avoid anonymity vulnerabilities.\n            // As this is complex, lots of comments follow...\n\n            boolean isLocal = getContext().clientManager().isLocal(ls.getDestination());\n            boolean shouldPublishLocal = isLocal && getContext().clientManager().shouldPublishLeaseSet(_message.getSearchKey());\n        \n            // Only answer a request for a LeaseSet if it has been published\n            // to us, or, if its local, if we would have published to ourselves\n\n            // answerAllQueries: We are floodfill\n            // getReceivedAsPublished:\n            //    false for local\n            //    false for received over a tunnel\n            //    false for received in response to our lookups\n            //    true for received in a DatabaseStoreMessage unsolicited\n            if (ls.getReceivedAsPublished()) {\n                // Answer anything that was stored to us directly\n                // (i.e. \"received as published\" - not the result of a query, or received\n                // over a client tunnel).\n                // This is probably because we are floodfill, but also perhaps we used to be floodfill,\n                // so we don't check the answerAllQueries() flag.\n                // Local leasesets are not handled here\n                if (_log.shouldLog(Log.INFO))\n                    _log.info(\"We have the published LS \" + _message.getSearchKey() + \", answering query\");\n                getContext().statManager().addRateData(\"netDb.lookupsMatchedReceivedPublished\", 1, 0);\n                sendData(_message.getSearchKey(), ls, fromKey, _message.getReplyTunnel());\n            } else if (shouldPublishLocal && answerAllQueries()) {\n                // We are floodfill, and this is our local leaseset, and we publish it.\n                // Only send it out if it is in our estimated keyspace.\n                // For this, we do NOT use their dontInclude list as it can't be trusted\n                // (i.e. it could mess up the closeness calculation)\n                Set<Hash> closestHashes = getContext().netDb().findNearestRouters(_message.getSearchKey(), \n                                                                            CLOSENESS_THRESHOLD, null);\n                if (weAreClosest(closestHashes)) {\n                    // It's in our keyspace, so give it to them\n                    if (_log.shouldLog(Log.INFO))\n                        _log.info(\"We have local LS \" + _message.getSearchKey() + \", answering query, in our keyspace\");\n                    getContext().statManager().addRateData(\"netDb.lookupsMatchedLocalClosest\", 1, 0);\n                    sendData(_message.getSearchKey(), ls, fromKey, _message.getReplyTunnel());\n                } else {\n                    // Lie, pretend we don't have it\n                    if (_log.shouldLog(Log.INFO))\n                        _log.info(\"We have local LS \" + _message.getSearchKey() + \", NOT answering query, out of our keyspace\");\n                    getContext().statManager().addRateData(\"netDb.lookupsMatchedLocalNotClosest\", 1, 0);\n                    Set<Hash> routerHashSet = getNearestRouters();\n                    sendClosest(_message.getSearchKey(), routerHashSet, fromKey, _message.getReplyTunnel());\n                }\n            } else {\n                // It was not published to us (we looked it up, for example)\n                // or it's local and we aren't floodfill,\n                // or it's local and we don't publish it.\n                // Lie, pretend we don't have it\n                if (_log.shouldLog(Log.INFO))\n                    _log.info(\"We have LS \" + _message.getSearchKey() +\n                               \", NOT answering query - local? \" + isLocal + \" shouldPublish? \" + shouldPublishLocal +\n                               \" RAP? \" + ls.getReceivedAsPublished() + \" RAR? \" + ls.getReceivedAsReply());\n                getContext().statManager().addRateData(\"netDb.lookupsMatchedRemoteNotClosest\", 1, 0);\n                Set<Hash> routerHashSet = getNearestRouters();\n                sendClosest(_message.getSearchKey(), routerHashSet, fromKey, _message.getReplyTunnel());\n            }\n        } else if (dbe != null && dbe.getType() == DatabaseEntry.KEY_TYPE_ROUTERINFO) {\n            RouterInfo info = (RouterInfo) dbe;\n            if (info.isCurrent(EXPIRE_DELAY)) {\n                if ( (info.getIdentity().isHidden()) || (isUnreachable(info) && !publishUnreachable()) ) {\n                    if (_log.shouldLog(Log.DEBUG))\n                        _log.debug(\"Not answering a query for a netDb peer who isn't reachable\");\n                    Set<Hash> us = new HashSet<Hash>(1);\n                    us.add(getContext().routerHash());\n                    sendClosest(_message.getSearchKey(), us, fromKey, _message.getReplyTunnel());\n                //} else if (info.isHidden()) {\n                //    // Don't return hidden nodes\n                //    ERR: we don't want to explicitly reject lookups for hidden nodes, since they\n                //         may have just sent the hidden mode to only us and bundled a lookup with\n                //         a payload targetting some hidden destination (and if we refused to answer,\n                //         yet answered the bundled data message [e.g. HTTP GET], they'd know that\n                //         *we* were hosting that destination).  To operate safely,\n                //         perhaps we should refuse to honor lookups bundled down client tunnels?\n                } else {\n                    // send that routerInfo to the _message.getFromHash peer\n                    if (_log.shouldLog(Log.DEBUG))\n                        _log.debug(\"We do have key \" + _message.getSearchKey()\n                                   + \" locally as a router info.  sending to \" + fromKey);\n                    sendData(_message.getSearchKey(), info, fromKey, _message.getReplyTunnel());\n                }\n            } else {\n                // expired locally - return closest peer hashes\n                Set<Hash> routerHashSet = getNearestRouters();\n\n                // ERR: see above\n                // // Remove hidden nodes from set..\n                // for (Iterator iter = routerInfoSet.iterator(); iter.hasNext();) {\n                //     RouterInfo peer = (RouterInfo)iter.next();\n                //     if (peer.isHidden()) {\n                //         iter.remove();\n                //     }\n                // }\n\n                if (_log.shouldLog(Log.DEBUG))\n                    _log.debug(\"Expired \" + _message.getSearchKey() + \n                               \" locally.  sending back \" + routerHashSet.size() + \" peers to \" + fromKey);\n                sendClosest(_message.getSearchKey(), routerHashSet, fromKey, _message.getReplyTunnel());\n            }\n        } else {\n            // not found locally - return closest peer hashes\n            Set<Hash> routerHashSet = getNearestRouters();\n            if (_log.shouldLog(Log.DEBUG))\n                _log.debug(\"We do not have key \" + _message.getSearchKey() + \n                           \" locally.  sending back \" + routerHashSet.size() + \" peers to \" + fromKey);\n            sendClosest(_message.getSearchKey(), routerHashSet, fromKey, _message.getReplyTunnel());\n        }\n    }","commit_id":"67beebf859e2078c014a203e3285f64958fb3299","url":"https://github.com/i2p/i2p.i2p"},{"original_method":"private void sendData(Hash key, DatabaseEntry data, Hash toPeer, TunnelId replyTunnel) {\n        if (!key.equals(data.getHash())) {\n            _log.error(\"Hash mismatch HDLMJ\");\n            return;\n        }\n        if (_log.shouldLog(Log.DEBUG))\n            _log.debug(\"Sending data matching key \" + key.toBase64() + \" to peer \" + toPeer.toBase64() \n                       + \" tunnel \" + replyTunnel);\n        DatabaseStoreMessage msg = new DatabaseStoreMessage(getContext());\n        if (data.getType() == DatabaseEntry.KEY_TYPE_LEASESET) {\n            getContext().statManager().addRateData(\"netDb.lookupsMatchedLeaseSet\", 1, 0);\n        }\n        msg.setEntry(data);\n        getContext().statManager().addRateData(\"netDb.lookupsMatched\", 1, 0);\n        getContext().statManager().addRateData(\"netDb.lookupsHandled\", 1, 0);\n        sendMessage(msg, toPeer, replyTunnel);\n    }","id":16792,"modified_method":"private void sendData(Hash key, DatabaseEntry data, Hash toPeer, TunnelId replyTunnel) {\n        if (!key.equals(data.getHash())) {\n            _log.error(\"Hash mismatch HDLMJ\");\n            return;\n        }\n        if (_log.shouldLog(Log.DEBUG))\n            _log.debug(\"Sending data matching key \" + key + \" to peer \" + toPeer\n                       + \" tunnel \" + replyTunnel);\n        DatabaseStoreMessage msg = new DatabaseStoreMessage(getContext());\n        if (data.getType() == DatabaseEntry.KEY_TYPE_LEASESET) {\n            getContext().statManager().addRateData(\"netDb.lookupsMatchedLeaseSet\", 1, 0);\n        }\n        msg.setEntry(data);\n        getContext().statManager().addRateData(\"netDb.lookupsMatched\", 1, 0);\n        getContext().statManager().addRateData(\"netDb.lookupsHandled\", 1, 0);\n        sendMessage(msg, toPeer, replyTunnel);\n    }","commit_id":"67beebf859e2078c014a203e3285f64958fb3299","url":"https://github.com/i2p/i2p.i2p"},{"original_method":"@Nullable\n  public static NewVirtualFile findFileByPathIfCached(@NotNull final NewVirtualFileSystem vfs, @NotNull @NonNls final String path) {\n    final String normalizedPath = vfs.normalize(path);\n    if (normalizedPath == null) return null;\n    final String basePath = vfs.extractRootPath(normalizedPath);\n    NewVirtualFile file = ManagingFS.getInstance().findRoot(basePath, vfs);\n    if (file == null || !file.exists()) return null;\n\n    for (String pathElement : StringUtil.tokenize(normalizedPath.substring(basePath.length()), FILE_SEPARATORS)) {\n      if (pathElement.isEmpty() || \".\".equals(pathElement)) continue;\n      if (\"..\".equals(pathElement)) {\n        if (file.isSymLink()) {\n          final String canonicalPath = file.getCanonicalPath();\n          final NewVirtualFile canonicalFile = canonicalPath != null ? findFileByPathIfCached(vfs, canonicalPath) : null;\n          file = canonicalFile != null ? canonicalFile.getParent() : null;\n        }\n        else {\n          file = file.getParent();\n        }\n      }\n      else {\n        file = file.findChildIfCached(pathElement);\n      }\n\n      if (file == null) return null;\n    }\n\n    return file;\n  }","id":16793,"modified_method":"@Nullable\n  public static NewVirtualFile findFileByPathIfCached(@NotNull NewVirtualFileSystem vfs, @NotNull @NonNls String path) {\n    Pair<NewVirtualFile, Iterable<String>> data = prepare(vfs, path);\n    if (data == null) {\n      return null;\n    }\n\n    NewVirtualFile file = data.first;\n    for (String pathElement : data.second) {\n      if (pathElement.isEmpty() || \".\".equals(pathElement)) continue;\n      if (\"..\".equals(pathElement)) {\n        if (file.isSymLink()) {\n          final String canonicalPath = file.getCanonicalPath();\n          final NewVirtualFile canonicalFile = canonicalPath != null ? findFileByPathIfCached(vfs, canonicalPath) : null;\n          file = canonicalFile != null ? canonicalFile.getParent() : null;\n        }\n        else {\n          file = file.getParent();\n        }\n      }\n      else {\n        file = file.findChildIfCached(pathElement);\n      }\n\n      if (file == null) return null;\n    }\n\n    return file;\n  }","commit_id":"e0266aa02146deef83b855d5632bfe0ab8c85336","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Nullable\n  public static NewVirtualFile refreshAndFindFileByPath(@NotNull final NewVirtualFileSystem vfs, @NotNull @NonNls final String path) {\n    final String normalizedPath = vfs.normalize(path);\n    if (normalizedPath == null) return null;\n    final String basePath = vfs.extractRootPath(normalizedPath);\n    NewVirtualFile file = ManagingFS.getInstance().findRoot(basePath, vfs);\n    if (file == null || !file.exists()) return null;\n\n    LOG.assertTrue(basePath.length() <= normalizedPath.length(),\n                   vfs + \" failed to extract root path '\" + basePath + \"' from '\" + normalizedPath + \"'\");\n\n    for (String pathElement : StringUtil.tokenize(normalizedPath.substring(basePath.length()), FILE_SEPARATORS)) {\n      if (pathElement.isEmpty() || \".\".equals(pathElement)) continue;\n      if (\"..\".equals(pathElement)) {\n        if (file.isSymLink()) {\n          final String canonicalPath = file.getCanonicalPath();\n          final NewVirtualFile canonicalFile = canonicalPath != null ? refreshAndFindFileByPath(vfs, canonicalPath) : null;\n          file = canonicalFile != null ? canonicalFile.getParent() : null;\n        }\n        else {\n          file = file.getParent();\n        }\n      }\n      else {\n        file = file.refreshAndFindChild(pathElement);\n      }\n\n      if (file == null) return null;\n    }\n\n    return file;\n  }","id":16794,"modified_method":"@Nullable\n  public static NewVirtualFile refreshAndFindFileByPath(@NotNull NewVirtualFileSystem vfs, @NotNull @NonNls String path) {\n    Pair<NewVirtualFile, Iterable<String>> data = prepare(vfs, path);\n    if (data == null) {\n      return null;\n    }\n\n    NewVirtualFile file = data.first;\n    for (String pathElement : data.second) {\n      if (pathElement.isEmpty() || \".\".equals(pathElement)) continue;\n      if (\"..\".equals(pathElement)) {\n        if (file.isSymLink()) {\n          final String canonicalPath = file.getCanonicalPath();\n          final NewVirtualFile canonicalFile = canonicalPath != null ? refreshAndFindFileByPath(vfs, canonicalPath) : null;\n          file = canonicalFile != null ? canonicalFile.getParent() : null;\n        }\n        else {\n          file = file.getParent();\n        }\n      }\n      else {\n        file = file.refreshAndFindChild(pathElement);\n      }\n\n      if (file == null) return null;\n    }\n\n    return file;\n  }","commit_id":"e0266aa02146deef83b855d5632bfe0ab8c85336","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Nullable\n  public static NewVirtualFile findFileByPath(@NotNull final NewVirtualFileSystem vfs, @NotNull @NonNls final String path) {\n    final String normalizedPath = vfs.normalize(path);\n    if (normalizedPath == null) return null;\n    final String basePath = vfs.extractRootPath(normalizedPath);\n    NewVirtualFile file = ManagingFS.getInstance().findRoot(basePath, vfs);\n    if (file == null || !file.exists()) return null;\n    if (normalizedPath.length() < basePath.length()) return null;\n\n    for (String pathElement : StringUtil.tokenize(normalizedPath.substring(basePath.length()), FILE_SEPARATORS)) {\n      if (pathElement.isEmpty() || \".\".equals(pathElement)) continue;\n      if (\"..\".equals(pathElement)) {\n        if (file.isSymLink()) {\n          final NewVirtualFile canonicalFile = file.getCanonicalFile();\n          file = canonicalFile != null ? canonicalFile.getParent() : null;\n        }\n        else {\n          file = file.getParent();\n        }\n      }\n      else {\n        file = file.findChild(pathElement);\n      }\n\n      if (file == null) return null;\n    }\n\n    return file;\n  }","id":16795,"modified_method":"@Nullable\n  public static NewVirtualFile findFileByPath(@NotNull NewVirtualFileSystem vfs, @NotNull @NonNls String path) {\n    Pair<NewVirtualFile, Iterable<String>> data = prepare(vfs, path);\n    if (data == null) {\n      return null;\n    }\n\n    NewVirtualFile file = data.first;\n    for (String pathElement : data.second) {\n      if (pathElement.isEmpty() || \".\".equals(pathElement)) continue;\n      if (\"..\".equals(pathElement)) {\n        if (file.isSymLink()) {\n          final NewVirtualFile canonicalFile = file.getCanonicalFile();\n          file = canonicalFile != null ? canonicalFile.getParent() : null;\n        }\n        else {\n          file = file.getParent();\n        }\n      }\n      else {\n        file = file.findChild(pathElement);\n      }\n\n      if (file == null) return null;\n    }\n\n    return file;\n  }","commit_id":"e0266aa02146deef83b855d5632bfe0ab8c85336","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private void drawPolyline(BinaryMapDataObject obj, BaseOsmandRender render, Canvas canvas, RenderingContext rc, TagValuePair pair, int layer) {\n\t\tif(render == null || pair == null){\n\t\t\treturn;\n\t\t}\n\t\tint length = obj.getPointsLength();\n\t\tif(length < 2){\n\t\t\treturn;\n\t\t}\n\t\trc.main.emptyLine();\n\t\trc.second.emptyLine();\n\t\trc.third.emptyLine();\n\t\trc.adds = null;\n\t\tboolean res = render.renderPolyline(pair.tag, pair.value, rc.zoom, rc, this, layer, rc.nightMode);\n\t\tif(rc.main.strokeWidth == 0 || !res){\n\t\t\treturn;\n\t\t}\n\t\tif(rc.zoom >= 16 && \"highway\".equals(pair.tag) && MapRenderingTypes.isOneWayWay(obj.getHighwayAttributes())){ //$NON-NLS-1$\n\t\t\trc.adds = getOneWayProperties();\n\t\t}\n\t\t\n\t\t\n\t\trc.visible++;\n\t\t\n\t\tPath path = null;\n\t\tfloat pathRotate = 0;\n\t\tfloat roadLength = 0;\n\t\tboolean inverse = false;\n\t\tfloat xPrev = 0;\n\t\tfloat yPrev = 0;\n\t\tfloat xMid = 0;\n\t\tfloat yMid = 0;\n\t\tPointF middlePoint = new PointF();\n\t\tint middle = obj.getPointsLength() / 2;\n\t\t\n\t\tfor (int i = 0; i < length ; i++) {\n\t\t\tPointF p = calcPoint(obj, i, rc);\n\t\t\tif(i == 0 || i == length -1){\n\t\t\t\txMid += p.x;\n\t\t\t\tyMid += p.y;\n\t\t\t}\n\t\t\tif (path == null) {\n\t\t\t\tpath = new Path();\n\t\t\t\tpath.moveTo(p.x, p.y);\n\t\t\t} else {\n\t\t\t\troadLength += Math.sqrt((p.x - xPrev) * (p.x - xPrev) + (p.y - yPrev) * (p.y - yPrev)); \n\t\t\t\tif(i == middle){\n\t\t\t\t\tmiddlePoint.set(p.x, p.y);\n\t\t\t\t\tdouble rot = - Math.atan2(p.x - xPrev, p.y - yPrev) * 180 / Math.PI;\n\t\t\t\t\tif (rot < 0) {\n\t\t\t\t\t\trot += 360;\n\t\t\t\t\t}\n\t\t\t\t\tif (rot < 180) {\n\t\t\t\t\t\trot += 180;\n\t\t\t\t\t\tinverse = true;\n\t\t\t\t\t}\n\t\t\t\t\tpathRotate = (float) rot;\n\t\t\t\t}\n\t\t\t\tpath.lineTo(p.x, p.y);\n\t\t\t}\n\t\t\txPrev = p.x;\n\t\t\tyPrev = p.y;\n\t\t}\n\t\tif (path != null) {\n\t\t\trc.main.updatePaint(paint);\n\t\t\t\n\t\t\t//changed canvas to the global one for streets\n\t\t\tstreetcv.drawPath(path, paint);\n\t\t\tif (rc.second.strokeWidth != 0) {\n\t\t\t\trc.second.updatePaint(paint);\n\t\t\t\tstreetcv.drawPath(path, paint);\n\t\t\t\tif (rc.third.strokeWidth != 0) {\n\t\t\t\t\trc.third.updatePaint(paint);\n\t\t\t\t\tstreetcv.drawPath(path, paint);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (rc.adds != null) {\n\t\t\t\tfor (int i = 0; i < rc.adds.length; i++) {\n\t\t\t\t\trc.adds[i].updatePaint(paint);\n\t\t\t\t\tstreetcv.drawPath(path, paint);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (obj.getName() != null && obj.getName().length() > 0) {\n\t\t\t\tString name = obj.getName();\n\t\t\t\tString ref = null;\n\t\t\t\tif(name.charAt(0) == MapRenderingTypes.REF_CHAR){\n\t\t\t\t\tref = name.substring(1);\n\t\t\t\t\tname = \"\"; //$NON-NLS-1$\n\t\t\t\t\tfor(int k = 0; k < ref.length(); k++){\n\t\t\t\t\t\tif(ref.charAt(k) == MapRenderingTypes.REF_CHAR){\n\t\t\t\t\t\t\tif(k < ref.length() - 1){\n\t\t\t\t\t\t\t\tname = ref.substring(k + 1);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tref = ref.substring(0, k);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif(ref != null && ref.trim().length() > 0){\n\t\t\t\t\trc.clearText();\n\t\t\t\t\tref = render.renderObjectText(ref, pair.tag, pair.value, rc, true, rc.nightMode);\n\t\t\t\t\tTextDrawInfo text = new TextDrawInfo(ref);\n\t\t\t\t\ttext.fillProperties(rc, middlePoint.x, middlePoint.y);\n\t\t\t\t\ttext.pathRotate = pathRotate;\n\t\t\t\t\trc.textToDraw.add(text);\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif(name != null && name.trim().length() > 0){\n\t\t\t\t\trc.clearText();\n\t\t\t\t\tname = render.renderObjectText(name, pair.tag, pair.value, rc, false, rc.nightMode);\n\t\t\t\t\tif (rc.textSize > 0) {\n\t\t\t\t\t\tTextDrawInfo text = new TextDrawInfo(name);\n\t\t\t\t\t\tif (!rc.showTextOnPath) {\n\t\t\t\t\t\t\ttext.fillProperties(rc, middlePoint.x, middlePoint.y);\n\t\t\t\t\t\t\trc.textToDraw.add(text);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tpaintText.setTextSize(text.textSize);\n\t\t\t\t\t\t\tif (paintText.measureText(obj.getName()) < roadLength ) {\n\t\t\t\t\t\t\t\tif (inverse) {\n\t\t\t\t\t\t\t\t\tpath.rewind();\n\t\t\t\t\t\t\t\t\tboolean st = true;\n\t\t\t\t\t\t\t\t\tfor (int i = obj.getPointsLength() - 1; i >= 0; i--) {\n\t\t\t\t\t\t\t\t\t\tPointF p = calcPoint(obj, i, rc);\n\t\t\t\t\t\t\t\t\t\tif (st) {\n\t\t\t\t\t\t\t\t\t\t\tst = false;\n\t\t\t\t\t\t\t\t\t\t\tpath.moveTo(p.x, p.y);\n\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\tpath.lineTo(p.x, p.y);\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\ttext.fillProperties(rc, xMid / 2, yMid / 2);\n\t\t\t\t\t\t\t\ttext.pathRotate = pathRotate;\n\t\t\t\t\t\t\t\ttext.drawOnPath = path;\n\t\t\t\t\t\t\t\ttext.vOffset = rc.main.strokeWidth / 2 - 1;\n\t\t\t\t\t\t\t\trc.textToDraw.add(text);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}","id":16796,"modified_method":"private void drawPolyline(BinaryMapDataObject obj, BaseOsmandRender render, Canvas canvas, RenderingContext rc, TagValuePair pair, int layer, float order) {\n\t\tif(render == null || pair == null){\n\t\t\treturn;\n\t\t}\n\t\tint length = obj.getPointsLength();\n\t\tif(length < 2){\n\t\t\treturn;\n\t\t}\n\t\trc.main.emptyLine();\n\t\trc.second.emptyLine();\n\t\trc.third.emptyLine();\n\t\trc.adds = null;\n\t\tboolean res = render.renderPolyline(pair.tag, pair.value, rc.zoom, rc, this, layer, rc.nightMode);\n\t\tif(rc.main.strokeWidth == 0 || !res){\n\t\t\treturn;\n\t\t}\n\t\tif(rc.zoom >= 16 && \"highway\".equals(pair.tag) && MapRenderingTypes.isOneWayWay(obj.getHighwayAttributes())){ //$NON-NLS-1$\n\t\t\trc.adds = getOneWayProperties();\n\t\t}\n\n\n\t\trc.visible++;\n\n\t\tPath path = null;\n\t\tfloat pathRotate = 0;\n\t\tfloat roadLength = 0;\n\t\tboolean inverse = false;\n\t\tfloat xPrev = 0;\n\t\tfloat yPrev = 0;\n\t\tfloat xMid = 0;\n\t\tfloat yMid = 0;\n\t\tPointF middlePoint = new PointF();\n\t\tint middle = obj.getPointsLength() / 2;\n\n\t\tfor (int i = 0; i < length ; i++) {\n\t\t\tPointF p = calcPoint(obj, i, rc);\n\t\t\tif(i == 0 || i == length -1){\n\t\t\t\txMid += p.x;\n\t\t\t\tyMid += p.y;\n\t\t\t}\n\t\t\tif (path == null) {\n\t\t\t\tpath = new Path();\n\t\t\t\tpath.moveTo(p.x, p.y);\n\t\t\t} else {\n\t\t\t\troadLength += Math.sqrt((p.x - xPrev) * (p.x - xPrev) + (p.y - yPrev) * (p.y - yPrev)); \n\t\t\t\tif(i == middle){\n\t\t\t\t\tmiddlePoint.set(p.x, p.y);\n\t\t\t\t\tdouble rot = - Math.atan2(p.x - xPrev, p.y - yPrev) * 180 / Math.PI;\n\t\t\t\t\tif (rot < 0) {\n\t\t\t\t\t\trot += 360;\n\t\t\t\t\t}\n\t\t\t\t\tif (rot < 180) {\n\t\t\t\t\t\trot += 180;\n\t\t\t\t\t\tinverse = true;\n\t\t\t\t\t}\n\t\t\t\t\tpathRotate = (float) rot;\n\t\t\t\t}\n\t\t\t\tpath.lineTo(p.x, p.y);\n\t\t\t}\n\t\t\txPrev = p.x;\n\t\t\tyPrev = p.y;\n\t\t}\n\t\tif (path != null) {\n\t\t\trc.main.updatePaint(paint);\n\n\t\t\t//changed canvas to the global one for streets\n\t\t\tif((order < 58) && (order > 46)) {\n\t\t\t\tstreetcv.drawPath(path, paint);\n\t\t\t}\n\t\t\telse canvas.drawPath(path, paint);\n\t\t\tif (rc.second.strokeWidth != 0) {\n\t\t\t\trc.second.updatePaint(paint);\n\t\t\t\tif((order < 58) && (order > 46)) {\n\t\t\t\t\tstreetcv.drawPath(path, paint);\n\t\t\t\t}\n\t\t\t\telse canvas.drawPath(path, paint);\n\t\t\t\tif (rc.third.strokeWidth != 0) {\n\t\t\t\t\trc.third.updatePaint(paint);\n\t\t\t\t\tif((order < 58) && (order > 46)) {\n\t\t\t\t\t\tstreetcv.drawPath(path, paint);\n\t\t\t\t\t}\n\t\t\t\t\telse canvas.drawPath(path, paint);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (rc.adds != null) {\n\t\t\t\tfor (int i = 0; i < rc.adds.length; i++) {\n\t\t\t\t\trc.adds[i].updatePaint(paint);\n\t\t\t\t\tif((order < 58) && (order > 46)) {\n\t\t\t\t\t\tstreetcv.drawPath(path, paint);\n\t\t\t\t\t}\n\t\t\t\t\telse canvas.drawPath(path, paint);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (obj.getName() != null && obj.getName().length() > 0) {\n\t\t\t\tString name = obj.getName();\n\t\t\t\tString ref = null;\n\t\t\t\tif(name.charAt(0) == MapRenderingTypes.REF_CHAR){\n\t\t\t\t\tref = name.substring(1);\n\t\t\t\t\tname = \"\"; //$NON-NLS-1$\n\t\t\t\t\tfor(int k = 0; k < ref.length(); k++){\n\t\t\t\t\t\tif(ref.charAt(k) == MapRenderingTypes.REF_CHAR){\n\t\t\t\t\t\t\tif(k < ref.length() - 1){\n\t\t\t\t\t\t\t\tname = ref.substring(k + 1);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tref = ref.substring(0, k);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif(ref != null && ref.trim().length() > 0){\n\t\t\t\t\trc.clearText();\n\t\t\t\t\tref = render.renderObjectText(ref, pair.tag, pair.value, rc, true, rc.nightMode);\n\t\t\t\t\tTextDrawInfo text = new TextDrawInfo(ref);\n\t\t\t\t\ttext.fillProperties(rc, middlePoint.x, middlePoint.y);\n\t\t\t\t\ttext.pathRotate = pathRotate;\n\t\t\t\t\trc.textToDraw.add(text);\n\n\t\t\t\t}\n\n\t\t\t\tif(name != null && name.trim().length() > 0){\n\t\t\t\t\trc.clearText();\n\t\t\t\t\tname = render.renderObjectText(name, pair.tag, pair.value, rc, false, rc.nightMode);\n\t\t\t\t\tif (rc.textSize > 0) {\n\t\t\t\t\t\tTextDrawInfo text = new TextDrawInfo(name);\n\t\t\t\t\t\tif (!rc.showTextOnPath) {\n\t\t\t\t\t\t\ttext.fillProperties(rc, middlePoint.x, middlePoint.y);\n\t\t\t\t\t\t\trc.textToDraw.add(text);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tpaintText.setTextSize(text.textSize);\n\t\t\t\t\t\t\tif (paintText.measureText(obj.getName()) < roadLength ) {\n\t\t\t\t\t\t\t\tif (inverse) {\n\t\t\t\t\t\t\t\t\tpath.rewind();\n\t\t\t\t\t\t\t\t\tboolean st = true;\n\t\t\t\t\t\t\t\t\tfor (int i = obj.getPointsLength() - 1; i >= 0; i--) {\n\t\t\t\t\t\t\t\t\t\tPointF p = calcPoint(obj, i, rc);\n\t\t\t\t\t\t\t\t\t\tif (st) {\n\t\t\t\t\t\t\t\t\t\t\tst = false;\n\t\t\t\t\t\t\t\t\t\t\tpath.moveTo(p.x, p.y);\n\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\tpath.lineTo(p.x, p.y);\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\ttext.fillProperties(rc, xMid / 2, yMid / 2);\n\t\t\t\t\t\t\t\ttext.pathRotate = pathRotate;\n\t\t\t\t\t\t\t\ttext.drawOnPath = path;\n\t\t\t\t\t\t\t\ttext.vOffset = rc.main.strokeWidth / 2 - 1;\n\t\t\t\t\t\t\t\trc.textToDraw.add(text);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}","commit_id":"3bb26c0632bfaba0a88da4b7cde735b1b3a092b4","url":"https://github.com/osmandapp/Osmand"},{"original_method":"protected void drawObj(BinaryMapDataObject obj, BaseOsmandRender render, Canvas canvas, RenderingContext rc, int l, boolean renderText) {\n\t\trc.allObjects++;\n\t\tif (obj instanceof MultyPolygon) {\n\t\t\tdrawMultiPolygon(obj, render,canvas, rc);\n\t\t} else {\n\t\t\tint mainType = obj.getTypes()[l];\n\t\t\tint t = mainType & 3;\n\t\t\tint type = MapRenderingTypes.getMainObjectType(mainType);\n\t\t\tint subtype = MapRenderingTypes.getObjectSubType(mainType);\n\t\t\tTagValuePair pair = obj.getMapIndex().decodeType(type, subtype);\n\t\t\tif (t == MapRenderingTypes.POINT_TYPE) {\n\t\t\t\tdrawPoint(obj, render, canvas, rc, pair, renderText);\n\t\t\t} else if (t == MapRenderingTypes.POLYLINE_TYPE) {\n\t\t\t\tint layer = MapRenderingTypes.getNegativeWayLayer(mainType);\n\t\t\t\tdrawPolyline(obj, render, canvas, rc, pair, layer);\n\t\t\t} else if (t == MapRenderingTypes.POLYGON_TYPE) {\n\t\t\t\tdrawPolygon(obj, render, canvas, rc, pair);\n\t\t\t} else {\n\t\t\t\tif (t == MapRenderingTypes.MULTY_POLYGON_TYPE && !(obj instanceof MultyPolygon)) {\n\t\t\t\t\t// log this situation\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t}","id":16797,"modified_method":"protected void drawObj(BinaryMapDataObject obj, BaseOsmandRender render, Canvas canvas, RenderingContext rc, int l, boolean renderText, float order) {\n\t\trc.allObjects++;\n\t\tif (obj instanceof MultyPolygon) {\n\t\t\tdrawMultiPolygon(obj, render,canvas, rc);\n\t\t} else {\n\t\t\tint mainType = obj.getTypes()[l];\n\t\t\tint t = mainType & 3;\n\t\t\tint type = MapRenderingTypes.getMainObjectType(mainType);\n\t\t\tint subtype = MapRenderingTypes.getObjectSubType(mainType);\n\t\t\tTagValuePair pair = obj.getMapIndex().decodeType(type, subtype);\n\t\t\tif (t == MapRenderingTypes.POINT_TYPE) {\n\t\t\t\tdrawPoint(obj, render, canvas, rc, pair, renderText);\n\t\t\t} else if (t == MapRenderingTypes.POLYLINE_TYPE) {\n\t\t\t\tint layer = MapRenderingTypes.getNegativeWayLayer(mainType);\n\t\t\t\tdrawPolyline(obj, render, canvas, rc, pair, layer, order);\n\t\t\t} else if (t == MapRenderingTypes.POLYGON_TYPE) {\n\t\t\t\tdrawPolygon(obj, render, canvas, rc, pair);\n\t\t\t} else {\n\t\t\t\tif (t == MapRenderingTypes.MULTY_POLYGON_TYPE && !(obj instanceof MultyPolygon)) {\n\t\t\t\t\t// log this situation\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t}","commit_id":"3bb26c0632bfaba0a88da4b7cde735b1b3a092b4","url":"https://github.com/osmandapp/Osmand"},{"original_method":"public Bitmap generateNewBitmap(RenderingContext rc, List<BinaryMapDataObject> objects, Bitmap bmp, boolean useEnglishNames,\n\t\t\tBaseOsmandRender renderer, List<IMapDownloaderCallback> notifyList) {\n\t\tlong now = System.currentTimeMillis();\n\t\t\n\t\t// fill area\n\t\tCanvas cv = new Canvas(bmp);\n\t\t\n\t\t//needed for better street shadows\n\t\tBitmap streetbmp = Bitmap.createBitmap(cv.getWidth(), cv.getHeight(), Bitmap.Config.ARGB_8888);\n\t\tstreetcv = new Canvas(streetbmp);\n\t\t\n\t\t\n\t\tif(renderer != null){\n\t\t\tint dc = renderer.getDefaultColor(rc.nightMode);\n\t\t\tif(dc != 0){\n\t\t\t\tpaintFillEmpty.setColor(dc);\n\t\t\t}\n\t\t}\n\t\tcv.drawRect(0, 0, bmp.getWidth(), bmp.getHeight(), paintFillEmpty);\n\t\t\n\t\t// put in order map\n\t\tint sz = objects.size();\n\t\tint init = sz / 4;\n\t\tTFloatObjectHashMap<TIntArrayList> orderMap = new TFloatObjectHashMap<TIntArrayList>();\n\t\tif (renderer != null) {\n\t\t\tfor (int i = 0; i < sz; i++) {\n\t\t\t\tBinaryMapDataObject o = objects.get(i);\n\t\t\t\tint sh = i << 8;\n\n\t\t\t\tif (o instanceof MultyPolygon) {\n\t\t\t\t\tint mask = MapRenderingTypes.MULTY_POLYGON_TYPE;\n\t\t\t\t\tint layer = ((MultyPolygon) o).getLayer();\n\t\t\t\t\tput(orderMap, renderer.getObjectOrder(((MultyPolygon) o).getTag(), ((MultyPolygon) o).getValue(), \n\t\t\t\t\t\t\tmask, layer), sh, init);\n\t\t\t\t} else {\n\t\t\t\t\tfor (int j = 0; j < o.getTypes().length; j++) {\n\t\t\t\t\t\t// put(orderMap, BinaryMapDataObject.getOrder(o.getTypes()[j]), sh + j, init);\n\t\t\t\t\t\tint wholeType = o.getTypes()[j];\n\t\t\t\t\t\tint mask = wholeType & 3;\n\t\t\t\t\t\tint layer = 0;\n\t\t\t\t\t\tif (mask != 1) {\n\t\t\t\t\t\t\tlayer = MapRenderingTypes.getNegativeWayLayer(wholeType);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tTagValuePair pair = o.getMapIndex().decodeType(MapRenderingTypes.getMainObjectType(wholeType),\n\t\t\t\t\t\t\t\tMapRenderingTypes.getObjectSubType(wholeType));\n\t\t\t\t\t\tif (pair != null) {\n\t\t\t\t\t\t\tput(orderMap, renderer.getObjectOrder(pair.tag, pair.value, mask, layer), sh + j, init);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (rc.interrupted) {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\tif (objects != null && !objects.isEmpty() && rc.width > 0 && rc.height > 0) {\n\t\t\t// init rendering context\n\t\t\trc.tileDivisor = (int) (1 << (31 - rc.zoom));\n\t\t\trc.cosRotateTileSize = FloatMath.cos((float) Math.toRadians(rc.rotate)) * TILE_SIZE;\n\t\t\trc.sinRotateTileSize = FloatMath.sin((float) Math.toRadians(rc.rotate)) * TILE_SIZE;\n\t\t\t\n\t\t\t\n\t\t\tfloat[] keys = orderMap.keys();\n\t\t\tArrays.sort(keys);\n\t\t\tint objCount = 0;\n\t\t\tfor (int k = 0; k < keys.length; k++) {\n\t\t\t\tTIntArrayList list = orderMap.get(keys[k]);\n\t\t\t\tfor (int j = 0; j < list.size(); j++) {\n\t\t\t\t\tint i = list.get(j);\n\t\t\t\t\tint ind = i >> 8;\n\t\t\t\t\tint l = i & 0xff;\n\t\t\t\t\tBinaryMapDataObject obj = objects.get(ind);\n\n\t\t\t\t\t// show text only for main type\n\t\t\t\t\tdrawObj(obj, renderer, cv, rc, l, l == 0);\n\t\t\t\t\t\n\t\t\t\t\tobjCount++;\n\t\t\t\t}\n\t\t\t\tif(objCount > 25){\n\t\t\t\t\tnotifyListeners(notifyList);\n\t\t\t\t\tobjCount = 0;\n\t\t\t\t}\n\t\t\t\tif(rc.interrupted){\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t}\n\t\t\tnotifyListeners(notifyList);\n\t\t\tlong beforeIconTextTime = System.currentTimeMillis() - now;\n\t\t\t\n\t\t\tint skewConstant = (int) getDensityValue(rc, 16);\n\t\t\t\n\t\t\tint iconsW = rc.width / skewConstant ;\n\t\t\tint iconsH = rc.height / skewConstant;\n\t\t\tint[] alreadyDrawnIcons = new int[iconsW * iconsH / 32];\n\t\t\tfor(IconDrawInfo icon : rc.iconsToDraw){\n\t\t\t\tif (icon.resId != 0) {\n\t\t\t\t\tif (cachedIcons.get(icon.resId) == null) {\n\t\t\t\t\t\tcachedIcons.put(icon.resId, UnscaledBitmapLoader.loadFromResource(context.getResources(), icon.resId, null, dm));\n\t\t\t\t\t}\n\t\t\t\t\tBitmap ico = cachedIcons.get(icon.resId);\n\t\t\t\t\tif (ico != null) {\n\t\t\t\t\t\tif (icon.y >= 0 && icon.y < rc.height && icon.x >= 0 && icon.x < rc.width) {\n\t\t\t\t\t\t\tint z = (((int) icon.x / skewConstant) + ((int) icon.y / skewConstant) * iconsW);\n\t\t\t\t\t\t\tint i = z / 32;\n\t\t\t\t\t\t\tif (i >= alreadyDrawnIcons.length) {\n\t\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tint ind = alreadyDrawnIcons[i];\n\t\t\t\t\t\t\tint b = z % 32;\n\t\t\t\t\t\t\t// check bit b if it is set\n\t\t\t\t\t\t\tif (((ind >> b) & 1) == 0) {\n\t\t\t\t\t\t\t\talreadyDrawnIcons[i] = ind | (1 << b);\n\t\t\t\t\t\t\t\tcv.drawBitmap(ico, icon.x - ico.getWidth() / 2, icon.y - ico.getHeight() / 2, paintIcon);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif(rc.interrupted){\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t}\n\t\t\tnotifyListeners(notifyList);\n\t\t\t\n\t\t\t//Draw streets here\n\t\t\tdrawStreetsWithShadow(cv, streetbmp);\n\t\t\t\n\t\t\tdrawTextOverCanvas(rc, cv, useEnglishNames);\n\t\t\tlong time = System.currentTimeMillis() - now;\n\t\t\trc.renderingDebugInfo = String.format(\"Rendering done in %s (%s text) ms\\n\" +\n\t\t\t\t\t\"(%s points, %s points inside, %s objects visile from %s)\",//$NON-NLS-1$\n\t\t\t\t\ttime, time - beforeIconTextTime,rc.pointCount, rc.pointInsideCount, rc.visible, rc.allObjects);\n\t\t\tlog.info(rc.renderingDebugInfo);\n\t\t\t\n\t\t}\n\t\t\n\t\treturn bmp;\n\t}","id":16798,"modified_method":"public Bitmap generateNewBitmap(RenderingContext rc, List<BinaryMapDataObject> objects, Bitmap bmp, boolean useEnglishNames,\n\t\t\tBaseOsmandRender renderer, List<IMapDownloaderCallback> notifyList) {\n\t\tlong now = System.currentTimeMillis();\n\t\t//Flag for drawing the streets\n\t\tboolean streetsdrawn = false;\n\n\t\t// fill area\n\t\tCanvas cv = new Canvas(bmp);\n\n\t\t//needed for better street shadows\n\t\tBitmap streetbmp = Bitmap.createBitmap(cv.getWidth(), cv.getHeight(), Bitmap.Config.ARGB_8888);\n\t\tstreetcv = new Canvas(streetbmp);\n\n\n\t\tif(renderer != null){\n\t\t\tint dc = renderer.getDefaultColor(rc.nightMode);\n\t\t\tif(dc != 0){\n\t\t\t\tpaintFillEmpty.setColor(dc);\n\t\t\t}\n\t\t}\n\t\tcv.drawRect(0, 0, bmp.getWidth(), bmp.getHeight(), paintFillEmpty);\n\n\t\t// put in order map\n\t\tint sz = objects.size();\n\t\tint init = sz / 4;\n\t\tTFloatObjectHashMap<TIntArrayList> orderMap = new TFloatObjectHashMap<TIntArrayList>();\n\t\tif (renderer != null) {\n\t\t\tfor (int i = 0; i < sz; i++) {\n\t\t\t\tBinaryMapDataObject o = objects.get(i);\n\t\t\t\tint sh = i << 8;\n\n\t\t\t\tif (o instanceof MultyPolygon) {\n\t\t\t\t\tint mask = MapRenderingTypes.MULTY_POLYGON_TYPE;\n\t\t\t\t\tint layer = ((MultyPolygon) o).getLayer();\n\t\t\t\t\tput(orderMap, renderer.getObjectOrder(((MultyPolygon) o).getTag(), ((MultyPolygon) o).getValue(), \n\t\t\t\t\t\t\tmask, layer), sh, init);\n\t\t\t\t} else {\n\t\t\t\t\tfor (int j = 0; j < o.getTypes().length; j++) {\n\t\t\t\t\t\t// put(orderMap, BinaryMapDataObject.getOrder(o.getTypes()[j]), sh + j, init);\n\t\t\t\t\t\tint wholeType = o.getTypes()[j];\n\t\t\t\t\t\tint mask = wholeType & 3;\n\t\t\t\t\t\tint layer = 0;\n\t\t\t\t\t\tif (mask != 1) {\n\t\t\t\t\t\t\tlayer = MapRenderingTypes.getNegativeWayLayer(wholeType);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tTagValuePair pair = o.getMapIndex().decodeType(MapRenderingTypes.getMainObjectType(wholeType),\n\t\t\t\t\t\t\t\tMapRenderingTypes.getObjectSubType(wholeType));\n\t\t\t\t\t\tif (pair != null) {\n\t\t\t\t\t\t\tput(orderMap, renderer.getObjectOrder(pair.tag, pair.value, mask, layer), sh + j, init);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (rc.interrupted) {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (objects != null && !objects.isEmpty() && rc.width > 0 && rc.height > 0) {\n\t\t\t// init rendering context\n\t\t\trc.tileDivisor = (int) (1 << (31 - rc.zoom));\n\t\t\trc.cosRotateTileSize = FloatMath.cos((float) Math.toRadians(rc.rotate)) * TILE_SIZE;\n\t\t\trc.sinRotateTileSize = FloatMath.sin((float) Math.toRadians(rc.rotate)) * TILE_SIZE;\n\n\n\t\t\tfloat[] keys = orderMap.keys();\n\t\t\tArrays.sort(keys);\n\t\t\tint objCount = 0;\n\t\t\tfor (int k = 0; k < keys.length; k++) {\n\t\t\t\tTIntArrayList list = orderMap.get(keys[k]);\n\t\t\t\tfor (int j = 0; j < list.size(); j++) {\n\t\t\t\t\tint i = list.get(j);\n\t\t\t\t\tint ind = i >> 8;\n\t\t\t\tint l = i & 0xff;\n\t\t\t\tBinaryMapDataObject obj = objects.get(ind);\n\t\t\t\t\n\t\t\t\t//draw streets with shadow when all have been drawn\n\t\t\t\tif(keys[k] > 57 && !streetsdrawn){\n\t\t\t\t\tdrawStreetsShadow(cv, streetbmp);\n\t\t\t\t\tstreetsdrawn = true;\n\t\t\t\t\tcv.drawBitmap(streetbmp, 0, 0, null);\n\t\t\t\t}\n\n\t\t\t\t// show text only for main type\n\t\t\t\tdrawObj(obj, renderer, cv, rc, l, l == 0, keys[k]);\n\n\t\t\t\tobjCount++;\n\t\t\t\t}\n\t\t\t\tif(objCount > 25){\n\t\t\t\t\tnotifyListeners(notifyList);\n\t\t\t\t\tobjCount = 0;\n\t\t\t\t}\n\t\t\t\tif(rc.interrupted){\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t}\n\t\t\tnotifyListeners(notifyList);\n\t\t\tlong beforeIconTextTime = System.currentTimeMillis() - now;\n\n\t\t\tint skewConstant = (int) getDensityValue(rc, 16);\n\n\t\t\tint iconsW = rc.width / skewConstant ;\n\t\t\tint iconsH = rc.height / skewConstant;\n\t\t\tint[] alreadyDrawnIcons = new int[iconsW * iconsH / 32];\n\t\t\tfor(IconDrawInfo icon : rc.iconsToDraw){\n\t\t\t\tif (icon.resId != 0) {\n\t\t\t\t\tif (cachedIcons.get(icon.resId) == null) {\n\t\t\t\t\t\tcachedIcons.put(icon.resId, UnscaledBitmapLoader.loadFromResource(context.getResources(), icon.resId, null, dm));\n\t\t\t\t\t}\n\t\t\t\t\tBitmap ico = cachedIcons.get(icon.resId);\n\t\t\t\t\tif (ico != null) {\n\t\t\t\t\t\tif (icon.y >= 0 && icon.y < rc.height && icon.x >= 0 && icon.x < rc.width) {\n\t\t\t\t\t\t\tint z = (((int) icon.x / skewConstant) + ((int) icon.y / skewConstant) * iconsW);\n\t\t\t\t\t\t\tint i = z / 32;\n\t\t\t\t\t\t\tif (i >= alreadyDrawnIcons.length) {\n\t\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tint ind = alreadyDrawnIcons[i];\n\t\t\t\t\t\t\tint b = z % 32;\n\t\t\t\t\t\t\t// check bit b if it is set\n\t\t\t\t\t\t\tif (((ind >> b) & 1) == 0) {\n\t\t\t\t\t\t\t\talreadyDrawnIcons[i] = ind | (1 << b);\n\t\t\t\t\t\t\t\tcv.drawBitmap(ico, icon.x - ico.getWidth() / 2, icon.y - ico.getHeight() / 2, paintIcon);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif(rc.interrupted){\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t}\n\t\t\tnotifyListeners(notifyList);\n\n\t\t\tdrawTextOverCanvas(rc, cv, useEnglishNames);\n\t\t\tlong time = System.currentTimeMillis() - now;\n\t\t\trc.renderingDebugInfo = String.format(\"Rendering done in %s (%s text) ms\\n\" +\n\t\t\t\t\t\"(%s points, %s points inside, %s objects visile from %s)\",//$NON-NLS-1$\n\t\t\t\t\ttime, time - beforeIconTextTime,rc.pointCount, rc.pointInsideCount, rc.visible, rc.allObjects);\n\t\t\tlog.info(rc.renderingDebugInfo);\n\n\t\t}\n\n\t\treturn bmp;\n\t}","commit_id":"3bb26c0632bfaba0a88da4b7cde735b1b3a092b4","url":"https://github.com/osmandapp/Osmand"},{"original_method":"private void drawStreetsWithShadow(Canvas cv, Bitmap streetbmp){\n\t\tPaint shadowpaint = new Paint();\n\t\tshadowpaint.setColor(Color.BLACK);\n\t\tshadowpaint.setMaskFilter(new BlurMaskFilter(1, BlurMaskFilter.Blur.SOLID));\n\t\tBitmap shadowImage = streetbmp.extractAlpha();\n\t\tcv.drawBitmap(shadowImage, 0, 0, shadowpaint);// <----\n\t\tcv.drawBitmap(streetbmp, 0, 0, null);\n\t}","id":16799,"modified_method":"private void drawStreetsShadow(Canvas cv, Bitmap streetbmp){\n\t\tPaint shadowpaint = new Paint();\n\t\tshadowpaint.setColor(Color.BLACK);\n\t\tshadowpaint.setMaskFilter(new BlurMaskFilter(1, BlurMaskFilter.Blur.SOLID));\n\t\tBitmap shadowImage = streetbmp.extractAlpha();\n\t\tcv.drawBitmap(shadowImage, 0, 0, shadowpaint);\n\t}","commit_id":"3bb26c0632bfaba0a88da4b7cde735b1b3a092b4","url":"https://github.com/osmandapp/Osmand"},{"original_method":"JCExpression makeQualifiedName(JCExpression expr, TypedDeclaration decl, int namingOptions) {\n        // TODO Don't build a list but rather construct a JCExpression directly\n        LinkedList<String> parts = new LinkedList<String>();\n        Assert.that(namingOptions != 0);\n        Assert.that(expr == null || ((namingOptions & NA_FQ) == 0 \n                && (namingOptions & NA_WRAPPER) == 0\n                && (namingOptions & NA_WRAPPER_UNQUOTED) == 0)); \n        if ((namingOptions & (NA_MEMBER | NA_IDENT)) != 0) {\n            pushMemberName(decl, namingOptions, parts);\n        }\n        addNamesForWrapperClass(decl, parts, namingOptions);\n        return mkSelect(expr, parts);\n    }","id":16800,"modified_method":"JCExpression makeQualifiedName(JCExpression qualifyingExpr, TypedDeclaration decl, int namingOptions) {\n        // TODO Don't build a list but rather construct a JCExpression directly\n        Assert.that(namingOptions != 0);\n        Assert.that(qualifyingExpr == null || ((namingOptions & NA_FQ) == 0 \n                && (namingOptions & NA_WRAPPER) == 0\n                && (namingOptions & NA_WRAPPER_UNQUOTED) == 0));\n        \n        JCExpression expr = qualifyingExpr;\n        expr = addNamesForWrapperClass(expr, decl, namingOptions);\n        if ((namingOptions & (NA_MEMBER | NA_IDENT)) != 0) {\n            expr = addMemberName(expr, decl, namingOptions);\n        }\n        \n        return expr;\n    }","commit_id":"196f67daee7b5dab40e4bb3612e36f9c03685406","url":"https://github.com/ceylon/ceylon-compiler"},{"original_method":"/**\n     * Returns a fully qualified JCExpression for referring to the given name\n     */\n    private JCExpression mkSelect(JCExpression result, List<String> rest) {\n        for (String part : rest) {\n            if (result == null) {\n                result = makeUnquotedIdent(part);\n            } else {\n                result = makeSelect(result, part);\n            }\n        }\n        return result;\n    }","id":16801,"modified_method":"private JCExpression iors(JCExpression expr, String name) {\n        if (expr == null) {\n            return makeUnquotedIdent(name);\n        }\n        return makeSelect(expr, name);\n    }","commit_id":"196f67daee7b5dab40e4bb3612e36f9c03685406","url":"https://github.com/ceylon/ceylon-compiler"},{"original_method":"private static void addNamesForWrapperClass(TypedDeclaration decl,\n            LinkedList<String> parts, int namingOptions) {\n        if ((namingOptions & NA_WRAPPER) != 0) {\n            parts.push(getQuotedClassName(decl, namingOptions & (NA_GETTER | NA_SETTER)));\n        } else if ((namingOptions & NA_WRAPPER_UNQUOTED) != 0) {\n            parts.push(getRealName(decl, namingOptions & (NA_GETTER | NA_SETTER)));\n        } else if ((namingOptions & NA_Q_LOCAL_INSTANCE) != 0) {\n            parts.push(getAttrClassName(decl, namingOptions & (NA_GETTER | NA_SETTER)));\n        }\n        if ((namingOptions & NA_FQ) != 0) {\n            Assert.that(((namingOptions & NA_WRAPPER) != 0)\n                    || ((namingOptions & NA_WRAPPER_UNQUOTED) != 0), \n                    \"If you pass FQ you must pass WRAPPER or WRAPPER_UNQUOTED too, or there's no class name to qualify!\");\n            Scope s = decl.getContainer();\n            while (s != null) {\n                if (s instanceof Package) {\n                    final List<String> packageName = ((Package) s).getName();\n                    for (int ii = packageName.size() - 1; ii >= 0; ii--) {\n                        parts.push(quoteIfJavaKeyword(packageName.get(ii)));\n                    }\n                    if (!packageName.get(0).isEmpty()) {\n                        parts.push(\"\");// so generated name begins with a .\n                    }\n                    break;\n                } else if (s instanceof ClassOrInterface) {\n                    parts.push(getQuotedClassName((ClassOrInterface) s, 0));\n                } else if (s instanceof TypedDeclaration) {\n                    parts.push(quoteIfJavaKeyword(((TypedDeclaration) s).getName()));\n                }\n                s = s.getContainer();\n            }\n        } \n    }","id":16802,"modified_method":"private JCExpression addNamesForWrapperClass(JCExpression expr, TypedDeclaration decl, int namingOptions) {\n        if ((namingOptions & NA_FQ) != 0) {\n            Assert.that(((namingOptions & NA_WRAPPER) != 0)\n                    || ((namingOptions & NA_WRAPPER_UNQUOTED) != 0), \n                    \"If you pass FQ you must pass WRAPPER or WRAPPER_UNQUOTED too, or there's no class name to qualify!\");\n            List<String> outerNames = null;\n            Scope s = decl.getContainer();\n            while (s != null) {\n                if (s instanceof Package) {\n                    final List<String> packageName = ((Package) s).getName();\n                    if (!packageName.get(0).isEmpty()) {\n                        expr = maker.Ident(names.empty);\n                    }\n                    for (int ii = 0; ii < packageName.size(); ii++) {\n                        expr = iors(expr, quoteIfJavaKeyword(packageName.get(ii)));\n                    }\n                    break;\n                } else if (s instanceof ClassOrInterface) {\n                    if (outerNames == null) {\n                        outerNames = new ArrayList<String>(2);\n                    }\n                    outerNames.add(getQuotedClassName((ClassOrInterface) s, 0));\n                } else if (s instanceof TypedDeclaration) {\n                    if (outerNames == null) {\n                        outerNames = new ArrayList<String>(2);\n                    }\n                    outerNames.add(quoteIfJavaKeyword(((TypedDeclaration) s).getName()));\n                }\n                s = s.getContainer();\n            }\n            if (outerNames != null) {\n                for (int ii = outerNames.size()-1; ii >= 0; ii--) {\n                    String outerName = outerNames.get(ii);\n                    expr = iors(expr, outerName);\n                }\n            }\n        }\n        if ((namingOptions & NA_WRAPPER) != 0) {\n            expr = iors(expr, getQuotedClassName(decl, namingOptions & (NA_GETTER | NA_SETTER)));\n        } else if ((namingOptions & NA_WRAPPER_UNQUOTED) != 0) {\n            expr = iors(expr, getRealName(decl, namingOptions & (NA_GETTER | NA_SETTER)));\n        } else if ((namingOptions & NA_Q_LOCAL_INSTANCE) != 0) {\n            expr = iors(expr, getAttrClassName(decl, namingOptions & (NA_GETTER | NA_SETTER)));\n        }\n        return expr;\n    }","commit_id":"196f67daee7b5dab40e4bb3612e36f9c03685406","url":"https://github.com/ceylon/ceylon-compiler"},{"original_method":"private static void pushMemberName(TypedDeclaration decl, int namingOptions,\n            LinkedList<String> parts) {\n        if ((namingOptions & NA_IDENT) != 0) {\n            Assert.not((namingOptions & NA_GETTER | NA_SETTER) == 0);\n            parts.push(decl.getName());\n        } else if ((namingOptions & NA_SETTER) != 0) {\n            Assert.not(decl instanceof Method, \"A method has no setter\");\n            parts.push(getSetterName(decl.getName()));\n        } else if ((namingOptions & NA_GETTER) != 0) {\n            Assert.not(decl instanceof Method, \"A method has no getter\");\n            parts.push(getGetterName(decl));\n        } else if (decl instanceof Getter\n                || decl instanceof Value) {\n            if (decl.getType().isCallable()) {\n                parts.push(decl.getName());\n            } else {\n                parts.push(getGetterName(decl));\n            }\n        } else if (decl instanceof Setter) {\n            parts.push(getSetterName(decl.getName()));\n        } else if (decl instanceof Method) {\n            parts.push(getMethodName(decl.getName()));\n        } else if (decl instanceof Parameter) {\n            if ((namingOptions & NA_ALIASED) != 0) {\n                parts.push(getAliasedParameterName((Parameter)decl));\n            } else {\n                parts.push(decl.getName());\n            }\n        }\n    }","id":16803,"modified_method":"private JCExpression addMemberName(JCExpression expr, TypedDeclaration decl, int namingOptions) {\n        if ((namingOptions & NA_IDENT) != 0) {\n            Assert.not((namingOptions & NA_GETTER | NA_SETTER) == 0);\n            expr = iors(expr, decl.getName());\n        } else if ((namingOptions & NA_SETTER) != 0) {\n            Assert.not(decl instanceof Method, \"A method has no setter\");\n            expr = iors(expr, getSetterName(decl.getName()));\n        } else if ((namingOptions & NA_GETTER) != 0) {\n            Assert.not(decl instanceof Method, \"A method has no getter\");\n            expr = iors(expr, getGetterName(decl));\n        } else if (decl instanceof Getter\n                || decl instanceof Value) {\n            if (decl.getType().isCallable()) {\n                expr = iors(expr, decl.getName());\n            } else {\n                expr = iors(expr, getGetterName(decl));\n            }\n        } else if (decl instanceof Setter) {\n            expr = iors(expr, getSetterName(decl.getName()));\n        } else if (decl instanceof Method) {\n            expr = iors(expr, getMethodName(decl.getName()));\n        } else if (decl instanceof Parameter) {\n            if ((namingOptions & NA_ALIASED) != 0) {\n                expr = iors(expr, getAliasedParameterName((Parameter)decl));\n            } else {\n                expr = iors(expr, decl.getName());\n            }\n        }\n        return expr;\n    }","commit_id":"196f67daee7b5dab40e4bb3612e36f9c03685406","url":"https://github.com/ceylon/ceylon-compiler"},{"original_method":"private MetricQueryResult executeQuery(QueryRequest queryRequest) {\n    try {\n      // todo: refactor parsing time range params\n      // sets time range, query type, etc.\n      MetricQueryParser.MetricDataQueryBuilder builder = new MetricQueryParser.MetricDataQueryBuilder();\n      builder.setSliceByTagValues(Maps.<String, String>newHashMap());\n      parseTimeRange(queryRequest.getTimeRange(), builder);\n      MetricDataQuery queryTimeParams = builder.build();\n\n      Map<String, String> tagsSliceBy = humanToTagNames(queryRequest.getTags());\n\n      long startTs = queryTimeParams.getStartTs();\n      long endTs = queryTimeParams.getEndTs();\n\n      Collection<MetricTimeSeries> queryResult = Lists.newArrayList();\n      for (String metric : queryRequest.getMetrics()) {\n        MetricDataQuery query = new MetricDataQuery(startTs, endTs, queryTimeParams.getResolution(),\n                                                    queryTimeParams.getLimit(), metric,\n                                                    // todo: figure out MetricType\n                                                    MetricType.COUNTER, tagsSliceBy,\n                                                    queryRequest.getGroupBy(),\n                                                    queryTimeParams.getInterpolator());\n        Collection<MetricTimeSeries> timeSerieses = metricStore.query(query);\n\n        queryResult.addAll(timeSerieses);\n      }\n\n      MetricQueryResult result = decorate(queryResult, startTs, endTs);\n      return result;\n    } catch (IllegalArgumentException e) {\n      throw Throwables.propagate(e);\n    } catch (Exception e) {\n      throw Throwables.propagate(e);\n    }\n  }","id":16804,"modified_method":"private MetricQueryResult executeQuery(QueryRequest queryRequest) {\n    try {\n      // todo: refactor parsing time range params\n      // sets time range, query type, etc.\n      MetricQueryParser.MetricDataQueryBuilder builder = new MetricQueryParser.MetricDataQueryBuilder();\n      builder.setSliceByTagValues(Maps.<String, String>newHashMap());\n      parseTimeRange(queryRequest.getTimeRange(), builder);\n      MetricDataQuery queryTimeParams = builder.build();\n\n      Map<String, String> tagsSliceBy = humanToTagNames(transformTagMap(queryRequest.getTags()));\n\n      long startTs = queryTimeParams.getStartTs();\n      long endTs = queryTimeParams.getEndTs();\n\n      Collection<MetricTimeSeries> queryResult = Lists.newArrayList();\n      for (String metric : queryRequest.getMetrics()) {\n        MetricDataQuery query = new MetricDataQuery(startTs, endTs, queryTimeParams.getResolution(),\n                                                    queryTimeParams.getLimit(), metric,\n                                                    // todo: figure out MetricType\n                                                    MetricType.COUNTER, tagsSliceBy,\n                                                    transformGroupByTags(queryRequest.getGroupBy()),\n                                                    queryTimeParams.getInterpolator());\n        Collection<MetricTimeSeries> timeSerieses = metricStore.query(query);\n\n        queryResult.addAll(timeSerieses);\n      }\n\n      MetricQueryResult result = decorate(queryResult, startTs, endTs);\n      return result;\n    } catch (IllegalArgumentException e) {\n      throw Throwables.propagate(e);\n    } catch (Exception e) {\n      throw Throwables.propagate(e);\n    }\n  }","commit_id":"5cee8ab8207978a78c1a52dd9aac34396c5594a1","url":"https://github.com/caskdata/cdap"},{"original_method":"private void verifySearchMetricResult(String url, List<String> expectedValues) throws Exception {\n    HttpResponse response = doPost(url, null);\n    Assert.assertEquals(200, response.getStatusLine().getStatusCode());\n    String result = EntityUtils.toString(response.getEntity());\n    List<String> reply = new Gson().fromJson(result, new TypeToken<List<String>>() {\n    }.getType());\n    Assert.assertEquals(expectedValues.size(), reply.size());\n    for (int i = 0; i < expectedValues.size(); i++) {\n      Assert.assertEquals(expectedValues.get(i), reply.get(i));\n    }\n  }","id":16805,"modified_method":"private void verifySearchMetricResult(String url, List<String> expectedValues) throws Exception {\n    HttpResponse response = doPost(url, null);\n    Assert.assertEquals(200, response.getStatusLine().getStatusCode());\n    String result = EntityUtils.toString(response.getEntity());\n    List<String> reply = GSON.fromJson(result, new TypeToken<List<String>>() {\n    }.getType());\n    Assert.assertEquals(expectedValues.size(), reply.size());\n    for (int i = 0; i < expectedValues.size(); i++) {\n      Assert.assertEquals(expectedValues.get(i), reply.get(i));\n    }\n  }","commit_id":"5cee8ab8207978a78c1a52dd9aac34396c5594a1","url":"https://github.com/caskdata/cdap"},{"original_method":"private void compareQueryResults(ImmutableList<QueryResult> expected, MetricQueryResult actual) {\n    MetricQueryResult.TimeSeries[] actualTimeSeries = actual.getSeries();\n    sortTimeSeriesBasedOnGrouping(actualTimeSeries);\n    // check length\n    Assert.assertEquals(expected.size(), actualTimeSeries.length);\n    for (int i = 0; i < expected.size(); i++) {\n\n      Assert.assertEquals(expected.get(i).getMetricName(), actualTimeSeries[i].getMetricName());\n      Assert.assertEquals(expected.get(i).getGrouping(), actualTimeSeries[i].getGrouping());\n      MetricQueryResult.TimeValue[] values = actualTimeSeries[i].getData();\n      long numPoints = 0;\n      long totalSum = 0;\n      for (MetricQueryResult.TimeValue tv : values) {\n        numPoints++;\n        totalSum += tv.getValue();\n      }\n      Assert.assertEquals(expected.get(i).getNumPoints(), numPoints);\n      Assert.assertEquals(expected.get(i).getTotalSum(), totalSum);\n    }\n  }","id":16806,"modified_method":"private void compareQueryResults(ImmutableList<QueryResult> expected, MetricQueryResult actual) {\n\n    MetricQueryResult.TimeSeries[] actualTimeSeries = actual.getSeries();\n    for (int i = 0; i < actualTimeSeries.length; i++) {\n\n      QueryResult expectedQueryResult = findExpectedQueryResult(expected, actualTimeSeries[i]);\n      Assert.assertNotNull(expectedQueryResult);\n      MetricQueryResult.TimeValue[] values = actualTimeSeries[i].getData();\n      long numPoints = 0;\n      long totalSum = 0;\n      for (MetricQueryResult.TimeValue tv : values) {\n        numPoints++;\n        totalSum += tv.getValue();\n      }\n      Assert.assertEquals(expectedQueryResult.getNumPoints(), numPoints);\n      Assert.assertEquals(expectedQueryResult.getTotalSum(), totalSum);\n    }\n  }","commit_id":"5cee8ab8207978a78c1a52dd9aac34396c5594a1","url":"https://github.com/caskdata/cdap"},{"original_method":"private <T> T post(String url, Type type) throws Exception {\n    HttpResponse response = doPost(url, null);\n    Assert.assertEquals(200, response.getStatusLine().getStatusCode());\n    return new Gson().fromJson(EntityUtils.toString(response.getEntity(), Charsets.UTF_8), type);\n  }","id":16807,"modified_method":"private <T> T post(String url, Type type) throws Exception {\n    return post(url, null, type);\n  }","commit_id":"5cee8ab8207978a78c1a52dd9aac34396c5594a1","url":"https://github.com/caskdata/cdap"},{"original_method":"private void verifySearchResult(String url, List<String> expectedValues) throws Exception {\n    HttpResponse response = doPost(url, null);\n    Assert.assertEquals(200, response.getStatusLine().getStatusCode());\n    String result = EntityUtils.toString(response.getEntity());\n    List<String> reply = new Gson().fromJson(result, new TypeToken<List<String>>() {\n    }.getType());\n    // We want to make sure expectedValues are in the response. Response may also have other things that denote\n    // null values for tags - we'll ignore them.\n    Assert.assertTrue(reply.containsAll(expectedValues));\n    for (String returned: reply) {\n      Assert.assertTrue(expectedValues.contains(returned) || returned.endsWith(\".*\"));\n    }\n  }","id":16808,"modified_method":"private void verifySearchResult(String url, List<String> expectedValues) throws Exception {\n    HttpResponse response = doPost(url, null);\n    Assert.assertEquals(200, response.getStatusLine().getStatusCode());\n    String result = EntityUtils.toString(response.getEntity());\n    List<String> reply = GSON.fromJson(result, new TypeToken<List<String>>() {\n    }.getType());\n    // We want to make sure expectedValues are in the response. Response may also have other things that denote\n    // null values for tags - we'll ignore them.\n    Assert.assertTrue(reply.containsAll(expectedValues));\n    for (String returned: reply) {\n      Assert.assertTrue(expectedValues.contains(returned) || returned.endsWith(\".*\"));\n    }\n  }","commit_id":"5cee8ab8207978a78c1a52dd9aac34396c5594a1","url":"https://github.com/caskdata/cdap"},{"original_method":"private void verifySearchResultContains(String url, List<String> expectedValues) throws Exception {\n    HttpResponse response = doPost(url, null);\n    Assert.assertEquals(200, response.getStatusLine().getStatusCode());\n    String result = EntityUtils.toString(response.getEntity());\n    List<String> reply = new Gson().fromJson(result, new TypeToken<List<String>>() { }.getType());\n    Assert.assertTrue(reply.containsAll(expectedValues));\n  }","id":16809,"modified_method":"private void verifySearchResultContains(String url, List<String> expectedValues) throws Exception {\n    HttpResponse response = doPost(url, null);\n    Assert.assertEquals(200, response.getStatusLine().getStatusCode());\n    String result = EntityUtils.toString(response.getEntity());\n    List<String> reply = GSON.fromJson(result, new TypeToken<List<String>>() {\n    }.getType());\n    Assert.assertTrue(reply.containsAll(expectedValues));\n  }","commit_id":"5cee8ab8207978a78c1a52dd9aac34396c5594a1","url":"https://github.com/caskdata/cdap"},{"original_method":"private void verifyAggregateQueryResult(String url, List<Long> expectedValue) throws Exception {\n    MetricQueryResult queryResult = post(url, MetricQueryResult.class);\n    for (int i = 0; i < queryResult.getSeries().length; i++) {\n      Assert.assertEquals((Long) expectedValue.get(i),\n                          (Long) queryResult.getSeries()[i].getData()[0].getValue());\n    }\n  }","id":16810,"modified_method":"private void verifyAggregateQueryResult(String url, List<Long> expectedValue) throws Exception {\n    MetricQueryResult queryResult = post(url, MetricQueryResult.class);\n    for (int i = 0; i < queryResult.getSeries().length; i++) {\n      Assert.assertEquals(expectedValue.get(i), (Long) queryResult.getSeries()[i].getData()[0].getValue());\n    }\n  }","commit_id":"5cee8ab8207978a78c1a52dd9aac34396c5594a1","url":"https://github.com/caskdata/cdap"},{"original_method":"@Test\n  public void testTimeRangeQueryBatch() throws Exception {\n    // note: times are in seconds, hence \"divide by 1000\";\n    long start = (emitTs - 60 * 1000) / 1000;\n    long end = (emitTs + 60 * 1000) / 1000;\n\n    verifyRangeQueryResult(\n      \"/v3/metrics/query?\" + getTags(\"yourspace\", \"WCount1\", \"WCounter\", \"splitter\") +\n        \"&metric=system.reads&start=\" + start + \"&end=\"\n        + end, 2, 3);\n\n    JsonObject q1 = getSingleQueryJson(ImmutableMap.of(\"namespace\", \"yourspace\", \"app\", \"WCount1\", \"flow\", \"WCounter\",\n                                                       \"flowlet\", \"splitter\"),\n                                       ImmutableList.of(\"system.reads\"), ImmutableList.<String>of(),\n                                       ImmutableMap.of(\"start\", String.valueOf(start), \"end\", String.valueOf(end)));\n\n    JsonObject q2 = getSingleQueryJson(ImmutableMap.of(\"namespace\", \"yourspace\", \"app\", \"WCount1\", \"flow\", \"WCounter\"),\n                                       ImmutableList.of(\"system.reads\"), ImmutableList.<String>of(\"flowlet\"),\n                                       ImmutableMap.of(\"start\", String.valueOf(start), \"end\", String.valueOf(end)));\n    JsonArray queries = new JsonArray();\n    queries.add(q1);\n    queries.add(q2);\n    JsonObject taggedQuery = new JsonObject();\n    taggedQuery.add(\"timeRangeBatch\", queries);\n    ImmutableMap<String, ImmutableList<ImmutableList<QueryResult>>> expected =\n      ImmutableMap.of(\"timeRangeBatch\", ImmutableList.<ImmutableList<QueryResult>>of(\n        ImmutableList.<QueryResult>of(new QueryResult(ImmutableMap.<String, String>of(), \"system.reads\", 2, 3)),\n        ImmutableList.<QueryResult>of(new QueryResult(ImmutableMap.<String, String>of(\"flowlet\", \"counter\"),\n                                                      \"system.reads\", 1, 1),\n                                      new QueryResult(ImmutableMap.<String, String>of(\"flowlet\", \"splitter\"),\n                                                      \"system.reads\", 2, 3)\n                                      )));\n    batchTest(taggedQuery, expected);\n  }","id":16811,"modified_method":"@Test\n  public void testTimeRangeQueryBatch() throws Exception {\n    // note: times are in seconds, hence \"divide by 1000\";\n    long start = (emitTs - 60 * 1000) / 1000;\n    long end = (emitTs + 60 * 1000) / 1000;\n\n    QueryRequest query1 = new QueryRequest(getContextMap(\"namespace\", \"yourspace\", \"app\", \"WCount1\",\n                                                         \"flow\", \"WCounter\", \"flowlet\", \"splitter\"),\n                                           ImmutableList.of(\"system.reads\"), ImmutableList.<String>of(),\n                                           ImmutableMap.of(\"start\", String.valueOf(start), \"end\", String.valueOf(end)));\n\n    QueryRequest query2 = new QueryRequest(getContextMap(\"namespace\", \"yourspace\", \"app\", \"WCount1\",\n                                                         \"flow\", \"WCounter\"), ImmutableList.of(\"system.reads\"),\n                                           ImmutableList.of(\"flowlet\"),\n                                           ImmutableMap.of(\"start\", String.valueOf(start), \"end\", String.valueOf(end)));\n\n    ImmutableMap<String, ImmutableList<ImmutableList<QueryResult>>> expected =\n      ImmutableMap.of(\"timeRangeBatch\", ImmutableList.of(\n        ImmutableList.of(new QueryResult(ImmutableMap.<String, String>of(), \"system.reads\", 2, 3)),\n        ImmutableList.of(new QueryResult(ImmutableMap.of(\"flowlet\", \"counter\"),\n                                         \"system.reads\", 1, 1),\n                         new QueryResult(ImmutableMap.of(\"flowlet\", \"splitter\"),\n                                         \"system.reads\", 2, 3)\n        )));\n\n    List<QueryRequest> queryRequests = ImmutableList.of(query1, query2);\n    Map<String, List<QueryRequest>> batchQueries = ImmutableMap.<String, List<QueryRequest>>of(\"timeRangeBatch\",\n                                                                                       queryRequests);\n    batchTest(batchQueries, expected);\n  }","commit_id":"5cee8ab8207978a78c1a52dd9aac34396c5594a1","url":"https://github.com/caskdata/cdap"},{"original_method":"@Test\n  public void testAggregateQueryBatch() throws Exception {\n    JsonObject q1 = getSingleQueryJson(ImmutableMap.of(\"namespace\", \"yourspace\", \"app\", \"WCount1\", \"flow\", \"WCounter\",\n                                                       \"flowlet\", \"splitter\"),\n                                       ImmutableList.of(\"system.reads\"), ImmutableList.<String>of(),\n                                       ImmutableMap.of(\"aggregate\", \"true\"));\n    JsonObject q2 = getSingleQueryJson(ImmutableMap.of(\"namespace\", \"yourspace\", \"app\", \"WCount1\", \"flow\", \"WCounter\",\n                                                       \"flowlet\", \"counter\"),\n                                       ImmutableList.of(\"system.reads\"), ImmutableList.<String>of(),\n                                       ImmutableMap.of(\"aggregate\", \"true\"));\n    JsonArray queries = new JsonArray();\n    queries.add(q1);\n    queries.add(q2);\n    JsonObject taggedQuery = new JsonObject();\n    taggedQuery.add(\"testBatch\", queries);\n    ImmutableMap<String, ImmutableList<ImmutableList<QueryResult>>> expected =\n      ImmutableMap.of(\"testBatch\", ImmutableList.<ImmutableList<QueryResult>>of(\n        ImmutableList.<QueryResult>of(new QueryResult(ImmutableMap.<String, String>of(), \"system.reads\", 1, 3)),\n        ImmutableList.<QueryResult>of(new QueryResult(ImmutableMap.<String, String>of(), \"system.reads\", 1, 1))));\n\n    q1 = getSingleQueryJson(ImmutableMap.of(\"namespace\", \"yourspace\", \"app\", \"WCount1\", \"flow\", \"WCounter\",\n                                            \"flowlet\", \"*\"),\n                            ImmutableList.of(\"system.reads\"), ImmutableList.<String>of(),\n                            ImmutableMap.of(\"aggregate\", \"true\"));\n\n    q2 = getSingleQueryJson(ImmutableMap.of(\"namespace\", \"myspace\", \"app\", \"WordCount1\", \"flow\", \"WordCounter\",\n                                            \"flowlet\", \"splitter\"),\n                            ImmutableList.of(\"system.reads\", \"system.writes\"), ImmutableList.<String>of(),\n                            ImmutableMap.of(\"aggregate\", \"true\"));\n    queries = new JsonArray();\n    queries.add(q1);\n    queries.add(q2);\n    batchTest(taggedQuery, expected);\n    taggedQuery = new JsonObject();\n    taggedQuery.add(\"testBatch2\", queries);\n    expected = ImmutableMap.of(\"testBatch2\", ImmutableList.<ImmutableList<QueryResult>>of(\n      ImmutableList.<QueryResult>of(new QueryResult(ImmutableMap.<String, String>of(), \"system.reads\", 1, 4)),\n      ImmutableList.<QueryResult>of(new QueryResult(ImmutableMap.<String, String>of(), \"system.reads\", 1, 2),\n                                    new QueryResult(ImmutableMap.<String, String>of(), \"system.writes\", 1, 2))\n    ));\n    batchTest(taggedQuery, expected);\n    taggedQuery = new JsonObject();\n    queries = new JsonArray();\n    queries.add(q1);\n    taggedQuery.add(\"testBatch1\", queries);\n    queries = new JsonArray();\n    queries.add(q2);\n    taggedQuery.add(\"testBatch2\", queries);\n\n    expected = ImmutableMap.of(\"testBatch1\", ImmutableList.<ImmutableList<QueryResult>>of(\n                                 ImmutableList.<QueryResult>of(new QueryResult(ImmutableMap.<String, String>of(),\n                                                                               \"system.reads\", 1, 4))),\n                               \"testBatch2\", ImmutableList.<ImmutableList<QueryResult>>of(\n        ImmutableList.<QueryResult>of(new QueryResult(ImmutableMap.<String, String>of(), \"system.reads\", 1, 2),\n                                      new QueryResult(ImmutableMap.<String, String>of(), \"system.writes\", 1, 2)))\n    );\n    batchTest(taggedQuery, expected);\n\n    // test invalid request - query without any query Params and body content\n    HttpResponse response = doPost(\"/v3/metrics/query\", null);\n    Assert.assertEquals(400, response.getStatusLine().getStatusCode());\n  }","id":16812,"modified_method":"@Test\n  public void testAggregateQueryBatch() throws Exception {\n\n    Map<String, List<QueryRequest>> batchQueryInput = Maps.newHashMap();\n\n    QueryRequest query1 = new QueryRequest(getContextMap(\"namespace\", \"yourspace\", \"app\", \"WCount1\", \"flow\", \"WCounter\",\n                                                         \"flowlet\", \"splitter\"),\n                                           ImmutableList.of(\"system.reads\"), ImmutableList.<String>of(),\n                                           ImmutableMap.of(\"aggregate\", \"true\"));\n\n    QueryRequest query2 = new QueryRequest(getContextMap(\"namespace\", \"yourspace\", \"app\", \"WCount1\", \"flow\", \"WCounter\",\n                                                         \"flowlet\", \"counter\"),\n                                           ImmutableList.of(\"system.reads\"),\n                                           ImmutableList.<String>of(), ImmutableMap.of(\"aggregate\", \"true\"));\n\n    QueryRequest query3 = new QueryRequest(getContextMap(\"namespace\", \"yourspace\", \"app\", \"WCount1\", \"flow\", \"WCounter\",\n                                                         \"flowlet\", \"*\"),\n                                           ImmutableList.of(\"system.reads\"),\n                                           ImmutableList.<String>of(), ImmutableMap.of(\"aggregate\", \"true\"));\n\n    QueryRequest query4 = new QueryRequest(ImmutableMap.of(\"namespace\", \"myspace\", \"app\", \"WordCount1\", \"flow\",\n                                                           \"WordCounter\", \"flowlet\", \"splitter\"),\n                                           ImmutableList.of(\"system.reads\", \"system.writes\"),\n                                           ImmutableList.<String>of(), ImmutableMap.of(\"aggregate\", \"true\"));\n\n    // test batching of multiple queries under a single query-id\n    batchQueryInput.put(\"testBatch\", ImmutableList.of(query1, query2));\n    ImmutableMap<String, ImmutableList<ImmutableList<QueryResult>>> expected =\n      ImmutableMap.of(\"testBatch\", ImmutableList.<ImmutableList<QueryResult>>of(\n        ImmutableList.<QueryResult>of(new QueryResult(ImmutableMap.<String, String>of(), \"system.reads\", 1, 3)),\n        ImmutableList.<QueryResult>of(new QueryResult(ImmutableMap.<String, String>of(), \"system.reads\", 1, 1))));\n\n    batchTest(batchQueryInput, expected);\n\n    // test batching of multiple queries under a single query-id, with one query having multiple metrics\n    batchQueryInput.clear();\n    batchQueryInput.put(\"testBatch2\", ImmutableList.of(query3, query4));\n    expected = ImmutableMap.of(\"testBatch2\", ImmutableList.<ImmutableList<QueryResult>>of(\n      ImmutableList.<QueryResult>of(new QueryResult(ImmutableMap.<String, String>of(), \"system.reads\", 1, 4)),\n      ImmutableList.<QueryResult>of(new QueryResult(ImmutableMap.<String, String>of(), \"system.reads\", 1, 2),\n                                    new QueryResult(ImmutableMap.<String, String>of(), \"system.writes\", 1, 2))\n    ));\n\n    batchTest(batchQueryInput, expected);\n\n    // test batching with multiple query-id\n    batchQueryInput.clear();\n    batchQueryInput.put(\"testBatch1\", ImmutableList.of(query3));\n    batchQueryInput.put(\"testBatch2\", ImmutableList.of(query4));\n    expected = ImmutableMap.of(\"testBatch1\", ImmutableList.of(\n                                 ImmutableList.of(new QueryResult(ImmutableMap.<String, String>of(),\n                                                                  \"system.reads\", 1, 4))),\n                               \"testBatch2\", ImmutableList.of(\n        ImmutableList.of(new QueryResult(ImmutableMap.<String, String>of(), \"system.reads\", 1, 2),\n                         new QueryResult(ImmutableMap.<String, String>of(), \"system.writes\", 1, 2)))\n    );\n\n    batchTest(batchQueryInput, expected);\n\n    // test invalid request - query without any query Params and body content\n    HttpResponse response = doPost(\"/v3/metrics/query\", null);\n    Assert.assertEquals(400, response.getStatusLine().getStatusCode());\n  }","commit_id":"5cee8ab8207978a78c1a52dd9aac34396c5594a1","url":"https://github.com/caskdata/cdap"},{"original_method":"private void verifySearchResultWithTags(String url, List<Map<String, String>> expectedValues) throws Exception {\n    HttpResponse response = doPost(url, null);\n    Assert.assertEquals(200, response.getStatusLine().getStatusCode());\n    String result = EntityUtils.toString(response.getEntity(), Charsets.UTF_8);\n    List<Map<String, String>> reply = new Gson().fromJson(result,\n                                                          new TypeToken<List<Map<String, String>>>() { }.getType());\n    Assert.assertTrue(reply.containsAll(expectedValues));\n  }","id":16813,"modified_method":"private void verifySearchResultWithTags(String url, List<Map<String, String>> expectedValues) throws Exception {\n    HttpResponse response = doPost(url, null);\n    Assert.assertEquals(200, response.getStatusLine().getStatusCode());\n    String result = EntityUtils.toString(response.getEntity(), Charsets.UTF_8);\n    List<Map<String, String>> reply = GSON.fromJson(result,\n                                                          new TypeToken<List<Map<String, String>>>() { }.getType());\n    Assert.assertTrue(reply.containsAll(expectedValues));\n  }","commit_id":"5cee8ab8207978a78c1a52dd9aac34396c5594a1","url":"https://github.com/caskdata/cdap"},{"original_method":"private  void batchTest(JsonObject batchRequests,\n                          ImmutableMap<String, ImmutableList<ImmutableList<QueryResult>>> expected) throws Exception {\n    String url = \"/v3/metrics/query\";\n    HttpURLConnection urlConn = openURL(MetricsSuiteTestBase.getEndPoint(url).toURL(),\n                                        HttpMethod.POST);\n    urlConn.setDoOutput(true);\n    String jsonBatch = new Gson().toJson(batchRequests);\n    urlConn.getOutputStream().write(jsonBatch.getBytes());\n    Assert.assertEquals(HttpResponseStatus.OK.getCode(), urlConn.getResponseCode());\n\n    String result = IOUtils.toString(urlConn.getInputStream(), Charsets.UTF_8);\n    Map<String, List<MetricQueryResult>> results =\n      new Gson().fromJson(result, new TypeToken<Map<String, List<MetricQueryResult>>>() {\n      }.getType());\n    urlConn.disconnect();\n    // check we have all the keys\n    Assert.assertEquals(expected.keySet(), results.keySet());\n    for (Map.Entry<String, List<MetricQueryResult>> entry : results.entrySet()) {\n      ImmutableList<ImmutableList<QueryResult>> expectedQueryResult = expected.get(entry.getKey());\n      List<MetricQueryResult> actualQueryResult = entry.getValue();\n      // check list length size\n      Assert.assertEquals(expectedQueryResult.size(), actualQueryResult.size());\n      for (int i = 0; i < expectedQueryResult.size(); i++) {\n        compareQueryResults(expectedQueryResult.get(i), actualQueryResult.get(i));\n      }\n    }\n  }","id":16814,"modified_method":"private  void batchTest(Map<String, List<QueryRequest>> jsonBatch,\n                          ImmutableMap<String, ImmutableList<ImmutableList<QueryResult>>> expected) throws Exception {\n    String url = \"/v3/metrics/query\";\n    Map<String, List<MetricQueryResult>> results =\n      post(url, GSON.toJson(jsonBatch), new TypeToken<Map<String, List<MetricQueryResult>>>() {\n      }.getType());\n\n    // check we have all the keys\n    Assert.assertEquals(expected.keySet(), results.keySet());\n    for (Map.Entry<String, List<MetricQueryResult>> entry : results.entrySet()) {\n      ImmutableList<ImmutableList<QueryResult>> expectedQueryResult = expected.get(entry.getKey());\n      List<MetricQueryResult> actualQueryResult = entry.getValue();\n      // check list length size\n      Assert.assertEquals(expectedQueryResult.size(), actualQueryResult.size());\n\n      for (int i = 0; i < actualQueryResult.size(); i++) {\n        compareQueryResults(expectedQueryResult.get(i), actualQueryResult.get(i));\n      }\n    }\n  }","commit_id":"5cee8ab8207978a78c1a52dd9aac34396c5594a1","url":"https://github.com/caskdata/cdap"},{"original_method":"public void testSelectBirthday() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Joe Bloggs\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Joe Bloggs\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tThread.sleep(5000);\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"_2_birthdayMonth\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"_2_birthdayMonth\",\n\t\t\tRuntimeVariables.replace(\"Birthday Month\"));\n\t\tselenium.select(\"_2_birthdayMonth\",\n\t\t\tRuntimeVariables.replace(\"label=March\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (\"March\".equals(selenium.getSelectedLabel(\"_2_birthdayMonth\"))) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.select(\"_2_birthdayYear\",\n\t\t\tRuntimeVariables.replace(\"label=1986\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (\"1986\".equals(selenium.getSelectedLabel(\"_2_birthdayYear\"))) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//button\", RuntimeVariables.replace(\"\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//div[2]/div/div[1]/div/div\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tThread.sleep(5000);\n\t\tselenium.clickAt(\"link=Prev\", RuntimeVariables.replace(\"\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isPartialText(\n\t\t\t\t\t\t\t\"//div[@class='aui-calendar-title']\", \"April 1986\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Prev\", RuntimeVariables.replace(\"\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isPartialText(\n\t\t\t\t\t\t\t\"//div[@class='aui-calendar-title']\", \"May 1986\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=31\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=31\", RuntimeVariables.replace(\"\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (!selenium.isVisible(\"//div[@class='aui-calendar-title']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(\"May\", selenium.getSelectedLabel(\"_2_birthdayMonth\"));\n\t\tassertEquals(\"31\", selenium.getSelectedLabel(\"_2_birthdayDay\"));\n\t\tassertEquals(\"1986\", selenium.getSelectedLabel(\"_2_birthdayYear\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"Your request completed successfully.\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (\"May\".equals(selenium.getSelectedLabel(\"_2_birthdayMonth\"))) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (\"31\".equals(selenium.getSelectedLabel(\"_2_birthdayDay\"))) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (\"1986\".equals(selenium.getSelectedLabel(\"_2_birthdayYear\"))) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(\"May\", selenium.getSelectedLabel(\"_2_birthdayMonth\"));\n\t\tassertEquals(\"31\", selenium.getSelectedLabel(\"_2_birthdayDay\"));\n\t\tassertEquals(\"1986\", selenium.getSelectedLabel(\"_2_birthdayYear\"));\n\t}","id":16815,"modified_method":"public void testSelectBirthday() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Joe Bloggs\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Joe Bloggs\",\n\t\t\tRuntimeVariables.replace(\"Joe Bloggs\"));\n\t\tThread.sleep(5000);\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//select[@id='_2_birthdayMonth']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.click(\"//select[@id='_2_birthdayMonth']\");\n\t\tselenium.select(\"//select[@id='_2_birthdayMonth']\",\n\t\t\tRuntimeVariables.replace(\"March\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (\"March\".equals(selenium.getSelectedLabel(\n\t\t\t\t\t\t\t\t\"//select[@id='_2_birthdayMonth']\"))) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.select(\"//select[@id='_2_birthdayYear']\",\n\t\t\tRuntimeVariables.replace(\"1986\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (\"1986\".equals(selenium.getSelectedLabel(\n\t\t\t\t\t\t\t\t\"//select[@id='_2_birthdayYear']\"))) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//button[@id='buttonTest']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//button[@id='buttonTest']\",\n\t\t\tRuntimeVariables.replace(\"Date Picker\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//div[@class='aui-calendar-title']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"March 1986\"),\n\t\t\tselenium.getText(\"//div[@class='aui-calendar-title']\"));\n\t\tselenium.clickAt(\"link=Prev\", RuntimeVariables.replace(\"Prev\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (RuntimeVariables.replace(\"April 1986\")\n\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\"//div[@class='aui-calendar-title']\"))) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"April 1986\"),\n\t\t\tselenium.getText(\"//div[@class='aui-calendar-title']\"));\n\t\tselenium.clickAt(\"link=Prev\", RuntimeVariables.replace(\"Prev\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (RuntimeVariables.replace(\"May 1986\")\n\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\"//div[@class='aui-calendar-title']\"))) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"May 1986\"),\n\t\t\tselenium.getText(\"//div[@class='aui-calendar-title']\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=31\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=31\", RuntimeVariables.replace(\"31\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (!selenium.isVisible(\"//div[@class='aui-calendar-title']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(\"May\",\n\t\t\tselenium.getSelectedLabel(\"//select[@id='_2_birthdayMonth']\"));\n\t\tassertEquals(\"31\",\n\t\t\tselenium.getSelectedLabel(\"//select[@id='_2_birthdayDay']\"));\n\t\tassertEquals(\"1986\",\n\t\t\tselenium.getSelectedLabel(\"//select[@id='_2_birthdayYear']\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(\"May\",\n\t\t\tselenium.getSelectedLabel(\"//select[@id='_2_birthdayMonth']\"));\n\t\tassertEquals(\"31\",\n\t\t\tselenium.getSelectedLabel(\"//select[@id='_2_birthdayDay']\"));\n\t\tassertEquals(\"1986\",\n\t\t\tselenium.getSelectedLabel(\"//select[@id='_2_birthdayYear']\"));\n\t\tassertEquals(\"May\",\n\t\t\tselenium.getSelectedLabel(\"//select[@id='_2_birthdayMonth']\"));\n\t\tassertEquals(\"31\",\n\t\t\tselenium.getSelectedLabel(\"//select[@id='_2_birthdayDay']\"));\n\t\tassertEquals(\"1986\",\n\t\t\tselenium.getSelectedLabel(\"//select[@id='_2_birthdayYear']\"));\n\t}","commit_id":"4fac3a3543e696ba04d5f8005034a591f2a8710e","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testSelectTimeZonePacificStandardTime()\n\t\tthrows Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Joe Bloggs\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Joe Bloggs\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tThread.sleep(5000);\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"displaySettingsLink\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"displaySettingsLink\", RuntimeVariables.replace(\"\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"_2_timeZoneId\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.select(\"_2_timeZoneId\",\n\t\t\tRuntimeVariables.replace(\"label=(UTC -08:00) Pacific Standard Time\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isTextPresent(\n\t\t\t\t\t\t\t\"Your request completed successfully.\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (\"(UTC -08:00) Pacific Standard Time\".equals(\n\t\t\t\t\t\t\tselenium.getSelectedLabel(\"_2_timeZoneId\"))) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"Your request completed successfully.\"));\n\t\tassertEquals(\"(UTC -08:00) Pacific Standard Time\",\n\t\t\tselenium.getSelectedLabel(\"_2_timeZoneId\"));\n\t}","id":16816,"modified_method":"public void testSelectTimeZonePacificStandardTime()\n\t\tthrows Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Joe Bloggs\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Joe Bloggs\",\n\t\t\tRuntimeVariables.replace(\"Joe Bloggs\"));\n\t\tThread.sleep(5000);\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//a[@id='_2_displaySettingsLink']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//a[@id='_2_displaySettingsLink']\",\n\t\t\tRuntimeVariables.replace(\"Display Settings\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//select[@name='_2_timeZoneId']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.select(\"//select[@name='_2_timeZoneId']\",\n\t\t\tRuntimeVariables.replace(\"(UTC -08:00) Pacific Standard Time\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(\"(UTC -08:00) Pacific Standard Time\",\n\t\t\tselenium.getSelectedLabel(\"//select[@name='_2_timeZoneId']\"));\n\t}","commit_id":"4fac3a3543e696ba04d5f8005034a591f2a8710e","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testTearDownBirthday() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Joe Bloggs\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Joe Bloggs\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"_2_birthdayMonth\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.select(\"_2_birthdayMonth\",\n\t\t\tRuntimeVariables.replace(\"label=January\"));\n\t\tselenium.select(\"_2_birthdayDay\", RuntimeVariables.replace(\"label=1\"));\n\t\tselenium.select(\"_2_birthdayYear\",\n\t\t\tRuntimeVariables.replace(\"label=1970\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t}","id":16817,"modified_method":"public void testTearDownBirthday() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Joe Bloggs\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Joe Bloggs\",\n\t\t\tRuntimeVariables.replace(\"Joe Bloggs\"));\n\t\tThread.sleep(5000);\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//select[@id='_2_birthdayMonth']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.select(\"//select[@id='_2_birthdayMonth']\",\n\t\t\tRuntimeVariables.replace(\"January\"));\n\t\tselenium.select(\"//select[@id='_2_birthdayDay']\",\n\t\t\tRuntimeVariables.replace(\"1\"));\n\t\tselenium.select(\"//select[@id='_2_birthdayYear']\",\n\t\t\tRuntimeVariables.replace(\"1970\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(\"January\",\n\t\t\tselenium.getSelectedLabel(\"//select[@id='_2_birthdayMonth']\"));\n\t\tassertEquals(\"1\",\n\t\t\tselenium.getSelectedLabel(\"//select[@id='_2_birthdayDay']\"));\n\t\tassertEquals(\"1970\",\n\t\t\tselenium.getSelectedLabel(\"//select[@id='_2_birthdayYear']\"));\n\t}","commit_id":"4fac3a3543e696ba04d5f8005034a591f2a8710e","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testTearDownTimeZone() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Joe Bloggs\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Joe Bloggs\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tThread.sleep(5000);\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"displaySettingsLink\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"displaySettingsLink\", RuntimeVariables.replace(\"\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"_2_timeZoneId\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.select(\"_2_timeZoneId\",\n\t\t\tRuntimeVariables.replace(\"label=(UTC ) Coordinated Universal Time\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t}","id":16818,"modified_method":"public void testTearDownTimeZone() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Joe Bloggs\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Joe Bloggs\",\n\t\t\tRuntimeVariables.replace(\"Joe Bloggs\"));\n\t\tThread.sleep(5000);\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//a[@id='_2_displaySettingsLink']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//a[@id='_2_displaySettingsLink']\",\n\t\t\tRuntimeVariables.replace(\"Display Settings\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//select[@name='_2_timeZoneId']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.select(\"//select[@name='_2_timeZoneId']\",\n\t\t\tRuntimeVariables.replace(\"(UTC ) Coordinated Universal Time\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(\"(UTC ) Coordinated Universal Time\",\n\t\t\tselenium.getSelectedLabel(\"//select[@name='_2_timeZoneId']\"));\n\t}","commit_id":"4fac3a3543e696ba04d5f8005034a591f2a8710e","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddAmpersandTag() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Tags\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"add-tag-button\", RuntimeVariables.replace(\"\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"new-tag-name\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"new-tag-name\", RuntimeVariables.replace(\"&amp;test\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Save']\", RuntimeVariables.replace(\"\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (RuntimeVariables.replace(\n\t\t\t\t\t\t\t\"One of your fields contains invalid characters.\")\n\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\"tag-portlet-messages\"))) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"One of your fields contains invalid characters.\"),\n\t\t\tselenium.getText(\"tag-portlet-messages\"));\n\t\tassertFalse(selenium.isElementPresent(\"link=&amp;test\"));\n\t}","id":16819,"modified_method":"public void testAddAmpersandTag() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Tags\", RuntimeVariables.replace(\"Tags\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@id='_99_addTagButton']\",\n\t\t\tRuntimeVariables.replace(\"Add Tag\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//input[@id='_99_name']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='_99_name']\",\n\t\t\tRuntimeVariables.replace(\"&amp;test\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//div[@id='portletMessages']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"One of your fields contains invalid characters.\"),\n\t\t\tselenium.getText(\"//div[@id='portletMessages']\"));\n\t\tassertFalse(selenium.isElementPresent(\"link=&amp;test\"));\n\t}","commit_id":"ab12c95074a09a3e4925587aae60f1926707f84d","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddApostropheTag() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Tags\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"add-tag-button\", RuntimeVariables.replace(\"\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"new-tag-name\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"new-tag-name\", RuntimeVariables.replace(\"'test'\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Save']\", RuntimeVariables.replace(\"\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (RuntimeVariables.replace(\n\t\t\t\t\t\t\t\"One of your fields contains invalid characters.\")\n\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\"tag-portlet-messages\"))) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"One of your fields contains invalid characters.\"),\n\t\t\tselenium.getText(\"tag-portlet-messages\"));\n\t\tassertFalse(selenium.isElementPresent(\"link='test'\"));\n\t}","id":16820,"modified_method":"public void testAddApostropheTag() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Tags\", RuntimeVariables.replace(\"Tags\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@id='_99_addTagButton']\",\n\t\t\tRuntimeVariables.replace(\"Add Tag\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//input[@id='_99_name']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='_99_name']\",\n\t\t\tRuntimeVariables.replace(\"'test'\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//div[@id='portletMessages']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"One of your fields contains invalid characters.\"),\n\t\t\tselenium.getText(\"//div[@id='portletMessages']\"));\n\t\tassertFalse(selenium.isElementPresent(\"link='test'\"));\n\t}","commit_id":"ab12c95074a09a3e4925587aae60f1926707f84d","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddAsteriskTag() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Tags\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"add-tag-button\", RuntimeVariables.replace(\"\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"new-tag-name\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"new-tag-name\", RuntimeVariables.replace(\"*test\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Save']\", RuntimeVariables.replace(\"\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (RuntimeVariables.replace(\n\t\t\t\t\t\t\t\"One of your fields contains invalid characters.\")\n\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\"tag-portlet-messages\"))) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"One of your fields contains invalid characters.\"),\n\t\t\tselenium.getText(\"tag-portlet-messages\"));\n\t\tassertFalse(selenium.isElementPresent(\"link=*test\"));\n\t}","id":16821,"modified_method":"public void testAddAsteriskTag() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Tags\", RuntimeVariables.replace(\"Tags\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@id='_99_addTagButton']\",\n\t\t\tRuntimeVariables.replace(\"Add Tag\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//input[@id='_99_name']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='_99_name']\",\n\t\t\tRuntimeVariables.replace(\"*test\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//div[@id='portletMessages']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"One of your fields contains invalid characters.\"),\n\t\t\tselenium.getText(\"//div[@id='portletMessages']\"));\n\t\tassertFalse(selenium.isElementPresent(\"link=*test\"));\n\t}","commit_id":"ab12c95074a09a3e4925587aae60f1926707f84d","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddAtTag() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Tags\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"add-tag-button\", RuntimeVariables.replace(\"\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"new-tag-name\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"new-tag-name\", RuntimeVariables.replace(\"@test\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Save']\", RuntimeVariables.replace(\"\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (RuntimeVariables.replace(\n\t\t\t\t\t\t\t\"One of your fields contains invalid characters.\")\n\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\"tag-portlet-messages\"))) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"One of your fields contains invalid characters.\"),\n\t\t\tselenium.getText(\"tag-portlet-messages\"));\n\t\tassertFalse(selenium.isElementPresent(\"link=@test\"));\n\t}","id":16822,"modified_method":"public void testAddAtTag() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Tags\", RuntimeVariables.replace(\"Tags\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@id='_99_addTagButton']\",\n\t\t\tRuntimeVariables.replace(\"Add Tag\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//input[@id='_99_name']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='_99_name']\",\n\t\t\tRuntimeVariables.replace(\"@test\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//div[@id='portletMessages']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"One of your fields contains invalid characters.\"),\n\t\t\tselenium.getText(\"//div[@id='portletMessages']\"));\n\t\tassertFalse(selenium.isElementPresent(\"link=@test\"));\n\t}","commit_id":"ab12c95074a09a3e4925587aae60f1926707f84d","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddBackSlashTag() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Tags\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"add-tag-button\", RuntimeVariables.replace(\"\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"new-tag-name\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"new-tag-name\", RuntimeVariables.replace(\"\\\\test\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Save']\", RuntimeVariables.replace(\"\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (RuntimeVariables.replace(\n\t\t\t\t\t\t\t\"One of your fields contains invalid characters.\")\n\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\"tag-portlet-messages\"))) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"One of your fields contains invalid characters.\"),\n\t\t\tselenium.getText(\"tag-portlet-messages\"));\n\t\tassertFalse(selenium.isElementPresent(\"link=\\\\test\"));\n\t}","id":16823,"modified_method":"public void testAddBackSlashTag() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Tags\", RuntimeVariables.replace(\"Tags\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@id='_99_addTagButton']\",\n\t\t\tRuntimeVariables.replace(\"Add Tag\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//input[@id='_99_name']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='_99_name']\",\n\t\t\tRuntimeVariables.replace(\"\\\\test\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//div[@id='portletMessages']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"One of your fields contains invalid characters.\"),\n\t\t\tselenium.getText(\"//div[@id='portletMessages']\"));\n\t\tassertFalse(selenium.isElementPresent(\"link=\\\\test\"));\n\t}","commit_id":"ab12c95074a09a3e4925587aae60f1926707f84d","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddBracketTag() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Tags\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"add-tag-button\", RuntimeVariables.replace(\"\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"new-tag-name\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"new-tag-name\", RuntimeVariables.replace(\"[test]\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Save']\", RuntimeVariables.replace(\"\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (RuntimeVariables.replace(\n\t\t\t\t\t\t\t\"One of your fields contains invalid characters.\")\n\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\"tag-portlet-messages\"))) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"One of your fields contains invalid characters.\"),\n\t\t\tselenium.getText(\"tag-portlet-messages\"));\n\t\tassertFalse(selenium.isElementPresent(\"link=[test]\"));\n\t}","id":16824,"modified_method":"public void testAddBracketTag() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Tags\", RuntimeVariables.replace(\"Tags\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@id='_99_addTagButton']\",\n\t\t\tRuntimeVariables.replace(\"Add Tag\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//input[@id='_99_name']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='_99_name']\",\n\t\t\tRuntimeVariables.replace(\"[test]\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//div[@id='portletMessages']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"One of your fields contains invalid characters.\"),\n\t\t\tselenium.getText(\"//div[@id='portletMessages']\"));\n\t\tassertFalse(selenium.isElementPresent(\"link=[test]\"));\n\t}","commit_id":"ab12c95074a09a3e4925587aae60f1926707f84d","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddColonTag() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Tags\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"add-tag-button\", RuntimeVariables.replace(\"\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"new-tag-name\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"new-tag-name\", RuntimeVariables.replace(\":test\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Save']\", RuntimeVariables.replace(\"\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (RuntimeVariables.replace(\n\t\t\t\t\t\t\t\"One of your fields contains invalid characters.\")\n\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\"tag-portlet-messages\"))) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"One of your fields contains invalid characters.\"),\n\t\t\tselenium.getText(\"tag-portlet-messages\"));\n\t\tassertFalse(selenium.isElementPresent(\"link=:test\"));\n\t}","id":16825,"modified_method":"public void testAddColonTag() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Tags\", RuntimeVariables.replace(\"Tags\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@id='_99_addTagButton']\",\n\t\t\tRuntimeVariables.replace(\"Add Tag\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//input[@id='_99_name']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='_99_name']\",\n\t\t\tRuntimeVariables.replace(\":test\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//div[@id='portletMessages']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"One of your fields contains invalid characters.\"),\n\t\t\tselenium.getText(\"//div[@id='portletMessages']\"));\n\t\tassertFalse(selenium.isElementPresent(\"link=:test\"));\n\t}","commit_id":"ab12c95074a09a3e4925587aae60f1926707f84d","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddCommaTag() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Tags\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"add-tag-button\", RuntimeVariables.replace(\"\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"new-tag-name\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"new-tag-name\", RuntimeVariables.replace(\",test\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Save']\", RuntimeVariables.replace(\"\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (RuntimeVariables.replace(\n\t\t\t\t\t\t\t\"One of your fields contains invalid characters.\")\n\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\"tag-portlet-messages\"))) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"One of your fields contains invalid characters.\"),\n\t\t\tselenium.getText(\"tag-portlet-messages\"));\n\t\tassertFalse(selenium.isElementPresent(\"link=,test\"));\n\t}","id":16826,"modified_method":"public void testAddCommaTag() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Tags\", RuntimeVariables.replace(\"Tags\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@id='_99_addTagButton']\",\n\t\t\tRuntimeVariables.replace(\"Add Tag\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//input[@id='_99_name']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='_99_name']\",\n\t\t\tRuntimeVariables.replace(\",test\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//div[@id='portletMessages']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"One of your fields contains invalid characters.\"),\n\t\t\tselenium.getText(\"//div[@id='portletMessages']\"));\n\t\tassertFalse(selenium.isElementPresent(\"link=,test\"));\n\t}","commit_id":"ab12c95074a09a3e4925587aae60f1926707f84d","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddCompareCharacterTag() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Tags\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"add-tag-button\", RuntimeVariables.replace(\"\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"new-tag-name\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"new-tag-name\", RuntimeVariables.replace(\"<test>\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Save']\", RuntimeVariables.replace(\"\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (RuntimeVariables.replace(\n\t\t\t\t\t\t\t\"One of your fields contains invalid characters.\")\n\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\"tag-portlet-messages\"))) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"One of your fields contains invalid characters.\"),\n\t\t\tselenium.getText(\"tag-portlet-messages\"));\n\t\tassertFalse(selenium.isElementPresent(\"link=<test>\"));\n\t}","id":16827,"modified_method":"public void testAddCompareCharacterTag() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Tags\", RuntimeVariables.replace(\"Tags\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@id='_99_addTagButton']\",\n\t\t\tRuntimeVariables.replace(\"Add Tag\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//input[@id='_99_name']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='_99_name']\",\n\t\t\tRuntimeVariables.replace(\"<test>\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//div[@id='portletMessages']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"One of your fields contains invalid characters.\"),\n\t\t\tselenium.getText(\"//div[@id='portletMessages']\"));\n\t\tassertFalse(selenium.isElementPresent(\"link=<test>\"));\n\t}","commit_id":"ab12c95074a09a3e4925587aae60f1926707f84d","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddCurlyBraceTag() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Tags\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"add-tag-button\", RuntimeVariables.replace(\"\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"new-tag-name\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"new-tag-name\", RuntimeVariables.replace(\"{test}\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Save']\", RuntimeVariables.replace(\"\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (RuntimeVariables.replace(\n\t\t\t\t\t\t\t\"One of your fields contains invalid characters.\")\n\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\"tag-portlet-messages\"))) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"One of your fields contains invalid characters.\"),\n\t\t\tselenium.getText(\"tag-portlet-messages\"));\n\t\tassertFalse(selenium.isElementPresent(\"link={test}\"));\n\t}","id":16828,"modified_method":"public void testAddCurlyBraceTag() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Tags\", RuntimeVariables.replace(\"Tags\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@id='_99_addTagButton']\",\n\t\t\tRuntimeVariables.replace(\"Add Tag\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//input[@id='_99_name']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='_99_name']\",\n\t\t\tRuntimeVariables.replace(\"{test}\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//div[@id='portletMessages']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"One of your fields contains invalid characters.\"),\n\t\t\tselenium.getText(\"//div[@id='portletMessages']\"));\n\t\tassertFalse(selenium.isElementPresent(\"link={test}\"));\n\t}","commit_id":"ab12c95074a09a3e4925587aae60f1926707f84d","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddDuplicateTag() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Tags\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"add-tag-button\", RuntimeVariables.replace(\"\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"new-tag-name\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"new-tag-name\", RuntimeVariables.replace(\"selenium\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Save']\", RuntimeVariables.replace(\"\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (RuntimeVariables.replace(\"That tag already exists.\")\n\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\"tag-portlet-messages\"))) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"That tag already exists.\"),\n\t\t\tselenium.getText(\"tag-portlet-messages\"));\n\t\tassertFalse(selenium.isElementPresent(\"//li[2]/span/a\"));\n\t}","id":16829,"modified_method":"public void testAddDuplicateTag() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Tags\", RuntimeVariables.replace(\"Tags\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@id='_99_addTagButton']\",\n\t\t\tRuntimeVariables.replace(\"Add Tag\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//input[@id='_99_name']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='_99_name']\",\n\t\t\tRuntimeVariables.replace(\"selenium\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//div[@id='portletMessages']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"That tag already exists.\"),\n\t\t\tselenium.getText(\"//div[@id='portletMessages']\"));\n\t}","commit_id":"ab12c95074a09a3e4925587aae60f1926707f84d","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddEqualSignTag() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Tags\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"add-tag-button\", RuntimeVariables.replace(\"\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"new-tag-name\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"new-tag-name\", RuntimeVariables.replace(\"=test\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Save']\", RuntimeVariables.replace(\"\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (RuntimeVariables.replace(\n\t\t\t\t\t\t\t\"One of your fields contains invalid characters.\")\n\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\"tag-portlet-messages\"))) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"One of your fields contains invalid characters.\"),\n\t\t\tselenium.getText(\"tag-portlet-messages\"));\n\t\tassertFalse(selenium.isElementPresent(\"link==test\"));\n\t}","id":16830,"modified_method":"public void testAddEqualSignTag() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Tags\", RuntimeVariables.replace(\"Tags\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@id='_99_addTagButton']\",\n\t\t\tRuntimeVariables.replace(\"Add Tag\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//input[@id='_99_name']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='_99_name']\",\n\t\t\tRuntimeVariables.replace(\"=test\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//div[@id='portletMessages']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"One of your fields contains invalid characters.\"),\n\t\t\tselenium.getText(\"//div[@id='portletMessages']\"));\n\t\tassertFalse(selenium.isElementPresent(\"link==test\"));\n\t}","commit_id":"ab12c95074a09a3e4925587aae60f1926707f84d","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddForwardSlashTag() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Tags\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"add-tag-button\", RuntimeVariables.replace(\"\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"new-tag-name\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"new-tag-name\", RuntimeVariables.replace(\"/test\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Save']\", RuntimeVariables.replace(\"\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (RuntimeVariables.replace(\n\t\t\t\t\t\t\t\"One of your fields contains invalid characters.\")\n\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\"tag-portlet-messages\"))) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"One of your fields contains invalid characters.\"),\n\t\t\tselenium.getText(\"tag-portlet-messages\"));\n\t\tassertFalse(selenium.isElementPresent(\"link=/test\"));\n\t}","id":16831,"modified_method":"public void testAddForwardSlashTag() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Tags\", RuntimeVariables.replace(\"Tags\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@id='_99_addTagButton']\",\n\t\t\tRuntimeVariables.replace(\"Add Tag\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//input[@id='_99_name']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='_99_name']\",\n\t\t\tRuntimeVariables.replace(\"/test\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//div[@id='portletMessages']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"One of your fields contains invalid characters.\"),\n\t\t\tselenium.getText(\"//div[@id='portletMessages']\"));\n\t\tassertFalse(selenium.isElementPresent(\"link=/test\"));\n\t}","commit_id":"ab12c95074a09a3e4925587aae60f1926707f84d","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddNullTag() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Tags\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"add-tag-button\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"add-tag-button\", RuntimeVariables.replace(\"\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"new-tag-name\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"new-tag-name\", RuntimeVariables.replace(\"\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Save']\", RuntimeVariables.replace(\"\"));\n\t\tThread.sleep(5000);\n\t\tassertFalse(selenium.isElementPresent(\"//li[2]/span/a\"));\n\t}","id":16832,"modified_method":"public void testAddNullTag() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Tags\", RuntimeVariables.replace(\"Tags\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@id='_99_addTagButton']\",\n\t\t\tRuntimeVariables.replace(\"Add Tag\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//input[@id='_99_name']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='_99_name']\", RuntimeVariables.replace(\"\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//div[@id='portletMessages']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"One of your fields contains invalid characters.\"),\n\t\t\tselenium.getText(\"//div[@id='portletMessages']\"));\n\t\tassertFalse(selenium.isElementPresent(\"//div[2]/ul/li[2]/div/span/a\"));\n\t}","commit_id":"ab12c95074a09a3e4925587aae60f1926707f84d","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddPercentTag() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Tags\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"add-tag-button\", RuntimeVariables.replace(\"\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"new-tag-name\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"new-tag-name\", RuntimeVariables.replace(\"%test\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Save']\", RuntimeVariables.replace(\"\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (RuntimeVariables.replace(\n\t\t\t\t\t\t\t\"One of your fields contains invalid characters.\")\n\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\"tag-portlet-messages\"))) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"One of your fields contains invalid characters.\"),\n\t\t\tselenium.getText(\"tag-portlet-messages\"));\n\t\tassertFalse(selenium.isElementPresent(\"link=%test\"));\n\t}","id":16833,"modified_method":"public void testAddPercentTag() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Tags\", RuntimeVariables.replace(\"Tags\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@id='_99_addTagButton']\",\n\t\t\tRuntimeVariables.replace(\"Add Tag\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//input[@id='_99_name']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='_99_name']\",\n\t\t\tRuntimeVariables.replace(\"%test\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//div[@id='portletMessages']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"One of your fields contains invalid characters.\"),\n\t\t\tselenium.getText(\"//div[@id='portletMessages']\"));\n\t\tassertFalse(selenium.isElementPresent(\"link=%test\"));\n\t}","commit_id":"ab12c95074a09a3e4925587aae60f1926707f84d","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddPlusTag() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Tags\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"add-tag-button\", RuntimeVariables.replace(\"\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"new-tag-name\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"new-tag-name\", RuntimeVariables.replace(\"+test\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Save']\", RuntimeVariables.replace(\"\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (RuntimeVariables.replace(\n\t\t\t\t\t\t\t\"One of your fields contains invalid characters.\")\n\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\"tag-portlet-messages\"))) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"One of your fields contains invalid characters.\"),\n\t\t\tselenium.getText(\"tag-portlet-messages\"));\n\t\tassertFalse(selenium.isElementPresent(\"link=+test\"));\n\t}","id":16834,"modified_method":"public void testAddPlusTag() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Tags\", RuntimeVariables.replace(\"Tags\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@id='_99_addTagButton']\",\n\t\t\tRuntimeVariables.replace(\"Add Tag\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//input[@id='_99_name']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='_99_name']\",\n\t\t\tRuntimeVariables.replace(\"+test\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//div[@id='portletMessages']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"One of your fields contains invalid characters.\"),\n\t\t\tselenium.getText(\"//div[@id='portletMessages']\"));\n\t\tassertFalse(selenium.isElementPresent(\"link=+test\"));\n\t}","commit_id":"ab12c95074a09a3e4925587aae60f1926707f84d","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddPoundTag() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Tags\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"add-tag-button\", RuntimeVariables.replace(\"\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"new-tag-name\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"new-tag-name\", RuntimeVariables.replace(\"#test\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Save']\", RuntimeVariables.replace(\"\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (RuntimeVariables.replace(\n\t\t\t\t\t\t\t\"One of your fields contains invalid characters.\")\n\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\"tag-portlet-messages\"))) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"One of your fields contains invalid characters.\"),\n\t\t\tselenium.getText(\"tag-portlet-messages\"));\n\t\tassertFalse(selenium.isElementPresent(\"link=#test\"));\n\t}","id":16835,"modified_method":"public void testAddPoundTag() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Tags\", RuntimeVariables.replace(\"Tags\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@id='_99_addTagButton']\",\n\t\t\tRuntimeVariables.replace(\"Add Tag\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//input[@id='_99_name']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='_99_name']\",\n\t\t\tRuntimeVariables.replace(\"#test\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//div[@id='portletMessages']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"One of your fields contains invalid characters.\"),\n\t\t\tselenium.getText(\"//div[@id='portletMessages']\"));\n\t\tassertFalse(selenium.isElementPresent(\"link=#test\"));\n\t}","commit_id":"ab12c95074a09a3e4925587aae60f1926707f84d","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddProperties() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Tags\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//div[4]/ul/li/span/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//div[4]/ul/li/span/a\", RuntimeVariables.replace(\"\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//div[3]/div[2]/input[1]\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//div[3]/div[2]/input[1]\",\n\t\t\tRuntimeVariables.replace(\"This is a tag for anything\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//div[3]/div[2]/input[2]\",\n\t\t\tRuntimeVariables.replace(\"related to selenium.\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tThread.sleep(500);\n\t\tselenium.clickAt(\"//td[2]/div[2]/div[3]/input[1]\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Tags\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//div[4]/ul/li/span/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//div[4]/ul/li/span/a\", RuntimeVariables.replace(\"\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//div[3]/div[2]/input[1]\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(\"This is a tag for anything\",\n\t\t\tselenium.getValue(\"//div[3]/div[2]/input[1]\"));\n\t\tassertEquals(\"related to selenium.\",\n\t\t\tselenium.getValue(\"//div[3]/div[2]/input[2]\"));\n\t}","id":16836,"modified_method":"public void testAddProperties() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Tags\", RuntimeVariables.replace(\"Tags\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//h1[@class='header-title']/span\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"selenium ide\"),\n\t\t\tselenium.getText(\"//h1[@class='header-title']/span\"));\n\t\tselenium.clickAt(\"//input[@id='editTagButton']\",\n\t\t\tRuntimeVariables.replace(\"Edit\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//input[@id='_99_name']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='_99_key0']\",\n\t\t\tRuntimeVariables.replace(\"This is a tag for anything\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='_99_value0']\",\n\t\t\tRuntimeVariables.replace(\"related to selenium.\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//div[@id='portletMessages']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request processed successfully.\"),\n\t\t\tselenium.getText(\"//div[@id='portletMessages']\"));\n\t\tselenium.clickAt(\"link=Tags\", RuntimeVariables.replace(\"Tags\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//div[@class='view-tag']/div/span[1]\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"This is a tag for anything\"),\n\t\t\tselenium.getText(\"//div[@class='view-tag']/div/span[1]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"related to selenium.\"),\n\t\t\tselenium.getText(\"//div[@class='view-tag']/div/span[2]\"));\n\t}","commit_id":"ab12c95074a09a3e4925587aae60f1926707f84d","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddQuestionTag() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Tags\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"add-tag-button\", RuntimeVariables.replace(\"\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"new-tag-name\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"new-tag-name\", RuntimeVariables.replace(\"?test\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Save']\", RuntimeVariables.replace(\"\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (RuntimeVariables.replace(\n\t\t\t\t\t\t\t\"One of your fields contains invalid characters.\")\n\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\"tag-portlet-messages\"))) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"One of your fields contains invalid characters.\"),\n\t\t\tselenium.getText(\"tag-portlet-messages\"));\n\t\tassertFalse(selenium.isElementPresent(\"link=?test\"));\n\t}","id":16837,"modified_method":"public void testAddQuestionTag() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Tags\", RuntimeVariables.replace(\"Tags\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@id='_99_addTagButton']\",\n\t\t\tRuntimeVariables.replace(\"Add Tag\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//input[@id='_99_name']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='_99_name']\",\n\t\t\tRuntimeVariables.replace(\"?test\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//div[@id='portletMessages']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"One of your fields contains invalid characters.\"),\n\t\t\tselenium.getText(\"//div[@id='portletMessages']\"));\n\t\tassertFalse(selenium.isElementPresent(\"link=?test\"));\n\t}","commit_id":"ab12c95074a09a3e4925587aae60f1926707f84d","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddQuoteTag() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Tags\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"add-tag-button\", RuntimeVariables.replace(\"\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"new-tag-name\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"new-tag-name\", RuntimeVariables.replace(\"\\\"test\\\"\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Save']\", RuntimeVariables.replace(\"\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (RuntimeVariables.replace(\n\t\t\t\t\t\t\t\"One of your fields contains invalid characters.\")\n\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\"tag-portlet-messages\"))) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"One of your fields contains invalid characters.\"),\n\t\t\tselenium.getText(\"tag-portlet-messages\"));\n\t\tassertFalse(selenium.isElementPresent(\"link=\\\"test\\\"\"));\n\t}","id":16838,"modified_method":"public void testAddQuoteTag() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Tags\", RuntimeVariables.replace(\"Tags\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@id='_99_addTagButton']\",\n\t\t\tRuntimeVariables.replace(\"Add Tag\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//input[@id='_99_name']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='_99_name']\",\n\t\t\tRuntimeVariables.replace(\"\\\"test\\\"\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//div[@id='portletMessages']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"One of your fields contains invalid characters.\"),\n\t\t\tselenium.getText(\"//div[@id='portletMessages']\"));\n\t\tassertFalse(selenium.isElementPresent(\"link=\\\"test\\\"\"));\n\t}","commit_id":"ab12c95074a09a3e4925587aae60f1926707f84d","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddSemiColonTag() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Tags\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"add-tag-button\", RuntimeVariables.replace(\"\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"new-tag-name\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"new-tag-name\", RuntimeVariables.replace(\";test\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Save']\", RuntimeVariables.replace(\"\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (RuntimeVariables.replace(\n\t\t\t\t\t\t\t\"One of your fields contains invalid characters.\")\n\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\"tag-portlet-messages\"))) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"One of your fields contains invalid characters.\"),\n\t\t\tselenium.getText(\"tag-portlet-messages\"));\n\t\tassertFalse(selenium.isElementPresent(\"link=;test\"));\n\t}","id":16839,"modified_method":"public void testAddSemiColonTag() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Tags\", RuntimeVariables.replace(\"Tags\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@id='_99_addTagButton']\",\n\t\t\tRuntimeVariables.replace(\"Add Tag\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//input[@id='_99_name']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='_99_name']\",\n\t\t\tRuntimeVariables.replace(\";test\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//div[@id='portletMessages']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"One of your fields contains invalid characters.\"),\n\t\t\tselenium.getText(\"//div[@id='portletMessages']\"));\n\t\tassertFalse(selenium.isElementPresent(\"link=;test\"));\n\t}","commit_id":"ab12c95074a09a3e4925587aae60f1926707f84d","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddTag1() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Tags\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"add-tag-button\", RuntimeVariables.replace(\"\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"new-tag-name\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"new-tag-name\", RuntimeVariables.replace(\"Blue\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Save']\", RuntimeVariables.replace(\"\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (RuntimeVariables.replace(\n\t\t\t\t\t\t\t\"Your request completed successfully.\")\n\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\"tag-portlet-messages\"))) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"tag-portlet-messages\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//td[2]/div[2]/div[3]/input[2]\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//td[2]/div[2]/div[3]/input[2]\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=blue\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isElementPresent(\"link=blue\"));\n\t}","id":16840,"modified_method":"public void testAddTag1() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Tags\", RuntimeVariables.replace(\"Tags\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@id='_99_addTagButton']\",\n\t\t\tRuntimeVariables.replace(\"Add Tag\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//input[@id='_99_name']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='_99_name']\",\n\t\t\tRuntimeVariables.replace(\"blue\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//div[@id='portletMessages']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request processed successfully.\"),\n\t\t\tselenium.getText(\"//div[@id='portletMessages']\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=blue\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t}","commit_id":"ab12c95074a09a3e4925587aae60f1926707f84d","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddTag2() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Tags\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"add-tag-button\", RuntimeVariables.replace(\"\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"new-tag-name\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"new-tag-name\", RuntimeVariables.replace(\"Green\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Save']\", RuntimeVariables.replace(\"\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (RuntimeVariables.replace(\n\t\t\t\t\t\t\t\"Your request completed successfully.\")\n\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\"tag-portlet-messages\"))) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"tag-portlet-messages\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//td[2]/div[2]/div[3]/input[2]\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//td[2]/div[2]/div[3]/input[2]\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=green\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isElementPresent(\"link=green\"));\n\t}","id":16841,"modified_method":"public void testAddTag2() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Tags\", RuntimeVariables.replace(\"Tags\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@id='_99_addTagButton']\",\n\t\t\tRuntimeVariables.replace(\"Add Tag\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//input[@id='_99_name']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='_99_name']\",\n\t\t\tRuntimeVariables.replace(\"green\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//div[@id='portletMessages']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request processed successfully.\"),\n\t\t\tselenium.getText(\"//div[@id='portletMessages']\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=green\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t}","commit_id":"ab12c95074a09a3e4925587aae60f1926707f84d","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddTag3() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Tags\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"add-tag-button\", RuntimeVariables.replace(\"\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"new-tag-name\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"new-tag-name\", RuntimeVariables.replace(\"Blue Green\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Save']\", RuntimeVariables.replace(\"\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (RuntimeVariables.replace(\n\t\t\t\t\t\t\t\"Your request completed successfully.\")\n\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\"tag-portlet-messages\"))) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"tag-portlet-messages\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//td[2]/div[2]/div[3]/input[2]\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//td[2]/div[2]/div[3]/input[2]\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=blue green\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isElementPresent(\"link=blue green\"));\n\t}","id":16842,"modified_method":"public void testAddTag3() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Tags\", RuntimeVariables.replace(\"Tags\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@id='_99_addTagButton']\",\n\t\t\tRuntimeVariables.replace(\"Add Tag\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//input[@id='_99_name']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='_99_name']\",\n\t\t\tRuntimeVariables.replace(\"blue green\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//div[@id='portletMessages']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request processed successfully.\"),\n\t\t\tselenium.getText(\"//div[@id='portletMessages']\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=blue green\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t}","commit_id":"ab12c95074a09a3e4925587aae60f1926707f84d","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddTag4() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Tags\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"add-tag-button\", RuntimeVariables.replace(\"\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"new-tag-name\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"new-tag-name\", RuntimeVariables.replace(\"Blue Car\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Save']\", RuntimeVariables.replace(\"\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (RuntimeVariables.replace(\n\t\t\t\t\t\t\t\"Your request completed successfully.\")\n\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\"tag-portlet-messages\"))) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"tag-portlet-messages\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//td[2]/div[2]/div[3]/input[2]\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//td[2]/div[2]/div[3]/input[2]\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=blue car\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isElementPresent(\"link=blue car\"));\n\t}","id":16843,"modified_method":"public void testAddTag4() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Tags\", RuntimeVariables.replace(\"Tags\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@id='_99_addTagButton']\",\n\t\t\tRuntimeVariables.replace(\"Add Tag\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//input[@id='_99_name']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='_99_name']\",\n\t\t\tRuntimeVariables.replace(\"blue car\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//div[@id='portletMessages']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request processed successfully.\"),\n\t\t\tselenium.getText(\"//div[@id='portletMessages']\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=blue car\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t}","commit_id":"ab12c95074a09a3e4925587aae60f1926707f84d","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddTag5() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Tags\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"add-tag-button\", RuntimeVariables.replace(\"\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"new-tag-name\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"new-tag-name\", RuntimeVariables.replace(\"Green Tree\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Save']\", RuntimeVariables.replace(\"\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (RuntimeVariables.replace(\n\t\t\t\t\t\t\t\"Your request completed successfully.\")\n\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\"tag-portlet-messages\"))) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"tag-portlet-messages\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//td[2]/div[2]/div[3]/input[2]\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//td[2]/div[2]/div[3]/input[2]\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=green tree\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isElementPresent(\"link=green tree\"));\n\t}","id":16844,"modified_method":"public void testAddTag5() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Tags\", RuntimeVariables.replace(\"Tags\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@id='_99_addTagButton']\",\n\t\t\tRuntimeVariables.replace(\"Add Tag\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//input[@id='_99_name']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='_99_name']\",\n\t\t\tRuntimeVariables.replace(\"green tree\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//div[@id='portletMessages']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request processed successfully.\"),\n\t\t\tselenium.getText(\"//div[@id='portletMessages']\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=green tree\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t}","commit_id":"ab12c95074a09a3e4925587aae60f1926707f84d","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddTag() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Tags\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"add-tag-button\", RuntimeVariables.replace(\"\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"new-tag-name\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"new-tag-name\", RuntimeVariables.replace(\"selenium\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Save']\", RuntimeVariables.replace(\"\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (RuntimeVariables.replace(\n\t\t\t\t\t\t\t\"Your request completed successfully.\")\n\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\"tag-portlet-messages\"))) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"tag-portlet-messages\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (RuntimeVariables.replace(\"selenium\")\n\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\"//div[4]/ul/li/span/a\"))) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"selenium\"),\n\t\t\tselenium.getText(\"//div[4]/ul/li/span/a\"));\n\t\tassertTrue(selenium.isElementPresent(\"link=selenium\"));\n\t}","id":16845,"modified_method":"public void testAddTag() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Tags\", RuntimeVariables.replace(\"Tags\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@id='_99_addTagButton']\",\n\t\t\tRuntimeVariables.replace(\"Add Tag\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//input[@id='_99_name']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='_99_name']\",\n\t\t\tRuntimeVariables.replace(\"selenium\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//div[@id='portletMessages']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request processed successfully.\"),\n\t\t\tselenium.getText(\"//div[@id='portletMessages']\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//div[2]/ul/li/div/span/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"selenium\"),\n\t\t\tselenium.getText(\"//div[2]/ul/li/div/span/a\"));\n\t}","commit_id":"ab12c95074a09a3e4925587aae60f1926707f84d","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddTildeTag() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Tags\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"add-tag-button\", RuntimeVariables.replace(\"\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"new-tag-name\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"new-tag-name\", RuntimeVariables.replace(\"~test\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Save']\", RuntimeVariables.replace(\"\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (RuntimeVariables.replace(\n\t\t\t\t\t\t\t\"One of your fields contains invalid characters.\")\n\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\"tag-portlet-messages\"))) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"One of your fields contains invalid characters.\"),\n\t\t\tselenium.getText(\"tag-portlet-messages\"));\n\t\tassertFalse(selenium.isElementPresent(\"link=~test\"));\n\t}","id":16846,"modified_method":"public void testAddTildeTag() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Tags\", RuntimeVariables.replace(\"Tags\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@id='_99_addTagButton']\",\n\t\t\tRuntimeVariables.replace(\"Add Tag\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//input[@id='_99_name']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='_99_name']\",\n\t\t\tRuntimeVariables.replace(\"~test\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//div[@id='portletMessages']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"One of your fields contains invalid characters.\"),\n\t\t\tselenium.getText(\"//div[@id='portletMessages']\"));\n\t\tassertFalse(selenium.isElementPresent(\"link=~test\"));\n\t}","commit_id":"ab12c95074a09a3e4925587aae60f1926707f84d","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAssertEditBodyCancel() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Tags\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//div[4]/ul/li/span/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//div[4]/ul/li/span/a\", RuntimeVariables.replace(\"\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//td[2]/div[2]/div[3]/input[2]\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isVisible(\"//td[2]/div[2]/div[3]/input[2]\"));\n\t\tselenium.clickAt(\"//td[2]/div[2]/div[3]/input[2]\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tassertFalse(selenium.isVisible(\"//td[2]/div[2]/div[3]/input[2]\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//div[4]/ul/li/span/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//div[4]/ul/li/span/a\", RuntimeVariables.replace(\"\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//div[3]/div[2]/input[1]\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(\"This is a tag for anything\",\n\t\t\tselenium.getValue(\"//div[3]/div[2]/input[1]\"));\n\t\tassertEquals(\"related to selenium.\",\n\t\t\tselenium.getValue(\"//div[3]/div[2]/input[2]\"));\n\t}","id":16847,"modified_method":"public void testAssertEditBodyCancel() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Tags\", RuntimeVariables.replace(\"Tags\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//h1[@class='header-title']/span\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"selenium ide\"),\n\t\t\tselenium.getText(\"//h1[@class='header-title']/span\"));\n\t\tselenium.clickAt(\"//input[@id='editTagButton']\",\n\t\t\tRuntimeVariables.replace(\"Edit\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//input[@id='_99_name']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.click(\"//input[@value='Close']\");\n\t\tassertFalse(selenium.isElementPresent(\"//input[@id='_99_name']\"));\n\t}","commit_id":"ab12c95074a09a3e4925587aae60f1926707f84d","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAssertTagOrder() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Tags\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//div[4]/ul/li[1]/span/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"blue\"),\n\t\t\tselenium.getText(\"//div[4]/ul/li[1]/span/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"blue car\"),\n\t\t\tselenium.getText(\"//div[4]/ul/li[2]/span/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"blue green\"),\n\t\t\tselenium.getText(\"//div[4]/ul/li[3]/span/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"green\"),\n\t\t\tselenium.getText(\"//div[4]/ul/li[4]/span/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"green tree\"),\n\t\t\tselenium.getText(\"//div[4]/ul/li[5]/span/a\"));\n\t}","id":16848,"modified_method":"public void testAssertTagOrder() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Tags\", RuntimeVariables.replace(\"Tags\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//div[2]/ul/li[1]/div/span/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"blue\"),\n\t\t\tselenium.getText(\"//div[2]/ul/li[1]/div/span/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"blue car\"),\n\t\t\tselenium.getText(\"//div[2]/ul/li[2]/div/span/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"blue green\"),\n\t\t\tselenium.getText(\"//div[2]/ul/li[3]/div/span/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"green\"),\n\t\t\tselenium.getText(\"//div[2]/ul/li[4]/div/span/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"green tree\"),\n\t\t\tselenium.getText(\"//div[2]/ul/li[5]/div/span/a\"));\n\t}","commit_id":"ab12c95074a09a3e4925587aae60f1926707f84d","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testDeleteTag() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Tags\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//div[4]/ul/li/span/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//div[4]/ul/li/span/a\", RuntimeVariables.replace(\"\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//input[@value='Delete']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Delete']\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this tag[\\\\s\\\\S]$\"));\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (!selenium.isElementPresent(\"link=selenium ide\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertFalse(selenium.isElementPresent(\"link=selenium ide\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (!selenium.isElementPresent(\"link=selenium\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertFalse(selenium.isElementPresent(\"link=selenium\"));\n\t}","id":16849,"modified_method":"public void testDeleteTag() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Tags\", RuntimeVariables.replace(\"Tags\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//h1[@class='header-title']/span\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"selenium ide\"),\n\t\t\tselenium.getText(\"//h1[@class='header-title']/span\"));\n\t\tselenium.clickAt(\"//input[@id='deleteTagButton']\",\n\t\t\tRuntimeVariables.replace(\"Delete\"));\n\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this tag[\\\\s\\\\S]$\"));\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//div[@id='portletMessages']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request processed successfully.\"),\n\t\t\tselenium.getText(\"//div[@id='portletMessages']\"));\n\t\tassertFalse(selenium.isElementPresent(\"//div[2]/ul/li/div/span/a\"));\n\t\tassertFalse(selenium.isElementPresent(\"link=selenium ide\"));\n\t}","commit_id":"ab12c95074a09a3e4925587aae60f1926707f84d","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testEditTagName() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Tags\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//div[4]/ul/li/span/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"selenium\"),\n\t\t\tselenium.getText(\"//div[4]/ul/li/span/a\"));\n\t\tselenium.clickAt(\"//div[4]/ul/li/span/a\", RuntimeVariables.replace(\"\"));\n\t\tselenium.type(\"tag-name\", RuntimeVariables.replace(\"selenium ide\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//div[3]/input[1]\", RuntimeVariables.replace(\"\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (RuntimeVariables.replace(\"selenium ide\")\n\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\"//div[4]/ul/li/span/a\"))) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"selenium ide\"),\n\t\t\tselenium.getText(\"//div[4]/ul/li/span/a\"));\n\t}","id":16850,"modified_method":"public void testEditTagName() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Tags\", RuntimeVariables.replace(\"Tags\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//h1[@class='header-title']/span\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"selenium\"),\n\t\t\tselenium.getText(\"//h1[@class='header-title']/span\"));\n\t\tselenium.clickAt(\"//input[@id='editTagButton']\",\n\t\t\tRuntimeVariables.replace(\"Edit\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//input[@id='_99_name']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='_99_name']\",\n\t\t\tRuntimeVariables.replace(\"selenium ide\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//div[@id='portletMessages']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request processed successfully.\"),\n\t\t\tselenium.getText(\"//div[@id='portletMessages']\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//div[2]/ul/li/div/span/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"selenium ide\"),\n\t\t\tselenium.getText(\"//div[2]/ul/li/div/span/a\"));\n\t}","commit_id":"ab12c95074a09a3e4925587aae60f1926707f84d","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testSearch() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Tags\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"tags-admin-search-input\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"tags-admin-search-input\", RuntimeVariables.replace(\"\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.typeKeys(\"tags-admin-search-input\",\n\t\t\tRuntimeVariables.replace(\"blue\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tThread.sleep(5000);\n\t\tassertTrue(selenium.isVisible(\"link=blue\"));\n\t\tassertTrue(selenium.isVisible(\"link=blue car\"));\n\t\tassertTrue(selenium.isVisible(\"link=blue green\"));\n\t\tassertFalse(selenium.isVisible(\"link=green\"));\n\t\tassertFalse(selenium.isVisible(\"link=green tree\"));\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Tags\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"tags-admin-search-input\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"tags-admin-search-input\", RuntimeVariables.replace(\"\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.typeKeys(\"tags-admin-search-input\",\n\t\t\tRuntimeVariables.replace(\"green\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tThread.sleep(5000);\n\t\tassertFalse(selenium.isVisible(\"link=blue\"));\n\t\tassertFalse(selenium.isVisible(\"link=blue car\"));\n\t\tassertTrue(selenium.isVisible(\"link=blue green\"));\n\t\tassertTrue(selenium.isVisible(\"link=green\"));\n\t\tassertTrue(selenium.isVisible(\"link=green tree\"));\n\t}","id":16851,"modified_method":"public void testSearch() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Tags\", RuntimeVariables.replace(\"Tags\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='_99_tagsAdminSearchInput']\",\n\t\t\tRuntimeVariables.replace(\"blue\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tThread.sleep(5000);\n\t\tassertTrue(selenium.isVisible(\"link=blue\"));\n\t\tassertTrue(selenium.isVisible(\"link=blue car\"));\n\t\tassertTrue(selenium.isVisible(\"link=blue green\"));\n\t\tassertFalse(selenium.isElementPresent(\"link=green\"));\n\t\tassertFalse(selenium.isElementPresent(\"link=green tree\"));\n\t\tselenium.clickAt(\"link=Tags\", RuntimeVariables.replace(\"Tags\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='_99_tagsAdminSearchInput']\",\n\t\t\tRuntimeVariables.replace(\"green\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tThread.sleep(5000);\n\t\tassertFalse(selenium.isElementPresent(\"link=blue\"));\n\t\tassertFalse(selenium.isElementPresent(\"link=blue car\"));\n\t\tassertTrue(selenium.isVisible(\"link=blue green\"));\n\t\tassertTrue(selenium.isVisible(\"link=green\"));\n\t\tassertTrue(selenium.isVisible(\"link=green tree\"));\n\t}","commit_id":"ab12c95074a09a3e4925587aae60f1926707f84d","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testTearDownTag() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\t\t\tRuntimeVariables.replace(\"\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"link=Tags\", RuntimeVariables.replace(\"\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tThread.sleep(500);\n\n\t\t\t\tboolean tag1Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//div[4]/ul/li/span/a\");\n\n\t\t\t\tif (!tag1Present) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[4]/ul/li/span/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\"//input[@value='Delete']\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"//input[@value='Delete']\",\n\t\t\t\t\tRuntimeVariables.replace(\"\"));\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this tag[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 2:\n\t\t\t\tThread.sleep(500);\n\n\t\t\t\tboolean tag2Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//div[4]/ul/li/span/a\");\n\n\t\t\t\tif (!tag2Present) {\n\t\t\t\t\tlabel = 3;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[4]/ul/li/span/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\"//input[@value='Delete']\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"//input[@value='Delete']\",\n\t\t\t\t\tRuntimeVariables.replace(\"\"));\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this tag[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 3:\n\t\t\t\tThread.sleep(500);\n\n\t\t\t\tboolean tag3Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//div[4]/ul/li/span/a\");\n\n\t\t\t\tif (!tag3Present) {\n\t\t\t\t\tlabel = 4;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[4]/ul/li/span/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\"//input[@value='Delete']\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"//input[@value='Delete']\",\n\t\t\t\t\tRuntimeVariables.replace(\"\"));\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this tag[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 4:\n\t\t\t\tThread.sleep(500);\n\n\t\t\t\tboolean tag4Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//div[4]/ul/li/span/a\");\n\n\t\t\t\tif (!tag4Present) {\n\t\t\t\t\tlabel = 5;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[4]/ul/li/span/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\"//input[@value='Delete']\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"//input[@value='Delete']\",\n\t\t\t\t\tRuntimeVariables.replace(\"\"));\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this tag[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 5:\n\t\t\t\tThread.sleep(500);\n\n\t\t\t\tboolean tag5Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//div[4]/ul/li/span/a\");\n\n\t\t\t\tif (!tag5Present) {\n\t\t\t\t\tlabel = 6;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[4]/ul/li/span/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\"//input[@value='Delete']\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"//input[@value='Delete']\",\n\t\t\t\t\tRuntimeVariables.replace(\"\"));\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this tag[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 6:\n\t\t\t\tThread.sleep(500);\n\n\t\t\t\tboolean tag6Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//div[4]/ul/li/span/a\");\n\n\t\t\t\tif (!tag6Present) {\n\t\t\t\t\tlabel = 7;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[4]/ul/li/span/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\"//input[@value='Delete']\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"//input[@value='Delete']\",\n\t\t\t\t\tRuntimeVariables.replace(\"\"));\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this tag[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 7:\n\t\t\t\tThread.sleep(500);\n\n\t\t\t\tboolean tag7Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//div[4]/ul/li/span/a\");\n\n\t\t\t\tif (!tag7Present) {\n\t\t\t\t\tlabel = 8;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[4]/ul/li/span/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\"//input[@value='Delete']\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"//input[@value='Delete']\",\n\t\t\t\t\tRuntimeVariables.replace(\"\"));\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this tag[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 8:\n\t\t\t\tThread.sleep(500);\n\n\t\t\t\tboolean tag8Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//div[4]/ul/li/span/a\");\n\n\t\t\t\tif (!tag8Present) {\n\t\t\t\t\tlabel = 9;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[4]/ul/li/span/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\"//input[@value='Delete']\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"//input[@value='Delete']\",\n\t\t\t\t\tRuntimeVariables.replace(\"\"));\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this tag[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 9:\n\t\t\t\tThread.sleep(500);\n\n\t\t\t\tboolean tag9Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//div[4]/ul/li/span/a\");\n\n\t\t\t\tif (!tag9Present) {\n\t\t\t\t\tlabel = 10;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[4]/ul/li/span/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\"//input[@value='Delete']\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"//input[@value='Delete']\",\n\t\t\t\t\tRuntimeVariables.replace(\"\"));\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this tag[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 10:\n\t\t\t\tThread.sleep(500);\n\n\t\t\t\tboolean tag10Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//div[4]/ul/li/span/a\");\n\n\t\t\t\tif (!tag10Present) {\n\t\t\t\t\tlabel = 11;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[4]/ul/li/span/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\"//input[@value='Delete']\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"//input[@value='Delete']\",\n\t\t\t\t\tRuntimeVariables.replace(\"\"));\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this tag[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 11:\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","id":16852,"modified_method":"public void testTearDownTag() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Tags\", RuntimeVariables.replace(\"Tags\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@id='_99_checkAllTagsCheckbox']\",\n\t\t\tRuntimeVariables.replace(\"Check All Tags\"));\n\t\tselenium.clickAt(\"//span[@title='Actions']/ul/li/strong/a\",\n\t\t\tRuntimeVariables.replace(\"Actions\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//a[@id='_99_deleteSelectedTags']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//a[@id='_99_deleteSelectedTags']\",\n\t\t\tRuntimeVariables.replace(\"Delete\"));\n\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete the selected tags[\\\\s\\\\S]$\"));\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (RuntimeVariables.replace(\"There are no tags.\")\n\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\"//div[@id='tagsMessages']\"))) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t}","commit_id":"ab12c95074a09a3e4925587aae60f1926707f84d","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddContentAdministrator() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Users\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Users\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Add\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Add\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tThread.sleep(5000);\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"_125_screenName\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.typeKeys(\"_125_screenName\",\n\t\t\tRuntimeVariables.replace(\"ContentAdministrator\"));\n\t\tselenium.type(\"_125_screenName\",\n\t\t\tRuntimeVariables.replace(\"ContentAdministrator\"));\n\t\tselenium.type(\"_125_emailAddress\",\n\t\t\tRuntimeVariables.replace(\"CA@liferay.com\"));\n\t\tselenium.select(\"_125_prefixId\", RuntimeVariables.replace(\"label=Mr.\"));\n\t\tselenium.type(\"_125_firstName\",\n\t\t\tRuntimeVariables.replace(\"Administrator\"));\n\t\tselenium.type(\"_125_lastName\", RuntimeVariables.replace(\"Liferay\"));\n\t\tselenium.select(\"_125_suffixId\", RuntimeVariables.replace(\"label=PhD.\"));\n\t\tselenium.select(\"_125_birthdayMonth\",\n\t\t\tRuntimeVariables.replace(\"label=May\"));\n\t\tselenium.select(\"_125_birthdayDay\", RuntimeVariables.replace(\"label=22\"));\n\t\tselenium.select(\"_125_birthdayYear\",\n\t\t\tRuntimeVariables.replace(\"label=1985\"));\n\t\tselenium.select(\"_125_male\", RuntimeVariables.replace(\"label=Male\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"passwordLink\", RuntimeVariables.replace(\"\"));\n\t\tThread.sleep(5000);\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"_125_password1\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.type(\"_125_password1\", RuntimeVariables.replace(\"test\"));\n\t\tselenium.type(\"_125_password2\", RuntimeVariables.replace(\"test\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"rolesLink\", RuntimeVariables.replace(\"\"));\n\t\tThread.sleep(5000);\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//div[@id='roles']/span/a[2]\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"//div[@id='roles']/span/a[2]\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tThread.sleep(5000);\n\t\tselenium.waitForPopUp(\"role\", RuntimeVariables.replace(\"30000\"));\n\t\tselenium.selectWindow(\"name=role\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Content Administrator\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(\"link=Content Administrator\");\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.clickAt(\"//input[@value='Save']\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"Your request processed successfully.\"));\n\t}","id":16853,"modified_method":"public void testAddContentAdministrator() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Users\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Users\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Add\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Add\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"_125_screenName\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.type(\"_125_screenName\",\n\t\t\tRuntimeVariables.replace(\"ContentAdministrator\"));\n\t\tselenium.type(\"_125_emailAddress\",\n\t\t\tRuntimeVariables.replace(\"CA@liferay.com\"));\n\t\tselenium.select(\"_125_prefixId\", RuntimeVariables.replace(\"label=Mr.\"));\n\t\tselenium.type(\"_125_firstName\",\n\t\t\tRuntimeVariables.replace(\"Administrator\"));\n\t\tselenium.type(\"_125_lastName\", RuntimeVariables.replace(\"Liferay\"));\n\t\tselenium.select(\"_125_suffixId\", RuntimeVariables.replace(\"label=PhD.\"));\n\t\tselenium.select(\"_125_birthdayMonth\",\n\t\t\tRuntimeVariables.replace(\"label=May\"));\n\t\tselenium.select(\"_125_birthdayDay\", RuntimeVariables.replace(\"label=22\"));\n\t\tselenium.select(\"_125_birthdayYear\",\n\t\t\tRuntimeVariables.replace(\"label=1985\"));\n\t\tselenium.select(\"_125_male\", RuntimeVariables.replace(\"label=Male\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"passwordLink\", RuntimeVariables.replace(\"\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"_125_password1\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.type(\"_125_password1\", RuntimeVariables.replace(\"test\"));\n\t\tselenium.type(\"_125_password2\", RuntimeVariables.replace(\"test\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"Your request processed successfully.\"));\n\t}","commit_id":"1952dab453dfa350ecb03371bf7ac0f001a541f8","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddContentCreator() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Users\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Users\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Add\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Add\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tThread.sleep(5000);\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"_125_screenName\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.typeKeys(\"_125_screenName\",\n\t\t\tRuntimeVariables.replace(\"ContentCreator\"));\n\t\tselenium.type(\"_125_screenName\",\n\t\t\tRuntimeVariables.replace(\"ContentCreator\"));\n\t\tselenium.type(\"_125_emailAddress\",\n\t\t\tRuntimeVariables.replace(\"CC@liferay.com\"));\n\t\tselenium.select(\"_125_prefixId\", RuntimeVariables.replace(\"label=Mr.\"));\n\t\tselenium.type(\"_125_firstName\", RuntimeVariables.replace(\"Creator\"));\n\t\tselenium.type(\"_125_lastName\", RuntimeVariables.replace(\"Liferay\"));\n\t\tselenium.select(\"_125_suffixId\", RuntimeVariables.replace(\"label=PhD.\"));\n\t\tselenium.select(\"_125_birthdayMonth\",\n\t\t\tRuntimeVariables.replace(\"label=April\"));\n\t\tselenium.select(\"_125_birthdayDay\", RuntimeVariables.replace(\"label=10\"));\n\t\tselenium.select(\"_125_birthdayYear\",\n\t\t\tRuntimeVariables.replace(\"label=1986\"));\n\t\tselenium.select(\"_125_male\", RuntimeVariables.replace(\"label=Male\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"passwordLink\", RuntimeVariables.replace(\"\"));\n\t\tThread.sleep(5000);\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"_125_password1\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.type(\"_125_password1\", RuntimeVariables.replace(\"test\"));\n\t\tselenium.type(\"_125_password2\", RuntimeVariables.replace(\"test\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"rolesLink\", RuntimeVariables.replace(\"\"));\n\t\tThread.sleep(5000);\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//div[@id='roles']/span/a[2]\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"//div[@id='roles']/span/a[2]\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tThread.sleep(5000);\n\t\tselenium.waitForPopUp(\"role\", RuntimeVariables.replace(\"30000\"));\n\t\tselenium.selectWindow(\"name=role\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Content Creator\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(\"link=Content Creator\");\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.clickAt(\"//input[@value='Save']\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"Your request processed successfully.\"));\n\t}","id":16854,"modified_method":"public void testAddContentCreator() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Users\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Users\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Add\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Add\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"_125_screenName\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.type(\"_125_screenName\",\n\t\t\tRuntimeVariables.replace(\"ContentCreator\"));\n\t\tselenium.type(\"_125_emailAddress\",\n\t\t\tRuntimeVariables.replace(\"CC@liferay.com\"));\n\t\tselenium.select(\"_125_prefixId\", RuntimeVariables.replace(\"label=Mr.\"));\n\t\tselenium.type(\"_125_firstName\", RuntimeVariables.replace(\"Creator\"));\n\t\tselenium.type(\"_125_lastName\", RuntimeVariables.replace(\"Liferay\"));\n\t\tselenium.select(\"_125_suffixId\", RuntimeVariables.replace(\"label=PhD.\"));\n\t\tselenium.select(\"_125_birthdayMonth\",\n\t\t\tRuntimeVariables.replace(\"label=April\"));\n\t\tselenium.select(\"_125_birthdayDay\", RuntimeVariables.replace(\"label=10\"));\n\t\tselenium.select(\"_125_birthdayYear\",\n\t\t\tRuntimeVariables.replace(\"label=1986\"));\n\t\tselenium.select(\"_125_male\", RuntimeVariables.replace(\"label=Male\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"passwordLink\", RuntimeVariables.replace(\"\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"_125_password1\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.type(\"_125_password1\", RuntimeVariables.replace(\"test\"));\n\t\tselenium.type(\"_125_password2\", RuntimeVariables.replace(\"test\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"Your request processed successfully.\"));\n\t}","commit_id":"1952dab453dfa350ecb03371bf7ac0f001a541f8","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddContentPublisher() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Users\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Users\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Add\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Add\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tThread.sleep(5000);\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"_125_screenName\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.typeKeys(\"_125_screenName\",\n\t\t\tRuntimeVariables.replace(\"ContentPublisher\"));\n\t\tselenium.type(\"_125_screenName\",\n\t\t\tRuntimeVariables.replace(\"ContentPublisher\"));\n\t\tselenium.type(\"_125_emailAddress\",\n\t\t\tRuntimeVariables.replace(\"CP@liferay.com\"));\n\t\tselenium.select(\"_125_prefixId\", RuntimeVariables.replace(\"label=Mrs.\"));\n\t\tselenium.type(\"_125_firstName\", RuntimeVariables.replace(\"Publisher\"));\n\t\tselenium.type(\"_125_lastName\", RuntimeVariables.replace(\"Liferay\"));\n\t\tselenium.select(\"_125_suffixId\", RuntimeVariables.replace(\"label=PhD.\"));\n\t\tselenium.select(\"_125_birthdayMonth\",\n\t\t\tRuntimeVariables.replace(\"label=September\"));\n\t\tselenium.select(\"_125_birthdayDay\", RuntimeVariables.replace(\"label=24\"));\n\t\tselenium.select(\"_125_birthdayYear\",\n\t\t\tRuntimeVariables.replace(\"label=1984\"));\n\t\tselenium.select(\"_125_male\", RuntimeVariables.replace(\"label=Female\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"passwordLink\", RuntimeVariables.replace(\"\"));\n\t\tThread.sleep(5000);\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"_125_password1\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.type(\"_125_password1\", RuntimeVariables.replace(\"test\"));\n\t\tselenium.type(\"_125_password2\", RuntimeVariables.replace(\"test\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"rolesLink\", RuntimeVariables.replace(\"\"));\n\t\tThread.sleep(5000);\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//div[@id='roles']/span/a[2]\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"//div[@id='roles']/span/a[2]\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tThread.sleep(5000);\n\t\tselenium.waitForPopUp(\"role\", RuntimeVariables.replace(\"30000\"));\n\t\tselenium.selectWindow(\"name=role\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Content Publisher\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(\"link=Content Publisher\");\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.clickAt(\"//input[@value='Save']\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"Your request processed successfully.\"));\n\t}","id":16855,"modified_method":"public void testAddContentPublisher() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Users\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Users\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Add\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Add\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"_125_screenName\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.type(\"_125_screenName\",\n\t\t\tRuntimeVariables.replace(\"ContentPublisher\"));\n\t\tselenium.type(\"_125_emailAddress\",\n\t\t\tRuntimeVariables.replace(\"CP@liferay.com\"));\n\t\tselenium.select(\"_125_prefixId\", RuntimeVariables.replace(\"label=Mrs.\"));\n\t\tselenium.type(\"_125_firstName\", RuntimeVariables.replace(\"Publisher\"));\n\t\tselenium.type(\"_125_lastName\", RuntimeVariables.replace(\"Liferay\"));\n\t\tselenium.select(\"_125_suffixId\", RuntimeVariables.replace(\"label=PhD.\"));\n\t\tselenium.select(\"_125_birthdayMonth\",\n\t\t\tRuntimeVariables.replace(\"label=September\"));\n\t\tselenium.select(\"_125_birthdayDay\", RuntimeVariables.replace(\"label=24\"));\n\t\tselenium.select(\"_125_birthdayYear\",\n\t\t\tRuntimeVariables.replace(\"label=1984\"));\n\t\tselenium.select(\"_125_male\", RuntimeVariables.replace(\"label=Female\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"passwordLink\", RuntimeVariables.replace(\"\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"_125_password1\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.type(\"_125_password1\", RuntimeVariables.replace(\"test\"));\n\t\tselenium.type(\"_125_password2\", RuntimeVariables.replace(\"test\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"Your request processed successfully.\"));\n\t}","commit_id":"1952dab453dfa350ecb03371bf7ac0f001a541f8","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAssignMembers() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Communities\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Communities\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"//strong/span\", RuntimeVariables.replace(\"\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Assign Members\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Assign Members\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Available\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Available\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"_134_keywords\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.typeKeys(\"_134_keywords\", RuntimeVariables.replace(\"content\"));\n\t\tselenium.type(\"_134_keywords\", RuntimeVariables.replace(\"content\"));\n\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"_134_allRowIds\", RuntimeVariables.replace(\"\"));\n\t\tselenium.clickAt(\"//input[@value='Update Associations']\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"Your request processed successfully.\"));\n\t}","id":16856,"modified_method":"public void testAssignMembers() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Communities\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Communities\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"//strong/a\", RuntimeVariables.replace(\"Actions\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[5]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[5]/a\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Available\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Available\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"_134_keywords\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.type(\"_134_keywords\", RuntimeVariables.replace(\"content\"));\n\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"_134_allRowIds\", RuntimeVariables.replace(\"\"));\n\t\tselenium.clickAt(\"//input[@value='Update Associations']\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"Your request processed successfully.\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Communities\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Communities\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"//strong/a\", RuntimeVariables.replace(\"Actions\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[4]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[4]/a\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Content Administrator\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Available\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"_134_toggle_id_enterprise_admin_user_searchkeywords\",\n\t\t\tRuntimeVariables.replace(\"ca\"));\n\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"_134_allRowIds\", RuntimeVariables.replace(\"\"));\n\t\tselenium.clickAt(\"//input[@value='Update Associations']\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"Your request processed successfully.\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Communities\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Communities\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"//strong/a\", RuntimeVariables.replace(\"Actions\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[4]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[4]/a\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Content Creator\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Available\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"_134_toggle_id_enterprise_admin_user_searchkeywords\",\n\t\t\tRuntimeVariables.replace(\"cc\"));\n\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"_134_allRowIds\", RuntimeVariables.replace(\"\"));\n\t\tselenium.clickAt(\"//input[@value='Update Associations']\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"Your request processed successfully.\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Communities\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Communities\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"//strong/a\", RuntimeVariables.replace(\"Actions\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[4]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[4]/a\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Content Publisher\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Available\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"_134_toggle_id_enterprise_admin_user_searchkeywords\",\n\t\t\tRuntimeVariables.replace(\"cp\"));\n\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"_134_allRowIds\", RuntimeVariables.replace(\"\"));\n\t\tselenium.clickAt(\"//input[@value='Update Associations']\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"Your request processed successfully.\"));\n\t}","commit_id":"1952dab453dfa350ecb03371bf7ac0f001a541f8","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public static Test suite() {\n\t\tTestSuite testSuite = new TestSuite();\n\n\t\ttestSuite.addTestSuite(SA_LoginTest.class);\n\t\ttestSuite.addTestSuite(SA_SetupTest.class);\n\t\ttestSuite.addTestSuite(SA_LogoutTest.class);\n\t\ttestSuite.addTestSuite(CC_LoginTest.class);\n\t\ttestSuite.addTestSuite(CC_AddStagedPortletTest.class);\n\t\ttestSuite.addTestSuite(CC_SendPortletProposalTest.class);\n\t\ttestSuite.addTestSuite(CC_LogoutTest.class);\n\t\ttestSuite.addTestSuite(Guest_AssertNoPortletPreApprovalTest.class);\n\t\ttestSuite.addTestSuite(CP_LoginTest.class);\n\t\ttestSuite.addTestSuite(CP_AssertCannotPublishProposalTest.class);\n\t\ttestSuite.addTestSuite(CP_LogoutTest.class);\n\t\ttestSuite.addTestSuite(CA_LoginTest.class);\n\t\ttestSuite.addTestSuite(CA_ApprovePortletProposalTest.class);\n\t\ttestSuite.addTestSuite(CA_AssignPortletPublicationTest.class);\n\t\ttestSuite.addTestSuite(CA_LogoutTest.class);\n\t\ttestSuite.addTestSuite(Guest_AssertNoPortletPrePublishTest.class);\n\t\ttestSuite.addTestSuite(CP_LoginTest.class);\n\t\ttestSuite.addTestSuite(CP_PublishPortletToLiveTest.class);\n\t\ttestSuite.addTestSuite(CP_LogoutTest.class);\n\t\ttestSuite.addTestSuite(Guest_AssertPortletPresentTest.class);\n\t\ttestSuite.addTestSuite(CC_LoginTest.class);\n\t\ttestSuite.addTestSuite(CC_AddStagedContentTest.class);\n\t\ttestSuite.addTestSuite(CC_SendContentProposalTest.class);\n\t\ttestSuite.addTestSuite(CC_LogoutTest.class);\n\t\ttestSuite.addTestSuite(Guest_AssertNoContentPreApprovalTest.class);\n\t\ttestSuite.addTestSuite(CA_LoginTest.class);\n\t\ttestSuite.addTestSuite(CA_ApproveContentProposalTest.class);\n\t\ttestSuite.addTestSuite(CA_AssignContentPublicationTest.class);\n\t\ttestSuite.addTestSuite(CA_LogoutTest.class);\n\t\ttestSuite.addTestSuite(Guest_AssertNoContentPrePublishTest.class);\n\t\ttestSuite.addTestSuite(CP_LoginTest.class);\n\t\ttestSuite.addTestSuite(CP_PublishContentToLiveTest.class);\n\t\ttestSuite.addTestSuite(CP_LogoutTest.class);\n\t\ttestSuite.addTestSuite(Guest_AssertContentPresentTest.class);\n\t\ttestSuite.addTestSuite(SA_LoginTest.class);\n\t\ttestSuite.addTestSuite(SA_TearDownTest.class);\n\t\ttestSuite.addTestSuite(SA_LogoutTest.class);\n\n\t\treturn testSuite;\n\t}","id":16857,"modified_method":"public static Test suite() {\n\t\tTestSuite testSuite = new TestSuite();\n\n\t\ttestSuite.addTestSuite(SA_LoginTest.class);\n\t\ttestSuite.addTestSuite(SA_SetupTest.class);\n\t\ttestSuite.addTestSuite(SA_LogoutTest.class);\n\t\ttestSuite.addTestSuite(CC_LoginTest.class);\n\t\ttestSuite.addTestSuite(CC_AddStagedPortletTest.class);\n\t\ttestSuite.addTestSuite(CC_SendPortletProposalTest.class);\n\t\ttestSuite.addTestSuite(CC_LogoutTest.class);\n\t\ttestSuite.addTestSuite(Guest_AssertNoPortletPreApprovalTest.class);\n\t\ttestSuite.addTestSuite(CP_LoginTest.class);\n\t\ttestSuite.addTestSuite(CP_AssertCannotPublishProposalTest.class);\n\t\ttestSuite.addTestSuite(CP_LogoutTest.class);\n\t\ttestSuite.addTestSuite(CA_LoginTest.class);\n\t\ttestSuite.addTestSuite(CA_ApprovePortletProposalTest.class);\n\t\ttestSuite.addTestSuite(CA_AssignPortletPublicationTest.class);\n\t\ttestSuite.addTestSuite(CA_LogoutTest.class);\n\t\ttestSuite.addTestSuite(Guest_AssertNoPortletPrePublishTest.class);\n\t\ttestSuite.addTestSuite(CP_LoginTest.class);\n\t\t/*testSuite.addTestSuite(CP_PublishPortletToLiveTest.class);\n\t\ttestSuite.addTestSuite(CP_LogoutTest.class);\n\t\ttestSuite.addTestSuite(Guest_AssertPortletPresentTest.class);\n\t\ttestSuite.addTestSuite(CC_LoginTest.class);\n\t\ttestSuite.addTestSuite(CC_AddStagedContentTest.class);\n\t\ttestSuite.addTestSuite(CC_SendContentProposalTest.class);\n\t\ttestSuite.addTestSuite(CC_LogoutTest.class);\n\t\ttestSuite.addTestSuite(Guest_AssertNoContentPreApprovalTest.class);\n\t\ttestSuite.addTestSuite(CA_LoginTest.class);\n\t\ttestSuite.addTestSuite(CA_ApproveContentProposalTest.class);\n\t\ttestSuite.addTestSuite(CA_AssignContentPublicationTest.class);\n\t\ttestSuite.addTestSuite(CA_LogoutTest.class);\n\t\ttestSuite.addTestSuite(Guest_AssertNoContentPrePublishTest.class);\n\t\ttestSuite.addTestSuite(CP_LoginTest.class);\n\t\ttestSuite.addTestSuite(CP_PublishContentToLiveTest.class);*/\n\t\ttestSuite.addTestSuite(CP_LogoutTest.class);\n\t\ttestSuite.addTestSuite(Guest_AssertContentPresentTest.class);\n\t\ttestSuite.addTestSuite(SA_LoginTest.class);\n\t\ttestSuite.addTestSuite(SA_TearDownTest.class);\n\t\ttestSuite.addTestSuite(SA_LogoutTest.class);\n\n\t\treturn testSuite;\n\t}","commit_id":"1952dab453dfa350ecb03371bf7ac0f001a541f8","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testCA_ApproveContentProposal() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Blogs Staging Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Blogs Staging Test Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=View Proposals\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//strong/span\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"//strong/span\", RuntimeVariables.replace(\"\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Edit\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Edit\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(RuntimeVariables.replace(\"//input[@value='Approve']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t   .matches(\"^Are you sure you want to approve this proposal[\\\\s\\\\S]$\"));\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"Your request processed successfully.\"));\n\t}","id":16858,"modified_method":"public void testCA_ApproveContentProposal() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Blogs Staging Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Blogs Staging Test Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=View Proposals\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"//strong/a\", RuntimeVariables.replace(\"Actions\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[1]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[1]/a\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"//input[@value='Approve']\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t   .matches(\"^Are you sure you want to approve this proposal[\\\\s\\\\S]$\"));\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"Your request processed successfully.\"));\n\t}","commit_id":"1952dab453dfa350ecb03371bf7ac0f001a541f8","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testCA_ApprovePortletProposal() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Blogs Staging Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Blogs Staging Test Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=View Proposals\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//strong/span\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"//strong/span\", RuntimeVariables.replace(\"\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Edit\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Edit\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(RuntimeVariables.replace(\"//input[@value='Approve']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t   .matches(\"^Are you sure you want to approve this proposal[\\\\s\\\\S]$\"));\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"Your request processed successfully.\"));\n\t}","id":16859,"modified_method":"public void testCA_ApprovePortletProposal() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Blogs Staging Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Blogs Staging Test Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=View Proposals\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"//strong/a\", RuntimeVariables.replace(\"Actions\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[1]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[1]/a\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"//input[@value='Approve']\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t   .matches(\"^Are you sure you want to approve this proposal[\\\\s\\\\S]$\"));\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"Your request processed successfully.\"));\n\t}","commit_id":"1952dab453dfa350ecb03371bf7ac0f001a541f8","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testCA_AssignContentPublication() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Blogs Staging Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Blogs Staging Test Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=View Proposals\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Stage 3 Review Unassigned\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertTrue(selenium.isElementPresent(\"link=Stage 3 Review Unassigned\"));\n\t\tselenium.clickAt(\"//strong/span\", RuntimeVariables.replace(\"\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Edit\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Edit\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.addSelection(\"_88_available_reviewers_2\",\n\t\t\tRuntimeVariables.replace(\"label=Publisher Liferay\"));\n\t\tselenium.clickAt(\"//a[2]/img\", RuntimeVariables.replace(\"\"));\n\t\tThread.sleep(5000);\n\t\tselenium.clickAt(\"//input[@value='Save']\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"Your request processed successfully.\"));\n\t\tassertFalse(selenium.isElementPresent(\"link=Stage 3 Review Unassigned\"));\n\t\tassertTrue(selenium.isElementPresent(\"link=Stage 3 Pending Review\"));\n\t}","id":16860,"modified_method":"public void testCA_AssignContentPublication() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Blogs Staging Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Blogs Staging Test Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=View Proposals\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Stage 3 Review Unassigned\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertTrue(selenium.isElementPresent(\"link=Stage 3 Review Unassigned\"));\n\t\tselenium.clickAt(\"//strong/a\", RuntimeVariables.replace(\"Actions\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[1]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[1]/a\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.addSelection(\"_88_available_reviewers_2\",\n\t\t\tRuntimeVariables.replace(\"label=Publisher Liferay\"));\n\t\tselenium.clickAt(\"//button[2]\", RuntimeVariables.replace(\"\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (RuntimeVariables.replace(\"Publisher Liferay\")\n\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\"_88_current_reviewers_2\"))) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertEquals(RuntimeVariables.replace(\"Publisher Liferay\"),\n\t\t\tselenium.getText(\"_88_current_reviewers_2\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"Your request processed successfully.\"));\n\t\tassertFalse(selenium.isElementPresent(\"link=Stage 3 Review Unassigned\"));\n\t\tassertTrue(selenium.isElementPresent(\"link=Stage 3 Pending Review\"));\n\t}","commit_id":"1952dab453dfa350ecb03371bf7ac0f001a541f8","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testCA_AssignPortletPublication() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Blogs Staging Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Blogs Staging Test Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=View Proposals\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Stage 3 Review Unassigned\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertTrue(selenium.isElementPresent(\"link=Stage 3 Review Unassigned\"));\n\t\tselenium.clickAt(\"//strong/span\", RuntimeVariables.replace(\"\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Edit\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Edit\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.addSelection(\"_88_available_reviewers_2\",\n\t\t\tRuntimeVariables.replace(\"label=Publisher Liferay\"));\n\t\tselenium.clickAt(\"//a[2]/img\", RuntimeVariables.replace(\"\"));\n\t\tThread.sleep(5000);\n\t\tselenium.clickAt(\"//input[@value='Save']\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"Your request processed successfully.\"));\n\t\tassertFalse(selenium.isElementPresent(\"link=Stage 3 Review Unassigned\"));\n\t\tassertTrue(selenium.isElementPresent(\"link=Stage 3 Pending Review\"));\n\t}","id":16861,"modified_method":"public void testCA_AssignPortletPublication() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Blogs Staging Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Blogs Staging Test Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=View Proposals\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Stage 3 Review Unassigned\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertTrue(selenium.isElementPresent(\"link=Stage 3 Review Unassigned\"));\n\t\tselenium.clickAt(\"//strong/a\", RuntimeVariables.replace(\"Actions\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[1]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[1]/a\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.addSelection(\"_88_available_reviewers_2\",\n\t\t\tRuntimeVariables.replace(\"label=Publisher Liferay\"));\n\t\tselenium.clickAt(\"//button[2]\", RuntimeVariables.replace(\"\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (RuntimeVariables.replace(\"Publisher Liferay\")\n\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\"_88_current_reviewers_2\"))) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertEquals(RuntimeVariables.replace(\"Publisher Liferay\"),\n\t\t\tselenium.getText(\"_88_current_reviewers_2\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"Your request processed successfully.\"));\n\t\tassertFalse(selenium.isElementPresent(\"link=Stage 3 Review Unassigned\"));\n\t\tassertTrue(selenium.isElementPresent(\"link=Stage 3 Pending Review\"));\n\t}","commit_id":"1952dab453dfa350ecb03371bf7ac0f001a541f8","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testCA_Login() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Welcome\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Welcome\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"_58_login\", RuntimeVariables.replace(\"ca@liferay.com\"));\n\t\tselenium.type(\"_58_password\", RuntimeVariables.replace(\"test\"));\n\t\tselenium.clickAt(\"//input[@value='Sign In']\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t}","id":16862,"modified_method":"public void testCA_Login() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Welcome\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Welcome\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"_58_login\", RuntimeVariables.replace(\"ca@liferay.com\"));\n\t\tselenium.type(\"_58_password\", RuntimeVariables.replace(\"test\"));\n\t\tselenium.clickAt(\"_58_rememberMeCheckbox\", RuntimeVariables.replace(\"\"));\n\t\tselenium.clickAt(\"//input[@value='Sign In']\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t}","commit_id":"1952dab453dfa350ecb03371bf7ac0f001a541f8","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testCA_Logout() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Sign Out\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Sign Out\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"_58_login\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\t}","id":16863,"modified_method":"public void testCA_Logout() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Sign Out\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Sign Out\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"_58_login\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\t}","commit_id":"1952dab453dfa350ecb03371bf7ac0f001a541f8","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testCA_PortalRoles() throws Exception {\n\t\tselenium.clickAt(\"link=Define Permissions\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.select(\"_128_add-permissions\",\n\t\t\tRuntimeVariables.replace(\"label=Communities\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.check(\"_128_rowIds\");\n\t\tselenium.uncheck(\n\t\t\t\"//input[@name='_128_rowIds' and @value='com.liferay.portal.model.GroupASSIGN_MEMBERS']\");\n\t\tselenium.check(\n\t\t\t\"//input[@name='_128_rowIds' and @value='com.liferay.portal.model.GroupASSIGN_REVIEWER']\");\n\t\tselenium.uncheck(\n\t\t\t\"//input[@name='_128_rowIds' and @value='com.liferay.portal.model.GroupDELETE']\");\n\t\tselenium.uncheck(\n\t\t\t\"//input[@name='_128_rowIds' and @value='com.liferay.portal.model.GroupMANAGE_ANNOUNCEMENTS']\");\n\t\tselenium.check(\n\t\t\t\"//input[@name='_128_rowIds' and @value='com.liferay.portal.model.GroupMANAGE_LAYOUTS']\");\n\t\tselenium.uncheck(\n\t\t\t\"//input[@name='_128_rowIds' and @value='com.liferay.portal.model.GroupMANAGE_ARCHIVED_SETUPS']\");\n\t\tselenium.uncheck(\n\t\t\t\"//input[@name='_128_rowIds' and @value='com.liferay.portal.model.GroupMANAGE_STAGING']\");\n\t\tselenium.uncheck(\n\t\t\t\"//input[@name='_128_rowIds' and @value='com.liferay.portal.model.GroupPERMISSIONS']\");\n\t\tselenium.uncheck(\n\t\t\t\"//input[@name='_128_rowIds' and @value='com.liferay.portal.model.GroupPUBLISH_STAGING']\");\n\t\tselenium.uncheck(\n\t\t\t\"//input[@name='_128_rowIds' and @value='com.liferay.portal.model.GroupUPDATE']\");\n\t\tselenium.uncheck(\n\t\t\t\"//input[@name='_128_rowIds' and @value='com.liferay.portal.model.LayoutADD_DISCUSSION']\");\n\t\tselenium.uncheck(\n\t\t\t\"//input[@name='_128_rowIds' and @value='com.liferay.portal.model.LayoutUPDATE']\");\n\t\tselenium.uncheck(\n\t\t\t\"//input[@name='_128_rowIds' and @value='com.liferay.portal.model.LayoutVIEW']\");\n\t\tselenium.uncheck(\n\t\t\t\"//input[@name='_128_rowIds' and @value='com.liferay.portlet.tasks.model.TasksProposalADD_DISCUSSION']\");\n\t\tselenium.uncheck(\n\t\t\t\"//input[@name='_128_rowIds' and @value='com.liferay.portlet.tasks.model.TasksProposalDELETE']\");\n\t\tselenium.uncheck(\n\t\t\t\"//input[@name='_128_rowIds' and @value='com.liferay.portlet.tasks.model.TasksProposalUPDATE']\");\n\t\tselenium.uncheck(\n\t\t\t\"//input[@name='_128_rowIds' and @value='com.liferay.portlet.tasks.model.TasksProposalVIEW']\");\n\t\tselenium.clickAt(\"//input[@value='Save']\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isTextPresent(\"The role permissions were updated.\"));\n\t}","id":16864,"modified_method":"public void testCA_PortalRoles() throws Exception {\n\t\tselenium.clickAt(\"link=Define Permissions\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.select(\"_128_add-permissions\",\n\t\t\tRuntimeVariables.replace(\"label=Community administration\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.check(\n\t\t\t\"//input[@name='_128_rowIds' and @value='com.liferay.portal.model.GroupAPPROVE_PROPOSAL']\");\n\t\tselenium.uncheck(\n\t\t\t\"//input[@name='_128_rowIds' and @value='com.liferay.portal.model.GroupASSIGN_MEMBERS']\");\n\t\tselenium.check(\n\t\t\t\"//input[@name='_128_rowIds' and @value='com.liferay.portal.model.GroupASSIGN_REVIEWER']\");\n\t\tselenium.uncheck(\n\t\t\t\"//input[@name='_128_rowIds' and @value='com.liferay.portal.model.GroupDELETE']\");\n\t\tselenium.uncheck(\n\t\t\t\"//input[@name='_128_rowIds' and @value='com.liferay.portal.model.GroupMANAGE_ANNOUNCEMENTS']\");\n\t\tselenium.check(\n\t\t\t\"//input[@name='_128_rowIds' and @value='com.liferay.portal.model.GroupMANAGE_LAYOUTS']\");\n\t\tselenium.uncheck(\n\t\t\t\"//input[@name='_128_rowIds' and @value='com.liferay.portal.model.GroupMANAGE_ARCHIVED_SETUPS']\");\n\t\tselenium.uncheck(\n\t\t\t\"//input[@name='_128_rowIds' and @value='com.liferay.portal.model.GroupMANAGE_STAGING']\");\n\t\tselenium.uncheck(\n\t\t\t\"//input[@name='_128_rowIds' and @value='com.liferay.portal.model.GroupPERMISSIONS']\");\n\t\tselenium.uncheck(\n\t\t\t\"//input[@name='_128_rowIds' and @value='com.liferay.portal.model.GroupPUBLISH_STAGING']\");\n\t\tselenium.uncheck(\n\t\t\t\"//input[@name='_128_rowIds' and @value='com.liferay.portal.model.GroupUPDATE']\");\n\t\tselenium.uncheck(\n\t\t\t\"//input[@name='_128_rowIds' and @value='com.liferay.portal.model.LayoutADD_DISCUSSION']\");\n\t\tselenium.uncheck(\n\t\t\t\"//input[@name='_128_rowIds' and @value='com.liferay.portal.model.LayoutUPDATE']\");\n\t\tselenium.uncheck(\n\t\t\t\"//input[@name='_128_rowIds' and @value='com.liferay.portal.model.LayoutVIEW']\");\n\t\tselenium.uncheck(\n\t\t\t\"//input[@name='_128_rowIds' and @value='com.liferay.portlet.tasks.model.TasksProposalADD_DISCUSSION']\");\n\t\tselenium.uncheck(\n\t\t\t\"//input[@name='_128_rowIds' and @value='com.liferay.portlet.tasks.model.TasksProposalDELETE']\");\n\t\tselenium.uncheck(\n\t\t\t\"//input[@name='_128_rowIds' and @value='com.liferay.portlet.tasks.model.TasksProposalUPDATE']\");\n\t\tselenium.uncheck(\n\t\t\t\"//input[@name='_128_rowIds' and @value='com.liferay.portlet.tasks.model.TasksProposalVIEW']\");\n\t\tselenium.clickAt(\"//input[@value='Save']\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isTextPresent(\"The role permissions were updated.\"));\n\t}","commit_id":"1952dab453dfa350ecb03371bf7ac0f001a541f8","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testCC_AddStagedContent() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Blogs Staging Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Blogs Staging Test Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=View Staged Page\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"//input[@value='Add Blog Entry']\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.typeKeys(\"_33_title\",\n\t\t\tRuntimeVariables.replace(\"Staging Blogs Test Entr\"));\n\t\tselenium.type(\"_33_title\",\n\t\t\tRuntimeVariables.replace(\"Staging Blogs Test Entry\"));\n\t\tThread.sleep(5000);\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"_33_editor\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"FCKeditor1___Frame\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//textarea\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.selectFrame(\"//iframe[@id=\\\"_33_editor\\\"]\");\n\t\tselenium.selectFrame(\"//iframe[@id=\\\"FCKeditor1___Frame\\\"]\");\n\t\tselenium.selectFrame(\"//iframe\");\n\t\tselenium.typeKeys(\"//body\",\n\t\t\tRuntimeVariables.replace(\"This is a staged blogs entr.\"));\n\t\tselenium.type(\"//body\",\n\t\t\tRuntimeVariables.replace(\"This is a staged blogs entry.\"));\n\t\tselenium.selectFrame(\"relative=top\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"_33_saveButton\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"_33_saveButton\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"Your request processed successfully.\"));\n\t\tassertTrue(selenium.isElementPresent(\"link=Staging Blogs Test Entry\"));\n\t\tassertTrue(selenium.isTextPresent(\"This is a staged blogs entry.\"));\n\t}","id":16865,"modified_method":"public void testCC_AddStagedContent() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Blogs Staging Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Blogs Staging Test Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=View Staged Page\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"//input[@value='Add Blog Entry']\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"_33_title\",\n\t\t\tRuntimeVariables.replace(\"Staging Blogs Test Entry\"));\n\t\tThread.sleep(5000);\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"_33_editor\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"cke_contents_CKEditor1\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//textarea\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.selectFrame(\"//iframe[@id='_33_editor']\");\n\t\tselenium.selectFrame(\"//td[@id='cke_contents_CKEditor1']/iframe\");\n\t\tselenium.type(\"//body\",\n\t\t\tRuntimeVariables.replace(\"This is a staged blogs entry.\"));\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.clickAt(\"//input[@value='Publish']\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"Your request processed successfully.\"));\n\t\tassertTrue(selenium.isElementPresent(\"link=Staging Blogs Test Entry\"));\n\t\tassertTrue(selenium.isTextPresent(\"This is a staged blogs entry.\"));\n\t}","commit_id":"1952dab453dfa350ecb03371bf7ac0f001a541f8","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testCC_AddStagedPortlet() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Blogs Staging Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Blogs Staging Test Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=View Staged Page\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//div[3]/ul/li[3]/span/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tThread.sleep(5000);\n\t\tselenium.clickAt(\"link=Application\", RuntimeVariables.replace(\"\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"//div[@id='Collaboration-Blogs']/p/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"//div[@id='Collaboration-Blogs']/p/a\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//td[1]/div/div[1]/div\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertTrue(selenium.isElementPresent(\"//td[1]/div/div[1]/div\"));\n\t}","id":16866,"modified_method":"public void testCC_AddStagedPortlet() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Blogs Staging Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Blogs Staging Test Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=View Staged Page\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tThread.sleep(5000);\n\t\tselenium.clickAt(\"_145_addApplication\", RuntimeVariables.replace(\"\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//div[@title='Blogs']/p/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"//div[@title='Blogs']/p/a\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//section\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertTrue(selenium.isVisible(\"//section\"));\n\t}","commit_id":"1952dab453dfa350ecb03371bf7ac0f001a541f8","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testCC_BlogsRoles() throws Exception {\n\t\tselenium.clickAt(\"link=Define Permissions\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.select(\"_128_add-permissions\",\n\t\t\tRuntimeVariables.replace(\"label=Blogs\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.check(\"_128_rowIds\");\n\t\tselenium.uncheck(\n\t\t\t\"//input[@name='_128_rowIds' and @value='com.liferay.portlet.blogs.model.BlogsEntryADD_DISCUSSION']\");\n\t\tselenium.uncheck(\n\t\t\t\"//input[@name='_128_rowIds' and @value='com.liferay.portlet.blogs.model.BlogsEntryDELETE']\");\n\t\tselenium.uncheck(\n\t\t\t\"//input[@name='_128_rowIds' and @value='com.liferay.portlet.blogs.model.BlogsEntryDELETE_DISCUSSION']\");\n\t\tselenium.uncheck(\n\t\t\t\"//input[@name='_128_rowIds' and @value='com.liferay.portlet.blogs.model.BlogsEntryPERMISSIONS']\");\n\t\tselenium.uncheck(\n\t\t\t\"//input[@name='_128_rowIds' and @value='com.liferay.portlet.blogs.model.BlogsEntryUPDATE']\");\n\t\tselenium.uncheck(\n\t\t\t\"//input[@name='_128_rowIds' and @value='com.liferay.portlet.blogs.model.BlogsEntryUPDATE_DISCUSSION']\");\n\t\tselenium.uncheck(\n\t\t\t\"//input[@name='_128_rowIds' and @value='com.liferay.portlet.blogs.model.BlogsEntryVIEW']\");\n\t\tselenium.clickAt(\"//input[@value='Save']\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isTextPresent(\"The role permissions were updated.\"));\n\t}","id":16867,"modified_method":"public void testCC_BlogsRoles() throws Exception {\n\t\tselenium.clickAt(\"link=Define Permissions\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.select(\"_128_add-permissions\",\n\t\t\tRuntimeVariables.replace(\"label=Blogs\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.check(\n\t\t\t\"//input[@name='_128_rowIds' and @value='com.liferay.portlet.blogsADD_ENTRY']\");\n\t\tselenium.uncheck(\n\t\t\t\"//input[@name='_128_rowIds' and @value='com.liferay.portlet.blogs.model.BlogsEntryADD_DISCUSSION']\");\n\t\tselenium.uncheck(\n\t\t\t\"//input[@name='_128_rowIds' and @value='com.liferay.portlet.blogs.model.BlogsEntryDELETE']\");\n\t\tselenium.uncheck(\n\t\t\t\"//input[@name='_128_rowIds' and @value='com.liferay.portlet.blogs.model.BlogsEntryDELETE_DISCUSSION']\");\n\t\tselenium.uncheck(\n\t\t\t\"//input[@name='_128_rowIds' and @value='com.liferay.portlet.blogs.model.BlogsEntryPERMISSIONS']\");\n\t\tselenium.uncheck(\n\t\t\t\"//input[@name='_128_rowIds' and @value='com.liferay.portlet.blogs.model.BlogsEntryUPDATE']\");\n\t\tselenium.uncheck(\n\t\t\t\"//input[@name='_128_rowIds' and @value='com.liferay.portlet.blogs.model.BlogsEntryUPDATE_DISCUSSION']\");\n\t\tselenium.uncheck(\n\t\t\t\"//input[@name='_128_rowIds' and @value='com.liferay.portlet.blogs.model.BlogsEntryVIEW']\");\n\t\tselenium.clickAt(\"//input[@value='Save']\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isTextPresent(\"The role permissions were updated.\"));\n\t}","commit_id":"1952dab453dfa350ecb03371bf7ac0f001a541f8","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testCC_Login() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Welcome\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Welcome\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"_58_login\", RuntimeVariables.replace(\"cc@liferay.com\"));\n\t\tselenium.type(\"_58_password\", RuntimeVariables.replace(\"test\"));\n\t\tselenium.clickAt(\"//input[@value='Sign In']\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t}","id":16868,"modified_method":"public void testCC_Login() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Welcome\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Welcome\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"_58_login\", RuntimeVariables.replace(\"cc@liferay.com\"));\n\t\tselenium.type(\"_58_password\", RuntimeVariables.replace(\"test\"));\n\t\tselenium.clickAt(\"_58_rememberMeCheckbox\", RuntimeVariables.replace(\"\"));\n\t\tselenium.clickAt(\"//input[@value='Sign In']\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t}","commit_id":"1952dab453dfa350ecb03371bf7ac0f001a541f8","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testCC_Logout() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Sign Out\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Sign Out\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"_58_login\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\t}","id":16869,"modified_method":"public void testCC_Logout() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Sign Out\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Sign Out\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"_58_login\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\t}","commit_id":"1952dab453dfa350ecb03371bf7ac0f001a541f8","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testCC_PortalRoles() throws Exception {\n\t\tselenium.clickAt(\"link=Define Permissions\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.select(\"_128_add-permissions\",\n\t\t\tRuntimeVariables.replace(\"label=Communities\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.uncheck(\"_128_rowIds\");\n\t\tselenium.uncheck(\n\t\t\t\"//input[@name='_128_rowIds' and @value='com.liferay.portal.model.GroupASSIGN_MEMBERS']\");\n\t\tselenium.uncheck(\n\t\t\t\"//input[@name='_128_rowIds' and @value='com.liferay.portal.model.GroupASSIGN_REVIEWER']\");\n\t\tselenium.uncheck(\n\t\t\t\"//input[@name='_128_rowIds' and @value='com.liferay.portal.model.GroupDELETE']\");\n\t\tselenium.uncheck(\n\t\t\t\"//input[@name='_128_rowIds' and @value='com.liferay.portal.model.GroupMANAGE_ANNOUNCEMENTS']\");\n\t\tselenium.uncheck(\n\t\t\t\"//input[@name='_128_rowIds' and @value='com.liferay.portal.model.GroupMANAGE_ARCHIVED_SETUPS']\");\n\t\tselenium.check(\n\t\t\t\"//input[@name='_128_rowIds' and @value='com.liferay.portal.model.GroupMANAGE_LAYOUTS']\");\n\t\tselenium.uncheck(\n\t\t\t\"//input[@name='_128_rowIds' and @value='com.liferay.portal.model.GroupMANAGE_STAGING']\");\n\t\tselenium.uncheck(\n\t\t\t\"//input[@name='_128_rowIds' and @value='com.liferay.portal.model.GroupPERMISSIONS']\");\n\t\tselenium.uncheck(\n\t\t\t\"//input[@name='_128_rowIds' and @value='com.liferay.portal.model.GroupPUBLISH_STAGING']\");\n\t\tselenium.uncheck(\n\t\t\t\"//input[@name='_128_rowIds' and @value='com.liferay.portal.model.GroupUPDATE']\");\n\t\tselenium.uncheck(\n\t\t\t\"//input[@name='_128_rowIds' and @value='com.liferay.portal.model.LayoutADD_DISCUSSION']\");\n\t\tselenium.uncheck(\n\t\t\t\"//input[@name='_128_rowIds' and @value='com.liferay.portal.model.LayoutUPDATE']\");\n\t\tselenium.uncheck(\n\t\t\t\"//input[@name='_128_rowIds' and @value='com.liferay.portal.model.LayoutVIEW']\");\n\t\tselenium.uncheck(\n\t\t\t\"//input[@name='_128_rowIds' and @value='com.liferay.portlet.tasks.model.TasksProposalADD_DISCUSSION']\");\n\t\tselenium.uncheck(\n\t\t\t\"//input[@name='_128_rowIds' and @value='com.liferay.portlet.tasks.model.TasksProposalDELETE']\");\n\t\tselenium.uncheck(\n\t\t\t\"//input[@name='_128_rowIds' and @value='com.liferay.portlet.tasks.model.TasksProposalUPDATE']\");\n\t\tselenium.uncheck(\n\t\t\t\"//input[@name='_128_rowIds' and @value='com.liferay.portlet.tasks.model.TasksProposalVIEW']\");\n\t\tselenium.clickAt(\"//input[@value='Save']\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isTextPresent(\"The role permissions were updated.\"));\n\t}","id":16870,"modified_method":"public void testCC_PortalRoles() throws Exception {\n\t\tselenium.clickAt(\"link=Define Permissions\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.select(\"_128_add-permissions\",\n\t\t\tRuntimeVariables.replace(\"label=Community administration\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.uncheck(\n\t\t\t\"//input[@name='_128_rowIds' and @value='com.liferay.portal.model.GroupAPPROVE_PROPOSAL']\");\n\t\tselenium.uncheck(\n\t\t\t\"//input[@name='_128_rowIds' and @value='com.liferay.portal.model.GroupASSIGN_MEMBERS']\");\n\t\tselenium.uncheck(\n\t\t\t\"//input[@name='_128_rowIds' and @value='com.liferay.portal.model.GroupASSIGN_REVIEWER']\");\n\t\tselenium.uncheck(\n\t\t\t\"//input[@name='_128_rowIds' and @value='com.liferay.portal.model.GroupDELETE']\");\n\t\tselenium.uncheck(\n\t\t\t\"//input[@name='_128_rowIds' and @value='com.liferay.portal.model.GroupMANAGE_ANNOUNCEMENTS']\");\n\t\tselenium.uncheck(\n\t\t\t\"//input[@name='_128_rowIds' and @value='com.liferay.portal.model.GroupMANAGE_ARCHIVED_SETUPS']\");\n\t\tselenium.check(\n\t\t\t\"//input[@name='_128_rowIds' and @value='com.liferay.portal.model.GroupMANAGE_LAYOUTS']\");\n\t\tselenium.uncheck(\n\t\t\t\"//input[@name='_128_rowIds' and @value='com.liferay.portal.model.GroupMANAGE_STAGING']\");\n\t\tselenium.uncheck(\n\t\t\t\"//input[@name='_128_rowIds' and @value='com.liferay.portal.model.GroupPERMISSIONS']\");\n\t\tselenium.uncheck(\n\t\t\t\"//input[@name='_128_rowIds' and @value='com.liferay.portal.model.GroupPUBLISH_STAGING']\");\n\t\tselenium.uncheck(\n\t\t\t\"//input[@name='_128_rowIds' and @value='com.liferay.portal.model.GroupUPDATE']\");\n\t\tselenium.uncheck(\n\t\t\t\"//input[@name='_128_rowIds' and @value='com.liferay.portal.model.LayoutADD_DISCUSSION']\");\n\t\tselenium.uncheck(\n\t\t\t\"//input[@name='_128_rowIds' and @value='com.liferay.portal.model.LayoutUPDATE']\");\n\t\tselenium.uncheck(\n\t\t\t\"//input[@name='_128_rowIds' and @value='com.liferay.portal.model.LayoutVIEW']\");\n\t\tselenium.uncheck(\n\t\t\t\"//input[@name='_128_rowIds' and @value='com.liferay.portlet.tasks.model.TasksProposalADD_DISCUSSION']\");\n\t\tselenium.uncheck(\n\t\t\t\"//input[@name='_128_rowIds' and @value='com.liferay.portlet.tasks.model.TasksProposalDELETE']\");\n\t\tselenium.uncheck(\n\t\t\t\"//input[@name='_128_rowIds' and @value='com.liferay.portlet.tasks.model.TasksProposalUPDATE']\");\n\t\tselenium.uncheck(\n\t\t\t\"//input[@name='_128_rowIds' and @value='com.liferay.portlet.tasks.model.TasksProposalVIEW']\");\n\t\tselenium.clickAt(\"//input[@value='Save']\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isTextPresent(\"The role permissions were updated.\"));\n\t}","commit_id":"1952dab453dfa350ecb03371bf7ac0f001a541f8","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testCC_SendContentProposal() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Blogs Staging Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Blogs Staging Test Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Propose Publication\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"_88_description\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.typeKeys(\"_88_description\",\n\t\t\tRuntimeVariables.replace(\"This is a content proposal test.\"));\n\t\tselenium.type(\"_88_description\",\n\t\t\tRuntimeVariables.replace(\"This is a content proposal test.\"));\n\t\tselenium.clickAt(\"//input[@value='Proceed']\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=View Proposals\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isTextPresent(\"Blogs Staging Test Page\"));\n\t\tassertTrue(selenium.isTextPresent(\"This is a content proposal test.\"));\n\t}","id":16871,"modified_method":"public void testCC_SendContentProposal() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Blogs Staging Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Blogs Staging Test Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=View Staged Page\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Propose Publication\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"_88_description\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.type(\"_88_description\",\n\t\t\tRuntimeVariables.replace(\"This is a content proposal test.\"));\n\t\tselenium.select(\"_88_reviewUserId\",\n\t\t\tRuntimeVariables.replace(\"label=Administrator Liferay\"));\n\t\tselenium.clickAt(\"//input[@value='Proceed']\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=View Proposals\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isTextPresent(\"Blogs Staging Test Page\"));\n\t\tassertTrue(selenium.isTextPresent(\"This is a content proposal test.\"));\n\t}","commit_id":"1952dab453dfa350ecb03371bf7ac0f001a541f8","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testCC_SendPortletProposal() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Blogs Staging Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Blogs Staging Test Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Propose Publication\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"_88_description\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.typeKeys(\"_88_description\",\n\t\t\tRuntimeVariables.replace(\"This is a portlet proposal test.\"));\n\t\tselenium.type(\"_88_description\",\n\t\t\tRuntimeVariables.replace(\"This is a portlet proposal test.\"));\n\t\tselenium.select(\"_88_reviewUserId\",\n\t\t\tRuntimeVariables.replace(\"label=Administrator Liferay\"));\n\t\tselenium.clickAt(\"//input[@value='Proceed']\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=View Proposals\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isTextPresent(\"Blogs Staging Test Page\"));\n\t\tassertTrue(selenium.isTextPresent(\"This is a portlet proposal test.\"));\n\t}","id":16872,"modified_method":"public void testCC_SendPortletProposal() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Blogs Staging Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Blogs Staging Test Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=View Staged Page\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Propose Publication\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"_88_description\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.type(\"_88_description\",\n\t\t\tRuntimeVariables.replace(\"This is a portlet proposal test.\"));\n\t\tselenium.select(\"_88_reviewUserId\",\n\t\t\tRuntimeVariables.replace(\"label=Administrator Liferay\"));\n\t\tselenium.clickAt(\"//input[@value='Proceed']\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=View Proposals\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isTextPresent(\"Blogs Staging Test Page\"));\n\t\tassertTrue(selenium.isTextPresent(\"This is a portlet proposal test.\"));\n\t}","commit_id":"1952dab453dfa350ecb03371bf7ac0f001a541f8","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testCP_AssertCannotPublishProposal() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Blogs Staging Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Blogs Staging Test Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=View Proposals\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//strong/span\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"//strong/span\", RuntimeVariables.replace(\"\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Edit\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Edit\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertFalse(selenium.isElementPresent(\n\t\t\t\t\"//input[@value='Publish To Live']\"));\n\t}","id":16873,"modified_method":"public void testCP_AssertCannotPublishProposal() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Blogs Staging Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Blogs Staging Test Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=View Proposals\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"//strong/a\", RuntimeVariables.replace(\"Actions\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[1]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[1]/a\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertFalse(selenium.isElementPresent(\n\t\t\t\t\"//input[@value='Publish to Live']\"));\n\t}","commit_id":"1952dab453dfa350ecb03371bf7ac0f001a541f8","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testCP_Login() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Welcome\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Welcome\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"_58_login\", RuntimeVariables.replace(\"cp@liferay.com\"));\n\t\tselenium.type(\"_58_password\", RuntimeVariables.replace(\"test\"));\n\t\tselenium.clickAt(\"//input[@value='Sign In']\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t}","id":16874,"modified_method":"public void testCP_Login() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Welcome\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Welcome\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"_58_login\", RuntimeVariables.replace(\"cp@liferay.com\"));\n\t\tselenium.type(\"_58_password\", RuntimeVariables.replace(\"test\"));\n\t\tselenium.clickAt(\"_58_rememberMeCheckbox\", RuntimeVariables.replace(\"\"));\n\t\tselenium.clickAt(\"//input[@value='Sign In']\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t}","commit_id":"1952dab453dfa350ecb03371bf7ac0f001a541f8","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testCP_Logout() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Sign Out\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Sign Out\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"_58_login\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\t}","id":16875,"modified_method":"public void testCP_Logout() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Sign Out\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Sign Out\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"_58_login\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\t}","commit_id":"1952dab453dfa350ecb03371bf7ac0f001a541f8","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testCP_PortalRoles() throws Exception {\n\t\tselenium.clickAt(\"link=Define Permissions\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.select(\"_128_add-permissions\",\n\t\t\tRuntimeVariables.replace(\"label=Communities\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.check(\"_128_rowIds\");\n\t\tselenium.uncheck(\n\t\t\t\"//input[@name='_128_rowIds' and @value='com.liferay.portal.model.GroupASSIGN_MEMBERS']\");\n\t\tselenium.uncheck(\n\t\t\t\"//input[@name='_128_rowIds' and @value='com.liferay.portal.model.GroupASSIGN_REVIEWER']\");\n\t\tselenium.uncheck(\n\t\t\t\"//input[@name='_128_rowIds' and @value='com.liferay.portal.model.GroupDELETE']\");\n\t\tselenium.uncheck(\n\t\t\t\"//input[@name='_128_rowIds' and @value='com.liferay.portal.model.GroupMANAGE_ANNOUNCEMENTS']\");\n\t\tselenium.uncheck(\n\t\t\t\"//input[@name='_128_rowIds' and @value='com.liferay.portal.model.GroupMANAGE_ARCHIVED_SETUPS']\");\n\t\tselenium.check(\n\t\t\t\"//input[@name='_128_rowIds' and @value='com.liferay.portal.model.GroupMANAGE_LAYOUTS']\");\n\t\tselenium.uncheck(\n\t\t\t\"//input[@name='_128_rowIds' and @value='com.liferay.portal.model.GroupMANAGE_STAGING']\");\n\t\tselenium.uncheck(\n\t\t\t\"//input[@name='_128_rowIds' and @value='com.liferay.portal.model.GroupPERMISSIONS']\");\n\t\tselenium.check(\n\t\t\t\"//input[@name='_128_rowIds' and @value='com.liferay.portal.model.GroupPUBLISH_STAGING']\");\n\t\tselenium.uncheck(\n\t\t\t\"//input[@name='_128_rowIds' and @value='com.liferay.portal.model.GroupUPDATE']\");\n\t\tselenium.uncheck(\n\t\t\t\"//input[@name='_128_rowIds' and @value='com.liferay.portal.model.LayoutADD_DISCUSSION']\");\n\t\tselenium.uncheck(\n\t\t\t\"//input[@name='_128_rowIds' and @value='com.liferay.portal.model.LayoutUPDATE']\");\n\t\tselenium.uncheck(\n\t\t\t\"//input[@name='_128_rowIds' and @value='com.liferay.portal.model.LayoutVIEW']\");\n\t\tselenium.uncheck(\n\t\t\t\"//input[@name='_128_rowIds' and @value='com.liferay.portlet.tasks.model.TasksProposalADD_DISCUSSION']\");\n\t\tselenium.uncheck(\n\t\t\t\"//input[@name='_128_rowIds' and @value='com.liferay.portlet.tasks.model.TasksProposalDELETE']\");\n\t\tselenium.uncheck(\n\t\t\t\"//input[@name='_128_rowIds' and @value='com.liferay.portlet.tasks.model.TasksProposalUPDATE']\");\n\t\tselenium.uncheck(\n\t\t\t\"//input[@name='_128_rowIds' and @value='com.liferay.portlet.tasks.model.TasksProposalVIEW']\");\n\t\tselenium.clickAt(\"//input[@value='Save']\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isTextPresent(\"The role permissions were updated.\"));\n\t}","id":16876,"modified_method":"public void testCP_PortalRoles() throws Exception {\n\t\tselenium.clickAt(\"link=Define Permissions\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.select(\"_128_add-permissions\",\n\t\t\tRuntimeVariables.replace(\"label=Community administration\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.check(\n\t\t\t\"//input[@name='_128_rowIds' and @value='com.liferay.portal.model.GroupAPPROVE_PROPOSAL']\");\n\t\tselenium.uncheck(\n\t\t\t\"//input[@name='_128_rowIds' and @value='com.liferay.portal.model.GroupASSIGN_MEMBERS']\");\n\t\tselenium.uncheck(\n\t\t\t\"//input[@name='_128_rowIds' and @value='com.liferay.portal.model.GroupASSIGN_REVIEWER']\");\n\t\tselenium.uncheck(\n\t\t\t\"//input[@name='_128_rowIds' and @value='com.liferay.portal.model.GroupDELETE']\");\n\t\tselenium.uncheck(\n\t\t\t\"//input[@name='_128_rowIds' and @value='com.liferay.portal.model.GroupMANAGE_ANNOUNCEMENTS']\");\n\t\tselenium.uncheck(\n\t\t\t\"//input[@name='_128_rowIds' and @value='com.liferay.portal.model.GroupMANAGE_ARCHIVED_SETUPS']\");\n\t\tselenium.check(\n\t\t\t\"//input[@name='_128_rowIds' and @value='com.liferay.portal.model.GroupMANAGE_LAYOUTS']\");\n\t\tselenium.uncheck(\n\t\t\t\"//input[@name='_128_rowIds' and @value='com.liferay.portal.model.GroupMANAGE_STAGING']\");\n\t\tselenium.uncheck(\n\t\t\t\"//input[@name='_128_rowIds' and @value='com.liferay.portal.model.GroupPERMISSIONS']\");\n\t\tselenium.check(\n\t\t\t\"//input[@name='_128_rowIds' and @value='com.liferay.portal.model.GroupPUBLISH_STAGING']\");\n\t\tselenium.uncheck(\n\t\t\t\"//input[@name='_128_rowIds' and @value='com.liferay.portal.model.GroupUPDATE']\");\n\t\tselenium.uncheck(\n\t\t\t\"//input[@name='_128_rowIds' and @value='com.liferay.portal.model.LayoutADD_DISCUSSION']\");\n\t\tselenium.uncheck(\n\t\t\t\"//input[@name='_128_rowIds' and @value='com.liferay.portal.model.LayoutUPDATE']\");\n\t\tselenium.uncheck(\n\t\t\t\"//input[@name='_128_rowIds' and @value='com.liferay.portal.model.LayoutVIEW']\");\n\t\tselenium.uncheck(\n\t\t\t\"//input[@name='_128_rowIds' and @value='com.liferay.portlet.tasks.model.TasksProposalADD_DISCUSSION']\");\n\t\tselenium.uncheck(\n\t\t\t\"//input[@name='_128_rowIds' and @value='com.liferay.portlet.tasks.model.TasksProposalDELETE']\");\n\t\tselenium.uncheck(\n\t\t\t\"//input[@name='_128_rowIds' and @value='com.liferay.portlet.tasks.model.TasksProposalUPDATE']\");\n\t\tselenium.uncheck(\n\t\t\t\"//input[@name='_128_rowIds' and @value='com.liferay.portlet.tasks.model.TasksProposalVIEW']\");\n\t\tselenium.clickAt(\"//input[@value='Save']\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isTextPresent(\"The role permissions were updated.\"));\n\t}","commit_id":"1952dab453dfa350ecb03371bf7ac0f001a541f8","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testCP_PublishContentToLive() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Blogs Staging Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Blogs Staging Test Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=View Proposals\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//strong/span\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"//strong/span\", RuntimeVariables.replace(\"\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Edit\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Edit\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"//input[@value='Publish to Live']\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Options\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Options\", RuntimeVariables.replace(\"\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"_88_PORTLET_DATA_33\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"_88_PORTLET_DATA_33\", RuntimeVariables.replace(\"\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Pages\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Pages\", RuntimeVariables.replace(\"\"));\n\t\tselenium.click(RuntimeVariables.replace(\"publishBtn\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t   .matches(\"^Are you sure you want to publish these pages[\\\\s\\\\S]$\"));\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"Your request processed successfully.\"));\n\t}","id":16877,"modified_method":"public void testCP_PublishContentToLive() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\t\t\"link=Blogs Staging Test Page\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"link=Blogs Staging Test Page\",\n\t\t\t\t\tRuntimeVariables.replace(\"\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.clickAt(\"link=View Proposals\",\n\t\t\t\t\tRuntimeVariables.replace(\"\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.clickAt(\"//strong/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[1]/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[1]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.clickAt(\"//input[@value='Publish to Live']\",\n\t\t\t\t\tRuntimeVariables.replace(\"\"));\n\t\t\t\tThread.sleep(5000);\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\"//div[2]/div[1]/div/span\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tboolean optionsVisible = selenium.isVisible(\n\t\t\t\t\t\t\"_88_PORTLET_DATA_33Checkbox\");\n\n\t\t\t\tif (optionsVisible) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[2]/div[1]/div/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"Options\"));\n\n\t\t\tcase 2:\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\"_88_PORTLET_DATA_33Checkbox\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"_88_PORTLET_DATA_33Checkbox\",\n\t\t\t\t\tRuntimeVariables.replace(\"\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//input[@value='Publish']\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to publish these pages[\\\\s\\\\S]$\"));\n\t\t\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\t\t\"Your request processed successfully.\"));\n\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","commit_id":"1952dab453dfa350ecb03371bf7ac0f001a541f8","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testCP_PublishPortletToLive() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Blogs Staging Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Blogs Staging Test Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=View Proposals\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//strong/span\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"//strong/span\", RuntimeVariables.replace(\"\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Edit\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Edit\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"//input[@value='Publish to Live']\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Options\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Options\", RuntimeVariables.replace(\"\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"_88_PORTLET_DATA_33\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"_88_PORTLET_DATA_33\", RuntimeVariables.replace(\"\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Pages\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Pages\", RuntimeVariables.replace(\"\"));\n\t\tselenium.click(RuntimeVariables.replace(\"publishBtn\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t   .matches(\"^Are you sure you want to publish these pages[\\\\s\\\\S]$\"));\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"Your request processed successfully.\"));\n\t}","id":16878,"modified_method":"public void testCP_PublishPortletToLive() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\t\t\"link=Blogs Staging Test Page\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"link=Blogs Staging Test Page\",\n\t\t\t\t\tRuntimeVariables.replace(\"\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.clickAt(\"link=View Proposals\",\n\t\t\t\t\tRuntimeVariables.replace(\"\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.clickAt(\"//strong/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[1]/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[1]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.clickAt(\"//input[@value='Publish to Live']\",\n\t\t\t\t\tRuntimeVariables.replace(\"\"));\n\t\t\t\tThread.sleep(5000);\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\"//div[2]/div[1]/div/span\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tboolean optionsVisible = selenium.isVisible(\n\t\t\t\t\t\t\"_88_PORTLET_DATA_33Checkbox\");\n\n\t\t\t\tif (optionsVisible) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[2]/div[1]/div/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"Options\"));\n\n\t\t\tcase 2:\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\"_88_PORTLET_DATA_33Checkbox\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"_88_PORTLET_DATA_33Checkbox\",\n\t\t\t\t\tRuntimeVariables.replace(\"\"));\n\t\t\t\tThread.sleep(5000);\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//input[@value='Publish']\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to publish these pages[\\\\s\\\\S]$\"));\n\t\t\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\t\t\"Your request processed successfully.\"));\n\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","commit_id":"1952dab453dfa350ecb03371bf7ac0f001a541f8","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testControlPanel() throws Exception {\n\t\tselenium.open(\"/web/guest/home\");\n\t\tselenium.clickAt(\"link=Control Panel\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t}","id":16879,"modified_method":"public void testControlPanel() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Control Panel\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t}","commit_id":"1952dab453dfa350ecb03371bf7ac0f001a541f8","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testCreateRoles() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Roles\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Roles\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Add\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Add\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"_128_description\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.typeKeys(\"_128_name\",\n\t\t\tRuntimeVariables.replace(\"Content Creator\"));\n\t\tselenium.type(\"_128_name\", RuntimeVariables.replace(\"Content Creator\"));\n\t\tselenium.type(\"_128_description\",\n\t\t\tRuntimeVariables.replace(\"This is the Content Creator Role.\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"Your request processed successfully.\"));\n\t\tselenium.clickAt(\"link=Roles\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Add\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Add\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"_128_description\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.typeKeys(\"_128_name\",\n\t\t\tRuntimeVariables.replace(\"Content Administrator\"));\n\t\tselenium.type(\"_128_name\",\n\t\t\tRuntimeVariables.replace(\"Content Administrator\"));\n\t\tselenium.type(\"_128_description\",\n\t\t\tRuntimeVariables.replace(\"This is the Content Administrator Role.\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"Your request processed successfully.\"));\n\t\tselenium.clickAt(\"link=Roles\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Add\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Add\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"_128_description\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.typeKeys(\"_128_name\",\n\t\t\tRuntimeVariables.replace(\"Content Publisher\"));\n\t\tselenium.type(\"_128_name\", RuntimeVariables.replace(\"Content Publisher\"));\n\t\tselenium.type(\"_128_description\",\n\t\t\tRuntimeVariables.replace(\"This is the Content Publisher Role.\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"Your request processed successfully.\"));\n\t}","id":16880,"modified_method":"public void testCreateRoles() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Roles\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Roles\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Add\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Add\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"_128_description\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.type(\"_128_name\", RuntimeVariables.replace(\"Content Creator\"));\n\t\tselenium.type(\"_128_description\",\n\t\t\tRuntimeVariables.replace(\"This is the Content Creator Role.\"));\n\t\tselenium.select(\"_128_type\", RuntimeVariables.replace(\"label=Community\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"Your request processed successfully.\"));\n\t\tselenium.clickAt(\"link=Roles\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Add\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Add\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"_128_description\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.type(\"_128_name\",\n\t\t\tRuntimeVariables.replace(\"Content Administrator\"));\n\t\tselenium.type(\"_128_description\",\n\t\t\tRuntimeVariables.replace(\"This is the Content Administrator Role.\"));\n\t\tselenium.select(\"_128_type\", RuntimeVariables.replace(\"label=Community\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"Your request processed successfully.\"));\n\t\tselenium.clickAt(\"link=Roles\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Add\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Add\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"_128_description\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.type(\"_128_name\", RuntimeVariables.replace(\"Content Publisher\"));\n\t\tselenium.type(\"_128_description\",\n\t\t\tRuntimeVariables.replace(\"This is the Content Publisher Role.\"));\n\t\tselenium.select(\"_128_type\", RuntimeVariables.replace(\"label=Community\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"Your request processed successfully.\"));\n\t}","commit_id":"1952dab453dfa350ecb03371bf7ac0f001a541f8","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testDefineContentAdministratorRoles() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Roles\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Roles\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tThread.sleep(5000);\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//tr[7]/td[4]/ul/li/strong/span\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"//tr[7]/td[4]/ul/li/strong/span\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//div[5]/ul/li[3]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"//div[5]/ul/li[3]/a\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isTextPresent(\"Content Administrator\"));\n\t\tassertTrue(selenium.isTextPresent(\"Add Permissions\"));\n\t}","id":16881,"modified_method":"public void testDefineContentAdministratorRoles() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Roles\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Roles\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"//tr[7]/td[4]/ul/li/strong/a\",\n\t\t\tRuntimeVariables.replace(\"Actions\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[3]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[3]/a\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Content Administrator\"),\n\t\t\tselenium.getText(\"//h1[@class='header-title']/span\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Add Permissions (Changing the value of this field will reload the page.)\"),\n\t\t\tselenium.getText(\"//label[@for='_128_add-permissions']\"));\n\t}","commit_id":"1952dab453dfa350ecb03371bf7ac0f001a541f8","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testDefineContentCreatorRoles() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Roles\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Roles\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tThread.sleep(5000);\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//tr[8]/td[4]/ul/li/strong/span\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"//tr[8]/td[4]/ul/li/strong/span\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//div[5]/ul/li[3]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"//div[5]/ul/li[3]/a\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isTextPresent(\"Content Creator\"));\n\t\tassertTrue(selenium.isTextPresent(\"Add Permission\"));\n\t}","id":16882,"modified_method":"public void testDefineContentCreatorRoles() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Roles\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Roles\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"//tr[8]/td[4]/ul/li/strong/a\",\n\t\t\tRuntimeVariables.replace(\"Actions\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[3]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[3]/a\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Content Creator\"),\n\t\t\tselenium.getText(\"//h1[@class='header-title']/span\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Add Permissions (Changing the value of this field will reload the page.)\"),\n\t\t\tselenium.getText(\"//label[@for='_128_add-permissions']\"));\n\t}","commit_id":"1952dab453dfa350ecb03371bf7ac0f001a541f8","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testDefineContentPublisherRoles() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Roles\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Roles\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tThread.sleep(5000);\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//tr[9]/td[4]/ul/li/strong/span\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"//tr[9]/td[4]/ul/li/strong/span\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//div[5]/ul/li[3]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"//div[5]/ul/li[3]/a\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isTextPresent(\"Content Publisher\"));\n\t\tassertTrue(selenium.isTextPresent(\"Add Permissions\"));\n\t}","id":16883,"modified_method":"public void testDefineContentPublisherRoles() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Roles\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Roles\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"//tr[9]/td[4]/ul/li/strong/a\",\n\t\t\tRuntimeVariables.replace(\"Actions\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[3]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[3]/a\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Content Publisher\"),\n\t\t\tselenium.getText(\"//h1[@class='header-title']/span\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Add Permissions (Changing the value of this field will reload the page.)\"),\n\t\t\tselenium.getText(\"//label[@for='_128_add-permissions']\"));\n\t}","commit_id":"1952dab453dfa350ecb03371bf7ac0f001a541f8","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testGuest_AssertContentPresent() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Blogs Staging Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Blogs Staging Test Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isElementPresent(\"link=Staging Blogs Test Entry\"));\n\t\tassertTrue(selenium.isTextPresent(\"This is a staged blogs entry.\"));\n\t}","id":16884,"modified_method":"public void testGuest_AssertContentPresent() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Blogs Staging Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Blogs Staging Test Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isElementPresent(\"link=Staging Blogs Test Entry\"));\n\t\tassertTrue(selenium.isTextPresent(\"This is a staged blogs entry.\"));\n\t}","commit_id":"1952dab453dfa350ecb03371bf7ac0f001a541f8","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testGuest_AssertNoContentPreApproval()\n\t\tthrows Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Blogs Staging Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Blogs Staging Test Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertFalse(selenium.isElementPresent(\"link=Staging Blogs Test Entry\"));\n\t\tassertTrue(selenium.isTextPresent(\"Showing 0 results.\"));\n\t}","id":16885,"modified_method":"public void testGuest_AssertNoContentPreApproval()\n\t\tthrows Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Blogs Staging Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Blogs Staging Test Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertFalse(selenium.isElementPresent(\"link=Staging Blogs Test Entry\"));\n\t\tassertTrue(selenium.isTextPresent(\"Showing 0 results.\"));\n\t}","commit_id":"1952dab453dfa350ecb03371bf7ac0f001a541f8","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testGuest_AssertNoContentPrePublish() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Blogs Staging Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Blogs Staging Test Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertFalse(selenium.isElementPresent(\"link=Staging Blogs Test Entry\"));\n\t\tassertTrue(selenium.isTextPresent(\"Showing 0 results.\"));\n\t}","id":16886,"modified_method":"public void testGuest_AssertNoContentPrePublish() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Blogs Staging Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Blogs Staging Test Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertFalse(selenium.isElementPresent(\"link=Staging Blogs Test Entry\"));\n\t\tassertTrue(selenium.isTextPresent(\"Showing 0 results.\"));\n\t}","commit_id":"1952dab453dfa350ecb03371bf7ac0f001a541f8","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testGuest_AssertNoPortletPreApproval()\n\t\tthrows Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Blogs Staging Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Blogs Staging Test Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertFalse(selenium.isElementPresent(\"link=Subscribe to this blog.\"));\n\t\tassertFalse(selenium.isTextPresent(\"Showing 0 results.\"));\n\t}","id":16887,"modified_method":"public void testGuest_AssertNoPortletPreApproval()\n\t\tthrows Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Blogs Staging Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Blogs Staging Test Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertFalse(selenium.isElementPresent(\"link=RSS (Opens New Window)\"));\n\t\tassertFalse(selenium.isTextPresent(\"Showing 0 results.\"));\n\t}","commit_id":"1952dab453dfa350ecb03371bf7ac0f001a541f8","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testGuest_AssertNoPortletPrePublish() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Blogs Staging Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Blogs Staging Test Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertFalse(selenium.isElementPresent(\"link=Subscribe to this blog.\"));\n\t\tassertFalse(selenium.isTextPresent(\"Showing 0 results.\"));\n\t}","id":16888,"modified_method":"public void testGuest_AssertNoPortletPrePublish() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Blogs Staging Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Blogs Staging Test Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertFalse(selenium.isElementPresent(\"link=RSS (Opens New Window)\"));\n\t\tassertFalse(selenium.isTextPresent(\"Showing 0 results.\"));\n\t}","commit_id":"1952dab453dfa350ecb03371bf7ac0f001a541f8","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testGuest_AssertPortletPresent() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Blogs Staging Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Blogs Staging Test Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isElementPresent(\"link=Subscribe to this blog.\"));\n\t\tassertTrue(selenium.isTextPresent(\"Showing 0 results.\"));\n\t}","id":16889,"modified_method":"public void testGuest_AssertPortletPresent() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Blogs Staging Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Blogs Staging Test Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isElementPresent(\"link=RSS (Opens New Window)\"));\n\t\tassertTrue(selenium.isTextPresent(\"Showing 0 results.\"));\n\t}","commit_id":"1952dab453dfa350ecb03371bf7ac0f001a541f8","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testLoginUsers() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Back to Guest\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Back to Guest\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Sign Out\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"_58_login\", RuntimeVariables.replace(\"CC@liferay.com\"));\n\t\tselenium.type(\"_58_password\", RuntimeVariables.replace(\"test\"));\n\t\tselenium.clickAt(\"_58_rememberMeCheckbox\", RuntimeVariables.replace(\"\"));\n\t\tselenium.clickAt(\"//input[@value='Sign In']\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"//input[@value='I Agree']\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"//input[@id='reminderQueryAnswer']\",\n\t\t\tRuntimeVariables.replace(\"test\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Sign Out\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"_58_login\", RuntimeVariables.replace(\"CA@liferay.com\"));\n\t\tselenium.type(\"_58_password\", RuntimeVariables.replace(\"test\"));\n\t\tselenium.clickAt(\"_58_rememberMeCheckbox\", RuntimeVariables.replace(\"\"));\n\t\tselenium.clickAt(\"//input[@value='Sign In']\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"//input[@value='I Agree']\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"//input[@id='reminderQueryAnswer']\",\n\t\t\tRuntimeVariables.replace(\"test\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Sign Out\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"_58_login\", RuntimeVariables.replace(\"CP@liferay.com\"));\n\t\tselenium.type(\"_58_password\", RuntimeVariables.replace(\"test\"));\n\t\tselenium.clickAt(\"_58_rememberMeCheckbox\", RuntimeVariables.replace(\"\"));\n\t\tselenium.clickAt(\"//input[@value='Sign In']\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"//input[@value='I Agree']\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"//input[@id='reminderQueryAnswer']\",\n\t\t\tRuntimeVariables.replace(\"test\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Sign Out\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"_58_login\", RuntimeVariables.replace(\"test@liferay.com\"));\n\t\tselenium.type(\"_58_password\", RuntimeVariables.replace(\"test\"));\n\t\tselenium.clickAt(\"_58_rememberMeCheckbox\", RuntimeVariables.replace(\"\"));\n\t\tselenium.clickAt(\"//input[@value='Sign In']\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t}","id":16890,"modified_method":"public void testLoginUsers() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Sign Out\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Sign Out\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"_58_login\", RuntimeVariables.replace(\"CC@liferay.com\"));\n\t\tselenium.type(\"_58_password\", RuntimeVariables.replace(\"test\"));\n\t\tselenium.clickAt(\"_58_rememberMeCheckbox\", RuntimeVariables.replace(\"\"));\n\t\tselenium.clickAt(\"//input[@value='Sign In']\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"//input[@value='I Agree']\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"//input[@id='reminderQueryAnswer']\",\n\t\t\tRuntimeVariables.replace(\"test\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Sign Out\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"_58_login\", RuntimeVariables.replace(\"CA@liferay.com\"));\n\t\tselenium.type(\"_58_password\", RuntimeVariables.replace(\"test\"));\n\t\tselenium.clickAt(\"_58_rememberMeCheckbox\", RuntimeVariables.replace(\"\"));\n\t\tselenium.clickAt(\"//input[@value='Sign In']\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"//input[@value='I Agree']\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"//input[@id='reminderQueryAnswer']\",\n\t\t\tRuntimeVariables.replace(\"test\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Sign Out\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"_58_login\", RuntimeVariables.replace(\"CP@liferay.com\"));\n\t\tselenium.type(\"_58_password\", RuntimeVariables.replace(\"test\"));\n\t\tselenium.clickAt(\"_58_rememberMeCheckbox\", RuntimeVariables.replace(\"\"));\n\t\tselenium.clickAt(\"//input[@value='Sign In']\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"//input[@value='I Agree']\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"//input[@id='reminderQueryAnswer']\",\n\t\t\tRuntimeVariables.replace(\"test\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Sign Out\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"_58_login\", RuntimeVariables.replace(\"test@liferay.com\"));\n\t\tselenium.type(\"_58_password\", RuntimeVariables.replace(\"test\"));\n\t\tselenium.clickAt(\"_58_rememberMeCheckbox\", RuntimeVariables.replace(\"\"));\n\t\tselenium.clickAt(\"//input[@value='Sign In']\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t}","commit_id":"1952dab453dfa350ecb03371bf7ac0f001a541f8","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testSA_Login() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Welcome\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Welcome\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"_58_login\", RuntimeVariables.replace(\"test@liferay.com\"));\n\t\tselenium.type(\"_58_password\", RuntimeVariables.replace(\"test\"));\n\t\tselenium.clickAt(\"//input[@value='Sign In']\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t}","id":16891,"modified_method":"public void testSA_Login() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Welcome\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Welcome\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"_58_login\", RuntimeVariables.replace(\"test@liferay.com\"));\n\t\tselenium.type(\"_58_password\", RuntimeVariables.replace(\"test\"));\n\t\tselenium.clickAt(\"_58_rememberMeCheckbox\", RuntimeVariables.replace(\"\"));\n\t\tselenium.clickAt(\"//input[@value='Sign In']\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t}","commit_id":"1952dab453dfa350ecb03371bf7ac0f001a541f8","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testSA_Logout() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Sign Out\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Sign Out\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"_58_login\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\t}","id":16892,"modified_method":"public void testSA_Logout() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Sign Out\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Sign Out\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"_58_login\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\t}","commit_id":"1952dab453dfa350ecb03371bf7ac0f001a541f8","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testSA_Setup() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Guest\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Guest\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Welcome\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Manage Pages\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[@id='_88_layoutsTreeOutput']/ul/li/a/span\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"//div[@id='_88_layoutsTreeOutput']/ul/li/a/span\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"_88_name_en_US\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.type(\"_88_name_en_US\",\n\t\t\tRuntimeVariables.replace(\"Blogs Staging Test Page\"));\n\t\tselenium.clickAt(\"//input[@value='Add Page']\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Blogs Staging Test Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Control Panel\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Communities\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Communities\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//strong/span\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"//strong/span\", RuntimeVariables.replace(\"\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Manage Pages\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Manage Pages\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//li[@id='_134_tabs1settingsTabsId']/span/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"//li[@id='_134_tabs1settingsTabsId']/span/a\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"_134_stagingEnabled\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"_134_stagingEnabled\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"Your request processed successfully.\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"_134_workflowEnabled\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"_134_workflowEnabled\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"Your request processed successfully.\"));\n\t\tselenium.select(\"_134_workflowRoleName_1\",\n\t\t\tRuntimeVariables.replace(\"label=Community Member\"));\n\t\tselenium.select(\"_134_workflowRoleName_2\",\n\t\t\tRuntimeVariables.replace(\"label=Community Member\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"Your request processed successfully.\"));\n\t\tselenium.clickAt(\"link=Back to Guest\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t}","id":16893,"modified_method":"public void testSA_Setup() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\t\t\t\tselenium.clickAt(\"main-content\", RuntimeVariables.replace(\"\"));\n\t\t\t\tselenium.clickAt(\"dockbar\", RuntimeVariables.replace(\"\"));\n\t\t\t\tselenium.clickAt(\"navigation\", RuntimeVariables.replace(\"\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\"addPage\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"addPage\", RuntimeVariables.replace(\"\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\"//input\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.type(\"//input\",\n\t\t\t\t\tRuntimeVariables.replace(\"Blogs Staging Test Page\"));\n\t\t\t\tselenium.clickAt(\"save\", RuntimeVariables.replace(\"\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\"link=Blogs Staging Test Page\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"link=Blogs Staging Test Page\",\n\t\t\t\t\tRuntimeVariables.replace(\"\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\t\t\tRuntimeVariables.replace(\"\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.clickAt(\"link=Communities\",\n\t\t\t\t\tRuntimeVariables.replace(\"\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.clickAt(\"//strong/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.clickAt(\"//li[@id='_134_tabs1settingsTabsId']/span/span/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Settings\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.clickAt(\"link=Staging\", RuntimeVariables.replace(\"\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.select(\"_134_stagingType\",\n\t\t\t\t\tRuntimeVariables.replace(\"label=Local Live\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\"_134_staged-portlet_33Checkbox\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tboolean blogsChecked = selenium.isChecked(\n\t\t\t\t\t\t\"_134_staged-portlet_33Checkbox\");\n\n\t\t\t\tif (blogsChecked) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"_134_staged-portlet_33Checkbox\",\n\t\t\t\t\tRuntimeVariables.replace(\"Blogs\"));\n\n\t\t\tcase 2:\n\t\t\t\tselenium.select(\"_134_workflowStages\",\n\t\t\t\t\tRuntimeVariables.replace(\"label=3\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\"_134_workflowRoleName_1\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.select(\"_134_workflowRoleName_1\",\n\t\t\t\t\tRuntimeVariables.replace(\"label=Content Administrator\"));\n\t\t\t\tselenium.select(\"_134_workflowRoleName_Last\",\n\t\t\t\t\tRuntimeVariables.replace(\"label=Content Publisher\"));\n\t\t\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\t\t\tRuntimeVariables.replace(\"\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to activate local staging for Liferay[\\\\s\\\\S]$\"));\n\t\t\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\t\t\"Your request processed successfully.\"));\n\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","commit_id":"1952dab453dfa350ecb03371bf7ac0f001a541f8","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testSA_TearDown() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\t\t\"//div[@id='_145_myPlacesContainer']/ul/li[2]/a/span[1]\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[@id='_145_myPlacesContainer']/ul/li[2]/a/span[1]\",\n\t\t\t\t\tRuntimeVariables.replace(\"\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\t\t\tRuntimeVariables.replace(\"\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\"link=Communities\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"link=Communities\",\n\t\t\t\t\tRuntimeVariables.replace(\"\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\"//strong/span\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//strong/span\", RuntimeVariables.replace(\"\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\"link=Manage Pages\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"link=Manage Pages\",\n\t\t\t\t\tRuntimeVariables.replace(\"\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\t\t\"//li[@id='_134_tabs1settingsTabsId']/span/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//li[@id='_134_tabs1settingsTabsId']/span/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\"link=Staging\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"link=Staging\", RuntimeVariables.replace(\"\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\"_134_stagingEnabled\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"_134_stagingEnabled\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete the staging public and private pages[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.clickAt(\"link=Back to My Community\",\n\t\t\t\t\tRuntimeVariables.replace(\"\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.clickAt(\"link=Guest\", RuntimeVariables.replace(\"\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.clickAt(\"link=Blogs Staging Test Page\",\n\t\t\t\t\tRuntimeVariables.replace(\"\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tThread.sleep(5000);\n\n\t\t\t\tboolean BlogsPresent = selenium.isElementPresent(\"link=Delete\");\n\n\t\t\t\tif (!BlogsPresent) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"link=Delete\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\n\t\t\tcase 2:\n\t\t\t\tselenium.click(\"//img[@alt='Remove']\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to remove this component[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.clickAt(\"link=Welcome\", RuntimeVariables.replace(\"\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.clickAt(\"link=Manage Pages\",\n\t\t\t\t\tRuntimeVariables.replace(\"\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\t\t\"//div[@id='_88_layoutsTreeOutput']/ul/li/ul/li[2]/a/span\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[@id='_88_layoutsTreeOutput']/ul/li/ul/li[2]/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.clickAt(\"//li[@id='_88_tabs3pageTabsId']/span/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//input[@value='Delete']\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete the selected page[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.clickAt(\"link=Return to Full Page\",\n\t\t\t\t\tRuntimeVariables.replace(\"\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","id":16894,"modified_method":"public void testSA_TearDown() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\t\t\tRuntimeVariables.replace(\"\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.clickAt(\"link=Communities\",\n\t\t\t\t\tRuntimeVariables.replace(\"\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.clickAt(\"//strong/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.clickAt(\"//li[@id='_134_tabs1settingsTabsId']/span/span/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Settings\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.clickAt(\"link=Staging\", RuntimeVariables.replace(\"\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.select(\"_134_stagingType\",\n\t\t\t\t\tRuntimeVariables.replace(\"label=None\"));\n\t\t\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\t\t\tRuntimeVariables.replace(\"\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to deactivate staging for Liferay[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\"link=Blogs Staging Test Page\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"link=Blogs Staging Test Page\",\n\t\t\t\t\tRuntimeVariables.replace(\"\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tboolean blogsEntry1Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"link=Delete\");\n\n\t\t\t\tif (!blogsEntry1Present) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"link=Delete\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\n\t\t\tcase 2:\n\n\t\t\t\tboolean blogsEntry2Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"link=Delete\");\n\n\t\t\t\tif (!blogsEntry2Present) {\n\t\t\t\t\tlabel = 3;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"link=Delete\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\n\t\t\tcase 3:\n\n\t\t\t\tboolean blogsEntry3Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"link=Delete\");\n\n\t\t\t\tif (!blogsEntry3Present) {\n\t\t\t\t\tlabel = 4;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"link=Delete\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\n\t\t\tcase 4:\n\n\t\t\t\tboolean blogsEntry4Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"link=Delete\");\n\n\t\t\t\tif (!blogsEntry4Present) {\n\t\t\t\t\tlabel = 5;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"link=Delete\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\n\t\t\tcase 5:\n\n\t\t\t\tboolean blogsEntry5Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"link=Delete\");\n\n\t\t\t\tif (!blogsEntry5Present) {\n\t\t\t\t\tlabel = 6;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"link=Delete\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\n\t\t\tcase 6:\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\t\t\t\tselenium.clickAt(\"main-content\", RuntimeVariables.replace(\"\"));\n\t\t\t\tselenium.clickAt(\"navigation\", RuntimeVariables.replace(\"\"));\n\t\t\t\tselenium.clickAt(\"dockbar\", RuntimeVariables.replace(\"\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\t\t\"//div/div[3]/div/ul/li[1]/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div/div[3]/div/ul/li[1]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Manage Pages\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.clickAt(\"main-content\", RuntimeVariables.replace(\"\"));\n\t\t\t\tselenium.clickAt(\"navigation\", RuntimeVariables.replace(\"\"));\n\t\t\t\tselenium.clickAt(\"dockbar\", RuntimeVariables.replace(\"\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (RuntimeVariables.replace(\"Liferay\")\n\t\t\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\t\t\"//div/div[3]/a\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tboolean welcomePresent = selenium.isElementPresent(\n\t\t\t\t\t\t\"//li/ul/li[1]/div/div[3]/a\");\n\n\t\t\t\tif (welcomePresent) {\n\t\t\t\t\tlabel = 7;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//li/div/div[1]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Drop Down Arrow\"));\n\n\t\t\tcase 7:\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (RuntimeVariables.replace(\"Welcome\")\n\t\t\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\t\t\"//li/ul/li[1]/div/div[3]/a\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tboolean page1Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//li[2]/div/div[3]/a\");\n\n\t\t\t\tif (!page1Present) {\n\t\t\t\t\tlabel = 8;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"//li[2]/div/div[3]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.clickAt(\"//td[2]/ul/li[1]/span/span/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Page\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//input[@value='Delete']\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete the selected page[\\\\s\\\\S]$\"));\n\n\t\t\tcase 8:\n\n\t\t\t\tboolean page2Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//li[2]/div/div[3]/a\");\n\n\t\t\t\tif (!page2Present) {\n\t\t\t\t\tlabel = 9;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"//li[2]/div/div[3]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.clickAt(\"//td[2]/ul/li[1]/span/span/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Page\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//input[@value='Delete']\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete the selected page[\\\\s\\\\S]$\"));\n\n\t\t\tcase 9:\n\n\t\t\t\tboolean page3Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//li[2]/div/div[3]/a\");\n\n\t\t\t\tif (!page3Present) {\n\t\t\t\t\tlabel = 10;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"//li[2]/div/div[3]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.clickAt(\"//td[2]/ul/li[1]/span/span/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Page\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//input[@value='Delete']\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete the selected page[\\\\s\\\\S]$\"));\n\n\t\t\tcase 10:\n\n\t\t\t\tboolean page4Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//li[2]/div/div[3]/a\");\n\n\t\t\t\tif (!page4Present) {\n\t\t\t\t\tlabel = 11;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"//li[2]/div/div[3]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.clickAt(\"//td[2]/ul/li[1]/span/span/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Page\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//input[@value='Delete']\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete the selected page[\\\\s\\\\S]$\"));\n\n\t\t\tcase 11:\n\n\t\t\t\tboolean page5Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//li[2]/div/div[3]/a\");\n\n\t\t\t\tif (!page5Present) {\n\t\t\t\t\tlabel = 12;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"//li[2]/div/div[3]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.clickAt(\"//td[2]/ul/li[1]/span/span/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Page\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//input[@value='Delete']\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete the selected page[\\\\s\\\\S]$\"));\n\n\t\t\tcase 12:\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","commit_id":"1952dab453dfa350ecb03371bf7ac0f001a541f8","url":"https://github.com/liferay/liferay-portal"},{"original_method":"@VisibleForTesting\n  void writeJson(Writer writer) {\n    JsonWriter json = null;\n    try {\n      json = new JsonWriter(writer);\n      json.setSerializeNulls(false);\n      json.beginObject();\n      json.name(\"version\").value(server.getVersion());\n\n      Set<RuleKey> ruleKeys = newHashSet();\n      Set<String> userLogins = newHashSet();\n      componentSelector.init();\n      writeJsonIssues(json, ruleKeys, userLogins);\n      writeJsonComponents(json);\n      writeJsonRules(json, ruleKeys);\n      List<User> users = userFinder.findByLogins(new ArrayList<String>(userLogins));\n      writeUsers(json, users);\n      json.endObject().flush();\n\n    } catch (IOException e) {\n      throw new SonarException(\"Unable to write JSON report\", e);\n    } finally {\n      Closeables.closeQuietly(json);\n    }\n  }","id":16895,"modified_method":"@VisibleForTesting\n  void writeJson(Writer writer) {\n    try {\n      JsonWriter json = JsonWriter.of(writer);\n      json.beginObject();\n      json.prop(\"version\", server.getVersion());\n\n      Set<RuleKey> ruleKeys = newHashSet();\n      Set<String> userLogins = newHashSet();\n      componentSelector.init();\n      writeJsonIssues(json, ruleKeys, userLogins);\n      writeJsonComponents(json);\n      writeJsonRules(json, ruleKeys);\n      List<User> users = userFinder.findByLogins(new ArrayList<String>(userLogins));\n      writeUsers(json, users);\n      json.endObject().close();\n\n    } catch (IOException e) {\n      throw new SonarException(\"Unable to write JSON report\", e);\n    }\n  }","commit_id":"029f7fc54135ab73811268135068d54cad9c3bba","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"private void writeUsers(JsonWriter json, List<User> users) throws IOException {\n    json.name(\"users\").beginArray();\n    for (User user : users) {\n      json\n        .beginObject()\n        .name(\"login\").value(user.login())\n        .name(\"name\").value(user.name())\n        .endObject();\n    }\n    json.endArray();\n  }","id":16896,"modified_method":"private void writeUsers(JsonWriter json, List<User> users) throws IOException {\n    json.name(\"users\").beginArray();\n    for (User user : users) {\n      json\n        .beginObject()\n        .prop(\"login\", user.login())\n        .prop(\"name\", user.name())\n        .endObject();\n    }\n    json.endArray();\n  }","commit_id":"029f7fc54135ab73811268135068d54cad9c3bba","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"private void writeJsonIssues(JsonWriter json, Set<RuleKey> ruleKeys, Set<String> logins) throws IOException {\n    json.name(\"issues\").beginArray();\n    for (DefaultIssue issue : getIssues()) {\n      if (issue.resolution() == null && componentSelector.register(issue)) {\n        json\n          .beginObject()\n          .name(\"key\").value(issue.key())\n          .name(\"component\").value(issue.componentKey())\n          .name(\"line\").value(issue.line())\n          .name(\"message\").value(issue.message())\n          .name(\"severity\").value(issue.severity())\n          .name(\"rule\").value(issue.ruleKey().toString())\n          .name(\"status\").value(issue.status())\n          .name(\"resolution\").value(issue.resolution())\n          .name(\"isNew\").value(issue.isNew())\n          .name(\"reporter\").value(issue.reporter())\n          .name(\"assignee\").value(issue.assignee())\n          .name(\"effortToFix\").value(issue.effortToFix());\n        if (issue.reporter() != null) {\n          logins.add(issue.reporter());\n        }\n        if (issue.assignee() != null) {\n          logins.add(issue.assignee());\n        }\n        if (issue.creationDate() != null) {\n          json.name(\"creationDate\").value(DateUtils.formatDateTime(issue.creationDate()));\n        }\n        if (issue.updateDate() != null) {\n          json.name(\"updateDate\").value(DateUtils.formatDateTime(issue.updateDate()));\n        }\n        if (issue.closeDate() != null) {\n          json.name(\"closeDate\").value(DateUtils.formatDateTime(issue.closeDate()));\n        }\n        json.endObject();\n        ruleKeys.add(issue.ruleKey());\n      }\n    }\n    json.endArray();\n  }","id":16897,"modified_method":"private void writeJsonIssues(JsonWriter json, Set<RuleKey> ruleKeys, Set<String> logins) throws IOException {\n    json.name(\"issues\").beginArray();\n    for (DefaultIssue issue : getIssues()) {\n      if (issue.resolution() == null && componentSelector.register(issue)) {\n        json\n          .beginObject()\n          .prop(\"key\", issue.key())\n          .prop(\"component\", issue.componentKey())\n          .prop(\"line\", issue.line())\n          .prop(\"message\", issue.message())\n          .prop(\"severity\", issue.severity())\n          .prop(\"rule\", issue.ruleKey().toString())\n          .prop(\"status\", issue.status())\n          .prop(\"resolution\", issue.resolution())\n          .prop(\"isNew\", issue.isNew())\n          .prop(\"reporter\", issue.reporter())\n          .prop(\"assignee\", issue.assignee())\n          .prop(\"effortToFix\", issue.effortToFix())\n          .propDateTime(\"creationDate\", issue.creationDate())\n          .propDateTime(\"updateDate\", issue.updateDate())\n          .propDateTime(\"closeDate\", issue.closeDate());\n        if (issue.reporter() != null) {\n          logins.add(issue.reporter());\n        }\n        if (issue.assignee() != null) {\n          logins.add(issue.assignee());\n        }\n        json.endObject();\n        ruleKeys.add(issue.ruleKey());\n      }\n    }\n    json.endArray();\n  }","commit_id":"029f7fc54135ab73811268135068d54cad9c3bba","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"private void writeJsonRules(JsonWriter json, Set<RuleKey> ruleKeys) throws IOException {\n    json.name(\"rules\").beginArray();\n    for (RuleKey ruleKey : ruleKeys) {\n      json\n        .beginObject()\n        .name(\"key\").value(ruleKey.toString())\n        .name(\"rule\").value(ruleKey.rule())\n        .name(\"repository\").value(ruleKey.repository())\n        .name(\"name\").value(getRuleName(ruleKey))\n        .endObject();\n    }\n    json.endArray();\n  }","id":16898,"modified_method":"private void writeJsonRules(JsonWriter json, Set<RuleKey> ruleKeys) throws IOException {\n    json.name(\"rules\").beginArray();\n    for (RuleKey ruleKey : ruleKeys) {\n      json\n        .beginObject()\n        .prop(\"key\", ruleKey.toString())\n        .prop(\"rule\", ruleKey.rule())\n        .prop(\"repository\", ruleKey.repository())\n        .prop(\"name\", getRuleName(ruleKey))\n        .endObject();\n    }\n    json.endArray();\n  }","commit_id":"029f7fc54135ab73811268135068d54cad9c3bba","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"private void writeJsonComponents(JsonWriter json) throws IOException {\n    json.name(\"components\").beginArray();\n    for (String componentKey : componentSelector.componentKeys()) {\n      json\n        .beginObject()\n        .name(\"key\").value(componentKey)\n        .endObject();\n    }\n    json.endArray();\n  }","id":16899,"modified_method":"private void writeJsonComponents(JsonWriter json) throws IOException {\n    json.name(\"components\").beginArray();\n    for (String componentKey : componentSelector.componentKeys()) {\n      json\n        .beginObject()\n        .prop(\"key\", componentKey)\n        .endObject();\n    }\n    json.endArray();\n  }","commit_id":"029f7fc54135ab73811268135068d54cad9c3bba","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"protected void doInvokeDeploy(HotDeployEvent hotDeployEvent)\n\t\tthrows Exception {\n\n\t\tServletContext servletContext = hotDeployEvent.getServletContext();\n\n\t\tString servletContextName = servletContext.getServletContextName();\n\n\t\tif (_log.isDebugEnabled()) {\n\t\t\t_log.debug(\"Invoking deploy for \" + servletContextName);\n\t\t}\n\n\t\tPluginPackage pluginPackage =\n\t\t\tPluginPackageUtil.readPluginPackageServletContext(servletContext);\n\n\t\tif (pluginPackage == null) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (servletContext.getResource(\n\t\t\t\t\"/WEB-INF/liferay-theme-loader.xml\") != null) {\n\n\t\t\tPluginPackageUtil.registerInstalledPluginPackage(pluginPackage);\n\n\t\t\treturn;\n\t\t}\n\n\t\tpluginPackage.setContext(servletContextName);\n\n\t\thotDeployEvent.setPluginPackage(pluginPackage);\n\n\t\tPluginPackageUtil.registerInstalledPluginPackage(pluginPackage);\n\n\t\tClassLoader classLoader = hotDeployEvent.getContextClassLoader();\n\n\t\tinitLogger(classLoader);\n\t\tinitPortletProps(classLoader);\n\t\tinitServiceComponent(servletContext, classLoader);\n\n\t\tregisterClpMessageListeners(servletContext, classLoader);\n\n\t\treconfigureCaches(classLoader);\n\n\t\tif (_log.isInfoEnabled()) {\n\t\t\t_log.info(\n\t\t\t\t\"Plugin package \" + pluginPackage.getModuleId() +\n\t\t\t\t\t\" registered successfully. It's now ready to be used.\");\n\t\t}\n\t}","id":16900,"modified_method":"protected void doInvokeDeploy(HotDeployEvent hotDeployEvent)\n\t\tthrows Exception {\n\n\t\tServletContext servletContext = hotDeployEvent.getServletContext();\n\n\t\tString servletContextName = servletContext.getServletContextName();\n\n\t\tif (_log.isDebugEnabled()) {\n\t\t\t_log.debug(\"Invoking deploy for \" + servletContextName);\n\t\t}\n\n\t\tPluginPackage pluginPackage =\n\t\t\tPluginPackageUtil.readPluginPackageServletContext(servletContext);\n\n\t\tif (pluginPackage == null) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (servletContext.getResource(\n\t\t\t\t\"/WEB-INF/liferay-theme-loader.xml\") != null) {\n\n\t\t\tPluginPackageUtil.registerInstalledPluginPackage(pluginPackage);\n\n\t\t\treturn;\n\t\t}\n\n\t\tpluginPackage.setContext(servletContextName);\n\n\t\thotDeployEvent.setPluginPackage(pluginPackage);\n\n\t\tPluginPackageUtil.registerInstalledPluginPackage(pluginPackage);\n\n\t\tClassLoader classLoader = hotDeployEvent.getContextClassLoader();\n\n\t\tinitLogger(classLoader);\n\t\tinitPortletProps(classLoader);\n\t\tinitServiceComponent(servletContext, classLoader);\n\n\t\tregisterClpMessageListeners(servletContext, classLoader);\n\n\t\treconfigureCaches(servletContext, classLoader);\n\n\t\tif (_log.isInfoEnabled()) {\n\t\t\t_log.info(\n\t\t\t\t\"Plugin package \" + pluginPackage.getModuleId() +\n\t\t\t\t\t\" registered successfully. It's now ready to be used.\");\n\t\t}\n\t}","commit_id":"3aff0a7c7cff549d66fa6475b467ad2a0f4c4664","url":"https://github.com/liferay/liferay-portal"},{"original_method":"protected void reconfigureCaches(ClassLoader classLoader) throws Exception {\n\t\tConfiguration portletPropertiesConfiguration = null;\n\n\t\ttry {\n\t\t\tportletPropertiesConfiguration =\n\t\t\t\tConfigurationFactoryUtil.getConfiguration(\n\t\t\t\t\tclassLoader, \"portlet\");\n\t\t}\n\t\tcatch (Exception e) {\n\t\t\tif (_log.isDebugEnabled()) {\n\t\t\t\t_log.debug(\"Unable to read portlet.properties\");\n\t\t\t}\n\n\t\t\treturn;\n\t\t}\n\n\t\tPortalCacheConfiguratorUtil.reconfigureCaches(\n\t\t\tPortalCacheManagerNames.SINGLE_VM, classLoader,\n\t\t\tgetPortalCacheConfigurationURL(\n\t\t\t\tportletPropertiesConfiguration, classLoader,\n\t\t\t\tPropsKeys.EHCACHE_SINGLE_VM_CONFIG_LOCATION));\n\n\t\tPortalCacheConfiguratorUtil.reconfigureCaches(\n\t\t\tPortalCacheManagerNames.MULTI_VM, classLoader,\n\t\t\tgetPortalCacheConfigurationURL(\n\t\t\t\tportletPropertiesConfiguration, classLoader,\n\t\t\t\tPropsKeys.EHCACHE_MULTI_VM_CONFIG_LOCATION));\n\t}","id":16901,"modified_method":"protected void reconfigureCaches(\n\t\t\tServletContext servletContext, ClassLoader classLoader)\n\t\tthrows Exception {\n\n\t\tConfiguration portletPropertiesConfiguration = null;\n\n\t\ttry {\n\t\t\tportletPropertiesConfiguration =\n\t\t\t\tConfigurationFactoryUtil.getConfiguration(\n\t\t\t\t\tclassLoader, \"portlet\");\n\t\t}\n\t\tcatch (Exception e) {\n\t\t\tif (_log.isDebugEnabled()) {\n\t\t\t\t_log.debug(\"Unable to read portlet.properties\");\n\t\t\t}\n\n\t\t\treturn;\n\t\t}\n\n\t\tRegistry registry = RegistryUtil.getRegistry();\n\n\t\tServiceRegistrar<PortalCacheConfiguratorSettings> serviceRegistrar =\n\t\t\tregistry.getServiceRegistrar(PortalCacheConfiguratorSettings.class);\n\n\t\tMap<String, Object> properties = new HashMap<>();\n\n\t\tproperties.put(\n\t\t\t\"portal.cache.manager.name\", PortalCacheManagerNames.SINGLE_VM);\n\n\t\tserviceRegistrar.registerService(\n\t\t\tPortalCacheConfiguratorSettings.class,\n\t\t\tnew PortalCacheConfiguratorSettings(\n\t\t\t\tportletPropertiesConfiguration.get(\n\t\t\t\t\tPropsKeys.EHCACHE_SINGLE_VM_CONFIG_LOCATION),\n\t\t\t\tclassLoader),\n\t\t\tproperties);\n\n\t\tproperties = new HashMap<>();\n\n\t\tproperties.put(\n\t\t\t\"portal.cache.manager.name\", PortalCacheManagerNames.MULTI_VM);\n\n\t\tserviceRegistrar.registerService(\n\t\t\tPortalCacheConfiguratorSettings.class,\n\t\t\tnew PortalCacheConfiguratorSettings(\n\t\t\t\tportletPropertiesConfiguration.get(\n\t\t\t\t\tPropsKeys.EHCACHE_MULTI_VM_CONFIG_LOCATION),\n\t\t\t\tclassLoader),\n\t\t\tproperties);\n\n\t\tservletContext.setAttribute(\n\t\t\t_PORTAL_CACHE_CONFIGURATOR_SETTINGS_SERVICE_REGISTAR,\n\t\t\tserviceRegistrar);\n\t}","commit_id":"3aff0a7c7cff549d66fa6475b467ad2a0f4c4664","url":"https://github.com/liferay/liferay-portal"},{"original_method":"protected void doInvokeUndeploy(HotDeployEvent hotDeployEvent)\n\t\tthrows Exception {\n\n\t\tServletContext servletContext = hotDeployEvent.getServletContext();\n\n\t\tString servletContextName = servletContext.getServletContextName();\n\n\t\tif (_log.isDebugEnabled()) {\n\t\t\t_log.debug(\"Invoking undeploy for \" + servletContextName);\n\t\t}\n\n\t\tPluginPackage pluginPackage =\n\t\t\tPluginPackageUtil.readPluginPackageServletContext(servletContext);\n\n\t\tif (pluginPackage == null) {\n\t\t\treturn;\n\t\t}\n\n\t\thotDeployEvent.setPluginPackage(pluginPackage);\n\n\t\tPluginPackageUtil.unregisterInstalledPluginPackage(pluginPackage);\n\n\t\tServletContextPool.remove(servletContextName);\n\n\t\tdestroyServiceComponent(\n\t\t\tnew ServletServiceContextComponentConfiguration(servletContext),\n\t\t\thotDeployEvent.getContextClassLoader());\n\n\t\tunregisterClpMessageListeners(servletContext);\n\n\t\tif (_log.isInfoEnabled()) {\n\t\t\t_log.info(\n\t\t\t\t\"Plugin package \" + pluginPackage.getModuleId() +\n\t\t\t\t\t\" unregistered successfully\");\n\t\t}\n\t}","id":16902,"modified_method":"protected void doInvokeUndeploy(HotDeployEvent hotDeployEvent)\n\t\tthrows Exception {\n\n\t\tServletContext servletContext = hotDeployEvent.getServletContext();\n\n\t\tString servletContextName = servletContext.getServletContextName();\n\n\t\tif (_log.isDebugEnabled()) {\n\t\t\t_log.debug(\"Invoking undeploy for \" + servletContextName);\n\t\t}\n\n\t\tPluginPackage pluginPackage =\n\t\t\tPluginPackageUtil.readPluginPackageServletContext(servletContext);\n\n\t\tif (pluginPackage == null) {\n\t\t\treturn;\n\t\t}\n\n\t\thotDeployEvent.setPluginPackage(pluginPackage);\n\n\t\tPluginPackageUtil.unregisterInstalledPluginPackage(pluginPackage);\n\n\t\tServletContextPool.remove(servletContextName);\n\n\t\tdestroyServiceComponent(\n\t\t\tnew ServletServiceContextComponentConfiguration(servletContext),\n\t\t\thotDeployEvent.getContextClassLoader());\n\n\t\tunregisterClpMessageListeners(servletContext);\n\n\t\tServiceRegistrar<PortalCacheConfiguratorSettings> serviceRegistrar =\n\t\t\t(ServiceRegistrar<PortalCacheConfiguratorSettings>)\n\t\t\t\tservletContext.getAttribute(\n\t\t\t\t\t_PORTAL_CACHE_CONFIGURATOR_SETTINGS_SERVICE_REGISTAR);\n\n\t\tif (serviceRegistrar != null) {\n\t\t\tserviceRegistrar.destroy();\n\t\t}\n\n\t\tif (_log.isInfoEnabled()) {\n\t\t\t_log.info(\n\t\t\t\t\"Plugin package \" + pluginPackage.getModuleId() +\n\t\t\t\t\t\" unregistered successfully\");\n\t\t}\n\t}","commit_id":"3aff0a7c7cff549d66fa6475b467ad2a0f4c4664","url":"https://github.com/liferay/liferay-portal"},{"original_method":"protected void reconfigureCaches(ClassLoader classLoader) throws Exception {\n\t\tConfiguration configuration = null;\n\n\t\ttry {\n\t\t\tconfiguration = ConfigurationFactoryUtil.getConfiguration(\n\t\t\t\tclassLoader, \"portlet\");\n\t\t}\n\t\tcatch (Exception e) {\n\t\t\tif (_log.isDebugEnabled()) {\n\t\t\t\t_log.debug(\"Unable to read portlet.properties\");\n\t\t\t}\n\n\t\t\treturn;\n\t\t}\n\n\t\t_portalCacheConfigurator.reconfigureCaches(\n\t\t\tPortalCacheManagerNames.SINGLE_VM, classLoader,\n\t\t\tgetPortalCacheConfigurationURL(\n\t\t\t\tconfiguration, classLoader,\n\t\t\t\tPropsKeys.EHCACHE_SINGLE_VM_CONFIG_LOCATION));\n\n\t\t_portalCacheConfigurator.reconfigureCaches(\n\t\t\tPortalCacheManagerNames.MULTI_VM, classLoader,\n\t\t\tgetPortalCacheConfigurationURL(\n\t\t\t\tconfiguration, classLoader,\n\t\t\t\tPropsKeys.EHCACHE_MULTI_VM_CONFIG_LOCATION));\n\t}","id":16903,"modified_method":"protected void reconfigureCaches(ClassLoader classLoader) throws Exception {\n\t\tConfiguration configuration = null;\n\n\t\ttry {\n\t\t\tconfiguration = ConfigurationFactoryUtil.getConfiguration(\n\t\t\t\tclassLoader, \"portlet\");\n\t\t}\n\t\tcatch (Exception e) {\n\t\t\tif (_log.isDebugEnabled()) {\n\t\t\t\t_log.debug(\"Unable to read portlet.properties\");\n\t\t\t}\n\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tif (_serviceRegistrar == null) {\n\t\t\tRegistry registry = RegistryUtil.getRegistry();\n\n\t\t\t_serviceRegistrar = registry.getServiceRegistrar(\n\t\t\t\tPortalCacheConfiguratorSettings.class);\n\t\t}\n\n\t\tMap<String, Object> properties = new HashMap<>();\n\n\t\tproperties.put(\n\t\t\t\"portal.cache.manager.name\", PortalCacheManagerNames.SINGLE_VM);\n\n\t\t_serviceRegistrar.registerService(\n\t\t\tPortalCacheConfiguratorSettings.class,\n\t\t\tnew PortalCacheConfiguratorSettings(\n\t\t\t\tconfiguration.get(PropsKeys.EHCACHE_SINGLE_VM_CONFIG_LOCATION),\n\t\t\t\tclassLoader),\n\t\t\tproperties);\n\t\t\n\t\tproperties = new HashMap<>();\n\n\t\tproperties.put(\n\t\t\t\"portal.cache.manager.name\", PortalCacheManagerNames.MULTI_VM);\n\t\t\n\t\t_serviceRegistrar.registerService(\n\t\t\tPortalCacheConfiguratorSettings.class,\n\t\t\tnew PortalCacheConfiguratorSettings(\n\t\t\t\tconfiguration.get(PropsKeys.EHCACHE_MULTI_VM_CONFIG_LOCATION),\n\t\t\t\tclassLoader),\n\t\t\tproperties);\n\t}","commit_id":"3aff0a7c7cff549d66fa6475b467ad2a0f4c4664","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public static List<SNode> call_getAvailableConceptMethods_1213877394200(SNode thisNode, SNode context, IScope scope) {\n    List<SNode> methods = new ArrayList<SNode>();\n    if (thisNode == null) {\n      return methods;\n    }\n    SNode contextBehaviour = SNodeOperations.getAncestor(context, \"jetbrains.mps.lang.behavior.structure.ConceptBehavior\", true, false);\n    for (SNode concept : SConceptOperations.getConceptHierarchy(thisNode)) {\n      SNode behaviour = AbstractConceptDeclaration_Behavior.call_findBehaviour_1213877394029(concept, scope);\n      if (behaviour != null) {\n        for (SNode method : SLinkOperations.getTargets(behaviour, \"method\", true)) {\n          if (SLinkOperations.getTarget(method, \"overriddenMethod\", false) != null) {\n            continue;\n          }\n          if (SLinkOperations.getTarget(method, \"visibility\", true) == null) {\n            if (SNodeOperations.getModel(contextBehaviour) == SNodeOperations.getModel(method)) {\n              ListSequence.fromList(methods).addElement(method);\n            }\n          }\n          if (SNodeOperations.isInstanceOf(SLinkOperations.getTarget(method, \"visibility\", true), \"jetbrains.mps.baseLanguage.structure.PrivateVisibility\")) {\n            if (SNodeOperations.getAncestor(method, \"jetbrains.mps.lang.behavior.structure.ConceptBehavior\", true, false) == contextBehaviour) {\n              ListSequence.fromList(methods).addElement(method);\n            }\n          }\n          if (SNodeOperations.isInstanceOf(SLinkOperations.getTarget(method, \"visibility\", true), \"jetbrains.mps.baseLanguage.structure.PublicVisibility\")) {\n            ListSequence.fromList(methods).addElement(method);\n          }\n          if (SNodeOperations.isInstanceOf(SLinkOperations.getTarget(method, \"visibility\", true), \"jetbrains.mps.baseLanguage.structure.ProtectedVisibility\")) {\n            if (SConceptOperations.isSubConceptOf(SLinkOperations.getTarget(contextBehaviour, \"concept\", false), NameUtil.nodeFQName(SLinkOperations.getTarget(SNodeOperations.getAncestor(method, \"jetbrains.mps.lang.behavior.structure.ConceptBehavior\", true, false), \"concept\", false)))) {\n              ListSequence.fromList(methods).addElement(method);\n            }\n          }\n        }\n      }\n    }\n    return methods;\n  }","id":16904,"modified_method":"public static List<SNode> call_getAvailableConceptMethods_1213877394200(SNode thisNode, SNode context, IScope scope) {\n    List<SNode> methods = new ArrayList<SNode>();\n    if (thisNode == null) {\n      return methods;\n    }\n    SNode contextBehaviour = SNodeOperations.getAncestor(context, \"jetbrains.mps.lang.behavior.structure.ConceptBehavior\", true, false);\n    for (SNode concept : SConceptOperations.getConceptHierarchy(thisNode)) {\n      SNode behaviour = AbstractConceptDeclaration_Behavior.call_findBehavior_1213877394029(concept, scope);\n      if (behaviour != null) {\n        for (SNode method : SLinkOperations.getTargets(behaviour, \"method\", true)) {\n          if (SLinkOperations.getTarget(method, \"overriddenMethod\", false) != null) {\n            continue;\n          }\n          if (SLinkOperations.getTarget(method, \"visibility\", true) == null) {\n            if (SNodeOperations.getModel(contextBehaviour) == SNodeOperations.getModel(method)) {\n              ListSequence.fromList(methods).addElement(method);\n            }\n          }\n          if (SNodeOperations.isInstanceOf(SLinkOperations.getTarget(method, \"visibility\", true), \"jetbrains.mps.baseLanguage.structure.PrivateVisibility\")) {\n            if (SNodeOperations.getAncestor(method, \"jetbrains.mps.lang.behavior.structure.ConceptBehavior\", true, false) == contextBehaviour) {\n              ListSequence.fromList(methods).addElement(method);\n            }\n          }\n          if (SNodeOperations.isInstanceOf(SLinkOperations.getTarget(method, \"visibility\", true), \"jetbrains.mps.baseLanguage.structure.PublicVisibility\")) {\n            ListSequence.fromList(methods).addElement(method);\n          }\n          if (SNodeOperations.isInstanceOf(SLinkOperations.getTarget(method, \"visibility\", true), \"jetbrains.mps.baseLanguage.structure.ProtectedVisibility\")) {\n            if (SConceptOperations.isSubConceptOf(SLinkOperations.getTarget(contextBehaviour, \"concept\", false), NameUtil.nodeFQName(SLinkOperations.getTarget(SNodeOperations.getAncestor(method, \"jetbrains.mps.lang.behavior.structure.ConceptBehavior\", true, false), \"concept\", false)))) {\n              ListSequence.fromList(methods).addElement(method);\n            }\n          }\n        }\n      }\n    }\n    return methods;\n  }","commit_id":"ab09fa29246df35dc7593180c4136a41307c296a","url":"https://github.com/JetBrains/MPS"},{"original_method":"public static SNode call_findDataFlow_1213877394143(SNode thisNode, IScope scope) {\n    Language language = SModelUtil.getDeclaringLanguage(thisNode, scope);\n    if (language == null) {\n      return null;\n    }\n    SModelDescriptor dataFlow = language.getDataFlowModelDescriptor();\n    if (dataFlow == null) {\n      return null;\n    }\n    SModel model = dataFlow.getSModel();\n    for (SNode dataFlowNode : SModelOperations.getRoots(model, \"jetbrains.mps.lang.dataFlow.structure.DataFlowBuilderDeclaration\")) {\n      if (SLinkOperations.getTarget(dataFlowNode, \"conceptDeclaration\", false) == thisNode) {\n        return dataFlowNode;\n      }\n    }\n    return null;\n  }","id":16905,"modified_method":"public static SNode call_findDataFlow_1213877394143(SNode thisNode, IScope scope) {\n    Language language = SModelUtil.getDeclaringLanguage(thisNode, scope);\n    if (language == null) {\n      return null;\n    }\n    SModelDescriptor dataFlow = language.getDataFlowModelDescriptor();\n    if (dataFlow == null) {\n      return null;\n    }\n    return AbstractConceptDeclaration_Behavior.call_findDataFlow_8941943470987398480(thisNode, dataFlow.getSModel());\n  }","commit_id":"ab09fa29246df35dc7593180c4136a41307c296a","url":"https://github.com/JetBrains/MPS"},{"original_method":"public static List<SNode> call_getNotImplementedConceptMethods_1213877394339(SNode thisNode, IScope scope) {\n    List<SNode> abstractMethods = new ArrayList<SNode>();\n    List<SNode> implementedMethods = new ArrayList<SNode>();\n    List<SNode> concepts = SConceptOperations.getAllSuperConcepts(thisNode, false);\n    ListSequence.fromList(concepts).addElement(thisNode);\n    for (SNode concept : concepts) {\n      SNode behavior = AbstractConceptDeclaration_Behavior.call_findBehaviour_1213877394029(concept, scope);\n      for (SNode method : SLinkOperations.getTargets(behavior, \"method\", true)) {\n        if (SPropertyOperations.getBoolean(method, \"isAbstract\")) {\n          ListSequence.fromList(abstractMethods).addElement(method);\n        }\n        if (SLinkOperations.getTarget(method, \"overriddenMethod\", false) != null) {\n          ListSequence.fromList(implementedMethods).addElement(SLinkOperations.getTarget(method, \"overriddenMethod\", false));\n        }\n      }\n    }\n    ListSequence.fromList(abstractMethods).removeSequence(ListSequence.fromList(implementedMethods));\n    return abstractMethods;\n  }","id":16906,"modified_method":"public static List<SNode> call_getNotImplementedConceptMethods_1213877394339(SNode thisNode, IScope scope) {\n    List<SNode> abstractMethods = new ArrayList<SNode>();\n    List<SNode> implementedMethods = new ArrayList<SNode>();\n    List<SNode> concepts = SConceptOperations.getAllSuperConcepts(thisNode, false);\n    ListSequence.fromList(concepts).addElement(thisNode);\n    for (SNode concept : concepts) {\n      SNode behavior = AbstractConceptDeclaration_Behavior.call_findBehavior_1213877394029(concept, scope);\n      for (SNode method : SLinkOperations.getTargets(behavior, \"method\", true)) {\n        if (SPropertyOperations.getBoolean(method, \"isAbstract\")) {\n          ListSequence.fromList(abstractMethods).addElement(method);\n        }\n        if (SLinkOperations.getTarget(method, \"overriddenMethod\", false) != null) {\n          ListSequence.fromList(implementedMethods).addElement(SLinkOperations.getTarget(method, \"overriddenMethod\", false));\n        }\n      }\n    }\n    ListSequence.fromList(abstractMethods).removeSequence(ListSequence.fromList(implementedMethods));\n    return abstractMethods;\n  }","commit_id":"ab09fa29246df35dc7593180c4136a41307c296a","url":"https://github.com/JetBrains/MPS"},{"original_method":"public static SNode call_findConstraints_6409339300305625141(SNode thisNode, IScope scope) {\n    Language language = SModelUtil.getDeclaringLanguage(thisNode, scope);\n    if (language == null) {\n      return null;\n    }\n    SModelDescriptor constraints = language.getConstraintsModelDescriptor();\n    if (constraints == null) {\n      return null;\n    }\n\n    SModel model = constraints.getSModel();\n    for (SNode constraintsRoot : SModelOperations.getRoots(model, \"jetbrains.mps.lang.constraints.structure.ConceptConstraints\")) {\n      if (SLinkOperations.getTarget(constraintsRoot, \"concept\", false) == thisNode) {\n        return constraintsRoot;\n      }\n    }\n\n    return null;\n  }","id":16907,"modified_method":"public static SNode call_findConstraints_6409339300305625141(SNode thisNode, IScope scope) {\n    Language language = SModelUtil.getDeclaringLanguage(thisNode, scope);\n    if (language == null) {\n      return null;\n    }\n    SModelDescriptor constraints = language.getConstraintsModelDescriptor();\n    if (constraints == null) {\n      return null;\n    }\n    return AbstractConceptDeclaration_Behavior.call_findConstraints_8941943470987278548(thisNode, constraints.getSModel());\n  }","commit_id":"ab09fa29246df35dc7593180c4136a41307c296a","url":"https://github.com/JetBrains/MPS"},{"original_method":"public static List<SNode> call_getVirtualConceptMethods_1213877394290(SNode thisNode, IScope scope) {\n    List<SNode> methods = new ArrayList<SNode>();\n    for (SNode concept : SConceptOperations.getAllSuperConcepts(thisNode, false)) {\n      SNode behaviour = AbstractConceptDeclaration_Behavior.call_findBehaviour_1213877394029(concept, scope);\n      if (behaviour != null) {\n        for (SNode method : SLinkOperations.getTargets(behaviour, \"method\", true)) {\n          if (SPropertyOperations.getBoolean(method, \"isVirtual\")) {\n            ListSequence.fromList(methods).addElement(method);\n          }\n        }\n      }\n    }\n    return methods;\n  }","id":16908,"modified_method":"public static List<SNode> call_getVirtualConceptMethods_1213877394290(SNode thisNode, IScope scope) {\n    List<SNode> methods = new ArrayList<SNode>();\n    for (SNode concept : SConceptOperations.getAllSuperConcepts(thisNode, false)) {\n      SNode behaviour = AbstractConceptDeclaration_Behavior.call_findBehavior_1213877394029(concept, scope);\n      if (behaviour != null) {\n        for (SNode method : SLinkOperations.getTargets(behaviour, \"method\", true)) {\n          if (SPropertyOperations.getBoolean(method, \"isVirtual\")) {\n            ListSequence.fromList(methods).addElement(method);\n          }\n        }\n      }\n    }\n    return methods;\n  }","commit_id":"ab09fa29246df35dc7593180c4136a41307c296a","url":"https://github.com/JetBrains/MPS"},{"original_method":"public static SNode call_findTextgen_6409339300305625442(SNode thisNode, IScope scope) {\n    Language language = SModelUtil.getDeclaringLanguage(thisNode, scope);\n    if (language == null) {\n      return null;\n    }\n    SModelDescriptor textgen = language.getTextgenModelDescriptor();\n    if (textgen == null) {\n      return null;\n    }\n    SModel model = textgen.getSModel();\n    for (SNode textgenNode : SModelOperations.getRoots(model, \"jetbrains.mps.lang.textGen.structure.ConceptTextGenDeclaration\")) {\n      if (SLinkOperations.getTarget(textgenNode, \"conceptDeclaration\", false) == thisNode) {\n        return textgenNode;\n      }\n    }\n    return null;\n  }","id":16909,"modified_method":"public static SNode call_findTextgen_6409339300305625442(SNode thisNode, IScope scope) {\n    Language language = SModelUtil.getDeclaringLanguage(thisNode, scope);\n    if (language == null) {\n      return null;\n    }\n    SModelDescriptor textgen = language.getTextgenModelDescriptor();\n    if (textgen == null) {\n      return null;\n    }\n    return AbstractConceptDeclaration_Behavior.call_findTextgen_8941943470987398359(thisNode, textgen.getSModel());\n  }","commit_id":"ab09fa29246df35dc7593180c4136a41307c296a","url":"https://github.com/JetBrains/MPS"},{"original_method":"public static List<SNode> call_findAllAspects_7754459869734028917(SNode thisNode, IScope scope) {\n    List<SNode> result = new ArrayList<SNode>();\n    ListSequence.fromList(result).addElement(AbstractConceptDeclaration_Behavior.call_findEditor_6409339300305624772(thisNode, scope));\n    ListSequence.fromList(result).addElement(AbstractConceptDeclaration_Behavior.call_findConstraints_6409339300305625141(thisNode, scope));\n    ListSequence.fromList(result).addElement(AbstractConceptDeclaration_Behavior.call_findBehaviour_1213877394029(thisNode, scope));\n    ListSequence.fromList(result).addSequence(ListSequence.fromList(AbstractConceptDeclaration_Behavior.call_findTypesystemRules_5161861506212356934(thisNode, scope)));\n    ListSequence.fromList(result).addSequence(ListSequence.fromList(AbstractConceptDeclaration_Behavior.call_findIntentions_6409339300305625231(thisNode, scope)));\n    ListSequence.fromList(result).addSequence(ListSequence.fromList(AbstractConceptDeclaration_Behavior.call_findFinders_6409339300305625307(thisNode, scope)));\n    ListSequence.fromList(result).addElement(AbstractConceptDeclaration_Behavior.call_findDataFlow_1213877394143(thisNode, scope));\n    ListSequence.fromList(result).addSequence(ListSequence.fromList(AbstractConceptDeclaration_Behavior.call_findGeneratorFragments_6409339300305625383(thisNode, scope)));\n    ListSequence.fromList(result).addElement(AbstractConceptDeclaration_Behavior.call_findTextgen_6409339300305625442(thisNode, scope));\n\n    while (ListSequence.fromList(result).contains(null)) {\n      ListSequence.fromList(result).removeElement(null);\n    }\n\n    return result;\n  }","id":16910,"modified_method":"public static List<SNode> call_findAllAspects_7754459869734028917(SNode thisNode, IScope scope) {\n    List<SNode> result = new ArrayList<SNode>();\n    ListSequence.fromList(result).addElement(AbstractConceptDeclaration_Behavior.call_findEditor_6409339300305624772(thisNode, scope));\n    ListSequence.fromList(result).addElement(AbstractConceptDeclaration_Behavior.call_findConstraints_6409339300305625141(thisNode, scope));\n    ListSequence.fromList(result).addElement(AbstractConceptDeclaration_Behavior.call_findBehavior_1213877394029(thisNode, scope));\n    ListSequence.fromList(result).addSequence(ListSequence.fromList(AbstractConceptDeclaration_Behavior.call_findTypesystemRules_5161861506212356934(thisNode, scope)));\n    ListSequence.fromList(result).addSequence(ListSequence.fromList(AbstractConceptDeclaration_Behavior.call_findIntentions_6409339300305625231(thisNode, scope)));\n    ListSequence.fromList(result).addSequence(ListSequence.fromList(AbstractConceptDeclaration_Behavior.call_findFinders_6409339300305625307(thisNode, scope)));\n    ListSequence.fromList(result).addElement(AbstractConceptDeclaration_Behavior.call_findDataFlow_1213877394143(thisNode, scope));\n    ListSequence.fromList(result).addSequence(ListSequence.fromList(AbstractConceptDeclaration_Behavior.call_findGeneratorFragments_6409339300305625383(thisNode, scope)));\n    ListSequence.fromList(result).addElement(AbstractConceptDeclaration_Behavior.call_findTextgen_6409339300305625442(thisNode, scope));\n\n    while (ListSequence.fromList(result).contains(null)) {\n      ListSequence.fromList(result).removeElement(null);\n    }\n\n    return result;\n  }","commit_id":"ab09fa29246df35dc7593180c4136a41307c296a","url":"https://github.com/JetBrains/MPS"},{"original_method":"public static SNode call_findEditor_6409339300305624772(SNode thisNode, IScope scope) {\n    Language language = SModelUtil.getDeclaringLanguage(thisNode, scope);\n    if (language == null) {\n      return null;\n    }\n    SModelDescriptor editor = language.getEditorModelDescriptor();\n    if (editor == null) {\n      return null;\n    }\n    SModel model = editor.getSModel();\n    for (SNode editorNode : SModelOperations.getRoots(model, \"jetbrains.mps.lang.editor.structure.ConceptEditorDeclaration\")) {\n      if (SLinkOperations.getTarget(editorNode, \"conceptDeclaration\", false) == thisNode) {\n        return editorNode;\n      }\n    }\n    return null;\n  }","id":16911,"modified_method":"public static SNode call_findEditor_6409339300305624772(SNode thisNode, IScope scope) {\n    Language language = SModelUtil.getDeclaringLanguage(thisNode, scope);\n    if (language == null) {\n      return null;\n    }\n    SModelDescriptor editor = language.getEditorModelDescriptor();\n    if (editor == null) {\n      return null;\n    }\n    return AbstractConceptDeclaration_Behavior.call_findEditor_8941943470987277231(thisNode, editor.getSModel());\n  }","commit_id":"ab09fa29246df35dc7593180c4136a41307c296a","url":"https://github.com/JetBrains/MPS"},{"original_method":"public static SNode call_findBehaviour_1213877394029(SNode thisNode, IScope scope) {\n    Language language = SModelUtil.getDeclaringLanguage(thisNode, scope);\n    if (language == null) {\n      return null;\n    }\n    SModelDescriptor constraints = language.getBehaviorModelDescriptor();\n    if (constraints == null) {\n      return null;\n    }\n    SModel model = constraints.getSModel();\n    for (SNode behaviour : SModelOperations.getRoots(model, \"jetbrains.mps.lang.behavior.structure.ConceptBehavior\")) {\n      if (SLinkOperations.getTarget(behaviour, \"concept\", false) == thisNode) {\n        return behaviour;\n      }\n    }\n    return null;\n  }","id":16912,"modified_method":"public static SNode call_findBehavior_1213877394029(SNode thisNode, IScope scope) {\n    Language language = SModelUtil.getDeclaringLanguage(thisNode, scope);\n    if (language == null) {\n      return null;\n    }\n    SModelDescriptor behavior = language.getBehaviorModelDescriptor();\n    if (behavior == null) {\n      return null;\n    }\n    return AbstractConceptDeclaration_Behavior.call_findBehavior_8941943470987278671(thisNode, behavior.getSModel());\n  }","commit_id":"ab09fa29246df35dc7593180c4136a41307c296a","url":"https://github.com/JetBrains/MPS"},{"original_method":"public static List<SNode> call_getConceptMethods_5466054087443746043(SNode thisNode, IScope scope) {\n    List<SNode> methods = new ArrayList<SNode>();\n    for (SNode concept : SConceptOperations.getAllSuperConcepts(SLinkOperations.getTarget(thisNode, \"concept\", false), false)) {\n      SNode behaviour = AbstractConceptDeclaration_Behavior.call_findBehaviour_1213877394029(concept, scope);\n      if (behaviour != null) {\n        for (SNode method : SLinkOperations.getTargets(behaviour, \"method\", true)) {\n          ListSequence.fromList(methods).addElement(method);\n        }\n      }\n    }\n    return methods;\n  }","id":16913,"modified_method":"public static List<SNode> call_getConceptMethods_5466054087443746043(SNode thisNode, IScope scope) {\n    List<SNode> methods = new ArrayList<SNode>();\n    for (SNode concept : SConceptOperations.getAllSuperConcepts(SLinkOperations.getTarget(thisNode, \"concept\", false), false)) {\n      SNode behaviour = AbstractConceptDeclaration_Behavior.call_findBehavior_1213877394029(concept, scope);\n      if (behaviour != null) {\n        for (SNode method : SLinkOperations.getTargets(behaviour, \"method\", true)) {\n          ListSequence.fromList(methods).addElement(method);\n        }\n      }\n    }\n    return methods;\n  }","commit_id":"ab09fa29246df35dc7593180c4136a41307c296a","url":"https://github.com/JetBrains/MPS"},{"original_method":"public static ConceptEditorDeclaration findEditorDeclaration(SModel editorModel, AbstractConceptDeclaration conceptDeclaration) {\n    return (ConceptEditorDeclaration) BaseAdapter.fromNode(RefUtil.findEditorDeclaration(editorModel, BaseAdapter.fromAdapter(conceptDeclaration)));\n  }","id":16914,"modified_method":"public static ConceptEditorDeclaration findEditorDeclaration(SModel editorModel, final AbstractConceptDeclaration conceptDeclaration) {\n    List<SNode> editors = editorModel.getRoots(new Condition<SNode>() {\n      public boolean met(SNode n) {\n        INodeAdapter object = BaseAdapter.fromNode(n);\n        if (object instanceof ConceptEditorDeclaration) {\n          ConceptEditorDeclaration editor = (ConceptEditorDeclaration) object;\n          return editor.getConceptDeclaration() == conceptDeclaration;\n        }\n        return false;\n      }\n    });\n    if (editors.isEmpty()) return null;\n    return ((ConceptEditorDeclaration) editors.get(0).getAdapter());\n  }","commit_id":"ab09fa29246df35dc7593180c4136a41307c296a","url":"https://github.com/JetBrains/MPS"},{"original_method":"public void doRefactor(final RefactoringContext refactoringContext) {\n    List<SNode> nodes = (List<SNode>)refactoringContext.getSelectedNodes();\n    refactoringContext.setParameter(\"sourceModel\", SNodeOperations.getModel(ListSequence.fromList(refactoringContext.getSelectedNodes()).first()).getModelDescriptor());\n    Language sourceLanguage = Language.getLanguageFor(((SModelDescriptor)refactoringContext.getParameter(\"sourceModel\")));\n    Language targetLanguage = Language.getLanguageFor(((SModelDescriptor)refactoringContext.getParameter(\"targetModel\")));\n    List<SNode> editors = new ArrayList<SNode>();\n    List<SNode> behaviors = new ArrayList<SNode>();\n    List<SNode> constraints = new ArrayList<SNode>();\n    List<SNode> dataFlows = new ArrayList<SNode>();\n    // collecting editors:\n    SModelDescriptor editorModelDescriptor = sourceLanguage.getEditorModelDescriptor();\n    if (editorModelDescriptor != null) {\n      for (SNode node : nodes) {\n        SNode editor = RefUtil.findEditorDeclaration(editorModelDescriptor.getSModel(), node);\n        if (editor != null) {\n          ListSequence.fromList(editors).addElement(editor);\n        }\n      }\n    }\n    // collecting behaviors:\n    SModelDescriptor behaviorModelDescriptor = sourceLanguage.getBehaviorModelDescriptor();\n    if (behaviorModelDescriptor != null) {\n      for (SNode node : nodes) {\n        SNode behavior = RefUtil.findBehaviorDeclaration(behaviorModelDescriptor.getSModel(), node);\n        if (behavior != null) {\n          ListSequence.fromList(behaviors).addElement(behavior);\n        }\n      }\n    }\n    // collecting constraints:\n    SModelDescriptor constraintsModelDescriptor = sourceLanguage.getConstraintsModelDescriptor();\n    if (constraintsModelDescriptor != null) {\n      for (SNode node : nodes) {\n        SNode constraint = RefUtil.findConstraintsDeclaration(constraintsModelDescriptor.getSModel(), node);\n        if (constraint != null) {\n          ListSequence.fromList(constraints).addElement(constraint);\n        }\n      }\n    }\n    // collecting data flow:\n    SModelDescriptor dataflowModelDescriptor = sourceLanguage.getDataFlowModelDescriptor();\n    if (dataflowModelDescriptor != null) {\n      for (SNode node : nodes) {\n        SNode dataFlow = RefUtil.findDataFlowDeclaration(dataflowModelDescriptor.getSModel(), node);\n        if (dataFlow != null) {\n          ListSequence.fromList(dataFlows).addElement(dataFlow);\n        }\n      }\n    }\n    // refactoring itself\n    for (SNode node : nodes) {\n      refactoringContext.changeFeatureName(node, ((SModelDescriptor)refactoringContext.getParameter(\"targetModel\")).getSModelFqName().toString() + \".\" + SPropertyOperations.getString(node, \"name\"), SPropertyOperations.getString(node, \"name\"));\n    }\n    refactoringContext.moveNodesToModel(nodes, ((SModelDescriptor)refactoringContext.getParameter(\"targetModel\")).getSModel());\n    if (ListSequence.fromList(editors).isNotEmpty()) {\n      SModelDescriptor targetEditorModelDescriptor = targetLanguage.getEditorModelDescriptor();\n      if (targetEditorModelDescriptor == null) {\n        targetEditorModelDescriptor = LanguageAspect.EDITOR.createNew(targetLanguage);\n      }\n      SModel editorModel = targetEditorModelDescriptor.getSModel();\n      refactoringContext.moveNodesToModel(editors, editorModel);\n      refactoringContext.computeCaches();\n      refactoringContext.updateModelWithMaps(editorModel);\n    }\n    if (ListSequence.fromList(behaviors).isNotEmpty()) {\n      SModelDescriptor targetBehaviorModelDescriptor = targetLanguage.getBehaviorModelDescriptor();\n      if (targetBehaviorModelDescriptor == null) {\n        targetBehaviorModelDescriptor = LanguageAspect.BEHAVIOR.createNew(targetLanguage);\n      }\n      SModel behaviorModel = targetBehaviorModelDescriptor.getSModel();\n      refactoringContext.moveNodesToModel(behaviors, behaviorModel);\n      refactoringContext.computeCaches();\n      refactoringContext.updateModelWithMaps(behaviorModel);\n    }\n    if (ListSequence.fromList(constraints).isNotEmpty()) {\n      SModelDescriptor targetConstraintsModelDescriptor = targetLanguage.getConstraintsModelDescriptor();\n      if (targetConstraintsModelDescriptor == null) {\n        targetConstraintsModelDescriptor = LanguageAspect.CONSTRAINTS.createNew(targetLanguage);\n      }\n      SModel constraintsModel = targetConstraintsModelDescriptor.getSModel();\n      refactoringContext.moveNodesToModel(constraints, constraintsModel);\n      refactoringContext.computeCaches();\n      refactoringContext.updateModelWithMaps(constraintsModel);\n    }\n    if (ListSequence.fromList(dataFlows).isNotEmpty()) {\n      SModelDescriptor targetDataFlowModelDescriptor = targetLanguage.getDataFlowModelDescriptor();\n      if (targetDataFlowModelDescriptor == null) {\n        targetDataFlowModelDescriptor = LanguageAspect.DATA_FLOW.createNew(targetLanguage);\n      }\n      SModel dataFlowModel = targetDataFlowModelDescriptor.getSModel();\n      refactoringContext.moveNodesToModel(dataFlows, dataFlowModel);\n      refactoringContext.computeCaches();\n      refactoringContext.updateModelWithMaps(dataFlowModel);\n    }\n    // todo: move other concept-related aspect stuff\n  }","id":16915,"modified_method":"public void doRefactor(final RefactoringContext refactoringContext) {\n    List<SNode> nodes = (List<SNode>)refactoringContext.getSelectedNodes();\n    refactoringContext.setParameter(\"sourceModel\", SNodeOperations.getModel(ListSequence.fromList(refactoringContext.getSelectedNodes()).first()).getModelDescriptor());\n    Language sourceLanguage = Language.getLanguageFor(((SModelDescriptor)refactoringContext.getParameter(\"sourceModel\")));\n    Language targetLanguage = Language.getLanguageFor(((SModelDescriptor)refactoringContext.getParameter(\"targetModel\")));\n    List<SNode> editors = new ArrayList<SNode>();\n    List<SNode> behaviors = new ArrayList<SNode>();\n    List<SNode> constraints = new ArrayList<SNode>();\n    List<SNode> dataFlows = new ArrayList<SNode>();\n    // collecting editors:\n    SModelDescriptor editorModelDescriptor = sourceLanguage.getEditorModelDescriptor();\n    if (editorModelDescriptor != null) {\n      for (SNode node : nodes) {\n        SNode editor = AbstractConceptDeclaration_Behavior.call_findEditor_8941943470987277231(node, editorModelDescriptor.getSModel());\n        if (editor != null) {\n          ListSequence.fromList(editors).addElement(editor);\n        }\n      }\n    }\n    // collecting behaviors:\n    SModelDescriptor behaviorModelDescriptor = sourceLanguage.getBehaviorModelDescriptor();\n    if (behaviorModelDescriptor != null) {\n      for (SNode node : nodes) {\n        SNode behavior = AbstractConceptDeclaration_Behavior.call_findBehavior_8941943470987278671(node, behaviorModelDescriptor.getSModel());\n        if (behavior != null) {\n          ListSequence.fromList(behaviors).addElement(behavior);\n        }\n      }\n    }\n    // collecting constraints:\n    SModelDescriptor constraintsModelDescriptor = sourceLanguage.getConstraintsModelDescriptor();\n    if (constraintsModelDescriptor != null) {\n      for (SNode node : nodes) {\n        SNode constraint = AbstractConceptDeclaration_Behavior.call_findConstraints_8941943470987278548(node, constraintsModelDescriptor.getSModel());\n        if (constraint != null) {\n          ListSequence.fromList(constraints).addElement(constraint);\n        }\n      }\n    }\n    // collecting data flow:\n    SModelDescriptor dataflowModelDescriptor = sourceLanguage.getDataFlowModelDescriptor();\n    if (dataflowModelDescriptor != null) {\n      for (SNode node : nodes) {\n        SNode dataFlow = AbstractConceptDeclaration_Behavior.call_findDataFlow_8941943470987398480(node, dataflowModelDescriptor.getSModel());\n        if (dataFlow != null) {\n          ListSequence.fromList(dataFlows).addElement(dataFlow);\n        }\n      }\n    }\n    // refactoring itself\n    for (SNode node : nodes) {\n      refactoringContext.changeFeatureName(node, ((SModelDescriptor)refactoringContext.getParameter(\"targetModel\")).getSModelFqName().toString() + \".\" + SPropertyOperations.getString(node, \"name\"), SPropertyOperations.getString(node, \"name\"));\n    }\n    refactoringContext.moveNodesToModel(nodes, ((SModelDescriptor)refactoringContext.getParameter(\"targetModel\")).getSModel());\n    if (ListSequence.fromList(editors).isNotEmpty()) {\n      SModelDescriptor targetEditorModelDescriptor = targetLanguage.getEditorModelDescriptor();\n      if (targetEditorModelDescriptor == null) {\n        targetEditorModelDescriptor = LanguageAspect.EDITOR.createNew(targetLanguage);\n      }\n      SModel editorModel = targetEditorModelDescriptor.getSModel();\n      refactoringContext.moveNodesToModel(editors, editorModel);\n      refactoringContext.computeCaches();\n      refactoringContext.updateModelWithMaps(editorModel);\n    }\n    if (ListSequence.fromList(behaviors).isNotEmpty()) {\n      SModelDescriptor targetBehaviorModelDescriptor = targetLanguage.getBehaviorModelDescriptor();\n      if (targetBehaviorModelDescriptor == null) {\n        targetBehaviorModelDescriptor = LanguageAspect.BEHAVIOR.createNew(targetLanguage);\n      }\n      SModel behaviorModel = targetBehaviorModelDescriptor.getSModel();\n      refactoringContext.moveNodesToModel(behaviors, behaviorModel);\n      refactoringContext.computeCaches();\n      refactoringContext.updateModelWithMaps(behaviorModel);\n    }\n    if (ListSequence.fromList(constraints).isNotEmpty()) {\n      SModelDescriptor targetConstraintsModelDescriptor = targetLanguage.getConstraintsModelDescriptor();\n      if (targetConstraintsModelDescriptor == null) {\n        targetConstraintsModelDescriptor = LanguageAspect.CONSTRAINTS.createNew(targetLanguage);\n      }\n      SModel constraintsModel = targetConstraintsModelDescriptor.getSModel();\n      refactoringContext.moveNodesToModel(constraints, constraintsModel);\n      refactoringContext.computeCaches();\n      refactoringContext.updateModelWithMaps(constraintsModel);\n    }\n    if (ListSequence.fromList(dataFlows).isNotEmpty()) {\n      SModelDescriptor targetDataFlowModelDescriptor = targetLanguage.getDataFlowModelDescriptor();\n      if (targetDataFlowModelDescriptor == null) {\n        targetDataFlowModelDescriptor = LanguageAspect.DATA_FLOW.createNew(targetLanguage);\n      }\n      SModel dataFlowModel = targetDataFlowModelDescriptor.getSModel();\n      refactoringContext.moveNodesToModel(dataFlows, dataFlowModel);\n      refactoringContext.computeCaches();\n      refactoringContext.updateModelWithMaps(dataFlowModel);\n    }\n    // todo: move other concept-related aspect stuff\n  }","commit_id":"ab09fa29246df35dc7593180c4136a41307c296a","url":"https://github.com/JetBrains/MPS"},{"original_method":"private CoreGraphDatabase leaderTx( BiConsumer<CoreGraphDatabase,Transaction> op ) throws TimeoutException, InterruptedException\n    {\n        while( true )\n        {\n            CoreGraphDatabase db = awaitCoreGraphDatabaseWithRole( 5000, Role.LEADER );\n\n            try\n            {\n                Transaction tx = db.beginTx();\n                op.accept( db, tx );\n                tx.close();\n                return db;\n            }\n            catch ( TransactionFailureException e )\n            {\n                if( isTransientFailure( e ) )\n                {\n                    // sleep and retry\n                    Thread.sleep( 100 );\n                }\n                else\n                {\n                    throw e;\n                }\n            }\n        }\n    }","id":16916,"modified_method":"/**\n     * Perform a transaction against the leader of the core cluster, retrying as necessary.\n     */\n    private CoreGraphDatabase leaderTx( BiConsumer<CoreGraphDatabase,Transaction> op ) throws TimeoutException, InterruptedException\n    {\n        long endTime = System.currentTimeMillis() + DEFAULT_TIMEOUT_MS;\n\n        do\n        {\n            CoreGraphDatabase db = awaitCoreGraphDatabaseWithRole( DEFAULT_TIMEOUT_MS, Role.LEADER );\n\n            try\n            {\n                Transaction tx = db.beginTx();\n                op.accept( db, tx );\n                tx.close();\n                return db;\n            }\n            catch ( TransactionFailureException e )\n            {\n                if( isTransientFailure( e ) )\n                {\n                    // sleep and retry\n                    Thread.sleep( DEFAULT_BACKOFF_MS );\n                }\n                else\n                {\n                    throw e;\n                }\n            }\n        } while ( System.currentTimeMillis() < endTime );\n\n        throw new TimeoutException( \"Transaction did not succeed in time\" );\n    }","commit_id":"a82860e745ba163152a7622e7d60d8c83fe58676","url":"https://github.com/neo4j/neo4j"},{"original_method":"public CoreGraphDatabase coreTx( BiConsumer<CoreGraphDatabase,Transaction> op ) throws TimeoutException, InterruptedException\n    {\n        return leaderTx( op );\n    }","id":16917,"modified_method":"/**\n     * Perform a transaction against the core cluster, selecting the target and retrying as necessary.\n     */\n    public CoreGraphDatabase coreTx( BiConsumer<CoreGraphDatabase,Transaction> op ) throws TimeoutException, InterruptedException\n    {\n        // this currently wraps the leader-only strategy, since it is the recommended and only approach\n        return leaderTx( op );\n    }","commit_id":"a82860e745ba163152a7622e7d60d8c83fe58676","url":"https://github.com/neo4j/neo4j"},{"original_method":"@Test\n    public void shouldReplicateTransactionToCoreServersAddedAfterInitialStartUp() throws Exception\n    {\n        // given\n        File dbDir = dir.directory();\n        cluster = Cluster.start( dbDir, 3, 0 );\n\n        cluster.addCoreServerWithServerId( 3, 4 );\n\n        // when\n        GraphDatabaseService coreDB = cluster.awaitLeader( 5000 );\n\n        try ( Transaction tx = coreDB.beginTx() )\n        {\n            Node node = coreDB.createNode();\n            node.setProperty( \"foobar\", \"baz_bat\" );\n            tx.success();\n        }\n\n        cluster.addCoreServerWithServerId( 4, 5 );\n\n        coreDB = cluster.awaitLeader( 5000 );\n\n        try ( Transaction tx = coreDB.beginTx() )\n        {\n            Node node = coreDB.createNode();\n            node.setProperty( \"foobar\", \"baz_bat\" );\n            tx.success();\n        }\n\n        // then\n        for ( final CoreGraphDatabase db : cluster.coreServers() )\n        {\n            try ( Transaction tx = db.beginTx() )\n            {\n                ThrowingSupplier<Long, Exception> nodeCount = () -> count( db.getAllNodes() );\n\n                Config config = db.getDependencyResolver().resolveDependency( Config.class );\n\n                assertEventually( \"node to appear on core server \" + config.get( HaSettings.ha_server ), nodeCount,\n                        equalTo( 2L ), 3, SECONDS );\n\n                for ( Node node : db.getAllNodes() )\n                {\n                    assertEquals( \"baz_bat\", node.getProperty( \"foobar\" ) );\n                }\n\n                tx.success();\n            }\n        }\n    }","id":16918,"modified_method":"@Test\n    public void shouldReplicateTransactionToCoreServerAddedAfterInitialStartUp() throws Exception\n    {\n        // given\n        File dbDir = dir.directory();\n        cluster = Cluster.start( dbDir, 3, 0 );\n\n        cluster.addCoreServerWithServerId( 3, 4 );\n\n        cluster.coreTx( ( db, tx ) -> {\n            Node node = db.createNode();\n            node.setProperty( \"foobar\", \"baz_bat\" );\n            tx.success();\n        } );\n\n        // when\n        cluster.addCoreServerWithServerId( 4, 5 );\n        CoreGraphDatabase last = cluster.coreTx( ( db, tx ) -> {\n            Node node = db.createNode();\n            node.setProperty( \"foobar\", \"baz_bat\" );\n            tx.success();\n        } );\n\n        // then\n        assertEquals( 2, countNodes( last ) );\n        dataMatchesEventually( last, cluster.coreServers() );\n    }","commit_id":"a82860e745ba163152a7622e7d60d8c83fe58676","url":"https://github.com/neo4j/neo4j"},{"original_method":"@Test\n    public void shouldReplicateTransactionAfterOneOriginalServerRemovedFromCluster() throws Exception\n    {\n        File dbDir = dir.directory();\n        cluster = Cluster.start( dbDir, 3, 0 );\n        CoreGraphDatabase leader = cluster.awaitLeader( 5000 );\n        try ( Transaction tx = leader.beginTx() )\n        {\n            Node node = leader.createNode();\n            node.setProperty( \"foobar\", \"baz_bat\" );\n            tx.success();\n        }\n\n        cluster.removeCoreServer( leader );\n        final GraphDatabaseService newLeader = cluster.awaitLeader( 5000 );\n        ThrowingSupplier<Boolean, Exception> creationSuccess = () -> {\n            try ( Transaction tx = newLeader.beginTx() )\n            {\n                Node node = newLeader.createNode();\n                node.setProperty( \"foobar\", \"baz_bat\" );\n                tx.success();\n                return true;\n\n            }\n            catch ( Exception e )\n            {\n                // ignore temporary failures\n            }\n            return false;\n        };\n\n        assertEventually( \"node could be created after server removed\", creationSuccess, is( true ), 1, MINUTES );\n\n        // then\n        for ( final CoreGraphDatabase db : cluster.coreServers() )\n        {\n            try ( Transaction tx = db.beginTx() )\n            {\n                ThrowingSupplier<Long, Exception> nodeCount = () -> count( db.getAllNodes() );\n\n                Config config = db.getDependencyResolver().resolveDependency( Config.class );\n\n                assertEventually( \"node to appear on core server \" + config.get( HaSettings.ha_server ), nodeCount,\n                        equalTo( 2L ), 1, MINUTES );\n\n                for ( Node node : db.getAllNodes() )\n                {\n                    assertEquals( \"baz_bat\", node.getProperty( \"foobar\" ) );\n                }\n\n                tx.success();\n            }\n        }\n    }","id":16919,"modified_method":"@Test\n    public void shouldReplicateTransactionAfterLeaderWasRemovedFromCluster() throws Exception\n    {\n        // given\n        File dbDir = dir.directory();\n        cluster = Cluster.start( dbDir, 3, 0 );\n\n        cluster.coreTx( ( db, tx ) -> {\n            Node node = db.createNode();\n            node.setProperty( \"foobar\", \"baz_bat\" );\n            tx.success();\n        } );\n\n        // when\n        cluster.removeCoreServer( cluster.awaitLeader() );\n        CoreGraphDatabase last = cluster.coreTx( ( db, tx ) -> {\n            Node node = db.createNode();\n            node.setProperty( \"foobar\", \"baz_bat\" );\n            tx.success();\n        } );\n\n        // then\n        assertEquals( 2, countNodes( last ) );\n        dataMatchesEventually( last, cluster.coreServers() );\n    }","commit_id":"a82860e745ba163152a7622e7d60d8c83fe58676","url":"https://github.com/neo4j/neo4j"},{"original_method":"@Test\n    public void shouldReplicateToCoreServersAddedAfterInitialTransactions() throws Exception\n    {\n        // given\n        File dbDir = dir.directory();\n        cluster = Cluster.start( dbDir, 3, 0 );\n\n        // when\n        for ( int i = 0; i < 15; i++ )\n        {\n            CoreGraphDatabase leader = cluster.awaitLeader( 5000 );\n\n            try ( Transaction tx = leader.beginTx() )\n            {\n                Node node = leader.createNode();\n                node.setProperty( \"foobar\", \"baz_bat\" );\n                tx.success();\n            }\n        }\n\n        cluster.addCoreServerWithServerId( 3, 4 );\n        cluster.addCoreServerWithServerId( 4, 5 );\n\n        // then\n        for ( final CoreGraphDatabase db : cluster.coreServers() )\n        {\n            try ( Transaction tx = db.beginTx() )\n            {\n                ThrowingSupplier<Long, Exception> nodeCount = () -> count( db.getAllNodes() );\n\n                Config config = db.getDependencyResolver().resolveDependency( Config.class );\n\n                assertEventually( \"node to appear on core server \" + config.get( CoreEdgeClusterSettings\n                                .raft_listen_address ), nodeCount,\n                        is( 15L ), 1, MINUTES );\n\n                for ( Node node : db.getAllNodes() )\n                {\n                    DependencyResolver dependencyResolver = db.getDependencyResolver();\n                    InstanceId id = dependencyResolver.resolveDependency( Config.class ).get( server_id );\n                    assertEquals( \"Assertion fails on server: \" + id, \"baz_bat\", node.getProperty( \"foobar\" ) );\n                }\n\n                tx.success();\n            }\n        }\n    }","id":16920,"modified_method":"@Test\n    public void shouldReplicateToCoreServersAddedAfterInitialTransactions() throws Exception\n    {\n        // given\n        File dbDir = dir.directory();\n        cluster = Cluster.start( dbDir, 3, 0 );\n\n        // when\n        CoreGraphDatabase last = null;\n        for ( int i = 0; i < 15; i++ )\n        {\n            last = cluster.coreTx( ( db, tx ) -> {\n                Node node = db.createNode();\n                node.setProperty( \"foobar\", \"baz_bat\" );\n                tx.success();\n            } );\n        }\n\n        cluster.addCoreServerWithServerId( 3, 4 );\n        cluster.addCoreServerWithServerId( 4, 5 );\n\n        // then\n        assertEquals( 15, countNodes( last ) );\n        dataMatchesEventually( last, cluster.coreServers() );\n    }","commit_id":"a82860e745ba163152a7622e7d60d8c83fe58676","url":"https://github.com/neo4j/neo4j"},{"original_method":"@Test\n    public void shouldReplicateTransactionToCoreServers() throws Exception\n    {\n        // given\n        File dbDir = dir.directory();\n        cluster = Cluster.start( dbDir, 3, 0 );\n\n        // when\n        GraphDatabaseService coreDB = cluster.awaitLeader( 5000 );\n\n        try ( Transaction tx = coreDB.beginTx() )\n        {\n            Node node = coreDB.createNode( label( \"boo\" ) );\n            node.setProperty( \"foobar\", \"baz_bat\" );\n            tx.success();\n        }\n\n        try ( Transaction tx = coreDB.beginTx() )\n        {\n            coreDB.schema().indexFor( label( \"boo\" )).on( \"foobar\" ).create();\n            tx.success();\n        }\n\n        // then\n        for ( final CoreGraphDatabase db : cluster.coreServers() )\n        {\n            try ( Transaction tx = db.beginTx() )\n            {\n                ThrowingSupplier<Long, Exception> nodeCount = () -> count( db.getAllNodes() );\n\n                Config config = db.getDependencyResolver().resolveDependency( Config.class );\n\n                assertEventually( \"node to appear on core server \" + config.get( raft_advertised_address ), nodeCount,\n                        greaterThan(  0L ), 15, SECONDS );\n\n                for ( Node node : db.getAllNodes() )\n                {\n                    assertEquals( \"baz_bat\", node.getProperty( \"foobar\" ) );\n                }\n\n                tx.success();\n            }\n        }\n    }","id":16921,"modified_method":"@Test\n    public void shouldReplicateTransactionsToCoreServers() throws Exception\n    {\n        // given\n        File dbDir = dir.directory();\n        cluster = Cluster.start( dbDir, 3, 0 );\n\n        // when\n        cluster.coreTx( ( db, tx ) -> {\n            Node node = db.createNode( label( \"boo\" ) );\n            node.setProperty( \"foobar\", \"baz_bat\" );\n            tx.success();\n        } );\n        CoreGraphDatabase last = cluster.coreTx( ( db, tx ) -> {\n            db.schema().indexFor( label( \"boo\" ) ).on( \"foobar\" ).create();\n            tx.success();\n        } );\n\n        // then\n        assertEquals( 1, countNodes( last ) );\n        dataMatchesEventually( last, cluster.coreServers() );\n    }","commit_id":"a82860e745ba163152a7622e7d60d8c83fe58676","url":"https://github.com/neo4j/neo4j"},{"original_method":"protected VolumeVO createVolumeFromSnapshot(VolumeVO volume, long snapshotId) throws StorageUnavailableException {\n        VolumeInfo createdVolume = null;\n        SnapshotVO snapshot = _snapshotDao.findById(snapshotId);\n        createdVolume = createVolumeFromSnapshot(volume,\n                snapshot);\n\n        UsageEventVO usageEvent = new UsageEventVO(\n                EventTypes.EVENT_VOLUME_CREATE,\n                createdVolume.getAccountId(),\n                createdVolume.getDataCenterId(), createdVolume.getId(),\n                createdVolume.getName(), createdVolume.getDiskOfferingId(),\n                null, createdVolume.getSize());\n        _usageEventDao.persist(usageEvent);\n\n        return _volsDao.findById(createdVolume.getId());\n    }","id":16922,"modified_method":"protected VolumeVO createVolumeFromSnapshot(VolumeVO volume, long snapshotId) throws StorageUnavailableException {\n        VolumeInfo createdVolume = null;\n        SnapshotVO snapshot = _snapshotDao.findById(snapshotId);\n        createdVolume = createVolumeFromSnapshot(volume,\n                snapshot);\n\n        UsageEventUtils.publishUsageEvent(EventTypes.EVENT_VOLUME_CREATE, createdVolume.getAccountId(), createdVolume.getDataCenterId(), createdVolume.getId(),\n                createdVolume.getName(), createdVolume.getDiskOfferingId(), null, createdVolume.getSize(), Volume.class.getName(), createdVolume.getUuid());\n\n        return _volsDao.findById(createdVolume.getId());\n    }","commit_id":"730d04508507409065a432e2aac931225947f268","url":"https://github.com/apache/cloudstack"},{"original_method":"@Override\n    @DB\n    @ActionEvent(eventType = EventTypes.EVENT_VOLUME_DELETE, eventDescription = \"deleting volume\")\n    public boolean deleteVolume(long volumeId, Account caller)\n            throws ConcurrentOperationException {\n\n        VolumeVO volume = _volsDao.findById(volumeId);\n        if (volume == null) {\n            throw new InvalidParameterValueException(\n                    \"Unable to aquire volume with ID: \" + volumeId);\n        }\n\n        if (!_snapshotMgr.canOperateOnVolume(volume)) {\n            throw new InvalidParameterValueException(\n                    \"There are snapshot creating on it, Unable to delete the volume\");\n        }\n\n        _accountMgr.checkAccess(caller, null, true, volume);\n\n        if (volume.getInstanceId() != null) {\n            throw new InvalidParameterValueException(\n                    \"Please specify a volume that is not attached to any VM.\");\n        }\n\n        if (volume.getState() == Volume.State.UploadOp) {\n            VolumeDataStoreVO volumeStore = _volumeStoreDao.findByVolume(volume\n                    .getId());\n            if (volumeStore.getDownloadState() == VMTemplateStorageResourceAssoc.Status.DOWNLOAD_IN_PROGRESS) {\n                throw new InvalidParameterValueException(\n                        \"Please specify a volume that is not uploading\");\n            }\n        }\n\n        try {\n            if (volume.getState() != Volume.State.Destroy && volume.getState() != Volume.State.Expunging && volume.getState() != Volume.State.Expunging) {\n                Long instanceId = volume.getInstanceId();\n                if (!volService.destroyVolume(volume.getId())) {\n                    return false;\n                }\n\n                VMInstanceVO vmInstance = _vmInstanceDao.findById(instanceId);\n                if (instanceId == null\n                        || (vmInstance.getType().equals(VirtualMachine.Type.User))) {\n                    // Decrement the resource count for volumes and primary storage belonging user VM's only\n                    _resourceLimitMgr.decrementResourceCount(volume.getAccountId(),\n                            ResourceType.volume);\n                    /* If volume is in primary storage, decrement primary storage count else decrement secondary\n                     storage count (in case of upload volume). */\n                    if (volume.getFolder() != null || volume.getPath() != null || volume.getState() == Volume.State.Allocated) {\n                        _resourceLimitMgr.decrementResourceCount(volume.getAccountId(), ResourceType.primary_storage,\n                                new Long(volume.getSize()));\n                    } else {\n                        _resourceLimitMgr.recalculateResourceCount(volume.getAccountId(), volume.getDomainId(),\n                                ResourceType.secondary_storage.getOrdinal());\n                    }\n\n                    // Log usage event for volumes belonging user VM's only\n                    UsageEventVO usageEvent = new UsageEventVO(\n                            EventTypes.EVENT_VOLUME_DELETE, volume.getAccountId(),\n                            volume.getDataCenterId(), volume.getId(), volume.getName());\n                    _usageEventDao.persist(usageEvent);\n                }\n            }\n            // expunge volume from primary if volume is on primary\n            VolumeInfo volOnPrimary = volFactory.getVolume(volume.getId(), DataStoreRole.Primary);\n            if (volOnPrimary != null) {\n                s_logger.info(\"Expunging volume \" + volume.getId() + \" from primary data store\");\n                AsyncCallFuture<VolumeApiResult> future = volService.expungeVolumeAsync(volOnPrimary);\n                future.get();\n            }\n            // expunge volume from secondary if volume is on image store\n            VolumeInfo volOnSecondary = volFactory.getVolume(volume.getId(), DataStoreRole.Image);\n            if (volOnSecondary != null) {\n                s_logger.info(\"Expunging volume \" + volume.getId() + \" from secondary data store\");\n                AsyncCallFuture<VolumeApiResult> future2 = volService.expungeVolumeAsync(volOnSecondary);\n                future2.get();\n            }\n        } catch (Exception e) {\n            s_logger.warn(\"Failed to expunge volume:\", e);\n            return false;\n        }\n\n        return true;\n    }","id":16923,"modified_method":"@Override\n    @DB\n    @ActionEvent(eventType = EventTypes.EVENT_VOLUME_DELETE, eventDescription = \"deleting volume\")\n    public boolean deleteVolume(long volumeId, Account caller)\n            throws ConcurrentOperationException {\n\n        VolumeVO volume = _volsDao.findById(volumeId);\n        if (volume == null) {\n            throw new InvalidParameterValueException(\n                    \"Unable to aquire volume with ID: \" + volumeId);\n        }\n\n        if (!_snapshotMgr.canOperateOnVolume(volume)) {\n            throw new InvalidParameterValueException(\n                    \"There are snapshot creating on it, Unable to delete the volume\");\n        }\n\n        _accountMgr.checkAccess(caller, null, true, volume);\n\n        if (volume.getInstanceId() != null) {\n            throw new InvalidParameterValueException(\n                    \"Please specify a volume that is not attached to any VM.\");\n        }\n\n        if (volume.getState() == Volume.State.UploadOp) {\n            VolumeDataStoreVO volumeStore = _volumeStoreDao.findByVolume(volume\n                    .getId());\n            if (volumeStore.getDownloadState() == VMTemplateStorageResourceAssoc.Status.DOWNLOAD_IN_PROGRESS) {\n                throw new InvalidParameterValueException(\n                        \"Please specify a volume that is not uploading\");\n            }\n        }\n\n        try {\n            if (volume.getState() != Volume.State.Destroy && volume.getState() != Volume.State.Expunging && volume.getState() != Volume.State.Expunging) {\n                Long instanceId = volume.getInstanceId();\n                if (!volService.destroyVolume(volume.getId())) {\n                    return false;\n                }\n\n                VMInstanceVO vmInstance = _vmInstanceDao.findById(instanceId);\n                if (instanceId == null\n                        || (vmInstance.getType().equals(VirtualMachine.Type.User))) {\n                    // Decrement the resource count for volumes and primary storage belonging user VM's only\n                    _resourceLimitMgr.decrementResourceCount(volume.getAccountId(),\n                            ResourceType.volume);\n                    /* If volume is in primary storage, decrement primary storage count else decrement secondary\n                     storage count (in case of upload volume). */\n                    if (volume.getFolder() != null || volume.getPath() != null || volume.getState() == Volume.State.Allocated) {\n                        _resourceLimitMgr.decrementResourceCount(volume.getAccountId(), ResourceType.primary_storage,\n                                new Long(volume.getSize()));\n                    } else {\n                        _resourceLimitMgr.recalculateResourceCount(volume.getAccountId(), volume.getDomainId(),\n                                ResourceType.secondary_storage.getOrdinal());\n                    }\n\n                    // Log usage event for volumes belonging user VM's only\n                    UsageEventUtils.publishUsageEvent(EventTypes.EVENT_VOLUME_DELETE, volume.getAccountId(), volume.getDataCenterId(), volume.getId(), volume.getName(),\n                            Volume.class.getName(), volume.getUuid());\n                }\n            }\n            // expunge volume from primary if volume is on primary\n            VolumeInfo volOnPrimary = volFactory.getVolume(volume.getId(), DataStoreRole.Primary);\n            if (volOnPrimary != null) {\n                s_logger.info(\"Expunging volume \" + volume.getId() + \" from primary data store\");\n                AsyncCallFuture<VolumeApiResult> future = volService.expungeVolumeAsync(volOnPrimary);\n                future.get();\n            }\n            // expunge volume from secondary if volume is on image store\n            VolumeInfo volOnSecondary = volFactory.getVolume(volume.getId(), DataStoreRole.Image);\n            if (volOnSecondary != null) {\n                s_logger.info(\"Expunging volume \" + volume.getId() + \" from secondary data store\");\n                AsyncCallFuture<VolumeApiResult> future2 = volService.expungeVolumeAsync(volOnSecondary);\n                future2.get();\n            }\n        } catch (Exception e) {\n            s_logger.warn(\"Failed to expunge volume:\", e);\n            return false;\n        }\n\n        return true;\n    }","commit_id":"730d04508507409065a432e2aac931225947f268","url":"https://github.com/apache/cloudstack"},{"original_method":"@Override\n    public DiskProfile allocateRawVolume(Type type,\n            String name, DiskOfferingVO offering, Long size, VMInstanceVO vm, Account owner) {\n        if (size == null) {\n            size = offering.getDiskSize();\n        } else {\n            size = (size * 1024 * 1024 * 1024);\n        }\n        VolumeVO vol = new VolumeVO(type, name, vm.getDataCenterId(),\n                owner.getDomainId(), owner.getId(), offering.getId(), size,\n                offering.getMinIops(), offering.getMaxIops(), null);\n        if (vm != null) {\n            vol.setInstanceId(vm.getId());\n        }\n\n        if (type.equals(Type.ROOT)) {\n            vol.setDeviceId(0l);\n        } else {\n            vol.setDeviceId(1l);\n        }\n\n        vol.setFormat(getSupportedImageFormatForCluster(vm.getHypervisorType()));\n        vol = _volsDao.persist(vol);\n\n        // Save usage event and update resource count for user vm volumes\n        if (vm instanceof UserVm) {\n\n            UsageEventVO usageEvent = new UsageEventVO(\n                    EventTypes.EVENT_VOLUME_CREATE, vol.getAccountId(),\n                    vol.getDataCenterId(), vol.getId(), vol.getName(),\n                    offering.getId(), null, size);\n            _usageEventDao.persist(usageEvent);\n\n            _resourceLimitMgr.incrementResourceCount(vm.getAccountId(),\n                    ResourceType.volume);\n            _resourceLimitMgr.incrementResourceCount(vm.getAccountId(), ResourceType.primary_storage,\n                    new Long(vol.getSize()));\n        }\n        return toDiskProfile(vol, offering);\n    }","id":16924,"modified_method":"@Override\n    public DiskProfile allocateRawVolume(Type type,\n            String name, DiskOfferingVO offering, Long size, VMInstanceVO vm, Account owner) {\n        if (size == null) {\n            size = offering.getDiskSize();\n        } else {\n            size = (size * 1024 * 1024 * 1024);\n        }\n        VolumeVO vol = new VolumeVO(type, name, vm.getDataCenterId(),\n                owner.getDomainId(), owner.getId(), offering.getId(), size,\n                offering.getMinIops(), offering.getMaxIops(), null);\n        if (vm != null) {\n            vol.setInstanceId(vm.getId());\n        }\n\n        if (type.equals(Type.ROOT)) {\n            vol.setDeviceId(0l);\n        } else {\n            vol.setDeviceId(1l);\n        }\n\n        vol.setFormat(getSupportedImageFormatForCluster(vm.getHypervisorType()));\n        vol = _volsDao.persist(vol);\n\n        // Save usage event and update resource count for user vm volumes\n        if (vm instanceof UserVm) {\n\n            UsageEventUtils.publishUsageEvent(EventTypes.EVENT_VOLUME_CREATE, vol.getAccountId(), vol.getDataCenterId(), vol.getId(), vol.getName(), offering.getId(), null, size,\n                    Volume.class.getName(), vol.getUuid());\n\n            _resourceLimitMgr.incrementResourceCount(vm.getAccountId(),\n                    ResourceType.volume);\n            _resourceLimitMgr.incrementResourceCount(vm.getAccountId(), ResourceType.primary_storage,\n                    new Long(vol.getSize()));\n        }\n        return toDiskProfile(vol, offering);\n    }","commit_id":"730d04508507409065a432e2aac931225947f268","url":"https://github.com/apache/cloudstack"},{"original_method":"@Override\n    @DB\n    @ActionEvent(eventType = EventTypes.EVENT_VOLUME_CREATE, eventDescription = \"creating volume\", create = true)\n    public VolumeVO allocVolume(CreateVolumeCmd cmd)\n            throws ResourceAllocationException {\n        // FIXME: some of the scheduled event stuff might be missing here...\n        Account caller = CallContext.current().getCallingAccount();\n\n        long ownerId = cmd.getEntityOwnerId();\n        Boolean displayVolumeEnabled = cmd.getDisplayVolume();\n\n        // permission check\n        _accountMgr.checkAccess(caller, null, true,\n                _accountMgr.getActiveAccountById(ownerId));\n\n        // Check that the resource limit for volumes won't be exceeded\n        _resourceLimitMgr.checkResourceLimit(_accountMgr.getAccount(ownerId),\n                ResourceType.volume);\n\n        Long zoneId = cmd.getZoneId();\n        Long diskOfferingId = null;\n        DiskOfferingVO diskOffering = null;\n        Long size = null;\n        Long minIops = null;\n        Long maxIops = null;\n        // Volume VO used for extracting the source template id\n        VolumeVO parentVolume = null;\n\n        // validate input parameters before creating the volume\n        if ((cmd.getSnapshotId() == null && cmd.getDiskOfferingId() == null)\n                || (cmd.getSnapshotId() != null && cmd.getDiskOfferingId() != null)) {\n            throw new InvalidParameterValueException(\n                    \"Either disk Offering Id or snapshot Id must be passed whilst creating volume\");\n        }\n\n        if (cmd.getSnapshotId() == null) {// create a new volume\n\n            diskOfferingId = cmd.getDiskOfferingId();\n            size = cmd.getSize();\n            Long sizeInGB = size;\n            if (size != null) {\n                if (size > 0) {\n                    size = size * 1024 * 1024 * 1024; // user specify size in GB\n                } else {\n                    throw new InvalidParameterValueException(\n                            \"Disk size must be larger than 0\");\n                }\n            }\n\n            // Check that the the disk offering is specified\n            diskOffering = _diskOfferingDao.findById(diskOfferingId);\n            if ((diskOffering == null) || diskOffering.getRemoved() != null\n                    || !DiskOfferingVO.Type.Disk.equals(diskOffering.getType())) {\n                throw new InvalidParameterValueException(\n                        \"Please specify a valid disk offering.\");\n            }\n\n            if (diskOffering.isCustomized()) {\n                if (size == null) {\n                    throw new InvalidParameterValueException(\n                            \"This disk offering requires a custom size specified\");\n                }\n                if ((sizeInGB < _customDiskOfferingMinSize)\n                        || (sizeInGB > _customDiskOfferingMaxSize)) {\n                    throw new InvalidParameterValueException(\"Volume size: \"\n                            + sizeInGB + \"GB is out of allowed range. Max: \"\n                            + _customDiskOfferingMaxSize + \" Min:\"\n                            + _customDiskOfferingMinSize);\n                }\n            }\n\n            if (!diskOffering.isCustomized() && size != null) {\n                throw new InvalidParameterValueException(\n                        \"This disk offering does not allow custom size\");\n            }\n\n            if (diskOffering.getDomainId() == null) {\n                // do nothing as offering is public\n            } else {\n                _configMgr.checkDiskOfferingAccess(caller, diskOffering);\n            }\n\n            if (diskOffering.getDiskSize() > 0) {\n                size = diskOffering.getDiskSize();\n            }\n\n            Boolean isCustomizedIops = diskOffering.isCustomizedIops();\n\n            if (isCustomizedIops != null) {\n                if (isCustomizedIops) {\n                    minIops = cmd.getMinIops();\n                    maxIops = cmd.getMaxIops();\n\n                    if (minIops == null && maxIops == null) {\n                        minIops = 0L;\n                        maxIops = 0L;\n                    }\n                    else {\n                        if (minIops == null || minIops <= 0) {\n                            throw new InvalidParameterValueException(\"The min IOPS must be greater than 0.\");\n                        }\n\n                        if (maxIops == null) {\n                            maxIops = 0L;\n                        }\n\n                        if (minIops > maxIops) {\n                            throw new InvalidParameterValueException(\"The min IOPS must be less than or equal to the max IOPS.\");\n                        }\n                    }\n                }\n                else {\n                    minIops = diskOffering.getMinIops();\n                    maxIops = diskOffering.getMaxIops();\n                }\n            }\n\n            if (!validateVolumeSizeRange(size)) {// convert size from mb to gb\n                // for validation\n                throw new InvalidParameterValueException(\n                        \"Invalid size for custom volume creation: \" + size\n                        + \" ,max volume size is:\" + _maxVolumeSizeInGb);\n            }\n        } else { // create volume from snapshot\n            Long snapshotId = cmd.getSnapshotId();\n            SnapshotVO snapshotCheck = _snapshotDao.findById(snapshotId);\n            if (snapshotCheck == null) {\n                throw new InvalidParameterValueException(\n                        \"unable to find a snapshot with id \" + snapshotId);\n            }\n\n            if (snapshotCheck.getState() != Snapshot.State.BackedUp) {\n                throw new InvalidParameterValueException(\"Snapshot id=\"\n                        + snapshotId + \" is not in \" + Snapshot.State.BackedUp\n                        + \" state yet and can't be used for volume creation\");\n            }\n            parentVolume = _volsDao.findByIdIncludingRemoved(snapshotCheck.getVolumeId());\n\n            diskOfferingId = snapshotCheck.getDiskOfferingId();\n            diskOffering = _diskOfferingDao.findById(diskOfferingId);\n            zoneId = snapshotCheck.getDataCenterId();\n            size = snapshotCheck.getSize(); // ; disk offering is used for tags\n            // purposes\n\n            // check snapshot permissions\n            _accountMgr.checkAccess(caller, null, true, snapshotCheck);\n        }\n\n        if(displayVolumeEnabled == null){\n            displayVolumeEnabled = true;\n        } else{\n            if(!_accountMgr.isRootAdmin(caller.getType())){\n                throw new PermissionDeniedException( \"Cannot update parameter displayvolume, only admin permitted \");\n            }\n        }\n\n        // Check that the resource limit for primary storage won't be exceeded\n        _resourceLimitMgr.checkResourceLimit(_accountMgr.getAccount(ownerId), ResourceType.primary_storage,\n                new Long(size));\n\n        // Verify that zone exists\n        DataCenterVO zone = _dcDao.findById(zoneId);\n        if (zone == null) {\n            throw new InvalidParameterValueException(\n                    \"Unable to find zone by id \" + zoneId);\n        }\n\n        // Check if zone is disabled\n        if (Grouping.AllocationState.Disabled == zone.getAllocationState()\n                && !_accountMgr.isRootAdmin(caller.getType())) {\n            throw new PermissionDeniedException(\n                    \"Cannot perform this operation, Zone is currently disabled: \"\n                            + zoneId);\n        }\n\n        // If local storage is disabled then creation of volume with local disk\n        // offering not allowed\n        if (!zone.isLocalStorageEnabled() && diskOffering.getUseLocalStorage()) {\n            throw new InvalidParameterValueException(\n                    \"Zone is not configured to use local storage but volume's disk offering \"\n                            + diskOffering.getName() + \" uses it\");\n        }\n\n        String userSpecifiedName = cmd.getVolumeName();\n        if (userSpecifiedName == null) {\n            userSpecifiedName = getRandomVolumeName();\n        }\n\n        Transaction txn = Transaction.currentTxn();\n        txn.start();\n\n        VolumeVO volume = new VolumeVO(userSpecifiedName, -1, -1, -1, -1,\n                new Long(-1), null, null, 0, Volume.Type.DATADISK);\n        volume.setPoolId(null);\n        volume.setDataCenterId(zoneId);\n        volume.setPodId(null);\n        volume.setAccountId(ownerId);\n        volume.setDomainId(((caller == null) ? Domain.ROOT_DOMAIN : caller\n                .getDomainId()));\n        volume.setDiskOfferingId(diskOfferingId);\n        volume.setSize(size);\n        volume.setMinIops(minIops);\n        volume.setMaxIops(maxIops);\n        volume.setInstanceId(null);\n        volume.setUpdated(new Date());\n        volume.setDomainId((caller == null) ? Domain.ROOT_DOMAIN : caller\n                .getDomainId());\n        volume.setDisplayVolume(displayVolumeEnabled);\n        if (parentVolume != null) {\n            volume.setTemplateId(parentVolume.getTemplateId());\n            volume.setFormat(parentVolume.getFormat());\n        }  else {\n            volume.setTemplateId(null);\n        }\n\n        volume = _volsDao.persist(volume);\n\n        CallContext.current().setEventDetails(\"Volume Id: \" + volume.getId());\n\n        // Increment resource count during allocation; if actual creation fails,\n        // decrement it\n        _resourceLimitMgr.incrementResourceCount(volume.getAccountId(),\n                ResourceType.volume);\n        _resourceLimitMgr.incrementResourceCount(volume.getAccountId(), ResourceType.primary_storage,\n                new Long(volume.getSize()));\n\n        txn.commit();\n\n        return volume;\n    }","id":16925,"modified_method":"@Override\n    @DB\n    @ActionEvent(eventType = EventTypes.EVENT_VOLUME_CREATE, eventDescription = \"creating volume\", create = true)\n    public VolumeVO allocVolume(CreateVolumeCmd cmd)\n            throws ResourceAllocationException {\n        // FIXME: some of the scheduled event stuff might be missing here...\n        Account caller = CallContext.current().getCallingAccount();\n\n        long ownerId = cmd.getEntityOwnerId();\n        Boolean displayVolumeEnabled = cmd.getDisplayVolume();\n\n        // permission check\n        _accountMgr.checkAccess(caller, null, true,\n                _accountMgr.getActiveAccountById(ownerId));\n\n        // Check that the resource limit for volumes won't be exceeded\n        _resourceLimitMgr.checkResourceLimit(_accountMgr.getAccount(ownerId),\n                ResourceType.volume);\n\n        Long zoneId = cmd.getZoneId();\n        Long diskOfferingId = null;\n        DiskOfferingVO diskOffering = null;\n        Long size = null;\n        Long minIops = null;\n        Long maxIops = null;\n        // Volume VO used for extracting the source template id\n        VolumeVO parentVolume = null;\n\n        // validate input parameters before creating the volume\n        if ((cmd.getSnapshotId() == null && cmd.getDiskOfferingId() == null)\n                || (cmd.getSnapshotId() != null && cmd.getDiskOfferingId() != null)) {\n            throw new InvalidParameterValueException(\n                    \"Either disk Offering Id or snapshot Id must be passed whilst creating volume\");\n        }\n\n        if (cmd.getSnapshotId() == null) {// create a new volume\n\n            diskOfferingId = cmd.getDiskOfferingId();\n            size = cmd.getSize();\n            Long sizeInGB = size;\n            if (size != null) {\n                if (size > 0) {\n                    size = size * 1024 * 1024 * 1024; // user specify size in GB\n                } else {\n                    throw new InvalidParameterValueException(\n                            \"Disk size must be larger than 0\");\n                }\n            }\n\n            // Check that the the disk offering is specified\n            diskOffering = _diskOfferingDao.findById(diskOfferingId);\n            if ((diskOffering == null) || diskOffering.getRemoved() != null\n                    || !DiskOfferingVO.Type.Disk.equals(diskOffering.getType())) {\n                throw new InvalidParameterValueException(\n                        \"Please specify a valid disk offering.\");\n            }\n\n            if (diskOffering.isCustomized()) {\n                if (size == null) {\n                    throw new InvalidParameterValueException(\n                            \"This disk offering requires a custom size specified\");\n                }\n                if ((sizeInGB < _customDiskOfferingMinSize)\n                        || (sizeInGB > _customDiskOfferingMaxSize)) {\n                    throw new InvalidParameterValueException(\"Volume size: \"\n                            + sizeInGB + \"GB is out of allowed range. Max: \"\n                            + _customDiskOfferingMaxSize + \" Min:\"\n                            + _customDiskOfferingMinSize);\n                }\n            }\n\n            if (!diskOffering.isCustomized() && size != null) {\n                throw new InvalidParameterValueException(\n                        \"This disk offering does not allow custom size\");\n            }\n\n            if (diskOffering.getDomainId() == null) {\n                // do nothing as offering is public\n            } else {\n                _configMgr.checkDiskOfferingAccess(caller, diskOffering);\n            }\n\n            if (diskOffering.getDiskSize() > 0) {\n                size = diskOffering.getDiskSize();\n            }\n\n            Boolean isCustomizedIops = diskOffering.isCustomizedIops();\n\n            if (isCustomizedIops != null) {\n                if (isCustomizedIops) {\n                    minIops = cmd.getMinIops();\n                    maxIops = cmd.getMaxIops();\n\n                    if (minIops == null && maxIops == null) {\n                        minIops = 0L;\n                        maxIops = 0L;\n                    }\n                    else {\n                        if (minIops == null || minIops <= 0) {\n                            throw new InvalidParameterValueException(\"The min IOPS must be greater than 0.\");\n                        }\n\n                        if (maxIops == null) {\n                            maxIops = 0L;\n                        }\n\n                        if (minIops > maxIops) {\n                            throw new InvalidParameterValueException(\"The min IOPS must be less than or equal to the max IOPS.\");\n                        }\n                    }\n                }\n                else {\n                    minIops = diskOffering.getMinIops();\n                    maxIops = diskOffering.getMaxIops();\n                }\n            }\n\n            if (!validateVolumeSizeRange(size)) {// convert size from mb to gb\n                // for validation\n                throw new InvalidParameterValueException(\n                        \"Invalid size for custom volume creation: \" + size\n                        + \" ,max volume size is:\" + _maxVolumeSizeInGb);\n            }\n        } else { // create volume from snapshot\n            Long snapshotId = cmd.getSnapshotId();\n            SnapshotVO snapshotCheck = _snapshotDao.findById(snapshotId);\n            if (snapshotCheck == null) {\n                throw new InvalidParameterValueException(\n                        \"unable to find a snapshot with id \" + snapshotId);\n            }\n\n            if (snapshotCheck.getState() != Snapshot.State.BackedUp) {\n                throw new InvalidParameterValueException(\"Snapshot id=\"\n                        + snapshotId + \" is not in \" + Snapshot.State.BackedUp\n                        + \" state yet and can't be used for volume creation\");\n            }\n            parentVolume = _volsDao.findByIdIncludingRemoved(snapshotCheck.getVolumeId());\n\n            diskOfferingId = snapshotCheck.getDiskOfferingId();\n            diskOffering = _diskOfferingDao.findById(diskOfferingId);\n            zoneId = snapshotCheck.getDataCenterId();\n            size = snapshotCheck.getSize(); // ; disk offering is used for tags\n            // purposes\n\n            // check snapshot permissions\n            _accountMgr.checkAccess(caller, null, true, snapshotCheck);\n        }\n\n        if(displayVolumeEnabled == null){\n            displayVolumeEnabled = true;\n        } else{\n            if(!_accountMgr.isRootAdmin(caller.getType())){\n                throw new PermissionDeniedException( \"Cannot update parameter displayvolume, only admin permitted \");\n            }\n        }\n\n        // Check that the resource limit for primary storage won't be exceeded\n        _resourceLimitMgr.checkResourceLimit(_accountMgr.getAccount(ownerId), ResourceType.primary_storage,\n                new Long(size));\n\n        // Verify that zone exists\n        DataCenterVO zone = _dcDao.findById(zoneId);\n        if (zone == null) {\n            throw new InvalidParameterValueException(\n                    \"Unable to find zone by id \" + zoneId);\n        }\n\n        // Check if zone is disabled\n        if (Grouping.AllocationState.Disabled == zone.getAllocationState()\n                && !_accountMgr.isRootAdmin(caller.getType())) {\n            throw new PermissionDeniedException(\n                    \"Cannot perform this operation, Zone is currently disabled: \"\n                            + zoneId);\n        }\n\n        // If local storage is disabled then creation of volume with local disk\n        // offering not allowed\n        if (!zone.isLocalStorageEnabled() && diskOffering.getUseLocalStorage()) {\n            throw new InvalidParameterValueException(\n                    \"Zone is not configured to use local storage but volume's disk offering \"\n                            + diskOffering.getName() + \" uses it\");\n        }\n\n        String userSpecifiedName = cmd.getVolumeName();\n        if (userSpecifiedName == null) {\n            userSpecifiedName = getRandomVolumeName();\n        }\n\n        Transaction txn = Transaction.currentTxn();\n        txn.start();\n\n        VolumeVO volume = new VolumeVO(userSpecifiedName, -1, -1, -1, -1,\n                new Long(-1), null, null, 0, Volume.Type.DATADISK);\n        volume.setPoolId(null);\n        volume.setDataCenterId(zoneId);\n        volume.setPodId(null);\n        volume.setAccountId(ownerId);\n        volume.setDomainId(((caller == null) ? Domain.ROOT_DOMAIN : caller\n                .getDomainId()));\n        volume.setDiskOfferingId(diskOfferingId);\n        volume.setSize(size);\n        volume.setMinIops(minIops);\n        volume.setMaxIops(maxIops);\n        volume.setInstanceId(null);\n        volume.setUpdated(new Date());\n        volume.setDomainId((caller == null) ? Domain.ROOT_DOMAIN : caller\n                .getDomainId());\n        volume.setDisplayVolume(displayVolumeEnabled);\n        if (parentVolume != null) {\n            volume.setTemplateId(parentVolume.getTemplateId());\n            volume.setFormat(parentVolume.getFormat());\n        }  else {\n            volume.setTemplateId(null);\n        }\n\n        volume = _volsDao.persist(volume);\n        if (cmd.getSnapshotId() == null) {\n            // for volume created from snapshot, create usage event after volume creation\n            UsageEventUtils.publishUsageEvent(EventTypes.EVENT_VOLUME_CREATE, volume.getAccountId(), volume.getDataCenterId(), volume.getId(), volume.getName(), diskOfferingId,\n                    null, size, Volume.class.getName(), volume.getUuid());\n        }\n\n        CallContext.current().setEventDetails(\"Volume Id: \" + volume.getId());\n\n        // Increment resource count during allocation; if actual creation fails,\n        // decrement it\n        _resourceLimitMgr.incrementResourceCount(volume.getAccountId(),\n                ResourceType.volume);\n        _resourceLimitMgr.incrementResourceCount(volume.getAccountId(), ResourceType.primary_storage,\n                new Long(volume.getSize()));\n\n        txn.commit();\n\n        return volume;\n    }","commit_id":"730d04508507409065a432e2aac931225947f268","url":"https://github.com/apache/cloudstack"},{"original_method":"@Override\n    public  DiskProfile allocateTemplatedVolume(\n            Type type, String name, DiskOfferingVO offering,\n            VMTemplateVO template, VMInstanceVO vm, Account owner) {\n        assert (template.getFormat() != ImageFormat.ISO) : \"ISO is not a template really....\";\n\n        Long size = _tmpltMgr.getTemplateSize(template.getId(), vm.getDataCenterId());\n\n        VolumeVO vol = new VolumeVO(type, name, vm.getDataCenterId(),\n                owner.getDomainId(), owner.getId(), offering.getId(), size,\n                offering.getMinIops(), offering.getMaxIops(), null);\n        vol.setFormat(getSupportedImageFormatForCluster(template.getHypervisorType()));\n        if (vm != null) {\n            vol.setInstanceId(vm.getId());\n        }\n        vol.setTemplateId(template.getId());\n\n        if (type.equals(Type.ROOT)) {\n            vol.setDeviceId(0l);\n            if (!vm.getType().equals(VirtualMachine.Type.User)) {\n                vol.setRecreatable(true);\n            }\n        } else {\n            vol.setDeviceId(1l);\n        }\n\n        vol = _volsDao.persist(vol);\n\n        // Create event and update resource count for volumes if vm is a user vm\n        if (vm instanceof UserVm) {\n\n            Long offeringId = null;\n\n            if (offering.getType() == DiskOfferingVO.Type.Disk) {\n                offeringId = offering.getId();\n            }\n\n            UsageEventVO usageEvent = new UsageEventVO(\n                    EventTypes.EVENT_VOLUME_CREATE, vol.getAccountId(),\n                    vol.getDataCenterId(), vol.getId(), vol.getName(),\n                    offeringId, template.getId(), vol.getSize());\n            _usageEventDao.persist(usageEvent);\n\n            _resourceLimitMgr.incrementResourceCount(vm.getAccountId(),\n                    ResourceType.volume);\n            _resourceLimitMgr.incrementResourceCount(vm.getAccountId(), ResourceType.primary_storage,\n                    new Long(vol.getSize()));\n        }\n        return toDiskProfile(vol, offering);\n    }","id":16926,"modified_method":"@Override\n    public  DiskProfile allocateTemplatedVolume(\n            Type type, String name, DiskOfferingVO offering,\n            VMTemplateVO template, VMInstanceVO vm, Account owner) {\n        assert (template.getFormat() != ImageFormat.ISO) : \"ISO is not a template really....\";\n\n        Long size = _tmpltMgr.getTemplateSize(template.getId(), vm.getDataCenterId());\n\n        VolumeVO vol = new VolumeVO(type, name, vm.getDataCenterId(),\n                owner.getDomainId(), owner.getId(), offering.getId(), size,\n                offering.getMinIops(), offering.getMaxIops(), null);\n        vol.setFormat(getSupportedImageFormatForCluster(template.getHypervisorType()));\n        if (vm != null) {\n            vol.setInstanceId(vm.getId());\n        }\n        vol.setTemplateId(template.getId());\n\n        if (type.equals(Type.ROOT)) {\n            vol.setDeviceId(0l);\n            if (!vm.getType().equals(VirtualMachine.Type.User)) {\n                vol.setRecreatable(true);\n            }\n        } else {\n            vol.setDeviceId(1l);\n        }\n\n        vol = _volsDao.persist(vol);\n\n        // Create event and update resource count for volumes if vm is a user vm\n        if (vm instanceof UserVm) {\n\n            Long offeringId = null;\n\n            if (offering.getType() == DiskOfferingVO.Type.Disk) {\n                offeringId = offering.getId();\n            }\n\n            UsageEventUtils.publishUsageEvent(EventTypes.EVENT_VOLUME_CREATE, vol.getAccountId(), vol.getDataCenterId(), vol.getId(), vol.getName(), offeringId, null, size,\n                    Volume.class.getName(), vol.getUuid());\n\n            _resourceLimitMgr.incrementResourceCount(vm.getAccountId(),\n                    ResourceType.volume);\n            _resourceLimitMgr.incrementResourceCount(vm.getAccountId(), ResourceType.primary_storage,\n                    new Long(vol.getSize()));\n        }\n        return toDiskProfile(vol, offering);\n    }","commit_id":"730d04508507409065a432e2aac931225947f268","url":"https://github.com/apache/cloudstack"},{"original_method":"@DB\n    public VolumeInfo createVolume(VolumeInfo volume, VMInstanceVO vm,\n            VMTemplateVO template, DataCenterVO dc, HostPodVO pod,\n            Long clusterId, ServiceOfferingVO offering,\n            DiskOfferingVO diskOffering, List<StoragePool> avoids,\n            long size, HypervisorType hyperType) {\n        StoragePool pool = null;\n\n        if (diskOffering != null && diskOffering.isCustomized()) {\n            diskOffering.setDiskSize(size);\n        }\n\n        DiskProfile dskCh = null;\n        if (volume.getVolumeType() == Type.ROOT\n                && Storage.ImageFormat.ISO != template.getFormat()) {\n            dskCh = createDiskCharacteristics(volume, template, dc, offering);\n        } else {\n            dskCh = createDiskCharacteristics(volume, template, dc,\n                    diskOffering);\n        }\n\n        dskCh.setHyperType(hyperType);\n\n        final HashSet<StoragePool> avoidPools = new HashSet<StoragePool>(\n                avoids);\n\n        pool = storageMgr.findStoragePool(dskCh, dc, pod, clusterId, vm.getHostId(),\n                vm, avoidPools);\n        if (pool == null) {\n            s_logger.warn(\"Unable to find storage pool when create volume \"\n                    + volume.getName());\n            throw new CloudRuntimeException(\"Unable to find storage pool when create volume\" + volume.getName());\n        }\n\n        if (s_logger.isDebugEnabled()) {\n            s_logger.debug(\"Trying to create \" + volume + \" on \" + pool);\n        }\n        DataStore store = dataStoreMgr.getDataStore(pool.getId(), DataStoreRole.Primary);\n        AsyncCallFuture<VolumeApiResult> future = null;\n        boolean isNotCreatedFromTemplate = volume.getTemplateId() == null ? true : false;\n        if (isNotCreatedFromTemplate) {\n            future = volService.createVolumeAsync(volume, store);\n        } else {\n            TemplateInfo templ = tmplFactory.getTemplate(template.getId(), DataStoreRole.Image);\n            future = volService.createVolumeFromTemplateAsync(volume, store.getId(), templ);\n        }\n        try {\n            VolumeApiResult result = future.get();\n            if (result.isFailed()) {\n                s_logger.debug(\"create volume failed: \" + result.getResult());\n                throw new CloudRuntimeException(\"create volume failed:\" + result.getResult());\n            }\n\n\n            UsageEventVO usageEvent = new UsageEventVO(\n                    EventTypes.EVENT_VOLUME_CREATE, volume.getAccountId(),\n                    volume.getDataCenterId(), volume.getId(), volume.getName(),\n                    volume.getDiskOfferingId(), null, volume.getSize());\n            _usageEventDao.persist(usageEvent);\n            return result.getVolume();\n        } catch (InterruptedException e) {\n            s_logger.error(\"create volume failed\", e);\n            throw new CloudRuntimeException(\"create volume failed\", e);\n        } catch (ExecutionException e) {\n            s_logger.error(\"create volume failed\", e);\n            throw new CloudRuntimeException(\"create volume failed\", e);\n        }\n\n    }","id":16927,"modified_method":"@DB\n    public VolumeInfo createVolume(VolumeInfo volume, VMInstanceVO vm,\n            VMTemplateVO template, DataCenterVO dc, HostPodVO pod,\n            Long clusterId, ServiceOfferingVO offering,\n            DiskOfferingVO diskOffering, List<StoragePool> avoids,\n            long size, HypervisorType hyperType) {\n        StoragePool pool = null;\n\n        if (diskOffering != null && diskOffering.isCustomized()) {\n            diskOffering.setDiskSize(size);\n        }\n\n        DiskProfile dskCh = null;\n        if (volume.getVolumeType() == Type.ROOT\n                && Storage.ImageFormat.ISO != template.getFormat()) {\n            dskCh = createDiskCharacteristics(volume, template, dc, offering);\n        } else {\n            dskCh = createDiskCharacteristics(volume, template, dc,\n                    diskOffering);\n        }\n\n        dskCh.setHyperType(hyperType);\n\n        final HashSet<StoragePool> avoidPools = new HashSet<StoragePool>(\n                avoids);\n\n        pool = storageMgr.findStoragePool(dskCh, dc, pod, clusterId, vm.getHostId(),\n                vm, avoidPools);\n        if (pool == null) {\n            s_logger.warn(\"Unable to find storage pool when create volume \"\n                    + volume.getName());\n            throw new CloudRuntimeException(\"Unable to find storage pool when create volume\" + volume.getName());\n        }\n\n        if (s_logger.isDebugEnabled()) {\n            s_logger.debug(\"Trying to create \" + volume + \" on \" + pool);\n        }\n        DataStore store = dataStoreMgr.getDataStore(pool.getId(), DataStoreRole.Primary);\n        AsyncCallFuture<VolumeApiResult> future = null;\n        boolean isNotCreatedFromTemplate = volume.getTemplateId() == null ? true : false;\n        if (isNotCreatedFromTemplate) {\n            future = volService.createVolumeAsync(volume, store);\n        } else {\n            TemplateInfo templ = tmplFactory.getTemplate(template.getId(), DataStoreRole.Image);\n            future = volService.createVolumeFromTemplateAsync(volume, store.getId(), templ);\n        }\n        try {\n            VolumeApiResult result = future.get();\n            if (result.isFailed()) {\n                s_logger.debug(\"create volume failed: \" + result.getResult());\n                throw new CloudRuntimeException(\"create volume failed:\" + result.getResult());\n            }\n\n            return result.getVolume();\n        } catch (InterruptedException e) {\n            s_logger.error(\"create volume failed\", e);\n            throw new CloudRuntimeException(\"create volume failed\", e);\n        } catch (ExecutionException e) {\n            s_logger.error(\"create volume failed\", e);\n            throw new CloudRuntimeException(\"create volume failed\", e);\n        }\n\n    }","commit_id":"730d04508507409065a432e2aac931225947f268","url":"https://github.com/apache/cloudstack"},{"original_method":"@Override\n    @DB\n    @ActionEvent(eventType = EventTypes.EVENT_VOLUME_RESIZE, eventDescription = \"resizing volume\", async = true)\n    public VolumeVO resizeVolume(ResizeVolumeCmd cmd)\n            throws ResourceAllocationException {\n        Long newSize = null;\n        boolean shrinkOk = cmd.getShrinkOk();\n\n        VolumeVO volume = _volsDao.findById(cmd.getEntityId());\n        if (volume == null) {\n            throw new InvalidParameterValueException(\"No such volume\");\n        }\n\n        DiskOfferingVO diskOffering = _diskOfferingDao.findById(volume\n                .getDiskOfferingId());\n        DiskOfferingVO newDiskOffering = null;\n\n        newDiskOffering = _diskOfferingDao.findById(cmd.getNewDiskOfferingId());\n\n        /*\n         * Volumes with no hypervisor have never been assigned, and can be\n         * resized by recreating. perhaps in the future we can just update the\n         * db entry for the volume\n         */\n        if (_volsDao.getHypervisorType(volume.getId()) == HypervisorType.None) {\n            throw new InvalidParameterValueException(\n                    \"Can't resize a volume that has never been attached, not sure which hypervisor type. Recreate volume to resize.\");\n        }\n\n        /* Only works for KVM/Xen for now */\n        if (_volsDao.getHypervisorType(volume.getId()) != HypervisorType.KVM\n                && _volsDao.getHypervisorType(volume.getId()) != HypervisorType.XenServer\n                && _volsDao.getHypervisorType(volume.getId()) != HypervisorType.VMware) {\n            throw new InvalidParameterValueException(\n                    \"Cloudstack currently only supports volumes marked as KVM or XenServer hypervisor for resize\");\n        }\n\n\n        if (volume.getState() != Volume.State.Ready) {\n            throw new InvalidParameterValueException(\n                    \"Volume should be in ready state before attempting a resize\");\n        }\n\n        if (!volume.getVolumeType().equals(Volume.Type.DATADISK)) {\n            throw new InvalidParameterValueException(\n                    \"Can only resize DATA volumes\");\n        }\n\n        /*\n         * figure out whether or not a new disk offering or size parameter is\n         * required, get the correct size value\n         */\n        if (newDiskOffering == null) {\n            if (diskOffering.isCustomized()) {\n                newSize = cmd.getSize();\n\n                if (newSize == null) {\n                    throw new InvalidParameterValueException(\n                            \"new offering is of custom size, need to specify a size\");\n                }\n\n                newSize = (newSize << 30);\n            } else {\n                throw new InvalidParameterValueException(\"current offering\"\n                        + volume.getDiskOfferingId()\n                        + \" cannot be resized, need to specify a disk offering\");\n            }\n        } else {\n\n            if (newDiskOffering.getRemoved() != null\n                    || !DiskOfferingVO.Type.Disk.equals(newDiskOffering\n                            .getType())) {\n                throw new InvalidParameterValueException(\n                        \"Disk offering ID is missing or invalid\");\n            }\n\n            if (diskOffering.getTags() != null) {\n                if (!newDiskOffering.getTags().equals(diskOffering.getTags())) {\n                    throw new InvalidParameterValueException(\n                            \"Tags on new and old disk offerings must match\");\n                }\n            } else if (newDiskOffering.getTags() != null) {\n                throw new InvalidParameterValueException(\n                        \"There are no tags on current disk offering, new disk offering needs to have no tags\");\n            }\n\n            if (newDiskOffering.getDomainId() == null) {\n                // do nothing as offering is public\n            } else {\n                _configMgr.checkDiskOfferingAccess(CallContext.current()\n                        .getCallingAccount(), newDiskOffering);\n            }\n\n            if (newDiskOffering.isCustomized()) {\n                newSize = cmd.getSize();\n\n                if (newSize == null) {\n                    throw new InvalidParameterValueException(\n                            \"new offering is of custom size, need to specify a size\");\n                }\n\n                newSize = (newSize << 30);\n            } else {\n                newSize = newDiskOffering.getDiskSize();\n            }\n        }\n\n        if (newSize == null) {\n            throw new InvalidParameterValueException(\n                    \"could not detect a size parameter or fetch one from the diskofferingid parameter\");\n        }\n\n        if (!validateVolumeSizeRange(newSize)) {\n            throw new InvalidParameterValueException(\n                    \"Requested size out of range\");\n        }\n\n        /* does the caller have the authority to act on this volume? */\n        _accountMgr.checkAccess(CallContext.current().getCallingAccount(), null, true,\n                volume);\n\n        UserVmVO userVm = _userVmDao.findById(volume.getInstanceId());\n\n        long currentSize = volume.getSize();\n\n        /*\n         * lets make certain they (think they) know what they're doing if they\n         * want to shrink, by forcing them to provide the shrinkok parameter.\n         * This will be checked again at the hypervisor level where we can see\n         * the actual disk size\n         */\n        if (currentSize > newSize && !shrinkOk) {\n            throw new InvalidParameterValueException(\n                    \"Going from existing size of \"\n                            + currentSize\n                            + \" to size of \"\n                            + newSize\n                            + \" would shrink the volume, need to sign off by supplying the shrinkok parameter with value of true\");\n        }\n\n        if (!shrinkOk) {\n            /* Check resource limit for this account on primary storage resource */\n            _resourceLimitMgr.checkResourceLimit(_accountMgr.getAccount(volume.getAccountId()),\n                    ResourceType.primary_storage, new Long(newSize - currentSize));\n        }\n\n        /*\n         * get a list of hosts to send the commands to, try the system the\n         * associated vm is running on first, then the last known place it ran.\n         * If not attached to a userVm, we pass 'none' and resizevolume.sh is ok\n         * with that since it only needs the vm name to live resize\n         */\n        long[] hosts = null;\n        String instanceName = \"none\";\n        if (userVm != null) {\n            instanceName = userVm.getInstanceName();\n            if (userVm.getHostId() != null) {\n                hosts = new long[] { userVm.getHostId() };\n            } else if (userVm.getLastHostId() != null) {\n                hosts = new long[] { userVm.getLastHostId() };\n            }\n\n            /* Xen only works offline, SR does not support VDI.resizeOnline */\n            if (_volsDao.getHypervisorType(volume.getId()) == HypervisorType.XenServer\n                    && !userVm.getState().equals(State.Stopped)) {\n                throw new InvalidParameterValueException(\n                        \"VM must be stopped or disk detached in order to resize with the Xen HV\");\n            }\n        }\n\n        ResizeVolumePayload payload = new ResizeVolumePayload(newSize, shrinkOk, instanceName, hosts);\n\n        try {\n            VolumeInfo vol = volFactory.getVolume(volume.getId());\n            vol.addPayload(payload);\n\n            AsyncCallFuture<VolumeApiResult> future = volService.resize(vol);\n            future.get();\n            volume = _volsDao.findById(volume.getId());\n\n            if (newDiskOffering != null) {\n                volume.setDiskOfferingId(cmd.getNewDiskOfferingId());\n            }\n            _volsDao.update(volume.getId(), volume);\n            // Log usage event for volumes belonging user VM's only\n            UsageEventVO usageEvent = new UsageEventVO(\n                    EventTypes.EVENT_VOLUME_RESIZE, volume.getAccountId(),\n                    volume.getDataCenterId(), volume.getId(), volume.getName(), volume.getDiskOfferingId(), volume.getTemplateId(), volume.getSize());\n            _usageEventDao.persist(usageEvent);\n\n            /* Update resource count for the account on primary storage resource */\n            if (!shrinkOk) {\n                _resourceLimitMgr.incrementResourceCount(volume.getAccountId(), ResourceType.primary_storage,\n                        new Long(newSize - currentSize));\n            } else {\n                _resourceLimitMgr.decrementResourceCount(volume.getAccountId(), ResourceType.primary_storage,\n                        new Long(currentSize - newSize));\n            }\n            return volume;\n        } catch (InterruptedException e) {\n            s_logger.debug(\"failed get resize volume result\", e);\n        } catch (ExecutionException e) {\n            s_logger.debug(\"failed get resize volume result\", e);\n        } catch (Exception e) {\n            s_logger.debug(\"failed get resize volume result\", e);\n        }\n\n        return null;\n    }","id":16928,"modified_method":"@Override\n    @DB\n    @ActionEvent(eventType = EventTypes.EVENT_VOLUME_RESIZE, eventDescription = \"resizing volume\", async = true)\n    public VolumeVO resizeVolume(ResizeVolumeCmd cmd)\n            throws ResourceAllocationException {\n        Long newSize = null;\n        boolean shrinkOk = cmd.getShrinkOk();\n\n        VolumeVO volume = _volsDao.findById(cmd.getEntityId());\n        if (volume == null) {\n            throw new InvalidParameterValueException(\"No such volume\");\n        }\n\n        DiskOfferingVO diskOffering = _diskOfferingDao.findById(volume\n                .getDiskOfferingId());\n        DiskOfferingVO newDiskOffering = null;\n\n        newDiskOffering = _diskOfferingDao.findById(cmd.getNewDiskOfferingId());\n\n        /*\n         * Volumes with no hypervisor have never been assigned, and can be\n         * resized by recreating. perhaps in the future we can just update the\n         * db entry for the volume\n         */\n        if (_volsDao.getHypervisorType(volume.getId()) == HypervisorType.None) {\n            throw new InvalidParameterValueException(\n                    \"Can't resize a volume that has never been attached, not sure which hypervisor type. Recreate volume to resize.\");\n        }\n\n        /* Only works for KVM/Xen for now */\n        if (_volsDao.getHypervisorType(volume.getId()) != HypervisorType.KVM\n                && _volsDao.getHypervisorType(volume.getId()) != HypervisorType.XenServer\n                && _volsDao.getHypervisorType(volume.getId()) != HypervisorType.VMware) {\n            throw new InvalidParameterValueException(\n                    \"Cloudstack currently only supports volumes marked as KVM or XenServer hypervisor for resize\");\n        }\n\n\n        if (volume.getState() != Volume.State.Ready) {\n            throw new InvalidParameterValueException(\n                    \"Volume should be in ready state before attempting a resize\");\n        }\n\n        if (!volume.getVolumeType().equals(Volume.Type.DATADISK)) {\n            throw new InvalidParameterValueException(\n                    \"Can only resize DATA volumes\");\n        }\n\n        /*\n         * figure out whether or not a new disk offering or size parameter is\n         * required, get the correct size value\n         */\n        if (newDiskOffering == null) {\n            if (diskOffering.isCustomized()) {\n                newSize = cmd.getSize();\n\n                if (newSize == null) {\n                    throw new InvalidParameterValueException(\n                            \"new offering is of custom size, need to specify a size\");\n                }\n\n                newSize = (newSize << 30);\n            } else {\n                throw new InvalidParameterValueException(\"current offering\"\n                        + volume.getDiskOfferingId()\n                        + \" cannot be resized, need to specify a disk offering\");\n            }\n        } else {\n\n            if (newDiskOffering.getRemoved() != null\n                    || !DiskOfferingVO.Type.Disk.equals(newDiskOffering\n                            .getType())) {\n                throw new InvalidParameterValueException(\n                        \"Disk offering ID is missing or invalid\");\n            }\n\n            if (diskOffering.getTags() != null) {\n                if (!newDiskOffering.getTags().equals(diskOffering.getTags())) {\n                    throw new InvalidParameterValueException(\n                            \"Tags on new and old disk offerings must match\");\n                }\n            } else if (newDiskOffering.getTags() != null) {\n                throw new InvalidParameterValueException(\n                        \"There are no tags on current disk offering, new disk offering needs to have no tags\");\n            }\n\n            if (newDiskOffering.getDomainId() == null) {\n                // do nothing as offering is public\n            } else {\n                _configMgr.checkDiskOfferingAccess(CallContext.current()\n                        .getCallingAccount(), newDiskOffering);\n            }\n\n            if (newDiskOffering.isCustomized()) {\n                newSize = cmd.getSize();\n\n                if (newSize == null) {\n                    throw new InvalidParameterValueException(\n                            \"new offering is of custom size, need to specify a size\");\n                }\n\n                newSize = (newSize << 30);\n            } else {\n                newSize = newDiskOffering.getDiskSize();\n            }\n        }\n\n        if (newSize == null) {\n            throw new InvalidParameterValueException(\n                    \"could not detect a size parameter or fetch one from the diskofferingid parameter\");\n        }\n\n        if (!validateVolumeSizeRange(newSize)) {\n            throw new InvalidParameterValueException(\n                    \"Requested size out of range\");\n        }\n\n        /* does the caller have the authority to act on this volume? */\n        _accountMgr.checkAccess(CallContext.current().getCallingAccount(), null, true,\n                volume);\n\n        UserVmVO userVm = _userVmDao.findById(volume.getInstanceId());\n\n        long currentSize = volume.getSize();\n\n        /*\n         * lets make certain they (think they) know what they're doing if they\n         * want to shrink, by forcing them to provide the shrinkok parameter.\n         * This will be checked again at the hypervisor level where we can see\n         * the actual disk size\n         */\n        if (currentSize > newSize && !shrinkOk) {\n            throw new InvalidParameterValueException(\n                    \"Going from existing size of \"\n                            + currentSize\n                            + \" to size of \"\n                            + newSize\n                            + \" would shrink the volume, need to sign off by supplying the shrinkok parameter with value of true\");\n        }\n\n        if (!shrinkOk) {\n            /* Check resource limit for this account on primary storage resource */\n            _resourceLimitMgr.checkResourceLimit(_accountMgr.getAccount(volume.getAccountId()),\n                    ResourceType.primary_storage, new Long(newSize - currentSize));\n        }\n\n        /*\n         * get a list of hosts to send the commands to, try the system the\n         * associated vm is running on first, then the last known place it ran.\n         * If not attached to a userVm, we pass 'none' and resizevolume.sh is ok\n         * with that since it only needs the vm name to live resize\n         */\n        long[] hosts = null;\n        String instanceName = \"none\";\n        if (userVm != null) {\n            instanceName = userVm.getInstanceName();\n            if (userVm.getHostId() != null) {\n                hosts = new long[] { userVm.getHostId() };\n            } else if (userVm.getLastHostId() != null) {\n                hosts = new long[] { userVm.getLastHostId() };\n            }\n\n            /* Xen only works offline, SR does not support VDI.resizeOnline */\n            if (_volsDao.getHypervisorType(volume.getId()) == HypervisorType.XenServer\n                    && !userVm.getState().equals(State.Stopped)) {\n                throw new InvalidParameterValueException(\n                        \"VM must be stopped or disk detached in order to resize with the Xen HV\");\n            }\n        }\n\n        ResizeVolumePayload payload = new ResizeVolumePayload(newSize, shrinkOk, instanceName, hosts);\n\n        try {\n            VolumeInfo vol = volFactory.getVolume(volume.getId());\n            vol.addPayload(payload);\n\n            AsyncCallFuture<VolumeApiResult> future = volService.resize(vol);\n            future.get();\n            volume = _volsDao.findById(volume.getId());\n\n            if (newDiskOffering != null) {\n                volume.setDiskOfferingId(cmd.getNewDiskOfferingId());\n            }\n            _volsDao.update(volume.getId(), volume);\n            // Log usage event for volumes belonging user VM's only\n            UsageEventUtils.publishUsageEvent(EventTypes.EVENT_VOLUME_RESIZE, volume.getAccountId(), volume.getDataCenterId(), volume.getId(), volume.getName(),\n                    volume.getDiskOfferingId(), volume.getTemplateId(), volume.getSize(), Volume.class.getName(), volume.getUuid());\n\n            /* Update resource count for the account on primary storage resource */\n            if (!shrinkOk) {\n                _resourceLimitMgr.incrementResourceCount(volume.getAccountId(), ResourceType.primary_storage,\n                        new Long(newSize - currentSize));\n            } else {\n                _resourceLimitMgr.decrementResourceCount(volume.getAccountId(), ResourceType.primary_storage,\n                        new Long(currentSize - newSize));\n            }\n            return volume;\n        } catch (InterruptedException e) {\n            s_logger.debug(\"failed get resize volume result\", e);\n        } catch (ExecutionException e) {\n            s_logger.debug(\"failed get resize volume result\", e);\n        } catch (Exception e) {\n            s_logger.debug(\"failed get resize volume result\", e);\n        }\n\n        return null;\n    }","commit_id":"730d04508507409065a432e2aac931225947f268","url":"https://github.com/apache/cloudstack"},{"original_method":"String getStatus()\n    {\n        StringBuilder result = new StringBuilder();\n        String prefix = \"\";\n        for ( ZooKeeper zk : keeper )\n        {\n            result.append( prefix ).append( zk ).append( \": \" ).append( zk.getStatus() );\n            prefix = \", \";\n        }\n        return result.toString();\n    }","id":16929,"modified_method":"String getStatus()\n    {\n        StringBuilder result = new StringBuilder();\n        String prefix = \"\";\n        for ( ZooKeeper zk : keeper )\n        {\n            result.append( prefix ).append( zk ).append( \": \" ).append( zk.getStatus() );\n            prefix = \"; \";\n        }\n        return result.toString();\n    }","commit_id":"7555a6b6d320df5b60a2a57e5954772926e3cb52","url":"https://github.com/neo4j/neo4j"},{"original_method":"@SuppressWarnings( \"boxing\" )\n        private String status( QuorumMXBean quorumBean )\n        {\n            return String.format( \"name=%s, size=%s\", quorumBean.getName(),\n                    quorumBean.getQuorumSize() );\n        }","id":16930,"modified_method":"@SuppressWarnings( \"boxing\" )\n        private String status( QuorumMXBean quorumBean )\n        {\n            long time = System.currentTimeMillis();\n            String name = quorumBean.getName();\n            int size = quorumBean.getQuorumSize();\n            return String.format( \"name=%s, size=%s, time=%s (+%sms)\", name, size, format( time ),\n                    System.currentTimeMillis() - time );\n        }","commit_id":"7555a6b6d320df5b60a2a57e5954772926e3cb52","url":"https://github.com/neo4j/neo4j"},{"original_method":"StartupFailureException( Throwable cause )\n        {\n            super( cause );\n        }","id":16931,"modified_method":"StartupFailureException( Throwable cause )\n        {\n            super( cause );\n            timestamp = new Date().getTime();\n        }","commit_id":"7555a6b6d320df5b60a2a57e5954772926e3cb52","url":"https://github.com/neo4j/neo4j"},{"original_method":"@Override\n        public void println( String string )\n        {\n            super.println( timestamp.get().format( new Date() ) + string );\n        }","id":16932,"modified_method":"@Override\n        public void println( String string )\n        {\n            super.println( format( new Date() ) + string );\n        }","commit_id":"7555a6b6d320df5b60a2a57e5954772926e3cb52","url":"https://github.com/neo4j/neo4j"},{"original_method":"IllegalStateException format( StartupFailureException e )\n    {\n        throw new IllegalStateException( \"database failed to start\", e.getCause() );\n    }","id":16933,"modified_method":"IllegalStateException format( StartupFailureException e )\n    {\n    \treturn e.format();\n    }","commit_id":"7555a6b6d320df5b60a2a57e5954772926e3cb52","url":"https://github.com/neo4j/neo4j"},{"original_method":"IllegalStateException format( LocalhostZooKeeperCluster zooKeeper )\n        {\n            Throwable cause = getCause();\n            String message = \"failed to start database\";\n            if ( cause instanceof ZooKeeperException )\n            {\n                message += \", ZooKeeper status: \" + zooKeeper.getStatus();\n            }\n            return new IllegalStateException( message, cause );\n        }","id":16934,"modified_method":"IllegalStateException format( LocalhostZooKeeperCluster zooKeeper )\n        {\n            Throwable cause = getCause();\n            String message = message();\n            if ( cause instanceof ZooKeeperException )\n            {\n                message += \". ZooKeeper status: \" + zooKeeper.getStatus();\n            }\n            return new IllegalStateException( message, cause );\n        }","commit_id":"7555a6b6d320df5b60a2a57e5954772926e3cb52","url":"https://github.com/neo4j/neo4j"},{"original_method":"@SuppressWarnings( \"boxing\" )\n        private String status( QuorumMXBean quorumBean )\n        {\n            return String.format( \"name=%s, size=%s\", quorumBean.getName(),\n                    quorumBean.getQuorumSize() );\n        }","id":16935,"modified_method":"@SuppressWarnings( \"boxing\" )\n        private String status( QuorumMXBean quorumBean )\n        {\n            long time = System.currentTimeMillis();\n            String name = quorumBean.getName();\n            int size = quorumBean.getQuorumSize();\n            return String.format( \"name=%s, size=%s, time=%s (+%sms)\", name, size, format( time ),\n                    System.currentTimeMillis() - time );\n        }","commit_id":"72b580729d53fd80a212b471438fc1b166f3f062","url":"https://github.com/neo4j/neo4j"},{"original_method":"String getStatus()\n    {\n        StringBuilder result = new StringBuilder();\n        String prefix = \"\";\n        for ( ZooKeeper zk : keeper )\n        {\n            result.append( prefix ).append( zk ).append( \": \" ).append( zk.getStatus() );\n            prefix = \", \";\n        }\n        return result.toString();\n    }","id":16936,"modified_method":"String getStatus()\n    {\n        StringBuilder result = new StringBuilder();\n        String prefix = \"\";\n        for ( ZooKeeper zk : keeper )\n        {\n            result.append( prefix ).append( zk ).append( \": \" ).append( zk.getStatus() );\n            prefix = \"; \";\n        }\n        return result.toString();\n    }","commit_id":"72b580729d53fd80a212b471438fc1b166f3f062","url":"https://github.com/neo4j/neo4j"},{"original_method":"StartupFailureException( Throwable cause )\n        {\n            super( cause );\n        }","id":16937,"modified_method":"StartupFailureException( Throwable cause )\n        {\n            super( cause );\n            timestamp = new Date().getTime();\n        }","commit_id":"72b580729d53fd80a212b471438fc1b166f3f062","url":"https://github.com/neo4j/neo4j"},{"original_method":"IllegalStateException format( LocalhostZooKeeperCluster zooKeeper )\n        {\n            Throwable cause = getCause();\n            String message = \"failed to start database\";\n            if ( cause instanceof ZooKeeperException )\n            {\n                message += \", ZooKeeper status: \" + zooKeeper.getStatus();\n            }\n            return new IllegalStateException( message, cause );\n        }","id":16938,"modified_method":"IllegalStateException format( LocalhostZooKeeperCluster zooKeeper )\n        {\n            Throwable cause = getCause();\n            String message = message();\n            if ( cause instanceof ZooKeeperException )\n            {\n                message += \". ZooKeeper status: \" + zooKeeper.getStatus();\n            }\n            return new IllegalStateException( message, cause );\n        }","commit_id":"72b580729d53fd80a212b471438fc1b166f3f062","url":"https://github.com/neo4j/neo4j"},{"original_method":"IllegalStateException format( StartupFailureException e )\n    {\n        throw new IllegalStateException( \"database failed to start\", e.getCause() );\n    }","id":16939,"modified_method":"IllegalStateException format( StartupFailureException e )\n    {\n    \treturn e.format();\n    }","commit_id":"72b580729d53fd80a212b471438fc1b166f3f062","url":"https://github.com/neo4j/neo4j"},{"original_method":"@Override\n        public void println( String string )\n        {\n            super.println( timestamp.get().format( new Date() ) + string );\n        }","id":16940,"modified_method":"@Override\n        public void println( String string )\n        {\n            super.println( format( new Date() ) + string );\n        }","commit_id":"72b580729d53fd80a212b471438fc1b166f3f062","url":"https://github.com/neo4j/neo4j"},{"original_method":"String getStatus()\n    {\n        StringBuilder result = new StringBuilder();\n        String prefix = \"\";\n        for ( ZooKeeper zk : keeper )\n        {\n            result.append( prefix ).append( zk ).append( \": \" ).append( zk.getStatus() );\n            prefix = \", \";\n        }\n        return result.toString();\n    }","id":16941,"modified_method":"String getStatus()\n    {\n        StringBuilder result = new StringBuilder();\n        String prefix = \"\";\n        for ( ZooKeeper zk : keeper )\n        {\n            result.append( prefix ).append( zk ).append( \": \" ).append( zk.getStatus() );\n            prefix = \"; \";\n        }\n        return result.toString();\n    }","commit_id":"63d67f9c311c8da43006c84df707c7630bd6773c","url":"https://github.com/neo4j/neo4j"},{"original_method":"@SuppressWarnings( \"boxing\" )\n        private String status( QuorumMXBean quorumBean )\n        {\n            return String.format( \"name=%s, size=%s\", quorumBean.getName(),\n                    quorumBean.getQuorumSize() );\n        }","id":16942,"modified_method":"@SuppressWarnings( \"boxing\" )\n        private String status( QuorumMXBean quorumBean )\n        {\n            long time = System.currentTimeMillis();\n            String name = quorumBean.getName();\n            int size = quorumBean.getQuorumSize();\n            return String.format( \"name=%s, size=%s, time=%s (+%sms)\", name, size, format( time ),\n                    System.currentTimeMillis() - time );\n        }","commit_id":"63d67f9c311c8da43006c84df707c7630bd6773c","url":"https://github.com/neo4j/neo4j"},{"original_method":"@Override\n        public void println( String string )\n        {\n            super.println( timestamp.get().format( new Date() ) + string );\n        }","id":16943,"modified_method":"@Override\n        public void println( String string )\n        {\n            super.println( format( new Date() ) + string );\n        }","commit_id":"63d67f9c311c8da43006c84df707c7630bd6773c","url":"https://github.com/neo4j/neo4j"},{"original_method":"IllegalStateException format( StartupFailureException e )\n    {\n        throw new IllegalStateException( \"database failed to start\", e.getCause() );\n    }","id":16944,"modified_method":"IllegalStateException format( StartupFailureException e )\n    {\n    \treturn e.format();\n    }","commit_id":"63d67f9c311c8da43006c84df707c7630bd6773c","url":"https://github.com/neo4j/neo4j"},{"original_method":"StartupFailureException( Throwable cause )\n        {\n            super( cause );\n        }","id":16945,"modified_method":"StartupFailureException( Throwable cause )\n        {\n            super( cause );\n            timestamp = new Date().getTime();\n        }","commit_id":"63d67f9c311c8da43006c84df707c7630bd6773c","url":"https://github.com/neo4j/neo4j"},{"original_method":"IllegalStateException format( LocalhostZooKeeperCluster zooKeeper )\n        {\n            Throwable cause = getCause();\n            String message = \"failed to start database\";\n            if ( cause instanceof ZooKeeperException )\n            {\n                message += \", ZooKeeper status: \" + zooKeeper.getStatus();\n            }\n            return new IllegalStateException( message, cause );\n        }","id":16946,"modified_method":"IllegalStateException format( LocalhostZooKeeperCluster zooKeeper )\n        {\n            Throwable cause = getCause();\n            String message = message();\n            if ( cause instanceof ZooKeeperException )\n            {\n                message += \". ZooKeeper status: \" + zooKeeper.getStatus();\n            }\n            return new IllegalStateException( message, cause );\n        }","commit_id":"63d67f9c311c8da43006c84df707c7630bd6773c","url":"https://github.com/neo4j/neo4j"},{"original_method":"public RegisterInputResponse registerInCluster(MessageInput input) throws ExecutionException, InterruptedException, IOException {\n        final UriBuilder uriBuilder = UriBuilder.fromUri(serverUrl);\n        uriBuilder.path(\"/system/radios/\" + serverStatus.getNodeId().toString() + \"/inputs\");\n\n        RegisterInputRequest rir = RegisterInputRequest.create(input.getId(), input.getTitle(), input.getType(), input.getConfiguration().getSource(),\n                serverStatus.getNodeId().toString(), input.getCreatorUserId());\n\n        String json;\n        try {\n            json = mapper.writeValueAsString(rir);\n        } catch (IOException e) {\n            throw new RuntimeException(\"Could not create JSON for register input request.\", e);\n        }\n\n        Future<Response> f = httpclient.preparePost(uriBuilder.build().toString())\n                .setHeader(\"Content-Type\", \"application/json\")\n                .setBody(json)\n                .execute();\n\n        Response r = f.get();\n\n        RegisterInputResponse response = mapper.readValue(r.getResponseBody(), RegisterInputResponse.class);\n\n        // Set the ID that was generated in the server as persist ID of this input.\n        input.setPersistId(response.persistId());\n\n        if (r.getStatusCode() != 201) {\n            throw new RuntimeException(\"Expected HTTP response [201] for input registration but got [\" + r.getStatusCode() + \"].\");\n        }\n\n        return response;\n    }","id":16947,"modified_method":"public RegisterInputResponse registerInCluster(MessageInput input) throws ExecutionException, InterruptedException, IOException {\n        final URI uri = UriBuilder.fromUri(serverUrl)\n                .path(\"/system/radios/{radioId}/inputs\")\n                .build(nodeId.toString());\n\n        final RegisterInputRequest rir = RegisterInputRequest.create(input.getId(), input.getTitle(), input.getType(), input.getConfiguration().getSource(),\n                nodeId.toString(), input.getCreatorUserId());\n\n        final Request request = new Request.Builder()\n                .post(RequestBody.create(MediaType.parse(APPLICATION_JSON), mapper.writeValueAsBytes(rir)))\n                .url(uri.toString())\n                .build();\n\n        final Response r = httpclient.newCall(request).execute();\n        final RegisterInputResponse registerInputResponse = mapper.readValue(r.body().byteStream(), RegisterInputResponse.class);\n\n        // Set the ID that was generated in the server as persist ID of this input.\n        input.setPersistId(registerInputResponse.persistId());\n\n        if (!r.isSuccessful()) {\n            throw new RuntimeException(\"Expected HTTP response [2xx] for input registration but got [\" + r.code() + \"].\");\n        }\n\n        return registerInputResponse;\n    }","commit_id":"974b78e2fa2270ed140eec3977d863ae2ea35464","url":"https://github.com/Graylog2/graylog2-server"},{"original_method":"public List<PersistedInputsResponse> getPersistedInputs() throws IOException {\n        final UriBuilder uriBuilder = UriBuilder.fromUri(serverUrl);\n        uriBuilder.path(\"/system/radios/\" + serverStatus.getNodeId().toString() + \"/inputs\");\n\n        final Request request = httpclient.prepareGet(uriBuilder.build().toString())\n                .setHeader(\"Content-Type\", \"application/json\")\n                .build();\n        LOG.debug(\"API Request {} {}\", request.getMethod(), request.getUrl());\n        final Future<Response> f = httpclient.executeRequest(request);\n\n        final Response r;\n        try {\n            r = f.get();\n        } catch (InterruptedException | ExecutionException e) {\n            LOG.error(\"Unable to fetch inputs from master: \", e);\n            return Collections.emptyList();\n        }\n\n        if (r.getStatusCode() != 200) {\n            throw new RuntimeException(\"Expected HTTP response [200] for list of persisted input but got [\" + r.getStatusCode() + \"].\");\n        }\n        final String responseBody = r.getResponseBody();\n        PersistedInputsSummaryResponse persistedInputsResponse = mapper.readValue(responseBody,\n                PersistedInputsSummaryResponse.class);\n        return persistedInputsResponse.inputs();\n    }","id":16948,"modified_method":"public List<PersistedInputsResponse> getPersistedInputs() throws IOException {\n        final URI uri = UriBuilder.fromUri(serverUrl)\n                .path(\"/system/radios/{radioId}/inputs\")\n                .build(nodeId.toString());\n\n        final Request request = new Request.Builder()\n                .header(HttpHeaders.CONTENT_TYPE, APPLICATION_JSON)\n                .get()\n                .url(uri.toString())\n                .build();\n\n        final Response r = httpclient.newCall(request).execute();\n        if (!r.isSuccessful()) {\n            throw new RuntimeException(\"Expected successful HTTP response [2xx] for list of persisted input but got [\" + r.code() + \"].\");\n        }\n\n        final PersistedInputsSummaryResponse persistedInputsResponse = mapper.readValue(r.body().byteStream(), PersistedInputsSummaryResponse.class);\n\n        return persistedInputsResponse.inputs();\n    }","commit_id":"974b78e2fa2270ed140eec3977d863ae2ea35464","url":"https://github.com/Graylog2/graylog2-server"},{"original_method":"public void unregisterInCluster(MessageInput input) throws ExecutionException, InterruptedException, IOException {\n        final UriBuilder uriBuilder = UriBuilder.fromUri(serverUrl);\n        uriBuilder.path(\"/system/radios/\" + serverStatus.getNodeId().toString() + \"/inputs/\" + input.getPersistId());\n\n        Future<Response> f = httpclient.prepareDelete(uriBuilder.build().toString())\n                .setHeader(\"Content-Type\", \"application/json\")\n                .execute();\n        Response r = f.get();\n        if (r.getStatusCode() != 204) {\n            throw new RuntimeException(\"Expected HTTP response [204] for input unregistration but got [\" + r.getStatusCode() + \"].\");\n        }\n    }","id":16949,"modified_method":"public void unregisterInCluster(MessageInput input) throws ExecutionException, InterruptedException, IOException {\n        final URI uri = UriBuilder.fromUri(serverUrl)\n                .path(\"/system/radios/{radioId}/inputs/{inputId}\")\n                .build(nodeId.toString(), input.getPersistId());\n\n        final Request request = new Request.Builder()\n                .header(HttpHeaders.CONTENT_TYPE, APPLICATION_JSON)\n                .delete()\n                .url(uri.toString())\n                .build();\n\n        final Response r = httpclient.newCall(request).execute();\n        if (!r.isSuccessful()) {\n            throw new RuntimeException(\"Expected HTTP response [2xx] for input unregistration but got [\" + r.code() + \"].\");\n        }\n    }","commit_id":"974b78e2fa2270ed140eec3977d863ae2ea35464","url":"https://github.com/Graylog2/graylog2-server"},{"original_method":"public Map<String, Object> getRancidNode(int nodeid, boolean adminRole) {\n        \n        log().debug(\"getRancidNode start\");\n        Map<String, Object> nodeModel = new TreeMap<String, Object>();\n\n        try {\n        \n            OnmsNode node = m_nodeDao.get(nodeid);\n            String rancidName = node.getLabel();\n    \n            log().debug(\"getRancidNode: \" + rancidName);\n    \n    \n            nodeModel.put(\"id\", rancidName);\n            nodeModel.put(\"db_id\", nodeid);\n            nodeModel.put(\"status_general\", node.getType());\n            \n            List<RancidNodeWrapper> ranlist = new ArrayList<RancidNodeWrapper>();\n            \n            // Group list \n           RWSResourceList groups = RWSClientApi.getRWSResourceGroupsList(m_cp);\n            \n            List<String> grouplist = groups.getResource();\n            Iterator<String> iter1 = grouplist.iterator();\n            \n          \n            String groupname;\n            boolean first = true;\n            while (iter1.hasNext()){\n                groupname = iter1.next();\n                log().debug(\"getRancidNode \" + rancidName + \" group \" + groupname);        \n                \n                try {\n                    if (first){\n                        RancidNode rn = RWSClientApi.getRWSRancidNodeTLO(m_cp, groupname, rancidName);\n                        nodeModel.put(\"devicename\", rn.getDeviceName());\n                        nodeModel.put(\"status\", rn.getState());\n                        nodeModel.put(\"devicetype\", rn.getDeviceType());\n                        nodeModel.put(\"comment\", rn.getComment());\n                        nodeModel.put(\"groupname\", groupname);\n                        first = false;\n                    } \n                    RancidNode rn = RWSClientApi.getRWSRancidNodeInventory(m_cp ,groupname, rancidName);\n                    String vs = rn.getHeadRevision();\n                    InventoryNode in = (InventoryNode)rn.getNodeVersions().get(vs);\n    \n                    RancidNodeWrapper rnw = new RancidNodeWrapper(rn.getDeviceName(), groupname, rn.getDeviceType(), rn.getComment(), rn.getHeadRevision(),\n                      rn.getTotalRevisions(), in.getCreationDate(), rn.getRootConfigurationUrl());\n    \n                    ranlist.add(rnw); \n                    \n                }\n                catch (RancidApiException e){\n                    log().debug(\"No inventory information associated to \" + rancidName);\n                }\n            }\n            \n            //Groups invariant            \n            nodeModel.put(\"grouptable\", ranlist);\n            nodeModel.put(\"url\", m_cp.getUrl());\n            \n            //CLOGIN\n            if (adminRole) {\n    \n                RancidNodeAuthentication rn5 = RWSClientApi.getRWSAuthNode(m_cp,rancidName);\n                nodeModel.put(\"isadmin\", \"true\");\n                nodeModel.put(\"cloginuser\", rn5.getUser());\n                nodeModel.put(\"cloginpassword\", rn5.getPassword());\n                nodeModel.put(\"cloginconnmethod\", rn5.getConnectionMethodString());\n                nodeModel.put(\"cloginenablepass\", rn5.getEnablePass());\n                String autoen = \"0\";\n                if (rn5.isAutoEnable()){\n                    autoen = \"1\";\n                }\n                nodeModel.put(\"cloginautoenable\", autoen);\n            }\n        }catch (Exception e){\n            log().debug(\"getRancidNode has given exception \" + e.getMessage());\n        }\n        return nodeModel;\n    }","id":16950,"modified_method":"public Map<String, Object> getRancidNode(int nodeid, boolean adminRole) {\n        \n        log().debug(\"getRancidNode start\");\n        Map<String, Object> nodeModel = new TreeMap<String, Object>();\n\n        \n        OnmsNode node = m_nodeDao.get(nodeid);\n        String rancidName = node.getLabel();\n\n        log().debug(\"getRancidNode: \" + rancidName);\n\n\n        nodeModel.put(\"id\", rancidName);\n        nodeModel.put(\"db_id\", nodeid);\n        nodeModel.put(\"status_general\", node.getType());\n        \n        List<RancidNodeWrapper> ranlist = new ArrayList<RancidNodeWrapper>();\n        \n        // Group list \n        RWSResourceList groups;\n        try {\n            groups = RWSClientApi.getRWSResourceGroupsList(m_cp);\n        } catch (RancidApiException e1) {\n            log().error(e1.getLocalizedMessage());\n            return nodeModel;\n        }\n            \n        List<String> grouplist = groups.getResource();\n        Iterator<String> iter1 = grouplist.iterator();\n        \n      \n        String groupname;\n        boolean first = true;\n        while (iter1.hasNext()){\n            groupname = iter1.next();\n            log().debug(\"getRancidNode \" + rancidName + \" group \" + groupname);        \n            \n            try {\n                if (first){\n                    RancidNode rn = RWSClientApi.getRWSRancidNodeTLO(m_cp, groupname, rancidName);\n                    nodeModel.put(\"devicename\", rn.getDeviceName());\n                    nodeModel.put(\"status\", rn.getState());\n                    nodeModel.put(\"devicetype\", rn.getDeviceType());\n                    nodeModel.put(\"comment\", rn.getComment());\n                    nodeModel.put(\"groupname\", groupname);\n                    first = false;\n                } \n                RancidNode rn = RWSClientApi.getRWSRancidNodeInventory(m_cp ,groupname, rancidName);\n                String vs = rn.getHeadRevision();\n                InventoryNode in = (InventoryNode)rn.getNodeVersions().get(vs);\n\n                RancidNodeWrapper rnw = new RancidNodeWrapper(rn.getDeviceName(), groupname, rn.getDeviceType(), rn.getComment(), rn.getHeadRevision(),\n                  rn.getTotalRevisions(), in.getCreationDate(), rn.getRootConfigurationUrl());\n\n                ranlist.add(rnw); \n                \n            }\n            catch (RancidApiException e){\n                log().debug(\"No device found in router.db for:\" + rancidName + \"on Group: \" + groupname);\n            }\n        }\n            \n        //Groups invariant            \n        nodeModel.put(\"grouptable\", ranlist);\n        nodeModel.put(\"url\", m_cp.getUrl());\n        \n        //CLOGIN\n        if (adminRole) {\n            log().debug(\"getRancidNode: getting clogin info for: \" + rancidName);        \n            RancidNodeAuthentication rn5;\n            try {\n                rn5 = RWSClientApi.getRWSAuthNode(m_cp,rancidName);\n                nodeModel.put(\"isadmin\", \"true\");\n                nodeModel.put(\"cloginuser\", rn5.getUser());\n                nodeModel.put(\"cloginpassword\", rn5.getPassword());\n                nodeModel.put(\"cloginconnmethod\", rn5.getConnectionMethodString());\n                nodeModel.put(\"cloginenablepass\", rn5.getEnablePass());\n                String autoen = \"0\";\n                if (rn5.isAutoEnable()){\n                    autoen = \"1\";\n                }\n                nodeModel.put(\"cloginautoenable\", autoen);\n            }catch (RancidApiException e){\n                log().error(\"getRancidNode: clogin get failed with reason: \" + e.getLocalizedMessage());\n            }\n        }\n        return nodeModel;\n    }","commit_id":"a28984748c7220291a2f4b3724f6aa3c0e8e2f9c","url":"https://github.com/OpenNMS/opennms"},{"original_method":"public Map<String, Object> getRancidNode(int nodeid, boolean adminRole) {\n        \n        log().debug(\"getRancidNode start\");\n        Map<String, Object> nodeModel = new TreeMap<String, Object>();\n\n        try {\n        \n            OnmsNode node = m_nodeDao.get(nodeid);\n            String rancidName = node.getLabel();\n    \n            log().debug(\"getRancidNode: \" + rancidName);\n    \n    \n            nodeModel.put(\"id\", rancidName);\n            nodeModel.put(\"db_id\", nodeid);\n            nodeModel.put(\"status_general\", node.getType());\n            \n            List<RancidNodeWrapper> ranlist = new ArrayList<RancidNodeWrapper>();\n            \n            // Group list \n           RWSResourceList groups = RWSClientApi.getRWSResourceGroupsList(m_cp);\n            \n            List<String> grouplist = groups.getResource();\n            Iterator<String> iter1 = grouplist.iterator();\n            \n          \n            String groupname;\n            boolean first = true;\n            while (iter1.hasNext()){\n                groupname = iter1.next();\n                log().debug(\"getRancidNode \" + rancidName + \" group \" + groupname);        \n                \n                try {\n                    if (first){\n                        RancidNode rn = RWSClientApi.getRWSRancidNodeTLO(m_cp, groupname, rancidName);\n                        nodeModel.put(\"devicename\", rn.getDeviceName());\n                        nodeModel.put(\"status\", rn.getState());\n                        nodeModel.put(\"devicetype\", rn.getDeviceType());\n                        nodeModel.put(\"comment\", rn.getComment());\n                        nodeModel.put(\"groupname\", groupname);\n                        first = false;\n                    } \n                    RancidNode rn = RWSClientApi.getRWSRancidNodeInventory(m_cp ,groupname, rancidName);\n                    String vs = rn.getHeadRevision();\n                    InventoryNode in = (InventoryNode)rn.getNodeVersions().get(vs);\n    \n                    RancidNodeWrapper rnw = new RancidNodeWrapper(rn.getDeviceName(), groupname, rn.getDeviceType(), rn.getComment(), rn.getHeadRevision(),\n                      rn.getTotalRevisions(), in.getCreationDate(), rn.getRootConfigurationUrl());\n    \n                    ranlist.add(rnw); \n                    \n                }\n                catch (RancidApiException e){\n                    log().debug(\"No inventory information associated to \" + rancidName);\n                }\n            }\n            \n            //Groups invariant            \n            nodeModel.put(\"grouptable\", ranlist);\n            nodeModel.put(\"url\", m_cp.getUrl());\n            \n            //CLOGIN\n            if (adminRole) {\n    \n                RancidNodeAuthentication rn5 = RWSClientApi.getRWSAuthNode(m_cp,rancidName);\n                nodeModel.put(\"isadmin\", \"true\");\n                nodeModel.put(\"cloginuser\", rn5.getUser());\n                nodeModel.put(\"cloginpassword\", rn5.getPassword());\n                nodeModel.put(\"cloginconnmethod\", rn5.getConnectionMethodString());\n                nodeModel.put(\"cloginenablepass\", rn5.getEnablePass());\n                String autoen = \"0\";\n                if (rn5.isAutoEnable()){\n                    autoen = \"1\";\n                }\n                nodeModel.put(\"cloginautoenable\", autoen);\n            }\n        }catch (Exception e){\n            log().debug(\"getRancidNode has given exception \" + e.getMessage());\n        }\n        return nodeModel;\n    }","id":16951,"modified_method":"public Map<String, Object> getRancidNode(int nodeid, boolean adminRole) {\n        \n        log().debug(\"getRancidNode start\");\n        Map<String, Object> nodeModel = new TreeMap<String, Object>();\n\n        \n        OnmsNode node = m_nodeDao.get(nodeid);\n        String rancidName = node.getLabel();\n\n        log().debug(\"getRancidNode: \" + rancidName);\n\n\n        nodeModel.put(\"id\", rancidName);\n        nodeModel.put(\"db_id\", nodeid);\n        nodeModel.put(\"status_general\", node.getType());\n        \n        List<RancidNodeWrapper> ranlist = new ArrayList<RancidNodeWrapper>();\n        \n        // Group list \n        RWSResourceList groups;\n        try {\n            groups = RWSClientApi.getRWSResourceGroupsList(m_cp);\n        } catch (RancidApiException e1) {\n            log().error(e1.getLocalizedMessage());\n            return nodeModel;\n        }\n            \n        List<String> grouplist = groups.getResource();\n        Iterator<String> iter1 = grouplist.iterator();\n        \n      \n        String groupname;\n        boolean first = true;\n        while (iter1.hasNext()){\n            groupname = iter1.next();\n            log().debug(\"getRancidNode \" + rancidName + \" group \" + groupname);        \n            \n            try {\n                if (first){\n                    RancidNode rn = RWSClientApi.getRWSRancidNodeTLO(m_cp, groupname, rancidName);\n                    nodeModel.put(\"devicename\", rn.getDeviceName());\n                    nodeModel.put(\"status\", rn.getState());\n                    nodeModel.put(\"devicetype\", rn.getDeviceType());\n                    nodeModel.put(\"comment\", rn.getComment());\n                    nodeModel.put(\"groupname\", groupname);\n                    first = false;\n                } \n                RancidNode rn = RWSClientApi.getRWSRancidNodeInventory(m_cp ,groupname, rancidName);\n                String vs = rn.getHeadRevision();\n                InventoryNode in = (InventoryNode)rn.getNodeVersions().get(vs);\n\n                RancidNodeWrapper rnw = new RancidNodeWrapper(rn.getDeviceName(), groupname, rn.getDeviceType(), rn.getComment(), rn.getHeadRevision(),\n                  rn.getTotalRevisions(), in.getCreationDate(), rn.getRootConfigurationUrl());\n\n                ranlist.add(rnw); \n                \n            }\n            catch (RancidApiException e){\n                log().debug(\"No device found in router.db for:\" + rancidName + \"on Group: \" + groupname);\n            }\n        }\n            \n        //Groups invariant            \n        nodeModel.put(\"grouptable\", ranlist);\n        nodeModel.put(\"url\", m_cp.getUrl());\n        \n        //CLOGIN\n        if (adminRole) {\n            log().debug(\"getRancidNode: getting clogin info for: \" + rancidName);        \n            RancidNodeAuthentication rn5;\n            try {\n                rn5 = RWSClientApi.getRWSAuthNode(m_cp,rancidName);\n                nodeModel.put(\"isadmin\", \"true\");\n                nodeModel.put(\"cloginuser\", rn5.getUser());\n                nodeModel.put(\"cloginpassword\", rn5.getPassword());\n                nodeModel.put(\"cloginconnmethod\", rn5.getConnectionMethodString());\n                nodeModel.put(\"cloginenablepass\", rn5.getEnablePass());\n                String autoen = \"0\";\n                if (rn5.isAutoEnable()){\n                    autoen = \"1\";\n                }\n                nodeModel.put(\"cloginautoenable\", autoen);\n            }catch (RancidApiException e){\n                log().error(\"getRancidNode: clogin get failed with reason: \" + e.getLocalizedMessage());\n            }\n        }\n        return nodeModel;\n    }","commit_id":"cca134b39e354bc0317be5e8fea5fadb5e8b54d5","url":"https://github.com/OpenNMS/opennms"},{"original_method":"public Map<String, Object> getRancidNode(int nodeid, boolean adminRole) {\n        \n        log().debug(\"getRancidNode start\");\n        Map<String, Object> nodeModel = new TreeMap<String, Object>();\n\n        try {\n        \n            OnmsNode node = m_nodeDao.get(nodeid);\n            String rancidName = node.getLabel();\n    \n            log().debug(\"getRancidNode: \" + rancidName);\n    \n    \n            nodeModel.put(\"id\", rancidName);\n            nodeModel.put(\"db_id\", nodeid);\n            nodeModel.put(\"status_general\", node.getType());\n            \n            List<RancidNodeWrapper> ranlist = new ArrayList<RancidNodeWrapper>();\n            \n            // Group list \n           RWSResourceList groups = RWSClientApi.getRWSResourceGroupsList(m_cp);\n            \n            List<String> grouplist = groups.getResource();\n            Iterator<String> iter1 = grouplist.iterator();\n            \n          \n            String groupname;\n            boolean first = true;\n            while (iter1.hasNext()){\n                groupname = iter1.next();\n                log().debug(\"getRancidNode \" + rancidName + \" group \" + groupname);        \n                \n                try {\n                    if (first){\n                        RancidNode rn = RWSClientApi.getRWSRancidNodeTLO(m_cp, groupname, rancidName);\n                        nodeModel.put(\"devicename\", rn.getDeviceName());\n                        nodeModel.put(\"status\", rn.getState());\n                        nodeModel.put(\"devicetype\", rn.getDeviceType());\n                        nodeModel.put(\"comment\", rn.getComment());\n                        nodeModel.put(\"groupname\", groupname);\n                        first = false;\n                    } \n                    RancidNode rn = RWSClientApi.getRWSRancidNodeInventory(m_cp ,groupname, rancidName);\n                    String vs = rn.getHeadRevision();\n                    InventoryNode in = (InventoryNode)rn.getNodeVersions().get(vs);\n    \n                    RancidNodeWrapper rnw = new RancidNodeWrapper(rn.getDeviceName(), groupname, rn.getDeviceType(), rn.getComment(), rn.getHeadRevision(),\n                      rn.getTotalRevisions(), in.getCreationDate(), rn.getRootConfigurationUrl());\n    \n                    ranlist.add(rnw); \n                    \n                }\n                catch (RancidApiException e){\n                    log().debug(\"No inventory information associated to \" + rancidName);\n                }\n            }\n            \n            //Groups invariant            \n            nodeModel.put(\"grouptable\", ranlist);\n            nodeModel.put(\"url\", m_cp.getUrl());\n            \n            //CLOGIN\n            if (adminRole) {\n    \n                RancidNodeAuthentication rn5 = RWSClientApi.getRWSAuthNode(m_cp,rancidName);\n                nodeModel.put(\"isadmin\", \"true\");\n                nodeModel.put(\"cloginuser\", rn5.getUser());\n                nodeModel.put(\"cloginpassword\", rn5.getPassword());\n                nodeModel.put(\"cloginconnmethod\", rn5.getConnectionMethodString());\n                nodeModel.put(\"cloginenablepass\", rn5.getEnablePass());\n                String autoen = \"0\";\n                if (rn5.isAutoEnable()){\n                    autoen = \"1\";\n                }\n                nodeModel.put(\"cloginautoenable\", autoen);\n            }\n        }catch (Exception e){\n            log().debug(\"getRancidNode has given exception \" + e.getMessage());\n        }\n        return nodeModel;\n    }","id":16952,"modified_method":"public Map<String, Object> getRancidNode(int nodeid, boolean adminRole) {\n        \n        log().debug(\"getRancidNode start\");\n        Map<String, Object> nodeModel = new TreeMap<String, Object>();\n\n        \n        OnmsNode node = m_nodeDao.get(nodeid);\n        String rancidName = node.getLabel();\n\n        log().debug(\"getRancidNode: \" + rancidName);\n\n\n        nodeModel.put(\"id\", rancidName);\n        nodeModel.put(\"db_id\", nodeid);\n        nodeModel.put(\"status_general\", node.getType());\n        \n        List<RancidNodeWrapper> ranlist = new ArrayList<RancidNodeWrapper>();\n        \n        // Group list \n        RWSResourceList groups;\n        try {\n            groups = RWSClientApi.getRWSResourceGroupsList(m_cp);\n        } catch (RancidApiException e1) {\n            log().error(e1.getLocalizedMessage());\n            return nodeModel;\n        }\n            \n        List<String> grouplist = groups.getResource();\n        Iterator<String> iter1 = grouplist.iterator();\n        \n      \n        String groupname;\n        boolean first = true;\n        while (iter1.hasNext()){\n            groupname = iter1.next();\n            log().debug(\"getRancidNode \" + rancidName + \" group \" + groupname);        \n            \n            try {\n                if (first){\n                    RancidNode rn = RWSClientApi.getRWSRancidNodeTLO(m_cp, groupname, rancidName);\n                    nodeModel.put(\"devicename\", rn.getDeviceName());\n                    nodeModel.put(\"status\", rn.getState());\n                    nodeModel.put(\"devicetype\", rn.getDeviceType());\n                    nodeModel.put(\"comment\", rn.getComment());\n                    nodeModel.put(\"groupname\", groupname);\n                    first = false;\n                } \n                RancidNode rn = RWSClientApi.getRWSRancidNodeInventory(m_cp ,groupname, rancidName);\n                String vs = rn.getHeadRevision();\n                InventoryNode in = (InventoryNode)rn.getNodeVersions().get(vs);\n\n                RancidNodeWrapper rnw = new RancidNodeWrapper(rn.getDeviceName(), groupname, rn.getDeviceType(), rn.getComment(), rn.getHeadRevision(),\n                  rn.getTotalRevisions(), in.getCreationDate(), rn.getRootConfigurationUrl());\n\n                ranlist.add(rnw); \n                \n            }\n            catch (RancidApiException e){\n                log().debug(\"No device found in router.db for:\" + rancidName + \"on Group: \" + groupname);\n            }\n        }\n            \n        //Groups invariant            \n        nodeModel.put(\"grouptable\", ranlist);\n        nodeModel.put(\"url\", m_cp.getUrl());\n        \n        //CLOGIN\n        if (adminRole) {\n            log().debug(\"getRancidNode: getting clogin info for: \" + rancidName);        \n            RancidNodeAuthentication rn5;\n            try {\n                rn5 = RWSClientApi.getRWSAuthNode(m_cp,rancidName);\n                nodeModel.put(\"isadmin\", \"true\");\n                nodeModel.put(\"cloginuser\", rn5.getUser());\n                nodeModel.put(\"cloginpassword\", rn5.getPassword());\n                nodeModel.put(\"cloginconnmethod\", rn5.getConnectionMethodString());\n                nodeModel.put(\"cloginenablepass\", rn5.getEnablePass());\n                String autoen = \"0\";\n                if (rn5.isAutoEnable()){\n                    autoen = \"1\";\n                }\n                nodeModel.put(\"cloginautoenable\", autoen);\n            }catch (RancidApiException e){\n                log().error(\"getRancidNode: clogin get failed with reason: \" + e.getLocalizedMessage());\n            }\n        }\n        return nodeModel;\n    }","commit_id":"fc098b267a589e57e6f664a35abae5e8ca989150","url":"https://github.com/OpenNMS/opennms"},{"original_method":"/**\n     * Initializes the resource and the site path of this element.<p>\n     * \n     * @param cms the CMS context \n     * \n     * @throws CmsException if something goes wrong reading the element resource\n     */\n    public void initResource(CmsObject cms) throws CmsException {\n\n        if (m_resource == null) {\n            if (cms.getRequestContext().getCurrentProject().isOnlineProject()) {\n                m_resource = cms.readResource(getId());\n                m_releasedAndNotExpired = true;\n            } else {\n                m_resource = cms.readResource(getId(), CmsResourceFilter.IGNORE_EXPIRATION);\n                m_releasedAndNotExpired = m_resource.isReleasedAndNotExpired(cms.getRequestContext().getRequestTime());\n            }\n        } else if (!isInMemoryOnly()) {\n            CmsUUID id = m_resource.getStructureId();\n            if (id == null) {\n                id = getId();\n            }\n            // the resource object may have a wrong root path, e.g. if it was created before the resource was moved\n            if (cms.getRequestContext().getCurrentProject().isOnlineProject()) {\n                m_resource = cms.readResource(getId());\n                m_releasedAndNotExpired = true;\n            } else {\n                if (!isTemporaryContent()) {\n                    m_resource = cms.readResource(getId(), CmsResourceFilter.IGNORE_EXPIRATION);\n                }\n                m_releasedAndNotExpired = m_resource.isReleasedAndNotExpired(cms.getRequestContext().getRequestTime());\n            }\n        }\n        if (m_settings == null) {\n            m_settings = CmsXmlContentPropertyHelper.mergeDefaults(cms, m_resource, m_individualSettings);\n        }\n        // redo on every init call to ensure sitepath is calculated for current site\n        m_sitePath = cms.getSitePath(m_resource);\n    }","id":16953,"modified_method":"/**\n     * Initializes the resource and the site path of this element.<p>\n     * \n     * @param cms the CMS context \n     * \n     * @throws CmsException if something goes wrong reading the element resource\n     */\n    public void initResource(CmsObject cms) throws CmsException {\n\n        if (m_resource == null) {\n            m_resource = cms.readResource(getId(), CmsResourceFilter.IGNORE_EXPIRATION);\n            m_releasedAndNotExpired = m_resource.isReleasedAndNotExpired(cms.getRequestContext().getRequestTime());\n        } else if (!isInMemoryOnly()) {\n            CmsUUID id = m_resource.getStructureId();\n            if (id == null) {\n                id = getId();\n            }\n            // the resource object may have a wrong root path, e.g. if it was created before the resource was moved\n            m_resource = cms.readResource(id, CmsResourceFilter.IGNORE_EXPIRATION);\n            m_releasedAndNotExpired = m_resource.isReleasedAndNotExpired(cms.getRequestContext().getRequestTime());\n        }\n        if (m_settings == null) {\n            m_settings = CmsXmlContentPropertyHelper.mergeDefaults(cms, m_resource, m_individualSettings);\n        }\n        // redo on every init call to ensure sitepath is calculated for current site\n        m_sitePath = cms.getSitePath(m_resource);\n    }","commit_id":"835b6b2760537589712279f2f2b2c0097990ca65","url":"https://github.com/alkacon/opencms-core"},{"original_method":"/**\n     * Renders a container element.<p>\n     * \n     * @param request the current request \n     * @param cms the CMS context \n     * @param standardContext the current standard contxt bean\n     * @param element the container element to render\n     * @param locale the requested locale\n     * @param alreadyFull if true, only render invisible elements (they don't count towards the \"max elements\") \n     * \n     * @return true if an element was rendered that counts towards the container's maximum number of elements \n     * \n     * @throws Exception if something goes wrong \n     */\n    private boolean renderContainerElement(\n        HttpServletRequest request,\n        CmsObject cms,\n        CmsJspStandardContextBean standardContext,\n        CmsContainerElementBean element,\n        Locale locale,\n        boolean alreadyFull) throws Exception {\n\n        CmsTemplateContext context = (CmsTemplateContext)(request.getAttribute(CmsTemplateContextManager.ATTR_TEMPLATE_CONTEXT));\n        if ((context == null) && alreadyFull) {\n            return false;\n        }\n        boolean showInContext = shouldShowInContext(element, context);\n        boolean isOnline = cms.getRequestContext().getCurrentProject().isOnlineProject();\n        if (isOnline && !showInContext) {\n            return false;\n        }\n        ServletRequest req = pageContext.getRequest();\n        ServletResponse res = pageContext.getResponse();\n        String containerType = getType();\n        int containerWidth = getContainerWidth();\n        element.initResource(cms);\n        if (cms.getRequestContext().getCurrentProject().isOnlineProject()\n            && !element.getResource().isReleasedAndNotExpired(System.currentTimeMillis())) {\n            return false;\n        }\n        CmsADEConfigData adeConfig = OpenCms.getADEManager().lookupConfiguration(\n            cms,\n            cms.getRequestContext().getRootUri());\n        boolean isGroupContainer = element.isGroupContainer(cms);\n        boolean isInheritedContainer = element.isInheritedContainer(cms);\n        I_CmsFormatterBean formatterConfig = null;\n        // writing elements to the session cache to improve performance of the container-page editor in offline project\n        if (!isOnline) {\n            if (!isGroupContainer && !isInheritedContainer) {\n                // ensure that the formatter configuration id is added to the element settings, so it will be persisted on save\n                formatterConfig = ensureValidFormatterSettings(cms, element, adeConfig, containerType, containerWidth);\n            }\n            getSessionCache(cms).setCacheContainerElement(element.editorHash(), element);\n        }\n\n        if (isGroupContainer || isInheritedContainer) {\n            if (alreadyFull) {\n                return false;\n            }\n            List<CmsContainerElementBean> subElements;\n            if (isGroupContainer) {\n                subElements = getGroupContainerElements(cms, element, req, containerType);\n            } else {\n                // inherited container case\n                subElements = getInheritedContainerElements(cms, element);\n            }\n            // wrapping the elements with DIV containing initial element data. To be removed by the container-page editor\n            printElementWrapperTagStart(isOnline, cms, element, true);\n            for (CmsContainerElementBean subelement : subElements) {\n\n                try {\n                    subelement.initResource(cms);\n                    boolean shouldShowSubElementInContext = shouldShowInContext(subelement, context);\n                    if (isOnline && !shouldShowSubElementInContext) {\n                        continue;\n                    }\n                    I_CmsFormatterBean subElementFormatterConfig = null;\n                    // writing elements to the session cache to improve performance of the container-page editor\n                    if (!isOnline) {\n                        subElementFormatterConfig = ensureValidFormatterSettings(\n                            cms,\n                            subelement,\n                            adeConfig,\n                            containerType,\n                            containerWidth);\n                        getSessionCache(cms).setCacheContainerElement(subelement.editorHash(), subelement);\n                    }\n                    if (subElementFormatterConfig == null) {\n                        CmsFormatterConfiguration subelementFormatters = adeConfig.getFormatters(\n                            cms,\n                            subelement.getResource());\n                        subElementFormatterConfig = subelementFormatters.getDefaultFormatter(\n                            containerType,\n                            containerWidth);\n                    }\n\n                    if (subElementFormatterConfig == null) {\n                        if (LOG.isErrorEnabled()) {\n                            LOG.error(new CmsIllegalStateException(Messages.get().container(\n                                Messages.ERR_XSD_NO_TEMPLATE_FORMATTER_3,\n                                subelement.getSitePath(),\n                                OpenCms.getResourceManager().getResourceType(subelement.getResource()).getTypeName(),\n                                containerType)));\n                        }\n                        // skip this element, it has no formatter for this container type defined\n                        continue;\n                    }\n                    // execute the formatter JSP for the given element URI\n                    // wrapping the elements with DIV containing initial element data. To be removed by the container-page editor\n                    printElementWrapperTagStart(isOnline, cms, subelement, false);\n                    standardContext.setElement(subelement);\n                    try {\n                        String formatterSitePath = cms.getRequestContext().removeSiteRoot(\n                            subElementFormatterConfig.getJspRootPath());\n                        if (shouldShowSubElementInContext) {\n                            CmsJspTagInclude.includeTagAction(\n                                pageContext,\n                                formatterSitePath,\n                                null,\n                                locale,\n                                false,\n                                isOnline,\n                                null,\n                                CmsRequestUtil.getAtrributeMap(req),\n                                req,\n                                res);\n                        } else {\n                            pageContext.getOut().print(DUMMY_ELEMENT);\n                        }\n                    } catch (Exception e) {\n                        if (LOG.isErrorEnabled()) {\n                            LOG.error(\n                                Messages.get().getBundle().key(\n                                    Messages.ERR_CONTAINER_PAGE_ELEMENT_RENDER_ERROR_2,\n                                    subelement.getSitePath(),\n                                    subElementFormatterConfig),\n                                e);\n                        }\n                        printElementErrorTag(\n                            isOnline,\n                            subelement.getSitePath(),\n                            subElementFormatterConfig.getJspRootPath(),\n                            e);\n                    }\n                    printElementWrapperTagEnd(isOnline, false);\n                } catch (Exception e) {\n                    if (LOG.isErrorEnabled()) {\n                        LOG.error(e);\n                    }\n                }\n            }\n            printElementWrapperTagEnd(isOnline, true);\n            return true;\n        } else {\n            boolean result = true;\n            if (alreadyFull) {\n                result = false;\n                if (!showInContext) {\n                    printElementWrapperTagStart(isOnline, cms, element, false);\n                    pageContext.getOut().print(DUMMY_ELEMENT);\n                    printElementWrapperTagEnd(isOnline, false);\n                }\n            } else {\n                String formatter = null;\n                try {\n                    if (formatterConfig != null) {\n                        formatter = cms.getRequestContext().removeSiteRoot(formatterConfig.getJspRootPath());\n                    } else {\n                        formatter = cms.getSitePath(cms.readResource(element.getFormatterId()));\n                    }\n                } catch (CmsException e) {\n                    // the formatter resource can not be found, try reading it form the configuration\n                    CmsFormatterConfiguration elementFormatters = adeConfig.getFormatters(cms, element.getResource());\n                    I_CmsFormatterBean elementFormatterBean = elementFormatters.getDefaultFormatter(\n                        containerType,\n                        containerWidth);\n                    if (elementFormatterBean == null) {\n                        if (LOG.isErrorEnabled()) {\n                            LOG.error(new CmsIllegalStateException(Messages.get().container(\n                                Messages.ERR_XSD_NO_TEMPLATE_FORMATTER_3,\n                                element.getSitePath(),\n                                OpenCms.getResourceManager().getResourceType(element.getResource()).getTypeName(),\n                                containerType)));\n                        }\n                        // skip this element, it has no formatter for this container type defined\n                        return false;\n                    }\n                    formatter = cms.getRequestContext().removeSiteRoot(elementFormatterBean.getJspRootPath());\n                }\n\n                printElementWrapperTagStart(isOnline, cms, element, false);\n                standardContext.setElement(element);\n                try {\n                    if (!showInContext) {\n                        // write invisible dummy element \n                        pageContext.getOut().print(DUMMY_ELEMENT);\n                        result = false;\n                    } else {\n                        // execute the formatter jsp for the given element uri\n                        CmsJspTagInclude.includeTagAction(\n                            pageContext,\n                            formatter,\n                            null,\n                            locale,\n                            false,\n                            isOnline,\n                            null,\n                            CmsRequestUtil.getAtrributeMap(req),\n                            req,\n                            res);\n                    }\n                } catch (Exception e) {\n                    if (LOG.isErrorEnabled()) {\n                        LOG.error(\n                            Messages.get().getBundle().key(\n                                Messages.ERR_CONTAINER_PAGE_ELEMENT_RENDER_ERROR_2,\n                                element.getSitePath(),\n                                formatter),\n                            e);\n                    }\n                    printElementErrorTag(isOnline, element.getSitePath(), formatter, e);\n                }\n                printElementWrapperTagEnd(isOnline, false);\n            }\n            return result;\n        }\n    }","id":16954,"modified_method":"/**\n     * Renders a container element.<p>\n     * \n     * @param request the current request \n     * @param cms the CMS context \n     * @param standardContext the current standard contxt bean\n     * @param element the container element to render\n     * @param locale the requested locale\n     * @param alreadyFull if true, only render invisible elements (they don't count towards the \"max elements\") \n     * \n     * @return true if an element was rendered that counts towards the container's maximum number of elements \n     * \n     * @throws Exception if something goes wrong \n     */\n    private boolean renderContainerElement(\n        HttpServletRequest request,\n        CmsObject cms,\n        CmsJspStandardContextBean standardContext,\n        CmsContainerElementBean element,\n        Locale locale,\n        boolean alreadyFull) throws Exception {\n\n        CmsTemplateContext context = (CmsTemplateContext)(request.getAttribute(CmsTemplateContextManager.ATTR_TEMPLATE_CONTEXT));\n        if ((context == null) && alreadyFull) {\n            return false;\n        }\n        boolean showInContext = shouldShowInContext(element, context);\n        boolean isOnline = cms.getRequestContext().getCurrentProject().isOnlineProject();\n        if (isOnline && !showInContext) {\n            return false;\n        }\n        element.initResource(cms);\n        if (isOnline && !element.isReleasedAndNotExpired()) {\n            // do not render expired resources for the online project\n            return false;\n        }\n        ServletRequest req = pageContext.getRequest();\n        ServletResponse res = pageContext.getResponse();\n        String containerType = getType();\n        int containerWidth = getContainerWidth();\n        CmsADEConfigData adeConfig = OpenCms.getADEManager().lookupConfiguration(\n            cms,\n            cms.getRequestContext().getRootUri());\n        boolean isGroupContainer = element.isGroupContainer(cms);\n        boolean isInheritedContainer = element.isInheritedContainer(cms);\n        I_CmsFormatterBean formatterConfig = null;\n        // writing elements to the session cache to improve performance of the container-page editor in offline project\n        if (!isOnline) {\n            if (!isGroupContainer && !isInheritedContainer) {\n                // ensure that the formatter configuration id is added to the element settings, so it will be persisted on save\n                formatterConfig = ensureValidFormatterSettings(cms, element, adeConfig, containerType, containerWidth);\n            }\n            getSessionCache(cms).setCacheContainerElement(element.editorHash(), element);\n        }\n\n        if (isGroupContainer || isInheritedContainer) {\n            if (alreadyFull) {\n                return false;\n            }\n            List<CmsContainerElementBean> subElements;\n            if (isGroupContainer) {\n                subElements = getGroupContainerElements(cms, element, req, containerType);\n            } else {\n                // inherited container case\n                subElements = getInheritedContainerElements(cms, element);\n            }\n            // wrapping the elements with DIV containing initial element data. To be removed by the container-page editor\n            printElementWrapperTagStart(isOnline, cms, element, true);\n            for (CmsContainerElementBean subelement : subElements) {\n\n                try {\n                    subelement.initResource(cms);\n                    boolean shouldShowSubElementInContext = shouldShowInContext(subelement, context);\n                    if (isOnline && (!shouldShowSubElementInContext || !subelement.isReleasedAndNotExpired())) {\n                        continue;\n                    }\n                    I_CmsFormatterBean subElementFormatterConfig = null;\n                    // writing elements to the session cache to improve performance of the container-page editor\n                    if (!isOnline) {\n                        subElementFormatterConfig = ensureValidFormatterSettings(\n                            cms,\n                            subelement,\n                            adeConfig,\n                            containerType,\n                            containerWidth);\n                        getSessionCache(cms).setCacheContainerElement(subelement.editorHash(), subelement);\n                    }\n                    if (subElementFormatterConfig == null) {\n                        CmsFormatterConfiguration subelementFormatters = adeConfig.getFormatters(\n                            cms,\n                            subelement.getResource());\n                        subElementFormatterConfig = subelementFormatters.getDefaultFormatter(\n                            containerType,\n                            containerWidth);\n                    }\n\n                    if (subElementFormatterConfig == null) {\n                        if (LOG.isErrorEnabled()) {\n                            LOG.error(new CmsIllegalStateException(Messages.get().container(\n                                Messages.ERR_XSD_NO_TEMPLATE_FORMATTER_3,\n                                subelement.getSitePath(),\n                                OpenCms.getResourceManager().getResourceType(subelement.getResource()).getTypeName(),\n                                containerType)));\n                        }\n                        // skip this element, it has no formatter for this container type defined\n                        continue;\n                    }\n                    // execute the formatter JSP for the given element URI\n                    // wrapping the elements with DIV containing initial element data. To be removed by the container-page editor\n                    printElementWrapperTagStart(isOnline, cms, subelement, false);\n                    standardContext.setElement(subelement);\n                    try {\n                        String formatterSitePath = cms.getRequestContext().removeSiteRoot(\n                            subElementFormatterConfig.getJspRootPath());\n                        if (shouldShowSubElementInContext) {\n                            CmsJspTagInclude.includeTagAction(\n                                pageContext,\n                                formatterSitePath,\n                                null,\n                                locale,\n                                false,\n                                isOnline,\n                                null,\n                                CmsRequestUtil.getAtrributeMap(req),\n                                req,\n                                res);\n                        } else {\n                            pageContext.getOut().print(DUMMY_ELEMENT);\n                        }\n                    } catch (Exception e) {\n                        if (LOG.isErrorEnabled()) {\n                            LOG.error(\n                                Messages.get().getBundle().key(\n                                    Messages.ERR_CONTAINER_PAGE_ELEMENT_RENDER_ERROR_2,\n                                    subelement.getSitePath(),\n                                    subElementFormatterConfig),\n                                e);\n                        }\n                        printElementErrorTag(\n                            isOnline,\n                            subelement.getSitePath(),\n                            subElementFormatterConfig.getJspRootPath(),\n                            e);\n                    }\n                    printElementWrapperTagEnd(isOnline, false);\n                } catch (Exception e) {\n                    if (LOG.isErrorEnabled()) {\n                        LOG.error(e);\n                    }\n                }\n            }\n            printElementWrapperTagEnd(isOnline, true);\n            return true;\n        } else {\n            boolean result = true;\n            if (alreadyFull) {\n                result = false;\n                if (!showInContext) {\n                    printElementWrapperTagStart(isOnline, cms, element, false);\n                    pageContext.getOut().print(DUMMY_ELEMENT);\n                    printElementWrapperTagEnd(isOnline, false);\n                }\n            } else {\n                String formatter = null;\n                try {\n                    if (formatterConfig != null) {\n                        formatter = cms.getRequestContext().removeSiteRoot(formatterConfig.getJspRootPath());\n                    } else {\n                        formatter = cms.getSitePath(cms.readResource(element.getFormatterId()));\n                    }\n                } catch (CmsException e) {\n                    // the formatter resource can not be found, try reading it form the configuration\n                    CmsFormatterConfiguration elementFormatters = adeConfig.getFormatters(cms, element.getResource());\n                    I_CmsFormatterBean elementFormatterBean = elementFormatters.getDefaultFormatter(\n                        containerType,\n                        containerWidth);\n                    if (elementFormatterBean == null) {\n                        if (LOG.isErrorEnabled()) {\n                            LOG.error(new CmsIllegalStateException(Messages.get().container(\n                                Messages.ERR_XSD_NO_TEMPLATE_FORMATTER_3,\n                                element.getSitePath(),\n                                OpenCms.getResourceManager().getResourceType(element.getResource()).getTypeName(),\n                                containerType)));\n                        }\n                        // skip this element, it has no formatter for this container type defined\n                        return false;\n                    }\n                    formatter = cms.getRequestContext().removeSiteRoot(elementFormatterBean.getJspRootPath());\n                }\n\n                printElementWrapperTagStart(isOnline, cms, element, false);\n                standardContext.setElement(element);\n                try {\n                    if (!showInContext) {\n                        // write invisible dummy element \n                        pageContext.getOut().print(DUMMY_ELEMENT);\n                        result = false;\n                    } else {\n                        // execute the formatter jsp for the given element uri\n                        CmsJspTagInclude.includeTagAction(\n                            pageContext,\n                            formatter,\n                            null,\n                            locale,\n                            false,\n                            isOnline,\n                            null,\n                            CmsRequestUtil.getAtrributeMap(req),\n                            req,\n                            res);\n                    }\n                } catch (Exception e) {\n                    if (LOG.isErrorEnabled()) {\n                        LOG.error(\n                            Messages.get().getBundle().key(\n                                Messages.ERR_CONTAINER_PAGE_ELEMENT_RENDER_ERROR_2,\n                                element.getSitePath(),\n                                formatter),\n                            e);\n                    }\n                    printElementErrorTag(isOnline, element.getSitePath(), formatter, e);\n                }\n                printElementWrapperTagEnd(isOnline, false);\n            }\n            return result;\n        }\n    }","commit_id":"835b6b2760537589712279f2f2b2c0097990ca65","url":"https://github.com/alkacon/opencms-core"},{"original_method":"/**\n     * Initializes this formatter tag.<p> \n     * \n     * @throws JspException in case something goes wrong\n     */\n    protected void init() throws JspException {\n\n        // initialize OpenCms access objects\n        m_controller = CmsFlexController.getController(pageContext.getRequest());\n        m_cms = m_controller.getCmsObject();\n\n        try {\n            // get the resource name from the selected container\n            m_element = OpenCms.getADEManager().getCurrentElement(pageContext.getRequest());\n            m_element.initResource(m_cms);\n            if (m_locale == null) {\n                // no locale set, use locale from users request context\n                m_locale = m_cms.getRequestContext().getLocale();\n            }\n\n            // load content and store it\n            CmsJspContentAccessBean bean;\n            if ((m_element.isInMemoryOnly() || m_element.isTemporaryContent())\n                && (m_element.getResource() instanceof CmsFile)) {\n                I_CmsXmlDocument xmlContent = CmsXmlContentFactory.unmarshal(m_cms, (CmsFile)m_element.getResource());\n                bean = new CmsJspContentAccessBean(m_cms, m_locale, xmlContent);\n            } else {\n                bean = new CmsJspContentAccessBean(m_cms, m_locale, m_element.getResource());\n            }\n            storeAttribute(getVar(), bean);\n\n            if (m_value != null) {\n                // if the optional \"val\" parameter has been set, store the value map of the content in the page context scope\n                storeAttribute(getVal(), bean.getValue());\n            }\n\n            if (m_rdfa != null) {\n                // if the optional \"rdfa\" parameter has been set, store the rdfa map of the content in the page context scope\n                storeAttribute(getRdfa(), bean.getRdfa());\n            }\n\n        } catch (CmsException e) {\n            m_controller.setThrowable(e, m_cms.getRequestContext().getUri());\n            throw new JspException(e);\n        }\n    }","id":16955,"modified_method":"/**\n     * Initializes this formatter tag.<p> \n     * \n     * @throws JspException in case something goes wrong\n     */\n    protected void init() throws JspException {\n\n        // initialize OpenCms access objects\n        m_controller = CmsFlexController.getController(pageContext.getRequest());\n        m_cms = m_controller.getCmsObject();\n\n        try {\n            // get the resource name from the selected container\n            m_element = OpenCms.getADEManager().getCurrentElement(pageContext.getRequest());\n            m_element.initResource(m_cms);\n            if (m_cms.getRequestContext().getCurrentProject().isOnlineProject() && !m_element.isReleasedAndNotExpired()) {\n                throw new CmsException(Messages.get().container(\n                    Messages.ERR_RESOURCE_IS_NOT_RELEASE_OR_EXPIRED_1,\n                    m_element.getResource().getRootPath()));\n            }\n            if (m_locale == null) {\n                // no locale set, use locale from users request context\n                m_locale = m_cms.getRequestContext().getLocale();\n            }\n\n            // load content and store it\n            CmsJspContentAccessBean bean;\n            if ((m_element.isInMemoryOnly() || m_element.isTemporaryContent())\n                && (m_element.getResource() instanceof CmsFile)) {\n                I_CmsXmlDocument xmlContent = CmsXmlContentFactory.unmarshal(m_cms, (CmsFile)m_element.getResource());\n                bean = new CmsJspContentAccessBean(m_cms, m_locale, xmlContent);\n            } else {\n                bean = new CmsJspContentAccessBean(m_cms, m_locale, m_element.getResource());\n            }\n            storeAttribute(getVar(), bean);\n\n            if (m_value != null) {\n                // if the optional \"val\" parameter has been set, store the value map of the content in the page context scope\n                storeAttribute(getVal(), bean.getValue());\n            }\n\n            if (m_rdfa != null) {\n                // if the optional \"rdfa\" parameter has been set, store the rdfa map of the content in the page context scope\n                storeAttribute(getRdfa(), bean.getRdfa());\n            }\n\n        } catch (CmsException e) {\n            m_controller.setThrowable(e, m_cms.getRequestContext().getUri());\n            throw new JspException(e);\n        }\n    }","commit_id":"835b6b2760537589712279f2f2b2c0097990ca65","url":"https://github.com/alkacon/opencms-core"},{"original_method":"/**\n     * Action to include the CSS resources.<p>\n     * \n     * @param cms the current cms context\n     * @param req the current request\n     * \n     * @throws CmsException if something goes wrong reading the resources\n     * @throws IOException if something goes wrong writing to the response out\n     */\n    public void tagCssAction(CmsObject cms, ServletRequest req) throws CmsException, IOException {\n\n        CmsJspStandardContextBean standardContext = getStandardContext(cms, req);\n        CmsContainerPageBean containerPage = standardContext.getPage();\n\n        Set<String> cssIncludes = new LinkedHashSet<String>();\n        Map<String, String> inlineCss = new LinkedHashMap<String, String>();\n        // add defaults\n        if (CmsStringUtil.isNotEmptyOrWhitespaceOnly(m_defaults)) {\n            String[] defaults = m_defaults.split(\"\\\\|\");\n            for (int i = 0; i < defaults.length; i++) {\n                cssIncludes.add(defaults[i]);\n            }\n        }\n        if ((containerPage != null) && (containerPage.getElements() != null)) {\n            Map<CmsUUID, I_CmsFormatterBean> formatters = OpenCms.getADEManager().getCachedFormatters(\n                standardContext.isOnline()).getFormatters();\n            for (CmsContainerBean container : containerPage.getContainers().values()) {\n                for (CmsContainerElementBean element : container.getElements()) {\n                    try {\n                        element.initResource(cms);\n                        if (element.isGroupContainer(cms) || element.isInheritedContainer(cms)) {\n                            List<CmsContainerElementBean> subElements;\n                            if (element.isGroupContainer(cms)) {\n                                subElements = CmsJspTagContainer.getGroupContainerElements(\n                                    cms,\n                                    element,\n                                    req,\n                                    container.getType());\n                            } else {\n                                subElements = CmsJspTagContainer.getInheritedContainerElements(cms, element);\n                            }\n                            for (CmsContainerElementBean subElement : subElements) {\n                                subElement.initResource(cms);\n                                I_CmsFormatterBean formatter = getFormatterBeanForElement(\n                                    subElement,\n                                    container,\n                                    formatters);\n                                if (formatter != null) {\n                                    cssIncludes.addAll(formatter.getCssHeadIncludes());\n                                    if (CmsStringUtil.isNotEmptyOrWhitespaceOnly(formatter.getInlineCss())) {\n                                        inlineCss.put(formatter.getId(), formatter.getInlineCss());\n                                    }\n                                } else {\n                                    cssIncludes.addAll(getCSSHeadIncludes(cms, subElement.getResource()));\n                                }\n                            }\n                        } else {\n                            I_CmsFormatterBean formatter = getFormatterBeanForElement(element, container, formatters);\n                            if (formatter != null) {\n                                cssIncludes.addAll(formatter.getCssHeadIncludes());\n                                if (CmsStringUtil.isNotEmptyOrWhitespaceOnly(formatter.getInlineCss())) {\n                                    inlineCss.put(formatter.getId(), formatter.getInlineCss());\n                                }\n                            } else {\n                                cssIncludes.addAll(getCSSHeadIncludes(cms, element.getResource()));\n                            }\n                        }\n                    } catch (CmsException e) {\n                        LOG.error(\n                            Messages.get().getBundle().key(\n                                Messages.ERR_READING_REQUIRED_RESOURCE_1,\n                                element.getSitePath()),\n                            e);\n                    }\n                }\n            }\n        }\n        if (standardContext.getDetailContentId() != null) {\n            try {\n                CmsResource detailContent = cms.readResource(standardContext.getDetailContentId());\n                CmsFormatterConfiguration config = OpenCms.getADEManager().lookupConfiguration(\n                    cms,\n                    cms.getRequestContext().getRootUri()).getFormatters(cms, detailContent);\n                boolean requiresAllIncludes = true;\n                if (CmsStringUtil.isNotEmptyOrWhitespaceOnly(getDetailtype())\n                    && CmsStringUtil.isNotEmptyOrWhitespaceOnly(getDetailwidth())) {\n                    try {\n                        int width = Integer.parseInt(getDetailwidth());\n                        I_CmsFormatterBean formatter = config.getDetailFormatter(getDetailtype(), width);\n                        cssIncludes.addAll(formatter.getCssHeadIncludes());\n                        if (CmsStringUtil.isNotEmptyOrWhitespaceOnly(formatter.getInlineCss())) {\n                            inlineCss.put(formatter.getId(), formatter.getInlineCss());\n                        }\n                        requiresAllIncludes = false;\n                    } catch (NumberFormatException ne) {\n                        // nothing to do, we will include CSS for all detail containers\n                    }\n                }\n                if (requiresAllIncludes) {\n                    for (I_CmsFormatterBean formatter : config.getDetailFormatters()) {\n                        cssIncludes.addAll(formatter.getCssHeadIncludes());\n                        if (CmsStringUtil.isNotEmptyOrWhitespaceOnly(formatter.getInlineCss())) {\n                            inlineCss.put(formatter.getId(), formatter.getInlineCss());\n                        }\n                    }\n                }\n            } catch (CmsException e) {\n                LOG.error(\n                    Messages.get().getBundle().key(\n                        Messages.ERR_READING_REQUIRED_RESOURCE_1,\n                        standardContext.getDetailContentId()),\n                    e);\n            }\n        }\n        for (String cssUri : cssIncludes) {\n            pageContext.getOut().print(\n                \"\\n<link rel=\\\"stylesheet\\\" href=\\\"\"\n                    + CmsJspTagLink.linkTagAction(cssUri.trim(), req)\n                    + generateReqParams()\n                    + \"\\\" type=\\\"text/css\\\">\");\n            if (shouldCloseTags()) {\n                pageContext.getOut().print(\"<\/link>\");\n            }\n        }\n        if (cms.getRequestContext().getCurrentProject().isOnlineProject()) {\n            if (!inlineCss.isEmpty()) {\n                StringBuffer inline = new StringBuffer(\"\\n<style type=\\\"text/css\\\">\\n\");\n                for (Entry<String, String> cssEntry : inlineCss.entrySet()) {\n                    inline.append(cssEntry.getValue()).append(\"\\n\\n\");\n                }\n                inline.append(\"\\n<\/style>\\n\");\n                pageContext.getOut().print(inline.toString());\n            }\n        } else {\n            StringBuffer inline = new StringBuffer();\n            for (Entry<String, String> cssEntry : inlineCss.entrySet()) {\n                inline.append(\"\\n<style type=\\\"text/css\\\" rel=\\\"\" + cssEntry.getKey() + \"\\\">\\n\");\n                inline.append(cssEntry.getValue()).append(\"\\n\\n\");\n                inline.append(\"\\n<\/style>\\n\");\n            }\n            pageContext.getOut().print(inline.toString());\n        }\n    }","id":16956,"modified_method":"/**\n     * Action to include the CSS resources.<p>\n     * \n     * @param cms the current cms context\n     * @param req the current request\n     * \n     * @throws CmsException if something goes wrong reading the resources\n     * @throws IOException if something goes wrong writing to the response out\n     */\n    public void tagCssAction(CmsObject cms, ServletRequest req) throws CmsException, IOException {\n\n        CmsJspStandardContextBean standardContext = getStandardContext(cms, req);\n        CmsContainerPageBean containerPage = standardContext.getPage();\n\n        Set<String> cssIncludes = new LinkedHashSet<String>();\n        Map<String, String> inlineCss = new LinkedHashMap<String, String>();\n        // add defaults\n        if (CmsStringUtil.isNotEmptyOrWhitespaceOnly(m_defaults)) {\n            String[] defaults = m_defaults.split(\"\\\\|\");\n            for (int i = 0; i < defaults.length; i++) {\n                cssIncludes.add(defaults[i]);\n            }\n        }\n        if ((containerPage != null) && (containerPage.getElements() != null)) {\n            Map<CmsUUID, I_CmsFormatterBean> formatters = OpenCms.getADEManager().getCachedFormatters(\n                standardContext.isOnline()).getFormatters();\n            for (CmsContainerBean container : containerPage.getContainers().values()) {\n                for (CmsContainerElementBean element : container.getElements()) {\n                    try {\n                        element.initResource(cms);\n                        if (!standardContext.isOnline()\n                            || element.getResource().isReleasedAndNotExpired(cms.getRequestContext().getRequestTime())) {\n                            if (element.isGroupContainer(cms) || element.isInheritedContainer(cms)) {\n                                List<CmsContainerElementBean> subElements;\n                                if (element.isGroupContainer(cms)) {\n                                    subElements = CmsJspTagContainer.getGroupContainerElements(\n                                        cms,\n                                        element,\n                                        req,\n                                        container.getType());\n                                } else {\n                                    subElements = CmsJspTagContainer.getInheritedContainerElements(cms, element);\n                                }\n                                for (CmsContainerElementBean subElement : subElements) {\n                                    subElement.initResource(cms);\n                                    if (!standardContext.isOnline()\n                                        || subElement.getResource().isReleasedAndNotExpired(\n                                            cms.getRequestContext().getRequestTime())) {\n                                        I_CmsFormatterBean formatter = getFormatterBeanForElement(\n                                            subElement,\n                                            container,\n                                            formatters);\n                                        if (formatter != null) {\n                                            cssIncludes.addAll(formatter.getCssHeadIncludes());\n                                            if (CmsStringUtil.isNotEmptyOrWhitespaceOnly(formatter.getInlineCss())) {\n                                                inlineCss.put(formatter.getId(), formatter.getInlineCss());\n                                            }\n                                        } else {\n                                            cssIncludes.addAll(getCSSHeadIncludes(cms, subElement.getResource()));\n                                        }\n                                    }\n                                }\n                            } else {\n                                I_CmsFormatterBean formatter = getFormatterBeanForElement(\n                                    element,\n                                    container,\n                                    formatters);\n                                if (formatter != null) {\n                                    cssIncludes.addAll(formatter.getCssHeadIncludes());\n                                    if (CmsStringUtil.isNotEmptyOrWhitespaceOnly(formatter.getInlineCss())) {\n                                        inlineCss.put(formatter.getId(), formatter.getInlineCss());\n                                    }\n                                } else {\n                                    cssIncludes.addAll(getCSSHeadIncludes(cms, element.getResource()));\n                                }\n                            }\n                        }\n                    } catch (CmsException e) {\n                        LOG.error(\n                            Messages.get().getBundle().key(\n                                Messages.ERR_READING_REQUIRED_RESOURCE_1,\n                                element.getSitePath()),\n                            e);\n                    }\n                }\n            }\n        }\n        if (standardContext.getDetailContentId() != null) {\n            try {\n                CmsResource detailContent = cms.readResource(standardContext.getDetailContentId());\n                CmsFormatterConfiguration config = OpenCms.getADEManager().lookupConfiguration(\n                    cms,\n                    cms.getRequestContext().getRootUri()).getFormatters(cms, detailContent);\n                boolean requiresAllIncludes = true;\n                if (CmsStringUtil.isNotEmptyOrWhitespaceOnly(getDetailtype())\n                    && CmsStringUtil.isNotEmptyOrWhitespaceOnly(getDetailwidth())) {\n                    try {\n                        int width = Integer.parseInt(getDetailwidth());\n                        I_CmsFormatterBean formatter = config.getDetailFormatter(getDetailtype(), width);\n                        cssIncludes.addAll(formatter.getCssHeadIncludes());\n                        if (CmsStringUtil.isNotEmptyOrWhitespaceOnly(formatter.getInlineCss())) {\n                            inlineCss.put(formatter.getId(), formatter.getInlineCss());\n                        }\n                        requiresAllIncludes = false;\n                    } catch (NumberFormatException ne) {\n                        // nothing to do, we will include CSS for all detail containers\n                    }\n                }\n                if (requiresAllIncludes) {\n                    for (I_CmsFormatterBean formatter : config.getDetailFormatters()) {\n                        cssIncludes.addAll(formatter.getCssHeadIncludes());\n                        if (CmsStringUtil.isNotEmptyOrWhitespaceOnly(formatter.getInlineCss())) {\n                            inlineCss.put(formatter.getId(), formatter.getInlineCss());\n                        }\n                    }\n                }\n            } catch (CmsException e) {\n                LOG.error(\n                    Messages.get().getBundle().key(\n                        Messages.ERR_READING_REQUIRED_RESOURCE_1,\n                        standardContext.getDetailContentId()),\n                    e);\n            }\n        }\n        for (String cssUri : cssIncludes) {\n            pageContext.getOut().print(\n                \"\\n<link rel=\\\"stylesheet\\\" href=\\\"\"\n                    + CmsJspTagLink.linkTagAction(cssUri.trim(), req)\n                    + generateReqParams()\n                    + \"\\\" type=\\\"text/css\\\">\");\n            if (shouldCloseTags()) {\n                pageContext.getOut().print(\"<\/link>\");\n            }\n        }\n        if (cms.getRequestContext().getCurrentProject().isOnlineProject()) {\n            if (!inlineCss.isEmpty()) {\n                StringBuffer inline = new StringBuffer(\"\\n<style type=\\\"text/css\\\">\\n\");\n                for (Entry<String, String> cssEntry : inlineCss.entrySet()) {\n                    inline.append(cssEntry.getValue()).append(\"\\n\\n\");\n                }\n                inline.append(\"\\n<\/style>\\n\");\n                pageContext.getOut().print(inline.toString());\n            }\n        } else {\n            StringBuffer inline = new StringBuffer();\n            for (Entry<String, String> cssEntry : inlineCss.entrySet()) {\n                inline.append(\"\\n<style type=\\\"text/css\\\" rel=\\\"\" + cssEntry.getKey() + \"\\\">\\n\");\n                inline.append(cssEntry.getValue()).append(\"\\n\\n\");\n                inline.append(\"\\n<\/style>\\n\");\n            }\n            pageContext.getOut().print(inline.toString());\n        }\n    }","commit_id":"835b6b2760537589712279f2f2b2c0097990ca65","url":"https://github.com/alkacon/opencms-core"},{"original_method":"/**\n     * Action to include the java-script resources.<p>\n     * \n     * @param cms the current cms context\n     * @param req the current request\n     * \n     * @throws CmsException if something goes wrong reading the resources\n     * @throws IOException if something goes wrong writing to the response out\n     */\n    public void tagJSAction(CmsObject cms, ServletRequest req) throws CmsException, IOException {\n\n        CmsJspStandardContextBean standardContext = getStandardContext(cms, req);\n        CmsContainerPageBean containerPage = standardContext.getPage();\n        Set<String> jsIncludes = new LinkedHashSet<String>();\n        Map<String, String> inlineJS = new LinkedHashMap<String, String>();\n        // add defaults\n        if (CmsStringUtil.isNotEmptyOrWhitespaceOnly(m_defaults)) {\n            String[] defaults = m_defaults.split(\"\\\\|\");\n            for (int i = 0; i < defaults.length; i++) {\n                jsIncludes.add(defaults[i]);\n            }\n        }\n        if ((containerPage != null) && (containerPage.getElements() != null)) {\n            Map<CmsUUID, I_CmsFormatterBean> formatters = OpenCms.getADEManager().getCachedFormatters(\n                standardContext.isOnline()).getFormatters();\n            for (CmsContainerBean container : containerPage.getContainers().values()) {\n                for (CmsContainerElementBean element : container.getElements()) {\n                    try {\n                        element.initResource(cms);\n                        if (element.isGroupContainer(cms) || element.isInheritedContainer(cms)) {\n                            List<CmsContainerElementBean> subElements;\n                            if (element.isGroupContainer(cms)) {\n                                subElements = CmsJspTagContainer.getGroupContainerElements(\n                                    cms,\n                                    element,\n                                    req,\n                                    container.getType());\n                            } else {\n                                subElements = CmsJspTagContainer.getInheritedContainerElements(cms, element);\n                            }\n                            for (CmsContainerElementBean subElement : subElements) {\n                                subElement.initResource(cms);\n                                I_CmsFormatterBean formatter = getFormatterBeanForElement(\n                                    subElement,\n                                    container,\n                                    formatters);\n                                if (formatter != null) {\n                                    jsIncludes.addAll(formatter.getJavascriptHeadIncludes());\n                                    if (CmsStringUtil.isNotEmptyOrWhitespaceOnly(formatter.getInlineJavascript())) {\n                                        inlineJS.put(formatter.getId(), formatter.getInlineJavascript());\n                                    }\n                                } else {\n\n                                    jsIncludes.addAll(getJSHeadIncludes(cms, subElement.getResource()));\n                                }\n                            }\n                        } else {\n                            I_CmsFormatterBean formatter = getFormatterBeanForElement(element, container, formatters);\n                            if (formatter != null) {\n                                jsIncludes.addAll(formatter.getJavascriptHeadIncludes());\n                                if (CmsStringUtil.isNotEmptyOrWhitespaceOnly(formatter.getInlineJavascript())) {\n                                    inlineJS.put(formatter.getId(), formatter.getInlineJavascript());\n                                }\n                            } else {\n\n                                jsIncludes.addAll(getJSHeadIncludes(cms, element.getResource()));\n                            }\n                        }\n                    } catch (CmsException e) {\n                        LOG.error(\n                            Messages.get().getBundle().key(\n                                Messages.ERR_READING_REQUIRED_RESOURCE_1,\n                                element.getSitePath()),\n                            e);\n                    }\n                }\n            }\n        }\n        if (standardContext.getDetailContentId() != null) {\n            try {\n                CmsResource detailContent = cms.readResource(standardContext.getDetailContentId());\n                CmsFormatterConfiguration config = OpenCms.getADEManager().lookupConfiguration(\n                    cms,\n                    cms.getRequestContext().getRootUri()).getFormatters(cms, detailContent);\n                boolean requiresAllIncludes = true;\n                if (CmsStringUtil.isNotEmptyOrWhitespaceOnly(getDetailtype())\n                    && CmsStringUtil.isNotEmptyOrWhitespaceOnly(getDetailwidth())) {\n                    try {\n                        int width = Integer.parseInt(getDetailwidth());\n                        jsIncludes.addAll(config.getDetailFormatter(getDetailtype(), width).getCssHeadIncludes());\n                        requiresAllIncludes = false;\n                    } catch (NumberFormatException ne) {\n                        // nothing to do, we will include JavaScript for all detail containers\n                    }\n                }\n                if (requiresAllIncludes) {\n                    for (I_CmsFormatterBean formatter : config.getDetailFormatters()) {\n                        jsIncludes.addAll(formatter.getJavascriptHeadIncludes());\n                    }\n                }\n            } catch (CmsException e) {\n                LOG.error(\n                    Messages.get().getBundle().key(\n                        Messages.ERR_READING_REQUIRED_RESOURCE_1,\n                        standardContext.getDetailContentId()),\n                    e);\n            }\n        }\n        for (String jsUri : jsIncludes) {\n            pageContext.getOut().print(\n                \"\\n<script type=\\\"text/javascript\\\" src=\\\"\"\n                    + CmsJspTagLink.linkTagAction(jsUri.trim(), req)\n                    + generateReqParams()\n                    + \"\\\"><\/script>\");\n        }\n        if (!inlineJS.isEmpty()) {\n            StringBuffer inline = new StringBuffer(\"\\n<script type=\\\"text/javascript\\\">\\n\");\n            for (Entry<String, String> jsEntry : inlineJS.entrySet()) {\n                inline.append(jsEntry.getValue()).append(\"\\n\\n\");\n            }\n            inline.append(\"\\n<\/script>\\n\");\n            pageContext.getOut().print(inline.toString());\n        }\n    }","id":16957,"modified_method":"/**\n     * Action to include the java-script resources.<p>\n     * \n     * @param cms the current cms context\n     * @param req the current request\n     * \n     * @throws CmsException if something goes wrong reading the resources\n     * @throws IOException if something goes wrong writing to the response out\n     */\n    public void tagJSAction(CmsObject cms, ServletRequest req) throws CmsException, IOException {\n\n        CmsJspStandardContextBean standardContext = getStandardContext(cms, req);\n        CmsContainerPageBean containerPage = standardContext.getPage();\n        Set<String> jsIncludes = new LinkedHashSet<String>();\n        Map<String, String> inlineJS = new LinkedHashMap<String, String>();\n        // add defaults\n        if (CmsStringUtil.isNotEmptyOrWhitespaceOnly(m_defaults)) {\n            String[] defaults = m_defaults.split(\"\\\\|\");\n            for (int i = 0; i < defaults.length; i++) {\n                jsIncludes.add(defaults[i]);\n            }\n        }\n        if ((containerPage != null) && (containerPage.getElements() != null)) {\n            Map<CmsUUID, I_CmsFormatterBean> formatters = OpenCms.getADEManager().getCachedFormatters(\n                standardContext.isOnline()).getFormatters();\n            for (CmsContainerBean container : containerPage.getContainers().values()) {\n                for (CmsContainerElementBean element : container.getElements()) {\n                    try {\n                        element.initResource(cms);\n                        if (!standardContext.isOnline()\n                            || element.getResource().isReleasedAndNotExpired(cms.getRequestContext().getRequestTime())) {\n                            if (element.isGroupContainer(cms) || element.isInheritedContainer(cms)) {\n                                List<CmsContainerElementBean> subElements;\n                                if (element.isGroupContainer(cms)) {\n                                    subElements = CmsJspTagContainer.getGroupContainerElements(\n                                        cms,\n                                        element,\n                                        req,\n                                        container.getType());\n                                } else {\n                                    subElements = CmsJspTagContainer.getInheritedContainerElements(cms, element);\n                                }\n                                for (CmsContainerElementBean subElement : subElements) {\n                                    subElement.initResource(cms);\n                                    if (!standardContext.isOnline()\n                                        || subElement.getResource().isReleasedAndNotExpired(\n                                            cms.getRequestContext().getRequestTime())) {\n                                        I_CmsFormatterBean formatter = getFormatterBeanForElement(\n                                            subElement,\n                                            container,\n                                            formatters);\n                                        if (formatter != null) {\n                                            jsIncludes.addAll(formatter.getJavascriptHeadIncludes());\n                                            if (CmsStringUtil.isNotEmptyOrWhitespaceOnly(formatter.getInlineJavascript())) {\n                                                inlineJS.put(formatter.getId(), formatter.getInlineJavascript());\n                                            }\n                                        } else {\n\n                                            jsIncludes.addAll(getJSHeadIncludes(cms, subElement.getResource()));\n                                        }\n                                    }\n                                }\n                            } else {\n                                I_CmsFormatterBean formatter = getFormatterBeanForElement(\n                                    element,\n                                    container,\n                                    formatters);\n                                if (formatter != null) {\n                                    jsIncludes.addAll(formatter.getJavascriptHeadIncludes());\n                                    if (CmsStringUtil.isNotEmptyOrWhitespaceOnly(formatter.getInlineJavascript())) {\n                                        inlineJS.put(formatter.getId(), formatter.getInlineJavascript());\n                                    }\n                                } else {\n\n                                    jsIncludes.addAll(getJSHeadIncludes(cms, element.getResource()));\n                                }\n                            }\n                        }\n                    } catch (CmsException e) {\n                        LOG.error(\n                            Messages.get().getBundle().key(\n                                Messages.ERR_READING_REQUIRED_RESOURCE_1,\n                                element.getSitePath()),\n                            e);\n                    }\n                }\n            }\n        }\n        if (standardContext.getDetailContentId() != null) {\n            try {\n                CmsResource detailContent = cms.readResource(standardContext.getDetailContentId());\n                CmsFormatterConfiguration config = OpenCms.getADEManager().lookupConfiguration(\n                    cms,\n                    cms.getRequestContext().getRootUri()).getFormatters(cms, detailContent);\n                boolean requiresAllIncludes = true;\n                if (CmsStringUtil.isNotEmptyOrWhitespaceOnly(getDetailtype())\n                    && CmsStringUtil.isNotEmptyOrWhitespaceOnly(getDetailwidth())) {\n                    try {\n                        int width = Integer.parseInt(getDetailwidth());\n                        jsIncludes.addAll(config.getDetailFormatter(getDetailtype(), width).getCssHeadIncludes());\n                        requiresAllIncludes = false;\n                    } catch (NumberFormatException ne) {\n                        // nothing to do, we will include JavaScript for all detail containers\n                    }\n                }\n                if (requiresAllIncludes) {\n                    for (I_CmsFormatterBean formatter : config.getDetailFormatters()) {\n                        jsIncludes.addAll(formatter.getJavascriptHeadIncludes());\n                    }\n                }\n            } catch (CmsException e) {\n                LOG.error(\n                    Messages.get().getBundle().key(\n                        Messages.ERR_READING_REQUIRED_RESOURCE_1,\n                        standardContext.getDetailContentId()),\n                    e);\n            }\n        }\n        for (String jsUri : jsIncludes) {\n            pageContext.getOut().print(\n                \"\\n<script type=\\\"text/javascript\\\" src=\\\"\"\n                    + CmsJspTagLink.linkTagAction(jsUri.trim(), req)\n                    + generateReqParams()\n                    + \"\\\"><\/script>\");\n        }\n        if (!inlineJS.isEmpty()) {\n            StringBuffer inline = new StringBuffer(\"\\n<script type=\\\"text/javascript\\\">\\n\");\n            for (Entry<String, String> jsEntry : inlineJS.entrySet()) {\n                inline.append(jsEntry.getValue()).append(\"\\n\\n\");\n            }\n            inline.append(\"\\n<\/script>\\n\");\n            pageContext.getOut().print(inline.toString());\n        }\n    }","commit_id":"835b6b2760537589712279f2f2b2c0097990ca65","url":"https://github.com/alkacon/opencms-core"},{"original_method":"/**\n     * Initializes the resource and the site path of this element.<p>\n     * \n     * @param cms the CMS context \n     * \n     * @throws CmsException if something goes wrong reading the element resource\n     */\n    public void initResource(CmsObject cms) throws CmsException {\n\n        if (m_resource == null) {\n            if (cms.getRequestContext().getCurrentProject().isOnlineProject()) {\n                m_resource = cms.readResource(getId());\n                m_releasedAndNotExpired = true;\n            } else {\n                m_resource = cms.readResource(getId(), CmsResourceFilter.IGNORE_EXPIRATION);\n                m_releasedAndNotExpired = m_resource.isReleasedAndNotExpired(cms.getRequestContext().getRequestTime());\n            }\n        } else if (!isInMemoryOnly()) {\n            CmsUUID id = m_resource.getStructureId();\n            if (id == null) {\n                id = getId();\n            }\n            // the resource object may have a wrong root path, e.g. if it was created before the resource was moved\n            if (cms.getRequestContext().getCurrentProject().isOnlineProject()) {\n                m_resource = cms.readResource(getId());\n                m_releasedAndNotExpired = true;\n            } else {\n                if (!isTemporaryContent()) {\n                    m_resource = cms.readResource(getId(), CmsResourceFilter.IGNORE_EXPIRATION);\n                }\n                m_releasedAndNotExpired = m_resource.isReleasedAndNotExpired(cms.getRequestContext().getRequestTime());\n            }\n        }\n        if (m_settings == null) {\n            m_settings = CmsXmlContentPropertyHelper.mergeDefaults(cms, m_resource, m_individualSettings);\n        }\n        // redo on every init call to ensure sitepath is calculated for current site\n        m_sitePath = cms.getSitePath(m_resource);\n    }","id":16958,"modified_method":"/**\n     * Initializes the resource and the site path of this element.<p>\n     * \n     * @param cms the CMS context \n     * \n     * @throws CmsException if something goes wrong reading the element resource\n     */\n    public void initResource(CmsObject cms) throws CmsException {\n\n        if (m_resource == null) {\n            m_resource = cms.readResource(getId(), CmsResourceFilter.IGNORE_EXPIRATION);\n            m_releasedAndNotExpired = m_resource.isReleasedAndNotExpired(cms.getRequestContext().getRequestTime());\n        } else if (!isInMemoryOnly()) {\n            CmsUUID id = m_resource.getStructureId();\n            if (id == null) {\n                id = getId();\n            }\n            // the resource object may have a wrong root path, e.g. if it was created before the resource was moved\n            m_resource = cms.readResource(id, CmsResourceFilter.IGNORE_EXPIRATION);\n            m_releasedAndNotExpired = m_resource.isReleasedAndNotExpired(cms.getRequestContext().getRequestTime());\n        }\n        if (m_settings == null) {\n            m_settings = CmsXmlContentPropertyHelper.mergeDefaults(cms, m_resource, m_individualSettings);\n        }\n        // redo on every init call to ensure sitepath is calculated for current site\n        m_sitePath = cms.getSitePath(m_resource);\n    }","commit_id":"d0f30e65d2fa5097c603820ca71a48f2f2ba1f85","url":"https://github.com/alkacon/opencms-core"},{"original_method":"/**\n     * Renders a container element.<p>\n     * \n     * @param request the current request \n     * @param cms the CMS context \n     * @param standardContext the current standard contxt bean\n     * @param element the container element to render\n     * @param locale the requested locale\n     * @param alreadyFull if true, only render invisible elements (they don't count towards the \"max elements\") \n     * \n     * @return true if an element was rendered that counts towards the container's maximum number of elements \n     * \n     * @throws Exception if something goes wrong \n     */\n    private boolean renderContainerElement(\n        HttpServletRequest request,\n        CmsObject cms,\n        CmsJspStandardContextBean standardContext,\n        CmsContainerElementBean element,\n        Locale locale,\n        boolean alreadyFull) throws Exception {\n\n        CmsTemplateContext context = (CmsTemplateContext)(request.getAttribute(CmsTemplateContextManager.ATTR_TEMPLATE_CONTEXT));\n        if ((context == null) && alreadyFull) {\n            return false;\n        }\n        boolean showInContext = shouldShowInContext(element, context);\n        boolean isOnline = cms.getRequestContext().getCurrentProject().isOnlineProject();\n        if (isOnline && !showInContext) {\n            return false;\n        }\n        ServletRequest req = pageContext.getRequest();\n        ServletResponse res = pageContext.getResponse();\n        String containerType = getType();\n        int containerWidth = getContainerWidth();\n        element.initResource(cms);\n        if (cms.getRequestContext().getCurrentProject().isOnlineProject()\n            && !element.getResource().isReleasedAndNotExpired(System.currentTimeMillis())) {\n            return false;\n        }\n        CmsADEConfigData adeConfig = OpenCms.getADEManager().lookupConfiguration(\n            cms,\n            cms.getRequestContext().getRootUri());\n        boolean isGroupContainer = element.isGroupContainer(cms);\n        boolean isInheritedContainer = element.isInheritedContainer(cms);\n        I_CmsFormatterBean formatterConfig = null;\n        // writing elements to the session cache to improve performance of the container-page editor in offline project\n        if (!isOnline) {\n            if (!isGroupContainer && !isInheritedContainer) {\n                // ensure that the formatter configuration id is added to the element settings, so it will be persisted on save\n                formatterConfig = ensureValidFormatterSettings(cms, element, adeConfig, containerType, containerWidth);\n            }\n            getSessionCache(cms).setCacheContainerElement(element.editorHash(), element);\n        }\n\n        if (isGroupContainer || isInheritedContainer) {\n            if (alreadyFull) {\n                return false;\n            }\n            List<CmsContainerElementBean> subElements;\n            if (isGroupContainer) {\n                subElements = getGroupContainerElements(cms, element, req, containerType);\n            } else {\n                // inherited container case\n                subElements = getInheritedContainerElements(cms, element);\n            }\n            // wrapping the elements with DIV containing initial element data. To be removed by the container-page editor\n            printElementWrapperTagStart(isOnline, cms, element, true);\n            for (CmsContainerElementBean subelement : subElements) {\n\n                try {\n                    subelement.initResource(cms);\n                    boolean shouldShowSubElementInContext = shouldShowInContext(subelement, context);\n                    if (isOnline && !shouldShowSubElementInContext) {\n                        continue;\n                    }\n                    I_CmsFormatterBean subElementFormatterConfig = null;\n                    // writing elements to the session cache to improve performance of the container-page editor\n                    if (!isOnline) {\n                        subElementFormatterConfig = ensureValidFormatterSettings(\n                            cms,\n                            subelement,\n                            adeConfig,\n                            containerType,\n                            containerWidth);\n                        getSessionCache(cms).setCacheContainerElement(subelement.editorHash(), subelement);\n                    }\n                    if (subElementFormatterConfig == null) {\n                        CmsFormatterConfiguration subelementFormatters = adeConfig.getFormatters(\n                            cms,\n                            subelement.getResource());\n                        subElementFormatterConfig = subelementFormatters.getDefaultFormatter(\n                            containerType,\n                            containerWidth);\n                    }\n\n                    if (subElementFormatterConfig == null) {\n                        if (LOG.isErrorEnabled()) {\n                            LOG.error(new CmsIllegalStateException(Messages.get().container(\n                                Messages.ERR_XSD_NO_TEMPLATE_FORMATTER_3,\n                                subelement.getSitePath(),\n                                OpenCms.getResourceManager().getResourceType(subelement.getResource()).getTypeName(),\n                                containerType)));\n                        }\n                        // skip this element, it has no formatter for this container type defined\n                        continue;\n                    }\n                    // execute the formatter JSP for the given element URI\n                    // wrapping the elements with DIV containing initial element data. To be removed by the container-page editor\n                    printElementWrapperTagStart(isOnline, cms, subelement, false);\n                    standardContext.setElement(subelement);\n                    try {\n                        String formatterSitePath = cms.getRequestContext().removeSiteRoot(\n                            subElementFormatterConfig.getJspRootPath());\n                        if (shouldShowSubElementInContext) {\n                            CmsJspTagInclude.includeTagAction(\n                                pageContext,\n                                formatterSitePath,\n                                null,\n                                locale,\n                                false,\n                                isOnline,\n                                null,\n                                CmsRequestUtil.getAtrributeMap(req),\n                                req,\n                                res);\n                        } else {\n                            pageContext.getOut().print(DUMMY_ELEMENT);\n                        }\n                    } catch (Exception e) {\n                        if (LOG.isErrorEnabled()) {\n                            LOG.error(\n                                Messages.get().getBundle().key(\n                                    Messages.ERR_CONTAINER_PAGE_ELEMENT_RENDER_ERROR_2,\n                                    subelement.getSitePath(),\n                                    subElementFormatterConfig),\n                                e);\n                        }\n                        printElementErrorTag(\n                            isOnline,\n                            subelement.getSitePath(),\n                            subElementFormatterConfig.getJspRootPath(),\n                            e);\n                    }\n                    printElementWrapperTagEnd(isOnline, false);\n                } catch (Exception e) {\n                    if (LOG.isErrorEnabled()) {\n                        LOG.error(e);\n                    }\n                }\n            }\n            printElementWrapperTagEnd(isOnline, true);\n            return true;\n        } else {\n            boolean result = true;\n            if (alreadyFull) {\n                result = false;\n                if (!showInContext) {\n                    printElementWrapperTagStart(isOnline, cms, element, false);\n                    pageContext.getOut().print(DUMMY_ELEMENT);\n                    printElementWrapperTagEnd(isOnline, false);\n                }\n            } else {\n                String formatter = null;\n                try {\n                    if (formatterConfig != null) {\n                        formatter = cms.getRequestContext().removeSiteRoot(formatterConfig.getJspRootPath());\n                    } else {\n                        formatter = cms.getSitePath(cms.readResource(element.getFormatterId()));\n                    }\n                } catch (CmsException e) {\n                    // the formatter resource can not be found, try reading it form the configuration\n                    CmsFormatterConfiguration elementFormatters = adeConfig.getFormatters(cms, element.getResource());\n                    I_CmsFormatterBean elementFormatterBean = elementFormatters.getDefaultFormatter(\n                        containerType,\n                        containerWidth);\n                    if (elementFormatterBean == null) {\n                        if (LOG.isErrorEnabled()) {\n                            LOG.error(new CmsIllegalStateException(Messages.get().container(\n                                Messages.ERR_XSD_NO_TEMPLATE_FORMATTER_3,\n                                element.getSitePath(),\n                                OpenCms.getResourceManager().getResourceType(element.getResource()).getTypeName(),\n                                containerType)));\n                        }\n                        // skip this element, it has no formatter for this container type defined\n                        return false;\n                    }\n                    formatter = cms.getRequestContext().removeSiteRoot(elementFormatterBean.getJspRootPath());\n                }\n\n                printElementWrapperTagStart(isOnline, cms, element, false);\n                standardContext.setElement(element);\n                try {\n                    if (!showInContext) {\n                        // write invisible dummy element \n                        pageContext.getOut().print(DUMMY_ELEMENT);\n                        result = false;\n                    } else {\n                        // execute the formatter jsp for the given element uri\n                        CmsJspTagInclude.includeTagAction(\n                            pageContext,\n                            formatter,\n                            null,\n                            locale,\n                            false,\n                            isOnline,\n                            null,\n                            CmsRequestUtil.getAtrributeMap(req),\n                            req,\n                            res);\n                    }\n                } catch (Exception e) {\n                    if (LOG.isErrorEnabled()) {\n                        LOG.error(\n                            Messages.get().getBundle().key(\n                                Messages.ERR_CONTAINER_PAGE_ELEMENT_RENDER_ERROR_2,\n                                element.getSitePath(),\n                                formatter),\n                            e);\n                    }\n                    printElementErrorTag(isOnline, element.getSitePath(), formatter, e);\n                }\n                printElementWrapperTagEnd(isOnline, false);\n            }\n            return result;\n        }\n    }","id":16959,"modified_method":"/**\n     * Renders a container element.<p>\n     * \n     * @param request the current request \n     * @param cms the CMS context \n     * @param standardContext the current standard contxt bean\n     * @param element the container element to render\n     * @param locale the requested locale\n     * @param alreadyFull if true, only render invisible elements (they don't count towards the \"max elements\") \n     * \n     * @return true if an element was rendered that counts towards the container's maximum number of elements \n     * \n     * @throws Exception if something goes wrong \n     */\n    private boolean renderContainerElement(\n        HttpServletRequest request,\n        CmsObject cms,\n        CmsJspStandardContextBean standardContext,\n        CmsContainerElementBean element,\n        Locale locale,\n        boolean alreadyFull) throws Exception {\n\n        CmsTemplateContext context = (CmsTemplateContext)(request.getAttribute(CmsTemplateContextManager.ATTR_TEMPLATE_CONTEXT));\n        if ((context == null) && alreadyFull) {\n            return false;\n        }\n        boolean showInContext = shouldShowInContext(element, context);\n        boolean isOnline = cms.getRequestContext().getCurrentProject().isOnlineProject();\n        if (isOnline && !showInContext) {\n            return false;\n        }\n        element.initResource(cms);\n        if (isOnline && !element.isReleasedAndNotExpired()) {\n            // do not render expired resources for the online project\n            return false;\n        }\n        ServletRequest req = pageContext.getRequest();\n        ServletResponse res = pageContext.getResponse();\n        String containerType = getType();\n        int containerWidth = getContainerWidth();\n        CmsADEConfigData adeConfig = OpenCms.getADEManager().lookupConfiguration(\n            cms,\n            cms.getRequestContext().getRootUri());\n        boolean isGroupContainer = element.isGroupContainer(cms);\n        boolean isInheritedContainer = element.isInheritedContainer(cms);\n        I_CmsFormatterBean formatterConfig = null;\n        // writing elements to the session cache to improve performance of the container-page editor in offline project\n        if (!isOnline) {\n            if (!isGroupContainer && !isInheritedContainer) {\n                // ensure that the formatter configuration id is added to the element settings, so it will be persisted on save\n                formatterConfig = ensureValidFormatterSettings(cms, element, adeConfig, containerType, containerWidth);\n            }\n            getSessionCache(cms).setCacheContainerElement(element.editorHash(), element);\n        }\n\n        if (isGroupContainer || isInheritedContainer) {\n            if (alreadyFull) {\n                return false;\n            }\n            List<CmsContainerElementBean> subElements;\n            if (isGroupContainer) {\n                subElements = getGroupContainerElements(cms, element, req, containerType);\n            } else {\n                // inherited container case\n                subElements = getInheritedContainerElements(cms, element);\n            }\n            // wrapping the elements with DIV containing initial element data. To be removed by the container-page editor\n            printElementWrapperTagStart(isOnline, cms, element, true);\n            for (CmsContainerElementBean subelement : subElements) {\n\n                try {\n                    subelement.initResource(cms);\n                    boolean shouldShowSubElementInContext = shouldShowInContext(subelement, context);\n                    if (isOnline && (!shouldShowSubElementInContext || !subelement.isReleasedAndNotExpired())) {\n                        continue;\n                    }\n                    I_CmsFormatterBean subElementFormatterConfig = null;\n                    // writing elements to the session cache to improve performance of the container-page editor\n                    if (!isOnline) {\n                        subElementFormatterConfig = ensureValidFormatterSettings(\n                            cms,\n                            subelement,\n                            adeConfig,\n                            containerType,\n                            containerWidth);\n                        getSessionCache(cms).setCacheContainerElement(subelement.editorHash(), subelement);\n                    }\n                    if (subElementFormatterConfig == null) {\n                        CmsFormatterConfiguration subelementFormatters = adeConfig.getFormatters(\n                            cms,\n                            subelement.getResource());\n                        subElementFormatterConfig = subelementFormatters.getDefaultFormatter(\n                            containerType,\n                            containerWidth);\n                    }\n\n                    if (subElementFormatterConfig == null) {\n                        if (LOG.isErrorEnabled()) {\n                            LOG.error(new CmsIllegalStateException(Messages.get().container(\n                                Messages.ERR_XSD_NO_TEMPLATE_FORMATTER_3,\n                                subelement.getSitePath(),\n                                OpenCms.getResourceManager().getResourceType(subelement.getResource()).getTypeName(),\n                                containerType)));\n                        }\n                        // skip this element, it has no formatter for this container type defined\n                        continue;\n                    }\n                    // execute the formatter JSP for the given element URI\n                    // wrapping the elements with DIV containing initial element data. To be removed by the container-page editor\n                    printElementWrapperTagStart(isOnline, cms, subelement, false);\n                    standardContext.setElement(subelement);\n                    try {\n                        String formatterSitePath = cms.getRequestContext().removeSiteRoot(\n                            subElementFormatterConfig.getJspRootPath());\n                        if (shouldShowSubElementInContext) {\n                            CmsJspTagInclude.includeTagAction(\n                                pageContext,\n                                formatterSitePath,\n                                null,\n                                locale,\n                                false,\n                                isOnline,\n                                null,\n                                CmsRequestUtil.getAtrributeMap(req),\n                                req,\n                                res);\n                        } else {\n                            pageContext.getOut().print(DUMMY_ELEMENT);\n                        }\n                    } catch (Exception e) {\n                        if (LOG.isErrorEnabled()) {\n                            LOG.error(\n                                Messages.get().getBundle().key(\n                                    Messages.ERR_CONTAINER_PAGE_ELEMENT_RENDER_ERROR_2,\n                                    subelement.getSitePath(),\n                                    subElementFormatterConfig),\n                                e);\n                        }\n                        printElementErrorTag(\n                            isOnline,\n                            subelement.getSitePath(),\n                            subElementFormatterConfig.getJspRootPath(),\n                            e);\n                    }\n                    printElementWrapperTagEnd(isOnline, false);\n                } catch (Exception e) {\n                    if (LOG.isErrorEnabled()) {\n                        LOG.error(e);\n                    }\n                }\n            }\n            printElementWrapperTagEnd(isOnline, true);\n            return true;\n        } else {\n            boolean result = true;\n            if (alreadyFull) {\n                result = false;\n                if (!showInContext) {\n                    printElementWrapperTagStart(isOnline, cms, element, false);\n                    pageContext.getOut().print(DUMMY_ELEMENT);\n                    printElementWrapperTagEnd(isOnline, false);\n                }\n            } else {\n                String formatter = null;\n                try {\n                    if (formatterConfig != null) {\n                        formatter = cms.getRequestContext().removeSiteRoot(formatterConfig.getJspRootPath());\n                    } else {\n                        formatter = cms.getSitePath(cms.readResource(element.getFormatterId()));\n                    }\n                } catch (CmsException e) {\n                    // the formatter resource can not be found, try reading it form the configuration\n                    CmsFormatterConfiguration elementFormatters = adeConfig.getFormatters(cms, element.getResource());\n                    I_CmsFormatterBean elementFormatterBean = elementFormatters.getDefaultFormatter(\n                        containerType,\n                        containerWidth);\n                    if (elementFormatterBean == null) {\n                        if (LOG.isErrorEnabled()) {\n                            LOG.error(new CmsIllegalStateException(Messages.get().container(\n                                Messages.ERR_XSD_NO_TEMPLATE_FORMATTER_3,\n                                element.getSitePath(),\n                                OpenCms.getResourceManager().getResourceType(element.getResource()).getTypeName(),\n                                containerType)));\n                        }\n                        // skip this element, it has no formatter for this container type defined\n                        return false;\n                    }\n                    formatter = cms.getRequestContext().removeSiteRoot(elementFormatterBean.getJspRootPath());\n                }\n\n                printElementWrapperTagStart(isOnline, cms, element, false);\n                standardContext.setElement(element);\n                try {\n                    if (!showInContext) {\n                        // write invisible dummy element \n                        pageContext.getOut().print(DUMMY_ELEMENT);\n                        result = false;\n                    } else {\n                        // execute the formatter jsp for the given element uri\n                        CmsJspTagInclude.includeTagAction(\n                            pageContext,\n                            formatter,\n                            null,\n                            locale,\n                            false,\n                            isOnline,\n                            null,\n                            CmsRequestUtil.getAtrributeMap(req),\n                            req,\n                            res);\n                    }\n                } catch (Exception e) {\n                    if (LOG.isErrorEnabled()) {\n                        LOG.error(\n                            Messages.get().getBundle().key(\n                                Messages.ERR_CONTAINER_PAGE_ELEMENT_RENDER_ERROR_2,\n                                element.getSitePath(),\n                                formatter),\n                            e);\n                    }\n                    printElementErrorTag(isOnline, element.getSitePath(), formatter, e);\n                }\n                printElementWrapperTagEnd(isOnline, false);\n            }\n            return result;\n        }\n    }","commit_id":"d0f30e65d2fa5097c603820ca71a48f2f2ba1f85","url":"https://github.com/alkacon/opencms-core"},{"original_method":"/**\n     * Initializes this formatter tag.<p> \n     * \n     * @throws JspException in case something goes wrong\n     */\n    protected void init() throws JspException {\n\n        // initialize OpenCms access objects\n        m_controller = CmsFlexController.getController(pageContext.getRequest());\n        m_cms = m_controller.getCmsObject();\n\n        try {\n            // get the resource name from the selected container\n            m_element = OpenCms.getADEManager().getCurrentElement(pageContext.getRequest());\n            m_element.initResource(m_cms);\n            if (m_locale == null) {\n                // no locale set, use locale from users request context\n                m_locale = m_cms.getRequestContext().getLocale();\n            }\n\n            // load content and store it\n            CmsJspContentAccessBean bean;\n            if ((m_element.isInMemoryOnly() || m_element.isTemporaryContent())\n                && (m_element.getResource() instanceof CmsFile)) {\n                I_CmsXmlDocument xmlContent = CmsXmlContentFactory.unmarshal(m_cms, (CmsFile)m_element.getResource());\n                bean = new CmsJspContentAccessBean(m_cms, m_locale, xmlContent);\n            } else {\n                bean = new CmsJspContentAccessBean(m_cms, m_locale, m_element.getResource());\n            }\n            storeAttribute(getVar(), bean);\n\n            if (m_value != null) {\n                // if the optional \"val\" parameter has been set, store the value map of the content in the page context scope\n                storeAttribute(getVal(), bean.getValue());\n            }\n\n            if (m_rdfa != null) {\n                // if the optional \"rdfa\" parameter has been set, store the rdfa map of the content in the page context scope\n                storeAttribute(getRdfa(), bean.getRdfa());\n            }\n\n        } catch (CmsException e) {\n            m_controller.setThrowable(e, m_cms.getRequestContext().getUri());\n            throw new JspException(e);\n        }\n    }","id":16960,"modified_method":"/**\n     * Initializes this formatter tag.<p> \n     * \n     * @throws JspException in case something goes wrong\n     */\n    protected void init() throws JspException {\n\n        // initialize OpenCms access objects\n        m_controller = CmsFlexController.getController(pageContext.getRequest());\n        m_cms = m_controller.getCmsObject();\n\n        try {\n            // get the resource name from the selected container\n            m_element = OpenCms.getADEManager().getCurrentElement(pageContext.getRequest());\n            m_element.initResource(m_cms);\n            if (m_cms.getRequestContext().getCurrentProject().isOnlineProject() && !m_element.isReleasedAndNotExpired()) {\n                throw new CmsException(Messages.get().container(\n                    Messages.ERR_RESOURCE_IS_NOT_RELEASE_OR_EXPIRED_1,\n                    m_element.getResource().getRootPath()));\n            }\n            if (m_locale == null) {\n                // no locale set, use locale from users request context\n                m_locale = m_cms.getRequestContext().getLocale();\n            }\n\n            // load content and store it\n            CmsJspContentAccessBean bean;\n            if ((m_element.isInMemoryOnly() || m_element.isTemporaryContent())\n                && (m_element.getResource() instanceof CmsFile)) {\n                I_CmsXmlDocument xmlContent = CmsXmlContentFactory.unmarshal(m_cms, (CmsFile)m_element.getResource());\n                bean = new CmsJspContentAccessBean(m_cms, m_locale, xmlContent);\n            } else {\n                bean = new CmsJspContentAccessBean(m_cms, m_locale, m_element.getResource());\n            }\n            storeAttribute(getVar(), bean);\n\n            if (m_value != null) {\n                // if the optional \"val\" parameter has been set, store the value map of the content in the page context scope\n                storeAttribute(getVal(), bean.getValue());\n            }\n\n            if (m_rdfa != null) {\n                // if the optional \"rdfa\" parameter has been set, store the rdfa map of the content in the page context scope\n                storeAttribute(getRdfa(), bean.getRdfa());\n            }\n\n        } catch (CmsException e) {\n            m_controller.setThrowable(e, m_cms.getRequestContext().getUri());\n            throw new JspException(e);\n        }\n    }","commit_id":"d0f30e65d2fa5097c603820ca71a48f2f2ba1f85","url":"https://github.com/alkacon/opencms-core"},{"original_method":"/**\n     * Action to include the CSS resources.<p>\n     * \n     * @param cms the current cms context\n     * @param req the current request\n     * \n     * @throws CmsException if something goes wrong reading the resources\n     * @throws IOException if something goes wrong writing to the response out\n     */\n    public void tagCssAction(CmsObject cms, ServletRequest req) throws CmsException, IOException {\n\n        CmsJspStandardContextBean standardContext = getStandardContext(cms, req);\n        CmsContainerPageBean containerPage = standardContext.getPage();\n\n        Set<String> cssIncludes = new LinkedHashSet<String>();\n        Map<String, String> inlineCss = new LinkedHashMap<String, String>();\n        // add defaults\n        if (CmsStringUtil.isNotEmptyOrWhitespaceOnly(m_defaults)) {\n            String[] defaults = m_defaults.split(\"\\\\|\");\n            for (int i = 0; i < defaults.length; i++) {\n                cssIncludes.add(defaults[i]);\n            }\n        }\n        if ((containerPage != null) && (containerPage.getElements() != null)) {\n            Map<CmsUUID, I_CmsFormatterBean> formatters = OpenCms.getADEManager().getCachedFormatters(\n                standardContext.isOnline()).getFormatters();\n            for (CmsContainerBean container : containerPage.getContainers().values()) {\n                for (CmsContainerElementBean element : container.getElements()) {\n                    try {\n                        element.initResource(cms);\n                        if (element.isGroupContainer(cms) || element.isInheritedContainer(cms)) {\n                            List<CmsContainerElementBean> subElements;\n                            if (element.isGroupContainer(cms)) {\n                                subElements = CmsJspTagContainer.getGroupContainerElements(\n                                    cms,\n                                    element,\n                                    req,\n                                    container.getType());\n                            } else {\n                                subElements = CmsJspTagContainer.getInheritedContainerElements(cms, element);\n                            }\n                            for (CmsContainerElementBean subElement : subElements) {\n                                subElement.initResource(cms);\n                                I_CmsFormatterBean formatter = getFormatterBeanForElement(\n                                    subElement,\n                                    container,\n                                    formatters);\n                                if (formatter != null) {\n                                    cssIncludes.addAll(formatter.getCssHeadIncludes());\n                                    if (CmsStringUtil.isNotEmptyOrWhitespaceOnly(formatter.getInlineCss())) {\n                                        inlineCss.put(formatter.getId(), formatter.getInlineCss());\n                                    }\n                                } else {\n                                    cssIncludes.addAll(getCSSHeadIncludes(cms, subElement.getResource()));\n                                }\n                            }\n                        } else {\n                            I_CmsFormatterBean formatter = getFormatterBeanForElement(element, container, formatters);\n                            if (formatter != null) {\n                                cssIncludes.addAll(formatter.getCssHeadIncludes());\n                                if (CmsStringUtil.isNotEmptyOrWhitespaceOnly(formatter.getInlineCss())) {\n                                    inlineCss.put(formatter.getId(), formatter.getInlineCss());\n                                }\n                            } else {\n                                cssIncludes.addAll(getCSSHeadIncludes(cms, element.getResource()));\n                            }\n                        }\n                    } catch (CmsException e) {\n                        LOG.error(\n                            Messages.get().getBundle().key(\n                                Messages.ERR_READING_REQUIRED_RESOURCE_1,\n                                element.getSitePath()),\n                            e);\n                    }\n                }\n            }\n        }\n        if (standardContext.getDetailContentId() != null) {\n            try {\n                CmsResource detailContent = cms.readResource(standardContext.getDetailContentId());\n                CmsFormatterConfiguration config = OpenCms.getADEManager().lookupConfiguration(\n                    cms,\n                    cms.getRequestContext().getRootUri()).getFormatters(cms, detailContent);\n                boolean requiresAllIncludes = true;\n                if (CmsStringUtil.isNotEmptyOrWhitespaceOnly(getDetailtype())\n                    && CmsStringUtil.isNotEmptyOrWhitespaceOnly(getDetailwidth())) {\n                    try {\n                        int width = Integer.parseInt(getDetailwidth());\n                        I_CmsFormatterBean formatter = config.getDetailFormatter(getDetailtype(), width);\n                        cssIncludes.addAll(formatter.getCssHeadIncludes());\n                        if (CmsStringUtil.isNotEmptyOrWhitespaceOnly(formatter.getInlineCss())) {\n                            inlineCss.put(formatter.getId(), formatter.getInlineCss());\n                        }\n                        requiresAllIncludes = false;\n                    } catch (NumberFormatException ne) {\n                        // nothing to do, we will include CSS for all detail containers\n                    }\n                }\n                if (requiresAllIncludes) {\n                    for (I_CmsFormatterBean formatter : config.getDetailFormatters()) {\n                        cssIncludes.addAll(formatter.getCssHeadIncludes());\n                        if (CmsStringUtil.isNotEmptyOrWhitespaceOnly(formatter.getInlineCss())) {\n                            inlineCss.put(formatter.getId(), formatter.getInlineCss());\n                        }\n                    }\n                }\n            } catch (CmsException e) {\n                LOG.error(\n                    Messages.get().getBundle().key(\n                        Messages.ERR_READING_REQUIRED_RESOURCE_1,\n                        standardContext.getDetailContentId()),\n                    e);\n            }\n        }\n        for (String cssUri : cssIncludes) {\n            pageContext.getOut().print(\n                \"\\n<link rel=\\\"stylesheet\\\" href=\\\"\"\n                    + CmsJspTagLink.linkTagAction(cssUri.trim(), req)\n                    + generateReqParams()\n                    + \"\\\" type=\\\"text/css\\\">\");\n            if (shouldCloseTags()) {\n                pageContext.getOut().print(\"<\/link>\");\n            }\n        }\n        if (cms.getRequestContext().getCurrentProject().isOnlineProject()) {\n            if (!inlineCss.isEmpty()) {\n                StringBuffer inline = new StringBuffer(\"\\n<style type=\\\"text/css\\\">\\n\");\n                for (Entry<String, String> cssEntry : inlineCss.entrySet()) {\n                    inline.append(cssEntry.getValue()).append(\"\\n\\n\");\n                }\n                inline.append(\"\\n<\/style>\\n\");\n                pageContext.getOut().print(inline.toString());\n            }\n        } else {\n            StringBuffer inline = new StringBuffer();\n            for (Entry<String, String> cssEntry : inlineCss.entrySet()) {\n                inline.append(\"\\n<style type=\\\"text/css\\\" rel=\\\"\" + cssEntry.getKey() + \"\\\">\\n\");\n                inline.append(cssEntry.getValue()).append(\"\\n\\n\");\n                inline.append(\"\\n<\/style>\\n\");\n            }\n            pageContext.getOut().print(inline.toString());\n        }\n    }","id":16961,"modified_method":"/**\n     * Action to include the CSS resources.<p>\n     * \n     * @param cms the current cms context\n     * @param req the current request\n     * \n     * @throws CmsException if something goes wrong reading the resources\n     * @throws IOException if something goes wrong writing to the response out\n     */\n    public void tagCssAction(CmsObject cms, ServletRequest req) throws CmsException, IOException {\n\n        CmsJspStandardContextBean standardContext = getStandardContext(cms, req);\n        CmsContainerPageBean containerPage = standardContext.getPage();\n\n        Set<String> cssIncludes = new LinkedHashSet<String>();\n        Map<String, String> inlineCss = new LinkedHashMap<String, String>();\n        // add defaults\n        if (CmsStringUtil.isNotEmptyOrWhitespaceOnly(m_defaults)) {\n            String[] defaults = m_defaults.split(\"\\\\|\");\n            for (int i = 0; i < defaults.length; i++) {\n                cssIncludes.add(defaults[i]);\n            }\n        }\n        if ((containerPage != null) && (containerPage.getElements() != null)) {\n            Map<CmsUUID, I_CmsFormatterBean> formatters = OpenCms.getADEManager().getCachedFormatters(\n                standardContext.isOnline()).getFormatters();\n            for (CmsContainerBean container : containerPage.getContainers().values()) {\n                for (CmsContainerElementBean element : container.getElements()) {\n                    try {\n                        element.initResource(cms);\n                        if (!standardContext.isOnline()\n                            || element.getResource().isReleasedAndNotExpired(cms.getRequestContext().getRequestTime())) {\n                            if (element.isGroupContainer(cms) || element.isInheritedContainer(cms)) {\n                                List<CmsContainerElementBean> subElements;\n                                if (element.isGroupContainer(cms)) {\n                                    subElements = CmsJspTagContainer.getGroupContainerElements(\n                                        cms,\n                                        element,\n                                        req,\n                                        container.getType());\n                                } else {\n                                    subElements = CmsJspTagContainer.getInheritedContainerElements(cms, element);\n                                }\n                                for (CmsContainerElementBean subElement : subElements) {\n                                    subElement.initResource(cms);\n                                    if (!standardContext.isOnline()\n                                        || subElement.getResource().isReleasedAndNotExpired(\n                                            cms.getRequestContext().getRequestTime())) {\n                                        I_CmsFormatterBean formatter = getFormatterBeanForElement(\n                                            subElement,\n                                            container,\n                                            formatters);\n                                        if (formatter != null) {\n                                            cssIncludes.addAll(formatter.getCssHeadIncludes());\n                                            if (CmsStringUtil.isNotEmptyOrWhitespaceOnly(formatter.getInlineCss())) {\n                                                inlineCss.put(formatter.getId(), formatter.getInlineCss());\n                                            }\n                                        } else {\n                                            cssIncludes.addAll(getCSSHeadIncludes(cms, subElement.getResource()));\n                                        }\n                                    }\n                                }\n                            } else {\n                                I_CmsFormatterBean formatter = getFormatterBeanForElement(\n                                    element,\n                                    container,\n                                    formatters);\n                                if (formatter != null) {\n                                    cssIncludes.addAll(formatter.getCssHeadIncludes());\n                                    if (CmsStringUtil.isNotEmptyOrWhitespaceOnly(formatter.getInlineCss())) {\n                                        inlineCss.put(formatter.getId(), formatter.getInlineCss());\n                                    }\n                                } else {\n                                    cssIncludes.addAll(getCSSHeadIncludes(cms, element.getResource()));\n                                }\n                            }\n                        }\n                    } catch (CmsException e) {\n                        LOG.error(\n                            Messages.get().getBundle().key(\n                                Messages.ERR_READING_REQUIRED_RESOURCE_1,\n                                element.getSitePath()),\n                            e);\n                    }\n                }\n            }\n        }\n        if (standardContext.getDetailContentId() != null) {\n            try {\n                CmsResource detailContent = cms.readResource(standardContext.getDetailContentId());\n                CmsFormatterConfiguration config = OpenCms.getADEManager().lookupConfiguration(\n                    cms,\n                    cms.getRequestContext().getRootUri()).getFormatters(cms, detailContent);\n                boolean requiresAllIncludes = true;\n                if (CmsStringUtil.isNotEmptyOrWhitespaceOnly(getDetailtype())\n                    && CmsStringUtil.isNotEmptyOrWhitespaceOnly(getDetailwidth())) {\n                    try {\n                        int width = Integer.parseInt(getDetailwidth());\n                        I_CmsFormatterBean formatter = config.getDetailFormatter(getDetailtype(), width);\n                        cssIncludes.addAll(formatter.getCssHeadIncludes());\n                        if (CmsStringUtil.isNotEmptyOrWhitespaceOnly(formatter.getInlineCss())) {\n                            inlineCss.put(formatter.getId(), formatter.getInlineCss());\n                        }\n                        requiresAllIncludes = false;\n                    } catch (NumberFormatException ne) {\n                        // nothing to do, we will include CSS for all detail containers\n                    }\n                }\n                if (requiresAllIncludes) {\n                    for (I_CmsFormatterBean formatter : config.getDetailFormatters()) {\n                        cssIncludes.addAll(formatter.getCssHeadIncludes());\n                        if (CmsStringUtil.isNotEmptyOrWhitespaceOnly(formatter.getInlineCss())) {\n                            inlineCss.put(formatter.getId(), formatter.getInlineCss());\n                        }\n                    }\n                }\n            } catch (CmsException e) {\n                LOG.error(\n                    Messages.get().getBundle().key(\n                        Messages.ERR_READING_REQUIRED_RESOURCE_1,\n                        standardContext.getDetailContentId()),\n                    e);\n            }\n        }\n        for (String cssUri : cssIncludes) {\n            pageContext.getOut().print(\n                \"\\n<link rel=\\\"stylesheet\\\" href=\\\"\"\n                    + CmsJspTagLink.linkTagAction(cssUri.trim(), req)\n                    + generateReqParams()\n                    + \"\\\" type=\\\"text/css\\\">\");\n            if (shouldCloseTags()) {\n                pageContext.getOut().print(\"<\/link>\");\n            }\n        }\n        if (cms.getRequestContext().getCurrentProject().isOnlineProject()) {\n            if (!inlineCss.isEmpty()) {\n                StringBuffer inline = new StringBuffer(\"\\n<style type=\\\"text/css\\\">\\n\");\n                for (Entry<String, String> cssEntry : inlineCss.entrySet()) {\n                    inline.append(cssEntry.getValue()).append(\"\\n\\n\");\n                }\n                inline.append(\"\\n<\/style>\\n\");\n                pageContext.getOut().print(inline.toString());\n            }\n        } else {\n            StringBuffer inline = new StringBuffer();\n            for (Entry<String, String> cssEntry : inlineCss.entrySet()) {\n                inline.append(\"\\n<style type=\\\"text/css\\\" rel=\\\"\" + cssEntry.getKey() + \"\\\">\\n\");\n                inline.append(cssEntry.getValue()).append(\"\\n\\n\");\n                inline.append(\"\\n<\/style>\\n\");\n            }\n            pageContext.getOut().print(inline.toString());\n        }\n    }","commit_id":"d0f30e65d2fa5097c603820ca71a48f2f2ba1f85","url":"https://github.com/alkacon/opencms-core"},{"original_method":"/**\n     * Action to include the java-script resources.<p>\n     * \n     * @param cms the current cms context\n     * @param req the current request\n     * \n     * @throws CmsException if something goes wrong reading the resources\n     * @throws IOException if something goes wrong writing to the response out\n     */\n    public void tagJSAction(CmsObject cms, ServletRequest req) throws CmsException, IOException {\n\n        CmsJspStandardContextBean standardContext = getStandardContext(cms, req);\n        CmsContainerPageBean containerPage = standardContext.getPage();\n        Set<String> jsIncludes = new LinkedHashSet<String>();\n        Map<String, String> inlineJS = new LinkedHashMap<String, String>();\n        // add defaults\n        if (CmsStringUtil.isNotEmptyOrWhitespaceOnly(m_defaults)) {\n            String[] defaults = m_defaults.split(\"\\\\|\");\n            for (int i = 0; i < defaults.length; i++) {\n                jsIncludes.add(defaults[i]);\n            }\n        }\n        if ((containerPage != null) && (containerPage.getElements() != null)) {\n            Map<CmsUUID, I_CmsFormatterBean> formatters = OpenCms.getADEManager().getCachedFormatters(\n                standardContext.isOnline()).getFormatters();\n            for (CmsContainerBean container : containerPage.getContainers().values()) {\n                for (CmsContainerElementBean element : container.getElements()) {\n                    try {\n                        element.initResource(cms);\n                        if (element.isGroupContainer(cms) || element.isInheritedContainer(cms)) {\n                            List<CmsContainerElementBean> subElements;\n                            if (element.isGroupContainer(cms)) {\n                                subElements = CmsJspTagContainer.getGroupContainerElements(\n                                    cms,\n                                    element,\n                                    req,\n                                    container.getType());\n                            } else {\n                                subElements = CmsJspTagContainer.getInheritedContainerElements(cms, element);\n                            }\n                            for (CmsContainerElementBean subElement : subElements) {\n                                subElement.initResource(cms);\n                                I_CmsFormatterBean formatter = getFormatterBeanForElement(\n                                    subElement,\n                                    container,\n                                    formatters);\n                                if (formatter != null) {\n                                    jsIncludes.addAll(formatter.getJavascriptHeadIncludes());\n                                    if (CmsStringUtil.isNotEmptyOrWhitespaceOnly(formatter.getInlineJavascript())) {\n                                        inlineJS.put(formatter.getId(), formatter.getInlineJavascript());\n                                    }\n                                } else {\n\n                                    jsIncludes.addAll(getJSHeadIncludes(cms, subElement.getResource()));\n                                }\n                            }\n                        } else {\n                            I_CmsFormatterBean formatter = getFormatterBeanForElement(element, container, formatters);\n                            if (formatter != null) {\n                                jsIncludes.addAll(formatter.getJavascriptHeadIncludes());\n                                if (CmsStringUtil.isNotEmptyOrWhitespaceOnly(formatter.getInlineJavascript())) {\n                                    inlineJS.put(formatter.getId(), formatter.getInlineJavascript());\n                                }\n                            } else {\n\n                                jsIncludes.addAll(getJSHeadIncludes(cms, element.getResource()));\n                            }\n                        }\n                    } catch (CmsException e) {\n                        LOG.error(\n                            Messages.get().getBundle().key(\n                                Messages.ERR_READING_REQUIRED_RESOURCE_1,\n                                element.getSitePath()),\n                            e);\n                    }\n                }\n            }\n        }\n        if (standardContext.getDetailContentId() != null) {\n            try {\n                CmsResource detailContent = cms.readResource(standardContext.getDetailContentId());\n                CmsFormatterConfiguration config = OpenCms.getADEManager().lookupConfiguration(\n                    cms,\n                    cms.getRequestContext().getRootUri()).getFormatters(cms, detailContent);\n                boolean requiresAllIncludes = true;\n                if (CmsStringUtil.isNotEmptyOrWhitespaceOnly(getDetailtype())\n                    && CmsStringUtil.isNotEmptyOrWhitespaceOnly(getDetailwidth())) {\n                    try {\n                        int width = Integer.parseInt(getDetailwidth());\n                        jsIncludes.addAll(config.getDetailFormatter(getDetailtype(), width).getCssHeadIncludes());\n                        requiresAllIncludes = false;\n                    } catch (NumberFormatException ne) {\n                        // nothing to do, we will include JavaScript for all detail containers\n                    }\n                }\n                if (requiresAllIncludes) {\n                    for (I_CmsFormatterBean formatter : config.getDetailFormatters()) {\n                        jsIncludes.addAll(formatter.getJavascriptHeadIncludes());\n                    }\n                }\n            } catch (CmsException e) {\n                LOG.error(\n                    Messages.get().getBundle().key(\n                        Messages.ERR_READING_REQUIRED_RESOURCE_1,\n                        standardContext.getDetailContentId()),\n                    e);\n            }\n        }\n        for (String jsUri : jsIncludes) {\n            pageContext.getOut().print(\n                \"\\n<script type=\\\"text/javascript\\\" src=\\\"\"\n                    + CmsJspTagLink.linkTagAction(jsUri.trim(), req)\n                    + generateReqParams()\n                    + \"\\\"><\/script>\");\n        }\n        if (!inlineJS.isEmpty()) {\n            StringBuffer inline = new StringBuffer(\"\\n<script type=\\\"text/javascript\\\">\\n\");\n            for (Entry<String, String> jsEntry : inlineJS.entrySet()) {\n                inline.append(jsEntry.getValue()).append(\"\\n\\n\");\n            }\n            inline.append(\"\\n<\/script>\\n\");\n            pageContext.getOut().print(inline.toString());\n        }\n    }","id":16962,"modified_method":"/**\n     * Action to include the java-script resources.<p>\n     * \n     * @param cms the current cms context\n     * @param req the current request\n     * \n     * @throws CmsException if something goes wrong reading the resources\n     * @throws IOException if something goes wrong writing to the response out\n     */\n    public void tagJSAction(CmsObject cms, ServletRequest req) throws CmsException, IOException {\n\n        CmsJspStandardContextBean standardContext = getStandardContext(cms, req);\n        CmsContainerPageBean containerPage = standardContext.getPage();\n        Set<String> jsIncludes = new LinkedHashSet<String>();\n        Map<String, String> inlineJS = new LinkedHashMap<String, String>();\n        // add defaults\n        if (CmsStringUtil.isNotEmptyOrWhitespaceOnly(m_defaults)) {\n            String[] defaults = m_defaults.split(\"\\\\|\");\n            for (int i = 0; i < defaults.length; i++) {\n                jsIncludes.add(defaults[i]);\n            }\n        }\n        if ((containerPage != null) && (containerPage.getElements() != null)) {\n            Map<CmsUUID, I_CmsFormatterBean> formatters = OpenCms.getADEManager().getCachedFormatters(\n                standardContext.isOnline()).getFormatters();\n            for (CmsContainerBean container : containerPage.getContainers().values()) {\n                for (CmsContainerElementBean element : container.getElements()) {\n                    try {\n                        element.initResource(cms);\n                        if (!standardContext.isOnline()\n                            || element.getResource().isReleasedAndNotExpired(cms.getRequestContext().getRequestTime())) {\n                            if (element.isGroupContainer(cms) || element.isInheritedContainer(cms)) {\n                                List<CmsContainerElementBean> subElements;\n                                if (element.isGroupContainer(cms)) {\n                                    subElements = CmsJspTagContainer.getGroupContainerElements(\n                                        cms,\n                                        element,\n                                        req,\n                                        container.getType());\n                                } else {\n                                    subElements = CmsJspTagContainer.getInheritedContainerElements(cms, element);\n                                }\n                                for (CmsContainerElementBean subElement : subElements) {\n                                    subElement.initResource(cms);\n                                    if (!standardContext.isOnline()\n                                        || subElement.getResource().isReleasedAndNotExpired(\n                                            cms.getRequestContext().getRequestTime())) {\n                                        I_CmsFormatterBean formatter = getFormatterBeanForElement(\n                                            subElement,\n                                            container,\n                                            formatters);\n                                        if (formatter != null) {\n                                            jsIncludes.addAll(formatter.getJavascriptHeadIncludes());\n                                            if (CmsStringUtil.isNotEmptyOrWhitespaceOnly(formatter.getInlineJavascript())) {\n                                                inlineJS.put(formatter.getId(), formatter.getInlineJavascript());\n                                            }\n                                        } else {\n\n                                            jsIncludes.addAll(getJSHeadIncludes(cms, subElement.getResource()));\n                                        }\n                                    }\n                                }\n                            } else {\n                                I_CmsFormatterBean formatter = getFormatterBeanForElement(\n                                    element,\n                                    container,\n                                    formatters);\n                                if (formatter != null) {\n                                    jsIncludes.addAll(formatter.getJavascriptHeadIncludes());\n                                    if (CmsStringUtil.isNotEmptyOrWhitespaceOnly(formatter.getInlineJavascript())) {\n                                        inlineJS.put(formatter.getId(), formatter.getInlineJavascript());\n                                    }\n                                } else {\n\n                                    jsIncludes.addAll(getJSHeadIncludes(cms, element.getResource()));\n                                }\n                            }\n                        }\n                    } catch (CmsException e) {\n                        LOG.error(\n                            Messages.get().getBundle().key(\n                                Messages.ERR_READING_REQUIRED_RESOURCE_1,\n                                element.getSitePath()),\n                            e);\n                    }\n                }\n            }\n        }\n        if (standardContext.getDetailContentId() != null) {\n            try {\n                CmsResource detailContent = cms.readResource(standardContext.getDetailContentId());\n                CmsFormatterConfiguration config = OpenCms.getADEManager().lookupConfiguration(\n                    cms,\n                    cms.getRequestContext().getRootUri()).getFormatters(cms, detailContent);\n                boolean requiresAllIncludes = true;\n                if (CmsStringUtil.isNotEmptyOrWhitespaceOnly(getDetailtype())\n                    && CmsStringUtil.isNotEmptyOrWhitespaceOnly(getDetailwidth())) {\n                    try {\n                        int width = Integer.parseInt(getDetailwidth());\n                        jsIncludes.addAll(config.getDetailFormatter(getDetailtype(), width).getCssHeadIncludes());\n                        requiresAllIncludes = false;\n                    } catch (NumberFormatException ne) {\n                        // nothing to do, we will include JavaScript for all detail containers\n                    }\n                }\n                if (requiresAllIncludes) {\n                    for (I_CmsFormatterBean formatter : config.getDetailFormatters()) {\n                        jsIncludes.addAll(formatter.getJavascriptHeadIncludes());\n                    }\n                }\n            } catch (CmsException e) {\n                LOG.error(\n                    Messages.get().getBundle().key(\n                        Messages.ERR_READING_REQUIRED_RESOURCE_1,\n                        standardContext.getDetailContentId()),\n                    e);\n            }\n        }\n        for (String jsUri : jsIncludes) {\n            pageContext.getOut().print(\n                \"\\n<script type=\\\"text/javascript\\\" src=\\\"\"\n                    + CmsJspTagLink.linkTagAction(jsUri.trim(), req)\n                    + generateReqParams()\n                    + \"\\\"><\/script>\");\n        }\n        if (!inlineJS.isEmpty()) {\n            StringBuffer inline = new StringBuffer(\"\\n<script type=\\\"text/javascript\\\">\\n\");\n            for (Entry<String, String> jsEntry : inlineJS.entrySet()) {\n                inline.append(jsEntry.getValue()).append(\"\\n\\n\");\n            }\n            inline.append(\"\\n<\/script>\\n\");\n            pageContext.getOut().print(inline.toString());\n        }\n    }","commit_id":"d0f30e65d2fa5097c603820ca71a48f2f2ba1f85","url":"https://github.com/alkacon/opencms-core"},{"original_method":"public Sequence eval(Sequence contextSequence, Item contextItem) throws XPathException {\n       if (context.getProfiler().isEnabled()) {\n            context.getProfiler().start(this);       \n            context.getProfiler().message(this, Profiler.DEPENDENCIES, \"DEPENDENCIES\", Dependency.getDependenciesName(this.getDependencies()));\n            if (contextSequence != null)\n                context.getProfiler().message(this, Profiler.START_SEQUENCES, \"CONTEXT SEQUENCE\", contextSequence);\n            if (contextItem != null)\n                context.getProfiler().message(this, Profiler.START_SEQUENCES, \"CONTEXT ITEM\", contextItem.toSequence());\n        }        \n       \n\t\tSequence result = new DateTimeValue(new Date(context.getWatchDog().getStartTime()));\n        \n        if (context.getProfiler().isEnabled()) \n            context.getProfiler().end(this, \"\", result);        \n        \n        return result;        \n\t}","id":16963,"modified_method":"public Sequence eval(Sequence contextSequence, Item contextItem) throws XPathException {\n\t\tif (context.getProfiler().isEnabled()) {\n\t\t\tcontext.getProfiler().start(this);       \n\t\t\tcontext.getProfiler().message(this, Profiler.DEPENDENCIES, \"DEPENDENCIES\", Dependency.getDependenciesName(this.getDependencies()));\n\t\t\tif (contextSequence != null)\n\t\t\t\tcontext.getProfiler().message(this, Profiler.START_SEQUENCES, \"CONTEXT SEQUENCE\", contextSequence);\n\t\t\tif (contextItem != null)\n\t\t\t\tcontext.getProfiler().message(this, Profiler.START_SEQUENCES, \"CONTEXT ITEM\", contextItem.toSequence());\n\t\t}        \n\n\t\tSequence result = new DateTimeValue(new Date(context.getWatchDog().getStartTime()));\n\t\tif (isCalledAs(\"current-dateTime\")) {\n\t\t\t// do nothing, result already in right form\n\t\t} else if (isCalledAs(\"current-date\")) {\n\t\t\tresult = result.convertTo(Type.DATE);\n\t\t} else if (isCalledAs(\"current-time\")) {\n\t\t\tresult = result.convertTo(Type.TIME);\n\t\t} else {\n\t\t\tthrow new Error(\"can't handle function \" + mySignature.getName().getLocalName());\n\t\t}\n\n\t\tif (context.getProfiler().isEnabled()) context.getProfiler().end(this, \"\", result);        \n\n\t\treturn result;\n\t}","commit_id":"edad532fb2f5c85bf7e23ac9e11d80722b36d34d","url":"https://github.com/eXist-db/exist"},{"original_method":"public FunCurrentDateTime(XQueryContext context) {\n\t\tsuper(context, signature);\n\t}","id":16964,"modified_method":"public FunCurrentDateTime(XQueryContext context, FunctionSignature signature) {\n\t\tsuper(context, signature);\n\t}","commit_id":"edad532fb2f5c85bf7e23ac9e11d80722b36d34d","url":"https://github.com/eXist-db/exist"},{"original_method":"public Sequence eval(Sequence contextSequence, Item contextItem) throws XPathException {\n        if (context.getProfiler().isEnabled()) {\n            context.getProfiler().start(this);       \n            context.getProfiler().message(this, Profiler.DEPENDENCIES, \"DEPENDENCIES\", Dependency.getDependenciesName(this.getDependencies()));\n            if (contextSequence != null)\n                context.getProfiler().message(this, Profiler.START_SEQUENCES, \"CONTEXT SEQUENCE\", contextSequence);\n            if (contextItem != null)\n                context.getProfiler().message(this, Profiler.START_SEQUENCES, \"CONTEXT ITEM\", contextItem.toSequence());\n        }\n        \n        Sequence result;\n\t\tSequence arg = getArgument(0).eval(contextSequence, contextItem);\n\t\tif (arg.isEmpty())\n            result = Sequence.EMPTY_SEQUENCE;\n        else {\n    \t\tDateValue date = (DateValue) arg.itemAt(0);\n    \t\tif (isCalledAs(\"day-from-date\"))\n                result = new IntegerValue(date.getPart(DateValue.DAY), Type.INTEGER);\n    \t\telse if (isCalledAs(\"month-from-date\"))\n                result = new IntegerValue(date.getPart(DateValue.MONTH), Type.INTEGER);\n    \t\telse if (isCalledAs(\"timezone-from-date\"))\n                result = date.getTimezone();\n    \t\telse if (isCalledAs(\"year-from-date\"))\n                result = new IntegerValue(date.getPart(DateValue.YEAR), Type.INTEGER);\n    \t\telse throw new Error(\"Can't handle function \" + mySignature.getName().getLocalName());\n        }\n        \n        if (context.getProfiler().isEnabled()) \n            context.getProfiler().end(this, \"\", result); \n        \n        return result;            \n\t}","id":16965,"modified_method":"public Sequence eval(Sequence[] args, Sequence contextSequence) throws XPathException {\n\t\tif (context.getProfiler().isEnabled()) {\n\t\t\tcontext.getProfiler().start(this);\n\t\t\tcontext.getProfiler().message(this, Profiler.DEPENDENCIES, \"DEPENDENCIES\",\n\t\t\t\t\tDependency.getDependenciesName(this.getDependencies()));\n\t\t\tif (contextSequence != null)\n\t\t\t\tcontext.getProfiler().message(this, Profiler.START_SEQUENCES,\n\t\t\t\t\t\t\"CONTEXT SEQUENCE\", contextSequence);\n\t\t}\n        \n\t\tSequence result;\n\t\tif (args.length == 0 || args[0].isEmpty()) {\n\t\t\tresult = Sequence.EMPTY_SEQUENCE;\n\t\t} else {\n\t\t\tSequence arg = args[0];\n\t\t\tAbstractDateTimeValue date = (AbstractDateTimeValue) arg.itemAt(0);\n\t\t\tif (isCalledAs(\"day-from-dateTime\") || isCalledAs(\"day-from-date\")) {\n\t\t\t\tresult = new IntegerValue(date.getPart(DateValue.DAY), Type.INTEGER);\n\t\t\t} else if (isCalledAs(\"month-from-dateTime\") || isCalledAs(\"month-from-date\")) {\n\t\t\t\tresult = new IntegerValue(date.getPart(DateValue.MONTH),\n\t\t\t\t\t\tType.INTEGER);\n\t\t\t} else if (isCalledAs(\"year-from-dateTime\") || isCalledAs(\"year-from-date\")) {\n\t\t\t\tresult = new IntegerValue(date.getPart(DateValue.YEAR),\n\t\t\t\t\t\tType.INTEGER);\n\t\t\t} else if (isCalledAs(\"hours-from-dateTime\") || isCalledAs(\"hours-from-time\")) {\n\t\t\t\tresult = new IntegerValue(date.getPart(DateValue.HOUR),\n\t\t\t\t\t\tType.INTEGER);\n\t\t\t} else if (isCalledAs(\"minutes-from-dateTime\") || isCalledAs(\"minutes-from-time\")) {\n\t\t\t\tresult = new IntegerValue(date.getPart(DateValue.MINUTE),\n\t\t\t\t\t\tType.INTEGER);\n\t\t\t} else if (isCalledAs(\"seconds-from-dateTime\") || isCalledAs(\"seconds-from-time\")) {\n\t\t\t\tlong millis = date.getPart(DateValue.SECOND) * 1000L + date.getPart(DateValue.MILLISECOND);\n\t\t\t\tresult = new DecimalValue(millis / 1000D);\n\t\t\t} else if (isCalledAs(\"timezone-from-dateTime\") || isCalledAs(\"timezone-from-date\") || isCalledAs(\"timezone-from-time\")) {\n\t\t\t\tresult = date.getTimezone();\n\t\t\t} else {\n\t\t\t\tthrow new Error(\"can't handle function \" + mySignature.getName().getLocalName());\n\t\t\t}\n\t\t}\n\t\t\n\t\tif (context.getProfiler().isEnabled()) context.getProfiler().end(this, \"\", result);\n\t\t\n\t\treturn result;\n\t\t\n\t}","commit_id":"edad532fb2f5c85bf7e23ac9e11d80722b36d34d","url":"https://github.com/eXist-db/exist"},{"original_method":"/**\n\t * @param context\n\t * @param signature\n\t */\n\tpublic FunGetDateComponent(XQueryContext context, FunctionSignature signature) {\n\t\tsuper(context, signature);\n\t}","id":16966,"modified_method":"public FunGetDateComponent(XQueryContext context, FunctionSignature signature) {\n\t\tsuper(context, signature);\n\t}","commit_id":"edad532fb2f5c85bf7e23ac9e11d80722b36d34d","url":"https://github.com/eXist-db/exist"},{"original_method":"public Metric create() {\n      if (ValueType.PERCENT.equals(this.type)) {\n        this.bestValue = (direction == DIRECTION_BETTER ? 100.0 : 0.0);\n        this.worstValue = (direction == DIRECTION_BETTER ? 0.0 : 100.0);\n      }\n      return new Metric(key, name, type, description, direction, domain, qualitative, worstValue, bestValue, optimizedBestValue, hidden, formula);\n    }","id":16967,"modified_method":"public Metric create() {\n      if (ValueType.PERCENT.equals(this.type)) {\n        this.bestValue = (direction == DIRECTION_BETTER ? 100.0 : 0.0);\n        this.worstValue = (direction == DIRECTION_BETTER ? 0.0 : 100.0);\n      }\n      return new Metric(key, name, type, description, direction, domain, qualitative, worstValue, bestValue, optimizedBestValue, hidden, formula, userManaged);\n    }","commit_id":"3e87a7151696d1a4aaa85ce314b74d5cc62f1309","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"private Metric(String key, String name, ValueType type, String description, Integer direction, String domain, Boolean qualitative, Double worstValue, Double bestValue,\n      Boolean optimizedBestValue, Boolean hidden, Formula formula) {\n    this.key = key;\n    this.name = name;\n    this.description = description;\n    this.type = type;\n    this.direction = direction;\n    this.domain = domain;\n    this.qualitative = qualitative;\n    this.userManaged = Boolean.FALSE;\n    this.enabled = Boolean.TRUE;\n    this.worstValue = worstValue;\n    this.optimizedBestValue = optimizedBestValue;\n    this.bestValue = bestValue;\n    this.hidden = hidden;\n    this.formula = formula;\n  }","id":16968,"modified_method":"private Metric(String key, String name, ValueType type, String description, Integer direction, String domain, Boolean qualitative, Double worstValue, Double bestValue,\n      Boolean optimizedBestValue, Boolean hidden, Formula formula, boolean userManaged) {\n    this.key = key;\n    this.name = name;\n    this.description = description;\n    this.type = type;\n    this.direction = direction;\n    this.domain = domain;\n    this.qualitative = qualitative;\n    this.userManaged = Boolean.FALSE;\n    this.enabled = Boolean.TRUE;\n    this.worstValue = worstValue;\n    this.optimizedBestValue = optimizedBestValue;\n    this.bestValue = bestValue;\n    this.hidden = hidden;\n    this.formula = formula;\n    this.userManaged = userManaged;\n  }","commit_id":"3e87a7151696d1a4aaa85ce314b74d5cc62f1309","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"private void processTestDetails(String testXMLData) {\n      Document parsed = XMLParser.parse(testXMLData);\n      NodeList testcasesXML = parsed.getElementsByTagName(\"testcase\");\n\n      FlexTable table = new FlexTable();\n      table.setStylePrimaryName(\"detailsTable\");\n      table.setText(0, 0, \"\");\n      table.setText(0, 1, \"\");\n      table.setText(0, 2, \"Duration\");\n      table.setText(0, 3, \"Unit test name\");\n      table.getCellFormatter().getElement(0, 1).setId(\"iCol\");\n      table.getCellFormatter().getElement(0, 2).setId(\"dCol\");\n      setRowStyle(0, table, \"header\", false);\n\n      int rowCounter = 1;\n      for (int i = 0; i < testcasesXML.getLength(); i++) {\n        Element testcaseXML = (Element) testcasesXML.item(i);\n        String time = testcaseXML.getAttribute(\"time\");\n        String name = testcaseXML.getAttribute(\"name\");\n        String status = testcaseXML.getAttribute(\"status\");\n        Element error = getFirstElement(\"error\", testcaseXML);\n        Element failure = getFirstElement(\"failure\", testcaseXML);\n        Element stackTrace = status.equals(\"error\") ? error : failure;\n        renderTestDetails(rowCounter, i, status, stackTrace, name, time, table);\n        rowCounter += 2;\n      }\n      panel.add(table);\n    }","id":16969,"modified_method":"private void processTestDetails(String testXMLData) {\n      Document parsed = XMLParser.parse(testXMLData);\n      NodeList testcasesXML = parsed.getElementsByTagName(\"testcase\");\n\n      Dictionary l10n = Dictionary.getDictionary(\"l10n\");\n      FlexTable table = new FlexTable();\n      table.setStylePrimaryName(\"detailsTable\");\n      table.setText(0, 0, \"\");\n      table.setText(0, 1, \"\");\n      table.setText(0, 2, l10n.get(\"unittest.duration\"));\n      table.setText(0, 3, l10n.get(\"unittest.name\"));\n      table.getCellFormatter().getElement(0, 1).setId(\"iCol\");\n      table.getCellFormatter().getElement(0, 2).setId(\"dCol\");\n      setRowStyle(0, table, \"header\", false);\n\n      int rowCounter = 1;\n      for (int i = 0; i < testcasesXML.getLength(); i++) {\n        Element testcaseXML = (Element) testcasesXML.item(i);\n        String time = testcaseXML.getAttribute(\"time\");\n        String name = testcaseXML.getAttribute(\"name\");\n        String status = testcaseXML.getAttribute(\"status\");\n        Element error = getFirstElement(\"error\", testcaseXML);\n        Element failure = getFirstElement(\"failure\", testcaseXML);\n        Element stackTrace = status.equals(\"error\") ? error : failure;\n        renderTestDetails(rowCounter, i, status, stackTrace, name, time, table);\n        rowCounter += 2;\n      }\n      panel.add(table);\n    }","commit_id":"3e87a7151696d1a4aaa85ce314b74d5cc62f1309","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"@Override\n    protected void display(FlowPanel header, Resource resource) {\n      HorizontalPanel panel = new HorizontalPanel();\n      header.add(panel);\n\n      Measure measure = resource.getMeasure(Metrics.TEST_SUCCESS_DENSITY);\n      if (measure == null) {\n        addBigCell(panel, \"100%\"); // best value\n      } else {\n        addBigCell(panel, measure.getFormattedValue());\n      }\n\n      String skippedHtml = \"\";\n      Measure skipped = resource.getMeasure(Metrics.SKIPPED_TESTS);\n      if (skipped != null && skipped.getValue() > 0.0) {\n        skippedHtml += \" (+\" + skipped.getFormattedValue() + \" skipped)\";\n      }\n      addCell(panel,\n          \"Tests: \",\n          resource.getMeasureFormattedValue(Metrics.TESTS, \"-\") + skippedHtml);\n\n      addCell(panel,\n          \"Failures/Errors: \",\n          resource.getMeasureFormattedValue(Metrics.TEST_FAILURES, \"0\") + \"/\" + resource.getMeasureFormattedValue(Metrics.TEST_ERRORS, \"0\"));\n\n      addCell(panel,\n          \"Duration: \",\n          resource.getMeasureFormattedValue(Metrics.TEST_EXECUTION_TIME, \"-\"));\n    }","id":16970,"modified_method":"@Override\n    protected void display(FlowPanel header, Resource resource) {\n      Dictionary l10n = Dictionary.getDictionary(\"l10n\");\n      HorizontalPanel panel = new HorizontalPanel();\n      header.add(panel);\n\n      Measure measure = resource.getMeasure(Metrics.TEST_SUCCESS_DENSITY);\n      if (measure == null) {\n        addBigCell(panel, \"100%\"); // best value\n      } else {\n        addBigCell(panel, measure.getFormattedValue());\n      }\n\n      String skippedHtml = \"\";\n      Measure skipped = resource.getMeasure(Metrics.SKIPPED_TESTS);\n      if (skipped != null && skipped.getValue() > 0.0) {\n        skippedHtml += \" (+\" + skipped.getFormattedValue() + \" \" + l10n.get(\"unittest.skipped\") + \")\";\n      }\n      addCell(panel,\n          l10n.get(\"unittest.tests\") + \": \",\n          resource.getMeasureFormattedValue(Metrics.TESTS, \"-\") + skippedHtml);\n\n      addCell(panel,\n          l10n.get(\"unittest.failures\") + \": \",\n          resource.getMeasureFormattedValue(Metrics.TEST_FAILURES, \"0\") + \"/\" + resource.getMeasureFormattedValue(Metrics.TEST_ERRORS, \"0\"));\n\n      addCell(panel,\n          l10n.get(\"unittest.duration\") + \": \",\n          resource.getMeasureFormattedValue(Metrics.TEST_EXECUTION_TIME, \"-\"));\n    }","commit_id":"3e87a7151696d1a4aaa85ce314b74d5cc62f1309","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"public List<Metric> getMetrics() {\n    return Arrays.asList(\n        new Metric(\"burned_budget\", \"Burned budget\", \"The budget already used in the project\", Metric.ValueType.FLOAT,\n            Metric.DIRECTION_NONE, false, DOMAIN)\n            .setUserManaged(true),\n        new Metric(\"team_size\", \"Team size\", \"Size of the project team\", Metric.ValueType.INT, Metric.DIRECTION_NONE, false, DOMAIN)\n            .setUserManaged(true),\n        new Metric(\"business_value\", \"Business value\", \"An indication on the value of the project for the business\",\n            Metric.ValueType.FLOAT, Metric.DIRECTION_BETTER, true, DOMAIN)\n            .setUserManaged(true));\n  }","id":16971,"modified_method":"public List<Metric> getMetrics() {\n    return Arrays.asList(\n        new Metric.Builder(\"burned_budget\", \"Burned budget\", Metric.ValueType.FLOAT)\n            .setDirection(Metric.DIRECTION_NONE)\n            .setQualitative(false)\n            .setDomain(DOMAIN)\n            .setUserManaged(true)\n            .create(),\n        new Metric.Builder(\"business_value\", \"Business value\", Metric.ValueType.FLOAT)\n            .setDirection(Metric.DIRECTION_BETTER)\n            .setQualitative(true)\n            .setDomain(DOMAIN)\n            .setUserManaged(true)\n            .create(),\n        new Metric.Builder(\"team_size\", \"Team size\", Metric.ValueType.INT)\n            .setDirection(Metric.DIRECTION_NONE)\n            .setQualitative(false)\n            .setDomain(DOMAIN)\n            .setUserManaged(true)\n            .create());\n  }","commit_id":"3e87a7151696d1a4aaa85ce314b74d5cc62f1309","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"public GitHubComment(@Nullable Date date, @Nullable String author, @NotNull String text, @Nullable String gravatarId, @NotNull String host) {\n    super(date, author, text);\n    myGravatarId = gravatarId;\n    myHost = host;\n  }","id":16972,"modified_method":"public GitHubComment(@Nullable Date date,\n                       @Nullable String author,\n                       @NotNull String text,\n                       @Nullable String gravatarId,\n                       @NotNull String userHtmlUrl) {\n    super(date, author, text);\n    myGravatarId = gravatarId;\n    myUserHtmlUrl = userHtmlUrl;\n  }","commit_id":"16ed12e310f9ffe523f28e173892bd13baeb789d","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void appendTo(StringBuilder builder) {\n    builder.append(\"<hr>\");\n    builder.append(\"<table>\");\n    builder.append(\"<tr><td>\");\n    if (myGravatarId != null) {\n        builder.append(\"<img src=\\\"\").append(\"http://www.gravatar.com/avatar/\").append(myGravatarId).append(\"?s=40\\\"/><br>\");\n      }\n    builder.append(\"<\/td><td>\");\n    if (getAuthor() != null) {\n      builder.append(\"<b>Author:<\/b> <a href=\\\"\").append(myHost).append('/')\n             .append(getAuthor()).append(\"\\\">\").append(getAuthor()).append(\"<\/a><br>\");\n    }\n    if (getDate() != null) {\n      builder.append(\"<b>Date:<\/b> \").append(DateFormatUtil.formatDateTime(getDate())).append(\"<br>\");\n    }\n    builder.append(\"<\/td><\/tr><\/table>\");\n\n    builder.append(new MarkdownProcessor().markdown(getText())).append(\"<br>\");\n  }","id":16973,"modified_method":"public void appendTo(StringBuilder builder) {\n    builder.append(\"<hr>\");\n    builder.append(\"<table>\");\n    builder.append(\"<tr><td>\");\n    if (myGravatarId != null) {\n        builder.append(\"<img src=\\\"\").append(\"http://www.gravatar.com/avatar/\").append(myGravatarId).append(\"?s=40\\\"/><br>\");\n      }\n    builder.append(\"<\/td><td>\");\n    if (getAuthor() != null) {\n      builder.append(\"<b>Author:<\/b> <a href=\\\"\").append(myUserHtmlUrl).append(\"\\\">\").append(getAuthor()).append(\"<\/a><br>\");\n    }\n    if (getDate() != null) {\n      builder.append(\"<b>Date:<\/b> \").append(DateFormatUtil.formatDateTime(getDate())).append(\"<br>\");\n    }\n    builder.append(\"<\/td><\/tr><\/table>\");\n\n    builder.append(new MarkdownProcessor().markdown(getText())).append(\"<br>\");\n  }","commit_id":"16ed12e310f9ffe523f28e173892bd13baeb789d","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Nullable\n  @Override\n  public Task findTask(String id) throws Exception {\n    initAuthData();\n    String path = \"/repos/\" + getRepoAuthor() + \"/\" + getRepoName() + \"/issues/\" + id;\n    JsonElement response = GithubApiUtil.getRequest(myAuthData, path);\n    if (response == null || !response.isJsonObject()) {\n      throw new Exception(String.format(\"Couldn't get information about issue %s%nResponse: %s\", id, response));\n    }\n    return createIssue(response.getAsJsonObject());\n  }","id":16974,"modified_method":"@Nullable\n  @Override\n  public Task findTask(String id) throws Exception {\n    return createTask(GithubApiUtil.getIssue(getAuthData(), getRepoAuthor(), getRepoName(), id));\n  }","commit_id":"16ed12e310f9ffe523f28e173892bd13baeb789d","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@NotNull\n  private Task[] getIssues(@Nullable String query) throws Exception {\n    initAuthData();\n\n    String path;\n    boolean noQuery = StringUtil.isEmpty(query);\n    if (!noQuery) {\n      query = encodeUrl(query);\n      path = \"/legacy/issues/search/\" + getRepoAuthor() + \"/\" + getRepoName() + \"/open/\" + encodeUrl(query);\n    }\n    else {\n      path = \"/repos/\" + getRepoAuthor() + \"/\" + getRepoName() + \"/issues\";\n    }\n\n    JsonElement response = GithubApiUtil.getRequest(myAuthData, path);\n\n    JsonArray issuesArray;\n    if (noQuery) {\n      if (response == null || !response.isJsonArray()) {\n        throw errorFetchingIssues(response);\n      }\n      issuesArray = response.getAsJsonArray();\n    }\n    else {\n      if (response == null || !response.isJsonObject() || !response.getAsJsonObject().has(\"issues\")) {\n        throw errorFetchingIssues(response);\n      }\n      issuesArray = response.getAsJsonObject().get(\"issues\").getAsJsonArray();\n    }\n\n    return parseTasksFromArray(issuesArray);\n  }","id":16975,"modified_method":"@NotNull\n  private Task[] getIssues(@Nullable String query) throws Exception {\n    List<GithubIssue> issues = GithubApiUtil.getIssues(getAuthData(), getRepoAuthor(), getRepoName(), query);\n\n    int i = 0;\n    Task[] tasks = new Task[issues.size()];\n    for (GithubIssue issue : issues) {\n      tasks[i++] = createTask(issue);\n    }\n\n    return tasks;\n  }","commit_id":"16ed12e310f9ffe523f28e173892bd13baeb789d","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private void initAuthData() {\n    if (myAuthData == null) {\n      myAuthData = GithubAuthData.createTokenAuth(getUrl(), getToken());\n    }\n  }","id":16976,"modified_method":"private GithubAuthData getAuthData() {\n    if (myAuthData == null) {\n      myAuthData = GithubAuthData.createTokenAuth(getUrl(), getToken());\n    }\n    return myAuthData;\n  }","commit_id":"16ed12e310f9ffe523f28e173892bd13baeb789d","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private Comment[] fetchComments(final String id) throws Exception {\n    initAuthData();\n    String path = \"/repos/\" + getRepoAuthor() + \"/\" + getRepoName() + \"/issues/\" + id + \"/comments\";\n    JsonElement response = GithubApiUtil.getRequest(myAuthData, path);\n    if (response == null || !response.isJsonArray()) {\n      throw new Exception(String.format(\"Couldn't get information about issue %s%nResponse: %s\", id, response));\n    }\n    return createComments(response.getAsJsonArray(), getUrl());\n  }","id":16977,"modified_method":"private Comment[] fetchComments(final long id) throws Exception {\n    List<GithubIssueComment> result = GithubApiUtil.getIssueComments(getAuthData(), getRepoAuthor(), getRepoName(), id);\n\n    int i = 0;\n    Comment[] comments = new Comment[result.size()];\n    for (GithubIssueComment comment : result) {\n      comments[i++] =\n        new GitHubComment(comment.getCreatedAt(), comment.getUser().getLogin(), comment.getBody(), comment.getUser().getGravatarId(),\n                          comment.getUser().getHtmlUrl());\n    }\n\n    return comments;\n  }","commit_id":"16ed12e310f9ffe523f28e173892bd13baeb789d","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@NotNull\n  public static GithubUser create(@Nullable GithubUserRaw raw) throws JsonException {\n    try {\n      if (raw == null) throw new JsonException(\"raw is null\");\n      if (raw.login == null) throw new JsonException(\"login is null\");\n      if (raw.id == null) throw new JsonException(\"id is null\");\n      if (raw.url == null) throw new JsonException(\"url is null\");\n      if (raw.htmlUrl == null) throw new JsonException(\"htmlUrl is null\");\n\n      return new GithubUser(raw.login, raw.id, raw.url, raw.htmlUrl);\n    }\n    catch (JsonException e) {\n      throw new JsonException(\"GithubUser parse error\", e);\n    }\n  }","id":16978,"modified_method":"@NotNull\n  public static GithubUser create(@Nullable GithubUserRaw raw) throws JsonException {\n    try {\n      if (raw == null) throw new JsonException(\"raw is null\");\n      if (raw.login == null) throw new JsonException(\"login is null\");\n      if (raw.id == null) throw new JsonException(\"id is null\");\n      if (raw.url == null) throw new JsonException(\"url is null\");\n      if (raw.htmlUrl == null) throw new JsonException(\"htmlUrl is null\");\n\n      return new GithubUser(raw.login, raw.id, raw.url, raw.htmlUrl, raw.gravatarId);\n    }\n    catch (JsonException e) {\n      throw new JsonException(\"GithubUser parse error\", e);\n    }\n  }","commit_id":"16ed12e310f9ffe523f28e173892bd13baeb789d","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private GithubUser(@NotNull String login, long id, @NotNull String url, @NotNull String htmlUrl) {\n    this.login = login;\n    this.id = id;\n    this.url = url;\n    this.htmlUrl = htmlUrl;\n  }","id":16979,"modified_method":"private GithubUser(@NotNull String login, long id, @NotNull String url, @NotNull String htmlUrl, @Nullable String gravatarId) {\n    this.login = login;\n    this.id = id;\n    this.url = url;\n    this.htmlUrl = htmlUrl;\n    this.gravatarId = gravatarId;\n  }","commit_id":"16ed12e310f9ffe523f28e173892bd13baeb789d","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public static Iterable<LanguageAspectDescriptor> collectAspects() {\n    return new ExtensionPoint<LanguageAspectDescriptor>(\"jetbrains.mps.lang.aspect.LanguageAspectsEP\").getObjects();\n  }","id":16980,"modified_method":"public static Collection<LanguageAspectDescriptor> collectAspects() {\n    //todo order on new aspects must be set and be stable\n    Collection<LanguageAspectDescriptor> newAspects =\n        IterableUtil.asCollection(new ExtensionPoint<LanguageAspectDescriptor>(\"jetbrains.mps.lang.aspect.LanguageAspectsEP\").getObjects());\n    LinkedHashSet<LanguageAspectDescriptor> result = new LinkedHashSet<>();\n    for (LanguageAspect la : LanguageAspect.values()) {\n      Optional<LanguageAspectDescriptor> correspondingNew =\n          newAspects.stream().filter(languageAspectDescriptor -> languageAspectDescriptor.getPresentableAspectName().equals(la.getName())).findFirst();\n      if (correspondingNew.isPresent()) {\n        result.add(correspondingNew.get());\n      }\n    }\n    result.addAll(newAspects);\n    return result;\n  }","commit_id":"7f2162f25a1a0dbcd4f3b51c08928b6eb5a7b590","url":"https://github.com/JetBrains/MPS"},{"original_method":"public static Collection<SModel> getAspectModels(@NotNull SModule language) {\n    assert language instanceof Language;\n    //as soon as this class is API-like, it's not good to have Language parameter here as in API we work with SModule\n\n    //todo order on new aspects must be set and be stable\n    //order is important here\n    LinkedHashSet<SModel> result = new LinkedHashSet<SModel>();\n    for (LanguageAspect la : LanguageAspect.values()) {\n      SModel aspectModel = la.get(((Language) language));\n      if (aspectModel == null) continue;\n      result.add(aspectModel);\n    }\n\n    for (LanguageAspectDescriptor d : collectAspects()) {\n      result.addAll(d.getAspectModels(language));\n    }\n    return result;\n  }","id":16981,"modified_method":"public static Collection<SModel> getAspectModels(@NotNull SModule language) {\n    assert language instanceof Language;\n    //as soon as this class is API-like, it's not good to have Language parameter here as in API we work with SModule\n    LinkedHashSet<SModel> result = new LinkedHashSet<SModel>();\n    for (LanguageAspectDescriptor d : collectAspects()) {\n      result.addAll(d.getAspectModels(language));\n    }\n    //falling back to old aspects for case where getAspectModels() is called before new aspects are initialized\n    for (LanguageAspect la : LanguageAspect.values()) {\n      SModel aspectModel = la.get(((Language) language));\n      if (aspectModel == null) continue;\n      result.add(aspectModel);\n    }\n    return result;\n  }","commit_id":"7f2162f25a1a0dbcd4f3b51c08928b6eb5a7b590","url":"https://github.com/JetBrains/MPS"},{"original_method":"public MakeAddition_ActionGroup() {\n    super(\"Make\", ID);\n    this.setIsInternal(false);\n    this.setPopup(false);\n    MakeAddition_ActionGroup.this.addSeparator();\n    MakeAddition_ActionGroup.this.addAction(\"jetbrains.mps.ide.make.actions.RebuildRequiredModels_Action\");\n    MakeAddition_ActionGroup.this.addAction(\"jetbrains.mps.ide.make.actions.BuildAllLanguageDescriptors_Action\");\n    MakeAddition_ActionGroup.this.addAction(\"jetbrains.mps.ide.make.actions.BuildAllGenerators_Action\");\n    MakeAddition_ActionGroup.this.addAction(\"jetbrains.mps.ide.make.actions.BuildAllStructures_Action\");\n    MakeAddition_ActionGroup.this.addAction(\"jetbrains.mps.ide.make.actions.BuildAllBehaviors_Action\");\n    MakeAddition_ActionGroup.this.addAction(\"jetbrains.mps.ide.make.actions.BuildAllConstraints_Action\");\n    MakeAddition_ActionGroup.this.addAction(\"jetbrains.mps.ide.make.actions.BuildAllEditors_Action\");\n    MakeAddition_ActionGroup.this.addAction(\"jetbrains.mps.ide.make.actions.BuildAllIntentions_Action\");\n    MakeAddition_ActionGroup.this.addAction(\"jetbrains.mps.ide.make.actions.BuildAllActions_Action\");\n    MakeAddition_ActionGroup.this.addAction(\"jetbrains.mps.ide.make.actions.BuildAllRefactorings_Action\");\n    MakeAddition_ActionGroup.this.addAction(\"jetbrains.mps.ide.make.actions.BuildAllDataFlows_Action\");\n    MakeAddition_ActionGroup.this.addAction(\"jetbrains.mps.ide.make.actions.BuildAllTextGens_Action\");\n    MakeAddition_ActionGroup.this.addAction(\"jetbrains.mps.ide.make.actions.BuildAllGeneratableGenerators_Action\");\n    MakeAddition_ActionGroup.this.addAction(\"jetbrains.mps.ide.make.actions.BuildAllScripts_Action\");\n    MakeAddition_ActionGroup.this.addSeparator();\n  }","id":16982,"modified_method":"public MakeAddition_ActionGroup() {\n    super(\"Make\", ID);\n    this.setIsInternal(false);\n    this.setPopup(false);\n    MakeAddition_ActionGroup.this.addSeparator();\n    MakeAddition_ActionGroup.this.addAction(\"jetbrains.mps.ide.make.actions.RebuildRequiredModels_Action\");\n    MakeAddition_ActionGroup.this.addAction(\"jetbrains.mps.ide.make.actions.BuildAllLanguageDescriptors_Action\");\n    MakeAddition_ActionGroup.this.addAction(\"jetbrains.mps.ide.make.actions.BuildAllGenerators_Action\");\n    MakeAddition_ActionGroup.this.addAction(\"jetbrains.mps.ide.make.actions.BuildAllGeneratableGenerators_Action\");\n    {\n      LabelledAnchor action = new LabelledAnchor(MakeAddition_ActionGroup.LABEL_ID_aspects);\n      ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n      manager.registerAction(action.getId(), action, PluginId.getId(\"jetbrains.mps.ide.make\"));\n      MakeAddition_ActionGroup.this.addAction(action);\n    }\n    MakeAddition_ActionGroup.this.addSeparator();\n  }","commit_id":"7f2162f25a1a0dbcd4f3b51c08928b6eb5a7b590","url":"https://github.com/JetBrains/MPS"},{"original_method":"public void adjustRegularGroups() {\n    insertGroupIntoAnother(MakeAddition_ActionGroup.ID, ToolsInternal_ActionGroup.ID, null);\n    insertGroupIntoAnother(ProjectCompileActions_ActionGroup.ID, ProjectActions_ActionGroup.ID, ProjectActions_ActionGroup.LABEL_ID_compileJava);\n    insertGroupIntoAnother(JavaModuleActions_ActionGroup.ID, CommonModuleActions_ActionGroup.ID, CommonModuleActions_ActionGroup.LABEL_ID_compileJava);\n    insertGroupIntoAnother(GenerateOptions_ActionGroup.ID, Build_ActionGroup.ID, Build_ActionGroup.LABEL_ID_options);\n    insertGroupIntoAnother(SaveTransientModels_ActionGroup.ID, GenerateOptions_ActionGroup.ID, GenerateOptions_ActionGroup.LABEL_ID_saveTransientModels);\n    insertGroupIntoAnother(Make_ActionGroup.ID, CommonModuleActions_ActionGroup.ID, CommonModuleActions_ActionGroup.LABEL_ID_make);\n    insertGroupIntoAnother(Make_ActionGroup.ID, ModelActions_ActionGroup.ID, ModelActions_ActionGroup.LABEL_ID_make);\n    insertGroupIntoAnother(ProjectMake_ActionGroup.ID, ProjectActions_ActionGroup.ID, ProjectActions_ActionGroup.LABEL_ID_make);\n    insertGroupIntoAnother(GlobalMake_ActionGroup.ID, Build_ActionGroup.ID, Build_ActionGroup.LABEL_ID_make);\n    insertGroupIntoAnother(TextPreviewGroup_ActionGroup.ID, NodeActions_ActionGroup.ID, NodeActions_ActionGroup.LABEL_ID_showGeneratedText);\n    insertGroupIntoAnother(TextPreviewGroup_ActionGroup.ID, \"EditorPopup_ActionGrouppreview\", null);\n    insertGroupIntoAnother(TextPreviewGroup_ActionGroup.ID, Make_ActionGroup.ID, Make_ActionGroup.LABEL_ID_preview);\n    insertGroupIntoAnother(NamespaceMake_ActionGroup.ID, NamespaceMakeActions_ActionGroup.ID, NamespaceMakeActions_ActionGroup.LABEL_ID_make);\n    insertGroupIntoAnother(ToolbarMake_ActionGroup.ID, \"MPSToolbarRunGroup\", null);\n  }","id":16983,"modified_method":"public void adjustRegularGroups() {\n    insertGroupIntoAnother(MakeAddition_ActionGroup.ID, ToolsInternal_ActionGroup.ID, null);\n    insertGroupIntoAnother(MakeAspects_ActionGroup.ID, MakeAddition_ActionGroup.ID, MakeAddition_ActionGroup.LABEL_ID_aspects);\n    insertGroupIntoAnother(ProjectCompileActions_ActionGroup.ID, ProjectActions_ActionGroup.ID, ProjectActions_ActionGroup.LABEL_ID_compileJava);\n    insertGroupIntoAnother(JavaModuleActions_ActionGroup.ID, CommonModuleActions_ActionGroup.ID, CommonModuleActions_ActionGroup.LABEL_ID_compileJava);\n    insertGroupIntoAnother(GenerateOptions_ActionGroup.ID, Build_ActionGroup.ID, Build_ActionGroup.LABEL_ID_options);\n    insertGroupIntoAnother(SaveTransientModels_ActionGroup.ID, GenerateOptions_ActionGroup.ID, GenerateOptions_ActionGroup.LABEL_ID_saveTransientModels);\n    insertGroupIntoAnother(Make_ActionGroup.ID, CommonModuleActions_ActionGroup.ID, CommonModuleActions_ActionGroup.LABEL_ID_make);\n    insertGroupIntoAnother(Make_ActionGroup.ID, ModelActions_ActionGroup.ID, ModelActions_ActionGroup.LABEL_ID_make);\n    insertGroupIntoAnother(ProjectMake_ActionGroup.ID, ProjectActions_ActionGroup.ID, ProjectActions_ActionGroup.LABEL_ID_make);\n    insertGroupIntoAnother(GlobalMake_ActionGroup.ID, Build_ActionGroup.ID, Build_ActionGroup.LABEL_ID_make);\n    insertGroupIntoAnother(TextPreviewGroup_ActionGroup.ID, NodeActions_ActionGroup.ID, NodeActions_ActionGroup.LABEL_ID_showGeneratedText);\n    insertGroupIntoAnother(TextPreviewGroup_ActionGroup.ID, \"EditorPopup_ActionGrouppreview\", null);\n    insertGroupIntoAnother(TextPreviewGroup_ActionGroup.ID, Make_ActionGroup.ID, Make_ActionGroup.LABEL_ID_preview);\n    insertGroupIntoAnother(NamespaceMake_ActionGroup.ID, NamespaceMakeActions_ActionGroup.ID, NamespaceMakeActions_ActionGroup.LABEL_ID_make);\n    insertGroupIntoAnother(ToolbarMake_ActionGroup.ID, \"MPSToolbarRunGroup\", null);\n  }","commit_id":"7f2162f25a1a0dbcd4f3b51c08928b6eb5a7b590","url":"https://github.com/JetBrains/MPS"},{"original_method":"public void createGroups() {\n    // actions w/o parameters \n    addAction(new BuildAllActions_Action());\n    addAction(new BuildAllBehaviors_Action());\n    addAction(new BuildAllConstraints_Action());\n    addAction(new BuildAllDataFlows_Action());\n    addAction(new BuildAllEditors_Action());\n    addAction(new BuildAllGeneratableGenerators_Action());\n    addAction(new BuildAllGenerators_Action());\n    addAction(new BuildAllIntentions_Action());\n    addAction(new BuildAllLanguageDescriptors_Action());\n    addAction(new BuildAllRefactorings_Action());\n    addAction(new BuildAllScripts_Action());\n    addAction(new BuildAllStructures_Action());\n    addAction(new BuildAllTextGens_Action());\n    addAction(new CheckModelsBeforeGeneration_Action());\n    addAction(new CleanModule_Action());\n    addAction(new CleanProject_Action());\n    addAction(new CompileProject_Action());\n    addAction(new MakeModule_Action());\n    addAction(new MakeProject_Action());\n    addAction(new MakeSelectedModels_Action());\n    addAction(new MakeSelectedModules_Action());\n    addAction(new Options_Action());\n    addAction(new RebuildModule_Action());\n    addAction(new RebuildProject_Action());\n    addAction(new RebuildRequiredModels_Action());\n    addAction(new RebuildSelectedModels_Action());\n    addAction(new RebuildSelectedModules_Action());\n    addAction(new RecompileProject_Action());\n    addAction(new TextPreviewModel_Action());\n    // groups \n    addGroup(new GenerateOptions_ActionGroup());\n    addGroup(new GlobalMake_ActionGroup());\n    addGroup(new JavaModuleActions_ActionGroup());\n    addGroup(new MakeAddition_ActionGroup());\n    addGroup(new Make_ActionGroup());\n    addGroup(new NamespaceMake_ActionGroup());\n    addGroup(new ProjectCompileActions_ActionGroup());\n    addGroup(new ProjectMake_ActionGroup());\n    addGroup(new SaveTransientModels_ActionGroup());\n    addGroup(new TextPreviewGroup_ActionGroup());\n    addGroup(new ToolbarMake_ActionGroup());\n  }","id":16984,"modified_method":"public void createGroups() {\n    // actions w/o parameters \n    addAction(new BuildAllGeneratableGenerators_Action());\n    addAction(new BuildAllGenerators_Action());\n    addAction(new BuildAllLanguageDescriptors_Action());\n    addAction(new CheckModelsBeforeGeneration_Action());\n    addAction(new CleanModule_Action());\n    addAction(new CleanProject_Action());\n    addAction(new CompileProject_Action());\n    addAction(new MakeModule_Action());\n    addAction(new MakeProject_Action());\n    addAction(new MakeSelectedModels_Action());\n    addAction(new MakeSelectedModules_Action());\n    addAction(new Options_Action());\n    addAction(new RebuildModule_Action());\n    addAction(new RebuildProject_Action());\n    addAction(new RebuildRequiredModels_Action());\n    addAction(new RebuildSelectedModels_Action());\n    addAction(new RebuildSelectedModules_Action());\n    addAction(new RecompileProject_Action());\n    addAction(new TextPreviewModel_Action());\n    // groups \n    addGroup(new GenerateOptions_ActionGroup());\n    addGroup(new GlobalMake_ActionGroup());\n    addGroup(new JavaModuleActions_ActionGroup());\n    addGroup(new MakeAddition_ActionGroup());\n    addGroup(new MakeAspects_ActionGroup());\n    addGroup(new Make_ActionGroup());\n    addGroup(new NamespaceMake_ActionGroup());\n    addGroup(new ProjectCompileActions_ActionGroup());\n    addGroup(new ProjectMake_ActionGroup());\n    addGroup(new SaveTransientModels_ActionGroup());\n    addGroup(new TextPreviewGroup_ActionGroup());\n    addGroup(new ToolbarMake_ActionGroup());\n  }","commit_id":"7f2162f25a1a0dbcd4f3b51c08928b6eb5a7b590","url":"https://github.com/JetBrains/MPS"},{"original_method":"public static LanguageAspectDescriptor getAspectById(String id) {\n    for (LanguageAspectDescriptor ad : Sequence.fromIterable(LanguageAspectSupport.collectAspects())) {\n      if (eq_u0fml6_a0a0a0c(ad.getClass().getName(), id)) {\n        return ad;\n      }\n    }\n    return null;\n  }","id":16985,"modified_method":"public static LanguageAspectDescriptor getAspectById(String id) {\n    for (LanguageAspectDescriptor ad : CollectionSequence.fromCollection(LanguageAspectSupport.collectAspects())) {\n      if (eq_u0fml6_a0a0a0c(ad.getClass().getName(), id)) {\n        return ad;\n      }\n    }\n    return null;\n  }","commit_id":"7f2162f25a1a0dbcd4f3b51c08928b6eb5a7b590","url":"https://github.com/JetBrains/MPS"},{"original_method":"public void adjustRegularGroups() {\n    insertGroupIntoAnother(FavoritesPopup_ActionGroup.ID, FavoritesPopupWrapper_ActionGroup.ID, null);\n    insertGroupIntoAnother(Bookmarks_ActionGroup.ID, EditorPopup_ActionGroup.ID, null);\n    insertGroupIntoAnother(Build_ActionGroup.ID, \"BuildMenu\", null);\n    insertGroupIntoAnother(Edit_ActionGroup.ID, \"EditMenu\", null);\n    insertGroupIntoAnother(Folding_ActionGroup.ID, EditorPopup_ActionGroup.ID, EditorPopup_ActionGroup.LABEL_ID_folding);\n    insertGroupIntoAnother(Generate_ActionGroup.ID, Build_ActionGroup.ID, Build_ActionGroup.LABEL_ID_aux);\n    insertGroupIntoAnother(GenerateModelPopup_ActionGroup.ID, ModelActions_ActionGroup.ID, ModelActions_ActionGroup.LABEL_ID_generateActions);\n    insertGroupIntoAnother(GenerateProjectPopup_ActionGroup.ID, ProjectActions_ActionGroup.ID, ProjectActions_ActionGroup.LABEL_ID_generate);\n    insertGroupIntoAnother(Goto_ActionGroup.ID, \"GoToMenu\", null);\n    insertGroupIntoAnother(GoByReference_ActionGroup.ID, EditorPopup_ActionGroup.ID, EditorPopup_ActionGroup.LABEL_ID_goByRef);\n    insertGroupIntoAnother(NodeActionsInternal_ActionGroup.ID, NodeActions_ActionGroup.ID, null);\n    insertGroupIntoAnother(EditorInternal_ActionGroup.ID, EditorPopup_ActionGroup.ID, null);\n    insertGroupIntoAnother(ToolsInternal_ActionGroup.ID, Tools_ActionGroup.ID, Tools_ActionGroup.LABEL_ID_internal);\n    insertGroupIntoAnother(ProjectNewActions_ActionGroup.ID, ProjectActions_ActionGroup.ID, ProjectActions_ActionGroup.LABEL_ID_projectNew);\n    insertGroupIntoAnother(SolutionNewActions_ActionGroup.ID, SolutionActions_ActionGroup.ID, SolutionActions_ActionGroup.LABEL_ID_solutionNew);\n    insertGroupIntoAnother(GeneratorNewActions_ActionGroup.ID, GeneratorActions_ActionGroup.ID, GeneratorActions_ActionGroup.LABEL_ID_generatorNew);\n    insertGroupIntoAnother(LanguageNewActions_ActionGroup.ID, LanguageActions_ActionGroup.ID, LanguageActions_ActionGroup.LABEL_ID_newGroup);\n    insertGroupIntoAnother(ModelNewActions_ActionGroup.ID, ModelActions_ActionGroup.ID, ModelActions_ActionGroup.LABEL_ID_newActions);\n    insertGroupIntoAnother(FileSystemNewActions_ActionGroup.ID, AbstractFileActions_ActionGroup.ID, AbstractFileActions_ActionGroup.LABEL_ID_new);\n    insertGroupIntoAnother(PackageNewActions_ActionGroup.ID, PackageActions_ActionGroup.ID, PackageActions_ActionGroup.LABEL_ID_newActions);\n    insertGroupIntoAnother(ModelRefactoring_ActionGroup.ID, ModelActions_ActionGroup.ID, ModelActions_ActionGroup.LABEL_ID_refactoring);\n    insertGroupIntoAnother(SolutionRefactoring_ActionGroup.ID, SolutionActions_ActionGroup.ID, SolutionActions_ActionGroup.LABEL_ID_refactoring);\n    insertGroupIntoAnother(CreateRootNode_ActionGroup.ID, ModelNewActions_ActionGroup.ID, ModelNewActions_ActionGroup.LABEL_ID_newRoot);\n    insertGroupIntoAnother(CreateRootNode_ActionGroup.ID, PackageNewActions_ActionGroup.ID, null);\n    insertGroupIntoAnother(Tools_ActionGroup.ID, \"ToolsMenu\", null);\n    insertGroupIntoAnother(AbstractFileActions_ActionGroup.ID, FileActions_ActionGroup.ID, FileActions_ActionGroup.LABEL_ID_abstractFileActions);\n    insertGroupIntoAnother(AbstractFileActions_ActionGroup.ID, FolderActions_ActionGroup.ID, FolderActions_ActionGroup.LABEL_ID_abstractFileActions);\n    insertGroupIntoAnother(AbstractFileActions_ActionGroup.ID, ModuleActions_ActionGroup.ID, ModuleActions_ActionGroup.LABEL_ID_abstractFileActions);\n    insertGroupIntoAnother(NamespaceInternalActions_ActionGroup.ID, NamespaceActions_ActionGroup.ID, NamespaceActions_ActionGroup.LABEL_ID_namespaceInternal);\n    insertGroupIntoAnother(DebugRunMenu_ActionGroup.ID, \"RunMenu\", null);\n    insertGroupIntoAnother(AddToFavoritesGroup_ActionGroup.ID, FavoritesPopup_ActionGroup.ID, FavoritesPopup_ActionGroup.LABEL_ID_addToFavorites);\n    insertGroupIntoAnother(Search_ActionGroup.ID, \"SearchMenu\", null);\n    insertGroupIntoAnother(Code_ActionGroup.ID, \"CodeMenu\", null);\n    insertGroupIntoAnother(Breakpoints_ActionGroup.ID, EditorPopup_ActionGroup.ID, null);\n    insertGroupIntoAnother(FavoritesPopupWrapper_ActionGroup.ID, Favorites_ActionGroup.ID, Favorites_ActionGroup.LABEL_ID_popup);\n    insertGroupIntoAnother(Favorites_ActionGroup.ID, GeneratorActions_ActionGroup.ID, GeneratorActions_ActionGroup.LABEL_ID_favorites);\n    insertGroupIntoAnother(Favorites_ActionGroup.ID, LanguageActions_ActionGroup.ID, LanguageActions_ActionGroup.LABEL_ID_favorites);\n    insertGroupIntoAnother(Favorites_ActionGroup.ID, ModelActions_ActionGroup.ID, ModelActions_ActionGroup.LABEL_ID_favorites);\n    insertGroupIntoAnother(Favorites_ActionGroup.ID, NodeActions_ActionGroup.ID, NodeActions_ActionGroup.LABEL_ID_favorites);\n    insertGroupIntoAnother(Favorites_ActionGroup.ID, SolutionActions_ActionGroup.ID, SolutionActions_ActionGroup.LABEL_ID_favorites);\n  }","id":16986,"modified_method":"public void adjustRegularGroups() {\n    insertGroupIntoAnother(FavoritesPopup_ActionGroup.ID, FavoritesPopupWrapper_ActionGroup.ID, null);\n    insertGroupIntoAnother(Bookmarks_ActionGroup.ID, EditorPopup_ActionGroup.ID, null);\n    insertGroupIntoAnother(Build_ActionGroup.ID, \"BuildMenu\", null);\n    insertGroupIntoAnother(Edit_ActionGroup.ID, \"EditMenu\", null);\n    insertGroupIntoAnother(Folding_ActionGroup.ID, EditorPopup_ActionGroup.ID, EditorPopup_ActionGroup.LABEL_ID_folding);\n    insertGroupIntoAnother(Generate_ActionGroup.ID, Build_ActionGroup.ID, Build_ActionGroup.LABEL_ID_aux);\n    insertGroupIntoAnother(GenerateModelPopup_ActionGroup.ID, ModelActions_ActionGroup.ID, ModelActions_ActionGroup.LABEL_ID_generateActions);\n    insertGroupIntoAnother(Goto_ActionGroup.ID, \"GoToMenu\", null);\n    insertGroupIntoAnother(GoByReference_ActionGroup.ID, EditorPopup_ActionGroup.ID, EditorPopup_ActionGroup.LABEL_ID_goByRef);\n    insertGroupIntoAnother(NodeActionsInternal_ActionGroup.ID, NodeActions_ActionGroup.ID, null);\n    insertGroupIntoAnother(EditorInternal_ActionGroup.ID, EditorPopup_ActionGroup.ID, null);\n    insertGroupIntoAnother(ToolsInternal_ActionGroup.ID, Tools_ActionGroup.ID, Tools_ActionGroup.LABEL_ID_internal);\n    insertGroupIntoAnother(ProjectNewActions_ActionGroup.ID, ProjectActions_ActionGroup.ID, ProjectActions_ActionGroup.LABEL_ID_projectNew);\n    insertGroupIntoAnother(SolutionNewActions_ActionGroup.ID, SolutionActions_ActionGroup.ID, SolutionActions_ActionGroup.LABEL_ID_solutionNew);\n    insertGroupIntoAnother(GeneratorNewActions_ActionGroup.ID, GeneratorActions_ActionGroup.ID, GeneratorActions_ActionGroup.LABEL_ID_generatorNew);\n    insertGroupIntoAnother(LanguageNewActions_ActionGroup.ID, LanguageActions_ActionGroup.ID, LanguageActions_ActionGroup.LABEL_ID_newGroup);\n    insertGroupIntoAnother(ModelNewActions_ActionGroup.ID, ModelActions_ActionGroup.ID, ModelActions_ActionGroup.LABEL_ID_newActions);\n    insertGroupIntoAnother(FileSystemNewActions_ActionGroup.ID, AbstractFileActions_ActionGroup.ID, AbstractFileActions_ActionGroup.LABEL_ID_new);\n    insertGroupIntoAnother(PackageNewActions_ActionGroup.ID, PackageActions_ActionGroup.ID, PackageActions_ActionGroup.LABEL_ID_newActions);\n    insertGroupIntoAnother(ModelRefactoring_ActionGroup.ID, ModelActions_ActionGroup.ID, ModelActions_ActionGroup.LABEL_ID_refactoring);\n    insertGroupIntoAnother(SolutionRefactoring_ActionGroup.ID, SolutionActions_ActionGroup.ID, SolutionActions_ActionGroup.LABEL_ID_refactoring);\n    insertGroupIntoAnother(CreateRootNode_ActionGroup.ID, ModelNewActions_ActionGroup.ID, ModelNewActions_ActionGroup.LABEL_ID_newRoot);\n    insertGroupIntoAnother(CreateRootNode_ActionGroup.ID, PackageNewActions_ActionGroup.ID, null);\n    insertGroupIntoAnother(Tools_ActionGroup.ID, \"ToolsMenu\", null);\n    insertGroupIntoAnother(AbstractFileActions_ActionGroup.ID, FileActions_ActionGroup.ID, FileActions_ActionGroup.LABEL_ID_abstractFileActions);\n    insertGroupIntoAnother(AbstractFileActions_ActionGroup.ID, FolderActions_ActionGroup.ID, FolderActions_ActionGroup.LABEL_ID_abstractFileActions);\n    insertGroupIntoAnother(AbstractFileActions_ActionGroup.ID, ModuleActions_ActionGroup.ID, ModuleActions_ActionGroup.LABEL_ID_abstractFileActions);\n    insertGroupIntoAnother(NamespaceInternalActions_ActionGroup.ID, NamespaceActions_ActionGroup.ID, NamespaceActions_ActionGroup.LABEL_ID_namespaceInternal);\n    insertGroupIntoAnother(DebugRunMenu_ActionGroup.ID, \"RunMenu\", null);\n    insertGroupIntoAnother(AddToFavoritesGroup_ActionGroup.ID, FavoritesPopup_ActionGroup.ID, FavoritesPopup_ActionGroup.LABEL_ID_addToFavorites);\n    insertGroupIntoAnother(Search_ActionGroup.ID, \"SearchMenu\", null);\n    insertGroupIntoAnother(Code_ActionGroup.ID, \"CodeMenu\", null);\n    insertGroupIntoAnother(Breakpoints_ActionGroup.ID, EditorPopup_ActionGroup.ID, null);\n    insertGroupIntoAnother(FavoritesPopupWrapper_ActionGroup.ID, Favorites_ActionGroup.ID, Favorites_ActionGroup.LABEL_ID_popup);\n    insertGroupIntoAnother(Favorites_ActionGroup.ID, GeneratorActions_ActionGroup.ID, GeneratorActions_ActionGroup.LABEL_ID_favorites);\n    insertGroupIntoAnother(Favorites_ActionGroup.ID, LanguageActions_ActionGroup.ID, LanguageActions_ActionGroup.LABEL_ID_favorites);\n    insertGroupIntoAnother(Favorites_ActionGroup.ID, ModelActions_ActionGroup.ID, ModelActions_ActionGroup.LABEL_ID_favorites);\n    insertGroupIntoAnother(Favorites_ActionGroup.ID, NodeActions_ActionGroup.ID, NodeActions_ActionGroup.LABEL_ID_favorites);\n    insertGroupIntoAnother(Favorites_ActionGroup.ID, SolutionActions_ActionGroup.ID, SolutionActions_ActionGroup.LABEL_ID_favorites);\n  }","commit_id":"580fc4799868741bdc497acec67c03376e8ef58b","url":"https://github.com/JetBrains/MPS"},{"original_method":"public void createGroups() {\n    // actions w/o parameters \n    addAction(new AddGeneralPurposeDevKitToLanguageModels_Action());\n    addAction(new AddLanguageDesingDevKitToLanguages_Action());\n    addAction(new AddLanguageImport_Action());\n    addAction(new AddMissingImports_Action());\n    addAction(new AddModelImportByRoot_Action());\n    addAction(new AddModelImport_Action());\n    addAction(new AddModuleToProject_Action());\n    addAction(new AddToNewFavoritesList_Action());\n    addAction(new AnalyzeClasspath_Action());\n    addAction(new CheckModel_Action());\n    addAction(new CheckProject_Action());\n    addAction(new CleanModule_Action());\n    addAction(new CleanProject_Action());\n    addAction(new CloneModel_Action());\n    addAction(new CloneRoot_Action());\n    addAction(new CollapseAll_Action());\n    addAction(new Collapse_Action());\n    addAction(new CompileProject_Action());\n    addAction(new CopyModelName_Action());\n    addAction(new CopyModuleName_Action());\n    addAction(new CopyNodeName_Action());\n    addAction(new CopyNodeReference_Action());\n    addAction(new CopyNode_Action());\n    addAction(new CutNode_Action());\n    addAction(new DeleteFavoritesList_Action());\n    addAction(new DeleteModels_Action());\n    addAction(new DeleteModules_Action());\n    addAction(new DeleteNode_Action());\n    addAction(new DeletePropertyAction_Action());\n    addAction(new DeleteReferenceAction_Action());\n    addAction(new DumpKeyStrokes_Action());\n    addAction(new EditNodeExplicit_Action());\n    addAction(new EditNode_Action());\n    addAction(new EvaluateExpression_Action());\n    addAction(new ExpandAll_Action());\n    addAction(new ExpandNode_Action());\n    addAction(new Expand_Action());\n    addAction(new ExportThreads_Action());\n    addAction(new FastFindNodeUsages_Action());\n    addAction(new FindNext_Action());\n    addAction(new FindPrevious_Action());\n    addAction(new FindSpecificNodeUsages_Action());\n    addAction(new Find_Action());\n    addAction(new FindlAllBrokenReferences_Action());\n    addAction(new FixDependenciesEverywhere_Action());\n    addAction(new FixVirtualPackges_Action());\n    addAction(new FoldSelection_Action());\n    addAction(new GenerateFiles_Action());\n    addAction(new GoByCurrentReference_Action());\n    addAction(new GoToNodeById_Action());\n    addAction(new HighlightInstances_Action());\n    addAction(new HighlightUsages_Action());\n    addAction(new InstallIDEAPlugin_Action());\n    addAction(new LoadNonStubModels_Action());\n    addAction(new MPSProjectPaths_Action());\n    addAction(new MakeModule_Action());\n    addAction(new ModelPropertiesWOShortcut_Action());\n    addAction(new ModelProperties_Action());\n    addAction(new MoveFileOrDirectory_Action());\n    addAction(new NewDirectory_Action());\n    addAction(new NewFile_Action());\n    addAction(new NewModel_Action());\n    addAction(new NewRuntimeModule_Action());\n    addAction(new NewSubModel_Action());\n    addAction(new NewSubTestModel_Action());\n    addAction(new OptimizeImportsInGlobalScope_Action());\n    addAction(new OptimizeModelImports_Action());\n    addAction(new OptimizeModuleImports_Action());\n    addAction(new OptimizeProjectImports_Action());\n    addAction(new Options_Action());\n    addAction(new PasteNode_Action());\n    addAction(new Pause_Action());\n    addAction(new QuickCreate_Action());\n    addAction(new RebuildModule_Action());\n    addAction(new RecompileProject_Action());\n    addAction(new ReloadAll_Action());\n    addAction(new ReloadStubs_Action());\n    addAction(new RemoveAllBookmarks_Action());\n    addAction(new RemoveBootstrapLanguagesDevKitFromLanguageModels_Action());\n    addAction(new RemoveFromFavorites_Action());\n    addAction(new RemoveLanguageDesignDevKitFromModels_Action());\n    addAction(new RemoveModuleFromProject_Action());\n    addAction(new RemoveTransientModels_Action());\n    addAction(new RenameAspects_Action());\n    addAction(new RenameFavoritesList_Action());\n    addAction(new RenameFileOrDirectory_Action());\n    addAction(new RenameModel_Action());\n    addAction(new RenameNamespace_Action());\n    addAction(new RenamePackage_Action());\n    addAction(new RenameSolution_Action());\n    addAction(new Resume_Action());\n    addAction(new RevertMemoryChanges_Action());\n    addAction(new SaveModel_Action());\n    addAction(new SetBookmarkNoNumber_Action());\n    addAction(new SetModuleFolder_Action());\n    addAction(new SetNodePackage_Action());\n    addAction(new ShowBookmarksDialog_Action());\n    addAction(new ShowBookmarks_Action());\n    addAction(new ShowClassInHierarchy_Action());\n    addAction(new ShowConceptInHierarchy_Action());\n    addAction(new ShowErrorMessage_Action());\n    addAction(new ShowImplementations_Action());\n    addAction(new ShowInProject_Action());\n    addAction(new ShowMappingsPartitioning_Action());\n    addAction(new ShowModelChecker_Action());\n    addAction(new ShowModelRepository_Action());\n    addAction(new ShowModuleDependencies_Action());\n    addAction(new ShowModuleRepository_Action());\n    addAction(new ShowNodeInExplorer_Action());\n    addAction(new ShowNodeInInspector_Action());\n    addAction(new ShowNodeInfo_Action());\n    addAction(new ShowParameters_Action());\n    addAction(new ShowReferencesToMissingStuff_Action());\n    addAction(new SolutionProperties_Action());\n    addAction(new StepInto_Action());\n    addAction(new StepOut_Action());\n    addAction(new StepOver_Action());\n    addAction(new ToggleBreakpoint_Action());\n    addAction(new UpgradeModelPersistenceGlobally_Action());\n    addAction(new UpgradeModelPersistenceInModel_Action());\n    addAction(new UpgradeModelPersistenceInModule_Action());\n    addAction(new UpgradeModelPersistenceInProject_Action());\n    addAction(new UpgradeModulePersistenceGlobally_Action());\n    addAction(new ViewBreakpoints_Action());\n    // groups \n    addGroup(new AbstractFileActions_ActionGroup());\n    addGroup(new AddToFavoritesGroup_ActionGroup());\n    addGroup(new Bookmarks_ActionGroup());\n    addGroup(new Breakpoints_ActionGroup());\n    addGroup(new Build_ActionGroup());\n    addGroup(new Code_ActionGroup());\n    addGroup(new CreateRootNode_ActionGroup());\n    addGroup(new DebugRunMenu_ActionGroup());\n    addGroup(new DebugTool_ActionGroup());\n    addGroup(new DevkitActions_ActionGroup());\n    addGroup(new Edit_ActionGroup());\n    addGroup(new EditorInternal_ActionGroup());\n    addGroup(new EditorLeftPanelMenu_ActionGroup());\n    addGroup(new EditorPopup_ActionGroup());\n    addGroup(new EditorTabActions_ActionGroup());\n    addGroup(new FavoritesPopupWrapper_ActionGroup());\n    addGroup(new FavoritesPopup_ActionGroup());\n    addGroup(new Favorites_ActionGroup());\n    addGroup(new FileActions_ActionGroup());\n    addGroup(new FileSystemNewActions_ActionGroup());\n    addGroup(new FolderActions_ActionGroup());\n    addGroup(new Folding_ActionGroup());\n    addGroup(new GenerateModelPopup_ActionGroup());\n    addGroup(new GenerateProjectPopup_ActionGroup());\n    addGroup(new Generate_ActionGroup());\n    addGroup(new GeneratorActions_ActionGroup());\n    addGroup(new GeneratorNewActions_ActionGroup());\n    addGroup(new GoByReference_ActionGroup());\n    addGroup(new Goto_ActionGroup());\n    addGroup(new JUnitTestCaseActions_ActionGroup());\n    addGroup(new JUnitTestMethodActions_ActionGroup());\n    addGroup(new LanguageActions_ActionGroup());\n    addGroup(new LanguageNewActions_ActionGroup());\n    addGroup(new ModelActionsInternal_ActionGroup());\n    addGroup(new ModelActions_ActionGroup());\n    addGroup(new ModelNewActions_ActionGroup());\n    addGroup(new ModelRefactoring_ActionGroup());\n    addGroup(new ModuleActions_ActionGroup());\n    addGroup(new ModulePropertiesGroup_ActionGroup());\n    addGroup(new NamespaceActions_ActionGroup());\n    addGroup(new NamespaceInternalActions_ActionGroup());\n    addGroup(new NamespaceMakeActions_ActionGroup());\n    addGroup(new NodeActionsInternal_ActionGroup());\n    addGroup(new NodeActions_ActionGroup());\n    addGroup(new PackageActions_ActionGroup());\n    addGroup(new PackageNewActions_ActionGroup());\n    addGroup(new ProjectActions_ActionGroup());\n    addGroup(new ProjectNewActions_ActionGroup());\n    addGroup(new PropertyNodeActions_ActionGroup());\n    addGroup(new ReferenceNodeActions_ActionGroup());\n    addGroup(new RuntimeFolderActions_ActionGroup());\n    addGroup(new Search_ActionGroup());\n    addGroup(new SolutionActions_ActionGroup());\n    addGroup(new SolutionNewActions_ActionGroup());\n    addGroup(new SolutionRefactoring_ActionGroup());\n    addGroup(new ToolsInternal_ActionGroup());\n    addGroup(new ToolsUpgrade_ActionGroup());\n    addGroup(new Tools_ActionGroup());\n    addGroup(new TransientModulesActions_ActionGroup());\n  }","id":16987,"modified_method":"public void createGroups() {\n    // actions w/o parameters \n    addAction(new AddGeneralPurposeDevKitToLanguageModels_Action());\n    addAction(new AddLanguageDesingDevKitToLanguages_Action());\n    addAction(new AddLanguageImport_Action());\n    addAction(new AddMissingImports_Action());\n    addAction(new AddModelImportByRoot_Action());\n    addAction(new AddModelImport_Action());\n    addAction(new AddModuleToProject_Action());\n    addAction(new AddToNewFavoritesList_Action());\n    addAction(new AnalyzeClasspath_Action());\n    addAction(new CheckModel_Action());\n    addAction(new CheckProject_Action());\n    addAction(new CleanModule_Action());\n    addAction(new CloneModel_Action());\n    addAction(new CloneRoot_Action());\n    addAction(new CollapseAll_Action());\n    addAction(new Collapse_Action());\n    addAction(new CopyModelName_Action());\n    addAction(new CopyModuleName_Action());\n    addAction(new CopyNodeName_Action());\n    addAction(new CopyNodeReference_Action());\n    addAction(new CopyNode_Action());\n    addAction(new CutNode_Action());\n    addAction(new DeleteFavoritesList_Action());\n    addAction(new DeleteModels_Action());\n    addAction(new DeleteModules_Action());\n    addAction(new DeleteNode_Action());\n    addAction(new DeletePropertyAction_Action());\n    addAction(new DeleteReferenceAction_Action());\n    addAction(new DumpKeyStrokes_Action());\n    addAction(new EditNodeExplicit_Action());\n    addAction(new EditNode_Action());\n    addAction(new EvaluateExpression_Action());\n    addAction(new ExpandAll_Action());\n    addAction(new ExpandNode_Action());\n    addAction(new Expand_Action());\n    addAction(new ExportThreads_Action());\n    addAction(new FastFindNodeUsages_Action());\n    addAction(new FindNext_Action());\n    addAction(new FindPrevious_Action());\n    addAction(new FindSpecificNodeUsages_Action());\n    addAction(new Find_Action());\n    addAction(new FindlAllBrokenReferences_Action());\n    addAction(new FixDependenciesEverywhere_Action());\n    addAction(new FixVirtualPackges_Action());\n    addAction(new FoldSelection_Action());\n    addAction(new GenerateFiles_Action());\n    addAction(new GoByCurrentReference_Action());\n    addAction(new GoToNodeById_Action());\n    addAction(new HighlightInstances_Action());\n    addAction(new HighlightUsages_Action());\n    addAction(new InstallIDEAPlugin_Action());\n    addAction(new LoadNonStubModels_Action());\n    addAction(new MPSProjectPaths_Action());\n    addAction(new MakeModule_Action());\n    addAction(new ModelPropertiesWOShortcut_Action());\n    addAction(new ModelProperties_Action());\n    addAction(new MoveFileOrDirectory_Action());\n    addAction(new NewDirectory_Action());\n    addAction(new NewFile_Action());\n    addAction(new NewModel_Action());\n    addAction(new NewRuntimeModule_Action());\n    addAction(new NewSubModel_Action());\n    addAction(new NewSubTestModel_Action());\n    addAction(new OptimizeImportsInGlobalScope_Action());\n    addAction(new OptimizeModelImports_Action());\n    addAction(new OptimizeModuleImports_Action());\n    addAction(new OptimizeProjectImports_Action());\n    addAction(new Options_Action());\n    addAction(new PasteNode_Action());\n    addAction(new Pause_Action());\n    addAction(new QuickCreate_Action());\n    addAction(new RebuildModule_Action());\n    addAction(new ReloadAll_Action());\n    addAction(new ReloadStubs_Action());\n    addAction(new RemoveAllBookmarks_Action());\n    addAction(new RemoveBootstrapLanguagesDevKitFromLanguageModels_Action());\n    addAction(new RemoveFromFavorites_Action());\n    addAction(new RemoveLanguageDesignDevKitFromModels_Action());\n    addAction(new RemoveModuleFromProject_Action());\n    addAction(new RemoveTransientModels_Action());\n    addAction(new RenameAspects_Action());\n    addAction(new RenameFavoritesList_Action());\n    addAction(new RenameFileOrDirectory_Action());\n    addAction(new RenameModel_Action());\n    addAction(new RenameNamespace_Action());\n    addAction(new RenamePackage_Action());\n    addAction(new RenameSolution_Action());\n    addAction(new Resume_Action());\n    addAction(new RevertMemoryChanges_Action());\n    addAction(new SaveModel_Action());\n    addAction(new SetBookmarkNoNumber_Action());\n    addAction(new SetModuleFolder_Action());\n    addAction(new SetNodePackage_Action());\n    addAction(new ShowBookmarksDialog_Action());\n    addAction(new ShowBookmarks_Action());\n    addAction(new ShowClassInHierarchy_Action());\n    addAction(new ShowConceptInHierarchy_Action());\n    addAction(new ShowErrorMessage_Action());\n    addAction(new ShowImplementations_Action());\n    addAction(new ShowInProject_Action());\n    addAction(new ShowMappingsPartitioning_Action());\n    addAction(new ShowModelChecker_Action());\n    addAction(new ShowModelRepository_Action());\n    addAction(new ShowModuleDependencies_Action());\n    addAction(new ShowModuleRepository_Action());\n    addAction(new ShowNodeInExplorer_Action());\n    addAction(new ShowNodeInInspector_Action());\n    addAction(new ShowNodeInfo_Action());\n    addAction(new ShowParameters_Action());\n    addAction(new ShowReferencesToMissingStuff_Action());\n    addAction(new SolutionProperties_Action());\n    addAction(new StepInto_Action());\n    addAction(new StepOut_Action());\n    addAction(new StepOver_Action());\n    addAction(new ToggleBreakpoint_Action());\n    addAction(new UpgradeModelPersistenceGlobally_Action());\n    addAction(new UpgradeModelPersistenceInModel_Action());\n    addAction(new UpgradeModelPersistenceInModule_Action());\n    addAction(new UpgradeModelPersistenceInProject_Action());\n    addAction(new UpgradeModulePersistenceGlobally_Action());\n    addAction(new ViewBreakpoints_Action());\n    // groups \n    addGroup(new AbstractFileActions_ActionGroup());\n    addGroup(new AddToFavoritesGroup_ActionGroup());\n    addGroup(new Bookmarks_ActionGroup());\n    addGroup(new Breakpoints_ActionGroup());\n    addGroup(new Build_ActionGroup());\n    addGroup(new Code_ActionGroup());\n    addGroup(new CreateRootNode_ActionGroup());\n    addGroup(new DebugRunMenu_ActionGroup());\n    addGroup(new DebugTool_ActionGroup());\n    addGroup(new DevkitActions_ActionGroup());\n    addGroup(new Edit_ActionGroup());\n    addGroup(new EditorInternal_ActionGroup());\n    addGroup(new EditorLeftPanelMenu_ActionGroup());\n    addGroup(new EditorPopup_ActionGroup());\n    addGroup(new EditorTabActions_ActionGroup());\n    addGroup(new FavoritesPopupWrapper_ActionGroup());\n    addGroup(new FavoritesPopup_ActionGroup());\n    addGroup(new Favorites_ActionGroup());\n    addGroup(new FileActions_ActionGroup());\n    addGroup(new FileSystemNewActions_ActionGroup());\n    addGroup(new FolderActions_ActionGroup());\n    addGroup(new Folding_ActionGroup());\n    addGroup(new GenerateModelPopup_ActionGroup());\n    addGroup(new Generate_ActionGroup());\n    addGroup(new GeneratorActions_ActionGroup());\n    addGroup(new GeneratorNewActions_ActionGroup());\n    addGroup(new GoByReference_ActionGroup());\n    addGroup(new Goto_ActionGroup());\n    addGroup(new JUnitTestCaseActions_ActionGroup());\n    addGroup(new JUnitTestMethodActions_ActionGroup());\n    addGroup(new LanguageActions_ActionGroup());\n    addGroup(new LanguageNewActions_ActionGroup());\n    addGroup(new ModelActionsInternal_ActionGroup());\n    addGroup(new ModelActions_ActionGroup());\n    addGroup(new ModelNewActions_ActionGroup());\n    addGroup(new ModelRefactoring_ActionGroup());\n    addGroup(new ModuleActions_ActionGroup());\n    addGroup(new ModulePropertiesGroup_ActionGroup());\n    addGroup(new NamespaceActions_ActionGroup());\n    addGroup(new NamespaceInternalActions_ActionGroup());\n    addGroup(new NamespaceMakeActions_ActionGroup());\n    addGroup(new NodeActionsInternal_ActionGroup());\n    addGroup(new NodeActions_ActionGroup());\n    addGroup(new PackageActions_ActionGroup());\n    addGroup(new PackageNewActions_ActionGroup());\n    addGroup(new ProjectActions_ActionGroup());\n    addGroup(new ProjectNewActions_ActionGroup());\n    addGroup(new PropertyNodeActions_ActionGroup());\n    addGroup(new ReferenceNodeActions_ActionGroup());\n    addGroup(new RuntimeFolderActions_ActionGroup());\n    addGroup(new Search_ActionGroup());\n    addGroup(new SolutionActions_ActionGroup());\n    addGroup(new SolutionNewActions_ActionGroup());\n    addGroup(new SolutionRefactoring_ActionGroup());\n    addGroup(new ToolsInternal_ActionGroup());\n    addGroup(new ToolsUpgrade_ActionGroup());\n    addGroup(new Tools_ActionGroup());\n    addGroup(new TransientModulesActions_ActionGroup());\n  }","commit_id":"580fc4799868741bdc497acec67c03376e8ef58b","url":"https://github.com/JetBrains/MPS"},{"original_method":"public void adjustRegularGroups() {\n    insertGroupIntoAnother(GenerateModulePopup_ActionGroup.ID, LanguageActions_ActionGroup.ID, LanguageActions_ActionGroup.LABEL_ID_generateModule);\n    insertGroupIntoAnother(GenerateModulePopup_ActionGroup.ID, SolutionActions_ActionGroup.ID, SolutionActions_ActionGroup.LABEL_ID_generateModule);\n    insertGroupIntoAnother(GenerateEditorPopup_ActionGroup.ID, EditorPopup_ActionGroup.ID, EditorPopup_ActionGroup.LABEL_ID_generateModel);\n    insertGroupIntoAnother(GenerateModule_ActionGroup.ID, Generate_ActionGroup.ID, Generate_ActionGroup.LABEL_ID_generateModule);\n    insertGroupIntoAnother(GenerateModule_ActionGroup.ID, GenerateModulePopup_ActionGroup.ID, GenerateModulePopup_ActionGroup.LABEL_ID_generate);\n    insertGroupIntoAnother(Compile_ActionGroup.ID, Build_ActionGroup.ID, Build_ActionGroup.LABEL_ID_compile);\n    insertGroupIntoAnother(GenerateOptions_ActionGroup.ID, Build_ActionGroup.ID, Build_ActionGroup.LABEL_ID_options);\n    insertGroupIntoAnother(SaveTransientModels_ActionGroup.ID, GenerateOptions_ActionGroup.ID, GenerateOptions_ActionGroup.LABEL_ID_saveTransientModels);\n    insertGroupIntoAnother(GenerateModels_ActionGroup.ID, Generate_ActionGroup.ID, Generate_ActionGroup.LABEL_ID_generateModel);\n    insertGroupIntoAnother(GenerateModels_ActionGroup.ID, GenerateEditorPopup_ActionGroup.ID, GenerateEditorPopup_ActionGroup.LABEL_ID_generate);\n    insertGroupIntoAnother(GenerateFavorites_ActionGroup.ID, Favorites_ActionGroup.ID, Favorites_ActionGroup.LABEL_ID_generate);\n  }","id":16988,"modified_method":"public void adjustRegularGroups() {\n    insertGroupIntoAnother(GenerateModulePopup_ActionGroup.ID, LanguageActions_ActionGroup.ID, LanguageActions_ActionGroup.LABEL_ID_generateModule);\n    insertGroupIntoAnother(GenerateModulePopup_ActionGroup.ID, SolutionActions_ActionGroup.ID, SolutionActions_ActionGroup.LABEL_ID_generateModule);\n    insertGroupIntoAnother(GenerateProjectPopup_ActionGroup.ID, ProjectActions_ActionGroup.ID, ProjectActions_ActionGroup.LABEL_ID_generate);\n    insertGroupIntoAnother(GenerateEditorPopup_ActionGroup.ID, EditorPopup_ActionGroup.ID, EditorPopup_ActionGroup.LABEL_ID_generateModel);\n    insertGroupIntoAnother(GenerateModule_ActionGroup.ID, Generate_ActionGroup.ID, Generate_ActionGroup.LABEL_ID_generateModule);\n    insertGroupIntoAnother(GenerateModule_ActionGroup.ID, GenerateModulePopup_ActionGroup.ID, GenerateModulePopup_ActionGroup.LABEL_ID_generate);\n    insertGroupIntoAnother(ProjectCompileActions_ActionGroup.ID, ProjectActions_ActionGroup.ID, ProjectActions_ActionGroup.LABEL_ID_compileJava);\n    insertGroupIntoAnother(Compile_ActionGroup.ID, Build_ActionGroup.ID, Build_ActionGroup.LABEL_ID_compile);\n    insertGroupIntoAnother(GenerateOptions_ActionGroup.ID, Build_ActionGroup.ID, Build_ActionGroup.LABEL_ID_options);\n    insertGroupIntoAnother(SaveTransientModels_ActionGroup.ID, GenerateOptions_ActionGroup.ID, GenerateOptions_ActionGroup.LABEL_ID_saveTransientModels);\n    insertGroupIntoAnother(GenerateModels_ActionGroup.ID, Generate_ActionGroup.ID, Generate_ActionGroup.LABEL_ID_generateModel);\n    insertGroupIntoAnother(GenerateModels_ActionGroup.ID, GenerateEditorPopup_ActionGroup.ID, GenerateEditorPopup_ActionGroup.LABEL_ID_generate);\n    insertGroupIntoAnother(GenerateFavorites_ActionGroup.ID, Favorites_ActionGroup.ID, Favorites_ActionGroup.LABEL_ID_generate);\n  }","commit_id":"580fc4799868741bdc497acec67c03376e8ef58b","url":"https://github.com/JetBrains/MPS"},{"original_method":"public void createGroups() {\n    // actions w/o parameters \n    addAction(new CheckModelsBeforeGeneration_Action());\n    addAction(new CleanAllModules_Action());\n    addAction(new GenerateTextFromSolution_Action());\n    addAction(new GoToUsageInMappingConfig_Action());\n    addAction(new MakeAllModules_Action());\n    addAction(new RebuildAllModules_Action());\n    // groups \n    addGroup(new Compile_ActionGroup());\n    addGroup(new GenerateEditorPopup_ActionGroup());\n    addGroup(new GenerateFavorites_ActionGroup());\n    addGroup(new GenerateModels_ActionGroup());\n    addGroup(new GenerateModulePopup_ActionGroup());\n    addGroup(new GenerateModule_ActionGroup());\n    addGroup(new GenerateOptions_ActionGroup());\n    addGroup(new SaveTransientModels_ActionGroup());\n  }","id":16989,"modified_method":"public void createGroups() {\n    // actions w/o parameters \n    addAction(new CheckModelsBeforeGeneration_Action());\n    addAction(new CleanAllModules_Action());\n    addAction(new CleanProject_Action());\n    addAction(new CompileProject_Action());\n    addAction(new GenerateTextFromSolution_Action());\n    addAction(new GoToUsageInMappingConfig_Action());\n    addAction(new MakeAllModules_Action());\n    addAction(new RebuildAllModules_Action());\n    addAction(new RecompileProject_Action());\n    // groups \n    addGroup(new Compile_ActionGroup());\n    addGroup(new GenerateEditorPopup_ActionGroup());\n    addGroup(new GenerateFavorites_ActionGroup());\n    addGroup(new GenerateModels_ActionGroup());\n    addGroup(new GenerateModulePopup_ActionGroup());\n    addGroup(new GenerateModule_ActionGroup());\n    addGroup(new GenerateOptions_ActionGroup());\n    addGroup(new GenerateProjectPopup_ActionGroup());\n    addGroup(new ProjectCompileActions_ActionGroup());\n    addGroup(new SaveTransientModels_ActionGroup());\n  }","commit_id":"580fc4799868741bdc497acec67c03376e8ef58b","url":"https://github.com/JetBrains/MPS"},{"original_method":"public ProjectActions_ActionGroup() {\n    super(\"ProjectActions\", ID);\n    this.setIsInternal(false);\n    this.setPopup(false);\n    try {\n      {\n        LabelledAnchor action = new LabelledAnchor(ProjectActions_ActionGroup.LABEL_ID_projectNew);\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        manager.registerAction(action.getId(), action, PluginId.getId(\"jetbrains.mps.ide\"));\n        ProjectActions_ActionGroup.this.addAction(action);\n      }\n      ProjectActions_ActionGroup.this.addSeparator();\n      {\n        LabelledAnchor action = new LabelledAnchor(ProjectActions_ActionGroup.LABEL_ID_make);\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        manager.registerAction(action.getId(), action, PluginId.getId(\"jetbrains.mps.ide\"));\n        ProjectActions_ActionGroup.this.addAction(action);\n      }\n      {\n        LabelledAnchor action = new LabelledAnchor(ProjectActions_ActionGroup.LABEL_ID_generate);\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        manager.registerAction(action.getId(), action, PluginId.getId(\"jetbrains.mps.ide\"));\n        ProjectActions_ActionGroup.this.addAction(action);\n      }\n      ProjectActions_ActionGroup.this.addSeparator();\n      ProjectActions_ActionGroup.this.addAction(\"jetbrains.mps.ide.actions.CheckProject_Action\");\n      ProjectActions_ActionGroup.this.addAction(\"jetbrains.mps.ide.actions.CompileProject_Action\");\n      ProjectActions_ActionGroup.this.addAction(\"jetbrains.mps.ide.actions.RecompileProject_Action\");\n      ProjectActions_ActionGroup.this.addAction(\"jetbrains.mps.ide.actions.CleanProject_Action\");\n      {\n        LabelledAnchor action = new LabelledAnchor(ProjectActions_ActionGroup.LABEL_ID_runConfig);\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        manager.registerAction(action.getId(), action, PluginId.getId(\"jetbrains.mps.ide\"));\n        ProjectActions_ActionGroup.this.addAction(action);\n      }\n      ProjectActions_ActionGroup.this.addSeparator();\n      ProjectActions_ActionGroup.this.addAction(\"jetbrains.mps.ide.actions.UpgradeModelPersistenceInProject_Action\");\n      ProjectActions_ActionGroup.this.addAction(\"jetbrains.mps.ide.actions.OptimizeProjectImports_Action\");\n      ProjectActions_ActionGroup.this.addAction(\"jetbrains.mps.ide.actions.MPSProjectPaths_Action\");\n    } catch (Throwable t) {\n      LOG.error(\"User group error\", t);\n    }\n  }","id":16990,"modified_method":"public ProjectActions_ActionGroup() {\n    super(\"ProjectActions\", ID);\n    this.setIsInternal(false);\n    this.setPopup(false);\n    try {\n      {\n        LabelledAnchor action = new LabelledAnchor(ProjectActions_ActionGroup.LABEL_ID_projectNew);\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        manager.registerAction(action.getId(), action, PluginId.getId(\"jetbrains.mps.ide\"));\n        ProjectActions_ActionGroup.this.addAction(action);\n      }\n      ProjectActions_ActionGroup.this.addSeparator();\n      {\n        LabelledAnchor action = new LabelledAnchor(ProjectActions_ActionGroup.LABEL_ID_make);\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        manager.registerAction(action.getId(), action, PluginId.getId(\"jetbrains.mps.ide\"));\n        ProjectActions_ActionGroup.this.addAction(action);\n      }\n      {\n        LabelledAnchor action = new LabelledAnchor(ProjectActions_ActionGroup.LABEL_ID_generate);\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        manager.registerAction(action.getId(), action, PluginId.getId(\"jetbrains.mps.ide\"));\n        ProjectActions_ActionGroup.this.addAction(action);\n      }\n      ProjectActions_ActionGroup.this.addSeparator();\n      ProjectActions_ActionGroup.this.addAction(\"jetbrains.mps.ide.actions.CheckProject_Action\");\n      {\n        LabelledAnchor action = new LabelledAnchor(ProjectActions_ActionGroup.LABEL_ID_compileJava);\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        manager.registerAction(action.getId(), action, PluginId.getId(\"jetbrains.mps.ide\"));\n        ProjectActions_ActionGroup.this.addAction(action);\n      }\n      {\n        LabelledAnchor action = new LabelledAnchor(ProjectActions_ActionGroup.LABEL_ID_runConfig);\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        manager.registerAction(action.getId(), action, PluginId.getId(\"jetbrains.mps.ide\"));\n        ProjectActions_ActionGroup.this.addAction(action);\n      }\n      ProjectActions_ActionGroup.this.addSeparator();\n      ProjectActions_ActionGroup.this.addAction(\"jetbrains.mps.ide.actions.UpgradeModelPersistenceInProject_Action\");\n      ProjectActions_ActionGroup.this.addAction(\"jetbrains.mps.ide.actions.OptimizeProjectImports_Action\");\n      ProjectActions_ActionGroup.this.addAction(\"jetbrains.mps.ide.actions.MPSProjectPaths_Action\");\n    } catch (Throwable t) {\n      LOG.error(\"User group error\", t);\n    }\n  }","commit_id":"580fc4799868741bdc497acec67c03376e8ef58b","url":"https://github.com/JetBrains/MPS"},{"original_method":"public DebugRunMenu_ActionGroup() {\n    super(\"DebugRunMenu\", ID);\n    this.setIsInternal(false);\n    this.setPopup(false);\n    try {\n      DebugRunMenu_ActionGroup.this.addSeparator();\n      DebugRunMenu_ActionGroup.this.addAction(\"jetbrains.mps.debugger.api.ui.actions.StepOver_Action\");\n      DebugRunMenu_ActionGroup.this.addAction(\"jetbrains.mps.debugger.api.ui.actions.StepInto_Action\");\n      DebugRunMenu_ActionGroup.this.addAction(\"jetbrains.mps.debugger.api.ui.actions.StepOut_Action\");\n      DebugRunMenu_ActionGroup.this.addAction(\"jetbrains.mps.debugger.api.ui.actions.Resume_Action\");\n      DebugRunMenu_ActionGroup.this.addAction(\"jetbrains.mps.debugger.api.ui.actions.Pause_Action\");\n      DebugRunMenu_ActionGroup.this.addAction(\"jetbrains.mps.debugger.api.ui.actions.EvaluateExpression_Action\");\n      DebugRunMenu_ActionGroup.this.addAction(\"jetbrains.mps.debugger.api.ui.actions.ExportThreads_Action\");\n      DebugRunMenu_ActionGroup.this.addSeparator();\n      DebugRunMenu_ActionGroup.this.addAction(\"jetbrains.mps.debugger.api.ui.actions.ToggleBreakpoint_Action\");\n      DebugRunMenu_ActionGroup.this.addAction(\"jetbrains.mps.debugger.api.ui.actions.ViewBreakpoints_Action\");\n    } catch (Throwable t) {\n      LOG.error(\"User group error\", t);\n    }\n  }","id":16991,"modified_method":"public DebugRunMenu_ActionGroup() {\n    super(\"DebugRunMenu\", ID);\n    this.setIsInternal(false);\n    this.setPopup(false);\n    try {\n      DebugRunMenu_ActionGroup.this.addSeparator();\n      {\n        LabelledAnchor action = new LabelledAnchor(DebugRunMenu_ActionGroup.LABEL_ID_steps);\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        manager.registerAction(action.getId(), action, PluginId.getId(\"jetbrains.mps.debugger.api.runtime\"));\n        DebugRunMenu_ActionGroup.this.addAction(action);\n      }\n      DebugRunMenu_ActionGroup.this.addAction(\"jetbrains.mps.debugger.api.ui.actions.Resume_Action\");\n      DebugRunMenu_ActionGroup.this.addAction(\"jetbrains.mps.debugger.api.ui.actions.Pause_Action\");\n      DebugRunMenu_ActionGroup.this.addAction(\"jetbrains.mps.debugger.api.ui.actions.EvaluateExpression_Action\");\n      DebugRunMenu_ActionGroup.this.addAction(\"jetbrains.mps.debugger.api.ui.actions.ExportThreads_Action\");\n      DebugRunMenu_ActionGroup.this.addSeparator();\n      DebugRunMenu_ActionGroup.this.addAction(\"jetbrains.mps.debugger.api.ui.actions.ToggleBreakpoint_Action\");\n      DebugRunMenu_ActionGroup.this.addAction(\"jetbrains.mps.debugger.api.ui.actions.ViewBreakpoints_Action\");\n    } catch (Throwable t) {\n      LOG.error(\"User group error\", t);\n    }\n  }","commit_id":"bf5d4400886f27760b9e64095743684af00aefe8","url":"https://github.com/JetBrains/MPS"},{"original_method":"private RunContentDescriptor createDescriptor() {\n    RunProfile profile = myEnvironment.getRunProfile();\n    ExecutionConsole console = myExecutionResult.getExecutionConsole();\n    String runnerType = (console instanceof ExecutionConsoleEx ?\n      JAVA_RUNNER + \".\" + ((ExecutionConsoleEx) console).getExecutionConsoleId() :\n      JAVA_RUNNER\n    );\n    RunnerLayoutUi ui = RunnerLayoutUi.Factory.getInstance(myProject).create(runnerType, myExecutor.getId(), profile.getName(), this);\n    if (ApplicationManager.getApplication().isUnitTestMode()) {\n      return createDescriptorInternal(ui, profile);\n    }\n    buildUi(ui, console);\n    DebuggerToolContentBuilder.MyRunContentDescriptor contentDescriptor = createDescriptorInternal(ui, profile);\n    ui.getOptions().setLeftToolbar(createActionToolbar(ui, contentDescriptor), ActionPlaces.UNKNOWN);\n    return contentDescriptor;\n  }","id":16992,"modified_method":"private RunContentDescriptor createDescriptor() {\n    RunProfile profile = myEnvironment.getRunProfile();\n    ExecutionConsole console = myExecutionResult.getExecutionConsole();\n    String runnerType = (console instanceof ExecutionConsoleEx ?\n      JAVA_RUNNER + \".\" + ((ExecutionConsoleEx) console).getExecutionConsoleId() :\n      JAVA_RUNNER\n    );\n    RunnerLayoutUi ui = RunnerLayoutUi.Factory.getInstance(myProject).create(runnerType, myExecutor.getId(), profile.getName(), this);\n    if (ApplicationManager.getApplication().isUnitTestMode()) {\n      return createDescriptorInternal(ui, profile);\n    }\n    buildUi(ui, console);\n    DebuggerToolContentBuilder.MyRunContentDescriptor contentDescriptor = createDescriptorInternal(ui, profile);\n    ui.getOptions().setLeftToolbar(createActionToolbar(ui, contentDescriptor), ActionPlaces.UNKNOWN);\n    // todo \n    ui.getOptions().setTopToolbar(new DefaultActionGroup(ActionManager.getInstance().getAction(\"jetbrains.mps.debugger.api.ui.actions.DebugStepsMenu_ActionGroup\")), ActionPlaces.UNKNOWN);\n    return contentDescriptor;\n  }","commit_id":"bf5d4400886f27760b9e64095743684af00aefe8","url":"https://github.com/JetBrains/MPS"},{"original_method":"public void adjustRegularGroups() {\n    insertGroupIntoAnother(DebugRunMenu_ActionGroup.ID, \"RunMenu\", null);\n  }","id":16993,"modified_method":"public void adjustRegularGroups() {\n    insertGroupIntoAnother(DebugRunMenu_ActionGroup.ID, \"RunMenu\", null);\n    insertGroupIntoAnother(DebugStepsMenu_ActionGroup.ID, DebugRunMenu_ActionGroup.ID, DebugRunMenu_ActionGroup.LABEL_ID_steps);\n  }","commit_id":"bf5d4400886f27760b9e64095743684af00aefe8","url":"https://github.com/JetBrains/MPS"},{"original_method":"public void createGroups() {\n    // actions w/o parameters \n    addAction(new EvaluateExpression_Action());\n    addAction(new ExportThreads_Action());\n    addAction(new Pause_Action());\n    addAction(new Resume_Action());\n    addAction(new StepInto_Action());\n    addAction(new StepOut_Action());\n    addAction(new StepOver_Action());\n    addAction(new ToggleBreakpoint_Action());\n    addAction(new ViewBreakpoints_Action());\n    // groups \n    addGroup(new DebugRunMenu_ActionGroup());\n    addGroup(new DebugTool_ActionGroup());\n  }","id":16994,"modified_method":"public void createGroups() {\n    // actions w/o parameters \n    addAction(new EvaluateExpression_Action());\n    addAction(new ExportThreads_Action());\n    addAction(new Pause_Action());\n    addAction(new Resume_Action());\n    addAction(new StepInto_Action());\n    addAction(new StepOut_Action());\n    addAction(new StepOver_Action());\n    addAction(new ToggleBreakpoint_Action());\n    addAction(new ViewBreakpoints_Action());\n    // groups \n    addGroup(new DebugRunMenu_ActionGroup());\n    addGroup(new DebugStepsMenu_ActionGroup());\n    addGroup(new DebugTool_ActionGroup());\n  }","commit_id":"bf5d4400886f27760b9e64095743684af00aefe8","url":"https://github.com/JetBrains/MPS"},{"original_method":"public void createGroups() {\n    // actions w/o parameters \n    addAction(new AddGeneralPurposeDevKitToLanguageModels_Action());\n    addAction(new AddLanguageDesingDevKitToLanguages_Action());\n    addAction(new AddLanguageImport_Action());\n    addAction(new AddMissingImports_Action());\n    addAction(new AddModelImportByRoot_Action());\n    addAction(new AddModelImport_Action());\n    addAction(new AddModuleToProject_Action());\n    addAction(new AddToNewFavoritesList_Action());\n    addAction(new AnalyzeClasspath_Action());\n    addAction(new CloneModel_Action());\n    addAction(new CloneRoot_Action());\n    addAction(new CollapseAll_Action());\n    addAction(new Collapse_Action());\n    addAction(new CopyModelName_Action());\n    addAction(new CopyModuleName_Action());\n    addAction(new CopyNodeName_Action());\n    addAction(new CopyNodeReference_Action());\n    addAction(new CopyNode_Action());\n    addAction(new CutNode_Action());\n    addAction(new DeleteFavoritesList_Action());\n    addAction(new DeleteModels_Action());\n    addAction(new DeleteModules_Action());\n    addAction(new DeleteNode_Action());\n    addAction(new DeletePropertyAction_Action());\n    addAction(new DeleteReferenceAction_Action());\n    addAction(new DumpKeyStrokes_Action());\n    addAction(new EditNodeExplicit_Action());\n    addAction(new EditNode_Action());\n    addAction(new ExpandAll_Action());\n    addAction(new ExpandNode_Action());\n    addAction(new Expand_Action());\n    addAction(new FastFindNodeUsages_Action());\n    addAction(new FindNext_Action());\n    addAction(new FindPrevious_Action());\n    addAction(new FindSpecificNodeUsages_Action());\n    addAction(new Find_Action());\n    addAction(new FixDependenciesEverywhere_Action());\n    addAction(new FixVirtualPackges_Action());\n    addAction(new FoldSelection_Action());\n    addAction(new GoByCurrentReference_Action());\n    addAction(new GoToNodeById_Action());\n    addAction(new HighlightInstances_Action());\n    addAction(new HighlightUsages_Action());\n    addAction(new InstallIDEAPlugin_Action());\n    addAction(new LoadNonStubModels_Action());\n    addAction(new MPSProjectPaths_Action());\n    addAction(new ModelPropertiesWOShortcut_Action());\n    addAction(new ModelProperties_Action());\n    addAction(new MoveFileOrDirectory_Action());\n    addAction(new NewDirectory_Action());\n    addAction(new NewFile_Action());\n    addAction(new NewModel_Action());\n    addAction(new NewRuntimeModule_Action());\n    addAction(new NewSubModel_Action());\n    addAction(new NewSubTestModel_Action());\n    addAction(new OptimizeImportsInGlobalScope_Action());\n    addAction(new OptimizeModelImports_Action());\n    addAction(new OptimizeModuleImports_Action());\n    addAction(new OptimizeProjectImports_Action());\n    addAction(new PasteNode_Action());\n    addAction(new QuickCreate_Action());\n    addAction(new ReloadAll_Action());\n    addAction(new ReloadStubs_Action());\n    addAction(new RemoveAllBookmarks_Action());\n    addAction(new RemoveBootstrapLanguagesDevKitFromLanguageModels_Action());\n    addAction(new RemoveFromFavorites_Action());\n    addAction(new RemoveLanguageDesignDevKitFromModels_Action());\n    addAction(new RemoveModuleFromProject_Action());\n    addAction(new RemoveTransientModels_Action());\n    addAction(new RenameAspects_Action());\n    addAction(new RenameFavoritesList_Action());\n    addAction(new RenameFileOrDirectory_Action());\n    addAction(new RenameModel_Action());\n    addAction(new RenameNamespace_Action());\n    addAction(new RenamePackage_Action());\n    addAction(new RenameSolution_Action());\n    addAction(new RevertMemoryChanges_Action());\n    addAction(new SaveModel_Action());\n    addAction(new SetBookmarkNoNumber_Action());\n    addAction(new SetModuleFolder_Action());\n    addAction(new SetNodePackage_Action());\n    addAction(new ShowBookmarksDialog_Action());\n    addAction(new ShowBookmarks_Action());\n    addAction(new ShowClassInHierarchy_Action());\n    addAction(new ShowConceptInHierarchy_Action());\n    addAction(new ShowErrorMessage_Action());\n    addAction(new ShowImplementations_Action());\n    addAction(new ShowInProject_Action());\n    addAction(new ShowModuleDependencies_Action());\n    addAction(new ShowNodeInInspector_Action());\n    addAction(new ShowNodeInfo_Action());\n    addAction(new ShowParameters_Action());\n    addAction(new ShowReferencesToMissingStuff_Action());\n    addAction(new SolutionProperties_Action());\n    addAction(new UpgradeModelPersistenceGlobally_Action());\n    addAction(new UpgradeModelPersistenceInModel_Action());\n    addAction(new UpgradeModelPersistenceInModule_Action());\n    addAction(new UpgradeModelPersistenceInProject_Action());\n    addAction(new UpgradeModulePersistenceGlobally_Action());\n    // groups \n    addGroup(new AbstractFileActions_ActionGroup());\n    addGroup(new AddToFavoritesGroup_ActionGroup());\n    addGroup(new Bookmarks_ActionGroup());\n    addGroup(new Build_ActionGroup());\n    addGroup(new Code_ActionGroup());\n    addGroup(new CreateRootNode_ActionGroup());\n    addGroup(new DevkitActions_ActionGroup());\n    addGroup(new Edit_ActionGroup());\n    addGroup(new EditorInternal_ActionGroup());\n    addGroup(new EditorLeftPanelMenu_ActionGroup());\n    addGroup(new EditorPopup_ActionGroup());\n    addGroup(new EditorTabActions_ActionGroup());\n    addGroup(new FavoritesPopupWrapper_ActionGroup());\n    addGroup(new FavoritesPopup_ActionGroup());\n    addGroup(new Favorites_ActionGroup());\n    addGroup(new FileActions_ActionGroup());\n    addGroup(new FileSystemNewActions_ActionGroup());\n    addGroup(new FolderActions_ActionGroup());\n    addGroup(new Folding_ActionGroup());\n    addGroup(new Generate_ActionGroup());\n    addGroup(new GeneratorActions_ActionGroup());\n    addGroup(new GeneratorNewActions_ActionGroup());\n    addGroup(new GoByReference_ActionGroup());\n    addGroup(new Goto_ActionGroup());\n    addGroup(new JUnitTestCaseActions_ActionGroup());\n    addGroup(new JUnitTestMethodActions_ActionGroup());\n    addGroup(new LanguageActions_ActionGroup());\n    addGroup(new LanguageNewActions_ActionGroup());\n    addGroup(new ModelActionsInternal_ActionGroup());\n    addGroup(new ModelActions_ActionGroup());\n    addGroup(new ModelNewActions_ActionGroup());\n    addGroup(new ModelRefactoring_ActionGroup());\n    addGroup(new ModuleActions_ActionGroup());\n    addGroup(new ModulePropertiesGroup_ActionGroup());\n    addGroup(new NamespaceActions_ActionGroup());\n    addGroup(new NamespaceInternalActions_ActionGroup());\n    addGroup(new NamespaceMakeActions_ActionGroup());\n    addGroup(new NodeActionsInternal_ActionGroup());\n    addGroup(new NodeActions_ActionGroup());\n    addGroup(new PackageActions_ActionGroup());\n    addGroup(new PackageNewActions_ActionGroup());\n    addGroup(new ProjectActions_ActionGroup());\n    addGroup(new ProjectNewActions_ActionGroup());\n    addGroup(new PropertyNodeActions_ActionGroup());\n    addGroup(new ReferenceNodeActions_ActionGroup());\n    addGroup(new RuntimeFolderActions_ActionGroup());\n    addGroup(new Search_ActionGroup());\n    addGroup(new SolutionActions_ActionGroup());\n    addGroup(new SolutionNewActions_ActionGroup());\n    addGroup(new SolutionRefactoring_ActionGroup());\n    addGroup(new ToolsInternal_ActionGroup());\n    addGroup(new ToolsUpgrade_ActionGroup());\n    addGroup(new Tools_ActionGroup());\n    addGroup(new TransientModulesActions_ActionGroup());\n  }","id":16995,"modified_method":"public void createGroups() {\n    // actions w/o parameters \n    addAction(new AddGeneralPurposeDevKitToLanguageModels_Action());\n    addAction(new AddLanguageDesingDevKitToLanguages_Action());\n    addAction(new AddLanguageImport_Action());\n    addAction(new AddMissingImports_Action());\n    addAction(new AddModelImportByRoot_Action());\n    addAction(new AddModelImport_Action());\n    addAction(new AddModuleToProject_Action());\n    addAction(new AddToNewFavoritesList_Action());\n    addAction(new AnalyzeClasspath_Action());\n    addAction(new CloneModel_Action());\n    addAction(new CloneRoot_Action());\n    addAction(new CollapseAll_Action());\n    addAction(new Collapse_Action());\n    addAction(new CopyModelName_Action());\n    addAction(new CopyModuleName_Action());\n    addAction(new CopyNodeName_Action());\n    addAction(new CopyNodeReference_Action());\n    addAction(new CopyNode_Action());\n    addAction(new CutNode_Action());\n    addAction(new DeleteFavoritesList_Action());\n    addAction(new DeleteModels_Action());\n    addAction(new DeleteModules_Action());\n    addAction(new DeleteNode_Action());\n    addAction(new DeletePropertyAction_Action());\n    addAction(new DeleteReferenceAction_Action());\n    addAction(new DumpKeyStrokes_Action());\n    addAction(new EditNodeExplicit_Action());\n    addAction(new EditNode_Action());\n    addAction(new ExpandAll_Action());\n    addAction(new ExpandNode_Action());\n    addAction(new Expand_Action());\n    addAction(new FastFindNodeUsages_Action());\n    addAction(new FindNext_Action());\n    addAction(new FindPrevious_Action());\n    addAction(new FindSpecificNodeUsages_Action());\n    addAction(new Find_Action());\n    addAction(new FixDependenciesEverywhere_Action());\n    addAction(new FixVirtualPackges_Action());\n    addAction(new FoldSelection_Action());\n    addAction(new GoByCurrentReference_Action());\n    addAction(new GoToNodeById_Action());\n    addAction(new HighlightInstances_Action());\n    addAction(new HighlightUsages_Action());\n    addAction(new LoadNonStubModels_Action());\n    addAction(new MPSProjectPaths_Action());\n    addAction(new ModelPropertiesWOShortcut_Action());\n    addAction(new ModelProperties_Action());\n    addAction(new MoveFileOrDirectory_Action());\n    addAction(new NewDirectory_Action());\n    addAction(new NewFile_Action());\n    addAction(new NewModel_Action());\n    addAction(new NewRuntimeModule_Action());\n    addAction(new NewSubModel_Action());\n    addAction(new NewSubTestModel_Action());\n    addAction(new OptimizeImportsInGlobalScope_Action());\n    addAction(new OptimizeModelImports_Action());\n    addAction(new OptimizeModuleImports_Action());\n    addAction(new OptimizeProjectImports_Action());\n    addAction(new PasteNode_Action());\n    addAction(new QuickCreate_Action());\n    addAction(new RemoveAllBookmarks_Action());\n    addAction(new RemoveBootstrapLanguagesDevKitFromLanguageModels_Action());\n    addAction(new RemoveFromFavorites_Action());\n    addAction(new RemoveLanguageDesignDevKitFromModels_Action());\n    addAction(new RemoveModuleFromProject_Action());\n    addAction(new RemoveTransientModels_Action());\n    addAction(new RenameFavoritesList_Action());\n    addAction(new RenameFileOrDirectory_Action());\n    addAction(new RenameModel_Action());\n    addAction(new RenameNamespace_Action());\n    addAction(new RenamePackage_Action());\n    addAction(new RenameSolution_Action());\n    addAction(new RevertMemoryChanges_Action());\n    addAction(new SaveModel_Action());\n    addAction(new SetBookmarkNoNumber_Action());\n    addAction(new SetModuleFolder_Action());\n    addAction(new SetNodePackage_Action());\n    addAction(new ShowBookmarksDialog_Action());\n    addAction(new ShowBookmarks_Action());\n    addAction(new ShowClassInHierarchy_Action());\n    addAction(new ShowConceptInHierarchy_Action());\n    addAction(new ShowErrorMessage_Action());\n    addAction(new ShowImplementations_Action());\n    addAction(new ShowInProject_Action());\n    addAction(new ShowModuleDependencies_Action());\n    addAction(new ShowNodeInInspector_Action());\n    addAction(new ShowNodeInfo_Action());\n    addAction(new ShowParameters_Action());\n    addAction(new ShowReferencesToMissingStuff_Action());\n    addAction(new SolutionProperties_Action());\n    addAction(new UpgradeModelPersistenceGlobally_Action());\n    addAction(new UpgradeModelPersistenceInModel_Action());\n    addAction(new UpgradeModelPersistenceInModule_Action());\n    addAction(new UpgradeModelPersistenceInProject_Action());\n    addAction(new UpgradeModulePersistenceGlobally_Action());\n    // groups \n    addGroup(new AbstractFileActions_ActionGroup());\n    addGroup(new AddToFavoritesGroup_ActionGroup());\n    addGroup(new Bookmarks_ActionGroup());\n    addGroup(new Build_ActionGroup());\n    addGroup(new Code_ActionGroup());\n    addGroup(new CreateRootNode_ActionGroup());\n    addGroup(new DevkitActions_ActionGroup());\n    addGroup(new Edit_ActionGroup());\n    addGroup(new EditorInternal_ActionGroup());\n    addGroup(new EditorLeftPanelMenu_ActionGroup());\n    addGroup(new EditorPopup_ActionGroup());\n    addGroup(new EditorTabActions_ActionGroup());\n    addGroup(new FavoritesPopupWrapper_ActionGroup());\n    addGroup(new FavoritesPopup_ActionGroup());\n    addGroup(new Favorites_ActionGroup());\n    addGroup(new FileActions_ActionGroup());\n    addGroup(new FileSystemNewActions_ActionGroup());\n    addGroup(new FolderActions_ActionGroup());\n    addGroup(new Folding_ActionGroup());\n    addGroup(new Generate_ActionGroup());\n    addGroup(new GeneratorActions_ActionGroup());\n    addGroup(new GeneratorNewActions_ActionGroup());\n    addGroup(new GoByReference_ActionGroup());\n    addGroup(new Goto_ActionGroup());\n    addGroup(new JUnitTestCaseActions_ActionGroup());\n    addGroup(new JUnitTestMethodActions_ActionGroup());\n    addGroup(new LanguageActions_ActionGroup());\n    addGroup(new LanguageNewActions_ActionGroup());\n    addGroup(new ModelActionsInternal_ActionGroup());\n    addGroup(new ModelActions_ActionGroup());\n    addGroup(new ModelNewActions_ActionGroup());\n    addGroup(new ModelRefactoring_ActionGroup());\n    addGroup(new ModuleActions_ActionGroup());\n    addGroup(new ModulePropertiesGroup_ActionGroup());\n    addGroup(new NamespaceActions_ActionGroup());\n    addGroup(new NamespaceInternalActions_ActionGroup());\n    addGroup(new NamespaceMakeActions_ActionGroup());\n    addGroup(new NodeActionsInternal_ActionGroup());\n    addGroup(new NodeActions_ActionGroup());\n    addGroup(new PackageActions_ActionGroup());\n    addGroup(new PackageNewActions_ActionGroup());\n    addGroup(new ProjectActions_ActionGroup());\n    addGroup(new ProjectNewActions_ActionGroup());\n    addGroup(new PropertyNodeActions_ActionGroup());\n    addGroup(new ReferenceNodeActions_ActionGroup());\n    addGroup(new RuntimeFolderActions_ActionGroup());\n    addGroup(new Search_ActionGroup());\n    addGroup(new SolutionActions_ActionGroup());\n    addGroup(new SolutionNewActions_ActionGroup());\n    addGroup(new SolutionRefactoring_ActionGroup());\n    addGroup(new ToolsInternal_ActionGroup());\n    addGroup(new ToolsUpgrade_ActionGroup());\n    addGroup(new Tools_ActionGroup());\n    addGroup(new TransientModulesActions_ActionGroup());\n  }","commit_id":"4e52e44cfd35704ae02f49a50ff1d8d015aab934","url":"https://github.com/JetBrains/MPS"},{"original_method":"public void createGroups() {\n    // actions w/o parameters \n    addAction(new AddAccessoryModel_Action());\n    addAction(new CellProperties_Action());\n    addAction(new DeleteGenerator_Action());\n    addAction(new DevkitProperties_Action());\n    addAction(new GenerationIntentions_Action());\n    addAction(new GeneratorProperties_Action());\n    addAction(new GoToConceptDeclaration_Action());\n    addAction(new GoToEditorDeclaration_Action());\n    addAction(new GoToRules_Action());\n    addAction(new GoToUsageInMappingConfig_Action());\n    addAction(new HighlightCellDependencies_Action());\n    addAction(new LanguageHierarchy_Action());\n    addAction(new LanguagePaths_Action());\n    addAction(new LanguageProperties_Action());\n    addAction(new NewAccessoryModel_Action());\n    addAction(new NewDevKit_Action());\n    addAction(new NewGenerator_Action());\n    addAction(new PrintNodeID_Action());\n    addAction(new RenameLanguage_Action());\n    addAction(new ShowCellInExplorer_Action());\n    addAction(new ShowGenerationTrace_Action());\n    addAction(new ShowGenerationTraceback_Action());\n    addAction(new ShowModelRepository_Action());\n    addAction(new ShowModuleRepository_Action());\n    addAction(new ShowNodeInExplorer_Action());\n    addAction(new SurroundWithIntentions_Action());\n    addAction(new TestNodePath_Action());\n    // groups \n    addGroup(new AccessoriesGroupActions_ActionGroup());\n    addGroup(new DevkitActionsEx_ActionGroup());\n    addGroup(new EditorInternalEx_ActionGroup());\n    addGroup(new GenerateEditorPopup_ActionGroup());\n    addGroup(new GenerateGeneratorPopup_ActionGroup());\n    addGroup(new GenerationIntentions_ActionGroup());\n    addGroup(new GenerationTraceActions_ActionGroup());\n    addGroup(new GeneratorActions_Delete_ActionGroup());\n    addGroup(new GeneratorActions_Properties_ActionGroup());\n    addGroup(new GotoConceptAspect_ActionGroup());\n    addGroup(new GotoModuleEx_ActionGroup());\n    addGroup(new LanguageActionsEx_ActionGroup());\n    addGroup(new LanguageNewActionsEx_ActionGroup());\n    addGroup(new LanguageNewCustomPartActions_ActionGroup());\n    addGroup(new LanguageNewGenerator_ActionGroup());\n    addGroup(new LanguageRefactoring_ActionGroup());\n    addGroup(new ModulePropertiesGroupEx_ActionGroup());\n    addGroup(new ProjectNewActionsEx_ActionGroup());\n    addGroup(new RepositoryToolsGroup_ActionGroup());\n    addGroup(new ShowNodeIn_ActionGroup());\n    addGroup(new SurroundWithIntentions_ActionGroup());\n  }","id":16996,"modified_method":"public void createGroups() {\n    // actions w/o parameters \n    addAction(new AddAccessoryModel_Action());\n    addAction(new CellProperties_Action());\n    addAction(new DeleteGenerator_Action());\n    addAction(new DevkitProperties_Action());\n    addAction(new GenerationIntentions_Action());\n    addAction(new GeneratorProperties_Action());\n    addAction(new GoToConceptDeclaration_Action());\n    addAction(new GoToEditorDeclaration_Action());\n    addAction(new GoToRules_Action());\n    addAction(new GoToUsageInMappingConfig_Action());\n    addAction(new HighlightCellDependencies_Action());\n    addAction(new InstallIDEAPlugin_Action());\n    addAction(new LanguageHierarchy_Action());\n    addAction(new LanguagePaths_Action());\n    addAction(new LanguageProperties_Action());\n    addAction(new NewAccessoryModel_Action());\n    addAction(new NewDevKit_Action());\n    addAction(new NewGenerator_Action());\n    addAction(new PrintNodeID_Action());\n    addAction(new ReloadAll_Action());\n    addAction(new ReloadStubs_Action());\n    addAction(new RenameAspects_Action());\n    addAction(new RenameLanguage_Action());\n    addAction(new ShowCellInExplorer_Action());\n    addAction(new ShowGenerationTrace_Action());\n    addAction(new ShowGenerationTraceback_Action());\n    addAction(new ShowModelRepository_Action());\n    addAction(new ShowModuleRepository_Action());\n    addAction(new ShowNodeInExplorer_Action());\n    addAction(new SurroundWithIntentions_Action());\n    addAction(new TestNodePath_Action());\n    // groups \n    addGroup(new AccessoriesGroupActions_ActionGroup());\n    addGroup(new DevKitTools_ActionGroup());\n    addGroup(new DevkitActionsEx_ActionGroup());\n    addGroup(new EditorInternalEx_ActionGroup());\n    addGroup(new GenerateEditorPopup_ActionGroup());\n    addGroup(new GenerateGeneratorPopup_ActionGroup());\n    addGroup(new GenerationIntentions_ActionGroup());\n    addGroup(new GenerationTraceActions_ActionGroup());\n    addGroup(new GeneratorActions_Delete_ActionGroup());\n    addGroup(new GeneratorActions_Properties_ActionGroup());\n    addGroup(new GotoConceptAspect_ActionGroup());\n    addGroup(new GotoModuleEx_ActionGroup());\n    addGroup(new LanguageActionsEx_ActionGroup());\n    addGroup(new LanguageNewActionsEx_ActionGroup());\n    addGroup(new LanguageNewCustomPartActions_ActionGroup());\n    addGroup(new LanguageNewGenerator_ActionGroup());\n    addGroup(new LanguageRefactoring_ActionGroup());\n    addGroup(new ModulePropertiesGroupEx_ActionGroup());\n    addGroup(new ProjectNewActionsEx_ActionGroup());\n    addGroup(new RepositoryToolsGroup_ActionGroup());\n    addGroup(new ShowNodeIn_ActionGroup());\n    addGroup(new SurroundWithIntentions_ActionGroup());\n  }","commit_id":"4e52e44cfd35704ae02f49a50ff1d8d015aab934","url":"https://github.com/JetBrains/MPS"},{"original_method":"public void adjustRegularGroups() {\n    insertGroupIntoAnother(GenerateGeneratorPopup_ActionGroup.ID, GeneratorActions_ActionGroup.ID, GeneratorActions_ActionGroup.LABEL_ID_generate);\n    insertGroupIntoAnother(GenerateEditorPopup_ActionGroup.ID, EditorPopup_ActionGroup.ID, EditorPopup_ActionGroup.LABEL_ID_gotoConceptAspects);\n    insertGroupIntoAnother(ProjectNewActionsEx_ActionGroup.ID, ProjectNewActions_ActionGroup.ID, ProjectNewActions_ActionGroup.LABEL_ID_end);\n    insertGroupIntoAnother(LanguageRefactoring_ActionGroup.ID, LanguageActions_ActionGroup.ID, LanguageActions_ActionGroup.LABEL_ID_refactoring);\n    insertGroupIntoAnother(RepositoryToolsGroup_ActionGroup.ID, Tools_ActionGroup.ID, Tools_ActionGroup.LABEL_ID_customTools);\n    insertGroupIntoAnother(GenerationTraceActions_ActionGroup.ID, EditorPopup_ActionGroup.ID, EditorPopup_ActionGroup.LABEL_ID_gentrace);\n    insertGroupIntoAnother(GenerationTraceActions_ActionGroup.ID, NodeActions_ActionGroup.ID, NodeActions_ActionGroup.LABEL_ID_gentrace);\n    insertGroupIntoAnother(LanguageNewGenerator_ActionGroup.ID, LanguageNewActions_ActionGroup.ID, LanguageNewActions_ActionGroup.LABEL_ID_newSubModule);\n    insertGroupIntoAnother(LanguageNewActionsEx_ActionGroup.ID, LanguageNewActions_ActionGroup.ID, LanguageNewActions_ActionGroup.LABEL_ID_newModel);\n    insertGroupIntoAnother(GeneratorActions_Delete_ActionGroup.ID, GeneratorActions_ActionGroup.ID, GeneratorActions_ActionGroup.LABEL_ID_delete);\n    insertGroupIntoAnother(GeneratorActions_Properties_ActionGroup.ID, GeneratorActions_ActionGroup.ID, GeneratorActions_ActionGroup.LABEL_ID_properties);\n    insertGroupIntoAnother(ModulePropertiesGroupEx_ActionGroup.ID, ModulePropertiesGroup_ActionGroup.ID, ModulePropertiesGroup_ActionGroup.LABEL_ID_extensions);\n    insertGroupIntoAnother(GotoConceptAspect_ActionGroup.ID, EditorPopup_ActionGroup.ID, EditorPopup_ActionGroup.LABEL_ID_gotoConceptAspects);\n    insertGroupIntoAnother(GotoConceptAspect_ActionGroup.ID, EditorTabActions_ActionGroup.ID, EditorTabActions_ActionGroup.LABEL_ID_gotoConceptAspects);\n    insertGroupIntoAnother(GotoConceptAspect_ActionGroup.ID, Goto_ActionGroup.ID, Goto_ActionGroup.LABEL_ID_gotoConceptAspects);\n    insertGroupIntoAnother(GotoConceptAspect_ActionGroup.ID, NodeActions_ActionGroup.ID, NodeActions_ActionGroup.LABEL_ID_gotoConceptAspects);\n    insertGroupIntoAnother(DevkitActionsEx_ActionGroup.ID, DevkitActions_ActionGroup.ID, DevkitActions_ActionGroup.LABEL_ID_properties);\n    insertGroupIntoAnother(LanguageActionsEx_ActionGroup.ID, LanguageActions_ActionGroup.ID, LanguageActions_ActionGroup.LABEL_ID_properties);\n    insertGroupIntoAnother(EditorInternalEx_ActionGroup.ID, EditorInternal_ActionGroup.ID, EditorInternal_ActionGroup.LABEL_ID_workbench);\n    insertGroupIntoAnother(LanguageNewCustomPartActions_ActionGroup.ID, LanguageNewActions_ActionGroup.ID, LanguageNewActions_ActionGroup.LABEL_ID_newAspect);\n    insertGroupIntoAnother(GotoModuleEx_ActionGroup.ID, Goto_ActionGroup.ID, Goto_ActionGroup.LABEL_ID_gotoModules);\n    insertGroupIntoAnother(ShowNodeIn_ActionGroup.ID, EditorPopup_ActionGroup.ID, EditorPopup_ActionGroup.LABEL_ID_showIn);\n    insertGroupIntoAnother(ShowNodeIn_ActionGroup.ID, EditorTabActions_ActionGroup.ID, EditorTabActions_ActionGroup.LABEL_ID_showIn);\n    insertGroupIntoAnother(ShowNodeIn_ActionGroup.ID, NodeActions_ActionGroup.ID, NodeActions_ActionGroup.LABEL_ID_showIn);\n  }","id":16997,"modified_method":"public void adjustRegularGroups() {\n    insertGroupIntoAnother(GenerateGeneratorPopup_ActionGroup.ID, GeneratorActions_ActionGroup.ID, GeneratorActions_ActionGroup.LABEL_ID_generate);\n    insertGroupIntoAnother(GenerateEditorPopup_ActionGroup.ID, EditorPopup_ActionGroup.ID, EditorPopup_ActionGroup.LABEL_ID_gotoConceptAspects);\n    insertGroupIntoAnother(ProjectNewActionsEx_ActionGroup.ID, ProjectNewActions_ActionGroup.ID, ProjectNewActions_ActionGroup.LABEL_ID_end);\n    insertGroupIntoAnother(LanguageRefactoring_ActionGroup.ID, LanguageActions_ActionGroup.ID, LanguageActions_ActionGroup.LABEL_ID_refactoring);\n    insertGroupIntoAnother(RepositoryToolsGroup_ActionGroup.ID, Tools_ActionGroup.ID, Tools_ActionGroup.LABEL_ID_customTools);\n    insertGroupIntoAnother(GenerationTraceActions_ActionGroup.ID, EditorPopup_ActionGroup.ID, EditorPopup_ActionGroup.LABEL_ID_gentrace);\n    insertGroupIntoAnother(GenerationTraceActions_ActionGroup.ID, NodeActions_ActionGroup.ID, NodeActions_ActionGroup.LABEL_ID_gentrace);\n    insertGroupIntoAnother(LanguageNewGenerator_ActionGroup.ID, LanguageNewActions_ActionGroup.ID, LanguageNewActions_ActionGroup.LABEL_ID_newSubModule);\n    insertGroupIntoAnother(LanguageNewActionsEx_ActionGroup.ID, LanguageNewActions_ActionGroup.ID, LanguageNewActions_ActionGroup.LABEL_ID_newModel);\n    insertGroupIntoAnother(GeneratorActions_Delete_ActionGroup.ID, GeneratorActions_ActionGroup.ID, GeneratorActions_ActionGroup.LABEL_ID_delete);\n    insertGroupIntoAnother(GeneratorActions_Properties_ActionGroup.ID, GeneratorActions_ActionGroup.ID, GeneratorActions_ActionGroup.LABEL_ID_properties);\n    insertGroupIntoAnother(ModulePropertiesGroupEx_ActionGroup.ID, ModulePropertiesGroup_ActionGroup.ID, ModulePropertiesGroup_ActionGroup.LABEL_ID_extensions);\n    insertGroupIntoAnother(GotoConceptAspect_ActionGroup.ID, EditorPopup_ActionGroup.ID, EditorPopup_ActionGroup.LABEL_ID_gotoConceptAspects);\n    insertGroupIntoAnother(GotoConceptAspect_ActionGroup.ID, EditorTabActions_ActionGroup.ID, EditorTabActions_ActionGroup.LABEL_ID_gotoConceptAspects);\n    insertGroupIntoAnother(GotoConceptAspect_ActionGroup.ID, Goto_ActionGroup.ID, Goto_ActionGroup.LABEL_ID_gotoConceptAspects);\n    insertGroupIntoAnother(GotoConceptAspect_ActionGroup.ID, NodeActions_ActionGroup.ID, NodeActions_ActionGroup.LABEL_ID_gotoConceptAspects);\n    insertGroupIntoAnother(DevkitActionsEx_ActionGroup.ID, DevkitActions_ActionGroup.ID, DevkitActions_ActionGroup.LABEL_ID_properties);\n    insertGroupIntoAnother(LanguageActionsEx_ActionGroup.ID, LanguageActions_ActionGroup.ID, LanguageActions_ActionGroup.LABEL_ID_properties);\n    insertGroupIntoAnother(DevKitTools_ActionGroup.ID, Tools_ActionGroup.ID, Tools_ActionGroup.LABEL_ID_devkitTools);\n    insertGroupIntoAnother(EditorInternalEx_ActionGroup.ID, EditorInternal_ActionGroup.ID, EditorInternal_ActionGroup.LABEL_ID_workbench);\n    insertGroupIntoAnother(LanguageNewCustomPartActions_ActionGroup.ID, LanguageNewActions_ActionGroup.ID, LanguageNewActions_ActionGroup.LABEL_ID_newAspect);\n    insertGroupIntoAnother(GotoModuleEx_ActionGroup.ID, Goto_ActionGroup.ID, Goto_ActionGroup.LABEL_ID_gotoModules);\n    insertGroupIntoAnother(ShowNodeIn_ActionGroup.ID, EditorPopup_ActionGroup.ID, EditorPopup_ActionGroup.LABEL_ID_showIn);\n    insertGroupIntoAnother(ShowNodeIn_ActionGroup.ID, EditorTabActions_ActionGroup.ID, EditorTabActions_ActionGroup.LABEL_ID_showIn);\n    insertGroupIntoAnother(ShowNodeIn_ActionGroup.ID, NodeActions_ActionGroup.ID, NodeActions_ActionGroup.LABEL_ID_showIn);\n  }","commit_id":"4e52e44cfd35704ae02f49a50ff1d8d015aab934","url":"https://github.com/JetBrains/MPS"},{"original_method":"public Tools_ActionGroup() {\n    super(\"Tools\", ID);\n    this.setIsInternal(false);\n    this.setPopup(false);\n    try {\n      Tools_ActionGroup.this.addAction(\"jetbrains.mps.ide.actions.ShowBookmarks_Action\");\n      {\n        LabelledAnchor action = new LabelledAnchor(Tools_ActionGroup.LABEL_ID_customTools);\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        manager.registerAction(action.getId(), action, PluginId.getId(\"jetbrains.mps.ide\"));\n        Tools_ActionGroup.this.addAction(action);\n      }\n      Tools_ActionGroup.this.addSeparator();\n      Tools_ActionGroup.this.addAction(\"jetbrains.mps.ide.actions.ReloadAll_Action\");\n      Tools_ActionGroup.this.addAction(\"jetbrains.mps.ide.actions.ReloadStubs_Action\");\n      Tools_ActionGroup.this.addSeparator();\n      Tools_ActionGroup.this.addAction(\"jetbrains.mps.ide.actions.InstallIDEAPlugin_Action\");\n      Tools_ActionGroup.this.addAction(\"jetbrains.mps.ide.actions.RenameAspects_Action\");\n      Tools_ActionGroup.this.addSeparator();\n      {\n        GeneratedActionGroup newAction = new ToolsUpgrade_ActionGroup();\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        AnAction oldAction = manager.getAction(newAction.getId());\n        if (oldAction == null) {\n          manager.registerAction(newAction.getId(), newAction, PluginId.getId(\"jetbrains.mps.ide\"));\n          oldAction = newAction;\n        }\n        Tools_ActionGroup.this.addAction(oldAction);\n      }\n      {\n        LabelledAnchor action = new LabelledAnchor(Tools_ActionGroup.LABEL_ID_internal);\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        manager.registerAction(action.getId(), action, PluginId.getId(\"jetbrains.mps.ide\"));\n        Tools_ActionGroup.this.addAction(action);\n      }\n    } catch (Throwable t) {\n      LOG.error(\"User group error\", t);\n    }\n  }","id":16998,"modified_method":"public Tools_ActionGroup() {\n    super(\"Tools\", ID);\n    this.setIsInternal(false);\n    this.setPopup(false);\n    try {\n      Tools_ActionGroup.this.addAction(\"jetbrains.mps.ide.actions.ShowBookmarks_Action\");\n      {\n        LabelledAnchor action = new LabelledAnchor(Tools_ActionGroup.LABEL_ID_customTools);\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        manager.registerAction(action.getId(), action, PluginId.getId(\"jetbrains.mps.ide\"));\n        Tools_ActionGroup.this.addAction(action);\n      }\n      Tools_ActionGroup.this.addSeparator();\n      {\n        LabelledAnchor action = new LabelledAnchor(Tools_ActionGroup.LABEL_ID_devkitTools);\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        manager.registerAction(action.getId(), action, PluginId.getId(\"jetbrains.mps.ide\"));\n        Tools_ActionGroup.this.addAction(action);\n      }\n      Tools_ActionGroup.this.addSeparator();\n      {\n        GeneratedActionGroup newAction = new ToolsUpgrade_ActionGroup();\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        AnAction oldAction = manager.getAction(newAction.getId());\n        if (oldAction == null) {\n          manager.registerAction(newAction.getId(), newAction, PluginId.getId(\"jetbrains.mps.ide\"));\n          oldAction = newAction;\n        }\n        Tools_ActionGroup.this.addAction(oldAction);\n      }\n      {\n        LabelledAnchor action = new LabelledAnchor(Tools_ActionGroup.LABEL_ID_internal);\n        ActionManagerEx manager = ActionManagerEx.getInstanceEx();\n        manager.registerAction(action.getId(), action, PluginId.getId(\"jetbrains.mps.ide\"));\n        Tools_ActionGroup.this.addAction(action);\n      }\n    } catch (Throwable t) {\n      LOG.error(\"User group error\", t);\n    }\n  }","commit_id":"4e52e44cfd35704ae02f49a50ff1d8d015aab934","url":"https://github.com/JetBrains/MPS"},{"original_method":"public void createGroups() {\n    // actions w/o parameters \n    addAction(new AddGeneralPurposeDevKitToLanguageModels_Action());\n    addAction(new AddLanguageDesingDevKitToLanguages_Action());\n    addAction(new AddLanguageImport_Action());\n    addAction(new AddMissingImports_Action());\n    addAction(new AddModelImportByRoot_Action());\n    addAction(new AddModelImport_Action());\n    addAction(new AddModuleToProject_Action());\n    addAction(new AddToNewFavoritesList_Action());\n    addAction(new AnalyzeClasspath_Action());\n    addAction(new CheckModel_Action());\n    addAction(new CheckProject_Action());\n    addAction(new CleanModule_Action());\n    addAction(new CloneModel_Action());\n    addAction(new CloneRoot_Action());\n    addAction(new CollapseAll_Action());\n    addAction(new Collapse_Action());\n    addAction(new CopyModelName_Action());\n    addAction(new CopyModuleName_Action());\n    addAction(new CopyNodeName_Action());\n    addAction(new CopyNodeReference_Action());\n    addAction(new CopyNode_Action());\n    addAction(new CutNode_Action());\n    addAction(new DeleteFavoritesList_Action());\n    addAction(new DeleteModels_Action());\n    addAction(new DeleteModules_Action());\n    addAction(new DeleteNode_Action());\n    addAction(new DeletePropertyAction_Action());\n    addAction(new DeleteReferenceAction_Action());\n    addAction(new DumpKeyStrokes_Action());\n    addAction(new EditNodeExplicit_Action());\n    addAction(new EditNode_Action());\n    addAction(new EvaluateExpression_Action());\n    addAction(new ExpandAll_Action());\n    addAction(new ExpandNode_Action());\n    addAction(new Expand_Action());\n    addAction(new ExportThreads_Action());\n    addAction(new FastFindNodeUsages_Action());\n    addAction(new FindNext_Action());\n    addAction(new FindPrevious_Action());\n    addAction(new FindSpecificNodeUsages_Action());\n    addAction(new Find_Action());\n    addAction(new FindlAllBrokenReferences_Action());\n    addAction(new FixDependenciesEverywhere_Action());\n    addAction(new FixVirtualPackges_Action());\n    addAction(new FoldSelection_Action());\n    addAction(new GenerateFiles_Action());\n    addAction(new GoByCurrentReference_Action());\n    addAction(new GoToNodeById_Action());\n    addAction(new HighlightInstances_Action());\n    addAction(new HighlightUsages_Action());\n    addAction(new InstallIDEAPlugin_Action());\n    addAction(new LoadNonStubModels_Action());\n    addAction(new MPSProjectPaths_Action());\n    addAction(new MakeModule_Action());\n    addAction(new ModelPropertiesWOShortcut_Action());\n    addAction(new ModelProperties_Action());\n    addAction(new MoveFileOrDirectory_Action());\n    addAction(new NewDirectory_Action());\n    addAction(new NewFile_Action());\n    addAction(new NewModel_Action());\n    addAction(new NewRuntimeModule_Action());\n    addAction(new NewSubModel_Action());\n    addAction(new NewSubTestModel_Action());\n    addAction(new OptimizeImportsInGlobalScope_Action());\n    addAction(new OptimizeModelImports_Action());\n    addAction(new OptimizeModuleImports_Action());\n    addAction(new OptimizeProjectImports_Action());\n    addAction(new Options_Action());\n    addAction(new PasteNode_Action());\n    addAction(new Pause_Action());\n    addAction(new QuickCreate_Action());\n    addAction(new RebuildModule_Action());\n    addAction(new ReloadAll_Action());\n    addAction(new ReloadStubs_Action());\n    addAction(new RemoveAllBookmarks_Action());\n    addAction(new RemoveBootstrapLanguagesDevKitFromLanguageModels_Action());\n    addAction(new RemoveFromFavorites_Action());\n    addAction(new RemoveLanguageDesignDevKitFromModels_Action());\n    addAction(new RemoveModuleFromProject_Action());\n    addAction(new RemoveTransientModels_Action());\n    addAction(new RenameAspects_Action());\n    addAction(new RenameFavoritesList_Action());\n    addAction(new RenameFileOrDirectory_Action());\n    addAction(new RenameModel_Action());\n    addAction(new RenameNamespace_Action());\n    addAction(new RenamePackage_Action());\n    addAction(new RenameSolution_Action());\n    addAction(new Resume_Action());\n    addAction(new RevertMemoryChanges_Action());\n    addAction(new SaveModel_Action());\n    addAction(new SetBookmarkNoNumber_Action());\n    addAction(new SetModuleFolder_Action());\n    addAction(new SetNodePackage_Action());\n    addAction(new ShowBookmarksDialog_Action());\n    addAction(new ShowBookmarks_Action());\n    addAction(new ShowClassInHierarchy_Action());\n    addAction(new ShowConceptInHierarchy_Action());\n    addAction(new ShowErrorMessage_Action());\n    addAction(new ShowImplementations_Action());\n    addAction(new ShowInProject_Action());\n    addAction(new ShowMappingsPartitioning_Action());\n    addAction(new ShowModelChecker_Action());\n    addAction(new ShowModelRepository_Action());\n    addAction(new ShowModuleDependencies_Action());\n    addAction(new ShowModuleRepository_Action());\n    addAction(new ShowNodeInExplorer_Action());\n    addAction(new ShowNodeInInspector_Action());\n    addAction(new ShowNodeInfo_Action());\n    addAction(new ShowParameters_Action());\n    addAction(new ShowReferencesToMissingStuff_Action());\n    addAction(new SolutionProperties_Action());\n    addAction(new StepInto_Action());\n    addAction(new StepOut_Action());\n    addAction(new StepOver_Action());\n    addAction(new ToggleBreakpoint_Action());\n    addAction(new UpgradeModelPersistenceGlobally_Action());\n    addAction(new UpgradeModelPersistenceInModel_Action());\n    addAction(new UpgradeModelPersistenceInModule_Action());\n    addAction(new UpgradeModelPersistenceInProject_Action());\n    addAction(new UpgradeModulePersistenceGlobally_Action());\n    addAction(new ViewBreakpoints_Action());\n    // groups \n    addGroup(new AbstractFileActions_ActionGroup());\n    addGroup(new AddToFavoritesGroup_ActionGroup());\n    addGroup(new Bookmarks_ActionGroup());\n    addGroup(new Breakpoints_ActionGroup());\n    addGroup(new Build_ActionGroup());\n    addGroup(new Code_ActionGroup());\n    addGroup(new CreateRootNode_ActionGroup());\n    addGroup(new DebugRunMenu_ActionGroup());\n    addGroup(new DebugTool_ActionGroup());\n    addGroup(new DevkitActions_ActionGroup());\n    addGroup(new Edit_ActionGroup());\n    addGroup(new EditorInternal_ActionGroup());\n    addGroup(new EditorLeftPanelMenu_ActionGroup());\n    addGroup(new EditorPopup_ActionGroup());\n    addGroup(new EditorTabActions_ActionGroup());\n    addGroup(new FavoritesPopupWrapper_ActionGroup());\n    addGroup(new FavoritesPopup_ActionGroup());\n    addGroup(new Favorites_ActionGroup());\n    addGroup(new FileActions_ActionGroup());\n    addGroup(new FileSystemNewActions_ActionGroup());\n    addGroup(new FolderActions_ActionGroup());\n    addGroup(new Folding_ActionGroup());\n    addGroup(new GenerateModelPopup_ActionGroup());\n    addGroup(new Generate_ActionGroup());\n    addGroup(new GeneratorActions_ActionGroup());\n    addGroup(new GeneratorNewActions_ActionGroup());\n    addGroup(new GoByReference_ActionGroup());\n    addGroup(new Goto_ActionGroup());\n    addGroup(new JUnitTestCaseActions_ActionGroup());\n    addGroup(new JUnitTestMethodActions_ActionGroup());\n    addGroup(new LanguageActions_ActionGroup());\n    addGroup(new LanguageNewActions_ActionGroup());\n    addGroup(new ModelActionsInternal_ActionGroup());\n    addGroup(new ModelActions_ActionGroup());\n    addGroup(new ModelNewActions_ActionGroup());\n    addGroup(new ModelRefactoring_ActionGroup());\n    addGroup(new ModuleActions_ActionGroup());\n    addGroup(new ModulePropertiesGroup_ActionGroup());\n    addGroup(new NamespaceActions_ActionGroup());\n    addGroup(new NamespaceInternalActions_ActionGroup());\n    addGroup(new NamespaceMakeActions_ActionGroup());\n    addGroup(new NodeActionsInternal_ActionGroup());\n    addGroup(new NodeActions_ActionGroup());\n    addGroup(new PackageActions_ActionGroup());\n    addGroup(new PackageNewActions_ActionGroup());\n    addGroup(new ProjectActions_ActionGroup());\n    addGroup(new ProjectNewActions_ActionGroup());\n    addGroup(new PropertyNodeActions_ActionGroup());\n    addGroup(new ReferenceNodeActions_ActionGroup());\n    addGroup(new RuntimeFolderActions_ActionGroup());\n    addGroup(new Search_ActionGroup());\n    addGroup(new SolutionActions_ActionGroup());\n    addGroup(new SolutionNewActions_ActionGroup());\n    addGroup(new SolutionRefactoring_ActionGroup());\n    addGroup(new ToolsInternal_ActionGroup());\n    addGroup(new ToolsUpgrade_ActionGroup());\n    addGroup(new Tools_ActionGroup());\n    addGroup(new TransientModulesActions_ActionGroup());\n  }","id":16999,"modified_method":"public void createGroups() {\n    // actions w/o parameters \n    addAction(new AddGeneralPurposeDevKitToLanguageModels_Action());\n    addAction(new AddLanguageDesingDevKitToLanguages_Action());\n    addAction(new AddLanguageImport_Action());\n    addAction(new AddMissingImports_Action());\n    addAction(new AddModelImportByRoot_Action());\n    addAction(new AddModelImport_Action());\n    addAction(new AddModuleToProject_Action());\n    addAction(new AddToNewFavoritesList_Action());\n    addAction(new AnalyzeClasspath_Action());\n    addAction(new CheckModel_Action());\n    addAction(new CheckProject_Action());\n    addAction(new CloneModel_Action());\n    addAction(new CloneRoot_Action());\n    addAction(new CollapseAll_Action());\n    addAction(new Collapse_Action());\n    addAction(new CopyModelName_Action());\n    addAction(new CopyModuleName_Action());\n    addAction(new CopyNodeName_Action());\n    addAction(new CopyNodeReference_Action());\n    addAction(new CopyNode_Action());\n    addAction(new CutNode_Action());\n    addAction(new DeleteFavoritesList_Action());\n    addAction(new DeleteModels_Action());\n    addAction(new DeleteModules_Action());\n    addAction(new DeleteNode_Action());\n    addAction(new DeletePropertyAction_Action());\n    addAction(new DeleteReferenceAction_Action());\n    addAction(new DumpKeyStrokes_Action());\n    addAction(new EditNodeExplicit_Action());\n    addAction(new EditNode_Action());\n    addAction(new EvaluateExpression_Action());\n    addAction(new ExpandAll_Action());\n    addAction(new ExpandNode_Action());\n    addAction(new Expand_Action());\n    addAction(new ExportThreads_Action());\n    addAction(new FastFindNodeUsages_Action());\n    addAction(new FindNext_Action());\n    addAction(new FindPrevious_Action());\n    addAction(new FindSpecificNodeUsages_Action());\n    addAction(new Find_Action());\n    addAction(new FindlAllBrokenReferences_Action());\n    addAction(new FixDependenciesEverywhere_Action());\n    addAction(new FixVirtualPackges_Action());\n    addAction(new FoldSelection_Action());\n    addAction(new GenerateFiles_Action());\n    addAction(new GoByCurrentReference_Action());\n    addAction(new GoToNodeById_Action());\n    addAction(new HighlightInstances_Action());\n    addAction(new HighlightUsages_Action());\n    addAction(new InstallIDEAPlugin_Action());\n    addAction(new LoadNonStubModels_Action());\n    addAction(new MPSProjectPaths_Action());\n    addAction(new ModelPropertiesWOShortcut_Action());\n    addAction(new ModelProperties_Action());\n    addAction(new MoveFileOrDirectory_Action());\n    addAction(new NewDirectory_Action());\n    addAction(new NewFile_Action());\n    addAction(new NewModel_Action());\n    addAction(new NewRuntimeModule_Action());\n    addAction(new NewSubModel_Action());\n    addAction(new NewSubTestModel_Action());\n    addAction(new OptimizeImportsInGlobalScope_Action());\n    addAction(new OptimizeModelImports_Action());\n    addAction(new OptimizeModuleImports_Action());\n    addAction(new OptimizeProjectImports_Action());\n    addAction(new Options_Action());\n    addAction(new PasteNode_Action());\n    addAction(new Pause_Action());\n    addAction(new QuickCreate_Action());\n    addAction(new ReloadAll_Action());\n    addAction(new ReloadStubs_Action());\n    addAction(new RemoveAllBookmarks_Action());\n    addAction(new RemoveBootstrapLanguagesDevKitFromLanguageModels_Action());\n    addAction(new RemoveFromFavorites_Action());\n    addAction(new RemoveLanguageDesignDevKitFromModels_Action());\n    addAction(new RemoveModuleFromProject_Action());\n    addAction(new RemoveTransientModels_Action());\n    addAction(new RenameAspects_Action());\n    addAction(new RenameFavoritesList_Action());\n    addAction(new RenameFileOrDirectory_Action());\n    addAction(new RenameModel_Action());\n    addAction(new RenameNamespace_Action());\n    addAction(new RenamePackage_Action());\n    addAction(new RenameSolution_Action());\n    addAction(new Resume_Action());\n    addAction(new RevertMemoryChanges_Action());\n    addAction(new SaveModel_Action());\n    addAction(new SetBookmarkNoNumber_Action());\n    addAction(new SetModuleFolder_Action());\n    addAction(new SetNodePackage_Action());\n    addAction(new ShowBookmarksDialog_Action());\n    addAction(new ShowBookmarks_Action());\n    addAction(new ShowClassInHierarchy_Action());\n    addAction(new ShowConceptInHierarchy_Action());\n    addAction(new ShowErrorMessage_Action());\n    addAction(new ShowImplementations_Action());\n    addAction(new ShowInProject_Action());\n    addAction(new ShowMappingsPartitioning_Action());\n    addAction(new ShowModelChecker_Action());\n    addAction(new ShowModelRepository_Action());\n    addAction(new ShowModuleDependencies_Action());\n    addAction(new ShowModuleRepository_Action());\n    addAction(new ShowNodeInExplorer_Action());\n    addAction(new ShowNodeInInspector_Action());\n    addAction(new ShowNodeInfo_Action());\n    addAction(new ShowParameters_Action());\n    addAction(new ShowReferencesToMissingStuff_Action());\n    addAction(new SolutionProperties_Action());\n    addAction(new StepInto_Action());\n    addAction(new StepOut_Action());\n    addAction(new StepOver_Action());\n    addAction(new ToggleBreakpoint_Action());\n    addAction(new UpgradeModelPersistenceGlobally_Action());\n    addAction(new UpgradeModelPersistenceInModel_Action());\n    addAction(new UpgradeModelPersistenceInModule_Action());\n    addAction(new UpgradeModelPersistenceInProject_Action());\n    addAction(new UpgradeModulePersistenceGlobally_Action());\n    addAction(new ViewBreakpoints_Action());\n    // groups \n    addGroup(new AbstractFileActions_ActionGroup());\n    addGroup(new AddToFavoritesGroup_ActionGroup());\n    addGroup(new Bookmarks_ActionGroup());\n    addGroup(new Breakpoints_ActionGroup());\n    addGroup(new Build_ActionGroup());\n    addGroup(new Code_ActionGroup());\n    addGroup(new CreateRootNode_ActionGroup());\n    addGroup(new DebugRunMenu_ActionGroup());\n    addGroup(new DebugTool_ActionGroup());\n    addGroup(new DevkitActions_ActionGroup());\n    addGroup(new Edit_ActionGroup());\n    addGroup(new EditorInternal_ActionGroup());\n    addGroup(new EditorLeftPanelMenu_ActionGroup());\n    addGroup(new EditorPopup_ActionGroup());\n    addGroup(new EditorTabActions_ActionGroup());\n    addGroup(new FavoritesPopupWrapper_ActionGroup());\n    addGroup(new FavoritesPopup_ActionGroup());\n    addGroup(new Favorites_ActionGroup());\n    addGroup(new FileActions_ActionGroup());\n    addGroup(new FileSystemNewActions_ActionGroup());\n    addGroup(new FolderActions_ActionGroup());\n    addGroup(new Folding_ActionGroup());\n    addGroup(new GenerateModelPopup_ActionGroup());\n    addGroup(new Generate_ActionGroup());\n    addGroup(new GeneratorActions_ActionGroup());\n    addGroup(new GeneratorNewActions_ActionGroup());\n    addGroup(new GoByReference_ActionGroup());\n    addGroup(new Goto_ActionGroup());\n    addGroup(new JUnitTestCaseActions_ActionGroup());\n    addGroup(new JUnitTestMethodActions_ActionGroup());\n    addGroup(new LanguageActions_ActionGroup());\n    addGroup(new LanguageNewActions_ActionGroup());\n    addGroup(new ModelActionsInternal_ActionGroup());\n    addGroup(new ModelActions_ActionGroup());\n    addGroup(new ModelNewActions_ActionGroup());\n    addGroup(new ModelRefactoring_ActionGroup());\n    addGroup(new ModuleActions_ActionGroup());\n    addGroup(new ModulePropertiesGroup_ActionGroup());\n    addGroup(new NamespaceActions_ActionGroup());\n    addGroup(new NamespaceInternalActions_ActionGroup());\n    addGroup(new NamespaceMakeActions_ActionGroup());\n    addGroup(new NodeActionsInternal_ActionGroup());\n    addGroup(new NodeActions_ActionGroup());\n    addGroup(new PackageActions_ActionGroup());\n    addGroup(new PackageNewActions_ActionGroup());\n    addGroup(new ProjectActions_ActionGroup());\n    addGroup(new ProjectNewActions_ActionGroup());\n    addGroup(new PropertyNodeActions_ActionGroup());\n    addGroup(new ReferenceNodeActions_ActionGroup());\n    addGroup(new RuntimeFolderActions_ActionGroup());\n    addGroup(new Search_ActionGroup());\n    addGroup(new SolutionActions_ActionGroup());\n    addGroup(new SolutionNewActions_ActionGroup());\n    addGroup(new SolutionRefactoring_ActionGroup());\n    addGroup(new ToolsInternal_ActionGroup());\n    addGroup(new ToolsUpgrade_ActionGroup());\n    addGroup(new Tools_ActionGroup());\n    addGroup(new TransientModulesActions_ActionGroup());\n  }","commit_id":"53548b7652d73845527683ec524e8a371748beaa","url":"https://github.com/JetBrains/MPS"}]