[{"original_method":"@Override\n\t\tpublic int getSearchPriority(SearchPhrase p) {\n\t\t\treturn -1;\n\t\t}","id":55000,"modified_method":"@Override\n\t\tpublic int getSearchPriority(SearchPhrase p) {\n\t\t\tif(p.hasObjectType(ObjectType.POI) || \n\t\t\t\t\tp.getLastWord().length() == 0) {\n\t\t\t\treturn -1;\n\t\t\t}\n\t\t\tif(p.hasObjectType(ObjectType.POI_TYPE)) {\n\t\t\t\tif(p.getRadiusLevel() > 1) {\n\t\t\t\t\treturn 5;\n\t\t\t\t} else {\n\t\t\t\t\treturn -1;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(p.getLastWord().length() > 3 || p.getRadiusLevel() > 1) {\n\t\t\t\treturn 3;\n\t\t\t}\n\t\t\treturn -1;\n\t\t}","commit_id":"f7736d626360b74b804267e0b8b3e64560acd31c","url":"https://github.com/osmandapp/Osmand"},{"original_method":"@Override\n\t\tpublic int getSearchPriority(SearchPhrase p) {\n\t\t\tif(!p.isNoSelectedType()) {\n\t\t\t\treturn -1;\n\t\t\t}\n\t\t\treturn 1;\n\t\t}","id":55001,"modified_method":"@Override\n\t\tpublic int getSearchPriority(SearchPhrase p) {\n\t\t\tif(!p.isNoSelectedType()) {\n\t\t\t\treturn -1;\n\t\t\t}\n\t\t\treturn 3;\n\t\t}","commit_id":"f7736d626360b74b804267e0b8b3e64560acd31c","url":"https://github.com/osmandapp/Osmand"},{"original_method":"private void searchByName(final SearchPhrase phrase, final SearchResultMatcher resultMatcher)\n\t\t\t\tthrows IOException {\n\t\t\tif(phrase.getRadiusLevel() > 1 || phrase.getLastWord().length() > 3) {\n\t\t\t\tfinal boolean locSpecified = phrase.getLastTokenLocation() != null;\n\t\t\t\tLatLon loc = phrase.getLastTokenLocation();\n\t\t\t\tfinal QuadRect streetBbox = phrase.getBBoxToSearch(phrase.getRadiusSearch(DEFAULT_ADDRESS_BBOX_RADIUS));\n\t\t\t\tfinal QuadRect postcodeBbox = phrase.getBBoxToSearch(phrase.getRadiusSearch(DEFAULT_ADDRESS_BBOX_RADIUS * 5));\n\t\t\t\tfinal QuadRect villagesBbox = phrase.getBBoxToSearch(phrase.getRadiusSearch(DEFAULT_ADDRESS_BBOX_RADIUS * 3));\n\t\t\t\tfinal QuadRect cityBbox = phrase.getBBoxToSearch(phrase.getRadiusSearch(DEFAULT_ADDRESS_BBOX_RADIUS * 10));\n\t\t\t\tfinal int priority = phrase.isNoSelectedType() ? 1 : 3;\n\t\t\t\tfinal BinaryMapIndexReader[] currentFile = new BinaryMapIndexReader[1]; \n\t\t\t\tResultMatcher<MapObject> rm = new ResultMatcher<MapObject>() {\n\t\t\t\t\tint limit = 0;\n\t\t\t\t\t@Override\n\t\t\t\t\tpublic boolean publish(MapObject object) {\n\t\t\t\t\t\tif(isCancelled()) {\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tSearchResult sr = new SearchResult(phrase);\n\t\t\t\t\t\tsr.object = object;\n\t\t\t\t\t\tsr.file = currentFile[0];\n\t\t\t\t\t\tsr.localeName = object.getName(phrase.getSettings().getLang(), true);\n\t\t\t\t\t\tsr.otherNames = object.getAllNames(true);\n\t\t\t\t\t\tsr.localeRelatedObjectName = sr.file.getRegionName();\n\t\t\t\t\t\tsr.location = object.getLocation();\n\t\t\t\t\t\tsr.priorityDistance = 1;\n\t\t\t\t\t\tsr.priority = priority;\n\t\t\t\t\t\tint y = MapUtils.get31TileNumberY(object.getLocation().getLatitude());\n\t\t\t\t\t\tint x = MapUtils.get31TileNumberX(object.getLocation().getLongitude());\n\t\t\t\t\t\tList<City> closestCities = null;\n\t\t\t\t\t\tif (object instanceof Street) {\n\t\t\t\t\t\t\tif(locSpecified && !streetBbox.contains(x, y, x, y)) {\n\t\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tsr.objectType = ObjectType.STREET;\n\t\t\t\t\t\t\tsr.localeRelatedObjectName = ((Street)object).getCity().getName(phrase.getSettings().getLang(), true);\n\t\t\t\t\t\t} else if (object instanceof City) {\n\t\t\t\t\t\t\tCityType type = ((City)object).getType();\n\t\t\t\t\t\t\tif (type == CityType.CITY || type == CityType.TOWN) {\n\t\t\t\t\t\t\t\tif(phrase.isNoSelectedType()) {\n\t\t\t\t\t\t\t\t\t// ignore city/town\n\t\t\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tif (locSpecified && !cityBbox.contains(x, y, x, y)) {\n\t\t\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tsr.objectType = ObjectType.CITY;\n\t\t\t\t\t\t\t\tsr.priorityDistance = 0.1;\n\t\t\t\t\t\t\t} else if (((City)object).isPostcode()) {\n\t\t\t\t\t\t\t\tif (locSpecified && !postcodeBbox.contains(x, y, x, y)) {\n\t\t\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tsr.objectType = ObjectType.POSTCODE;\n\t\t\t\t\t\t\t}  else {\n\t\t\t\t\t\t\t\tif (locSpecified && !villagesBbox.contains(x, y, x, y)) {\n\t\t\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tCity c = null;\n\t\t\t\t\t\t\t\tif(closestCities == null) {\n\t\t\t\t\t\t\t\t\tclosestCities = townCitiesQR.queryInBox(villagesBbox, new ArrayList<City>());\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tdouble minDist = -1;\n\t\t\t\t\t\t\t\tfor(City s : closestCities) {\n\t\t\t\t\t\t\t\t\tdouble ll = MapUtils.getDistance(s.getLocation(), object.getLocation());\n\t\t\t\t\t\t\t\t\tif(minDist == -1 || ll < minDist) {\n\t\t\t\t\t\t\t\t\t\tc = s;\n\t\t\t\t\t\t\t\t\t\tminDist = ll;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tif(c != null) {\n\t\t\t\t\t\t\t\t\tsr.localeRelatedObjectName = c.getName(phrase.getSettings().getLang(), true);\n\t\t\t\t\t\t\t\t\tsr.distRelatedObjectName = minDist; \n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tsr.objectType = ObjectType.VILLAGE;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tlimit ++;\n\t\t\t\t\t\tresultMatcher.publish(sr);\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\n\t\t\t\t\t@Override\n\t\t\t\t\tpublic boolean isCancelled() {\n\t\t\t\t\t\treturn limit > LIMIT * phrase.getRadiusLevel() || \n\t\t\t\t\t\t\t\tresultMatcher.isCancelled();\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t\tIterator<BinaryMapIndexReader> offlineIterator = phrase.getOfflineIndexes(phrase.getRadiusSearch(DEFAULT_ADDRESS_BBOX_RADIUS * 10), \n\t\t\t\t\t\tSearchPhraseDataType.ADDRESS);\n\t\t\t\twhile (offlineIterator.hasNext()) {\n\t\t\t\t\tBinaryMapIndexReader r = offlineIterator.next();\n\t\t\t\t\tcurrentFile[0] = r;\n\t\t\t\t\tSearchRequest<MapObject> req = BinaryMapIndexReader.buildAddressByNameRequest(rm, phrase\n\t\t\t\t\t\t\t.getLastWord().toLowerCase(), StringMatcherMode.CHECK_STARTS_FROM_SPACE);\n\t\t\t\t\tif (locSpecified) {\n\t\t\t\t\t\treq.setBBoxRadius(loc.getLatitude(), loc.getLongitude(), phrase.getRadiusSearch(DEFAULT_ADDRESS_BBOX_RADIUS * 10));\n\t\t\t\t\t}\n\t\t\t\t\tr.searchAddressDataByName(req);\n\t\t\t\t}\n\t\t\t}\n\t\t}","id":55002,"modified_method":"private void searchByName(final SearchPhrase phrase, final SearchResultMatcher resultMatcher)\n\t\t\t\tthrows IOException {\n\t\t\tif(phrase.getRadiusLevel() > 1 || phrase.getLastWord().length() > 3) {\n\t\t\t\tfinal boolean locSpecified = phrase.getLastTokenLocation() != null;\n\t\t\t\tLatLon loc = phrase.getLastTokenLocation();\n\t\t\t\tfinal QuadRect streetBbox = phrase.getRadiusBBoxToSearch(DEFAULT_ADDRESS_BBOX_RADIUS);\n\t\t\t\tfinal QuadRect postcodeBbox = phrase.getRadiusBBoxToSearch(DEFAULT_ADDRESS_BBOX_RADIUS * 5);\n\t\t\t\tfinal QuadRect villagesBbox = phrase.getRadiusBBoxToSearch(DEFAULT_ADDRESS_BBOX_RADIUS * 3);\n\t\t\t\tfinal QuadRect cityBbox = phrase.getRadiusBBoxToSearch(DEFAULT_ADDRESS_BBOX_RADIUS * 10);\n\t\t\t\tfinal int priority = phrase.isNoSelectedType() ? 3 : 5;\n\t\t\t\tfinal BinaryMapIndexReader[] currentFile = new BinaryMapIndexReader[1]; \n\t\t\t\tResultMatcher<MapObject> rm = new ResultMatcher<MapObject>() {\n\t\t\t\t\tint limit = 0;\n\t\t\t\t\t@Override\n\t\t\t\t\tpublic boolean publish(MapObject object) {\n\t\t\t\t\t\tif(isCancelled()) {\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tSearchResult sr = new SearchResult(phrase);\n\t\t\t\t\t\tsr.object = object;\n\t\t\t\t\t\tsr.file = currentFile[0];\n\t\t\t\t\t\tsr.localeName = object.getName(phrase.getSettings().getLang(), true);\n\t\t\t\t\t\tsr.otherNames = object.getAllNames(true);\n\t\t\t\t\t\tsr.localeRelatedObjectName = sr.file.getRegionName();\n\t\t\t\t\t\tsr.location = object.getLocation();\n\t\t\t\t\t\tsr.priorityDistance = 1;\n\t\t\t\t\t\tsr.priority = priority;\n\t\t\t\t\t\tint y = MapUtils.get31TileNumberY(object.getLocation().getLatitude());\n\t\t\t\t\t\tint x = MapUtils.get31TileNumberX(object.getLocation().getLongitude());\n\t\t\t\t\t\tList<City> closestCities = null;\n\t\t\t\t\t\tif (object instanceof Street) {\n\t\t\t\t\t\t\tif(locSpecified && !streetBbox.contains(x, y, x, y)) {\n\t\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif(object.getName().startsWith(\"<\")) {\n\t\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tsr.objectType = ObjectType.STREET;\n\t\t\t\t\t\t\tsr.localeRelatedObjectName = ((Street)object).getCity().getName(phrase.getSettings().getLang(), true);\n\t\t\t\t\t\t} else if (object instanceof City) {\n\t\t\t\t\t\t\tCityType type = ((City)object).getType();\n\t\t\t\t\t\t\tif (type == CityType.CITY || type == CityType.TOWN) {\n\t\t\t\t\t\t\t\tif(phrase.isNoSelectedType()) {\n\t\t\t\t\t\t\t\t\t// ignore city/town\n\t\t\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tif (locSpecified && !cityBbox.contains(x, y, x, y)) {\n\t\t\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tsr.objectType = ObjectType.CITY;\n\t\t\t\t\t\t\t\tsr.priorityDistance = 0.1;\n\t\t\t\t\t\t\t} else if (((City)object).isPostcode()) {\n\t\t\t\t\t\t\t\tif (locSpecified && !postcodeBbox.contains(x, y, x, y)) {\n\t\t\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tsr.objectType = ObjectType.POSTCODE;\n\t\t\t\t\t\t\t}  else {\n\t\t\t\t\t\t\t\tif (locSpecified && !villagesBbox.contains(x, y, x, y)) {\n\t\t\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tCity c = null;\n\t\t\t\t\t\t\t\tif(closestCities == null) {\n\t\t\t\t\t\t\t\t\tclosestCities = townCitiesQR.queryInBox(villagesBbox, new ArrayList<City>());\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tdouble minDist = -1;\n\t\t\t\t\t\t\t\tdouble pDist = -1;\n\t\t\t\t\t\t\t\tfor(City s : closestCities) {\n\t\t\t\t\t\t\t\t\tdouble ll = MapUtils.getDistance(s.getLocation(), object.getLocation());\n\t\t\t\t\t\t\t\t\tdouble pd = s.getType() == CityType.CITY ? ll : ll * 10;\n\t\t\t\t\t\t\t\t\tif(minDist == -1 || pd < pDist) {\n\t\t\t\t\t\t\t\t\t\tc = s;\n\t\t\t\t\t\t\t\t\t\tminDist = ll;\n\t\t\t\t\t\t\t\t\t\tpDist = pd ;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tif(c != null) {\n\t\t\t\t\t\t\t\t\tsr.localeRelatedObjectName = c.getName(phrase.getSettings().getLang(), true);\n\t\t\t\t\t\t\t\t\tsr.distRelatedObjectName = minDist; \n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tsr.objectType = ObjectType.VILLAGE;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tlimit ++;\n\t\t\t\t\t\tresultMatcher.publish(sr);\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\n\t\t\t\t\t@Override\n\t\t\t\t\tpublic boolean isCancelled() {\n\t\t\t\t\t\treturn limit > LIMIT * phrase.getRadiusLevel() || \n\t\t\t\t\t\t\t\tresultMatcher.isCancelled();\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t\tIterator<BinaryMapIndexReader> offlineIterator = phrase.getRadiusOfflineIndexes(DEFAULT_ADDRESS_BBOX_RADIUS * 10, \n\t\t\t\t\t\tSearchPhraseDataType.ADDRESS);\n\t\t\t\twhile (offlineIterator.hasNext()) {\n\t\t\t\t\tBinaryMapIndexReader r = offlineIterator.next();\n\t\t\t\t\tcurrentFile[0] = r;\n\t\t\t\t\tSearchRequest<MapObject> req = BinaryMapIndexReader.buildAddressByNameRequest(rm, phrase\n\t\t\t\t\t\t\t.getLastWord().toLowerCase(), StringMatcherMode.CHECK_STARTS_FROM_SPACE);\n\t\t\t\t\tif (locSpecified) {\n\t\t\t\t\t\treq.setBBoxRadius(loc.getLatitude(), loc.getLongitude(), phrase.getRadiusSearch(DEFAULT_ADDRESS_BBOX_RADIUS * 10));\n\t\t\t\t\t}\n\t\t\t\t\tr.searchAddressDataByName(req);\n\t\t\t\t}\n\t\t\t}\n\t\t}","commit_id":"f7736d626360b74b804267e0b8b3e64560acd31c","url":"https://github.com/osmandapp/Osmand"},{"original_method":"@Override\n\t\tpublic int getSearchPriority(SearchPhrase p) {\n\t\t\tif(!p.isLastWord(ObjectType.STREET)) {\n\t\t\t\treturn -1;\n\t\t\t}\n\t\t\treturn 1;\n\t\t}","id":55003,"modified_method":"@Override\n\t\tpublic int getSearchPriority(SearchPhrase p) {\n\t\t\tif(isLastWordCityGroup(p)) {\n\t\t\t\treturn 10;\n\t\t\t}\n\t\t\tif(!p.isLastWord(ObjectType.STREET)) {\n\t\t\t\treturn -1;\n\t\t\t}\n\t\t\treturn 1;\n\t\t}","commit_id":"f7736d626360b74b804267e0b8b3e64560acd31c","url":"https://github.com/osmandapp/Osmand"},{"original_method":"@Override\n\t\tpublic boolean search(SearchPhrase phrase, SearchResultMatcher resultMatcher) {\n\t\t\tif(isLastWordCityGroup(phrase)) {\n\t\t\t\t// search all streets \n\t\t\t\t// LIMIT 100 * radiusLevel -  priority 1, distPriority 0 (alphabetic)\n\t\t\t}\n\t\t\treturn true;\n\t\t}","id":55004,"modified_method":"@Override\n\t\tpublic boolean search(SearchPhrase phrase, SearchResultMatcher resultMatcher) throws IOException {\n\t\t\tSearchWord sw = phrase.getLastSelectedWord();\n\t\t\tif (isLastWordCityGroup(phrase) && sw.getResult() != null && sw.getResult().file != null) {\n\t\t\t\tCity c = (City) sw.getResult().object;\n\t\t\t\tif (c.getStreets().isEmpty()) {\n\t\t\t\t\tsw.getResult().file.preloadStreets(c, null);\n\t\t\t\t}\n\t\t\t\tint limit = 0;\n\t\t\t\tNameStringMatcher nm = phrase.getNameStringMatcher();\n\t\t\t\tfor (Street object : c.getStreets()) {\n\n\t\t\t\t\tSearchResult res = new SearchResult(phrase);\n\t\t\t\t\tres.localeName = object.getName(phrase.getSettings().getLang(), true);\n\t\t\t\t\tres.otherNames = object.getAllNames(true);\n\t\t\t\t\tif(object.getName().startsWith(\"<\")) {\n\t\t\t\t\t\t// streets related to city\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\tif (!Algorithms.isEmpty(phrase.getLastWord())\n\t\t\t\t\t\t\t&& !(nm.matches(res.localeName) || nm.matches(res.otherNames))) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\tres.localeRelatedObjectName = c.getName(phrase.getSettings().getLang(), true);\n\t\t\t\t\tres.object = object;\n\t\t\t\t\tres.preferredZoom = 17;\n\t\t\t\t\tres.file = sw.getResult().file;\n\t\t\t\t\tres.location = object.getLocation();\n\t\t\t\t\tres.priority = 1;\n\t\t\t\t\t//res.priorityDistance = 1;\n\t\t\t\t\tres.objectType = ObjectType.STREET;\n\t\t\t\t\tif (limit++ > LIMIT) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tresultMatcher.publish(res);\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn true;\n\t\t}","commit_id":"f7736d626360b74b804267e0b8b3e64560acd31c","url":"https://github.com/osmandapp/Osmand"},{"original_method":"@Override\n\t\tpublic int getSearchPriority(SearchPhrase p) {\n\t\t\tif(p.isLastWord(ObjectType.POI_TYPE) && \n\t\t\t\t\tp.getLastTokenLocation() != null) {\n\t\t\t\treturn 1;\n\t\t\t}\n\t\t\treturn -1;\n\t\t}","id":55005,"modified_method":"@Override\n\t\tpublic int getSearchPriority(SearchPhrase p) {\n\t\t\tif(p.isLastWord(ObjectType.POI_TYPE) && \n\t\t\t\t\tp.getLastTokenLocation() != null) {\n\t\t\t\treturn 3;\n\t\t\t}\n\t\t\treturn -1;\n\t\t}","commit_id":"f7736d626360b74b804267e0b8b3e64560acd31c","url":"https://github.com/osmandapp/Osmand"},{"original_method":"private void initAndSearchCities(final SearchPhrase phrase, final SearchResultMatcher resultMatcher) throws IOException {\n\t\t\tQuadRect bbox = phrase.getBBoxToSearch(phrase.getRadiusSearch(DEFAULT_ADDRESS_BBOX_RADIUS * 10));\n\t\t\tIterator<BinaryMapIndexReader> offlineIndexes = phrase.getOfflineIndexes(bbox, SearchPhraseDataType.ADDRESS);\n\t\t\twhile(offlineIndexes.hasNext()) {\n\t\t\t\tBinaryMapIndexReader r = offlineIndexes.next();\n\t\t\t\tif(!townCities.containsKey(r)) {\n\t\t\t\t\tBinaryMapIndexReader.buildAddressRequest(null);\n\t\t\t\t\tList<City> l = r.getCities(null, BinaryMapAddressReaderAdapter.CITY_TOWN_TYPE);\n\t\t\t\t\ttownCities.put(r, l);\n\t\t\t\t\tfor(City c  : l) {\n\t\t\t\t\t\tLatLon cl = c.getLocation();\n\t\t\t\t\t\tc.setReferenceFile(r);\n\t\t\t\t\t\tint y = MapUtils.get31TileNumberY(cl.getLatitude());\n\t\t\t\t\t\tint x = MapUtils.get31TileNumberX(cl.getLongitude());\n\t\t\t\t\t\tQuadRect qr = new QuadRect(x, y, x, y);\n\t\t\t\t\t\ttownCitiesQR.insert(c, qr);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (phrase.isNoSelectedType() && bbox != null && phrase.getLastWord().length() > 0) {\n\t\t\t\tNameStringMatcher nm = phrase.getNameStringMatcher();\n\t\t\t\tresArray.clear();\n\t\t\t\tresArray = townCitiesQR.queryInBox(bbox, resArray);\n\t\t\t\tint limit = 0;\n\t\t\t\tfor (City c : resArray) {\n\t\t\t\t\tSearchResult sr = new SearchResult(phrase);\n\t\t\t\t\tsr.object = c;\n\t\t\t\t\tsr.file = (BinaryMapIndexReader) c.getReferenceFile();\n\t\t\t\t\tsr.localeName = c.getName(phrase.getSettings().getLang(), true);\n\t\t\t\t\tsr.otherNames = c.getAllNames(true);\n\t\t\t\t\tsr.localeRelatedObjectName = sr.file.getRegionName();\n\t\t\t\t\tsr.location = c.getLocation();\n\t\t\t\t\tsr.priority = 1;\n\t\t\t\t\tsr.priorityDistance = 0.1;\n\t\t\t\t\tsr.objectType = ObjectType.CITY;\n\t\t\t\t\tif(nm.matches(sr.localeName) || nm.matches(sr.otherNames)) {\n\t\t\t\t\t\tresultMatcher.publish(sr);\n\t\t\t\t\t}\n\t\t\t\t\tif(limit++ > LIMIT * phrase.getRadiusLevel()) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}","id":55006,"modified_method":"private void initAndSearchCities(final SearchPhrase phrase, final SearchResultMatcher resultMatcher) throws IOException {\n\t\t\tQuadRect bbox = phrase.getRadiusBBoxToSearch(DEFAULT_ADDRESS_BBOX_RADIUS * 10);\n\t\t\tIterator<BinaryMapIndexReader> offlineIndexes = phrase.getOfflineIndexes(bbox, SearchPhraseDataType.ADDRESS);\n\t\t\twhile(offlineIndexes.hasNext()) {\n\t\t\t\tBinaryMapIndexReader r = offlineIndexes.next();\n\t\t\t\tif(!townCities.containsKey(r)) {\n\t\t\t\t\tBinaryMapIndexReader.buildAddressRequest(null);\n\t\t\t\t\tList<City> l = r.getCities(null, BinaryMapAddressReaderAdapter.CITY_TOWN_TYPE);\n\t\t\t\t\ttownCities.put(r, l);\n\t\t\t\t\tfor(City c  : l) {\n\t\t\t\t\t\tLatLon cl = c.getLocation();\n\t\t\t\t\t\tc.setReferenceFile(r);\n\t\t\t\t\t\tint y = MapUtils.get31TileNumberY(cl.getLatitude());\n\t\t\t\t\t\tint x = MapUtils.get31TileNumberX(cl.getLongitude());\n\t\t\t\t\t\tQuadRect qr = new QuadRect(x, y, x, y);\n\t\t\t\t\t\ttownCitiesQR.insert(c, qr);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (phrase.isNoSelectedType() && bbox != null && phrase.getLastWord().length() > 0) {\n\t\t\t\tNameStringMatcher nm = phrase.getNameStringMatcher();\n\t\t\t\tresArray.clear();\n\t\t\t\tresArray = townCitiesQR.queryInBox(bbox, resArray);\n\t\t\t\tint limit = 0;\n\t\t\t\tfor (City c : resArray) {\n\t\t\t\t\tSearchResult sr = new SearchResult(phrase);\n\t\t\t\t\tsr.object = c;\n\t\t\t\t\tsr.file = (BinaryMapIndexReader) c.getReferenceFile();\n\t\t\t\t\tsr.localeName = c.getName(phrase.getSettings().getLang(), true);\n\t\t\t\t\tsr.otherNames = c.getAllNames(true);\n\t\t\t\t\tsr.localeRelatedObjectName = sr.file.getRegionName();\n\t\t\t\t\tsr.location = c.getLocation();\n\t\t\t\t\tsr.priority = 1;\n\t\t\t\t\tsr.priorityDistance = 0.1;\n\t\t\t\t\tsr.objectType = ObjectType.CITY;\n\t\t\t\t\tif(nm.matches(sr.localeName) || nm.matches(sr.otherNames)) {\n\t\t\t\t\t\tresultMatcher.publish(sr);\n\t\t\t\t\t}\n\t\t\t\t\tif(limit++ > LIMIT * phrase.getRadiusLevel()) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}","commit_id":"f7736d626360b74b804267e0b8b3e64560acd31c","url":"https://github.com/osmandapp/Osmand"},{"original_method":"@Override\n\t\tpublic boolean search(final SearchPhrase phrase, final SearchResultMatcher resultMatcher) throws IOException {\n\t\t\tif(phrase.isLastWord(ObjectType.POI_TYPE)) {\n\t\t\t\tfinal AbstractPoiType pt = (AbstractPoiType) phrase.getLastSelectedWord().getResult().object;\n\t\t\t\tacceptedTypes.clear();\n\t\t\t\tpoiAdditionals.clear();\n\t\t\t\tupdateTypesToAccept(pt);\n\t\t\t\t\n\t\t\t\tQuadRect bbox = phrase.getBBoxToSearch(phrase.getRadiusSearch(10000));\n\t\t\t\tList<BinaryMapIndexReader> oo = phrase.getOfflineIndexes();\n\t\t\t\tfinal BinaryMapIndexReader[] selected = new BinaryMapIndexReader[1];\n\t\t\t\tfinal NameStringMatcher ns = phrase.getNameStringMatcher();\n\n\t\t\t\tSearchRequest<Amenity> req = BinaryMapIndexReader.buildSearchPoiRequest(\n\t\t\t\t\t\t(int)bbox.left, (int)bbox.right, \n\t\t\t\t\t\t(int)bbox.top, (int)bbox.bottom, -1,\n\t\t\t\t\t\tnew SearchPoiTypeFilter() {\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t@Override\n\t\t\t\t\t\t\tpublic boolean isEmpty() {\n\t\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t@Override\n\t\t\t\t\t\t\tpublic boolean accept(PoiCategory type, String subtype) {\n\t\t\t\t\t\t\t\tif (type == null) {\n\t\t\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tif (!types.isRegisteredType(type)) {\n\t\t\t\t\t\t\t\t\ttype = types.getOtherPoiCategory();\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tif (!acceptedTypes.containsKey(type)) {\n\t\t\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tLinkedHashSet<String> set = acceptedTypes.get(type);\n\t\t\t\t\t\t\t\tif (set == null) {\n\t\t\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\treturn set.contains(subtype);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}, \n\t\t\t\t\t\tnew ResultMatcher<Amenity>() {\n\t\t\t\t\t\n\t\t\t\t\t@Override\n\t\t\t\t\tpublic boolean publish(Amenity object) {\n\t\t\t\t\t\tSearchResult res = new SearchResult(phrase);\n\t\t\t\t\t\tres.localeName = object.getName(phrase.getSettings().getLang(), true);\n\t\t\t\t\t\tres.otherNames = object.getAllNames(true);\n\t\t\t\t\t\tif(!Algorithms.isEmpty(phrase.getLastWord()) &&\n\t\t\t\t\t\t\t\t!(ns.matches(res.localeName) || ns.matches(res.otherNames))) {\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif(Algorithms.isEmpty(res.localeName)) {\n\t\t\t\t\t\t\tAbstractPoiType st = types.getAnyPoiTypeByKey(object.getSubType());\n\t\t\t\t\t\t\tif(st != null) {\n\t\t\t\t\t\t\t\tres.localeName = st.getTranslation();\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tres.localeName = \"sub:\" + object.getSubType();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tres.object = object;\n\t\t\t\t\t\tres.preferredZoom = 17;\n\t\t\t\t\t\tres.file = selected[0];\n\t\t\t\t\t\tres.location = object.getLocation();\n\t\t\t\t\t\tres.priority = 5;\n\t\t\t\t\t\tres.priorityDistance = 1;\n\t\t\t\t\t\tres.objectType = ObjectType.POI;\n\t\t\t\t\t\tresultMatcher.publish(res);\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\t@Override\n\t\t\t\t\tpublic boolean isCancelled() {\n\t\t\t\t\t\treturn resultMatcher.isCancelled();\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\tfor (BinaryMapIndexReader o : oo) {\n\t\t\t\t\tselected[0] = o;\n\t\t\t\t\to.searchPoi(req);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t}","id":55007,"modified_method":"@Override\n\t\tpublic boolean search(final SearchPhrase phrase, final SearchResultMatcher resultMatcher) throws IOException {\n\t\t\tif(phrase.isLastWord(ObjectType.POI_TYPE)) {\n\t\t\t\tfinal AbstractPoiType pt = (AbstractPoiType) phrase.getLastSelectedWord().getResult().object;\n\t\t\t\tacceptedTypes.clear();\n\t\t\t\tpoiAdditionals.clear();\n\t\t\t\tupdateTypesToAccept(pt);\n\t\t\t\t\n\t\t\t\tQuadRect bbox = phrase.getRadiusBBoxToSearch(10000);\n\t\t\t\tList<BinaryMapIndexReader> oo = phrase.getOfflineIndexes();\n\t\t\t\tfinal BinaryMapIndexReader[] selected = new BinaryMapIndexReader[1];\n\t\t\t\tfinal NameStringMatcher ns = phrase.getNameStringMatcher();\n\n\t\t\t\tSearchRequest<Amenity> req = BinaryMapIndexReader.buildSearchPoiRequest(\n\t\t\t\t\t\t(int)bbox.left, (int)bbox.right, \n\t\t\t\t\t\t(int)bbox.top, (int)bbox.bottom, -1,\n\t\t\t\t\t\tnew SearchPoiTypeFilter() {\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t@Override\n\t\t\t\t\t\t\tpublic boolean isEmpty() {\n\t\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t@Override\n\t\t\t\t\t\t\tpublic boolean accept(PoiCategory type, String subtype) {\n\t\t\t\t\t\t\t\tif (type == null) {\n\t\t\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tif (!types.isRegisteredType(type)) {\n\t\t\t\t\t\t\t\t\ttype = types.getOtherPoiCategory();\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tif (!acceptedTypes.containsKey(type)) {\n\t\t\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tLinkedHashSet<String> set = acceptedTypes.get(type);\n\t\t\t\t\t\t\t\tif (set == null) {\n\t\t\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\treturn set.contains(subtype);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}, new ResultMatcher<Amenity>() {\n\n\t\t\t\t\t\t\t@Override\n\t\t\t\t\t\t\tpublic boolean publish(Amenity object) {\n\t\t\t\t\t\t\t\tSearchResult res = new SearchResult(phrase);\n\t\t\t\t\t\t\t\tres.localeName = object.getName(phrase.getSettings().getLang(), true);\n\t\t\t\t\t\t\t\tres.otherNames = object.getAllNames(true);\n\t\t\t\t\t\t\t\tif (!Algorithms.isEmpty(phrase.getLastWord())\n\t\t\t\t\t\t\t\t\t\t&& !(ns.matches(res.localeName) || ns.matches(res.otherNames))) {\n\t\t\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tif (Algorithms.isEmpty(res.localeName)) {\n\t\t\t\t\t\t\t\t\tAbstractPoiType st = types.getAnyPoiTypeByKey(object.getSubType());\n\t\t\t\t\t\t\t\t\tif (st != null) {\n\t\t\t\t\t\t\t\t\t\tres.localeName = st.getTranslation();\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\tres.localeName = object.getSubType();\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tres.object = object;\n\t\t\t\t\t\t\t\tres.preferredZoom = 17;\n\t\t\t\t\t\t\t\tres.file = selected[0];\n\t\t\t\t\t\t\t\tres.location = object.getLocation();\n\t\t\t\t\t\t\t\tres.priority = 3;\n\t\t\t\t\t\t\t\tres.priorityDistance = 1;\n\t\t\t\t\t\t\t\tres.objectType = ObjectType.POI;\n\t\t\t\t\t\t\t\tresultMatcher.publish(res);\n\t\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t@Override\n\t\t\t\t\t\t\tpublic boolean isCancelled() {\n\t\t\t\t\t\t\t\treturn resultMatcher.isCancelled();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\tfor (BinaryMapIndexReader o : oo) {\n\t\t\t\t\tselected[0] = o;\n\t\t\t\t\to.searchPoi(req);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t}","commit_id":"f7736d626360b74b804267e0b8b3e64560acd31c","url":"https://github.com/osmandapp/Osmand"},{"original_method":"public void selectFile(BinaryMapIndexReader object) {\n\t\tif(indexes == null) {\n\t\t\tindexes = new ArrayList<>();\n\t\t}\n\t\tthis.indexes.add(object);\n\t}","id":55008,"modified_method":"public void selectFile(BinaryMapIndexReader object) {\n\t\tif(indexes == null) {\n\t\t\tindexes = new ArrayList<>();\n\t\t}\n\t\tif(!this.indexes.contains(object)) {\n\t\t\tthis.indexes.add(object);\n\t\t}\n\t}","commit_id":"f7736d626360b74b804267e0b8b3e64560acd31c","url":"https://github.com/osmandapp/Osmand"},{"original_method":"public QuadRect getBBoxToSearch(int radiusInMeters) {\n\t\tQuadRect cache1kmRect = get1km31Rect();\n\t\tif(cache1kmRect == null) {\n\t\t\treturn null;\n\t\t}\n\t\tint max = (1 << 31) - 1;\n\t\tdouble dx = (cache1kmRect.width() / 2) * radiusInMeters / 1000;\n\t\tdouble dy = (cache1kmRect.height() / 2) * radiusInMeters / 1000;\n\t\tdouble topLeftX = Math.max(0, cache1kmRect.left - dx);\n\t\tdouble topLeftY = Math.max(0, cache1kmRect.top - dy);\n\t\tdouble bottomRightX = Math.min(max, cache1kmRect.right + dx);\n\t\tdouble bottomRightY = Math.min(max, cache1kmRect.bottom + dy);\n\t\treturn new QuadRect(topLeftX, topLeftY, bottomRightX, bottomRightY);\n\t}","id":55009,"modified_method":"public QuadRect getRadiusBBoxToSearch(int radius) {\n\t\tint radiusInMeters = getRadiusSearch(radius);\n\t\tQuadRect cache1kmRect = get1km31Rect();\n\t\tif(cache1kmRect == null) {\n\t\t\treturn null;\n\t\t}\n\t\tint max = (1 << 31) - 1;\n\t\tdouble dx = (cache1kmRect.width() / 2) * radiusInMeters / 1000;\n\t\tdouble dy = (cache1kmRect.height() / 2) * radiusInMeters / 1000;\n\t\tdouble topLeftX = Math.max(0, cache1kmRect.left - dx);\n\t\tdouble topLeftY = Math.max(0, cache1kmRect.top - dy);\n\t\tdouble bottomRightX = Math.min(max, cache1kmRect.right + dx);\n\t\tdouble bottomRightY = Math.min(max, cache1kmRect.bottom + dy);\n\t\treturn new QuadRect(topLeftX, topLeftY, bottomRightX, bottomRightY);\n\t}","commit_id":"f7736d626360b74b804267e0b8b3e64560acd31c","url":"https://github.com/osmandapp/Osmand"},{"original_method":"public Iterator<BinaryMapIndexReader> getOfflineIndexes(int meters, final SearchPhraseDataType dt) {\n\t\tfinal QuadRect rect = meters > 0 ? getBBoxToSearch(meters) : null;\n\t\treturn getOfflineIndexes(rect, dt);\n\t\t\n\t}","id":55010,"modified_method":"public Iterator<BinaryMapIndexReader> getRadiusOfflineIndexes(int meters, final SearchPhraseDataType dt) {\n\t\tfinal QuadRect rect = meters > 0 ? getRadiusBBoxToSearch(meters) : null;\n\t\treturn getOfflineIndexes(rect, dt);\n\t\t\n\t}","commit_id":"f7736d626360b74b804267e0b8b3e64560acd31c","url":"https://github.com/osmandapp/Osmand"},{"original_method":"public SearchResultCollection search(final String text, final ResultMatcher<SearchResult> matcher) {\n\t\tSearchResultCollection quickRes = new SearchResultCollection();\n\t\tfinal int request = requestNumber.incrementAndGet();\n\t\tfinal SearchPhrase phrase = this.phrase.generateNewPhrase(text, searchSettings);\n\t\tthis.phrase = phrase;\n\t\tquickRes.phrase = phrase;\n\t\tfilterCurrentResults(quickRes.searchResults, phrase);\n\t\tSystem.out.println(\"> Search phrase \" + phrase + \" \" + quickRes.searchResults.size());\n\t\tsingleThreadedExecutor.submit(new Runnable() {\n\n\t\t\t@Override\n\t\t\tpublic void run() {\n\t\t\t\ttry {\n\t\t\t\t\tSearchResultMatcher rm = new SearchResultMatcher(matcher, request);\n\t\t\t\t\tif(rm.isCancelled()) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tThread.sleep(200); // FIXME remove timeout\n\t\t\t\t\tsearchInBackground(phrase, rm);\n\t\t\t\t\tif (!rm.isCancelled()) {\n\t\t\t\t\t\tsortSearchResults(phrase, rm.getRequestResults());\n\t\t\t\t\t\tSystem.out.println(\">> Search phrase \" + phrase + \" \" + rm.getRequestResults().size());\n\t\t\t\t\t\tSearchResultCollection collection = new SearchResultCollection(rm.getRequestResults(),\n\t\t\t\t\t\t\t\tphrase);\n\t\t\t\t\t\tcurrentSearchResult = collection;\n\t\t\t\t\t\tif (onResultsComplete != null) {\n\t\t\t\t\t\t\tonResultsComplete.run();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} catch (InterruptedException e) {\n\t\t\t\t\te.printStackTrace();\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t\n\t\t});\n\t\treturn quickRes;\n\t}","id":55011,"modified_method":"public SearchResultCollection search(final String text, final ResultMatcher<SearchResult> matcher) {\n\t\tSearchResultCollection quickRes = new SearchResultCollection();\n\t\tfinal int request = requestNumber.incrementAndGet();\n\t\tfinal SearchPhrase phrase = this.phrase.generateNewPhrase(text, searchSettings);\n\t\tthis.phrase = phrase;\n\t\tquickRes.phrase = phrase;\n\t\tfilterCurrentResults(quickRes.searchResults, phrase);\n\t\tLOG.info(\"> Search phrase \" + phrase + \" \" + quickRes.searchResults.size());\n\t\tsingleThreadedExecutor.submit(new Runnable() {\n\n\t\t\t@Override\n\t\t\tpublic void run() {\n\t\t\t\ttry {\n\t\t\t\t\tSearchResultMatcher rm = new SearchResultMatcher(matcher, request);\n\t\t\t\t\tif(rm.isCancelled()) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tThread.sleep(200); // FIXME remove timeout\n\t\t\t\t\tsearchInBackground(phrase, rm);\n\t\t\t\t\tif (!rm.isCancelled()) {\n\t\t\t\t\t\tsortSearchResults(phrase, rm.getRequestResults());\n\t\t\t\t\t\tLOG.info(\">> Search phrase \" + phrase + \" \" + rm.getRequestResults().size());\n\t\t\t\t\t\tSearchResultCollection collection = new SearchResultCollection(rm.getRequestResults(),\n\t\t\t\t\t\t\t\tphrase);\n\t\t\t\t\t\tcurrentSearchResult = collection;\n\t\t\t\t\t\tif (onResultsComplete != null) {\n\t\t\t\t\t\t\tonResultsComplete.run();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} catch (InterruptedException e) {\n\t\t\t\t\te.printStackTrace();\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t\n\t\t});\n\t\treturn quickRes;\n\t}","commit_id":"f7736d626360b74b804267e0b8b3e64560acd31c","url":"https://github.com/osmandapp/Osmand"},{"original_method":"private void sortSearchResults(SearchPhrase sp, List<SearchResult> searchResults) {\n\t\t// sort SearchResult by 1. searchDistance 2. Name\n\t\tfinal LatLon loc = sp.getLastTokenLocation();\n\t\tfinal Collator clt = Collator.getInstance();\n\t\tCollections.sort(searchResults, new Comparator<SearchResult>() {\n\n\t\t\t@Override\n\t\t\tpublic int compare(SearchResult o1, SearchResult o2) {\n\t\t\t\tdouble s1 = o1.getSearchDistance(loc);\n\t\t\t\tdouble s2 = o2.getSearchDistance(loc);\n\t\t\t\tint cmp = Double.compare(s1, s2);\n\t\t\t\tif(cmp != 0) {\n\t\t\t\t\treturn cmp;\n\t\t\t\t}\n\t\t\t\tint st1 = Algorithms.extractFirstIntegerNumber(o1.localeName);\n\t\t\t\tint st2 = Algorithms.extractFirstIntegerNumber(o2.localeName);\n\t\t\t\tif(st1 != st2) {\n\t\t\t\t\treturn Algorithms.compare(st1, st2);\n\t\t\t\t}\n\t\t\t\treturn clt.compare(o1.localeName, o2.localeName);\n\t\t\t}\n\t\t});\n\t}","id":55012,"modified_method":"private void sortSearchResults(SearchPhrase sp, List<SearchResult> searchResults) {\n\t\t// sort SearchResult by 1. searchDistance 2. Name\n\t\tfinal LatLon loc = sp.getLastTokenLocation();\n\t\tfinal net.osmand.Collator clt = OsmAndCollator.primaryCollator();\n\t\tCollections.sort(searchResults, new Comparator<SearchResult>() {\n\n\t\t\t@Override\n\t\t\tpublic int compare(SearchResult o1, SearchResult o2) {\n\t\t\t\tdouble s1 = o1.getSearchDistance(loc);\n\t\t\t\tdouble s2 = o2.getSearchDistance(loc);\n\t\t\t\tint cmp = Double.compare(s1, s2);\n\t\t\t\tif(cmp != 0) {\n\t\t\t\t\treturn cmp;\n\t\t\t\t}\n\t\t\t\tint st1 = Algorithms.extractFirstIntegerNumber(o1.localeName);\n\t\t\t\tint st2 = Algorithms.extractFirstIntegerNumber(o2.localeName);\n\t\t\t\tif(st1 != st2) {\n\t\t\t\t\treturn Algorithms.compare(st1, st2);\n\t\t\t\t}\n\t\t\t\treturn clt.compare(o1.localeName, o2.localeName);\n\t\t\t}\n\t\t});\n\t}","commit_id":"f7736d626360b74b804267e0b8b3e64560acd31c","url":"https://github.com/osmandapp/Osmand"},{"original_method":"private void searchInBackground(final SearchPhrase phrase, SearchResultMatcher matcher) {\n\t\tfor (SearchWord sw : phrase.getWords()) {\n\t\t\tif(sw.getResult() != null && sw.getResult().file != null) {\n\t\t\t\tphrase.selectFile(sw.getResult().file);\n\t\t\t}\n\t\t}\n\t\tphrase.sortFiles();\n\t\tArrayList<SearchCoreAPI> lst = new ArrayList<>(apis);\n\t\tCollections.sort(lst, new Comparator<SearchCoreAPI>() {\n\n\t\t\t@Override\n\t\t\tpublic int compare(SearchCoreAPI o1, SearchCoreAPI o2) {\n\t\t\t\treturn Algorithms.compare(o1.getSearchPriority(phrase),\n\t\t\t\t\t\to2.getSearchPriority(phrase));\n\t\t\t}\n\t\t});\n\t\tfor(SearchCoreAPI api : lst) {\n\t\t\tif(matcher.isCancelled()) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif(api.getSearchPriority(phrase) == -1) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\ttry {\n\t\t\t\tapi.search(phrase, matcher);\n\t\t\t} catch (IOException e) {\n\t\t\t\tLOG.error(e.getMessage(), e);\n\t\t\t\te.printStackTrace();\n\t\t\t}\n\t\t}\n\t}","id":55013,"modified_method":"private void searchInBackground(final SearchPhrase phrase, SearchResultMatcher matcher) {\n\t\tfor (SearchWord sw : phrase.getWords()) {\n\t\t\tif(sw.getResult() != null && sw.getResult().file != null) {\n\t\t\t\tphrase.selectFile(sw.getResult().file);\n\t\t\t}\n\t\t}\n\t\tphrase.sortFiles();\n\t\tArrayList<SearchCoreAPI> lst = new ArrayList<>(apis);\n\t\tCollections.sort(lst, new Comparator<SearchCoreAPI>() {\n\n\t\t\t@Override\n\t\t\tpublic int compare(SearchCoreAPI o1, SearchCoreAPI o2) {\n\t\t\t\treturn Algorithms.compare(o1.getSearchPriority(phrase),\n\t\t\t\t\t\to2.getSearchPriority(phrase));\n\t\t\t}\n\t\t});\n\t\tfor(SearchCoreAPI api : lst) {\n\t\t\tif(matcher.isCancelled()) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif(api.getSearchPriority(phrase) == -1) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\ttry {\n\t\t\t\tapi.search(phrase, matcher);\n\t\t\t} catch (Throwable e) {\n\t\t\t\te.printStackTrace();\n\t\t\t\tLOG.error(e.getMessage(), e);\n\t\t\t}\n\t\t}\n\t}","commit_id":"f7736d626360b74b804267e0b8b3e64560acd31c","url":"https://github.com/osmandapp/Osmand"},{"original_method":"public void init() {\n\t\tapis.add(new SearchCoreFactory.SearchAmenityTypesAPI(poiTypes));\n\t\tapis.add(new SearchCoreFactory.SearchAmenityByTypeAPI(poiTypes));\n\t\tapis.add(new SearchCoreFactory.SearchAmenityByNameAPI());\n\t\tapis.add(new SearchCoreFactory.SearchStreetByCityAPI());\n\t\tapis.add(new SearchCoreFactory.SearchBuildingAndIntersectionsByStreetAPI());\n\t\t\n\t\tapis.add(new SearchCoreFactory.SearchAddressByNameAPI());\n\t}","id":55014,"modified_method":"public void init() {\n\t\tapis.add(new SearchCoreFactory.SearchAmenityTypesAPI(poiTypes));\n\t\tapis.add(new SearchCoreFactory.SearchAmenityByTypeAPI(poiTypes));\n\t\tapis.add(new SearchCoreFactory.SearchAmenityByNameAPI());\n\t\tapis.add(new SearchCoreFactory.SearchStreetByCityAPI());\n\t\tapis.add(new SearchCoreFactory.SearchBuildingAndIntersectionsByStreetAPI());\n\t\tapis.add(new SearchCoreFactory.SearchUrlAPI());\n\t\tapis.add(new SearchCoreFactory.SearchAddressByNameAPI());\n\t}","commit_id":"f7736d626360b74b804267e0b8b3e64560acd31c","url":"https://github.com/osmandapp/Osmand"},{"original_method":"public void sawOpcode(int seen) {\n\t\ttry {\n\t\t\tif ((seen == INVOKEINTERFACE)\n\t\t\t&&  (getClassConstantOperand().equals(\"java/sql/ResultSet\"))) {\n\t\t\t\tString methodName = getNameConstantOperand();\n\t\t\t\tif ((methodName.startsWith(\"get\") && dbFieldTypesSet.contains(methodName.substring(3)))\n\t\t\t\t||  (methodName.startsWith(\"update\") && dbFieldTypesSet.contains(methodName.substring(6)))) {\n\t\t\t\t\tString signature = getSigConstantOperand();\n\t\t\t\t\tType[] argTypes = Type.getArgumentTypes(signature);\n\t\t\t\t\tint numParms = argTypes.length;\n\t\t\t\t\tif (stack.getStackDepth() >= numParms) {\n\t\t\t\t\t\tOpcodeStack.Item item = stack.getStackItem(numParms-1);\n\t\t\t\t\t\tObject cons = item.getConstant();\n\t\t\t\t\t\tif ((cons != null) && (\"I\".equals(item.getSignature())) && (((Integer) cons).intValue() == 0)) {\n\t\t\t\t\t\t\tbugReporter.reportBug(new BugInstance(this, \"BRSA_BAD_RESULTSET_ACCESS\", NORMAL_PRIORITY)\n\t\t\t\t\t\t\t        .addClassAndMethod(this)\n\t\t\t\t\t\t\t        .addSourceLine(this));\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} \n\t\t\t}\n\t\t} finally {\n\t\t\tstack.sawOpcode(this, seen);\n\t\t}\n\t}","id":55015,"modified_method":"public void sawOpcode(int seen) {\n\t\ttry {\n\t\t\tif (seen == INVOKEINTERFACE) {\n\t\t\t\tString methodName = getNameConstantOperand();\n\t\t\t\tString clsConstant = getClassConstantOperand();\n\t\t\t\tif  ((clsConstant.equals(\"java/sql/ResultSet\") && \n\t\t\t\t\t\t((methodName.startsWith(\"get\") && dbFieldTypesSet.contains(methodName.substring(3))) ||  \n\t\t\t\t\t\t (methodName.startsWith(\"update\") && dbFieldTypesSet.contains(methodName.substring(6)))))\n\t\t\t    ||   ((clsConstant.equals(\"java/sql/PreparedStatement\") &&  \n\t\t\t    \t\t((methodName.startsWith(\"set\") && dbFieldTypesSet.contains(methodName.substring(3))))))) {\n\t\t\t\t\tString signature = getSigConstantOperand();\n\t\t\t\t\tType[] argTypes = Type.getArgumentTypes(signature);\n\t\t\t\t\tint numParms = argTypes.length;\n\t\t\t\t\tif (stack.getStackDepth() >= numParms) {\n\t\t\t\t\t\tOpcodeStack.Item item = stack.getStackItem(numParms-1);\n\t\t\t\t\t\tObject cons = item.getConstant();\n\t\t\t\t\t\tif ((cons != null) && (\"I\".equals(item.getSignature())) && (((Integer) cons).intValue() == 0)) {\n\t\t\t\t\t\t\tbugReporter.reportBug(new BugInstance(this, \"BRSA_BAD_RESULTSET_ACCESS\", NORMAL_PRIORITY)\n\t\t\t\t\t\t\t        .addClassAndMethod(this)\n\t\t\t\t\t\t\t        .addSourceLine(this));\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t} finally {\n\t\t\tstack.sawOpcode(this, seen);\n\t\t}\n\t}","commit_id":"a8514f51d90941a0fa9aa35293ffc8b229c98599","url":"https://github.com/findbugsproject/findbugs"},{"original_method":"@Override\n         public void sawOpcode(int seen) {\n\t\t\n\t\topcodeStack.mergeJumps(this);\n\t\tif (seen == GETSTATIC) {\n\t\t\tXField f = XFactory.createReferencedXField(this);\n                \tstaticFieldsReadInThisMethod.add(f);\n\t\t\t}\n\t\telse if (seen == INVOKESTATIC) {\n\t\t\tseenInvokeStatic = true;\n\t\t\t}\n\t\telse if (seen == PUTSTATIC \n\t\t\t&& !getMethod().isStatic()) {\n\t\t\tXField f = XFactory.createReferencedXField(this);\n                \tif (!staticFieldsReadInThisMethod.contains(f)) {\n\t\t\t\tint priority = LOW_PRIORITY;\n\t\t\t\tif (!publicOrProtectedConstructor)\n\t\t\t\t\tpriority--;\n\t\t\t\tif (!seenInvokeStatic \n\t\t\t\t     && staticFieldsReadInThisMethod.isEmpty())\n\t\t\t\t\tpriority--;\n\t\t\t\tif (getThisClass().isPublic() \n\t\t\t\t\t&& getMethod().isPublic())\n\t\t\t\t\tpriority--;\n\t\t\t\tif (getThisClass().isPrivate() \n\t\t\t\t    || getMethod().isPrivate())\n\t\t\t\t\tpriority++;\n\t\t\t\tif (getClassName().indexOf('$') != -1)\n\t\t\t\t\tpriority++;\n\t\t\t\tbugReporter.reportBug(new BugInstance(this, \n\t\t\t\t\t\t\"ST_WRITE_TO_STATIC_FROM_INSTANCE_METHOD\",\n\t\t\t\t\tpriority\n\t\t\t\t\t)\n\t\t\t\t        .addClassAndMethod(this)\n\t\t\t\t        .addField(f)\n\t\t\t\t        .addSourceLine(this)\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\n\n\t\tif (seen == INVOKEVIRTUAL || seen == INVOKEINTERFACE\n\t\t\t|| seen == INVOKESPECIAL)  {\n\t\t\t\tString sig = getSigConstantOperand();\n\t\t\t\tint pos = PreorderVisitor.getNumberArguments(sig);\n\t\t\t\tif (opcodeStack.getStackDepth() > pos) {\n\t\t\t\tOpcodeStack.Item item = opcodeStack.getStackItem(pos);\n\t\t\t\tif (DEBUG)\n\t\t\t\tSystem.out.println(\"In \" + getFullyQualifiedMethodName()\n\t\t\t\t\t+ \" saw call on \" + item);\n\t\t\t\tboolean superCall = seen == INVOKESPECIAL\n\t\t\t\t\t&&  !getClassConstantOperand() .equals(getClassName());\n\t\t\t\tboolean selfCall = item.getRegisterNumber() == 0 \n\t\t\t\t\t&& !superCall;\n\t\t\t\tif (selfCall && getMethodName().equals(\"<init>\")) {\n\t\t\t\t\tsawSelfCallInConstructor = true;\t\n\t\t\t\t\tif (DEBUG)\n\t\t\t\t\tSystem.out.println(\"Saw self call in \" + getFullyQualifiedMethodName()  + \" to \" + getClassConstantOperand() + \".\" + getNameConstantOperand()\n\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\tif ((seen == IFNULL || seen == IFNONNULL) \n\t\t\t&& opcodeStack.getStackDepth() > 0)  {\n\t\t\tOpcodeStack.Item item = opcodeStack.getStackItem(0);\n\t\t\tXField f = item.getXField();\n\t\t\tif (f != null) {\n\t\t\t\tnullTested.add(f);\n\t\t\t\tif (DEBUG)\n\t\t\t\tSystem.out.println(f + \" null checked in \" +\n\t\t\t\t\tgetFullyQualifiedMethodName());\n\t\t\t\t}\n\t\t\t}\n\n\t\tif (seen == GETFIELD || seen == INVOKEVIRTUAL \n\t\t\t\t|| seen == INVOKEINTERFACE\n\t\t\t\t|| seen == INVOKESPECIAL || seen == PUTFIELD \n\t\t\t\t|| seen == IALOAD || seen == AALOAD || seen == BALOAD || seen == CALOAD || seen == SALOAD\n\t\t\t\t|| seen == IASTORE || seen == AASTORE  || seen == BASTORE || seen == CASTORE || seen == SASTORE\n\t\t\t\t|| seen == ARRAYLENGTH)  {\n\t\t\tint pos = 0;\n\t\t\tswitch(seen) {\n\t\t\tcase ARRAYLENGTH:\n\t\t\tcase GETFIELD :\n\t\t\t\tpos = 0;\n\t\t\t\tbreak;\n\t\t\tcase INVOKEVIRTUAL :\n\t\t\tcase INVOKEINTERFACE:\n\t\t\tcase INVOKESPECIAL:\n\t\t\t\tString sig = getSigConstantOperand();\n\t\t\t\tpos = PreorderVisitor.getNumberArguments(sig);\n\t\t\t\tbreak;\n\t\t\tcase PUTFIELD :\n\t\t\tcase IALOAD :\n\t\t\tcase AALOAD:\n\t\t\tcase BALOAD:\n\t\t\tcase CALOAD:\n\t\t\tcase SALOAD:\n\t\t\t\tpos = 1;\n\t\t\t\tbreak;\n\t\t\tcase IASTORE :\n\t\t\tcase AASTORE:\n\t\t\tcase BASTORE:\n\t\t\tcase CASTORE:\n\t\t\tcase SASTORE:\n\t\t\t\tpos = 2;\n\t\t\t\tbreak;\n\t\t\tdefault: throw new RuntimeException(\"Impossible\");\n\t\t\t}\n\t\t\tif (opcodeStack.getStackDepth() >= pos) {\n\t\t\tOpcodeStack.Item item = opcodeStack.getStackItem(pos);\n\t\t\tXField f = item.getXField();\n\t\t\tif (DEBUG) System.out.println(\"RRR: \" + f + \" \" + nullTested.contains(f)  + \" \" + writtenInConstructorFields.contains(f) + \" \" +  writtenNonNullFields.contains(f));\n\t\t\tif (f != null && !nullTested.contains(f) \n\t\t\t\t\t&& ! (writtenInConstructorFields.contains(f)\n\t\t\t\t\t\t && writtenNonNullFields.contains(f))\n\t\t\t\t\t) {\n\t\t\t\tProgramPoint p = new ProgramPoint(this);\n\t\t\t\tHashSet <ProgramPoint> s = assumedNonNull.get(f);\n\t\t\t\tif (s == null) {\n\t\t\t\t\ts = new HashSet<ProgramPoint>();\n\t\t\t\t\tassumedNonNull.put(f,s);\n\t\t\t\t\t}\n\t\t\t\ts.add(p);\n\t\t\t\tif (DEBUG)\n\t\t\t\tSystem.out.println(f + \" assumed non-null in \" +\n\t\t\t\t\tgetFullyQualifiedMethodName());\n\t\t\t\t}\n\t\t\t}\n\t\t\t}\n\n\t\tif (seen == ALOAD_1) {\n\t\t\tcount_aload_1++;\n\t\t} else if (seen == GETFIELD || seen == GETSTATIC) {\n\t\t\tXField f = XFactory.createReferencedXField(this);\n\t\t\tif (DEBUG) System.out.println(\"get: \" + f);\n\t\t\treadFields.add(f);\n\t\t} else if (seen == PUTFIELD || seen == PUTSTATIC) {\n\t\t\tXField f = XFactory.createReferencedXField(this);\n\t\t\tOpcodeStack.Item item = null;\n\t\t\tif (opcodeStack.getStackDepth() > 0) {\n\t\t\t\titem = opcodeStack.getStackItem(0);\n\t\t\t\tif (!item.isNull()) nullTested.add(f);\n\t\t\t}\n\t\t\twrittenFields.add(f);\n\t\t\tif (previousOpcode != ACONST_NULL || previousPreviousOpcode == GOTO )  {\n\t\t\t\twrittenNonNullFields.add(f);\n\t\t\t\tif (DEBUG) System.out.println(\"put nn: \" + f);\n\t\t\t}\n\t\t\telse if (DEBUG) System.out.println(\"put: \" + f);\n\t\t\t\n\t\t\tif (\n\t\t\t\t\tgetMethodName().equals(\"<init>\") \n\t\t\t\t\t|| getMethodName().equals(\"init\") \n\t\t\t\t\t|| getMethodName().equals(\"initialize\") \n\t\t\t\t\t|| getMethodName().equals(\"<clinit>\") \n\t\t\t\t\t|| getMethod().isPrivate()) {\n\t\t\t\twrittenInConstructorFields.add(f);\n\t\t\t\tif (previousOpcode != ACONST_NULL || previousPreviousOpcode == GOTO ) \n\t\t\t\t\tassumedNonNull.remove(f);\n\t\t\t}\n\t\t\t\n\t\t\t\n\t\t}\n\t\topcodeStack.sawOpcode(this, seen);\n\t\tpreviousPreviousOpcode = previousOpcode;\n\t\tpreviousOpcode = seen;\n\t\tif (false && DEBUG) {\n\t\tSystem.out.println(\"After \" + OPCODE_NAMES[seen] + \" opcode stack is\");\n\t\tSystem.out.println(opcodeStack);\n\t\t}\n\t\t\n\t}","id":55016,"modified_method":"@Override\n         public void sawOpcode(int seen) {\n\t\t\n\t\topcodeStack.mergeJumps(this);\n\t\tif (seen == GETSTATIC) {\n\t\t\tXField f = XFactory.createReferencedXField(this);\n                \tstaticFieldsReadInThisMethod.add(f);\n\t\t\t}\n\t\telse if (seen == INVOKESTATIC) {\n\t\t\tseenInvokeStatic = true;\n\t\t\t}\n\t\telse if (seen == PUTSTATIC \n\t\t\t&& !getMethod().isStatic()) {\n\t\t\tXField f = XFactory.createReferencedXField(this);\n                \tif (!staticFieldsReadInThisMethod.contains(f)) {\n\t\t\t\tint priority = LOW_PRIORITY;\n\t\t\t\tif (!publicOrProtectedConstructor)\n\t\t\t\t\tpriority--;\n\t\t\t\tif (!seenInvokeStatic \n\t\t\t\t     && staticFieldsReadInThisMethod.isEmpty())\n\t\t\t\t\tpriority--;\n\t\t\t\tif (getThisClass().isPublic() \n\t\t\t\t\t&& getMethod().isPublic())\n\t\t\t\t\tpriority--;\n\t\t\t\tif (getThisClass().isPrivate() \n\t\t\t\t    || getMethod().isPrivate())\n\t\t\t\t\tpriority++;\n\t\t\t\tif (getClassName().indexOf('$') != -1)\n\t\t\t\t\tpriority++;\n\t\t\t\tbugReporter.reportBug(new BugInstance(this, \n\t\t\t\t\t\t\"ST_WRITE_TO_STATIC_FROM_INSTANCE_METHOD\",\n\t\t\t\t\tpriority\n\t\t\t\t\t)\n\t\t\t\t        .addClassAndMethod(this)\n\t\t\t\t        .addField(f)\n\t\t\t\t        .addSourceLine(this)\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\n\n\t\tif (seen == INVOKEVIRTUAL || seen == INVOKEINTERFACE\n\t\t\t\t|| seen == INVOKESPECIAL || seen==INVOKESTATIC )  {\n\n\t\t\tString sig = getSigConstantOperand();\n\t\t\tString invokedClassName = getClassConstantOperand();\n\t\t\tif (invokedClassName.equals(getClassName()) \n\t\t\t\t\t&& (getMethodName().equals(\"<init>\") || getMethodName().equals(\"<clinit>\"))) {\n\t\t\t\t\n\t\t\t\tcalledFromConstructors.add(getNameConstantOperand()+\":\"+sig);\n\t\t\t}\n\t\t\tint pos = PreorderVisitor.getNumberArguments(sig);\n\t\t\tif (opcodeStack.getStackDepth() > pos) {\n\t\t\t\tOpcodeStack.Item item = opcodeStack.getStackItem(pos);\n\t\t\t\tboolean superCall = seen == INVOKESPECIAL\n\t\t\t\t&&  !invokedClassName .equals(getClassName());\n\n\t\t\t\tif (DEBUG)\n\t\t\t\t\tSystem.out.println(\"In \" + getFullyQualifiedMethodName()\n\t\t\t\t\t\t\t+ \" saw call on \" + item);\n\n\n\n\t\t\t\tboolean selfCall = item.getRegisterNumber() == 0 \n\t\t\t\t&& !superCall;\n\t\t\t\tif (selfCall && getMethodName().equals(\"<init>\")) {\n\t\t\t\t\tsawSelfCallInConstructor = true;\t\n\t\t\t\t\tif (DEBUG)\n\t\t\t\t\t\tSystem.out.println(\"Saw self call in \" + getFullyQualifiedMethodName()  + \" to \" + invokedClassName + \".\" + getNameConstantOperand()\n\t\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif ((seen == IFNULL || seen == IFNONNULL) \n\t\t\t&& opcodeStack.getStackDepth() > 0)  {\n\t\t\tOpcodeStack.Item item = opcodeStack.getStackItem(0);\n\t\t\tXField f = item.getXField();\n\t\t\tif (f != null) {\n\t\t\t\tnullTested.add(f);\n\t\t\t\tif (DEBUG)\n\t\t\t\tSystem.out.println(f + \" null checked in \" +\n\t\t\t\t\tgetFullyQualifiedMethodName());\n\t\t\t\t}\n\t\t\t}\n\n\t\tif (seen == GETFIELD || seen == INVOKEVIRTUAL \n\t\t\t\t|| seen == INVOKEINTERFACE\n\t\t\t\t|| seen == INVOKESPECIAL || seen == PUTFIELD \n\t\t\t\t|| seen == IALOAD || seen == AALOAD || seen == BALOAD || seen == CALOAD || seen == SALOAD\n\t\t\t\t|| seen == IASTORE || seen == AASTORE  || seen == BASTORE || seen == CASTORE || seen == SASTORE\n\t\t\t\t|| seen == ARRAYLENGTH)  {\n\t\t\tint pos = 0;\n\t\t\tswitch(seen) {\n\t\t\tcase ARRAYLENGTH:\n\t\t\tcase GETFIELD :\n\t\t\t\tpos = 0;\n\t\t\t\tbreak;\n\t\t\tcase INVOKEVIRTUAL :\n\t\t\tcase INVOKEINTERFACE:\n\t\t\tcase INVOKESPECIAL:\n\t\t\t\tString sig = getSigConstantOperand();\n\t\t\t\tpos = PreorderVisitor.getNumberArguments(sig);\n\t\t\t\tbreak;\n\t\t\tcase PUTFIELD :\n\t\t\tcase IALOAD :\n\t\t\tcase AALOAD:\n\t\t\tcase BALOAD:\n\t\t\tcase CALOAD:\n\t\t\tcase SALOAD:\n\t\t\t\tpos = 1;\n\t\t\t\tbreak;\n\t\t\tcase IASTORE :\n\t\t\tcase AASTORE:\n\t\t\tcase BASTORE:\n\t\t\tcase CASTORE:\n\t\t\tcase SASTORE:\n\t\t\t\tpos = 2;\n\t\t\t\tbreak;\n\t\t\tdefault: throw new RuntimeException(\"Impossible\");\n\t\t\t}\n\t\t\tif (opcodeStack.getStackDepth() >= pos) {\n\t\t\tOpcodeStack.Item item = opcodeStack.getStackItem(pos);\n\t\t\tXField f = item.getXField();\n\t\t\tif (DEBUG) System.out.println(\"RRR: \" + f + \" \" + nullTested.contains(f)  + \" \" + writtenInConstructorFields.contains(f) + \" \" +  writtenNonNullFields.contains(f));\n\t\t\tif (f != null && !nullTested.contains(f) \n\t\t\t\t\t&& ! (writtenInConstructorFields.contains(f)\n\t\t\t\t\t\t && writtenNonNullFields.contains(f))\n\t\t\t\t\t) {\n\t\t\t\tProgramPoint p = new ProgramPoint(this);\n\t\t\t\tHashSet <ProgramPoint> s = assumedNonNull.get(f);\n\t\t\t\tif (s == null) {\n\t\t\t\t\ts = new HashSet<ProgramPoint>();\n\t\t\t\t\tassumedNonNull.put(f,s);\n\t\t\t\t\t}\n\t\t\t\ts.add(p);\n\t\t\t\tif (DEBUG)\n\t\t\t\tSystem.out.println(f + \" assumed non-null in \" +\n\t\t\t\t\tgetFullyQualifiedMethodName());\n\t\t\t\t}\n\t\t\t}\n\t\t\t}\n\n\t\tif (seen == ALOAD_1) {\n\t\t\tcount_aload_1++;\n\t\t} else if (seen == GETFIELD || seen == GETSTATIC) {\n\t\t\tXField f = XFactory.createReferencedXField(this);\n\t\t\tif (DEBUG) System.out.println(\"get: \" + f);\n\t\t\treadFields.add(f);\n\t\t} else if (seen == PUTFIELD || seen == PUTSTATIC) {\n\t\t\tXField f = XFactory.createReferencedXField(this);\n\t\t\tOpcodeStack.Item item = null;\n\t\t\tif (opcodeStack.getStackDepth() > 0) {\n\t\t\t\titem = opcodeStack.getStackItem(0);\n\t\t\t\tif (!item.isNull()) nullTested.add(f);\n\t\t\t}\n\t\t\twrittenFields.add(f);\n\t\t\tif (previousOpcode != ACONST_NULL || previousPreviousOpcode == GOTO )  {\n\t\t\t\twrittenNonNullFields.add(f);\n\t\t\t\tif (DEBUG) System.out.println(\"put nn: \" + f);\n\t\t\t}\n\t\t\telse if (DEBUG) System.out.println(\"put: \" + f);\n\t\t\t\n\t\t\tif ( getMethod().isStatic() == f.isStatic() && (\n\t\t\t\t\tcalledFromConstructors.contains(getMethodName()+\":\"+getMethodSig())\n\t\t\t\t\t|| getMethodName().equals(\"<init>\") \n\t\t\t\t\t|| getMethodName().equals(\"init\")  \n\t\t\t\t\t|| getMethodName().equals(\"init\")  \n\t\t\t\t\t|| getMethodName().equals(\"initialize\") \n\t\t\t\t\t|| getMethodName().equals(\"<clinit>\") \n\t\t\t\t\t|| getMethod().isPrivate())) {\n\t\t\t\twrittenInConstructorFields.add(f);\n\t\t\t\tif (previousOpcode != ACONST_NULL || previousPreviousOpcode == GOTO ) \n\t\t\t\t\tassumedNonNull.remove(f);\n\t\t\t}\n\t\t\t\n\t\t\t\n\t\t}\n\t\topcodeStack.sawOpcode(this, seen);\n\t\tpreviousPreviousOpcode = previousOpcode;\n\t\tpreviousOpcode = seen;\n\t\tif (false && DEBUG) {\n\t\tSystem.out.println(\"After \" + OPCODE_NAMES[seen] + \" opcode stack is\");\n\t\tSystem.out.println(opcodeStack);\n\t\t}\n\t\t\n\t}","commit_id":"703f66a6bf58f43f186d4b0fac384b5e352dddc6","url":"https://github.com/findbugsproject/findbugs"},{"original_method":"@Override\n         public void visit(JavaClass obj) {\n\t\thasNativeMethods = false;\n\t\tsawSelfCallInConstructor = false;\n\t\tpublicOrProtectedConstructor = false;\n\t\tisSerializable = false;\n\t\tif (getSuperclassName().indexOf(\"$\") >= 0\n\t\t        || getSuperclassName().indexOf(\"+\") >= 0) {\n\t\t\t// System.out.println(\"hicfsc: \" + betterClassName);\n\t\t\tinnerClassCannotBeStatic.add(getDottedClassName());\n\t\t\t// System.out.println(\"hicfsc: \" + betterSuperclassName);\n\t\t\tinnerClassCannotBeStatic.add(getDottedSuperclassName());\n\t\t}\n\t\t// Does this class directly implement Serializable?\n\t\tString[] interface_names = obj.getInterfaceNames();\n\t\tfor (String interface_name : interface_names) {\n\t\t\tif (interface_name.equals(\"java.io.Externalizable\")) {\n\t\t\t\tisSerializable = true;\n\t\t\t} else if (interface_name.equals(\"java.io.Serializable\")) {\n\t\t\t\tisSerializable = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\t// Does this class indirectly implement Serializable?\n\t\tif (!isSerializable) {\n\t\t\ttry {\n\t\t\t\tif (Repository.instanceOf(obj, \"java.io.Externalizable\"))\n\t\t\t\t\tisSerializable = true;\n\t\t\t\tif (Repository.instanceOf(obj, \"java.io.Serializable\"))\n\t\t\t\t\tisSerializable = true;\n\t\t\t\tif (Repository.instanceOf(obj, \"java.rmi.Remote\")) {\n\t\t\t\t\tisSerializable = true;\n\t\t\t\t}\n\t\t\t} catch (ClassNotFoundException e) {\n\t\t\t\tbugReporter.reportMissingClass(e);\n\t\t\t}\n\t\t}\n\n\t\t// System.out.println(getDottedClassName() + \" is serializable: \" + isSerializable);\n\t\tsuper.visit(obj);\n\t}","id":55017,"modified_method":"@Override\n         public void visit(JavaClass obj) {\n\t\tcalledFromConstructors.clear();\n\t\thasNativeMethods = false;\n\t\tsawSelfCallInConstructor = false;\n\t\tpublicOrProtectedConstructor = false;\n\t\tisSerializable = false;\n\t\tif (getSuperclassName().indexOf(\"$\") >= 0\n\t\t        || getSuperclassName().indexOf(\"+\") >= 0) {\n\t\t\t// System.out.println(\"hicfsc: \" + betterClassName);\n\t\t\tinnerClassCannotBeStatic.add(getDottedClassName());\n\t\t\t// System.out.println(\"hicfsc: \" + betterSuperclassName);\n\t\t\tinnerClassCannotBeStatic.add(getDottedSuperclassName());\n\t\t}\n\t\t// Does this class directly implement Serializable?\n\t\tString[] interface_names = obj.getInterfaceNames();\n\t\tfor (String interface_name : interface_names) {\n\t\t\tif (interface_name.equals(\"java.io.Externalizable\")) {\n\t\t\t\tisSerializable = true;\n\t\t\t} else if (interface_name.equals(\"java.io.Serializable\")) {\n\t\t\t\tisSerializable = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\t// Does this class indirectly implement Serializable?\n\t\tif (!isSerializable) {\n\t\t\ttry {\n\t\t\t\tif (Repository.instanceOf(obj, \"java.io.Externalizable\"))\n\t\t\t\t\tisSerializable = true;\n\t\t\t\tif (Repository.instanceOf(obj, \"java.io.Serializable\"))\n\t\t\t\t\tisSerializable = true;\n\t\t\t\tif (Repository.instanceOf(obj, \"java.rmi.Remote\")) {\n\t\t\t\t\tisSerializable = true;\n\t\t\t\t}\n\t\t\t} catch (ClassNotFoundException e) {\n\t\t\t\tbugReporter.reportMissingClass(e);\n\t\t\t}\n\t\t}\n\n\t\t// System.out.println(getDottedClassName() + \" is serializable: \" + isSerializable);\n\t\tsuper.visit(obj);\n\t}","commit_id":"703f66a6bf58f43f186d4b0fac384b5e352dddc6","url":"https://github.com/findbugsproject/findbugs"},{"original_method":"@Override\n         public void visit(Field obj) {\n\t\tsuper.visit(obj);\n\t\tXField f = XFactory.createXField(this);\n\t\tallMyFields.add(f);\n\t\tint flags = obj.getAccessFlags();\n\t\tif ((flags & doNotConsider) == 0\n\t\t        && !getFieldName().equals(\"serialVersionUID\")) {\n\n\t\t\tmyFields.add(f);\n\t\t\tif (obj.isFinal()) finalFields.add(f);\n\t\t}\n\t}","id":55018,"modified_method":"@Override\n         public void visit(Field obj) {\n\t\tsuper.visit(obj);\n\t\tXField f = XFactory.createXField(this);\n\t\tallMyFields.add(f);\n\t\tint flags = obj.getAccessFlags();\n\t\tif ((flags & doNotConsider) == 0\n\t\t        && !getFieldName().equals(\"serialVersionUID\")) {\n\n\t\t\tmyFields.add(f);\n\t\t\tif (obj.isFinal()) finalFields.add(f);\n\t\t\tif (obj.isStatic()) staticFields.add(f);\n\t\t}\n\t}","commit_id":"703f66a6bf58f43f186d4b0fac384b5e352dddc6","url":"https://github.com/findbugsproject/findbugs"},{"original_method":"@Override\n         public void visitAfter(JavaClass obj) {\n\t\tdeclaredFields.addAll(myFields);\n\t\tif (hasNativeMethods) {\n\t\t\tfieldsOfSerializableOrNativeClassed.addAll(myFields);\n\t\t\tfieldsOfNativeClassed.addAll(myFields);\n\t\t}\n\t\tif (isSerializable) {\n\t\t\tfieldsOfSerializableOrNativeClassed.addAll(myFields);\n\t\t}\n\t\tif (sawSelfCallInConstructor) \n\t\t\twrittenInConstructorFields.addAll(myFields);\n\t\tmyFields.clear();\n\t\tallMyFields.clear();\n\t}","id":55019,"modified_method":"@Override\n         public void visitAfter(JavaClass obj) {\n\t\tdeclaredFields.addAll(myFields);\n\t\tif (hasNativeMethods) {\n\t\t\tfieldsOfSerializableOrNativeClassed.addAll(myFields);\n\t\t\tfieldsOfNativeClassed.addAll(myFields);\n\t\t}\n\t\tif (isSerializable) {\n\t\t\tfieldsOfSerializableOrNativeClassed.addAll(myFields);\n\t\t}\n\t\tif (sawSelfCallInConstructor) \n\t\t\twrittenInConstructorFields.addAll(myFields);\n\t\tmyFields.clear();\n\t\tallMyFields.clear();\n\t\tcalledFromConstructors.clear();\n\t}","commit_id":"703f66a6bf58f43f186d4b0fac384b5e352dddc6","url":"https://github.com/findbugsproject/findbugs"},{"original_method":"public void visit(Method obj) {\n\t\tsawPutEntry = -10000;\n\t}","id":55020,"modified_method":"public void visit(Method obj) {\n\t\tsawPutEntry = -10000;\n\t\tstreamType = \"\";\n\t}","commit_id":"dd36a42a5846d4962c989b00d59bcbeffed9053a","url":"https://github.com/findbugsproject/findbugs"},{"original_method":"public void sawOpcode(int seen) {\n\n\n\t\tif (seen == INVOKEVIRTUAL \n\t\t\t&& getNameConstantOperand().equals(\"putNextEntry\") \n\t\t\t&& getClassConstantOperand()\n\t\t\t\t.equals(\"java/util/zip/ZipOutputStream\")) {\n\t\t\tsawPutEntry = getPC();\n\t\t\t}\n\t\telse {\n\t\t\tif (getPC() - sawPutEntry <= 7  && seen == INVOKEVIRTUAL \n\t\t\t\t&& getNameConstantOperand().equals(\"closeEntry\")\n\t\t\t&& getClassConstantOperand()\n\t\t\t\t.equals(\"java/util/zip/ZipOutputStream\") )\n                        bugReporter.reportBug(new BugInstance(\n\t\t\t\t\"AM_CREATES_EMPTY_ZIP_FILE_ENTRY\", NORMAL_PRIORITY)\n                                .addClassAndMethod(this)\n                                .addSourceLine(this));\n\n\t\t\t}\n\t\n\t\t\n\n\n\t}","id":55021,"modified_method":"public void sawOpcode(int seen) {\n\t\tif (seen == INVOKEVIRTUAL \n\t\t\t&& getNameConstantOperand().equals(\"putNextEntry\")) {\n\t\t\tstreamType = getClassConstantOperand();\n\t\t\tif (streamType.equals(\"java/util/zip/ZipOutputStream\") \n\t\t\t||  streamType.equals(\"java/util/jar/JarOutputStream\"))\n\t\t\t\tsawPutEntry = getPC();\n\t\t\telse\n\t\t\t\tstreamType = \"\";\n\t\t\t}\n\t\telse {\n\t\t\tif (getPC() - sawPutEntry <= 7  && seen == INVOKEVIRTUAL \n\t\t\t\t&& getNameConstantOperand().equals(\"closeEntry\")\n\t\t\t&& getClassConstantOperand()\n\t\t\t\t.equals(streamType) )\n                        bugReporter.reportBug(new BugInstance(\n                        \tstreamType.equals(\"java/util/zip/ZipOutputStream\") ?\n\t\t\t\t\t\t\t\t\"AM_CREATES_EMPTY_ZIP_FILE_ENTRY\" :\n\t\t\t\t\t\t\t\t\"AM_CREATES_EMPTY_JAR_FILE_ENTRY\", \n\t\t\t\t\t\t\t\tNORMAL_PRIORITY)\n                                .addClassAndMethod(this)\n                                .addSourceLine(this));\n\n\t\t\t}\n\t\n\t\t\n\n\n\t}","commit_id":"dd36a42a5846d4962c989b00d59bcbeffed9053a","url":"https://github.com/findbugsproject/findbugs"},{"original_method":"/** Stop the running query */\n    public synchronized void stopRunning(StepMetaInterface smi, StepDataInterface sdi) throws KettleException\n    {\n        meta=(DatabaseLookupMeta)smi;\n        data=(DatabaseLookupData)sdi;\n\n        if (data.db!=null && !data.isCanceled) \r\n        {\r\n        \tdata.db.cancelQuery();\r\n        \tdata.isCanceled = true;\r\n        }\n    }","id":55022,"modified_method":"/** Stop the running query */\n    public void stopRunning(StepMetaInterface smi, StepDataInterface sdi) throws KettleException\n    {\n        meta=(DatabaseLookupMeta)smi;\n        data=(DatabaseLookupData)sdi;\n\n        if (data.db!=null && !data.isCanceled) \r\n        {\r\n          synchronized(data.db) {\r\n            data.db.cancelQuery();\r\n          }\r\n        \tdata.isCanceled = true;\r\n        }\n    }","commit_id":"27e50fd91ea039ef7611f92534405ed41687a6ea","url":"https://github.com/pentaho/pentaho-kettle"},{"original_method":"/** Stop the running query */\n    public synchronized void stopRunning(StepMetaInterface smi, StepDataInterface sdi) throws KettleException\n    {\n        meta=(DynamicSQLRowMeta)smi;\n        data=(DynamicSQLRowData)sdi;\n\n        if (data.db!=null && !data.isCanceled)\n        {\n            data.db.cancelQuery();\n            setStopped(true);\n            data.isCanceled=true;\n        }\n    }","id":55023,"modified_method":"/** Stop the running query */\n    public void stopRunning(StepMetaInterface smi, StepDataInterface sdi) throws KettleException\n    {\n        meta=(DynamicSQLRowMeta)smi;\n        data=(DynamicSQLRowData)sdi;\n\n        if (data.db!=null && !data.isCanceled)\n        {\n            synchronized(data.db) {\n              data.db.cancelQuery();\n            }\n            setStopped(true);\n            data.isCanceled=true;\n        }\n    }","commit_id":"27e50fd91ea039ef7611f92534405ed41687a6ea","url":"https://github.com/pentaho/pentaho-kettle"},{"original_method":"/** Stop the running query */\n\tpublic synchronized void stopRunning(StepMetaInterface smi, StepDataInterface sdi) throws KettleException\n\t{\n\t\tmeta = (ExecSQLMeta) smi;\n\t\tdata = (ExecSQLData) sdi;\n\n\t\tif (data.db != null && !data.isCanceled)\r\n\t\t{\n\t\t\tdata.db.cancelQuery();\r\n\t\t\tdata.isCanceled = true;\r\n\t\t}\n\t}","id":55024,"modified_method":"/** Stop the running query */\n\tpublic void stopRunning(StepMetaInterface smi, StepDataInterface sdi) throws KettleException\n\t{\n\t\tmeta = (ExecSQLMeta) smi;\n\t\tdata = (ExecSQLData) sdi;\n\n\t\tif (data.db != null && !data.isCanceled)\r\n\t\t{\r\n\t\t  synchronized(data.db) {\n\t\t    data.db.cancelQuery();\r\n\t\t  }\r\n\t\t\tdata.isCanceled = true;\r\n\t\t}\n\t}","commit_id":"27e50fd91ea039ef7611f92534405ed41687a6ea","url":"https://github.com/pentaho/pentaho-kettle"},{"original_method":"private synchronized RowMetaAndData readStartDate() throws KettleException\n    {\n\t\tif (log.isDetailed()) logDetailed(\"Reading from step [\" + meta.getLookupStepname() + \"]\");\n\n        RowMetaInterface parametersMeta = new RowMeta();\n        Object[] parametersData = new Object[] {};\n\n        RowSet rowSet = findInputRowSet(meta.getLookupStepname());\r\n        if (rowSet!=null) \r\n        {\n\t        Object[] rowData = getRowFrom(rowSet); // rows are originating from \"lookup_from\"\n\t        while (rowData!=null)\n\t        {\n\t            parametersData = RowDataUtil.addRowData(parametersData, parametersMeta.size(), rowData);\n\t            parametersMeta.addRowMeta(rowSet.getRowMeta());\n\t            \n\t            rowData = getRowFrom(rowSet); // take all input rows if needed!\n\t        }\n\t        \n\t        if (parametersMeta.size()==0)\n\t        {\n\t            throw new KettleException(\"Expected to read parameters from step [\"+meta.getLookupStepname()+\"] but none were found.\");\n\t        }\r\n        }\r\n        else\r\n        {\r\n            throw new KettleException(\"Unable to find rowset to read from, perhaps step [\"+meta.getLookupStepname()+\"] doesn't exist. (or perhaps you are trying a preview?)\");\r\n        }\n\t\n        RowMetaAndData parameters = new RowMetaAndData(parametersMeta, parametersData);\n\n        return parameters;\n    }","id":55025,"modified_method":"private RowMetaAndData readStartDate() throws KettleException\n    {\n\t\tif (log.isDetailed()) logDetailed(\"Reading from step [\" + meta.getLookupStepname() + \"]\");\n\n        RowMetaInterface parametersMeta = new RowMeta();\n        Object[] parametersData = new Object[] {};\n\n        RowSet rowSet = findInputRowSet(meta.getLookupStepname());\r\n        if (rowSet!=null) \r\n        {\n\t        Object[] rowData = getRowFrom(rowSet); // rows are originating from \"lookup_from\"\n\t        while (rowData!=null)\n\t        {\n\t            parametersData = RowDataUtil.addRowData(parametersData, parametersMeta.size(), rowData);\n\t            parametersMeta.addRowMeta(rowSet.getRowMeta());\n\t            \n\t            rowData = getRowFrom(rowSet); // take all input rows if needed!\n\t        }\n\t        \n\t        if (parametersMeta.size()==0)\n\t        {\n\t            throw new KettleException(\"Expected to read parameters from step [\"+meta.getLookupStepname()+\"] but none were found.\");\n\t        }\r\n        }\r\n        else\r\n        {\r\n            throw new KettleException(\"Unable to find rowset to read from, perhaps step [\"+meta.getLookupStepname()+\"] doesn't exist. (or perhaps you are trying a preview?)\");\r\n        }\n\t\n        RowMetaAndData parameters = new RowMetaAndData(parametersMeta, parametersData);\n\n        return parameters;\n    }","commit_id":"27e50fd91ea039ef7611f92534405ed41687a6ea","url":"https://github.com/pentaho/pentaho-kettle"},{"original_method":"/** Stop the running query */\n\tpublic synchronized void stopRunning(StepMetaInterface smi, StepDataInterface sdi) throws KettleException\n\t{\n        meta=(TableInputMeta)smi;\n        data=(TableInputData)sdi;\n\n        setStopped(true);\n        \n        if (data.db!=null && !data.isCanceled)\r\n        {\r\n        \tdata.db.cancelQuery();\r\n        \tdata.isCanceled=true;\r\n        }\n\t}","id":55026,"modified_method":"/** Stop the running query */\n\tpublic void stopRunning(StepMetaInterface smi, StepDataInterface sdi) throws KettleException\n\t{\n        meta=(TableInputMeta)smi;\n        data=(TableInputData)sdi;\n\n        setStopped(true);\n        \n        if (data.db!=null && !data.isCanceled)\r\n        {\r\n          synchronized(data.db) { \r\n            data.db.cancelQuery();\r\n          }\r\n        \tdata.isCanceled=true;\r\n        }\n\t}","commit_id":"27e50fd91ea039ef7611f92534405ed41687a6ea","url":"https://github.com/pentaho/pentaho-kettle"},{"original_method":"protected void doProcessEvent(\n\t\t\tEventRequest eventRequest, EventResponse eventResponse)\n\t\tthrows Exception {\n\n\t\tWSRPConsumerPortlet wsrpConsumerPortlet = getWSRPConsumerPortlet();\n\n\t\tWSRPConsumer wsrpConsumer =\n\t\t\tWSRPConsumerLocalServiceUtil.getWSRPConsumer(\n\t\t\t\twsrpConsumerPortlet.getWsrpConsumerId());\n\n\t\tString userToken = WSRPConsumerManager.getUserToken(eventRequest);\n\n\t\tWSRPConsumerManager wsrpConsumerManager =\n\t\t\tWSRPConsumerManagerFactory.getWSRPConsumerManager(\n\t\t\t\twsrpConsumer, userToken);\n\n\t\tEventParams eventParams = new EventParams();\n\t\tMarkupParams markupParams = new MarkupParams();\n\t\tPortletContext portletContext = new PortletContext();\n\t\tRuntimeContext runtimeContext = new RuntimeContext();\n\t\tUserContext userContext = new UserContext();\n\n\t\tinitContexts(\n\t\t\teventRequest, eventResponse, wsrpConsumerPortlet,\n\t\t\twsrpConsumerManager, eventParams, markupParams, portletContext,\n\t\t\truntimeContext, userContext);\n\n\t\tHandleEvents handleEvents = new HandleEvents();\n\n\t\thandleEvents.setEventParams(eventParams);\n\t\thandleEvents.setMarkupParams(markupParams);\n\t\thandleEvents.setPortletContext(portletContext);\n\t\thandleEvents.setRegistrationContext(\n\t\t\twsrpConsumer.getRegistrationContext());\n\t\thandleEvents.setRuntimeContext(runtimeContext);\n\t\thandleEvents.setUserContext(userContext);\n\n\t\tWSRP_v2_Markup_PortType markupService = getMarkupService(\n\t\t\teventRequest, wsrpConsumerManager, wsrpConsumer);\n\n\t\tHandleEventsResponse handleEventsResponse =\n\t\t\tmarkupService.handleEvents(handleEvents);\n\n\t\tprocessHandleEventsResponse(\n\t\t\teventRequest, eventResponse, wsrpConsumerManager,\n\t\t\thandleEventsResponse);\n\t}","id":55027,"modified_method":"protected void doProcessEvent(\n\t\t\tEventRequest eventRequest, EventResponse eventResponse)\n\t\tthrows Exception {\n\n\t\tWSRPConsumerPortlet wsrpConsumerPortlet = getWSRPConsumerPortlet();\n\n\t\tWSRPConsumer wsrpConsumer =\n\t\t\tWSRPConsumerLocalServiceUtil.getWSRPConsumer(\n\t\t\t\twsrpConsumerPortlet.getWsrpConsumerId());\n\n\t\tString userToken = WSRPConsumerManager.getUserToken(eventRequest);\n\n\t\tWSRPConsumerManager wsrpConsumerManager =\n\t\t\tWSRPConsumerManagerFactory.getWSRPConsumerManager(\n\t\t\t\twsrpConsumer, userToken);\n\n\t\tEventParams eventParams = new EventParams();\n\t\tMarkupParams markupParams = new MarkupParams();\n\t\tPortletContext portletContext = new PortletContext();\n\t\tRuntimeContext runtimeContext = new RuntimeContext();\n\t\tUserContext userContext = new UserContext();\n\n\t\tinitContexts(\n\t\t\teventRequest, eventResponse, wsrpConsumerPortlet,\n\t\t\twsrpConsumerManager, eventParams, markupParams, portletContext,\n\t\t\truntimeContext, userContext);\n\n\t\tHandleEvents handleEvents = new HandleEvents();\n\n\t\thandleEvents.setEventParams(eventParams);\n\t\thandleEvents.setMarkupParams(markupParams);\n\t\thandleEvents.setPortletContext(portletContext);\n\t\thandleEvents.setRegistrationContext(\n\t\t\twsrpConsumer.getRegistrationContext());\n\t\thandleEvents.setRuntimeContext(runtimeContext);\n\t\thandleEvents.setUserContext(userContext);\n\n\t\tServiceHolder serviceHolder = getServiceHolder(\n\t\t\teventRequest, wsrpConsumerManager, wsrpConsumer);\n\n\t\tWSRP_v2_Markup_PortType markupService =\n\t\t\tserviceHolder.getMarkupService();\n\n\t\tHandleEventsResponse handleEventsResponse =\n\t\t\tmarkupService.handleEvents(handleEvents);\n\n\t\tprocessHandleEventsResponse(\n\t\t\teventRequest, eventResponse, wsrpConsumerManager, serviceHolder,\n\t\t\thandleEventsResponse);\n\t}","commit_id":"51ead1399f14ddcb90d2b248fcfb76b9bb6d9667","url":"https://github.com/liferay/liferay-plugins"},{"original_method":"protected void processMarkupResponse(\n\t\tPortletRequest portletRequest, PortletResponse portletResponse,\n\t\tMarkupResponse markupResponse) {\n\n\t\tPortletSession portletSession = portletRequest.getPortletSession();\n\n\t\tSessionContext sessionContext = markupResponse.getSessionContext();\n\n\t\tif (sessionContext != null) {\n\t\t\tportletSession.setAttribute(\n\t\t\t\tWebKeys.SESSION_CONTEXT, sessionContext);\n\t\t}\n\t}","id":55028,"modified_method":"protected void processMarkupResponse(\n\t\tPortletRequest portletRequest, PortletResponse portletResponse,\n\t\tServiceHolder serviceHolder, MarkupResponse markupResponse) {\n\n\t\tPortletSession portletSession = portletRequest.getPortletSession();\n\n\t\tSessionContext sessionContext = markupResponse.getSessionContext();\n\n\t\tupdateSessionContext(portletSession, serviceHolder, sessionContext);\n\t}","commit_id":"51ead1399f14ddcb90d2b248fcfb76b9bb6d9667","url":"https://github.com/liferay/liferay-plugins"},{"original_method":"protected void processUpdateResponse(\n\t\t\tPortletRequest portletRequest,\n\t\t\tStateAwareResponse stateAwareResponse,\n\t\t\tWSRPConsumerManager wsrpConsumerManager,\n\t\t\tUpdateResponse updateResponse)\n\t\tthrows Exception {\n\n\t\tPortletSession portletSession = portletRequest.getPortletSession();\n\n\t\tif (updateResponse == null) {\n\t\t\treturn;\n\t\t}\n\n\t\tportletSession.setAttribute(\n\t\t\tWebKeys.MARKUP_CONTEXT, updateResponse.getMarkupContext());\n\n\t\tNavigationalContext navigationalContext =\n\t\t\tupdateResponse.getNavigationalContext();\n\n\t\tif (navigationalContext != null) {\n\t\t\tString opaqueValue = navigationalContext.getOpaqueValue();\n\n\t\t\tif (Validator.isNotNull(opaqueValue)) {\n\t\t\t\tbyte[] opaqueValueBytes = opaqueValue.getBytes(StringPool.UTF8);\n\n\t\t\t\topaqueValue = Base64.toURLSafe(Base64.encode(opaqueValueBytes));\n\n\t\t\t\tstateAwareResponse.setRenderParameter(\n\t\t\t\t\t\"wsrp-navigationalState\", opaqueValue);\n\t\t\t}\n\n\t\t\tNamedString[] publicValues = navigationalContext.getPublicValues();\n\n\t\t\tif (publicValues != null) {\n\t\t\t\tfor (NamedString publicValue : publicValues) {\n\t\t\t\t\tString name = publicValue.getName();\n\t\t\t\t\tString value = publicValue.getValue();\n\n\t\t\t\t\tif (Validator.isNotNull(value)) {\n\t\t\t\t\t\tstateAwareResponse.setRenderParameter(name, value);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tstateAwareResponse.removePublicRenderParameter(name);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tPortletContext portletContext = updateResponse.getPortletContext();\n\n\t\tif (portletContext != null) {\n\t\t\tportletSession.setAttribute(\n\t\t\t\tWebKeys.PORTLET_CONTEXT, portletContext);\n\t\t}\n\n\t\tSessionContext sessionContext = updateResponse.getSessionContext();\n\n\t\tif (sessionContext != null) {\n\t\t\tportletSession.setAttribute(\n\t\t\t\tWebKeys.SESSION_CONTEXT, sessionContext);\n\t\t}\n\n\t\tString portletMode = updateResponse.getNewMode();\n\n\t\tif (Validator.isNotNull(portletMode)) {\n\t\t\tstateAwareResponse.setPortletMode(getPortletMode(portletMode));\n\t\t}\n\n\t\tString windowState = updateResponse.getNewWindowState();\n\n\t\tif (Validator.isNotNull(windowState)) {\n\t\t\tstateAwareResponse.setWindowState(getWindowState(windowState));\n\t\t}\n\n\t\tEvent[] events = updateResponse.getEvents();\n\n\t\tif (events != null) {\n\t\t\tfor (Event event : events) {\n\t\t\t\tQName qName = wsrpConsumerManager.getEventQName(\n\t\t\t\t\tevent.getName());\n\n\t\t\t\tevent.setName(qName);\n\n\t\t\t\tstateAwareResponse.setEvent(qName, event);\n\t\t\t}\n\t\t}\n\t}","id":55029,"modified_method":"protected void processUpdateResponse(\n\t\t\tPortletRequest portletRequest,\n\t\t\tStateAwareResponse stateAwareResponse,\n\t\t\tWSRPConsumerManager wsrpConsumerManager,\n\t\t\tServiceHolder serviceHolder, UpdateResponse updateResponse)\n\t\tthrows Exception {\n\n\t\tPortletSession portletSession = portletRequest.getPortletSession();\n\n\t\tif (updateResponse == null) {\n\t\t\treturn;\n\t\t}\n\n\t\tportletSession.setAttribute(\n\t\t\tWebKeys.MARKUP_CONTEXT, updateResponse.getMarkupContext());\n\n\t\tNavigationalContext navigationalContext =\n\t\t\tupdateResponse.getNavigationalContext();\n\n\t\tif (navigationalContext != null) {\n\t\t\tString opaqueValue = navigationalContext.getOpaqueValue();\n\n\t\t\tif (Validator.isNotNull(opaqueValue)) {\n\t\t\t\tbyte[] opaqueValueBytes = opaqueValue.getBytes(StringPool.UTF8);\n\n\t\t\t\topaqueValue = Base64.toURLSafe(Base64.encode(opaqueValueBytes));\n\n\t\t\t\tstateAwareResponse.setRenderParameter(\n\t\t\t\t\t\"wsrp-navigationalState\", opaqueValue);\n\t\t\t}\n\n\t\t\tNamedString[] publicValues = navigationalContext.getPublicValues();\n\n\t\t\tif (publicValues != null) {\n\t\t\t\tfor (NamedString publicValue : publicValues) {\n\t\t\t\t\tString name = publicValue.getName();\n\t\t\t\t\tString value = publicValue.getValue();\n\n\t\t\t\t\tif (Validator.isNotNull(value)) {\n\t\t\t\t\t\tstateAwareResponse.setRenderParameter(name, value);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tstateAwareResponse.removePublicRenderParameter(name);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tPortletContext portletContext = updateResponse.getPortletContext();\n\n\t\tif (portletContext != null) {\n\t\t\tportletSession.setAttribute(\n\t\t\t\tWebKeys.PORTLET_CONTEXT, portletContext);\n\t\t}\n\n\t\tSessionContext sessionContext = updateResponse.getSessionContext();\n\n\t\tupdateSessionContext(portletSession, serviceHolder, sessionContext);\n\n\t\tString portletMode = updateResponse.getNewMode();\n\n\t\tif (Validator.isNotNull(portletMode)) {\n\t\t\tstateAwareResponse.setPortletMode(getPortletMode(portletMode));\n\t\t}\n\n\t\tString windowState = updateResponse.getNewWindowState();\n\n\t\tif (Validator.isNotNull(windowState)) {\n\t\t\tstateAwareResponse.setWindowState(getWindowState(windowState));\n\t\t}\n\n\t\tEvent[] events = updateResponse.getEvents();\n\n\t\tif (events != null) {\n\t\t\tfor (Event event : events) {\n\t\t\t\tQName qName = wsrpConsumerManager.getEventQName(\n\t\t\t\t\tevent.getName());\n\n\t\t\t\tevent.setName(qName);\n\n\t\t\t\tstateAwareResponse.setEvent(qName, event);\n\t\t\t}\n\t\t}\n\t}","commit_id":"51ead1399f14ddcb90d2b248fcfb76b9bb6d9667","url":"https://github.com/liferay/liferay-plugins"},{"original_method":"protected WSRP_v2_Markup_PortType getMarkupService(\n\t\t\tPortletRequest portletRequest,\n\t\t\tWSRPConsumerManager wsrpConsumerManager, WSRPConsumer wsrpConsumer)\n\t\tthrows Exception {\n\n\t\tPortletSession portletSession = portletRequest.getPortletSession();\n\n\t\tString markupServiceKey = getSessionKey(\n\t\t\tWebKeys.MARKUP_SERVICE, portletRequest, wsrpConsumer);\n\n\t\tTransientValue<WSRP_v2_Markup_PortType> markupServiceTransientValue =\n\t\t\t(TransientValue<WSRP_v2_Markup_PortType>)\n\t\t\t\tportletSession.getAttribute(\n\t\t\t\t\tmarkupServiceKey, PortletSession.APPLICATION_SCOPE);\n\n\t\tif ((markupServiceTransientValue == null) ||\n\t\t\t(markupServiceTransientValue.isNull())) {\n\n\t\t\tWSRP_v2_Markup_PortType markupService =\n\t\t\t\twsrpConsumerManager.getMarkupService();\n\n\t\t\tmarkupServiceTransientValue =\n\t\t\t\tnew TransientValue<WSRP_v2_Markup_PortType>(markupService);\n\n\t\t\tServiceDescription serviceDescription =\n\t\t\t\twsrpConsumerManager.getServiceDescription();\n\n\t\t\tString cookieKey = getSessionKey(\n\t\t\t\tWebKeys.COOKIE, portletRequest, wsrpConsumer);\n\n\t\t\tString cookie = (String)portletSession.getAttribute(\n\t\t\t\tcookieKey, PortletSession.APPLICATION_SCOPE);\n\n\t\t\tCookieProtocol cookieProtocol =\n\t\t\t\tserviceDescription.getRequiresInitCookie();\n\n\t\t\tif ((cookie == null) &&\n\t\t\t\t(cookieProtocol != null)) {\n\n\t\t\t\tString cookieProtocolValue = cookieProtocol.getValue();\n\n\t\t\t\tif (cookieProtocolValue.equals(CookieProtocol._perGroup) ||\n\t\t\t\t\tcookieProtocolValue.equals(CookieProtocol._perUser)) {\n\n\t\t\t\t\tInitCookie initCookie = new InitCookie();\n\n\t\t\t\t\tinitCookie.setRegistrationContext(\n\t\t\t\t\t\twsrpConsumer.getRegistrationContext());\n\n\t\t\t\t\tmarkupService.initCookie(initCookie);\n\n\t\t\t\t\tcookie = WSRPHTTPSender.getCurrentCookie();\n\n\t\t\t\t\tportletSession.setAttribute(\n\t\t\t\t\t\tcookieKey, cookie, PortletSession.APPLICATION_SCOPE);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tportletSession.setAttribute(\n\t\t\t\tmarkupServiceKey, markupServiceTransientValue,\n\t\t\t\tPortletSession.APPLICATION_SCOPE);\n\t\t}\n\n\t\treturn markupServiceTransientValue.getValue();\n\t}","id":55030,"modified_method":"protected ServiceHolder getServiceHolder(\n\t\t\tPortletRequest portletRequest,\n\t\t\tWSRPConsumerManager wsrpConsumerManager, WSRPConsumer wsrpConsumer)\n\t\tthrows Exception {\n\n\t\tPortletSession portletSession = portletRequest.getPortletSession();\n\n\t\tString markupServiceKey = getSessionKey(\n\t\t\tWebKeys.MARKUP_SERVICE, portletRequest, wsrpConsumer);\n\n\t\tTransientValue<ServiceHolder> serviceHolderTransientValue =\n\t\t\t(TransientValue<ServiceHolder>)\n\t\t\t\tportletSession.getAttribute(\n\t\t\t\t\tmarkupServiceKey, PortletSession.APPLICATION_SCOPE);\n\n\t\tif ((serviceHolderTransientValue == null) ||\n\t\t\t(serviceHolderTransientValue.isNull())) {\n\n\t\t\tWSRP_v2_Markup_PortType markupService =\n\t\t\t\twsrpConsumerManager.getMarkupService();\n\n\t\t\tServiceHolder serviceHolder = new ServiceHolder();\n\n\t\t\tserviceHolder.setMarkupService(markupService);\n\n\t\t\tRegistrationContext registrationContext =\n\t\t\t\twsrpConsumer.getRegistrationContext();\n\n\t\t\tserviceHolder.setRegistrationContext(registrationContext);\n\n\t\t\tserviceHolderTransientValue =\n\t\t\t\tnew TransientValue<ServiceHolder>(serviceHolder);\n\n\t\t\tportletSession.setAttribute(\n\t\t\t\tmarkupServiceKey, serviceHolderTransientValue,\n\t\t\t\tPortletSession.APPLICATION_SCOPE);\n\n\t\t\tServiceDescription serviceDescription =\n\t\t\t\twsrpConsumerManager.getServiceDescription();\n\n\t\t\tString cookieKey = getSessionKey(\n\t\t\t\tWebKeys.COOKIE, portletRequest, wsrpConsumer);\n\n\t\t\tString cookie = (String)portletSession.getAttribute(\n\t\t\t\tcookieKey, PortletSession.APPLICATION_SCOPE);\n\n\t\t\tCookieProtocol cookieProtocol =\n\t\t\t\tserviceDescription.getRequiresInitCookie();\n\n\t\t\tif ((cookie == null) &&\n\t\t\t\t(cookieProtocol != null)) {\n\n\t\t\t\tString cookieProtocolValue = cookieProtocol.getValue();\n\n\t\t\t\tif (cookieProtocolValue.equals(CookieProtocol._perGroup) ||\n\t\t\t\t\tcookieProtocolValue.equals(CookieProtocol._perUser)) {\n\n\t\t\t\t\tInitCookie initCookie = new InitCookie();\n\n\t\t\t\t\tinitCookie.setRegistrationContext(registrationContext);\n\n\t\t\t\t\tmarkupService.initCookie(initCookie);\n\n\t\t\t\t\tcookie = WSRPHTTPSender.getCurrentCookie();\n\n\t\t\t\t\tportletSession.setAttribute(\n\t\t\t\t\t\tcookieKey, cookie, PortletSession.APPLICATION_SCOPE);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn serviceHolderTransientValue.getValue();\n\t}","commit_id":"51ead1399f14ddcb90d2b248fcfb76b9bb6d9667","url":"https://github.com/liferay/liferay-plugins"},{"original_method":"protected MarkupResponse getMarkupResponse(\n\t\t\tPortletRequest portletRequest, PortletResponse portletResponse)\n\t\tthrows Exception {\n\n\t\tPortletSession portletSession = portletRequest.getPortletSession();\n\n\t\tWSRPConsumerPortlet wsrpConsumerPortlet = getWSRPConsumerPortlet();\n\n\t\tWSRPConsumer wsrpConsumer =\n\t\t\tWSRPConsumerLocalServiceUtil.getWSRPConsumer(\n\t\t\t\twsrpConsumerPortlet.getWsrpConsumerId());\n\n\t\tString userToken = WSRPConsumerManager.getUserToken(portletRequest);\n\n\t\tWSRPConsumerManager wsrpConsumerManager =\n\t\t\tWSRPConsumerManagerFactory.getWSRPConsumerManager(\n\t\t\t\twsrpConsumer, userToken);\n\n\t\tMarkupParams markupParams = new MarkupParams();\n\t\tPortletContext portletContext = new PortletContext();\n\t\tRuntimeContext runtimeContext = new RuntimeContext();\n\t\tUserContext userContext = new UserContext();\n\n\t\tinitContexts(\n\t\t\tportletRequest, portletResponse, wsrpConsumerPortlet,\n\t\t\twsrpConsumerManager, markupParams, portletContext, runtimeContext,\n\t\t\tuserContext);\n\n\t\tGetMarkup getMarkup = new GetMarkup();\n\n\t\tgetMarkup.setMarkupParams(markupParams);\n\n\t\tPortletContext existingPortletContext =\n\t\t\t(PortletContext)portletSession.getAttribute(\n\t\t\t\tWebKeys.PORTLET_CONTEXT);\n\n\t\tif (existingPortletContext != null) {\n\t\t\tgetMarkup.setPortletContext(existingPortletContext);\n\t\t}\n\t\telse {\n\t\t\tgetMarkup.setPortletContext(portletContext);\n\t\t}\n\n\t\tgetMarkup.setRegistrationContext(wsrpConsumer.getRegistrationContext());\n\t\tgetMarkup.setRuntimeContext(runtimeContext);\n\t\tgetMarkup.setUserContext(userContext);\n\n\t\tWSRP_v2_Markup_PortType markupService = getMarkupService(\n\t\t\tportletRequest, wsrpConsumerManager, wsrpConsumer);\n\n\t\tMarkupResponse markupResponse = null;\n\n\t\ttry {\n\t\t\tmarkupResponse = markupService.getMarkup(getMarkup);\n\t\t}\n\t\tcatch (InvalidCookieFault icf) {\n\t\t\tInitCookie initCookie = new InitCookie();\n\n\t\t\tmarkupService.initCookie(initCookie);\n\n\t\t\tmarkupResponse = markupService.getMarkup(getMarkup);\n\t\t}\n\n\t\tprocessMarkupResponse(portletRequest, portletResponse, markupResponse);\n\n\t\treturn markupResponse;\n\t}","id":55031,"modified_method":"protected MarkupResponse getMarkupResponse(\n\t\t\tPortletRequest portletRequest, PortletResponse portletResponse)\n\t\tthrows Exception {\n\n\t\tPortletSession portletSession = portletRequest.getPortletSession();\n\n\t\tWSRPConsumerPortlet wsrpConsumerPortlet = getWSRPConsumerPortlet();\n\n\t\tWSRPConsumer wsrpConsumer =\n\t\t\tWSRPConsumerLocalServiceUtil.getWSRPConsumer(\n\t\t\t\twsrpConsumerPortlet.getWsrpConsumerId());\n\n\t\tString userToken = WSRPConsumerManager.getUserToken(portletRequest);\n\n\t\tWSRPConsumerManager wsrpConsumerManager =\n\t\t\tWSRPConsumerManagerFactory.getWSRPConsumerManager(\n\t\t\t\twsrpConsumer, userToken);\n\n\t\tMarkupParams markupParams = new MarkupParams();\n\t\tPortletContext portletContext = new PortletContext();\n\t\tRuntimeContext runtimeContext = new RuntimeContext();\n\t\tUserContext userContext = new UserContext();\n\n\t\tinitContexts(\n\t\t\tportletRequest, portletResponse, wsrpConsumerPortlet,\n\t\t\twsrpConsumerManager, markupParams, portletContext, runtimeContext,\n\t\t\tuserContext);\n\n\t\tGetMarkup getMarkup = new GetMarkup();\n\n\t\tgetMarkup.setMarkupParams(markupParams);\n\n\t\tPortletContext existingPortletContext =\n\t\t\t(PortletContext)portletSession.getAttribute(\n\t\t\t\tWebKeys.PORTLET_CONTEXT);\n\n\t\tif (existingPortletContext != null) {\n\t\t\tgetMarkup.setPortletContext(existingPortletContext);\n\t\t}\n\t\telse {\n\t\t\tgetMarkup.setPortletContext(portletContext);\n\t\t}\n\n\t\tgetMarkup.setRegistrationContext(wsrpConsumer.getRegistrationContext());\n\t\tgetMarkup.setRuntimeContext(runtimeContext);\n\t\tgetMarkup.setUserContext(userContext);\n\n\t\tServiceHolder serviceHolder = getServiceHolder(\n\t\t\tportletRequest, wsrpConsumerManager, wsrpConsumer);\n\n\t\tWSRP_v2_Markup_PortType markupService =\n\t\t\tserviceHolder.getMarkupService();\n\n\t\tMarkupResponse markupResponse = null;\n\n\t\ttry {\n\t\t\tmarkupResponse = markupService.getMarkup(getMarkup);\n\t\t}\n\t\tcatch (InvalidCookieFault icf) {\n\t\t\tInitCookie initCookie = new InitCookie();\n\n\t\t\tmarkupService.initCookie(initCookie);\n\n\t\t\tmarkupResponse = markupService.getMarkup(getMarkup);\n\t\t}\n\n\t\tprocessMarkupResponse(\n\t\t\tportletRequest, portletResponse, serviceHolder, markupResponse);\n\n\t\treturn markupResponse;\n\t}","commit_id":"51ead1399f14ddcb90d2b248fcfb76b9bb6d9667","url":"https://github.com/liferay/liferay-plugins"},{"original_method":"protected void processBlockingInteractionResponse(\n\t\t\tActionRequest actionRequest, ActionResponse actionResponse,\n\t\t\tWSRPConsumerManager wsrpConsumerManager,\n\t\t\tBlockingInteractionResponse blockingInteractionResponse)\n\t\tthrows Exception {\n\n\t\tString redirectURL = blockingInteractionResponse.getRedirectURL();\n\n\t\tif (Validator.isNotNull(redirectURL)) {\n\t\t\tsendRedirect(actionRequest, actionResponse, redirectURL);\n\n\t\t\treturn;\n\t\t}\n\n\t\tprocessUpdateResponse(\n\t\t\tactionRequest, actionResponse, wsrpConsumerManager,\n\t\t\tblockingInteractionResponse.getUpdateResponse());\n\t}","id":55032,"modified_method":"protected void processBlockingInteractionResponse(\n\t\t\tActionRequest actionRequest, ActionResponse actionResponse,\n\t\t\tWSRPConsumerManager wsrpConsumerManager,\n\t\t\tServiceHolder serviceHolder,\n\t\t\tBlockingInteractionResponse blockingInteractionResponse)\n\t\tthrows Exception {\n\n\t\tString redirectURL = blockingInteractionResponse.getRedirectURL();\n\n\t\tif (Validator.isNotNull(redirectURL)) {\n\t\t\tsendRedirect(actionRequest, actionResponse, redirectURL);\n\n\t\t\treturn;\n\t\t}\n\n\t\tprocessUpdateResponse(\n\t\t\tactionRequest, actionResponse, wsrpConsumerManager, serviceHolder,\n\t\t\tblockingInteractionResponse.getUpdateResponse());\n\t}","commit_id":"51ead1399f14ddcb90d2b248fcfb76b9bb6d9667","url":"https://github.com/liferay/liferay-plugins"},{"original_method":"protected void doProcessAction(\n\t\t\tActionRequest actionRequest, ActionResponse actionResponse)\n\t\tthrows Exception {\n\n\t\tWSRPConsumerPortlet wsrpConsumerPortlet = getWSRPConsumerPortlet();\n\n\t\tWSRPConsumer wsrpConsumer =\n\t\t\tWSRPConsumerLocalServiceUtil.getWSRPConsumer(\n\t\t\t\twsrpConsumerPortlet.getWsrpConsumerId());\n\n\t\tString userToken = WSRPConsumerManager.getUserToken(actionRequest);\n\n\t\tWSRPConsumerManager wsrpConsumerManager =\n\t\t\tWSRPConsumerManagerFactory.getWSRPConsumerManager(\n\t\t\t\twsrpConsumer, userToken);\n\n\t\tInteractionParams interactionParams = new InteractionParams();\n\t\tMarkupParams markupParams = new MarkupParams();\n\t\tPortletContext portletContext = new PortletContext();\n\t\tRuntimeContext runtimeContext = new RuntimeContext();\n\t\tUserContext userContext = new UserContext();\n\n\t\tinitContexts(\n\t\t\tactionRequest, actionResponse, wsrpConsumerPortlet,\n\t\t\twsrpConsumerManager, interactionParams, markupParams,\n\t\t\tportletContext, runtimeContext, userContext);\n\n\t\tPerformBlockingInteraction performBlockingInteraction =\n\t\t\tnew PerformBlockingInteraction();\n\n\t\tperformBlockingInteraction.setInteractionParams(interactionParams);\n\t\tperformBlockingInteraction.setMarkupParams(markupParams);\n\t\tperformBlockingInteraction.setPortletContext(portletContext);\n\t\tperformBlockingInteraction.setRegistrationContext(\n\t\t\twsrpConsumer.getRegistrationContext());\n\t\tperformBlockingInteraction.setRuntimeContext(runtimeContext);\n\t\tperformBlockingInteraction.setUserContext(userContext);\n\n\t\tWSRP_v2_Markup_PortType markupService = getMarkupService(\n\t\t\tactionRequest, wsrpConsumerManager, wsrpConsumer);\n\n\t\tBlockingInteractionResponse blockingInteractionResponse =\n\t\t\tmarkupService.performBlockingInteraction(\n\t\t\t\tperformBlockingInteraction);\n\n\t\tprocessBlockingInteractionResponse(\n\t\t\tactionRequest, actionResponse, wsrpConsumerManager,\n\t\t\tblockingInteractionResponse);\n\t}","id":55033,"modified_method":"protected void doProcessAction(\n\t\t\tActionRequest actionRequest, ActionResponse actionResponse)\n\t\tthrows Exception {\n\n\t\tWSRPConsumerPortlet wsrpConsumerPortlet = getWSRPConsumerPortlet();\n\n\t\tWSRPConsumer wsrpConsumer =\n\t\t\tWSRPConsumerLocalServiceUtil.getWSRPConsumer(\n\t\t\t\twsrpConsumerPortlet.getWsrpConsumerId());\n\n\t\tString userToken = WSRPConsumerManager.getUserToken(actionRequest);\n\n\t\tWSRPConsumerManager wsrpConsumerManager =\n\t\t\tWSRPConsumerManagerFactory.getWSRPConsumerManager(\n\t\t\t\twsrpConsumer, userToken);\n\n\t\tInteractionParams interactionParams = new InteractionParams();\n\t\tMarkupParams markupParams = new MarkupParams();\n\t\tPortletContext portletContext = new PortletContext();\n\t\tRuntimeContext runtimeContext = new RuntimeContext();\n\t\tUserContext userContext = new UserContext();\n\n\t\tinitContexts(\n\t\t\tactionRequest, actionResponse, wsrpConsumerPortlet,\n\t\t\twsrpConsumerManager, interactionParams, markupParams,\n\t\t\tportletContext, runtimeContext, userContext);\n\n\t\tPerformBlockingInteraction performBlockingInteraction =\n\t\t\tnew PerformBlockingInteraction();\n\n\t\tperformBlockingInteraction.setInteractionParams(interactionParams);\n\t\tperformBlockingInteraction.setMarkupParams(markupParams);\n\t\tperformBlockingInteraction.setPortletContext(portletContext);\n\t\tperformBlockingInteraction.setRegistrationContext(\n\t\t\twsrpConsumer.getRegistrationContext());\n\t\tperformBlockingInteraction.setRuntimeContext(runtimeContext);\n\t\tperformBlockingInteraction.setUserContext(userContext);\n\n\t\tServiceHolder serviceHolder = getServiceHolder(\n\t\t\tactionRequest, wsrpConsumerManager, wsrpConsumer);\n\n\t\tWSRP_v2_Markup_PortType markupService =\n\t\t\tserviceHolder.getMarkupService();\n\n\t\tBlockingInteractionResponse blockingInteractionResponse =\n\t\t\tmarkupService.performBlockingInteraction(\n\t\t\t\tperformBlockingInteraction);\n\n\t\tprocessBlockingInteractionResponse(\n\t\t\tactionRequest, actionResponse, wsrpConsumerManager, serviceHolder,\n\t\t\tblockingInteractionResponse);\n\t}","commit_id":"51ead1399f14ddcb90d2b248fcfb76b9bb6d9667","url":"https://github.com/liferay/liferay-plugins"},{"original_method":"protected void getResource(\n\t\t\tResourceRequest resourceRequest, ResourceResponse resourceResponse)\n\t\tthrows Exception {\n\n\t\tPortletSession portletSession = resourceRequest.getPortletSession();\n\n\t\tWSRPConsumerPortlet wsrpConsumerPortlet = getWSRPConsumerPortlet();\n\n\t\tWSRPConsumer wsrpConsumer =\n\t\t\tWSRPConsumerLocalServiceUtil.getWSRPConsumer(\n\t\t\t\twsrpConsumerPortlet.getWsrpConsumerId());\n\n\t\tString userToken = WSRPConsumerManager.getUserToken(resourceRequest);\n\n\t\tWSRPConsumerManager wsrpConsumerManager =\n\t\t\tWSRPConsumerManagerFactory.getWSRPConsumerManager(\n\t\t\t\twsrpConsumer, userToken);\n\n\t\tPortletContext portletContext = new PortletContext();\n\t\tResourceParams resourceParams = new ResourceParams();\n\t\tRuntimeContext runtimeContext = new RuntimeContext();\n\t\tUserContext userContext = new UserContext();\n\n\t\tinitContexts(\n\t\t\tresourceRequest, resourceResponse, wsrpConsumerPortlet,\n\t\t\twsrpConsumerManager, portletContext, resourceParams, runtimeContext,\n\t\t\tuserContext);\n\n\t\tGetResource getResource = new GetResource();\n\n\t\tPortletContext existingPortletContext =\n\t\t\t(PortletContext)portletSession.getAttribute(\n\t\t\t\tWebKeys.PORTLET_CONTEXT);\n\n\t\tif (existingPortletContext != null) {\n\t\t\tgetResource.setPortletContext(existingPortletContext);\n\t\t}\n\t\telse {\n\t\t\tgetResource.setPortletContext(portletContext);\n\t\t}\n\n\t\tgetResource.setRegistrationContext(\n\t\t\twsrpConsumer.getRegistrationContext());\n\t\tgetResource.setResourceParams(resourceParams);\n\t\tgetResource.setRuntimeContext(runtimeContext);\n\t\tgetResource.setUserContext(userContext);\n\n\t\tWSRP_v2_Markup_PortType markupService = getMarkupService(\n\t\t\tresourceRequest, wsrpConsumerManager, wsrpConsumer);\n\n\t\toasis.names.tc.wsrp.v2.types.ResourceResponse wsrpResourceResponse =\n\t\t\tmarkupService.getResource(getResource);\n\n\t\tprocessResourceResponse(\n\t\t\tresourceRequest, resourceResponse, wsrpConsumerManager,\n\t\t\twsrpResourceResponse);\n\t}","id":55034,"modified_method":"protected void getResource(\n\t\t\tResourceRequest resourceRequest, ResourceResponse resourceResponse)\n\t\tthrows Exception {\n\n\t\tPortletSession portletSession = resourceRequest.getPortletSession();\n\n\t\tWSRPConsumerPortlet wsrpConsumerPortlet = getWSRPConsumerPortlet();\n\n\t\tWSRPConsumer wsrpConsumer =\n\t\t\tWSRPConsumerLocalServiceUtil.getWSRPConsumer(\n\t\t\t\twsrpConsumerPortlet.getWsrpConsumerId());\n\n\t\tString userToken = WSRPConsumerManager.getUserToken(resourceRequest);\n\n\t\tWSRPConsumerManager wsrpConsumerManager =\n\t\t\tWSRPConsumerManagerFactory.getWSRPConsumerManager(\n\t\t\t\twsrpConsumer, userToken);\n\n\t\tPortletContext portletContext = new PortletContext();\n\t\tResourceParams resourceParams = new ResourceParams();\n\t\tRuntimeContext runtimeContext = new RuntimeContext();\n\t\tUserContext userContext = new UserContext();\n\n\t\tinitContexts(\n\t\t\tresourceRequest, resourceResponse, wsrpConsumerPortlet,\n\t\t\twsrpConsumerManager, portletContext, resourceParams, runtimeContext,\n\t\t\tuserContext);\n\n\t\tGetResource getResource = new GetResource();\n\n\t\tPortletContext existingPortletContext =\n\t\t\t(PortletContext)portletSession.getAttribute(\n\t\t\t\tWebKeys.PORTLET_CONTEXT);\n\n\t\tif (existingPortletContext != null) {\n\t\t\tgetResource.setPortletContext(existingPortletContext);\n\t\t}\n\t\telse {\n\t\t\tgetResource.setPortletContext(portletContext);\n\t\t}\n\n\t\tgetResource.setRegistrationContext(\n\t\t\twsrpConsumer.getRegistrationContext());\n\t\tgetResource.setResourceParams(resourceParams);\n\t\tgetResource.setRuntimeContext(runtimeContext);\n\t\tgetResource.setUserContext(userContext);\n\n\t\tServiceHolder serviceHolder = getServiceHolder(\n\t\t\tresourceRequest, wsrpConsumerManager, wsrpConsumer);\n\n\t\tWSRP_v2_Markup_PortType markupService =\n\t\t\tserviceHolder.getMarkupService();\n\n\t\toasis.names.tc.wsrp.v2.types.ResourceResponse wsrpResourceResponse =\n\t\t\tmarkupService.getResource(getResource);\n\n\t\tprocessResourceResponse(\n\t\t\tresourceRequest, resourceResponse, wsrpConsumerManager,\n\t\t\tserviceHolder, wsrpResourceResponse);\n\t}","commit_id":"51ead1399f14ddcb90d2b248fcfb76b9bb6d9667","url":"https://github.com/liferay/liferay-plugins"},{"original_method":"protected void processResourceResponse(\n\t\t\tResourceRequest resourceRequest, ResourceResponse resourceResponse,\n\t\t\tWSRPConsumerManager wsrpConsumerManager,\n\t\t\toasis.names.tc.wsrp.v2.types.ResourceResponse wsrpResourceResponse)\n\t\tthrows Exception {\n\n\t\tPortletSession portletSession = resourceRequest.getPortletSession();\n\n\t\tPortletContext portletContext =\n\t\t\twsrpResourceResponse.getPortletContext();\n\n\t\tif (portletContext != null) {\n\t\t\tportletSession.setAttribute(\n\t\t\t\tWebKeys.PORTLET_CONTEXT, portletContext);\n\t\t}\n\n\t\tSessionContext sessionContext =\n\t\t\twsrpResourceResponse.getSessionContext();\n\n\t\tif (sessionContext != null) {\n\t\t\tportletSession.setAttribute(\n\t\t\t\tWebKeys.SESSION_CONTEXT, sessionContext);\n\t\t}\n\n\t\tResourceContext resourceContext =\n\t\t\twsrpResourceResponse.getResourceContext();\n\n\t\tCacheControl cacheControl = resourceContext.getCacheControl();\n\n\t\tif (cacheControl != null) {\n\t\t\tif (cacheControl.getExpires() == 0) {\n\t\t\t\tresourceResponse.setProperty(\n\t\t\t\t\tHttpHeaders.CACHE_CONTROL,\n\t\t\t\t\tHttpHeaders.CACHE_CONTROL_NO_CACHE_NO_STORE_VALUE);\n\t\t\t}\n\t\t}\n\n\t\tNamedString[] clientAttributes = resourceContext.getClientAttributes();\n\n\t\tif (clientAttributes != null) {\n\t\t\tfor (NamedString clientAttribute : clientAttributes) {\n\t\t\t\tString name = clientAttribute.getName();\n\t\t\t\tString value = clientAttribute.getValue();\n\n\t\t\t\tif (name.equalsIgnoreCase(HttpHeaders.CONTENT_DISPOSITION)) {\n\t\t\t\t\tresourceResponse.setProperty(\n\t\t\t\t\t\tHttpHeaders.CONTENT_DISPOSITION, value);\n\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tprocessMimeResponse(resourceRequest, resourceResponse, resourceContext);\n\t}","id":55035,"modified_method":"protected void processResourceResponse(\n\t\t\tResourceRequest resourceRequest, ResourceResponse resourceResponse,\n\t\t\tWSRPConsumerManager wsrpConsumerManager,\n\t\t\tServiceHolder serviceHolder,\n\t\t\toasis.names.tc.wsrp.v2.types.ResourceResponse wsrpResourceResponse)\n\t\tthrows Exception {\n\n\t\tPortletSession portletSession = resourceRequest.getPortletSession();\n\n\t\tPortletContext portletContext =\n\t\t\twsrpResourceResponse.getPortletContext();\n\n\t\tif (portletContext != null) {\n\t\t\tportletSession.setAttribute(\n\t\t\t\tWebKeys.PORTLET_CONTEXT, portletContext);\n\t\t}\n\n\t\tSessionContext sessionContext =\n\t\t\twsrpResourceResponse.getSessionContext();\n\n\t\tupdateSessionContext(portletSession, serviceHolder, sessionContext);\n\n\t\tResourceContext resourceContext =\n\t\t\twsrpResourceResponse.getResourceContext();\n\n\t\tCacheControl cacheControl = resourceContext.getCacheControl();\n\n\t\tif (cacheControl != null) {\n\t\t\tif (cacheControl.getExpires() == 0) {\n\t\t\t\tresourceResponse.setProperty(\n\t\t\t\t\tHttpHeaders.CACHE_CONTROL,\n\t\t\t\t\tHttpHeaders.CACHE_CONTROL_NO_CACHE_NO_STORE_VALUE);\n\t\t\t}\n\t\t}\n\n\t\tNamedString[] clientAttributes = resourceContext.getClientAttributes();\n\n\t\tif (clientAttributes != null) {\n\t\t\tfor (NamedString clientAttribute : clientAttributes) {\n\t\t\t\tString name = clientAttribute.getName();\n\t\t\t\tString value = clientAttribute.getValue();\n\n\t\t\t\tif (name.equalsIgnoreCase(HttpHeaders.CONTENT_DISPOSITION)) {\n\t\t\t\t\tresourceResponse.setProperty(\n\t\t\t\t\t\tHttpHeaders.CONTENT_DISPOSITION, value);\n\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tprocessMimeResponse(resourceRequest, resourceResponse, resourceContext);\n\t}","commit_id":"51ead1399f14ddcb90d2b248fcfb76b9bb6d9667","url":"https://github.com/liferay/liferay-plugins"},{"original_method":"protected void processHandleEventsResponse(\n\t\t\tEventRequest eventRequest, EventResponse eventResponse,\n\t\t\tWSRPConsumerManager wsrpConsumerManager,\n\t\t\tHandleEventsResponse handleEventsResponse)\n\t\tthrows Exception {\n\n\t\tprocessUpdateResponse(\n\t\t\teventRequest, eventResponse, wsrpConsumerManager,\n\t\t\thandleEventsResponse.getUpdateResponse());\n\t}","id":55036,"modified_method":"protected void processHandleEventsResponse(\n\t\t\tEventRequest eventRequest, EventResponse eventResponse,\n\t\t\tWSRPConsumerManager wsrpConsumerManager,\n\t\t\tServiceHolder serviceHolder,\n\t\t\tHandleEventsResponse handleEventsResponse)\n\t\tthrows Exception {\n\n\t\tprocessUpdateResponse(\n\t\t\teventRequest, eventResponse, wsrpConsumerManager, serviceHolder,\n\t\t\thandleEventsResponse.getUpdateResponse());\n\t}","commit_id":"51ead1399f14ddcb90d2b248fcfb76b9bb6d9667","url":"https://github.com/liferay/liferay-plugins"},{"original_method":"/**\n   * Standard processAction.\n   * @param ae\n   * @throws AbortProcessingException\n   */\n  public void processAction(ActionEvent ae) throws AbortProcessingException\n  {\n    log.info(\"EDIT TEMPLATE LISTENER.\");\n\n    TemplateBean templateBean = (TemplateBean)\n      ContextUtil.lookupBean(\"template\");\n\n      log.info(\"Editing new template.\");\n      templateBean.setIdString(\"0\"); //new template\n      templateBean.setTemplateName(templateBean.getNewName());\n      templateBean.setNewName(\"\");\n  }","id":55037,"modified_method":"/**\n   * Standard processAction.\n   * @param ae\n   * @throws AbortProcessingException\n   */\n  public void processAction(ActionEvent ae) throws AbortProcessingException\n  {\n    log.info(\"EDIT TEMPLATE LISTENER.\");\n\n    TemplateBean templateBean = (TemplateBean)\n      ContextUtil.lookupBean(\"template\");\n\n      log.info(\"Editing new template.\");\n      String tempName=templateBean.getNewName();\n      System.out.println(\"TEMPNAME= \"+tempName);\n AssessmentService assessmentService = new AssessmentService();\n    IndexBean templateIndex = (IndexBean) ContextUtil.lookupBean(\n                       \"templateIndex\");\n\n    ArrayList templates = new ArrayList();\n boolean duplicateName=false;\n    try\n    {\n\t\tFacesContext.getCurrentInstance().getExternalContext().getSessionMap().\n\t\t    put(\"template\", new TemplateBean());\n\tArrayList list = assessmentService.getBasicInfoOfAllActiveAssessmentTemplates(\"title\");\n        Iterator iter = list.iterator();\n     \n        while (iter.hasNext())\n        { \n\t AssessmentTemplateFacade facade =\n\t (AssessmentTemplateFacade) iter.next();\n\t\n\t     String n=facade.getTitle();\n             System.out.println(\"TempName: \"+n);\n\t      if((tempName.trim()).equals(n)){\n\t\t duplicateName=true;\n\t\t break;\n\t      }\n\t      \n\t}\n\t  \n    }\n    catch(Exception e)\n    {\n\t\t  e.printStackTrace();\n\t\t  throw new Error(e);\n    }\n    if(duplicateName){\n\tString error=ContextUtil.getLocalizedString(\"org.sakaiproject.tool.assessment.bundle.TemplateMessages\",\"duplicateName_error\");\nFacesContext context = FacesContext.getCurrentInstance();\n\n context.addMessage(null,new FacesMessage(error));\n\n      }\n      else{ \n      \n      templateBean.setTemplateName(templateBean.getNewName());\n     \n        templateBean.setIdString(\"0\"); //new template\n     \n      }\n\n  }","commit_id":"5946fce3c84bbe57c47c45c7a73094dea76c8e26","url":"https://github.com/sakaiproject/sakai"},{"original_method":"/**\n   * Normal listener method.\n   * @param ae\n   * @throws AbortProcessingException\n   */\n  public void processAction(ActionEvent ae) throws AbortProcessingException\n  {\n    FacesContext context = FacesContext.getCurrentInstance();\n    Map reqMap = context.getExternalContext().getRequestMap();\n    Map requestParams = context.getExternalContext().getRequestParameterMap();\n\n    log.info(\"DEBUG: TEMPLATE UPDATE LISTENER.\");\n    log.info(\"debugging ActionEvent: \" + ae);\n    log.info(\"debug requestParams: \" + requestParams);\n    log.info(\"debug reqMap: \" + reqMap);\n    TemplateBean templateBean = lookupTemplateBean(context);\n    log.info(\"name=\" + templateBean.getTemplateName());\n    log.info(\"id=\" + templateBean.getIdString());\n    updateAssessment(templateBean);\n  }","id":55038,"modified_method":"/**\n   * Normal listener method.\n   * @param ae\n   * @throws AbortProcessingException\n   */\n  public void processAction(ActionEvent ae) throws AbortProcessingException\n  {\n    FacesContext context = FacesContext.getCurrentInstance();\n    Map reqMap = context.getExternalContext().getRequestMap();\n    Map requestParams = context.getExternalContext().getRequestParameterMap();\n\n    log.info(\"DEBUG: TEMPLATE UPDATE LISTENER.\");\n    log.info(\"debugging ActionEvent: \" + ae);\n    log.info(\"debug requestParams: \" + requestParams);\n    log.info(\"debug reqMap: \" + reqMap);\n    TemplateBean templateBean = lookupTemplateBean(context);\n    log.info(\"name=\" + templateBean.getTemplateName());\n    log.info(\"id=\" + templateBean.getIdString());\nString tempName=templateBean.getTemplateName();\n// System.out.println(\"TEMPNAME= \"+tempName);\n AssessmentService assessmentService = new AssessmentService();\n // IndexBean templateIndex = (IndexBean) ContextUtil.lookupBean(\n //                       \"templateIndex\");\n\n boolean duplicateName=false;\n    try\n    {\n\t//\tFacesContext.getCurrentInstance().getExternalContext().getSessionMap().\n\t//\t    put(\"template\", new TemplateBean());\n\tArrayList list = assessmentService.getBasicInfoOfAllActiveAssessmentTemplates(\"title\");\n        Iterator iter = list.iterator();\n     \n        while (iter.hasNext())\n        { \n\t AssessmentTemplateFacade facade =\n\t (AssessmentTemplateFacade) iter.next();\n\t\n\t     String n=facade.getTitle();\n             //System.out.println(\"TempName: \"+n);\n\t      if((tempName.trim()).equals(n)){\n\t\t duplicateName=true;\n\t\t break;\n\t      }\n\t      \n\t}\n\t  \n    }\n    catch(Exception e)\n    {\n\t\t  e.printStackTrace();\n\t\t  throw new Error(e);\n    }\n    if(duplicateName){\n\tString error=ContextUtil.getLocalizedString(\"org.sakaiproject.tool.assessment.bundle.TemplateMessages\",\"duplicateName_error\");\n context.addMessage(null,new FacesMessage(error));\n  templateBean.setOutcome(\"editTemplate\");\n          System.out.println(\"duplicateName= \"+duplicateName);\n       \n      }\n      else{\n       updateAssessment(templateBean);\n        templateBean.setOutcome(\"template\");\n      }\n   \n  }","commit_id":"5946fce3c84bbe57c47c45c7a73094dea76c8e26","url":"https://github.com/sakaiproject/sakai"},{"original_method":"@Override\n    public UserVmResponse listVmDetails(UserVm userVm, boolean show_host){\n        Transaction txn = Transaction.currentTxn();\n        PreparedStatement pstmt = null;\n\n        try {\n            String sql = VM_DETAILS;\n            pstmt = txn.prepareAutoCloseStatement(sql);\n            pstmt.setLong(1, userVm.getId());\n            \n            ResultSet rs = pstmt.executeQuery();\n            boolean is_data_center_security_group_enabled=false;\n            Set<SecurityGroupResponse> securityGroupResponse = new HashSet<SecurityGroupResponse>();\n            Set<NicResponse> nicResponses = new HashSet<NicResponse>();\n            UserVmResponse userVmResponse = null;\n            while (rs.next()) {\n                if (userVmResponse==null){\n                    userVmResponse=new UserVmResponse();\n                    userVmResponse.setId(userVm.getId());\n                    userVmResponse.setName(userVm.getDisplayName());\n                    userVmResponse.setCreated(userVm.getCreated());\n                    userVmResponse.setGuestOsId(userVm.getGuestOSId());\n                    userVmResponse.setHaEnable(userVm.isHaEnabled());\n                    if (userVm.getState() != null) {\n                        userVmResponse.setState(userVm.getState().toString());\n                    }\n                    if (userVm.getDisplayName() != null) {\n                        userVmResponse.setDisplayName(userVm.getDisplayName());\n                    } else {\n                        userVmResponse.setDisplayName(userVm.getHostName());\n                    }\n                    \n                    //account.account_name, account.type, domain.name, instance_group_vm_map.group_id, instance_group_vm_map.id,\"\n                    \n                    userVmResponse.setAccountName(rs.getString(\"account.account_name\"));\n                    userVmResponse.setDomainId(userVm.getDomainId());\n                    userVmResponse.setDomainName(rs.getString(\"domain.name\"));\n                    \n                    userVmResponse.setGroup(rs.getString(\"instance_group_vm_map.group_id\"));\n                    userVmResponse.setGroupId(rs.getLong(\"instance_group_vm_map.id\"));\n                    \n                    //\"data_center.id, data_center.name, host.id, host.name, vm_template.id, vm_template.name, vm_template.display_text, vm_template.enable_password, \n                    userVmResponse.setZoneId(rs.getLong(\"data_center.id\"));\n                    userVmResponse.setZoneName(rs.getString(\"data_center.name\"));\n                    \n                    if (show_host){\n                        userVmResponse.setHostId(rs.getLong(\"host.id\"));\n                        userVmResponse.setHostName(rs.getString(\"host.name\"));\n                    }\n                    \n                   \n                    userVmResponse.setTemplateId(rs.getLong(\"vm_template.id\"));\n                    userVmResponse.setTemplateName(rs.getString(\"vm_template.name\"));\n                    userVmResponse.setTemplateDisplayText(rs.getString(\"vm_template.display_text\"));\n                    userVmResponse.setPasswordEnabled(rs.getBoolean(\"vm_template.enable_password\"));\n                    \n    \n                    //service_offering.id, disk_offering.name, \" \n                    //\"service_offering.cpu, service_offering.speed, service_offering.ram_size,\n                    userVmResponse.setServiceOfferingId(rs.getLong(\"service_offering.id\"));\n                    userVmResponse.setServiceOfferingName(rs.getString(\"disk_offering.name\"));\n                    userVmResponse.setCpuNumber(rs.getInt(\"service_offering.cpu\"));\n                    userVmResponse.setCpuSpeed(rs.getInt(\"service_offering.speed\"));\n                    userVmResponse.setMemory(rs.getInt(\"service_offering.ram_size\"));\n                    \n                    \n                    // volumes.device_id, volumes.volume_type, \n                    userVmResponse.setRootDeviceId(rs.getLong(\"volumes.device_id\"));\n                    userVmResponse.setRootDeviceType(rs.getString(\"volumes.volume_type\"));\n                    \n                    is_data_center_security_group_enabled = rs.getBoolean(\"data_center.is_security_group_enabled\");\n                }\n                \n                //security_group.id, security_group.name, security_group.description, , data_center.is_security_group_enabled\n                if (is_data_center_security_group_enabled){\n                    SecurityGroupResponse resp = new SecurityGroupResponse();\n                    resp.setId(rs.getLong(\"security_group.id\"));\n                    resp.setName(\"security_group.name\");\n                    resp.setDescription(\"security_group.description\");\n                    resp.setObjectName(\"securitygroup\");\n                    securityGroupResponse.add(resp);\n                }\n                \n                \n                //nics.id, nics.ip4_address, nics.gateway, nics.network_id, nics.netmask, nics. mac_address, nics.broadcast_uri, nics.isolation_uri, \" +\n                //\"networks.traffic_type, networks.guest_type, networks.is_default from vm_instance, \"\n                long nic_id = rs.getLong(\"nics.id\");\n                if (nic_id > 0){\n                    NicResponse nicResponse = new NicResponse();\n                    nicResponse.setId(nic_id);\n                    nicResponse.setIpaddress(rs.getString(\"nics.ip4_address\"));\n                    nicResponse.setGateway(rs.getString(\"nics.gateway\"));\n                    nicResponse.setNetmask(rs.getString(\"nics.netmask\"));\n                    nicResponse.setNetworkid(rs.getLong(\"nics.network_id\"));\n                    nicResponse.setMacAddress(rs.getString(\"nics.mac_address\"));\n                    \n                    int account_type = rs.getInt(\"account.type\");\n                    if (account_type == Account.ACCOUNT_TYPE_ADMIN) {\n                        nicResponse.setBroadcastUri(rs.getString(\"nics.broadcast_uri\"));\n                        nicResponse.setIsolationUri(rs.getString(\"nics.isolation_uri\"));\n                    }\n    \n    \n                    nicResponse.setTrafficType(rs.getString(\"networks.traffic_type\"));\n                    nicResponse.setType(rs.getString(\"networks.guest_type\"));\n                    nicResponse.setIsDefault(rs.getBoolean(\"networks.is_default\"));\n                    nicResponse.setObjectName(\"nic\");\n                    nicResponses.add(nicResponse);\n                }\n                \n            }\n            userVmResponse.setSecurityGroupList(new ArrayList(securityGroupResponse));\n            userVmResponse.setNics(new ArrayList(nicResponses));\n            return userVmResponse;\n        } catch (SQLException e) {\n            throw new CloudRuntimeException(\"DB Exception on: \" + VM_DETAILS, e);\n        } catch (Throwable e) {\n            throw new CloudRuntimeException(\"Caught: \" + VM_DETAILS, e);\n        }\n    }","id":55039,"modified_method":"@Override\n    public UserVmResponse listVmDetails(UserVm userVm, boolean show_host){\n        Transaction txn = Transaction.currentTxn();\n        PreparedStatement pstmt = null;\n\n        try {\n            String sql = VM_DETAILS;\n            pstmt = txn.prepareAutoCloseStatement(sql);\n            pstmt.setLong(1, userVm.getId());\n            \n            ResultSet rs = pstmt.executeQuery();\n            boolean is_data_center_security_group_enabled=false;\n            Set<SecurityGroupResponse> securityGroupResponse = new HashSet<SecurityGroupResponse>();\n            Set<NicResponse> nicResponses = new HashSet<NicResponse>();\n            UserVmResponse userVmResponse = null;\n            while (rs.next()) {\n                if (userVmResponse==null){\n                    userVmResponse=new UserVmResponse();\n                    userVmResponse.setId(userVm.getId());\n                    userVmResponse.setName(userVm.getDisplayName());\n                    userVmResponse.setCreated(userVm.getCreated());\n                    userVmResponse.setGuestOsId(userVm.getGuestOSId());\n                    userVmResponse.setHaEnable(userVm.isHaEnabled());\n                    if (userVm.getState() != null) {\n                        userVmResponse.setState(userVm.getState().toString());\n                    }\n                    if (userVm.getDisplayName() != null) {\n                        userVmResponse.setDisplayName(userVm.getDisplayName());\n                    } else {\n                        userVmResponse.setDisplayName(userVm.getHostName());\n                    }\n                    \n                    //account.account_name, account.type, domain.name, instance_group_vm_map.group_id, instance_group_vm_map.id,\"\n                    \n                    userVmResponse.setAccountName(rs.getString(\"account.account_name\"));\n                    userVmResponse.setDomainId(userVm.getDomainId());\n                    userVmResponse.setDomainName(rs.getString(\"domain.name\"));\n                    \n                    userVmResponse.setGroup(rs.getString(\"instance_group_vm_map.group_id\"));\n                    userVmResponse.setGroupId(rs.getLong(\"instance_group_vm_map.id\"));\n                    \n                    //\"data_center.id, data_center.name, host.id, host.name, vm_template.id, vm_template.name, vm_template.display_text, vm_template.enable_password, \n                    userVmResponse.setZoneId(rs.getLong(\"data_center.id\"));\n                    userVmResponse.setZoneName(rs.getString(\"data_center.name\"));\n                    \n                    if (show_host){\n                        userVmResponse.setHostId(rs.getLong(\"host.id\"));\n                        userVmResponse.setHostName(rs.getString(\"host.name\"));\n                    }\n\n                    if (userVm.getHypervisorType() != null) {\n                        userVmResponse.setHypervisor(userVm.getHypervisorType().toString());\n                    }\n                    \n                    long template_id = rs.getLong(\"vm_template.id\");\n                    if (template_id > 0){\n                        userVmResponse.setTemplateId(template_id);\n                        userVmResponse.setTemplateName(rs.getString(\"vm_template.name\"));\n                        userVmResponse.setTemplateDisplayText(rs.getString(\"vm_template.display_text\"));\n                        userVmResponse.setPasswordEnabled(rs.getBoolean(\"vm_template.enable_password\"));\n                    }\n                    else {\n                        userVmResponse.setTemplateId(-1L);\n                        userVmResponse.setTemplateName(\"ISO Boot\");\n                        userVmResponse.setTemplateDisplayText(\"ISO Boot\");\n                        userVmResponse.setPasswordEnabled(false);\n                    }\n\n                    if (userVm.getPassword() != null) {\n                        userVmResponse.setPassword(userVm.getPassword());\n                    }\n    \n                    //service_offering.id, disk_offering.name, \" \n                    //\"service_offering.cpu, service_offering.speed, service_offering.ram_size,\n                    userVmResponse.setServiceOfferingId(rs.getLong(\"service_offering.id\"));\n                    userVmResponse.setServiceOfferingName(rs.getString(\"disk_offering.name\"));\n                    userVmResponse.setCpuNumber(rs.getInt(\"service_offering.cpu\"));\n                    userVmResponse.setCpuSpeed(rs.getInt(\"service_offering.speed\"));\n                    userVmResponse.setMemory(rs.getInt(\"service_offering.ram_size\"));\n\n                    // volumes.device_id, volumes.volume_type, \n                    long vol_id = rs.getLong(\"volumes.id\");\n                    if (vol_id > 0){\n                        userVmResponse.setRootDeviceId(rs.getLong(\"volumes.device_id\"));\n                        userVmResponse.setRootDeviceType(rs.getString(\"volumes.volume_type\"));\n                        // storage pool\n                        long pool_id = rs.getLong(\"storage_pool.id\");\n                        if (pool_id > 0){\n                            userVmResponse.setRootDeviceType(rs.getString(\"storage_pool.pool_type\"));\n                        }\n                        else {\n                            userVmResponse.setRootDeviceType(\"Not created\");\n                        }\n                    }\n                    is_data_center_security_group_enabled = rs.getBoolean(\"data_center.is_security_group_enabled\");\n                }\n                \n                //security_group.id, security_group.name, security_group.description, , data_center.is_security_group_enabled\n                if (is_data_center_security_group_enabled){\n                    SecurityGroupResponse resp = new SecurityGroupResponse();\n                    resp.setId(rs.getLong(\"security_group.id\"));\n                    resp.setName(\"security_group.name\");\n                    resp.setDescription(\"security_group.description\");\n                    resp.setObjectName(\"securitygroup\");\n                    securityGroupResponse.add(resp);\n                }\n                \n                \n                //nics.id, nics.ip4_address, nics.gateway, nics.network_id, nics.netmask, nics. mac_address, nics.broadcast_uri, nics.isolation_uri, \" +\n                //\"networks.traffic_type, networks.guest_type, networks.is_default from vm_instance, \"\n                long nic_id = rs.getLong(\"nics.id\");\n                if (nic_id > 0){\n                    NicResponse nicResponse = new NicResponse();\n                    nicResponse.setId(nic_id);\n                    nicResponse.setIpaddress(rs.getString(\"nics.ip4_address\"));\n                    nicResponse.setGateway(rs.getString(\"nics.gateway\"));\n                    nicResponse.setNetmask(rs.getString(\"nics.netmask\"));\n                    nicResponse.setNetworkid(rs.getLong(\"nics.network_id\"));\n                    nicResponse.setMacAddress(rs.getString(\"nics.mac_address\"));\n                    \n                    int account_type = rs.getInt(\"account.type\");\n                    if (account_type == Account.ACCOUNT_TYPE_ADMIN) {\n                        nicResponse.setBroadcastUri(rs.getString(\"nics.broadcast_uri\"));\n                        nicResponse.setIsolationUri(rs.getString(\"nics.isolation_uri\"));\n                    }\n    \n    \n                    nicResponse.setTrafficType(rs.getString(\"networks.traffic_type\"));\n                    nicResponse.setType(rs.getString(\"networks.guest_type\"));\n                    nicResponse.setIsDefault(rs.getBoolean(\"networks.is_default\"));\n                    nicResponse.setObjectName(\"nic\");\n                    nicResponses.add(nicResponse);\n                }\n                \n            }\n            userVmResponse.setSecurityGroupList(new ArrayList(securityGroupResponse));\n            userVmResponse.setNics(new ArrayList(nicResponses));\n            return userVmResponse;\n        } catch (SQLException e) {\n            throw new CloudRuntimeException(\"DB Exception on: \" + VM_DETAILS, e);\n        } catch (Throwable e) {\n            throw new CloudRuntimeException(\"Caught: \" + VM_DETAILS, e);\n        }\n    }","commit_id":"ae665d4b113487926358803e3ca9b0cd87d45856","url":"https://github.com/apache/cloudstack"},{"original_method":"@Override\n    public UserVmResponse listVmDetails(UserVm userVm, boolean show_host){\n        Transaction txn = Transaction.currentTxn();\n        PreparedStatement pstmt = null;\n\n        try {\n            String sql = VM_DETAILS;\n            pstmt = txn.prepareAutoCloseStatement(sql);\n            pstmt.setLong(1, userVm.getId());\n            \n            ResultSet rs = pstmt.executeQuery();\n            boolean is_data_center_security_group_enabled=false;\n            Set<SecurityGroupResponse> securityGroupResponse = new HashSet<SecurityGroupResponse>();\n            Set<NicResponse> nicResponses = new HashSet<NicResponse>();\n            UserVmResponse userVmResponse = null;\n            while (rs.next()) {\n                if (userVmResponse==null){\n                    userVmResponse=new UserVmResponse();\n                    userVmResponse.setId(userVm.getId());\n                    userVmResponse.setName(userVm.getDisplayName());\n                    userVmResponse.setCreated(userVm.getCreated());\n                    userVmResponse.setGuestOsId(userVm.getGuestOSId());\n                    userVmResponse.setHaEnable(userVm.isHaEnabled());\n                    if (userVm.getState() != null) {\n                        userVmResponse.setState(userVm.getState().toString());\n                    }\n                    if (userVm.getDisplayName() != null) {\n                        userVmResponse.setDisplayName(userVm.getDisplayName());\n                    } else {\n                        userVmResponse.setDisplayName(userVm.getHostName());\n                    }\n                    \n                    //account.account_name, account.type, domain.name, instance_group_vm_map.group_id, instance_group_vm_map.id,\"\n                    \n                    userVmResponse.setAccountName(rs.getString(\"account.account_name\"));\n                    userVmResponse.setDomainId(userVm.getDomainId());\n                    userVmResponse.setDomainName(rs.getString(\"domain.name\"));\n                    \n                    userVmResponse.setGroup(rs.getString(\"instance_group_vm_map.group_id\"));\n                    userVmResponse.setGroupId(rs.getLong(\"instance_group_vm_map.id\"));\n                    \n                    //\"data_center.id, data_center.name, host.id, host.name, vm_template.id, vm_template.name, vm_template.display_text, vm_template.enable_password, \n                    userVmResponse.setZoneId(rs.getLong(\"data_center.id\"));\n                    userVmResponse.setZoneName(rs.getString(\"data_center.name\"));\n                    \n                    if (show_host){\n                        userVmResponse.setHostId(rs.getLong(\"host.id\"));\n                        userVmResponse.setHostName(rs.getString(\"host.name\"));\n                    }\n                    \n                   \n                    userVmResponse.setTemplateId(rs.getLong(\"vm_template.id\"));\n                    userVmResponse.setTemplateName(rs.getString(\"vm_template.name\"));\n                    userVmResponse.setTemplateDisplayText(rs.getString(\"vm_template.display_text\"));\n                    userVmResponse.setPasswordEnabled(rs.getBoolean(\"vm_template.enable_password\"));\n                    \n    \n                    //service_offering.id, disk_offering.name, \" \n                    //\"service_offering.cpu, service_offering.speed, service_offering.ram_size,\n                    userVmResponse.setServiceOfferingId(rs.getLong(\"service_offering.id\"));\n                    userVmResponse.setServiceOfferingName(rs.getString(\"disk_offering.name\"));\n                    userVmResponse.setCpuNumber(rs.getInt(\"service_offering.cpu\"));\n                    userVmResponse.setCpuSpeed(rs.getInt(\"service_offering.speed\"));\n                    userVmResponse.setMemory(rs.getInt(\"service_offering.ram_size\"));\n                    \n                    \n                    // volumes.device_id, volumes.volume_type, \n                    userVmResponse.setRootDeviceId(rs.getLong(\"volumes.device_id\"));\n                    userVmResponse.setRootDeviceType(rs.getString(\"volumes.volume_type\"));\n                    \n                    is_data_center_security_group_enabled = rs.getBoolean(\"data_center.is_security_group_enabled\");\n                }\n                \n                //security_group.id, security_group.name, security_group.description, , data_center.is_security_group_enabled\n                if (is_data_center_security_group_enabled){\n                    SecurityGroupResponse resp = new SecurityGroupResponse();\n                    resp.setId(rs.getLong(\"security_group.id\"));\n                    resp.setName(\"security_group.name\");\n                    resp.setDescription(\"security_group.description\");\n                    resp.setObjectName(\"securitygroup\");\n                    securityGroupResponse.add(resp);\n                }\n                \n                \n                //nics.id, nics.ip4_address, nics.gateway, nics.network_id, nics.netmask, nics. mac_address, nics.broadcast_uri, nics.isolation_uri, \" +\n                //\"networks.traffic_type, networks.guest_type, networks.is_default from vm_instance, \"\n                long nic_id = rs.getLong(\"nics.id\");\n                if (nic_id > 0){\n                    NicResponse nicResponse = new NicResponse();\n                    nicResponse.setId(nic_id);\n                    nicResponse.setIpaddress(rs.getString(\"nics.ip4_address\"));\n                    nicResponse.setGateway(rs.getString(\"nics.gateway\"));\n                    nicResponse.setNetmask(rs.getString(\"nics.netmask\"));\n                    nicResponse.setNetworkid(rs.getLong(\"nics.network_id\"));\n                    nicResponse.setMacAddress(rs.getString(\"nics.mac_address\"));\n                    \n                    int account_type = rs.getInt(\"account.type\");\n                    if (account_type == Account.ACCOUNT_TYPE_ADMIN) {\n                        nicResponse.setBroadcastUri(rs.getString(\"nics.broadcast_uri\"));\n                        nicResponse.setIsolationUri(rs.getString(\"nics.isolation_uri\"));\n                    }\n    \n    \n                    nicResponse.setTrafficType(rs.getString(\"networks.traffic_type\"));\n                    nicResponse.setType(rs.getString(\"networks.guest_type\"));\n                    nicResponse.setIsDefault(rs.getBoolean(\"networks.is_default\"));\n                    nicResponse.setObjectName(\"nic\");\n                    nicResponses.add(nicResponse);\n                }\n                \n            }\n            userVmResponse.setSecurityGroupList(new ArrayList(securityGroupResponse));\n            userVmResponse.setNics(new ArrayList(nicResponses));\n            return userVmResponse;\n        } catch (SQLException e) {\n            throw new CloudRuntimeException(\"DB Exception on: \" + VM_DETAILS, e);\n        } catch (Throwable e) {\n            throw new CloudRuntimeException(\"Caught: \" + VM_DETAILS, e);\n        }\n    }","id":55040,"modified_method":"@Override\n    public UserVmResponse listVmDetails(UserVm userVm, boolean show_host){\n        Transaction txn = Transaction.currentTxn();\n        PreparedStatement pstmt = null;\n\n        try {\n            String sql = VM_DETAILS;\n            pstmt = txn.prepareAutoCloseStatement(sql);\n            pstmt.setLong(1, userVm.getId());\n            \n            ResultSet rs = pstmt.executeQuery();\n            boolean is_data_center_security_group_enabled=false;\n            Set<SecurityGroupResponse> securityGroupResponse = new HashSet<SecurityGroupResponse>();\n            Set<NicResponse> nicResponses = new HashSet<NicResponse>();\n            UserVmResponse userVmResponse = null;\n            while (rs.next()) {\n                if (userVmResponse==null){\n                    userVmResponse=new UserVmResponse();\n                    userVmResponse.setId(userVm.getId());\n                    userVmResponse.setName(userVm.getDisplayName());\n                    userVmResponse.setCreated(userVm.getCreated());\n                    userVmResponse.setGuestOsId(userVm.getGuestOSId());\n                    userVmResponse.setHaEnable(userVm.isHaEnabled());\n                    if (userVm.getState() != null) {\n                        userVmResponse.setState(userVm.getState().toString());\n                    }\n                    if (userVm.getDisplayName() != null) {\n                        userVmResponse.setDisplayName(userVm.getDisplayName());\n                    } else {\n                        userVmResponse.setDisplayName(userVm.getHostName());\n                    }\n                    \n                    //account.account_name, account.type, domain.name, instance_group_vm_map.group_id, instance_group_vm_map.id,\"\n                    \n                    userVmResponse.setAccountName(rs.getString(\"account.account_name\"));\n                    userVmResponse.setDomainId(userVm.getDomainId());\n                    userVmResponse.setDomainName(rs.getString(\"domain.name\"));\n                    \n                    userVmResponse.setGroup(rs.getString(\"instance_group_vm_map.group_id\"));\n                    userVmResponse.setGroupId(rs.getLong(\"instance_group_vm_map.id\"));\n                    \n                    //\"data_center.id, data_center.name, host.id, host.name, vm_template.id, vm_template.name, vm_template.display_text, vm_template.enable_password, \n                    userVmResponse.setZoneId(rs.getLong(\"data_center.id\"));\n                    userVmResponse.setZoneName(rs.getString(\"data_center.name\"));\n                    \n                    if (show_host){\n                        userVmResponse.setHostId(rs.getLong(\"host.id\"));\n                        userVmResponse.setHostName(rs.getString(\"host.name\"));\n                    }\n\n                    if (userVm.getHypervisorType() != null) {\n                        userVmResponse.setHypervisor(userVm.getHypervisorType().toString());\n                    }\n                    \n                    long template_id = rs.getLong(\"vm_template.id\");\n                    if (template_id > 0){\n                        userVmResponse.setTemplateId(template_id);\n                        userVmResponse.setTemplateName(rs.getString(\"vm_template.name\"));\n                        userVmResponse.setTemplateDisplayText(rs.getString(\"vm_template.display_text\"));\n                        userVmResponse.setPasswordEnabled(rs.getBoolean(\"vm_template.enable_password\"));\n                    }\n                    else {\n                        userVmResponse.setTemplateId(-1L);\n                        userVmResponse.setTemplateName(\"ISO Boot\");\n                        userVmResponse.setTemplateDisplayText(\"ISO Boot\");\n                        userVmResponse.setPasswordEnabled(false);\n                    }\n\n                    if (userVm.getPassword() != null) {\n                        userVmResponse.setPassword(userVm.getPassword());\n                    }\n    \n                    //service_offering.id, disk_offering.name, \" \n                    //\"service_offering.cpu, service_offering.speed, service_offering.ram_size,\n                    userVmResponse.setServiceOfferingId(rs.getLong(\"service_offering.id\"));\n                    userVmResponse.setServiceOfferingName(rs.getString(\"disk_offering.name\"));\n                    userVmResponse.setCpuNumber(rs.getInt(\"service_offering.cpu\"));\n                    userVmResponse.setCpuSpeed(rs.getInt(\"service_offering.speed\"));\n                    userVmResponse.setMemory(rs.getInt(\"service_offering.ram_size\"));\n\n                    // volumes.device_id, volumes.volume_type, \n                    long vol_id = rs.getLong(\"volumes.id\");\n                    if (vol_id > 0){\n                        userVmResponse.setRootDeviceId(rs.getLong(\"volumes.device_id\"));\n                        userVmResponse.setRootDeviceType(rs.getString(\"volumes.volume_type\"));\n                        // storage pool\n                        long pool_id = rs.getLong(\"storage_pool.id\");\n                        if (pool_id > 0){\n                            userVmResponse.setRootDeviceType(rs.getString(\"storage_pool.pool_type\"));\n                        }\n                        else {\n                            userVmResponse.setRootDeviceType(\"Not created\");\n                        }\n                    }\n                    is_data_center_security_group_enabled = rs.getBoolean(\"data_center.is_security_group_enabled\");\n                }\n                \n                //security_group.id, security_group.name, security_group.description, , data_center.is_security_group_enabled\n                if (is_data_center_security_group_enabled){\n                    SecurityGroupResponse resp = new SecurityGroupResponse();\n                    resp.setId(rs.getLong(\"security_group.id\"));\n                    resp.setName(\"security_group.name\");\n                    resp.setDescription(\"security_group.description\");\n                    resp.setObjectName(\"securitygroup\");\n                    securityGroupResponse.add(resp);\n                }\n                \n                \n                //nics.id, nics.ip4_address, nics.gateway, nics.network_id, nics.netmask, nics. mac_address, nics.broadcast_uri, nics.isolation_uri, \" +\n                //\"networks.traffic_type, networks.guest_type, networks.is_default from vm_instance, \"\n                long nic_id = rs.getLong(\"nics.id\");\n                if (nic_id > 0){\n                    NicResponse nicResponse = new NicResponse();\n                    nicResponse.setId(nic_id);\n                    nicResponse.setIpaddress(rs.getString(\"nics.ip4_address\"));\n                    nicResponse.setGateway(rs.getString(\"nics.gateway\"));\n                    nicResponse.setNetmask(rs.getString(\"nics.netmask\"));\n                    nicResponse.setNetworkid(rs.getLong(\"nics.network_id\"));\n                    nicResponse.setMacAddress(rs.getString(\"nics.mac_address\"));\n                    \n                    int account_type = rs.getInt(\"account.type\");\n                    if (account_type == Account.ACCOUNT_TYPE_ADMIN) {\n                        nicResponse.setBroadcastUri(rs.getString(\"nics.broadcast_uri\"));\n                        nicResponse.setIsolationUri(rs.getString(\"nics.isolation_uri\"));\n                    }\n    \n    \n                    nicResponse.setTrafficType(rs.getString(\"networks.traffic_type\"));\n                    nicResponse.setType(rs.getString(\"networks.guest_type\"));\n                    nicResponse.setIsDefault(rs.getBoolean(\"networks.is_default\"));\n                    nicResponse.setObjectName(\"nic\");\n                    nicResponses.add(nicResponse);\n                }\n                \n            }\n            userVmResponse.setSecurityGroupList(new ArrayList(securityGroupResponse));\n            userVmResponse.setNics(new ArrayList(nicResponses));\n            return userVmResponse;\n        } catch (SQLException e) {\n            throw new CloudRuntimeException(\"DB Exception on: \" + VM_DETAILS, e);\n        } catch (Throwable e) {\n            throw new CloudRuntimeException(\"Caught: \" + VM_DETAILS, e);\n        }\n    }","commit_id":"c15723a716f8e139bb8d6a2226f529dea2efb159","url":"https://github.com/apache/cloudstack"},{"original_method":"/**\n\t * Constructs a new ERXRouteRequestHandler.\n\t */\n\tpublic ERXRouteRequestHandler() {\n\t\t_routes = new NSMutableArray<ERXRoute>();\n\t}","id":55041,"modified_method":"/**\n\t * Constructs a new ERXRouteRequestHandler with plural entity names.\n\t */\n\tpublic ERXRouteRequestHandler() {\n\t\tthis(true);\n\t}","commit_id":"628eabcceb2c6e298e9632533eb7203f544294c7","url":"https://github.com/wocommunity/wonder"},{"original_method":"/**\n\t * Returns the default route controller class for the given entity name.\n\t * \n\t * @param entityName the name of the entity\n\t * @return the corresponding route controller\n\t */\n\tprotected Class<? extends ERXRouteController> routeControllerClassForEntityNamed(String entityName) {\n\t\tString pluralEntityName = ERXLocalizer.englishLocalizer().plurifiedString(entityName, 2);\n\t\tString controllerName = pluralEntityName + \"Controller\";\n\t\tClass<?> controllerClass = _NSUtilities.classWithName(controllerName);\n\t\tif (controllerClass == null) {\n\t\t\tthrow new IllegalArgumentException(\"There is controller named '\" + controllerName + \"'.\");\n\t\t}\n\t\treturn controllerClass.asSubclass(ERXRouteController.class);\n\t}","id":55042,"modified_method":"/**\n\t * Returns the default route controller class for the given entity name.\n\t * \n\t * @param entityName the name of the entity\n\t * @return the corresponding route controller\n\t */\n\tprotected Class<? extends ERXRouteController> routeControllerClassForEntityNamed(String entityName) {\n\t\tString controllerEntityName = _usePluralEntityNames ? ERXLocalizer.englishLocalizer().plurifiedString(entityName, 2) : entityName;\n\t\tString controllerName = controllerEntityName + \"Controller\";\n\t\tClass<?> controllerClass = _NSUtilities.classWithName(controllerName);\n\t\tif (controllerClass == null) {\n\t\t\tthrow new IllegalArgumentException(\"There is controller named '\" + controllerName + \"'.\");\n\t\t}\n\t\treturn controllerClass.asSubclass(ERXRouteController.class);\n\t}","commit_id":"628eabcceb2c6e298e9632533eb7203f544294c7","url":"https://github.com/wocommunity/wonder"},{"original_method":"/**\n\t * Adds list and view routes for the given entity. For instance, if you provide the entity name \"Reminder\" you will\n\t * get the routes:\n\t * \n\t * <pre>\n\t * /reminders\n\t * /reminders/{action}\n\t * /reminder/{reminder:Reminder}\n\t * /reminder/{reminder:Reminder}/{action}\n\t * <\/pre>\n\t * \n\t * @param entityName\n\t *            the entity name to route with\n\t * @param numericPKs\n\t *            if true, routes can assume numeric PK's and add some extra convenience routes\n\t * @param controllerClass\n\t *            the controller class\n\t */\n\tpublic void addDefaultRoutes(String entityName, boolean numericPKs, Class<? extends ERXRouteController> controllerClass) {\n\t\tboolean lowercaseEntityNames = ERXProperties.booleanForKeyWithDefault(\"ERXRest.lowercaseEntityNames\", true);\n\n\t\tString singularInternalName = lowercaseEntityNames ? ERXStringUtilities.uncapitalize(entityName) : entityName;\n\n\t\tString externalName = ERXRestNameRegistry.registry().externalNameForInternalName(entityName);\n\t\tString singularExternalName = lowercaseEntityNames ? ERXStringUtilities.uncapitalize(externalName) : externalName;\n\t\tString pluralExternalName = ERXLocalizer.englishLocalizer().plurifiedString(singularExternalName, 2);\n\n\t\taddRoute(new ERXRoute(\".*\", ERXRoute.Method.Head, controllerClass, \"head\"));\n\t\taddRoute(new ERXRoute(\"/\" + pluralExternalName, ERXRoute.Method.Post, controllerClass, \"create\"));\n\t\taddRoute(new ERXRoute(\"/\" + singularExternalName, ERXRoute.Method.Post, controllerClass, \"create\"));\n\t\taddRoute(new ERXRoute(\"/\" + pluralExternalName, ERXRoute.Method.All, controllerClass, \"index\"));\n\n\t\tif (numericPKs) {\n\t\t\taddRoute(new ERXRoute(\"/\" + pluralExternalName + \"/{action:identifier}\", ERXRoute.Method.Get, controllerClass)); // MS:\n\t\t\t// this only works with numeric ids\n\t\t}\n\t\telse {\n\t\t\taddRoute(new ERXRoute(\"/\" + pluralExternalName + \"/new\", ERXRoute.Method.All, controllerClass, \"new\"));\n\t\t}\n\n\t\taddRoute(new ERXRoute(\"/\" + pluralExternalName + \"/{\" + singularInternalName + \":\" + entityName + \"}\", ERXRoute.Method.Get, controllerClass, \"show\"));\n\t\taddRoute(new ERXRoute(\"/\" + singularExternalName + \"/{\" + singularInternalName + \":\" + entityName + \"}\", ERXRoute.Method.Get, controllerClass, \"show\"));\n\t\taddRoute(new ERXRoute(\"/\" + pluralExternalName + \"/{\" + singularInternalName + \":\" + entityName + \"}\", ERXRoute.Method.Put, controllerClass, \"update\"));\n\t\taddRoute(new ERXRoute(\"/\" + singularExternalName + \"/{\" + singularInternalName + \":\" + entityName + \"}\", ERXRoute.Method.Put, controllerClass, \"update\"));\n\t\taddRoute(new ERXRoute(\"/\" + pluralExternalName + \"/{\" + singularInternalName + \":\" + entityName + \"}\", ERXRoute.Method.Delete, controllerClass, \"destroy\"));\n\t\taddRoute(new ERXRoute(\"/\" + singularExternalName + \"/{\" + singularInternalName + \":\" + entityName + \"}\", ERXRoute.Method.Delete, controllerClass, \"destroy\"));\n\t\taddRoute(new ERXRoute(\"/\" + pluralExternalName + \"/{\" + singularInternalName + \":\" + entityName + \"}/{action:identifier}\", ERXRoute.Method.All, controllerClass));\n\t\taddRoute(new ERXRoute(\"/\" + singularExternalName + \"/{\" + singularInternalName + \":\" + entityName + \"}/{action:identifier}\", ERXRoute.Method.All, controllerClass));\n\t}","id":55043,"modified_method":"/**\n\t * Adds list and view routes for the given entity. For instance, if you provide the entity name \"Reminder\" you will\n\t * get the routes:\n\t * \n\t * <pre>\n\t * /reminders\n\t * /reminders/{action}\n\t * /reminder/{reminder:Reminder}\n\t * /reminder/{reminder:Reminder}/{action}\n\t * <\/pre>\n\t * \n\t * @param entityName\n\t *            the entity name to route with\n\t * @param numericPKs\n\t *            if true, routes can assume numeric PK's and add some extra convenience routes\n\t * @param controllerClass\n\t *            the controller class\n\t */\n\tpublic void addDefaultRoutes(String entityName, boolean numericPKs, Class<? extends ERXRouteController> controllerClass) {\n\t\tboolean lowercaseEntityNames = ERXProperties.booleanForKeyWithDefault(\"ERXRest.lowercaseEntityNames\", true);\n\n\t\tString singularInternalName = lowercaseEntityNames ? ERXStringUtilities.uncapitalize(entityName) : entityName;\n\n\t\tString externalName = ERXRestNameRegistry.registry().externalNameForInternalName(entityName);\n\t\tString singularExternalName = lowercaseEntityNames ? ERXStringUtilities.uncapitalize(externalName) : externalName;\n\t\tString pluralExternalName = ERXLocalizer.englishLocalizer().plurifiedString(singularExternalName, 2);\n\n\t\taddRoute(new ERXRoute(\".*\", ERXRoute.Method.Head, controllerClass, \"head\"));\n\t\tif (_usePluralEntityNames) {\n\t\t\taddRoute(new ERXRoute(\"/\" + pluralExternalName, ERXRoute.Method.Post, controllerClass, \"create\"));\n\t\t}\n\t\taddRoute(new ERXRoute(\"/\" + singularExternalName, ERXRoute.Method.Post, controllerClass, \"create\"));\n\t\tif (_usePluralEntityNames) {\n\t\t\taddRoute(new ERXRoute(\"/\" + pluralExternalName, ERXRoute.Method.All, controllerClass, \"index\"));\n\t\t}\n\n\t\tif (numericPKs) {\n\t\t\taddRoute(new ERXRoute(\"/\" + singularExternalName + \"/{action:identifier}\", ERXRoute.Method.Get, controllerClass)); // MS: this only works with numeric ids\n\t\t\tif (_usePluralEntityNames) {\n\t\t\t\taddRoute(new ERXRoute(\"/\" + pluralExternalName + \"/{action:identifier}\", ERXRoute.Method.Get, controllerClass)); // MS: this only works with numeric ids\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\taddRoute(new ERXRoute(\"/\" + singularExternalName + \"/new\", ERXRoute.Method.All, controllerClass, \"new\"));\n\t\t\tif (_usePluralEntityNames) {\n\t\t\t\taddRoute(new ERXRoute(\"/\" + pluralExternalName + \"/new\", ERXRoute.Method.All, controllerClass, \"new\"));\n\t\t\t}\n\t\t}\n\n\t\tif (_usePluralEntityNames) {\n\t\t\taddRoute(new ERXRoute(\"/\" + pluralExternalName + \"/{\" + singularInternalName + \":\" + entityName + \"}\", ERXRoute.Method.Get, controllerClass, \"show\"));\n\t\t}\n\t\taddRoute(new ERXRoute(\"/\" + singularExternalName + \"/{\" + singularInternalName + \":\" + entityName + \"}\", ERXRoute.Method.Get, controllerClass, \"show\"));\n\t\tif (_usePluralEntityNames) {\n\t\t\taddRoute(new ERXRoute(\"/\" + pluralExternalName + \"/{\" + singularInternalName + \":\" + entityName + \"}\", ERXRoute.Method.Put, controllerClass, \"update\"));\n\t\t}\n\t\taddRoute(new ERXRoute(\"/\" + singularExternalName + \"/{\" + singularInternalName + \":\" + entityName + \"}\", ERXRoute.Method.Put, controllerClass, \"update\"));\n\t\tif (_usePluralEntityNames) {\n\t\t\taddRoute(new ERXRoute(\"/\" + pluralExternalName + \"/{\" + singularInternalName + \":\" + entityName + \"}\", ERXRoute.Method.Delete, controllerClass, \"destroy\"));\n\t\t}\n\t\taddRoute(new ERXRoute(\"/\" + singularExternalName + \"/{\" + singularInternalName + \":\" + entityName + \"}\", ERXRoute.Method.Delete, controllerClass, \"destroy\"));\n\t\tif (_usePluralEntityNames) {\n\t\t\taddRoute(new ERXRoute(\"/\" + pluralExternalName + \"/{\" + singularInternalName + \":\" + entityName + \"}/{action:identifier}\", ERXRoute.Method.All, controllerClass));\n\t\t}\n\t\taddRoute(new ERXRoute(\"/\" + singularExternalName + \"/{\" + singularInternalName + \":\" + entityName + \"}/{action:identifier}\", ERXRoute.Method.All, controllerClass));\n\t}","commit_id":"628eabcceb2c6e298e9632533eb7203f544294c7","url":"https://github.com/wocommunity/wonder"},{"original_method":"@NotNull\n    public static Pair<String, String> getLibLocationAndTargetForProject(@NotNull Project project) {\n        VirtualFile indicationFile = findIndicationFileInContentRoots(project);\n        if (indicationFile == null) {\n            Log.print(\"Indication file not found for project \" + project.getName());\n            return Pair.empty();\n        }\n\n        try {\n            InputStream stream = indicationFile.getInputStream();\n            String text = FileUtil.loadTextAndClose(stream);\n            if (text.isEmpty()) {\n                Log.print(\"Indication file not found for project \" + project.getName());\n            }\n            String[] lines = text.split(\"\\n\");\n            if (lines.length == 0) {\n                Log.print(\"Indication file \" + indicationFile.getPath() + \"is empty\");\n                return Pair.empty();\n            }\n            String pathToLibFile = lines[0];\n            String version = lines.length >= 2 ? lines[1] : null;\n            String pathToIndicationFileLocation = indicationFile.getParent().getPath();\n            return new Pair<String, String>(pathToIndicationFileLocation + \"/\" + pathToLibFile, version);\n        }\n        catch (IOException e) {\n            Log.print(\"Could not open file \" + indicationFile.getPath());\n            return Pair.empty();\n        }\n    }","id":55044,"modified_method":"@NotNull\n    public static Pair<String, String> getLibLocationAndTargetForProject(@NotNull Project project) {\n        VirtualFile indicationFile = findIndicationFileInContentRoots(project);\n        Logger logger = Logger.getInstance(JsModuleDetector.class);\n        if (indicationFile == null) {\n            logger.error(\"Indication file not found for project \" + project.getName());\n            return Pair.empty();\n        }\n\n        try {\n            InputStream stream = indicationFile.getInputStream();\n            String text = FileUtil.loadTextAndClose(stream);\n            if (text.isEmpty()) {\n                logger.error(\"Indication file is corrupted for project \" + project.getName());\n                return Pair.empty();\n            }\n            String[] lines = text.split(\"\\n\");\n            if (lines.length == 0) {\n                logger.error(\"Indication file \" + indicationFile.getPath() + \"is empty\");\n                return Pair.empty();\n            }\n            String pathToLibFile = lines[0];\n            String version = lines.length >= 2 ? lines[1] : null;\n            String pathToIndicationFileLocation = indicationFile.getParent().getPath();\n            return new Pair<String, String>(pathToIndicationFileLocation + \"/\" + pathToLibFile, version);\n        }\n        catch (IOException e) {\n            logger.error(\"Could not open file \" + indicationFile.getPath());\n            return Pair.empty();\n        }\n    }","commit_id":"fd708484845095732bb0300a9351b2e16636c1f2","url":"https://github.com/JetBrains/kotlin"},{"original_method":"public void testsShouldFail() throws Exception {\n        client().admin().indices().prepareCreate(\"test\").execute().actionGet();\n        client().prepareIndex(\"test\", \"type1\", \"0\").setSource(\"field1\", 0, \"field2\", \"toto\").execute().actionGet();\n        refresh();\n\n        try {\n            client().prepareSearch(\"test\")\n                    .addSort(\"field1\", SortOrder.ASC)\n                    .setQuery(matchAllQuery())\n                    .searchAfter(new Object[]{0})\n                    .setScroll(\"1m\")\n                    .execute().actionGet();\n\n            fail(\"Should fail on search_after cannot be used with scroll.\");\n        } catch (SearchPhaseExecutionException e) {\n            assertThat(e.getCause().getClass(), Matchers.equalTo(RemoteTransportException.class));\n            assertThat(e.getCause().getCause().getClass(), Matchers.equalTo(SearchContextException.class));\n            assertThat(e.getCause().getCause().getMessage(), Matchers.equalTo(\"`search_after` cannot be used in a scroll context.\"));\n        }\n        try {\n            client().prepareSearch(\"test\")\n                .addSort(\"field1\", SortOrder.ASC)\n                .setQuery(matchAllQuery())\n                .searchAfter(new Object[]{0})\n                .setFrom(10)\n                .execute().actionGet();\n\n            fail(\"Should fail on search_after cannot be used with from > 0.\");\n        } catch (SearchPhaseExecutionException e) {\n            assertThat(e.getCause().getClass(), Matchers.equalTo(RemoteTransportException.class));\n            assertThat(e.getCause().getCause().getClass(), Matchers.equalTo(SearchContextException.class));\n            assertThat(e.getCause().getCause().getMessage(), Matchers.equalTo(\"`from` parameter must be set to 0 when `search_after` is used.\"));\n        }\n\n        try {\n            client().prepareSearch(\"test\")\n                    .setQuery(matchAllQuery())\n                    .searchAfter(new Object[]{0.75f})\n                    .execute().actionGet();\n\n            fail(\"Should fail on search_after on score only is disabled\");\n        } catch (SearchPhaseExecutionException e) {\n            assertThat(e.getCause().getClass(), Matchers.equalTo(RemoteTransportException.class));\n            assertThat(e.getCause().getCause().getClass(), Matchers.equalTo(IllegalArgumentException.class));\n            assertThat(e.getCause().getCause().getMessage(), Matchers.equalTo(\"Sort must contain at least one field.\"));\n        }\n\n        try {\n            client().prepareSearch(\"test\")\n                    .addSort(\"field2\", SortOrder.DESC)\n                    .addSort(\"field1\", SortOrder.ASC)\n                    .setQuery(matchAllQuery())\n                    .searchAfter(new Object[]{1})\n                    .get();\n            fail(\"Should fail on search_after size differs from sort field size\");\n        } catch (SearchPhaseExecutionException e) {\n            assertThat(e.getCause().getClass(), Matchers.equalTo(RemoteTransportException.class));\n            assertThat(e.getCause().getCause().getClass(), Matchers.equalTo(IllegalArgumentException.class));\n            assertThat(e.getCause().getCause().getMessage(), Matchers.equalTo(\"search_after has 1 value(s) but sort has 2.\"));\n        }\n\n        try {\n            client().prepareSearch(\"test\")\n                    .setQuery(matchAllQuery())\n                    .addSort(\"field1\", SortOrder.ASC)\n                    .searchAfter(new Object[]{1, 2})\n                    .execute().actionGet();\n            fail(\"Should fail on search_after size differs from sort field size\");\n        } catch (SearchPhaseExecutionException e) {\n            assertThat(e.getCause().getClass(), Matchers.equalTo(RemoteTransportException.class));\n            assertThat(e.getCause().getCause().getClass(), Matchers.equalTo(IllegalArgumentException.class));\n            assertThat(e.getCause().getCause().getMessage(), Matchers.equalTo(\"search_after has 2 value(s) but sort has 1.\"));\n        }\n\n        try {\n            client().prepareSearch(\"test\")\n                    .setQuery(matchAllQuery())\n                    .addSort(\"field1\", SortOrder.ASC)\n                    .searchAfter(new Object[]{\"toto\"})\n                    .execute().actionGet();\n\n            fail(\"Should fail on search_after on score only is disabled\");\n        } catch (SearchPhaseExecutionException e) {\n            assertThat(e.getCause().getClass(), Matchers.equalTo(RemoteTransportException.class));\n            assertThat(e.getCause().getCause().getClass(), Matchers.equalTo(IllegalArgumentException.class));\n            assertThat(e.getCause().getCause().getMessage(), Matchers.equalTo(\"Failed to parse search_after value for field [field1].\"));\n        }\n    }","id":55045,"modified_method":"public void testsShouldFail() throws Exception {\n        createIndex(\"test\");\n        indexRandom(true, client().prepareIndex(\"test\", \"type1\", \"0\").setSource(\"field1\", 0, \"field2\", \"toto\"));\n\n        try {\n            client().prepareSearch(\"test\")\n                    .addSort(\"field1\", SortOrder.ASC)\n                    .setQuery(matchAllQuery())\n                    .searchAfter(new Object[]{0})\n                    .setScroll(\"1m\")\n                    .execute().actionGet();\n\n            fail(\"Should fail on search_after cannot be used with scroll.\");\n        } catch (SearchPhaseExecutionException e) {\n            assertThat(e.getCause().getClass(), Matchers.equalTo(RemoteTransportException.class));\n            assertThat(e.getCause().getCause().getClass(), Matchers.equalTo(SearchContextException.class));\n            assertThat(e.getCause().getCause().getMessage(), Matchers.equalTo(\"`search_after` cannot be used in a scroll context.\"));\n        }\n        try {\n            client().prepareSearch(\"test\")\n                .addSort(\"field1\", SortOrder.ASC)\n                .setQuery(matchAllQuery())\n                .searchAfter(new Object[]{0})\n                .setFrom(10)\n                .execute().actionGet();\n\n            fail(\"Should fail on search_after cannot be used with from > 0.\");\n        } catch (SearchPhaseExecutionException e) {\n            assertThat(e.getCause().getClass(), Matchers.equalTo(RemoteTransportException.class));\n            assertThat(e.getCause().getCause().getClass(), Matchers.equalTo(SearchContextException.class));\n            assertThat(e.getCause().getCause().getMessage(), Matchers.equalTo(\"`from` parameter must be set to 0 when `search_after` is used.\"));\n        }\n\n        try {\n            client().prepareSearch(\"test\")\n                    .setQuery(matchAllQuery())\n                    .searchAfter(new Object[]{0.75f})\n                    .execute().actionGet();\n\n            fail(\"Should fail on search_after on score only is disabled\");\n        } catch (SearchPhaseExecutionException e) {\n            assertThat(e.getCause().getClass(), Matchers.equalTo(RemoteTransportException.class));\n            assertThat(e.getCause().getCause().getClass(), Matchers.equalTo(IllegalArgumentException.class));\n            assertThat(e.getCause().getCause().getMessage(), Matchers.equalTo(\"Sort must contain at least one field.\"));\n        }\n\n        try {\n            client().prepareSearch(\"test\")\n                    .addSort(\"field2\", SortOrder.DESC)\n                    .addSort(\"field1\", SortOrder.ASC)\n                    .setQuery(matchAllQuery())\n                    .searchAfter(new Object[]{1})\n                    .get();\n            fail(\"Should fail on search_after size differs from sort field size\");\n        } catch (SearchPhaseExecutionException e) {\n            assertThat(e.getCause().getClass(), Matchers.equalTo(RemoteTransportException.class));\n            assertThat(e.getCause().getCause().getClass(), Matchers.equalTo(IllegalArgumentException.class));\n            assertThat(e.getCause().getCause().getMessage(), Matchers.equalTo(\"search_after has 1 value(s) but sort has 2.\"));\n        }\n\n        try {\n            client().prepareSearch(\"test\")\n                    .setQuery(matchAllQuery())\n                    .addSort(\"field1\", SortOrder.ASC)\n                    .searchAfter(new Object[]{1, 2})\n                    .execute().actionGet();\n            fail(\"Should fail on search_after size differs from sort field size\");\n        } catch (SearchPhaseExecutionException e) {\n            assertThat(e.getCause().getClass(), Matchers.equalTo(RemoteTransportException.class));\n            assertThat(e.getCause().getCause().getClass(), Matchers.equalTo(IllegalArgumentException.class));\n            assertThat(e.getCause().getCause().getMessage(), Matchers.equalTo(\"search_after has 2 value(s) but sort has 1.\"));\n        }\n\n        try {\n            client().prepareSearch(\"test\")\n                    .setQuery(matchAllQuery())\n                    .addSort(\"field1\", SortOrder.ASC)\n                    .searchAfter(new Object[]{\"toto\"})\n                    .execute().actionGet();\n\n            fail(\"Should fail on search_after on score only is disabled\");\n        } catch (SearchPhaseExecutionException e) {\n            assertThat(e.getCause().getClass(), Matchers.equalTo(RemoteTransportException.class));\n            assertThat(e.getCause().getCause().getClass(), Matchers.equalTo(IllegalArgumentException.class));\n            assertThat(e.getCause().getCause().getMessage(), Matchers.equalTo(\"Failed to parse search_after value for field [field1].\"));\n        }\n    }","commit_id":"3bdb54e529968ec97cdf58565c4572a3939c78eb","url":"https://github.com/elastic/elasticsearch"},{"original_method":"/**\n     * @param text\n     * @param subject\n     * @param to\n     * \n     */\n    public void mailSend() throws JavaMailerException {\n\n        Category log = ThreadCategory.getInstance(getClass());\n\n        Properties props = System.getProperties();\n\n        if (_mailHost != null)\n            props.put(\"mail.smtp.host\", _mailHost);\n\n        if (_authenticate)\n            props.put(\"mail.smtp.auth\", \"true\");\n\n        // Get a Session object\n        Session session = Session.getInstance(props, null);\n\n        if (DEFAULT_MAILER_DEBUG)\n            session.setDebug(true);\n\n        // construct the message\n        Message _msg = new MimeMessage(session);\n        MimeBodyPart mbp1 = new MimeBodyPart(); // for message text\n        MimeBodyPart mbp2 = null; // for file attachment if necessary\n\n        try {\n            if (_from != null)\n                _msg.setFrom(new InternetAddress(_from));\n            else\n                _msg.setFrom();\n\n            if (_to == null) {\n                log.debug(\"_to is null\");\n                _to = \"root@127.0.0.1\";\n            }\n            log.debug(\"To is: \" + _to);\n            _msg.setRecipients(Message.RecipientType.TO, InternetAddress.parse(_to, false));\n\n            if (_subject == null) {\n                log.debug(\"_subject is null\");\n                _subject = \"Subject was null\";\n            }\n            log.debug(\"Subject is: \" + _subject);\n            _msg.setSubject(_subject);\n\n            if (_messageText == null) {\n                log.debug(\"_messageText is null\");\n                _messageText = \"Message Text was null\";\n            }\n            log.debug(\"Subject is: \" + _subject);\n\n            // _msg.setText(_messageText);\n            mbp1.setText(_messageText);\n\n            MimeMultipart mp = new MimeMultipart();\n            mp.addBodyPart(mbp1);\n\n            if (_fileName != null) {\n                log.debug(\"_file is not null\");\n                mbp2 = new MimeBodyPart();\n                FileDataSource fds = new FileDataSource(_fileName);\n                mbp2.setDataHandler(new DataHandler(fds));\n                mbp2.setFileName(fds.getName());\n                mp.addBodyPart(mbp2);\n            }\n\n            _msg.setHeader(\"X-Mailer\", _mailer);\n            _msg.setSentDate(new Date());\n            _msg.setContent(mp);\n\n            SMTPTransport t = null;\n            try {\n                t = (SMTPTransport) session.getTransport(_transport);\n                if (_authenticate)\n                    t.connect(_mailHost, _user, _password);\n                else\n                    t.connect();\n\n                t.sendMessage(_msg, _msg.getAllRecipients());\n            } catch (NoSuchProviderException e) {\n                throw new JavaMailerException(\"Couldn't get a transport: \", e);\n            } catch (MessagingException e) {\n                throw new JavaMailerException(\"Java Mailer messaging exception: \", e);\n            } finally {\n                System.out.println(\"Response: \" + t.getLastServerResponse());\n                try {\n                    t.close();\n                } catch (MessagingException e1) {\n                    throw new JavaMailerException(\"Java Mailer messaging exception on transport close: \", e1);\n                }\n            }\n\n            System.out.println(\"\\nMail was sent successfully.\");\n\n        } catch (AddressException e) {\n            throw new JavaMailerException(\"Java Mailer Addressing exception: \", e);\n        } catch (MessagingException e) {\n            throw new JavaMailerException(\"Java Mailer messaging exception: \", e);\n        } finally {\n\n        }\n    }","id":55046,"modified_method":"/**\n     * @param text\n     * @param subject\n     * @param to\n     * \n     */\n    public void mailSend() throws JavaMailerException {\n        \n        Category log = ThreadCategory.getInstance(getClass());\n        \n        Properties props = System.getProperties();\n        \n        if (_mailHost != null)\n            props.put(\"mail.smtp.host\", _mailHost);\n        \n        if (_authenticate)\n            props.put(\"mail.smtp.auth\", \"true\");\n        \n        // Get a Session object\n        Session session = Session.getInstance(props, null);\n        session.setDebug(DEFAULT_MAILER_DEBUG);\n        \n        // construct the message\n        Message _msg = new MimeMessage(session);\n        MimeBodyPart mbp1 = new MimeBodyPart(); // for message text\n        MimeBodyPart mbp2 = null; // for file attachment if necessary\n        \n        try {\n            if (_from != null)\n                _msg.setFrom(new InternetAddress(_from));\n            else\n                _msg.setFrom();\n            \n            if (_to == null) {\n                log.debug(\"_to is null\");\n                _to = \"root@127.0.0.1\";\n            }\n            log.debug(\"To is: \" + _to);\n            _msg.setRecipients(Message.RecipientType.TO, InternetAddress.parse(_to, false));\n            \n            if (_subject == null) {\n                log.debug(\"_subject is null\");\n                _subject = \"Subject was null\";\n            }\n            log.debug(\"Subject is: \" + _subject);\n            _msg.setSubject(_subject);\n            \n            if (_messageText == null) {\n                log.debug(\"_messageText is null\");\n                _messageText = \"Message Text was null\";\n            }\n            log.debug(\"Subject is: \" + _subject);\n            \n            // _msg.setText(_messageText);\n            mbp1.setText(_messageText);\n            \n            MimeMultipart mp = new MimeMultipart();\n            mp.addBodyPart(mbp1);\n            \n            if (_fileName != null) {\n                log.debug(\"_file is not null\");\n                mbp2 = new MimeBodyPart();\n                FileDataSource fds = new FileDataSource(_fileName);\n                mbp2.setDataHandler(new DataHandler(fds));\n                mbp2.setFileName(fds.getName());\n                mp.addBodyPart(mbp2);\n            }\n            \n            _msg.setHeader(\"X-Mailer\", _mailer);\n            _msg.setSentDate(new Date());\n            _msg.setContent(mp);\n            \n            if (isUseJMTA()) {\n                JMTA.send(_msg);\n            } else {\n                SMTPTransport t = null;\n                try {\n                    t = (SMTPTransport) session.getTransport(_transport);\n                    if (_authenticate)\n                        t.connect(_mailHost, _user, _password);\n                    else\n                        t.connect();\n                    \n                    t.sendMessage(_msg, _msg.getAllRecipients());\n                } catch (NoSuchProviderException e) {\n                    throw new JavaMailerException(\"Couldn't get a transport: \", e);\n                } catch (MessagingException e) {\n                    throw new JavaMailerException(\"Java Mailer messaging exception: \", e);\n                } finally {\n                    System.out.println(\"Response: \" + t.getLastServerResponse());\n                    try {\n                        t.close();\n                    } catch (MessagingException e1) {\n                        throw new JavaMailerException(\"Java Mailer messaging exception on transport close: \", e1);\n                    }\n                }\n            }\n            \n        } catch (AddressException e) {\n            throw new JavaMailerException(\"Java Mailer Addressing exception: \", e);\n        } catch (MessagingException e) {\n            throw new JavaMailerException(\"Java Mailer messaging exception: \", e);\n        }\n    }","commit_id":"7ddd31396ed623b2190a0f98058af1bbab5ce684","url":"https://github.com/OpenNMS/opennms"},{"original_method":"private Set computeStaleSources()\n        throws MojoExecutionException\n    {\n        long staleTime = 0;\n\n        if ( staleMillis != null && staleMillis.length() > 0 )\n        {\n            try\n            {\n                staleTime = Long.parseLong( staleMillis );\n            }\n            catch ( NumberFormatException e )\n            {\n                throw new MojoExecutionException( \"Invalid staleMillis plugin parameter value: \\'\" + staleMillis\n                    + \"\\'\", e );\n            }\n\n        }\n        SuffixMapping mapping = new SuffixMapping( \".java\", \".class\" );\n\n        SourceInclusionScanner scanner = new StaleSourceScanner( staleTime );\n\n        scanner.addSourceMapping( mapping );\n\n        File outDir = new File( getOutputDirectory() );\n\n        Set staleSources = new HashSet();\n\n        for ( Iterator it = getCompileSourceRoots().iterator(); it.hasNext(); )\n        {\n            String sourceRoot = (String) it.next();\n\n            File rootFile = new File( sourceRoot );\n\n            if ( !rootFile.isDirectory() )\n            {\n                continue;\n            }\n\n            try\n            {\n                staleSources.addAll( scanner.getIncludedSources( rootFile, outDir ) );\n            }\n            catch ( InclusionScanException e )\n            {\n                throw new MojoExecutionException( \"Error scanning source root: \\'\" + sourceRoot\n                    + \"\\' for stale files to recompile.\", e );\n            }\n        }\n\n        return staleSources;\n    }","id":55047,"modified_method":"private Set computeStaleSources()\n        throws MojoExecutionException\n    {\n        SuffixMapping mapping = new SuffixMapping( \".java\", \".class\" );\n\n        SourceInclusionScanner scanner = new StaleSourceScanner( staleMillis );\n\n        scanner.addSourceMapping( mapping );\n\n        File outDir = new File( getOutputDirectory() );\n\n        Set staleSources = new HashSet();\n\n        for ( Iterator it = getCompileSourceRoots().iterator(); it.hasNext(); )\n        {\n            String sourceRoot = (String) it.next();\n\n            File rootFile = new File( sourceRoot );\n\n            if ( !rootFile.isDirectory() )\n            {\n                continue;\n            }\n\n            try\n            {\n                staleSources.addAll( scanner.getIncludedSources( rootFile, outDir ) );\n            }\n            catch ( InclusionScanException e )\n            {\n                throw new MojoExecutionException( \"Error scanning source root: \\'\" + sourceRoot\n                    + \"\\' for stale files to recompile.\", e );\n            }\n        }\n\n        return staleSources;\n    }","commit_id":"af1f5a4e172ac4e7f02fe5b79906620258ecde35","url":"https://github.com/apache/maven-plugins"},{"original_method":"public void execute()\n        throws MojoExecutionException\n    {\n        // ----------------------------------------------------------------------\n        //\n        // ----------------------------------------------------------------------\n\n        List compileSourceRoots = removeEmptyCompileSourceRoots( getCompileSourceRoots() );\n        if ( compileSourceRoots.isEmpty() )\n        {\n            getLog().info( \"No sources to compile\" );\n            return;\n        }\n\n        CompilerConfiguration compilerConfiguration = new CompilerConfiguration();\n\n        compilerConfiguration.setOutputLocation( getOutputDirectory() );\n        compilerConfiguration.setClasspathEntries( getClasspathElements() );\n        compilerConfiguration.setSourceLocations( compileSourceRoots );\n\n        // TODO: have an option to always compile (without need to clean)\n        Set staleSources = computeStaleSources();\n\n        if ( staleSources.isEmpty() )\n        {\n            getLog().info( \"Nothing to compile - all classes are up to date\" );\n            return;\n        }\n        else\n        {\n            compilerConfiguration.setSourceFiles( staleSources );\n        }\n\n        if ( source != null )\n        {\n            compilerConfiguration.addCompilerOption( \"-source\", source );\n        }\n\n        if ( target != null )\n        {\n            compilerConfiguration.addCompilerOption( \"-target\", target );\n        }\n\n        if ( debug != null && Boolean.valueOf( debug ).booleanValue() )\n        {\n            compilerConfiguration.setDebug( true );\n        }\n\n        List messages = null;\n        try\n        {\n            messages = compiler.compile( compilerConfiguration );\n        }\n        catch ( Exception e )\n        {\n            // TODO: don't catch Exception\n            throw new MojoExecutionException( \"Fatal error compiling\", e );\n        }\n\n        boolean compilationError = false;\n\n        for ( Iterator i = messages.iterator(); i.hasNext(); )\n        {\n            CompilerError message = (CompilerError) i.next();\n\n            if ( message.isError() )\n            {\n                compilationError = true;\n            }\n        }\n\n        if ( compilationError )\n        {\n            throw new CompilationFailureException( messages );\n        }\n    }","id":55048,"modified_method":"public void execute()\n        throws MojoExecutionException\n    {\n        // ----------------------------------------------------------------------\n        //\n        // ----------------------------------------------------------------------\n\n        List compileSourceRoots = removeEmptyCompileSourceRoots( getCompileSourceRoots() );\n        if ( compileSourceRoots.isEmpty() )\n        {\n            getLog().info( \"No sources to compile\" );\n            return;\n        }\n\n        CompilerConfiguration compilerConfiguration = new CompilerConfiguration();\n\n        compilerConfiguration.setOutputLocation( getOutputDirectory() );\n        compilerConfiguration.setClasspathEntries( getClasspathElements() );\n        compilerConfiguration.setSourceLocations( compileSourceRoots );\n\n        // TODO: have an option to always compile (without need to clean)\n        Set staleSources = computeStaleSources();\n\n        if ( staleSources.isEmpty() )\n        {\n            getLog().info( \"Nothing to compile - all classes are up to date\" );\n            return;\n        }\n        else\n        {\n            compilerConfiguration.setSourceFiles( staleSources );\n        }\n\n        if ( source != null )\n        {\n            compilerConfiguration.addCompilerOption( \"-source\", source );\n        }\n\n        if ( target != null )\n        {\n            compilerConfiguration.addCompilerOption( \"-target\", target );\n        }\n\n        compilerConfiguration.setDebug( debug );\n\n        List messages = null;\n        try\n        {\n            messages = compiler.compile( compilerConfiguration );\n        }\n        catch ( Exception e )\n        {\n            // TODO: don't catch Exception\n            throw new MojoExecutionException( \"Fatal error compiling\", e );\n        }\n\n        boolean compilationError = false;\n\n        for ( Iterator i = messages.iterator(); i.hasNext(); )\n        {\n            CompilerError message = (CompilerError) i.next();\n\n            if ( message.isError() )\n            {\n                compilationError = true;\n            }\n        }\n\n        if ( compilationError )\n        {\n            throw new CompilationFailureException( messages );\n        }\n    }","commit_id":"af1f5a4e172ac4e7f02fe5b79906620258ecde35","url":"https://github.com/apache/maven-plugins"},{"original_method":"private Set computeStaleSources()\n        throws MojoExecutionException\n    {\n        long staleTime = 0;\n\n        if ( staleMillis != null && staleMillis.length() > 0 )\n        {\n            try\n            {\n                staleTime = Long.parseLong( staleMillis );\n            }\n            catch ( NumberFormatException e )\n            {\n                throw new MojoExecutionException( \"Invalid staleMillis plugin parameter value: \\'\" + staleMillis\n                    + \"\\'\", e );\n            }\n\n        }\n        SuffixMapping mapping = new SuffixMapping( \".java\", \".class\" );\n\n        SourceInclusionScanner scanner = new StaleSourceScanner( staleTime );\n\n        scanner.addSourceMapping( mapping );\n\n        File outDir = new File( getOutputDirectory() );\n\n        Set staleSources = new HashSet();\n\n        for ( Iterator it = getCompileSourceRoots().iterator(); it.hasNext(); )\n        {\n            String sourceRoot = (String) it.next();\n\n            File rootFile = new File( sourceRoot );\n\n            if ( !rootFile.isDirectory() )\n            {\n                continue;\n            }\n\n            try\n            {\n                staleSources.addAll( scanner.getIncludedSources( rootFile, outDir ) );\n            }\n            catch ( InclusionScanException e )\n            {\n                throw new MojoExecutionException( \"Error scanning source root: \\'\" + sourceRoot\n                    + \"\\' for stale files to recompile.\", e );\n            }\n        }\n\n        return staleSources;\n    }","id":55049,"modified_method":"private Set computeStaleSources()\n        throws MojoExecutionException\n    {\n        SuffixMapping mapping = new SuffixMapping( \".java\", \".class\" );\n\n        SourceInclusionScanner scanner = new StaleSourceScanner( staleMillis );\n\n        scanner.addSourceMapping( mapping );\n\n        File outDir = new File( getOutputDirectory() );\n\n        Set staleSources = new HashSet();\n\n        for ( Iterator it = getCompileSourceRoots().iterator(); it.hasNext(); )\n        {\n            String sourceRoot = (String) it.next();\n\n            File rootFile = new File( sourceRoot );\n\n            if ( !rootFile.isDirectory() )\n            {\n                continue;\n            }\n\n            try\n            {\n                staleSources.addAll( scanner.getIncludedSources( rootFile, outDir ) );\n            }\n            catch ( InclusionScanException e )\n            {\n                throw new MojoExecutionException( \"Error scanning source root: \\'\" + sourceRoot\n                    + \"\\' for stale files to recompile.\", e );\n            }\n        }\n\n        return staleSources;\n    }","commit_id":"6a630346a22f5647a04f8033ad0c1e50f65dfe37","url":"https://github.com/apache/maven"},{"original_method":"public void execute()\n        throws MojoExecutionException\n    {\n        // ----------------------------------------------------------------------\n        //\n        // ----------------------------------------------------------------------\n\n        List compileSourceRoots = removeEmptyCompileSourceRoots( getCompileSourceRoots() );\n        if ( compileSourceRoots.isEmpty() )\n        {\n            getLog().info( \"No sources to compile\" );\n            return;\n        }\n\n        CompilerConfiguration compilerConfiguration = new CompilerConfiguration();\n\n        compilerConfiguration.setOutputLocation( getOutputDirectory() );\n        compilerConfiguration.setClasspathEntries( getClasspathElements() );\n        compilerConfiguration.setSourceLocations( compileSourceRoots );\n\n        // TODO: have an option to always compile (without need to clean)\n        Set staleSources = computeStaleSources();\n\n        if ( staleSources.isEmpty() )\n        {\n            getLog().info( \"Nothing to compile - all classes are up to date\" );\n            return;\n        }\n        else\n        {\n            compilerConfiguration.setSourceFiles( staleSources );\n        }\n\n        if ( source != null )\n        {\n            compilerConfiguration.addCompilerOption( \"-source\", source );\n        }\n\n        if ( target != null )\n        {\n            compilerConfiguration.addCompilerOption( \"-target\", target );\n        }\n\n        if ( debug != null && Boolean.valueOf( debug ).booleanValue() )\n        {\n            compilerConfiguration.setDebug( true );\n        }\n\n        List messages = null;\n        try\n        {\n            messages = compiler.compile( compilerConfiguration );\n        }\n        catch ( Exception e )\n        {\n            // TODO: don't catch Exception\n            throw new MojoExecutionException( \"Fatal error compiling\", e );\n        }\n\n        boolean compilationError = false;\n\n        for ( Iterator i = messages.iterator(); i.hasNext(); )\n        {\n            CompilerError message = (CompilerError) i.next();\n\n            if ( message.isError() )\n            {\n                compilationError = true;\n            }\n        }\n\n        if ( compilationError )\n        {\n            throw new CompilationFailureException( messages );\n        }\n    }","id":55050,"modified_method":"public void execute()\n        throws MojoExecutionException\n    {\n        // ----------------------------------------------------------------------\n        //\n        // ----------------------------------------------------------------------\n\n        List compileSourceRoots = removeEmptyCompileSourceRoots( getCompileSourceRoots() );\n        if ( compileSourceRoots.isEmpty() )\n        {\n            getLog().info( \"No sources to compile\" );\n            return;\n        }\n\n        CompilerConfiguration compilerConfiguration = new CompilerConfiguration();\n\n        compilerConfiguration.setOutputLocation( getOutputDirectory() );\n        compilerConfiguration.setClasspathEntries( getClasspathElements() );\n        compilerConfiguration.setSourceLocations( compileSourceRoots );\n\n        // TODO: have an option to always compile (without need to clean)\n        Set staleSources = computeStaleSources();\n\n        if ( staleSources.isEmpty() )\n        {\n            getLog().info( \"Nothing to compile - all classes are up to date\" );\n            return;\n        }\n        else\n        {\n            compilerConfiguration.setSourceFiles( staleSources );\n        }\n\n        if ( source != null )\n        {\n            compilerConfiguration.addCompilerOption( \"-source\", source );\n        }\n\n        if ( target != null )\n        {\n            compilerConfiguration.addCompilerOption( \"-target\", target );\n        }\n\n        compilerConfiguration.setDebug( debug );\n\n        List messages = null;\n        try\n        {\n            messages = compiler.compile( compilerConfiguration );\n        }\n        catch ( Exception e )\n        {\n            // TODO: don't catch Exception\n            throw new MojoExecutionException( \"Fatal error compiling\", e );\n        }\n\n        boolean compilationError = false;\n\n        for ( Iterator i = messages.iterator(); i.hasNext(); )\n        {\n            CompilerError message = (CompilerError) i.next();\n\n            if ( message.isError() )\n            {\n                compilationError = true;\n            }\n        }\n\n        if ( compilationError )\n        {\n            throw new CompilationFailureException( messages );\n        }\n    }","commit_id":"6a630346a22f5647a04f8033ad0c1e50f65dfe37","url":"https://github.com/apache/maven"},{"original_method":"/** {@inheritDoc} */\n    public ActionForward execute(ActionMapping mapping, ActionForm formIn, \n            HttpServletRequest request, HttpServletResponse response) {\n\n        ActionErrors errors = new ActionErrors();\n        DynaActionForm form = (DynaActionForm)formIn;\n        request.setAttribute(ListTagHelper.PARENT_URL, request.getRequestURI());\n        Map forwardParams = makeParamMap(request);\n        String searchString = request.getParameter(\"search_string\");\n        String viewMode = form.getString(\"view_mode\");\n        \n        try {\n            // handle setup, the submission setups the searchstring below\n            // and redirects to this page which then performs the search.\n            if (!isSubmitted(form)) {\n                setupForm(request, form);\n                return getStrutsDelegate().forwardParams(\n                        mapping.findForward(\"default\"),\n                        request.getParameterMap());\n            }\n        }\n        catch (XmlRpcException xre) {\n            log.error(\"Could not connect to search server.\", xre);\n            errors.add(ActionMessages.GLOBAL_MESSAGE,\n                    new ActionMessage(\"packages.search.connection_error\"));\n        }\n        catch (XmlRpcFault e) {\n            if (e.getErrorCode() == 100) {\n                log.error(\"Invalid search query\", e);\n            }\n            \n            errors.add(ActionMessages.GLOBAL_MESSAGE,\n                    new ActionMessage(\"packages.search.could_not_parse_query\",\n                                      searchString));\n        }\n        catch (MalformedURLException e) {\n            log.error(\"Could not connect to server.\", e);\n            errors.add(ActionMessages.GLOBAL_MESSAGE,\n                    new ActionMessage(\"packages.search.connection_error\"));\n        }\n        catch (ValidatorException ve) {\n            errors.add(ActionMessages.GLOBAL_MESSAGE,\n                    new ActionMessage(\"packages.search.use_free_form\"));\n        }\n\n        // keep all params except submitted, in order for the new list\n        // tag pagination to work we need to pass along all the formvars it\n        // generated.\n        Enumeration paramNames = request.getParameterNames();\n        while (paramNames.hasMoreElements()) {\n            String name = (String) paramNames.nextElement();\n            if (!SUBMITTED.equals(name)) {\n                forwardParams.put(name, request.getParameter(name));\n            }\n        }\n    \n        forwardParams.put(\"search_string\", searchString);\n        forwardParams.put(\"view_mode\", viewMode);\n\n        if (!errors.isEmpty()) {\n            addErrors(request, errors);\n            return getStrutsDelegate().forwardParams(\n                    mapping.findForward(\"default\"), \n                    forwardParams);\n        }\n        \n        return getStrutsDelegate().forwardParams(\n                mapping.findForward(\"success\"), \n                forwardParams);\n    }","id":55051,"modified_method":"/** {@inheritDoc} */\n    public ActionForward execute(ActionMapping mapping, ActionForm formIn, \n            HttpServletRequest request, HttpServletResponse response) {\n\n        ActionErrors errors = new ActionErrors();\n        DynaActionForm form = (DynaActionForm)formIn;\n        request.setAttribute(ListTagHelper.PARENT_URL, request.getRequestURI());\n        Map forwardParams = makeParamMap(request);\n        String searchString = request.getParameter(\"search_string\");\n        String viewMode = form.getString(\"view_mode\");\n        \n        try {\n            // handle setup, the submission setups the searchstring below\n            // and redirects to this page which then performs the search.\n            if (!isSubmitted(form)) {\n                setupForm(request, form);\n                return getStrutsDelegate().forwardParams(\n                        mapping.findForward(\"default\"),\n                        request.getParameterMap());\n            }\n        }\n        catch (XmlRpcException xre) {\n            log.error(\"Could not connect to search server.\", xre);\n            errors.add(ActionMessages.GLOBAL_MESSAGE,\n                    new ActionMessage(\"packages.search.connection_error\"));\n        }\n        catch (XmlRpcFault e) {\n            log.info(\"Caught Exception :\" + e);\n            log.info(\"ErrorCode = \" + e.getErrorCode());\n            e.printStackTrace();\n            if (e.getErrorCode() == 100) {\n                log.error(\"Invalid search query\", e);\n                errors.add(ActionMessages.GLOBAL_MESSAGE,\n                        new ActionMessage(\"packages.search.could_not_parse_query\",\n                                          searchString));\n            }\n            else if (e.getErrorCode() == 200) {\n                log.error(\"Index files appear to be missing: \", e);\n                errors.add(ActionMessages.GLOBAL_MESSAGE,\n                        new ActionMessage(\"packages.search.index_files_missing\",\n                                          searchString));\n            }\n            else {\n                errors.add(ActionMessages.GLOBAL_MESSAGE,\n                    new ActionMessage(\"packages.search.could_not_execute_query\",\n                                      searchString));\n            }\n        }\n        catch (MalformedURLException e) {\n            log.error(\"Could not connect to server.\", e);\n            errors.add(ActionMessages.GLOBAL_MESSAGE,\n                    new ActionMessage(\"packages.search.connection_error\"));\n        }\n        catch (ValidatorException ve) {\n            errors.add(ActionMessages.GLOBAL_MESSAGE,\n                    new ActionMessage(\"packages.search.use_free_form\"));\n        }\n\n        // keep all params except submitted, in order for the new list\n        // tag pagination to work we need to pass along all the formvars it\n        // generated.\n        Enumeration paramNames = request.getParameterNames();\n        while (paramNames.hasMoreElements()) {\n            String name = (String) paramNames.nextElement();\n            if (!SUBMITTED.equals(name)) {\n                forwardParams.put(name, request.getParameter(name));\n            }\n        }\n    \n        forwardParams.put(\"search_string\", searchString);\n        forwardParams.put(\"view_mode\", viewMode);\n\n        if (!errors.isEmpty()) {\n            addErrors(request, errors);\n            return getStrutsDelegate().forwardParams(\n                    mapping.findForward(\"default\"), \n                    forwardParams);\n        }\n        \n        return getStrutsDelegate().forwardParams(\n                mapping.findForward(\"success\"), \n                forwardParams);\n    }","commit_id":"7799d4a568710601c0284c1f67a1c5b8b033f742","url":"https://github.com/spacewalkproject/spacewalk"},{"original_method":"/** {@inheritDoc} */\n    public ActionForward execute(ActionMapping mapping,\n                                 ActionForm formIn,\n                                 HttpServletRequest request,\n                                 HttpServletResponse response) {\n        ActionErrors errors = new ActionErrors();\n        DynaActionForm form = (DynaActionForm)formIn;\n        request.setAttribute(ListTagHelper.PARENT_URL, request.getRequestURI());\n        Map forwardParams = makeParamMap(request);\n        String searchString = request.getParameter(\"search_string\");\n        String viewMode = form.getString(\"view_mode\");\n           \n        try {\n            // handle setup, the submission setups the searchstring below\n            // and redirects to this page which then performs the search.\n            if (!isSubmitted(form)) {\n                setupForm(request, form);\n                return getStrutsDelegate().forwardParams(\n                        mapping.findForward(\"default\"),\n                        request.getParameterMap());\n            }\n        }\n        catch (XmlRpcException xre) {\n            log.error(\"Could not connect to search server.\", xre);\n            errors.add(ActionMessages.GLOBAL_MESSAGE,\n                    new ActionMessage(\"packages.search.connection_error\"));\n        }\n        catch (XmlRpcFault e) {\n            ActionMessage errorMsg = null;\n            if (e.getErrorCode() == 100) {\n                log.error(\"Invalid search query\", e);\n                errorMsg = new ActionMessage(\"packages.search.could_not_parse_query\",\n                        searchString);\n            }\n            else {\n                errorMsg = new ActionMessage(\"errata.search.could_not_execute_query\",\n                        searchString);\n                log.warn(\"XmlRpcFault error code: \" + e.getErrorCode() + \" caught: \" +\n                        e.getMessage());\n            }\n            e.printStackTrace();\n            errors.add(ActionMessages.GLOBAL_MESSAGE, errorMsg);\n        }\n        catch (MalformedURLException e) {\n            log.error(\"Could not connect to server.\", e);\n            errors.add(ActionMessages.GLOBAL_MESSAGE,\n                    new ActionMessage(\"packages.search.connection_error\"));\n        }\n        catch (ValidatorException ve) {\n            errors.add(ActionMessages.GLOBAL_MESSAGE,\n                    new ActionMessage(\"packages.search.use_free_form\"));\n        }\n\n        // keep all params except submitted, in order for the new list\n        // tag pagination to work we need to pass along all the formvars it\n        // generated.\n        Enumeration paramNames = request.getParameterNames();\n        while (paramNames.hasMoreElements()) {\n            String name = (String) paramNames.nextElement();\n            if (!SUBMITTED.equals(name)) {\n                forwardParams.put(name, request.getParameter(name));\n            }\n        }\n        \n        forwardParams.put(\"search_string\", searchString);\n        forwardParams.put(\"view_mode\", viewMode);\n        \n        if (!errors.isEmpty()) {\n            addErrors(request, errors);\n            return getStrutsDelegate().forwardParams(\n                    mapping.findForward(\"default\"), \n                    forwardParams);\n        }\n        \n        return getStrutsDelegate().forwardParams(\n                mapping.findForward(\"success\"), \n                forwardParams);\n    }","id":55052,"modified_method":"/** {@inheritDoc} */\n    public ActionForward execute(ActionMapping mapping,\n                                 ActionForm formIn,\n                                 HttpServletRequest request,\n                                 HttpServletResponse response) {\n        ActionErrors errors = new ActionErrors();\n        DynaActionForm form = (DynaActionForm)formIn;\n        request.setAttribute(ListTagHelper.PARENT_URL, request.getRequestURI());\n        Map forwardParams = makeParamMap(request);\n        String searchString = request.getParameter(\"search_string\");\n        String viewMode = form.getString(\"view_mode\");\n           \n        try {\n            // handle setup, the submission setups the searchstring below\n            // and redirects to this page which then performs the search.\n            if (!isSubmitted(form)) {\n                setupForm(request, form);\n                return getStrutsDelegate().forwardParams(\n                        mapping.findForward(\"default\"),\n                        request.getParameterMap());\n            }\n        }\n        catch (XmlRpcException xre) {\n            log.error(\"Could not connect to search server.\", xre);\n            errors.add(ActionMessages.GLOBAL_MESSAGE,\n                    new ActionMessage(\"packages.search.connection_error\"));\n        }\n        catch (XmlRpcFault e) {\n            log.info(\"Caught Exception :\" + e);\n            log.info(\"ErrorCode = \" + e.getErrorCode());\n            e.printStackTrace();\n            if (e.getErrorCode() == 100) {\n                log.error(\"Invalid search query\", e);\n                errors.add(ActionMessages.GLOBAL_MESSAGE,\n                        new ActionMessage(\"packages.search.could_not_parse_query\",\n                                          searchString));\n            }\n            else if (e.getErrorCode() == 200) {\n                log.error(\"Index files appear to be missing: \", e);\n                errors.add(ActionMessages.GLOBAL_MESSAGE,\n                        new ActionMessage(\"packages.search.index_files_missing\",\n                                          searchString));\n            }\n            else {\n                errors.add(ActionMessages.GLOBAL_MESSAGE,\n                    new ActionMessage(\"packages.search.could_not_execute_query\",\n                                      searchString));\n            }\n        }\n        catch (MalformedURLException e) {\n            log.error(\"Could not connect to server.\", e);\n            errors.add(ActionMessages.GLOBAL_MESSAGE,\n                    new ActionMessage(\"packages.search.connection_error\"));\n        }\n        catch (ValidatorException ve) {\n            errors.add(ActionMessages.GLOBAL_MESSAGE,\n                    new ActionMessage(\"packages.search.use_free_form\"));\n        }\n\n        // keep all params except submitted, in order for the new list\n        // tag pagination to work we need to pass along all the formvars it\n        // generated.\n        Enumeration paramNames = request.getParameterNames();\n        while (paramNames.hasMoreElements()) {\n            String name = (String) paramNames.nextElement();\n            if (!SUBMITTED.equals(name)) {\n                forwardParams.put(name, request.getParameter(name));\n            }\n        }\n        \n        forwardParams.put(\"search_string\", searchString);\n        forwardParams.put(\"view_mode\", viewMode);\n        \n        if (!errors.isEmpty()) {\n            addErrors(request, errors);\n            return getStrutsDelegate().forwardParams(\n                    mapping.findForward(\"default\"), \n                    forwardParams);\n        }\n        \n        return getStrutsDelegate().forwardParams(\n                mapping.findForward(\"success\"), \n                forwardParams);\n    }","commit_id":"7799d4a568710601c0284c1f67a1c5b8b033f742","url":"https://github.com/spacewalkproject/spacewalk"},{"original_method":"/** {@inheritDoc} */\n    public ActionForward execute(ActionMapping mapping, ActionForm formIn, \n            HttpServletRequest request, HttpServletResponse response) {\n\n        ActionErrors errors = new ActionErrors();\n        DynaActionForm form = (DynaActionForm)formIn;\n        request.setAttribute(ListTagHelper.PARENT_URL, request.getRequestURI());\n        Map forwardParams = makeParamMap(request);\n        String searchString = request.getParameter(\"search_string\");\n        String viewMode = form.getString(\"view_mode\");\n        String[] channelArches = form.getStrings(\"channel_arch\");\n        \n        try {\n            // handle setup, the submission setups the searchstring below\n            // and redirects to this page which then performs the search.\n            if (!isSubmitted(form)) {\n                setupForm(request, form);\n                return getStrutsDelegate().forwardParams(\n                        mapping.findForward(\"default\"),\n                        request.getParameterMap());\n            }\n        }\n        catch (XmlRpcException xre) {\n            log.error(\"Could not connect to search server.\", xre);\n            errors.add(ActionMessages.GLOBAL_MESSAGE,\n                    new ActionMessage(\"packages.search.connection_error\"));\n        }\n        catch (XmlRpcFault e) {\n            if (e.getErrorCode() == 100) {\n                log.error(\"Invalid search query\", e);\n            }\n            \n            errors.add(ActionMessages.GLOBAL_MESSAGE,\n                    new ActionMessage(\"packages.search.could_not_parse_query\",\n                                      searchString));\n        }\n        catch (MalformedURLException e) {\n            log.error(\"Could not connect to server.\", e);\n            errors.add(ActionMessages.GLOBAL_MESSAGE,\n                    new ActionMessage(\"packages.search.connection_error\"));\n        }\n        catch (ValidatorException ve) {\n            errors.add(ActionMessages.GLOBAL_MESSAGE,\n                    new ActionMessage(\"packages.search.use_free_form\"));\n        }\n\n        // keep all params except submitted, in order for the new list\n        // tag pagination to work we need to pass along all the formvars it\n        // generated.\n        Enumeration paramNames = request.getParameterNames();\n        while (paramNames.hasMoreElements()) {\n            String name = (String) paramNames.nextElement();\n            if (!SUBMITTED.equals(name)) {\n                forwardParams.put(name, request.getParameter(name));\n            }\n        }\n    \n        forwardParams.put(\"search_string\", searchString);\n        forwardParams.put(\"view_mode\", viewMode);\n        forwardParams.put(\"channel_arch\", channelArches);\n\n        if (!errors.isEmpty()) {\n            addErrors(request, errors);\n            return getStrutsDelegate().forwardParams(\n                    mapping.findForward(\"default\"), \n                    forwardParams);\n        }\n        \n        return getStrutsDelegate().forwardParams(\n                mapping.findForward(\"success\"), \n                forwardParams);\n    }","id":55053,"modified_method":"/** {@inheritDoc} */\n    public ActionForward execute(ActionMapping mapping, ActionForm formIn, \n            HttpServletRequest request, HttpServletResponse response) {\n\n        ActionErrors errors = new ActionErrors();\n        DynaActionForm form = (DynaActionForm)formIn;\n        request.setAttribute(ListTagHelper.PARENT_URL, request.getRequestURI());\n        Map forwardParams = makeParamMap(request);\n        String searchString = request.getParameter(\"search_string\");\n        String viewMode = form.getString(\"view_mode\");\n        String[] channelArches = form.getStrings(\"channel_arch\");\n        \n        try {\n            // handle setup, the submission setups the searchstring below\n            // and redirects to this page which then performs the search.\n            if (!isSubmitted(form)) {\n                setupForm(request, form);\n                return getStrutsDelegate().forwardParams(\n                        mapping.findForward(\"default\"),\n                        request.getParameterMap());\n            }\n        }\n        catch (XmlRpcException xre) {\n            log.error(\"Could not connect to search server.\", xre);\n            errors.add(ActionMessages.GLOBAL_MESSAGE,\n                    new ActionMessage(\"packages.search.connection_error\"));\n        }\n        catch (XmlRpcFault e) {\n            log.info(\"Caught Exception :\" + e);\n            log.info(\"ErrorCode = \" + e.getErrorCode());\n            e.printStackTrace();\n            if (e.getErrorCode() == 100) {\n                log.error(\"Invalid search query\", e);\n                errors.add(ActionMessages.GLOBAL_MESSAGE,\n                        new ActionMessage(\"packages.search.could_not_parse_query\",\n                                          searchString));\n            }\n            else if (e.getErrorCode() == 200) {\n                log.error(\"Index files appear to be missing: \", e);\n                errors.add(ActionMessages.GLOBAL_MESSAGE,\n                        new ActionMessage(\"packages.search.index_files_missing\",\n                                          searchString));\n            }\n            else {\n                errors.add(ActionMessages.GLOBAL_MESSAGE,\n                    new ActionMessage(\"packages.search.could_not_execute_query\",\n                                      searchString));\n            }\n        }\n        catch (MalformedURLException e) {\n            log.error(\"Could not connect to server.\", e);\n            errors.add(ActionMessages.GLOBAL_MESSAGE,\n                    new ActionMessage(\"packages.search.connection_error\"));\n        }\n        catch (ValidatorException ve) {\n            errors.add(ActionMessages.GLOBAL_MESSAGE,\n                    new ActionMessage(\"packages.search.use_free_form\"));\n        }\n\n        // keep all params except submitted, in order for the new list\n        // tag pagination to work we need to pass along all the formvars it\n        // generated.\n        Enumeration paramNames = request.getParameterNames();\n        while (paramNames.hasMoreElements()) {\n            String name = (String) paramNames.nextElement();\n            if (!SUBMITTED.equals(name)) {\n                forwardParams.put(name, request.getParameter(name));\n            }\n        }\n    \n        forwardParams.put(\"search_string\", searchString);\n        forwardParams.put(\"view_mode\", viewMode);\n        forwardParams.put(\"channel_arch\", channelArches);\n\n        if (!errors.isEmpty()) {\n            addErrors(request, errors);\n            return getStrutsDelegate().forwardParams(\n                    mapping.findForward(\"default\"), \n                    forwardParams);\n        }\n        \n        return getStrutsDelegate().forwardParams(\n                mapping.findForward(\"success\"), \n                forwardParams);\n    }","commit_id":"7799d4a568710601c0284c1f67a1c5b8b033f742","url":"https://github.com/spacewalkproject/spacewalk"},{"original_method":"protected DataResult performSearch(RequestContext context) {\n\n        HttpServletRequest request = context.getRequest();\n        ActionMapping mapping = (ActionMapping) request.getAttribute(MAPPING);\n        String searchString = context.getParam(SEARCH_STRING, false);\n        String viewMode = context.getParam(VIEW_MODE, false);\n        String whereToSearch = context.getParam(WHERE_TO_SEARCH, false);\n        Boolean invertResults = StringUtils.defaultString(\n                context.getParam(INVERT_RESULTS, false)).equals(\"on\");\n        \n        if (invertResults == null) {\n            invertResults = Boolean.FALSE;\n        }\n        ActionErrors errs = new ActionErrors();\n        DataResult dr = null;\n        try {\n            dr = SystemSearchHelper.systemSearch(context,\n                    searchString,\n                    viewMode,\n                    invertResults,\n                    whereToSearch);\n        }\n        catch (MalformedURLException e) {\n            log.info(\"Caught Exception :\" + e);\n            e.printStackTrace();\n            errs.add(ActionMessages.GLOBAL_MESSAGE,\n                    new ActionMessage(\"packages.search.connection_error\"));\n        }\n        catch (XmlRpcFault e) {\n            log.info(\"Caught Exception :\" + e);\n            log.info(\"ErrorCode = \" + e.getErrorCode());\n            e.printStackTrace();\n            if (e.getErrorCode() == 100) {\n                log.error(\"Invalid search query\", e);\n            }\n            errs.add(ActionMessages.GLOBAL_MESSAGE,\n                    new ActionMessage(\"packages.search.could_not_parse_query\",\n                                      searchString));\n        }\n        catch (XmlRpcException e) {\n            log.info(\"Caught Exception :\" + e);\n            e.printStackTrace();\n            errs.add(ActionMessages.GLOBAL_MESSAGE,\n                    new ActionMessage(\"packages.search.connection_error\"));\n        }\n        if (dr == null) {\n            ActionMessages messages = new ActionMessages();\n            messages.add(ActionMessages.GLOBAL_MESSAGE,\n                    new ActionMessage(\"systemsearch_no_matches_found\"));\n            getStrutsDelegate().saveMessages(request, messages);\n        }\n        if (!errs.isEmpty()) {\n            addErrors(request, errs);\n        }\n        return dr;\n    }","id":55054,"modified_method":"protected DataResult performSearch(RequestContext context) {\n\n        HttpServletRequest request = context.getRequest();\n        ActionMapping mapping = (ActionMapping) request.getAttribute(MAPPING);\n        String searchString = context.getParam(SEARCH_STRING, false);\n        String viewMode = context.getParam(VIEW_MODE, false);\n        String whereToSearch = context.getParam(WHERE_TO_SEARCH, false);\n        Boolean invertResults = StringUtils.defaultString(\n                context.getParam(INVERT_RESULTS, false)).equals(\"on\");\n        \n        if (invertResults == null) {\n            invertResults = Boolean.FALSE;\n        }\n        ActionErrors errs = new ActionErrors();\n        DataResult dr = null;\n        try {\n            dr = SystemSearchHelper.systemSearch(context,\n                    searchString,\n                    viewMode,\n                    invertResults,\n                    whereToSearch);\n        }\n        catch (MalformedURLException e) {\n            log.info(\"Caught Exception :\" + e);\n            e.printStackTrace();\n            errs.add(ActionMessages.GLOBAL_MESSAGE,\n                    new ActionMessage(\"packages.search.connection_error\"));\n        }\n        catch (XmlRpcFault e) {\n            log.info(\"Caught Exception :\" + e);\n            log.info(\"ErrorCode = \" + e.getErrorCode());\n            e.printStackTrace();\n            if (e.getErrorCode() == 100) {\n                log.error(\"Invalid search query\", e);\n                errs.add(ActionMessages.GLOBAL_MESSAGE,\n                        new ActionMessage(\"packages.search.could_not_parse_query\",\n                                          searchString));\n            }\n            else if (e.getErrorCode() == 200) {\n                log.error(\"Index files appear to be missing: \", e);\n                errs.add(ActionMessages.GLOBAL_MESSAGE,\n                        new ActionMessage(\"packages.search.index_files_missing\",\n                                          searchString));\n            }\n            else {\n                errs.add(ActionMessages.GLOBAL_MESSAGE,\n                    new ActionMessage(\"packages.search.could_not_execute_query\",\n                                      searchString));\n            }\n        }\n        catch (XmlRpcException e) {\n            log.info(\"Caught Exception :\" + e);\n            e.printStackTrace();\n            errs.add(ActionMessages.GLOBAL_MESSAGE,\n                    new ActionMessage(\"packages.search.connection_error\"));\n        }\n        if (dr == null) {\n            ActionMessages messages = new ActionMessages();\n            messages.add(ActionMessages.GLOBAL_MESSAGE,\n                    new ActionMessage(\"systemsearch_no_matches_found\"));\n            getStrutsDelegate().saveMessages(request, messages);\n        }\n        if (!errs.isEmpty()) {\n            addErrors(request, errs);\n        }\n        return dr;\n    }","commit_id":"7799d4a568710601c0284c1f67a1c5b8b033f742","url":"https://github.com/spacewalkproject/spacewalk"},{"original_method":"@Override\n    public Sequence eval(Sequence contextSequence, Item contextItem) throws XPathException {\n\n\n        context.expressionStart(this);\n\n        if(getContext().getXQueryVersion()<30){\n            ErrorCode ec = new EXistErrorCode(\"EXXQDY0002\", \"The try-catch expression is supported \"\n                    + \"for xquery version \\\"3.0\\\" and later.\");\n            throw new XPathException(ec, ec.getDescription(), null);\n        }\n\n        try {\n            // Evaluate 'try' expression\n            Sequence tryTargetSeq = tryTargetExpr.eval(contextSequence, contextItem);\n            return tryTargetSeq;\n\n        } catch (XPathException xpe) {\n            // Get errorcode from exception\n            ErrorCode errorCode = xpe.getErrorCode();\n\n            // if no errorcode is found, reconstruct by parsing the error text.\n            if (errorCode == null) {\n                errorCode = extractErrorCode(xpe);\n            }\n\n            // We need the qname in the end\n            QName errorCodeQname = errorCode.getErrorQName();\n\n            // Exception in thrown, catch expression will be evaluated.\n            // catchvars (CatchErrorCode (, CatchErrorDesc (, CatchErrorVal)?)? )\n            // need to be retrieved as variables\n            Sequence catchResultSeq = null;\n            LocalVariable mark0 = context.markLocalVariables(false);\n\n            try {\n                // flag used to escape loop when errorcode has matched\n                boolean errorMatched = false;\n\n                // Iterate on all catch clauses\n                for (CatchClause catchClause : catchClauses) {\n\n                    if (isErrorInList(errorCodeQname, catchClause.getCatchErrorList()) && !errorMatched) {\n\n                        errorMatched = true;\n\n                        // Get catch variables\n                        List<QName> catchVars = (List<QName>) catchClause.getCatchVars();\n                        LocalVariable mark1 = context.markLocalVariables(false);\n                        int varPos = 1;\n\n                        try {\n                            // catch variables\n                            // \"(\" CatchErrorCode (\",\" CatchErrorDesc (\",\" CatchErrorVal)?)? \")\"\n                            for (QName catchVar : catchVars) {\n\n                                // reset qname and prefix\n                                catchVar.setPrefix(null);\n                                catchVar.setNamespaceURI(\"\");\n\n                                LocalVariable localVar = new LocalVariable(catchVar);\n\n                                // This should be in order of existance\n                                // xs:QName, xs:string?, and item()* respectively.\n                                switch (varPos) {\n                                    case 1:\n                                        // Error code: qname\n                                        localVar.setSequenceType(new SequenceType(Type.QNAME, Cardinality.EXACTLY_ONE));\n                                        QNameValue qnv = new QNameValue(context, catchVar);\n                                        localVar.setValue(new StringValue(errorCode.getErrorQName().getStringValue()));\n                                        break;\n                                    case 2:\n                                        // Error description : optional string\n                                        localVar.setSequenceType(new SequenceType(Type.STRING, Cardinality.ZERO_OR_ONE));\n                                        StringValue sv = new StringValue(errorCode.getDescription());\n                                        localVar.setValue(sv);\n                                        break;\n                                    case 3:\n                                        // Error value : optional item\n                                        localVar.setSequenceType(new SequenceType(Type.ITEM, Cardinality.ZERO_OR_MORE));\n                                        Sequence sequence = xpe.getErrorVal();\n                                        if (sequence == null) {\n                                            // TODO setting an empty sequence does not work, it does\n                                            // not make the variable visible\n                                            sequence = Sequence.EMPTY_SEQUENCE;\n                                        }\n                                        localVar.setValue(sequence);\n                                        break;\n                                }\n                                context.declareVariableBinding(localVar);\n                                varPos++;\n\n                            } // Var catch variables\n\n\n                            // Evaluate catch expression\n                            catchResultSeq = ((Expression) catchClause.getCatchExpr()).eval(contextSequence, contextItem);\n\n                        } finally {\n                            context.popLocalVariables(mark1);\n                        }\n\n                    } else {\n                        // if in the end nothing is set, rethrow\n                    }\n                } // for catch clauses\n\n                // If an error hasn't been catched, throw new one\n                if (!errorMatched) {\n                    throw xpe;\n                }\n\n\n            } finally {\n                context.popLocalVariables(mark0);\n            }\n\n            return catchResultSeq;\n\n        } finally {\n            context.expressionEnd(this);\n        }\n    }","id":55055,"modified_method":"@Override\n    public Sequence eval(Sequence contextSequence, Item contextItem) throws XPathException {\n\n\n        context.expressionStart(this);\n\n        if(getContext().getXQueryVersion()<30){\n            ErrorCode ec = new EXistErrorCode(\"EXXQDY0002\", \"The try-catch expression is supported \"\n                    + \"for xquery version \\\"3.0\\\" and later.\");\n            throw new XPathException(ec, ec.getDescription(), null);\n        }\n\n        try {\n            // Evaluate 'try' expression\n            Sequence tryTargetSeq = tryTargetExpr.eval(contextSequence, contextItem);\n            return tryTargetSeq;\n\n        } catch (Throwable throwable) { \n\n            ErrorCode errorCode = null;\n\n            if(throwable instanceof XPathException){\n                // Get errorcode from nicely thrown xpathexception\n                XPathException xpe = (XPathException)throwable;\n                errorCode = xpe.getErrorCode();\n\n                // if no errorcode is found, reconstruct by parsing the error text.\n                if (errorCode == null) {\n                    errorCode = extractErrorCode((XPathException)xpe);\n                }\n\n            } else {\n                // Get errorcode from all other errors and exceptions\n                errorCode = new JavaErrorCode(throwable);\n            }\n\n            // We need the qname in the end\n            QName errorCodeQname = errorCode.getErrorQName();\n\n            // Exception in thrown, catch expression will be evaluated.\n            // catchvars (CatchErrorCode (, CatchErrorDesc (, CatchErrorVal)?)? )\n            // need to be retrieved as variables\n            Sequence catchResultSeq = null;\n            LocalVariable mark0 = context.markLocalVariables(false);\n\n            try {\n                // flag used to escape loop when errorcode has matched\n                boolean errorMatched = false;\n\n                // Iterate on all catch clauses\n                for (CatchClause catchClause : catchClauses) {\n\n                    if (isErrorInList(errorCodeQname, catchClause.getCatchErrorList()) && !errorMatched) {\n\n                        errorMatched = true;\n\n                        // Get catch variables\n                        List<QName> catchVars = (List<QName>) catchClause.getCatchVars();\n                        LocalVariable mark1 = context.markLocalVariables(false);\n                        int varPos = 1;\n\n                        try {\n                            // catch variables\n                            // \"(\" CatchErrorCode (\",\" CatchErrorDesc (\",\" CatchErrorVal)?)? \")\"\n                            for (QName catchVar : catchVars) {\n\n                                // reset qname and prefix\n                                catchVar.setPrefix(null);\n                                catchVar.setNamespaceURI(\"\");\n\n                                LocalVariable localVar = new LocalVariable(catchVar);\n\n                                // This should be in order of existance\n                                // xs:QName, xs:string?, and item()* respectively.\n                                switch (varPos) {\n                                    case 1:\n                                        // Error code: qname\n                                        localVar.setSequenceType(new SequenceType(Type.QNAME, Cardinality.EXACTLY_ONE));\n                                        QNameValue qnv = new QNameValue(context, catchVar);\n                                        localVar.setValue(new StringValue(errorCode.getErrorQName().getStringValue()));\n                                        break;\n\n                                    case 2:\n                                        // Error description : optional string\n                                        localVar.setSequenceType(new SequenceType(Type.STRING, Cardinality.ZERO_OR_ONE));\n                                        StringValue sv = new StringValue(errorCode.getDescription());\n                                        localVar.setValue(sv);\n                                        break;\n\n                                    case 3:\n                                        // Error value : optional item\n                                        localVar.setSequenceType(new SequenceType(Type.ITEM, Cardinality.ZERO_OR_MORE));\n                                        if (throwable instanceof XPathException) {\n                                            // Get errorcode from exception\n                                            XPathException xpe = (XPathException) throwable;\n                                            Sequence sequence = xpe.getErrorVal();\n                                            if (sequence == null) {\n                                                // TODO setting an empty sequence does not work, it does\n                                                // not make the variable visible\n                                                sequence = Sequence.EMPTY_SEQUENCE;\n                                            }\n                                            localVar.setValue(sequence);\n\n                                        } else {\n                                            // fill data from throwable object\n                                            StringValue value = new StringValue(getStackTrace(throwable));\n                                            localVar.setValue(value);\n                                        }\n                                        break;\n                                }\n                                context.declareVariableBinding(localVar);\n                                varPos++;\n\n                            } // Var catch variables\n\n\n                            // Evaluate catch expression\n                            catchResultSeq = ((Expression) catchClause.getCatchExpr()).eval(contextSequence, contextItem);\n\n                        } finally {\n                            context.popLocalVariables(mark1);\n                        }\n\n                    } else {\n                        // if in the end nothing is set, rethrow\n                    }\n                } // for catch clauses\n\n                // If an error hasn't been catched, throw new one\n                if (!errorMatched) {\n                    LOG.error(throwable);\n                    throw new XPathException(throwable);\n                }\n\n\n            } finally {\n                context.popLocalVariables(mark0);\n            }\n\n            return catchResultSeq;\n\n        } finally {\n            context.expressionEnd(this);\n        }\n    }","commit_id":"bd8842b4d1f40de9f0721d20fbff567b509e3cac","url":"https://github.com/eXist-db/exist"},{"original_method":"@SuppressWarnings({\"unchecked\", \"rawtypes\"})\r\n    @Override\r\n    public void handle(HttpRequest request, HttpResponse response, HttpContext context) throws HttpException, IOException {\r\n        // get some information for the access log...\r\n        StringBuffer sb = new StringBuffer();\r\n        HttpServerConnection connObj = (HttpServerConnection)context.getAttribute(\"http.connection\");\r\n        if (connObj instanceof SocketHttpServerConnection) {\r\n            InetAddress remoteAddr = ((SocketHttpServerConnection)connObj).getRemoteAddress();\r\n            sb.append(remoteAddr.toString() + \" -- \");\r\n        }\r\n        sb.append(request.getRequestLine());\r\n\r\n        try {\r\n            String uri = request.getRequestLine().getUri();\r\n            int requestParamsStartIndex = uri.indexOf('?');\r\n            if (requestParamsStartIndex >= 0) {\r\n                uri = uri.substring(requestParamsStartIndex+1);\r\n            }\r\n\r\n            String[] paramArray = uri.split(\"&\");\r\n            if (paramArray.length < 1) {\r\n                s_logger.info(\"no parameters received for request: \" + uri + \", aborting...\");\r\n                return;\r\n            }\r\n\r\n            Map parameterMap = new HashMap<String, String[]>();\r\n\r\n            String responseType = BaseCmd.RESPONSE_TYPE_XML;\r\n            for (String paramEntry : paramArray) {\r\n                String[] paramValue = paramEntry.split(\"=\");\r\n                if (paramValue.length != 2) {\r\n                    s_logger.info(\"malformed parameter: \" + paramEntry + \", skipping\");\r\n                    continue;\r\n                }\r\n                if (\"response\".equalsIgnoreCase(paramValue[0])) {\r\n                    responseType = paramValue[1];\r\n                } else {\r\n                    // according to the servlet spec, the parameter map should be in the form (name=String, value=String[]), so parameter values will be stored in an array\r\n                    parameterMap.put(/*name*/paramValue[0], /*value*/new String[] {paramValue[1]});\r\n                }\r\n            }\r\n            try {\r\n            \t// always trust commands from API port, user context will always be UID_SYSTEM/ACCOUNT_ID_SYSTEM\n            \tUserContext.registerContext(_systemUser.getId(), _systemAccount, null, true);\r\n            \tsb.insert(0,\"(userId=\"+User.UID_SYSTEM+ \" accountId=\"+Account.ACCOUNT_ID_SYSTEM+ \" sessionId=\"+null+ \") \" );\r\n                String responseText = handleRequest(parameterMap, true, responseType, sb);\r\n                sb.append(\" 200 \" + ((responseText == null) ? 0 : responseText.length()));\r\n\n                writeResponse(response, responseText, HttpStatus.SC_OK, responseType, null);\r\n            } catch (ServerApiException se) {\r\n                String responseName = null;\r\n                String cmdClassName = null;\r\n\r\n                try {\r\n                    if (se.getErrorCode() == BaseCmd.UNSUPPORTED_ACTION_ERROR) {\r\n                        responseName = \"errorresponse\";\r\n                    } else {\r\n                        String cmdName = ((String[])parameterMap.get(\"command\"))[0];\r\n                        cmdClassName = _apiCommands.getProperty(cmdName);\r\n                        Class claz = Class.forName(cmdClassName);\r\n                        responseName = ((BaseCmd)claz.newInstance()).getCommandName();\r\n                    }\r\n                    \r\n                    ExceptionResponse apiResponse = new ExceptionResponse();\r\n                    apiResponse.setErrorCode(se.getErrorCode());\r\n                    apiResponse.setErrorText(se.getDescription());\r\n                    apiResponse.setResponseName(responseName);\r\n                    String responseText = ApiResponseSerializer.toSerializedString(apiResponse, responseType);\r\n                    \r\n                    writeResponse(response, responseText, se.getErrorCode(), responseType, se.getDescription());\r\n                    sb.append(\" \" + se.getErrorCode() + \" \" + responseText.length());\r\n                } catch (Exception e) {\r\n                    s_logger.error(\"IO Exception responding to http request\", e);\r\n                }\r\n            } catch(RuntimeException e) {\r\n            \t// log runtime exception like NullPointerException to help identify the source easier\r\n                s_logger.error(\"Unhandled exception, \", e);\r\n                throw e;\r\n            }\r\n        } finally {\r\n            s_accessLogger.info(sb.toString());\r\n            UserContext.unregisterContext();\r\n        }\r\n    }","id":55056,"modified_method":"@SuppressWarnings({\"unchecked\", \"rawtypes\"})\r\n    @Override\r\n    public void handle(HttpRequest request, HttpResponse response, HttpContext context) throws HttpException, IOException {\r\n        // get some information for the access log...\r\n        StringBuffer sb = new StringBuffer();\r\n        HttpServerConnection connObj = (HttpServerConnection)context.getAttribute(\"http.connection\");\r\n        if (connObj instanceof SocketHttpServerConnection) {\r\n            InetAddress remoteAddr = ((SocketHttpServerConnection)connObj).getRemoteAddress();\r\n            sb.append(remoteAddr.toString() + \" -- \");\r\n        }\r\n        sb.append(request.getRequestLine());\r\n\r\n        try {\r\n            String uri = request.getRequestLine().getUri();\r\n            int requestParamsStartIndex = uri.indexOf('?');\r\n            if (requestParamsStartIndex >= 0) {\r\n                uri = uri.substring(requestParamsStartIndex+1);\r\n            }\r\n\r\n            String[] paramArray = uri.split(\"&\");\r\n            if (paramArray.length < 1) {\r\n                s_logger.info(\"no parameters received for request: \" + uri + \", aborting...\");\r\n                return;\r\n            }\r\n\r\n            Map parameterMap = new HashMap<String, String[]>();\r\n\r\n            String responseType = BaseCmd.RESPONSE_TYPE_XML;\r\n            for (String paramEntry : paramArray) {\r\n                String[] paramValue = paramEntry.split(\"=\");\r\n                if (paramValue.length != 2) {\r\n                    s_logger.info(\"malformed parameter: \" + paramEntry + \", skipping\");\r\n                    continue;\r\n                }\r\n                if (\"response\".equalsIgnoreCase(paramValue[0])) {\r\n                    responseType = paramValue[1];\r\n                } else {\r\n                    // according to the servlet spec, the parameter map should be in the form (name=String, value=String[]), so parameter values will be stored in an array\r\n                    parameterMap.put(/*name*/paramValue[0], /*value*/new String[] {paramValue[1]});\r\n                }\r\n            }\r\n            try {\r\n            \t// always trust commands from API port, user context will always be UID_SYSTEM/ACCOUNT_ID_SYSTEM\n            \tUserContext.registerContext(_systemUser.getId(), _systemAccount, null, true);\r\n            \tsb.insert(0,\"(userId=\"+User.UID_SYSTEM+ \" accountId=\"+Account.ACCOUNT_ID_SYSTEM+ \" sessionId=\"+null+ \") \" );\r\n                String responseText = handleRequest(parameterMap, true, responseType, sb);\r\n                sb.append(\" 200 \" + ((responseText == null) ? 0 : responseText.length()));\r\n\n                writeResponse(response, responseText, HttpStatus.SC_OK, responseType, null);\r\n            } catch (ServerApiException se) {\r\n                String responseText = getSerializedApiError(se.getErrorCode(), se.getDescription(), parameterMap, responseType);\r\n                writeResponse(response, responseText, se.getErrorCode(), responseType, se.getDescription());\r\n                sb.append(\" \" +se.getErrorCode() + \" \" + se.getDescription());\r\n            } catch(RuntimeException e) {\r\n            \t// log runtime exception like NullPointerException to help identify the source easier\r\n                s_logger.error(\"Unhandled exception, \", e);\r\n                throw e;\r\n            }\r\n        } finally {\r\n            s_accessLogger.info(sb.toString());\r\n            UserContext.unregisterContext();\r\n        }\r\n    }","commit_id":"5743db87e113a4cd95d7f2c3e0376babb11d193e","url":"https://github.com/apache/cloudstack"},{"original_method":"@SuppressWarnings(\"unchecked\")\r\n    private void processRequest(HttpServletRequest req, HttpServletResponse resp) {\n        StringBuffer auditTrailSb = new StringBuffer();\n        auditTrailSb.append(\" \" +req.getRemoteAddr());\n        auditTrailSb.append(\" -- \" + req.getMethod() + \" \" );        \r\n        try {\r\n            Map<String, Object[]> params = new HashMap<String, Object[]>();\r\n            params.putAll(req.getParameterMap());\r\n            HttpSession session = req.getSession(false);                                   \r\n\r\n            // get the response format since we'll need it in a couple of places\r\n            String responseType = BaseCmd.RESPONSE_TYPE_XML;\r\n            Object[] responseTypeParam = params.get(\"response\");\r\n            if (responseTypeParam != null) {\r\n                responseType = (String)responseTypeParam[0];\r\n            }\r\n\r\n            Object[] commandObj = params.get(\"command\");\r\n            if (commandObj != null) {\r\n                String command = (String)commandObj[0];\r\n                if (\"logout\".equalsIgnoreCase(command)) {\r\n                    // if this is just a logout, invalidate the session and return\r\n                    if (session != null) {  \r\n                        Long userId = (Long)session.getAttribute(\"userid\");\n                        Account account = (Account)session.getAttribute(\"accountobj\");\n                        Long accountId = null;\n                        if (account != null) {\n                            accountId = account.getId();\n                        }\n                        auditTrailSb.insert(0, \"(userId=\"+userId+ \n                                \" accountId=\"+ accountId + \n                                \" sessionId=\"+session.getId() +\")\" );\r\n                        if (userId != null) {\r\n                            _apiServer.logoutUser(userId);\r\n                        }\r\n                        try {\n                            session.invalidate();\n                        }catch (IllegalStateException ise) {}\r\n                    }\n                    auditTrailSb.append(\"command=logout\");\n                    auditTrailSb.append(\" \" +HttpServletResponse.SC_OK);\r\n                    writeResponse(resp, getLogoutSuccessResponse(responseType), false, responseType);\r\n                    return;\r\n                } else if (\"login\".equalsIgnoreCase(command)) {\n                    auditTrailSb.append(\"command=login\");\r\n                    // if this is a login, authenticate the user and return\r\n                    if (session != null) {\n                        try {\n                            session.invalidate();\n                        }catch (IllegalStateException ise) {}\n                    }\r\n                \tsession = req.getSession(true);\r\n                    String[] username = (String[])params.get(\"username\");\r\n                    String[] password = (String[])params.get(\"password\");\n                    String[] domainIdArr = (String[])params.get(\"domainid\");\n                    \r\n                    if (domainIdArr == null) {\r\n                    \tdomainIdArr = (String[])params.get(\"domainId\");\r\n                    }\r\n                    String[] domainName = (String[])params.get(\"domain\");\r\n                    Long domainId = null;\r\n                    if ((domainIdArr != null) && (domainIdArr.length > 0)) {\r\n                    \ttry{\n                    \t\tdomainId = new Long(Long.parseLong(domainIdArr[0]));\n                    \t\tauditTrailSb.append(\" domainid=\" +domainId);// building the params for POST call\n                    \t}\n                    \tcatch(NumberFormatException e)\n                    \t{\n                    \t\ts_logger.warn(\"Invalid domain id entered by user\");\n                    \t\tauditTrailSb.append(\" \" + HttpServletResponse.SC_UNAUTHORIZED + \" \" + \"Invalid domain id entered, please enter a valid one\");\n                    \t\tresp.sendError(HttpServletResponse.SC_UNAUTHORIZED,\"Invalid domain id entered, please enter a valid one\");\n                    \t}\n                    }\r\n                    String domain = null;\r\n                    if (domainName != null) {\r\n                    \tdomain = domainName[0];\n                    \tauditTrailSb.append(\" domain=\" +domain);\n                    \tif (domain != null) {\n                    \t    // ensure domain starts with '/' and ends with '/'\n                    \t    if (!domain.endsWith(\"/\")) {\n                                domain += '/';\n                    \t    }\n                    \t    if (!domain.startsWith(\"/\")) {\n                    \t        domain = \"/\" + domain;\n                    \t    }\n                    \t}\r\n                    }\n\r\n                    if (username != null) {\n                        String pwd = ((password == null) ? null : password[0]);\n                        try {\n                            _apiServer.loginUser(session, username[0], pwd, domainId, domain, params);\n                            auditTrailSb.insert(0,\"(userId=\"+session.getAttribute(\"userid\")+ \n                                    \" accountId=\"+ ((Account)session.getAttribute(\"accountobj\")).getId()+ \n                                    \" sessionId=\"+session.getId()+ \")\" );\n                            String loginResponse = getLoginSuccessResponse(session, responseType);\n                            writeResponse(resp, loginResponse, false, responseType);\n                            return;\n                        } catch (CloudAuthenticationException ex) {\n                            // TODO:  fall through to API key, or just fail here w/ auth error? (HTTP 401)\n                            try {\n                                session.invalidate();\n                            }catch (IllegalStateException ise) {}\n                            auditTrailSb.append(\" \" + BaseCmd.ACCOUNT_ERROR + \" \" + ex.getMessage() != null ? ex.getMessage() : \"failed to authenticate user, check if username/password are correct\");\n                            resp.sendError(BaseCmd.ACCOUNT_ERROR, ex.getMessage() != null ? ex.getMessage() : \"failed to authenticate user, check if username/password are correct\");\n                            return;\n                        }\r\n                    }\r\n                } \r\n            }\r\n            auditTrailSb.append(req.getQueryString());\r\n            boolean isNew = ((session == null) ? true : session.isNew());\r\n\r\n            // Initialize an empty context and we will update it after we have verified the request below,\n            // we no longer rely on web-session here, verifyRequest will populate user/account information\n            // if a API key exists\n            UserContext.registerContext(_accountMgr.getSystemUser().getId(), _accountMgr.getSystemAccount(), null, false);\n            Long userId = null;\n\n            if (!isNew) {\r\n                userId = (Long)session.getAttribute(\"userid\");\r\n                String account = (String)session.getAttribute(\"account\");\r\n                Long domainId = (Long)session.getAttribute(\"domainid\");\r\n                Object accountObj = session.getAttribute(\"accountobj\");\n                String sessionKey = (String)session.getAttribute(\"sessionkey\");\n                String[] sessionKeyParam = (String[])params.get(\"sessionkey\");\n                if ((sessionKeyParam == null) || (sessionKey == null) || !sessionKey.equals(sessionKeyParam[0])) {\n                    try {\n                        session.invalidate();\n                    }catch (IllegalStateException ise) {}\n                    auditTrailSb.append(\" \" + HttpServletResponse.SC_UNAUTHORIZED +  \" \" + \"unable to verify user credentials\");\n                    resp.sendError(HttpServletResponse.SC_UNAUTHORIZED, \"unable to verify user credentials\");\n                    return;\n                }\r\n\r\n                // Do a sanity check here to make sure the user hasn't already been deleted\r\n                if ((userId != null) && (account != null) && (accountObj != null) && _apiServer.verifyUser(userId)) {\r\n                    String[] command = (String[])params.get(\"command\");\r\n                    if (command == null) {\r\n                        s_logger.info(\"missing command, ignoring request...\");\n                        auditTrailSb.append(\" \" + HttpServletResponse.SC_BAD_REQUEST + \" \" + \"no command specified\");\r\n                        resp.sendError(HttpServletResponse.SC_BAD_REQUEST, \"no command specified\");\r\n                        return;\r\n                    }\n                    UserContext.updateContext(userId, (Account)accountObj, session.getId());\r\n                } else {\r\n                    // Invalidate the session to ensure we won't allow a request across management server restarts if the userId was serialized to the\r\n                    // stored session\r\n                    try {\n                        session.invalidate();\n                    }catch (IllegalStateException ise) {}\n                    auditTrailSb.append(\" \" + HttpServletResponse.SC_UNAUTHORIZED + \" \" + \"unable to verify user credentials\");\n                    resp.sendError(HttpServletResponse.SC_UNAUTHORIZED, \"unable to verify user credentials\");\n                    return;\r\n                }\r\n            }\r\n\n            if (_apiServer.verifyRequest(params, userId)) {\n                /*\n            \tif (accountObj != null) {\r\n            \t\tAccount userAccount = (Account)accountObj;\r\n            \t\tif (userAccount.getType() == Account.ACCOUNT_TYPE_NORMAL) {\r\n            \t\t\tparams.put(BaseCmd.Properties.USER_ID.getName(), new String[] { userId });\r\n                        params.put(BaseCmd.Properties.ACCOUNT.getName(), new String[] { account });\r\n                        params.put(BaseCmd.Properties.DOMAIN_ID.getName(), new String[] { domainId });\r\n                \t\tparams.put(BaseCmd.Properties.ACCOUNT_OBJ.getName(), new Object[] { accountObj });\r\n            \t\t} else {\r\n            \t\t\tparams.put(BaseCmd.Properties.USER_ID.getName(), new String[] { userId });\r\n            \t\t\tparams.put(BaseCmd.Properties.ACCOUNT_OBJ.getName(), new Object[] { accountObj });\r\n            \t\t}\r\n            \t}\n            \t\n            \t// update user context info here so that we can take information if the request is authenticated\n            \t// via api key mechanism\n            \tupdateUserContext(params, session != null ? session.getId() : null);\n                */\n\n            \tauditTrailSb.insert(0, \"(userId=\"+UserContext.current().getCallerUserId()+ \" accountId=\"+UserContext.current().getCaller().getId()+ \" sessionId=\"+(session != null ? session.getId() : null)+ \")\" );\n\n            \ttry {\r\n            \t\tString response = _apiServer.handleRequest(params, true, responseType, auditTrailSb);            \t\t\r\n            \t\twriteResponse(resp, response != null ? response : \"\", false, responseType);\r\n            \t} catch (ServerApiException se) {\n            \t    auditTrailSb.append(\" \" +se.getErrorCode() + \" \" + se.getDescription());\r\n            \t\tresp.sendError(se.getErrorCode(), se.getDescription());\r\n            \t}\r\n            } else {\n                if (session != null) {\n                    try {\n                        session.invalidate();\n                    }catch (IllegalStateException ise) {}\n                }\n                auditTrailSb.append(\" \" + HttpServletResponse.SC_UNAUTHORIZED +  \" \" + \"unable to verify user credentials and/or request signature\");\n                resp.sendError(HttpServletResponse.SC_UNAUTHORIZED, \"unable to verify user credentials and/or request signature\");\r\n            }\r\n        } catch (IOException ioex) {\r\n            if (s_logger.isTraceEnabled()) {\r\n                s_logger.trace(\"exception processing request: \" + ioex);\r\n            }\n            auditTrailSb.append(\" exception processing request\" );\r\n        }catch (InvalidParameterException ipe){\n            auditTrailSb.append(\" \" + HttpServletResponse.SC_NOT_FOUND +  \" \" + ipe.getMessage());\n            try {\n\t\t\t\tresp.sendError(HttpServletResponse.SC_NOT_FOUND, ipe.getMessage());\n\t\t\t} catch (IOException e) {\n\t\t\t\ts_logger.error(\"Unable to send back error response for invalid command\");\n\t\t\t\tauditTrailSb.append(\" \" + HttpServletResponse.SC_NOT_FOUND +  \" \" + \"Unable to send back error response for \"+ipe.getMessage());\n\t\t\t}        \t\n        }catch (Exception ex) {\r\n            s_logger.error(\"unknown exception writing api response\", ex);\n            auditTrailSb.append(\" unknown exception writing api response\");\r\n        } finally {\n            s_accessLogger.info(auditTrailSb.toString());            \n            // cleanup user context to prevent from being peeked in other request context\n            UserContext.unregisterContext();\n        }\r\n    }","id":55057,"modified_method":"@SuppressWarnings(\"unchecked\")\r\n    private void processRequest(HttpServletRequest req, HttpServletResponse resp) {\n        StringBuffer auditTrailSb = new StringBuffer();\n        auditTrailSb.append(\" \" +req.getRemoteAddr());\n        auditTrailSb.append(\" -- \" + req.getMethod() + \" \" );   \n        // get the response format since we'll need it in a couple of places\n        String responseType = BaseCmd.RESPONSE_TYPE_XML;\n        Map<String, Object[]> params = new HashMap<String, Object[]>();\n        params.putAll(req.getParameterMap());\n        \r\n        try {\r\n            HttpSession session = req.getSession(false);                                   \r\n            Object[] responseTypeParam = params.get(\"response\");\r\n            if (responseTypeParam != null) {\r\n                responseType = (String)responseTypeParam[0];\r\n            }\r\n\r\n            Object[] commandObj = params.get(\"command\");\r\n            if (commandObj != null) {\r\n                String command = (String)commandObj[0];\r\n                if (\"logout\".equalsIgnoreCase(command)) {\r\n                    // if this is just a logout, invalidate the session and return\r\n                    if (session != null) {  \r\n                        Long userId = (Long)session.getAttribute(\"userid\");\n                        Account account = (Account)session.getAttribute(\"accountobj\");\n                        Long accountId = null;\n                        if (account != null) {\n                            accountId = account.getId();\n                        }\n                        auditTrailSb.insert(0, \"(userId=\"+userId+ \n                                \" accountId=\"+ accountId + \n                                \" sessionId=\"+session.getId() +\")\" );\r\n                        if (userId != null) {\r\n                            _apiServer.logoutUser(userId);\r\n                        }\r\n                        try {\n                            session.invalidate();\n                        }catch (IllegalStateException ise) {}\r\n                    }\n                    auditTrailSb.append(\"command=logout\");\n                    auditTrailSb.append(\" \" + HttpServletResponse.SC_OK);\r\n                    writeResponse(resp, getLogoutSuccessResponse(responseType), HttpServletResponse.SC_OK, responseType);\r\n                    return;\r\n                } else if (\"login\".equalsIgnoreCase(command)) {\n                    auditTrailSb.append(\"command=login\");\r\n                    // if this is a login, authenticate the user and return\r\n                    if (session != null) {\n                        try {\n                            session.invalidate();\n                        }catch (IllegalStateException ise) {}\n                    }\r\n                \tsession = req.getSession(true);\r\n                    String[] username = (String[])params.get(\"username\");\r\n                    String[] password = (String[])params.get(\"password\");\n                    String[] domainIdArr = (String[])params.get(\"domainid\");\n                    \r\n                    if (domainIdArr == null) {\r\n                    \tdomainIdArr = (String[])params.get(\"domainId\");\r\n                    }\r\n                    String[] domainName = (String[])params.get(\"domain\");\r\n                    Long domainId = null;\r\n                    if ((domainIdArr != null) && (domainIdArr.length > 0)) {\r\n                    \ttry{\n                    \t\tdomainId = new Long(Long.parseLong(domainIdArr[0]));\n                    \t\tauditTrailSb.append(\" domainid=\" +domainId);// building the params for POST call\n                    \t}\n                    \tcatch(NumberFormatException e)\n                    \t{\n                    \t\ts_logger.warn(\"Invalid domain id entered by user\");\n                    \t\tauditTrailSb.append(\" \" + HttpServletResponse.SC_UNAUTHORIZED + \" \" + \"Invalid domain id entered, please enter a valid one\");\n                    \t\tString serializedResponse = _apiServer.getSerializedApiError(HttpServletResponse.SC_UNAUTHORIZED, \"Invalid domain id entered, please enter a valid one\", params, responseType);\n                    \t\twriteResponse(resp, serializedResponse, HttpServletResponse.SC_UNAUTHORIZED, responseType);\n                    \t}\n                    }\r\n                    String domain = null;\r\n                    if (domainName != null) {\r\n                    \tdomain = domainName[0];\n                    \tauditTrailSb.append(\" domain=\" +domain);\n                    \tif (domain != null) {\n                    \t    // ensure domain starts with '/' and ends with '/'\n                    \t    if (!domain.endsWith(\"/\")) {\n                                domain += '/';\n                    \t    }\n                    \t    if (!domain.startsWith(\"/\")) {\n                    \t        domain = \"/\" + domain;\n                    \t    }\n                    \t}\r\n                    }\n\r\n                    if (username != null) {\n                        String pwd = ((password == null) ? null : password[0]);\n                        try {\n                            _apiServer.loginUser(session, username[0], pwd, domainId, domain, params);\n                            auditTrailSb.insert(0,\"(userId=\"+session.getAttribute(\"userid\")+ \n                                    \" accountId=\"+ ((Account)session.getAttribute(\"accountobj\")).getId()+ \n                                    \" sessionId=\"+session.getId()+ \")\" );\n                            String loginResponse = getLoginSuccessResponse(session, responseType);\n                            writeResponse(resp, loginResponse, HttpServletResponse.SC_OK, responseType);\n                            return;\n                        } catch (CloudAuthenticationException ex) {\n                            // TODO:  fall through to API key, or just fail here w/ auth error? (HTTP 401)\n                            try {\n                                session.invalidate();\n                            }catch (IllegalStateException ise) {}\n                            \n                            auditTrailSb.append(\" \" + BaseCmd.ACCOUNT_ERROR + \" \" + ex.getMessage() != null ? ex.getMessage() : \"failed to authenticate user, check if username/password are correct\");\n                            String serializedResponse = _apiServer.getSerializedApiError(BaseCmd.ACCOUNT_ERROR, ex.getMessage() != null ? ex.getMessage() : \"failed to authenticate user, check if username/password are correct\", params, responseType);\n                            writeResponse(resp, serializedResponse, BaseCmd.ACCOUNT_ERROR, responseType);\n                            return;\n                        }\r\n                    }\r\n                } \r\n            }\r\n            auditTrailSb.append(req.getQueryString());\r\n            boolean isNew = ((session == null) ? true : session.isNew());\r\n\r\n            // Initialize an empty context and we will update it after we have verified the request below,\n            // we no longer rely on web-session here, verifyRequest will populate user/account information\n            // if a API key exists\n            UserContext.registerContext(_accountMgr.getSystemUser().getId(), _accountMgr.getSystemAccount(), null, false);\n            Long userId = null;\n\n            if (!isNew) {\r\n                userId = (Long)session.getAttribute(\"userid\");\r\n                String account = (String)session.getAttribute(\"account\");\r\n                Long domainId = (Long)session.getAttribute(\"domainid\");\r\n                Object accountObj = session.getAttribute(\"accountobj\");\n                String sessionKey = (String)session.getAttribute(\"sessionkey\");\n                String[] sessionKeyParam = (String[])params.get(\"sessionkey\");\n                if ((sessionKeyParam == null) || (sessionKey == null) || !sessionKey.equals(sessionKeyParam[0])) {\n                    try {\n                        session.invalidate();\n                    }catch (IllegalStateException ise) {}\n                    auditTrailSb.append(\" \" + HttpServletResponse.SC_UNAUTHORIZED +  \" \" + \"unable to verify user credentials\");\n                    String serializedResponse = _apiServer.getSerializedApiError(HttpServletResponse.SC_UNAUTHORIZED, \"unable to verify user credentials\", params, responseType);\n                    writeResponse(resp, serializedResponse, HttpServletResponse.SC_UNAUTHORIZED, responseType);\n                    return;\n                }\r\n\r\n                // Do a sanity check here to make sure the user hasn't already been deleted\r\n                if ((userId != null) && (account != null) && (accountObj != null) && _apiServer.verifyUser(userId)) {\r\n                    String[] command = (String[])params.get(\"command\");\r\n                    if (command == null) {\r\n                        s_logger.info(\"missing command, ignoring request...\");\n                        auditTrailSb.append(\" \" + HttpServletResponse.SC_BAD_REQUEST + \" \" + \"no command specified\");\n                        String serializedResponse = _apiServer.getSerializedApiError(HttpServletResponse.SC_BAD_REQUEST, \"no command specified\", params, responseType);\n                        writeResponse(resp, serializedResponse, HttpServletResponse.SC_BAD_REQUEST, responseType);\r\n                        return;\r\n                    }\n                    UserContext.updateContext(userId, (Account)accountObj, session.getId());\r\n                } else {\r\n                    // Invalidate the session to ensure we won't allow a request across management server restarts if the userId was serialized to the\r\n                    // stored session\r\n                    try {\n                        session.invalidate();\n                    }catch (IllegalStateException ise) {}\n                    \n                    auditTrailSb.append(\" \" + HttpServletResponse.SC_UNAUTHORIZED + \" \" + \"unable to verify user credentials\");\n                    String serializedResponse = _apiServer.getSerializedApiError(HttpServletResponse.SC_UNAUTHORIZED, \"unable to verify user credentials\", params, responseType);\n                    writeResponse(resp, serializedResponse, HttpServletResponse.SC_UNAUTHORIZED, responseType);\n                    return;\r\n                }\r\n            }\r\n\n            if (_apiServer.verifyRequest(params, userId)) {\n                /*\n            \tif (accountObj != null) {\r\n            \t\tAccount userAccount = (Account)accountObj;\r\n            \t\tif (userAccount.getType() == Account.ACCOUNT_TYPE_NORMAL) {\r\n            \t\t\tparams.put(BaseCmd.Properties.USER_ID.getName(), new String[] { userId });\r\n                        params.put(BaseCmd.Properties.ACCOUNT.getName(), new String[] { account });\r\n                        params.put(BaseCmd.Properties.DOMAIN_ID.getName(), new String[] { domainId });\r\n                \t\tparams.put(BaseCmd.Properties.ACCOUNT_OBJ.getName(), new Object[] { accountObj });\r\n            \t\t} else {\r\n            \t\t\tparams.put(BaseCmd.Properties.USER_ID.getName(), new String[] { userId });\r\n            \t\t\tparams.put(BaseCmd.Properties.ACCOUNT_OBJ.getName(), new Object[] { accountObj });\r\n            \t\t}\r\n            \t}\n            \t\n            \t// update user context info here so that we can take information if the request is authenticated\n            \t// via api key mechanism\n            \tupdateUserContext(params, session != null ? session.getId() : null);\n                */\n\n            \tauditTrailSb.insert(0, \"(userId=\"+UserContext.current().getCallerUserId()+ \" accountId=\"+UserContext.current().getCaller().getId()+ \" sessionId=\"+(session != null ? session.getId() : null)+ \")\" );\n\n            \ttry {\r\n            \t\tString response = _apiServer.handleRequest(params, true, responseType, auditTrailSb);            \t\t\r\n            \t\twriteResponse(resp, response != null ? response : \"\", HttpServletResponse.SC_OK, responseType);\r\n            \t} catch (ServerApiException se) {\n            \t    String serializedResponseText = _apiServer.getSerializedApiError(se.getErrorCode(), se.getDescription(), params, responseType);\n            \t    writeResponse(resp, serializedResponseText, se.getErrorCode(), responseType);\n            \t    auditTrailSb.append(\" \" +se.getErrorCode() + \" \" + se.getDescription());\r\n            \t}\r\n            } else {\n                if (session != null) {\n                    try {\n                        session.invalidate();\n                    }catch (IllegalStateException ise) {}\n                }\n                \n                auditTrailSb.append(\" \" + HttpServletResponse.SC_UNAUTHORIZED +  \" \" + \"unable to verify user credentials and/or request signature\");\n                String serializedResponse = _apiServer.getSerializedApiError(HttpServletResponse.SC_UNAUTHORIZED, \"unable to verify user credentials and/or request signature\", params, responseType);\n                writeResponse(resp, serializedResponse, HttpServletResponse.SC_UNAUTHORIZED, responseType);\n  \r\n            }\r\n        }catch (InvalidParameterException ipe){\n            auditTrailSb.append(\" \" + HttpServletResponse.SC_NOT_FOUND +  \" \" + ipe.getMessage());\n            String serializedResponse = _apiServer.getSerializedApiError(HttpServletResponse.SC_NOT_FOUND, ipe.getMessage(), params, responseType);\n            writeResponse(resp, serializedResponse, HttpServletResponse.SC_NOT_FOUND, responseType);\n        }catch (Exception ex) {\r\n            s_logger.error(\"unknown exception writing api response\", ex);\n            auditTrailSb.append(\" unknown exception writing api response\");\r\n        } finally {\n            s_accessLogger.info(auditTrailSb.toString());            \n            // cleanup user context to prevent from being peeked in other request context\n            UserContext.unregisterContext();\n        }\r\n    }","commit_id":"5743db87e113a4cd95d7f2c3e0376babb11d193e","url":"https://github.com/apache/cloudstack"},{"original_method":"private void writeResponse(HttpServletResponse resp, String response, boolean isError, String responseType) {\r\n        try {\r\n            // is text/plain sufficient for XML and JSON?\r\n            if (BaseCmd.RESPONSE_TYPE_JSON.equalsIgnoreCase(responseType)) {\r\n                resp.setContentType(\"text/javascript\");\r\n            } else {\r\n                resp.setContentType(\"text/xml\");\r\n            }\r\n            resp.setStatus(isError? HttpServletResponse.SC_INTERNAL_SERVER_ERROR : HttpServletResponse.SC_OK);\n            \n            // use getWriter() instead of manually manipulate encoding to have better localization support\n\t\t\tresp.getWriter().print(response);\n        } catch (IOException ioex) {\r\n            if (s_logger.isTraceEnabled()) {\r\n                s_logger.trace(\"exception writing response: \" + ioex);\r\n            }\r\n        } catch (Exception ex) {\n            if (!(ex instanceof IllegalStateException)) {\n                s_logger.error(\"unknown exception writing api response\", ex);\n            }\r\n        }\r\n    }","id":55058,"modified_method":"private void writeResponse(HttpServletResponse resp, String response, int responseCode, String responseType) {\r\n        try {\r\n            // is text/plain sufficient for XML and JSON?\r\n            if (BaseCmd.RESPONSE_TYPE_JSON.equalsIgnoreCase(responseType)) {\r\n                resp.setContentType(\"text/javascript\");\r\n            } else {\r\n                resp.setContentType(\"text/xml\");\r\n            }\n            \n            resp.setStatus(responseCode);\n            // use getWriter() instead of manually manipulate encoding to have better localization support\n\t\t\tresp.getWriter().print(response);\n        } catch (IOException ioex) {\r\n            if (s_logger.isTraceEnabled()) {\r\n                s_logger.trace(\"exception writing response: \" + ioex);\r\n            }\r\n        } catch (Exception ex) {\n            if (!(ex instanceof IllegalStateException)) {\n                s_logger.error(\"unknown exception writing api response\", ex);\n            }\r\n        }\r\n    }","commit_id":"5743db87e113a4cd95d7f2c3e0376babb11d193e","url":"https://github.com/apache/cloudstack"},{"original_method":"@Override\n\tpublic String toString() {\n\t\treturn String.valueOf(getCanonicalName());\n\t}","id":55059,"modified_method":"@Override\n\tpublic String toString() {\n\t\tStringBuilder result = new StringBuilder(eClass().getName());\n\t\tresult.append(\": \");\n\t\tif (eIsProxy()) {\n\t\t\tresult.append(\" (eProxyURI: \");\n\t\t\tresult.append(eProxyURI());\n\t\t\tresult.append(')');\n\t\t} else {\n\t\t\tresult.append(getCanonicalName());\n\t\t}\n\t\treturn result.toString();\n\t}","commit_id":"edd41efc842f60a0dd17b299a3ff33b424b28b25","url":"https://github.com/eclipse/xtext"},{"original_method":"private void initEnv()\n  {\n    env = TokenSequencePattern.getNewEnv();\n    env.setDefaultResultsAnnotationExtractor(TimeExpression.TimeExpressionConverter);\n    env.setDefaultTokensAnnotationKey(CoreAnnotations.NumerizedTokensAnnotation.class);\n    env.setDefaultResultAnnotationKey(TimeExpression.Annotation.class);\n    env.setDefaultNestedResultsAnnotationKey(TimeExpression.ChildrenAnnotation.class);\n    env.setDefaultTokensAggregators(CoreMapAttributeAggregator.DEFAULT_NUMERIC_TOKENS_AGGREGATORS);\n\n    env.bind(\"nested\", TimeExpression.ChildrenAnnotation.class);\n    env.bind(\"time\", new TimeFormatter.TimePatternExtractRuleCreator());\n    // Do case insensitive matching\n    env.setDefaultStringPatternFlags(Pattern.CASE_INSENSITIVE);\n\n    env.bind(\"options\", options);\n    env.bind(\"TIME_REF\", SUTime.TIME_REF);\n    env.bind(\"TIME_REF_UNKNOWN\", SUTime.TIME_REF_UNKNOWN);\n    env.bind(\"TIME_UNKNOWN\", SUTime.TIME_UNKNOWN);\n    env.bind(\"TIME_NONE\", SUTime.TIME_NONE);\n    env.bind(\"ERA_AD\", SUTime.ERA_AD);\n    env.bind(\"ERA_BC\", SUTime.ERA_BC);\n    env.bind(\"ERA_UNKNOWN\", SUTime.ERA_UNKNOWN);\n    env.bind(\"HALFDAY_AM\", SUTime.HALFDAY_AM);\n    env.bind(\"HALFDAY_PM\", SUTime.HALFDAY_PM);\n    env.bind(\"HALFDAY_UNKNOWN\", SUTime.HALFDAY_UNKNOWN);\n    env.bind(\"RESOLVE_TO_THIS\", SUTime.RESOLVE_TO_THIS);\n    env.bind(\"RESOLVE_TO_PAST\", SUTime.RESOLVE_TO_PAST);\n    env.bind(\"RESOLVE_TO_FUTURE\", SUTime.RESOLVE_TO_FUTURE);\n    env.bind(\"RESOLVE_TO_CLOSEST\", SUTime.RESOLVE_TO_CLOSEST);\n\n    env.bind(\"numcomptype\", CoreAnnotations.NumericCompositeTypeAnnotation.class);\n    env.bind(\"numcompvalue\", CoreAnnotations.NumericCompositeValueAnnotation.class);\n\n    env.bind(\"temporal\", TimeExpression.Annotation.class);\n//    env.bind(\"tags\", SequenceMatchRules.Tags.TagsAnnotation.class);\n    env.bind(\"::IS_TIMEX_DATE\", new TimexTypeMatchNodePattern(SUTime.TimexType.DATE));\n    env.bind(\"::IS_TIMEX_DURATION\", new TimexTypeMatchNodePattern(SUTime.TimexType.DURATION));\n    env.bind(\"::IS_TIMEX_TIME\", new TimexTypeMatchNodePattern(SUTime.TimexType.TIME));\n    env.bind(\"::IS_TIMEX_SET\", new TimexTypeMatchNodePattern(SUTime.TimexType.SET));\n    env.bind(\"::IS_TIME_UNIT\", new MatchedExpressionValueTypeMatchNodePattern(\"TIMEUNIT\"));\n    env.bind(\"::MONTH\", new MatchedExpressionValueTypeMatchNodePattern(\"MONTH_OF_YEAR\"));\n    env.bind(\"::DAYOFWEEK\", new MatchedExpressionValueTypeMatchNodePattern(\"DAY_OF_WEEK\"));\n\n    // BINDINGS for parsing from file!!!!!!!\n    for (SUTime.TemporalOp t:SUTime.TemporalOp.values()) {\n      env.bind(t.name(), new Expressions.PrimitiveValue<SUTime.TemporalOp>(\"TemporalOp\", t));\n    }\n    for (SUTime.TimeUnit t: SUTime.TimeUnit.values()) {\n      if (!t.equals(SUTime.TimeUnit.UNKNOWN)) {\n        //env.bind(t.name(), new SequenceMatchRules.PrimitiveValue<SUTime.Temporal>(\"DURATION\", t.getDuration(), \"TIMEUNIT\"));\n        env.bind(t.name(), new Expressions.PrimitiveValue<SUTime.Temporal>(\"TIMEUNIT\", t.getDuration()));\n      }\n    }\n    for (SUTime.StandardTemporalType t: SUTime.StandardTemporalType.values()) {\n      env.bind(t.name(), new Expressions.PrimitiveValue<SUTime.StandardTemporalType>(\"TemporalType\", t));\n    }\n    env.bind(\"Duration\", new Expressions.PrimitiveValue<ValueFunction>(\n            Expressions.TYPE_FUNCTION,\n            new ValueFunctions.NamedValueFunction(\"Duration\") {\n              private SUTime.Temporal addEndPoints(SUTime.Duration d, SUTime.Time beginTime, SUTime.Time endTime)\n              {\n                SUTime.Temporal t = d;\n                if (d != null && (beginTime != null || endTime != null)) {\n                  SUTime.Time b = beginTime;\n                  SUTime.Time e = endTime;\n                  // New so we get different time ids\n                  if (b == SUTime.TIME_REF_UNKNOWN) {\n                    b = new SUTime.RefTime(\"UNKNOWN\");\n                  } else if (b == SUTime.TIME_UNKNOWN) {\n                    b = new SUTime.SimpleTime(\"UNKNOWN\");\n                  }\n                  if (e == SUTime.TIME_REF_UNKNOWN) {\n                    e = new SUTime.RefTime(\"UNKNOWN\");\n                  } else if (e == SUTime.TIME_UNKNOWN) {\n                    e = new SUTime.SimpleTime(\"UNKNOWN\");\n                  }\n                  t = new SUTime.Range(b,e,d);\n                }\n                return t;\n              }\n\n              public boolean checkArgs(List<Value> in) {\n                // TODO: Check args\n                return true;\n              }\n              public Value apply(Env env, List<Value> in) {\n                if (in.size() == 2) {\n                  SUTime.Duration d = (SUTime.Duration) in.get(0).get();\n                  if (in.get(1).get() instanceof Number) {\n                    int m = ((Number) in.get(1).get()).intValue();\n                    return new Expressions.PrimitiveValue(\"DURATION\", d.multiplyBy(m));\n                  } else if (in.get(1).get() instanceof String){\n                    Number n = Integer.parseInt((String) in.get(1).get());\n                    if (n != null) {\n                      return new Expressions.PrimitiveValue(\"DURATION\", d.multiplyBy(n.intValue()));\n                    } else {\n                      return null;\n                    }\n                  } else {\n                    throw new IllegalArgumentException(\"Invalid arguments to \" + name);\n                  }\n                } else if (in.size() == 5 || in.size() == 3) {\n                  // TODO: Handle Strings...\n                  List<? extends CoreMap> durationStartTokens = (List<? extends CoreMap>) in.get(0).get();\n                  Number durationStartVal = (durationStartTokens != null)? durationStartTokens.get(0).get(CoreAnnotations.NumericCompositeValueAnnotation.class):null;\n                  List<? extends CoreMap> durationEndTokens = (List<? extends CoreMap>) in.get(1).get();\n                  Number durationEndVal = (durationEndTokens != null)? durationEndTokens.get(0).get(CoreAnnotations.NumericCompositeValueAnnotation.class):null;\n                  // TODO: This should already be in durations....\n                  List<? extends CoreMap> durationUnitTokens = (List<? extends CoreMap>) in.get(2).get();\n                  //String durationUnitString = (durationUnitTokens != null)? durationUnitTokens.get(0).get(CoreAnnotations.TextAnnotation.class):null;\n                  //SUTime.Duration durationUnit = getDuration(durationUnitString);\n                  TimeExpression te = (durationUnitTokens != null)? durationUnitTokens.get(0).get(TimeExpression.Annotation.class):null;\n                  SUTime.Duration durationUnit = (SUTime.Duration) te.getTemporal();\n\n                  // TODO: Handle inexactness\n                  // Create duration range...\n                  SUTime.Duration durationStart = (durationStartVal != null)? durationUnit.multiplyBy(durationStartVal.intValue()):null;\n                  SUTime.Duration durationEnd = (durationEndVal != null)? durationUnit.multiplyBy(durationEndVal.intValue()):null;\n                  SUTime.Duration duration = durationStart;\n                  if (duration == null) {\n                    if (durationEnd != null) {\n                      duration = durationEnd;\n                    } else {\n                      duration = new SUTime.InexactDuration(durationUnit);\n                    }\n                  }\n                  else if (durationEnd != null) { duration = new SUTime.DurationRange(durationStart, durationEnd); }\n\n                  // Add begin and end times\n                  SUTime.Time beginTime = (in.size() > 3)? (SUTime.Time) in.get(3).get():null;\n                  SUTime.Time endTime = (in.size() > 4)? (SUTime.Time) in.get(4).get():null;\n                  SUTime.Temporal temporal = addEndPoints(duration, beginTime, endTime);\n                  if (temporal instanceof SUTime.Range) {\n                    return new Expressions.PrimitiveValue(\"RANGE\", temporal);\n                  } else {\n                    return new Expressions.PrimitiveValue(\"DURATION\", temporal);\n                  }\n                } else {\n                  throw new IllegalArgumentException(\"Invalid number of arguments to \" + name);\n                }\n              }\n            }\n    ));\n    env.bind(\"DayOfWeek\", new Expressions.PrimitiveValue<ValueFunction>(\n            Expressions.TYPE_FUNCTION,\n            new ValueFunctions.NamedValueFunction(\"DayOfWeek\") {\n              public boolean checkArgs(List<Value> in) {\n                if (in.size() != 1) {\n                  return false;\n                }\n                if (in.get(0) == null || !(in.get(0).get() instanceof Number)) {\n                  return false;\n                }\n                return true;\n              }\n              public Value apply(Env env, List<Value> in) {\n                if (in.size() == 1) {\n                  return new Expressions.PrimitiveValue(SUTime.StandardTemporalType.DAY_OF_WEEK.name(),\n                          SUTime.StandardTemporalType.DAY_OF_WEEK.createTemporal(((Number) in.get(0).get()).intValue()));\n                } else {\n                  throw new IllegalArgumentException(\"Invalid number of arguments to \" + name);\n                }\n              }\n            }\n    ));\n    env.bind(\"MonthOfYear\", new Expressions.PrimitiveValue<ValueFunction>(\n            Expressions.TYPE_FUNCTION,\n            new ValueFunctions.NamedValueFunction(\"MonthOfYear\") {\n              public boolean checkArgs(List<Value> in) {\n                if (in.size() != 1) {\n                  return false;\n                }\n                if (in.get(0) == null || !(in.get(0).get() instanceof Number)) {\n                  return false;\n                }\n                return true;\n              }\n              public Value apply(Env env, List<Value> in) {\n                if (in.size() == 1) {\n                  return new Expressions.PrimitiveValue(SUTime.StandardTemporalType.MONTH_OF_YEAR.name(),\n                          SUTime.StandardTemporalType.MONTH_OF_YEAR.createTemporal(((Number) in.get(0).get()).intValue()));\n                } else {\n                  throw new IllegalArgumentException(\"Invalid number of arguments to \" + name);\n                }\n              }\n            }\n    ));\n    env.bind(\"MakePeriodicTemporalSet\", new Expressions.PrimitiveValue<ValueFunction>(\n            Expressions.TYPE_FUNCTION,\n            new ValueFunctions.NamedValueFunction(\"MakePeriodicTemporalSet\") {\n              // First argument is the temporal acting as the base of the periodic set\n              // Second argument is the quantifier (string)\n              // Third argument is the multiple (how much to scale the natural period)\n              public boolean checkArgs(List<Value> in) {\n                if (in.size() < 3) {\n                  return false;\n                }\n                if (in.get(0) == null ||\n                        (!(in.get(0).get() instanceof SUTime.Temporal) && !(in.get(0).get() instanceof TimeExpression))) {\n                  return false;\n                }\n                if (in.get(1) == null ||\n                        (!(in.get(1).get() instanceof String) && !(in.get(1).get() instanceof List))) {\n                  return false;\n                }\n                if (in.get(2) == null || !(in.get(2).get() instanceof Number)) {\n                  return false;\n                }\n                return true;\n              }\n              public Value apply(Env env, List<Value> in) {\n                if (in.size() >= 1) {\n                  SUTime.Temporal temporal = null;\n                  Object t = in.get(0).get();\n                  if (t instanceof SUTime.Temporal) {\n                    temporal = (SUTime.Temporal) in.get(0).get();\n                  } else if (t instanceof TimeExpression) {\n                    temporal = ((TimeExpression) t).getTemporal();\n                  } else {\n                    throw new IllegalArgumentException(\"Type mismatch on arg0: Cannot apply \" + this + \" to \" + in);\n                  }\n                  String quant = null;\n                  int scale = 1;\n                  if (in.size() >= 2 && in.get(1) != null) {\n                    Object arg1 = in.get(1).get();\n                    if (arg1 instanceof String) {\n                      quant = (String) arg1;\n                    } else if (arg1 instanceof List) {\n                      List<CoreMap> cms = (List<CoreMap>) arg1;\n                      quant = ChunkAnnotationUtils.getTokenText(cms, CoreAnnotations.TextAnnotation.class);\n                      if (quant != null) {\n                        quant = quant.toLowerCase();\n                      }\n                    } else {\n                      throw new IllegalArgumentException(\"Type mismatch on arg1: Cannot apply \" + this + \" to \" + in);\n                    }\n                  }\n                  if (in.size() >= 3 && in.get(2) != null) {\n                    Number arg2 = (Number) in.get(2).get();\n                    if (arg2 != null) {\n                      scale = arg2.intValue();\n                    }\n                  }\n                  SUTime.Duration period = temporal.getPeriod();\n                  if (period != null && scale != 1) {\n                    period = period.multiplyBy(scale);\n                  }\n                  return new Expressions.PrimitiveValue(\"PeriodicTemporalSet\",\n                          new SUTime.PeriodicTemporalSet(temporal,period,quant,null/*\"P1X\"*/));\n                } else {\n                  throw new IllegalArgumentException(\"Invalid number of arguments to \" + name);\n                }\n              }\n            }\n    ));\n\n    env.bind(\"TemporalCompose\", new Expressions.PrimitiveValue<ValueFunction>(\n            Expressions.TYPE_FUNCTION,\n            new ValueFunctions.NamedValueFunction(\"TemporalCompose\") {\n              public boolean checkArgs(List<Value> in) {\n                if (in.size() < 1) {\n                  return false;\n                }\n                if (in.get(0) == null || !(in.get(0).get() instanceof SUTime.TemporalOp)) {\n                  return false;\n                }\n                return true;\n              }\n              public Value apply(Env env, List<Value> in) {\n                if (in.size() > 1) {\n                  SUTime.TemporalOp op = (SUTime.TemporalOp) in.get(0).get();\n                  boolean allTemporalArgs = true;\n                  Object[] args = new Object[in.size()-1];\n                  for (int i = 0; i < args.length; i++) {\n                    Value v = in.get(i+1);\n                    if (v != null) {\n                      args[i] = v.get();\n                      if (args[i] instanceof MatchedExpression) {\n                        Value v2 = ((MatchedExpression) args[i]).getValue();\n                        args[i] = (v2 != null)? v2.get():null;\n                      }\n                      if (args[i] != null && !(args[i] instanceof SUTime.Temporal)) {\n                        allTemporalArgs = false;\n                      }\n                    }\n                  }\n                  if (allTemporalArgs) {\n                    SUTime.Temporal[] temporalArgs = new SUTime.Temporal[args.length];\n                    for (int i = 0; i < args.length; i++) {\n                      temporalArgs[i] = (SUTime.Temporal) args[i];\n                    }\n                    return new Expressions.PrimitiveValue(null, op.apply(temporalArgs));\n                  } else {\n                    return new Expressions.PrimitiveValue(null, op.apply(args));\n                  }\n                } else {\n                  throw new IllegalArgumentException(\"Invalid number of arguments to \" + name);\n                }\n              }\n            }\n    ));\n  }","id":55060,"modified_method":"private void initEnv()\r\n  {\r\n    env = TokenSequencePattern.getNewEnv();\r\n    env.setDefaultResultsAnnotationExtractor(TimeExpression.TimeExpressionConverter);\r\n    env.setDefaultTokensAnnotationKey(CoreAnnotations.NumerizedTokensAnnotation.class);\r\n    env.setDefaultResultAnnotationKey(TimeExpression.Annotation.class);\r\n    env.setDefaultNestedResultsAnnotationKey(TimeExpression.ChildrenAnnotation.class);\r\n    env.setDefaultTokensAggregators(CoreMapAttributeAggregator.DEFAULT_NUMERIC_TOKENS_AGGREGATORS);\r\n\r\n    env.bind(\"nested\", TimeExpression.ChildrenAnnotation.class);\r\n    env.bind(\"time\", new TimeFormatter.TimePatternExtractRuleCreator());\r\n    // Do case insensitive matching\r\n    env.setDefaultStringPatternFlags(Pattern.CASE_INSENSITIVE);\r\n\r\n    env.bind(\"options\", options);\r\n    env.bind(\"TIME_REF\", SUTime.TIME_REF);\r\n    env.bind(\"TIME_REF_UNKNOWN\", SUTime.TIME_REF_UNKNOWN);\r\n    env.bind(\"TIME_UNKNOWN\", SUTime.TIME_UNKNOWN);\r\n    env.bind(\"TIME_NONE\", SUTime.TIME_NONE);\r\n    env.bind(\"ERA_AD\", SUTime.ERA_AD);\r\n    env.bind(\"ERA_BC\", SUTime.ERA_BC);\r\n    env.bind(\"ERA_UNKNOWN\", SUTime.ERA_UNKNOWN);\r\n    env.bind(\"HALFDAY_AM\", SUTime.HALFDAY_AM);\r\n    env.bind(\"HALFDAY_PM\", SUTime.HALFDAY_PM);\r\n    env.bind(\"HALFDAY_UNKNOWN\", SUTime.HALFDAY_UNKNOWN);\r\n    env.bind(\"RESOLVE_TO_THIS\", SUTime.RESOLVE_TO_THIS);\r\n    env.bind(\"RESOLVE_TO_PAST\", SUTime.RESOLVE_TO_PAST);\r\n    env.bind(\"RESOLVE_TO_FUTURE\", SUTime.RESOLVE_TO_FUTURE);\r\n    env.bind(\"RESOLVE_TO_CLOSEST\", SUTime.RESOLVE_TO_CLOSEST);\r\n\r\n    env.bind(\"numcomptype\", CoreAnnotations.NumericCompositeTypeAnnotation.class);\r\n    env.bind(\"numcompvalue\", CoreAnnotations.NumericCompositeValueAnnotation.class);\r\n\r\n    env.bind(\"temporal\", TimeExpression.Annotation.class);\r\n//    env.bind(\"tags\", SequenceMatchRules.Tags.TagsAnnotation.class);\r\n    env.bind(\"::IS_TIMEX_DATE\", new TimexTypeMatchNodePattern(SUTime.TimexType.DATE));\r\n    env.bind(\"::IS_TIMEX_DURATION\", new TimexTypeMatchNodePattern(SUTime.TimexType.DURATION));\r\n    env.bind(\"::IS_TIMEX_TIME\", new TimexTypeMatchNodePattern(SUTime.TimexType.TIME));\r\n    env.bind(\"::IS_TIMEX_SET\", new TimexTypeMatchNodePattern(SUTime.TimexType.SET));\r\n    env.bind(\"::IS_TIME_UNIT\", new MatchedExpressionValueTypeMatchNodePattern(\"TIMEUNIT\"));\r\n    env.bind(\"::MONTH\", new MatchedExpressionValueTypeMatchNodePattern(\"MONTH_OF_YEAR\"));\r\n    env.bind(\"::DAYOFWEEK\", new MatchedExpressionValueTypeMatchNodePattern(\"DAY_OF_WEEK\"));\r\n\r\n    // BINDINGS for parsing from file!!!!!!!\r\n    for (SUTime.TemporalOp t:SUTime.TemporalOp.values()) {\r\n      env.bind(t.name(), new Expressions.PrimitiveValue<SUTime.TemporalOp>(\"TemporalOp\", t));\r\n    }\r\n    for (SUTime.TimeUnit t: SUTime.TimeUnit.values()) {\r\n      if (!t.equals(SUTime.TimeUnit.UNKNOWN)) {\r\n        //env.bind(t.name(), new SequenceMatchRules.PrimitiveValue<SUTime.Temporal>(\"DURATION\", t.getDuration(), \"TIMEUNIT\"));\r\n        env.bind(t.name(), new Expressions.PrimitiveValue<SUTime.Temporal>(\"TIMEUNIT\", t.getDuration()));\r\n      }\r\n    }\r\n    for (SUTime.StandardTemporalType t: SUTime.StandardTemporalType.values()) {\r\n      env.bind(t.name(), new Expressions.PrimitiveValue<SUTime.StandardTemporalType>(\"TemporalType\", t));\r\n    }\r\n    env.bind(\"Duration\", new Expressions.PrimitiveValue<ValueFunction>(\r\n            Expressions.TYPE_FUNCTION,\r\n            new ValueFunctions.NamedValueFunction(\"Duration\") {\r\n              private SUTime.Temporal addEndPoints(SUTime.Duration d, SUTime.Time beginTime, SUTime.Time endTime)\r\n              {\r\n                SUTime.Temporal t = d;\r\n                if (d != null && (beginTime != null || endTime != null)) {\r\n                  SUTime.Time b = beginTime;\r\n                  SUTime.Time e = endTime;\r\n                  // New so we get different time ids\r\n                  if (b == SUTime.TIME_REF_UNKNOWN) {\r\n                    b = new SUTime.RefTime(\"UNKNOWN\");\r\n                  } else if (b == SUTime.TIME_UNKNOWN) {\r\n                    b = new SUTime.SimpleTime(\"UNKNOWN\");\r\n                  }\r\n                  if (e == SUTime.TIME_REF_UNKNOWN) {\r\n                    e = new SUTime.RefTime(\"UNKNOWN\");\r\n                  } else if (e == SUTime.TIME_UNKNOWN) {\r\n                    e = new SUTime.SimpleTime(\"UNKNOWN\");\r\n                  }\r\n                  t = new SUTime.Range(b,e,d);\r\n                }\r\n                return t;\r\n              }\r\n\r\n              public boolean checkArgs(List<Value> in) {\r\n                // TODO: Check args\r\n                return true;\r\n              }\r\n              public Value apply(Env env, List<Value> in) {\r\n                if (in.size() == 2) {\r\n                  SUTime.Duration d = (SUTime.Duration) in.get(0).get();\r\n                  if (in.get(1).get() instanceof Number) {\r\n                    int m = ((Number) in.get(1).get()).intValue();\r\n                    return new Expressions.PrimitiveValue(\"DURATION\", d.multiplyBy(m));\r\n                  } else if (in.get(1).get() instanceof String){\r\n                    Number n = Integer.parseInt((String) in.get(1).get());\r\n                    if (n != null) {\r\n                      return new Expressions.PrimitiveValue(\"DURATION\", d.multiplyBy(n.intValue()));\r\n                    } else {\r\n                      return null;\r\n                    }\r\n                  } else {\r\n                    throw new IllegalArgumentException(\"Invalid arguments to \" + name);\r\n                  }\r\n                } else if (in.size() == 5 || in.size() == 3) {\r\n                  // TODO: Handle Strings...\r\n                  List<? extends CoreMap> durationStartTokens = (List<? extends CoreMap>) in.get(0).get();\r\n                  Number durationStartVal = (durationStartTokens != null)? durationStartTokens.get(0).get(CoreAnnotations.NumericCompositeValueAnnotation.class):null;\r\n                  List<? extends CoreMap> durationEndTokens = (List<? extends CoreMap>) in.get(1).get();\r\n                  Number durationEndVal = (durationEndTokens != null)? durationEndTokens.get(0).get(CoreAnnotations.NumericCompositeValueAnnotation.class):null;\r\n                  // TODO: This should already be in durations....\r\n                  List<? extends CoreMap> durationUnitTokens = (List<? extends CoreMap>) in.get(2).get();\r\n                  //String durationUnitString = (durationUnitTokens != null)? durationUnitTokens.get(0).get(CoreAnnotations.TextAnnotation.class):null;\r\n                  //SUTime.Duration durationUnit = getDuration(durationUnitString);\r\n                  TimeExpression te = (durationUnitTokens != null)? durationUnitTokens.get(0).get(TimeExpression.Annotation.class):null;\r\n                  SUTime.Duration durationUnit = (SUTime.Duration) te.getTemporal();\r\n\r\n                  // TODO: Handle inexactness\r\n                  // Create duration range...\r\n                  SUTime.Duration durationStart = (durationStartVal != null)? durationUnit.multiplyBy(durationStartVal.intValue()):null;\r\n                  SUTime.Duration durationEnd = (durationEndVal != null)? durationUnit.multiplyBy(durationEndVal.intValue()):null;\r\n                  SUTime.Duration duration = durationStart;\r\n                  if (duration == null) {\r\n                    if (durationEnd != null) {\r\n                      duration = durationEnd;\r\n                    } else {\r\n                      duration = new SUTime.InexactDuration(durationUnit);\r\n                    }\r\n                  }\r\n                  else if (durationEnd != null) { duration = new SUTime.DurationRange(durationStart, durationEnd); }\r\n\r\n                  // Add begin and end times\r\n                  SUTime.Time beginTime = (in.size() > 3)? (SUTime.Time) in.get(3).get():null;\r\n                  SUTime.Time endTime = (in.size() > 4)? (SUTime.Time) in.get(4).get():null;\r\n                  SUTime.Temporal temporal = addEndPoints(duration, beginTime, endTime);\r\n                  if (temporal instanceof SUTime.Range) {\r\n                    return new Expressions.PrimitiveValue(\"RANGE\", temporal);\r\n                  } else {\r\n                    return new Expressions.PrimitiveValue(\"DURATION\", temporal);\r\n                  }\r\n                } else {\r\n                  throw new IllegalArgumentException(\"Invalid number of arguments to \" + name);\r\n                }\r\n              }\r\n            }\r\n    ));\r\n    env.bind(\"DayOfWeek\", new Expressions.PrimitiveValue<ValueFunction>(\r\n            Expressions.TYPE_FUNCTION,\r\n            new ValueFunctions.NamedValueFunction(\"DayOfWeek\") {\r\n              public boolean checkArgs(List<Value> in) {\r\n                if (in.size() != 1) {\r\n                  return false;\r\n                }\r\n                if (in.get(0) == null || !(in.get(0).get() instanceof Number)) {\r\n                  return false;\r\n                }\r\n                return true;\r\n              }\r\n              public Value apply(Env env, List<Value> in) {\r\n                if (in.size() == 1) {\r\n                  return new Expressions.PrimitiveValue(SUTime.StandardTemporalType.DAY_OF_WEEK.name(),\r\n                          SUTime.StandardTemporalType.DAY_OF_WEEK.createTemporal(((Number) in.get(0).get()).intValue()));\r\n                } else {\r\n                  throw new IllegalArgumentException(\"Invalid number of arguments to \" + name);\r\n                }\r\n              }\r\n            }\r\n    ));\r\n    env.bind(\"MonthOfYear\", new Expressions.PrimitiveValue<ValueFunction>(\r\n            Expressions.TYPE_FUNCTION,\r\n            new ValueFunctions.NamedValueFunction(\"MonthOfYear\") {\r\n              public boolean checkArgs(List<Value> in) {\r\n                if (in.size() != 1) {\r\n                  return false;\r\n                }\r\n                if (in.get(0) == null || !(in.get(0).get() instanceof Number)) {\r\n                  return false;\r\n                }\r\n                return true;\r\n              }\r\n              public Value apply(Env env, List<Value> in) {\r\n                if (in.size() == 1) {\r\n                  return new Expressions.PrimitiveValue(SUTime.StandardTemporalType.MONTH_OF_YEAR.name(),\r\n                          SUTime.StandardTemporalType.MONTH_OF_YEAR.createTemporal(((Number) in.get(0).get()).intValue()));\r\n                } else {\r\n                  throw new IllegalArgumentException(\"Invalid number of arguments to \" + name);\r\n                }\r\n              }\r\n            }\r\n    ));\r\n    env.bind(\"MakePeriodicTemporalSet\", new Expressions.PrimitiveValue<ValueFunction>(\r\n            Expressions.TYPE_FUNCTION,\r\n            new ValueFunctions.NamedValueFunction(\"MakePeriodicTemporalSet\") {\r\n              // First argument is the temporal acting as the base of the periodic set\r\n              // Second argument is the quantifier (string)\r\n              // Third argument is the multiple (how much to scale the natural period)\r\n              public boolean checkArgs(List<Value> in) {\r\n                if (in.size() < 3) {\r\n                  return false;\r\n                }\r\n                if (in.get(0) == null ||\r\n                        (!(in.get(0).get() instanceof SUTime.Temporal) && !(in.get(0).get() instanceof TimeExpression))) {\r\n                  return false;\r\n                }\r\n                if (in.get(1) == null ||\r\n                        (!(in.get(1).get() instanceof String) && !(in.get(1).get() instanceof List))) {\r\n                  return false;\r\n                }\r\n                if (in.get(2) == null || !(in.get(2).get() instanceof Number)) {\r\n                  return false;\r\n                }\r\n                return true;\r\n              }\r\n              public Value apply(Env env, List<Value> in) {\r\n                if (in.size() >= 1) {\r\n                  SUTime.Temporal temporal = null;\r\n                  Object t = in.get(0).get();\r\n                  if (t instanceof SUTime.Temporal) {\r\n                    temporal = (SUTime.Temporal) in.get(0).get();\r\n                  } else if (t instanceof TimeExpression) {\r\n                    temporal = ((TimeExpression) t).getTemporal();\r\n                  } else {\r\n                    throw new IllegalArgumentException(\"Type mismatch on arg0: Cannot apply \" + this + \" to \" + in);\r\n                  }\r\n                  String quant = null;\r\n                  int scale = 1;\r\n                  if (in.size() >= 2 && in.get(1) != null) {\r\n                    Object arg1 = in.get(1).get();\r\n                    if (arg1 instanceof String) {\r\n                      quant = (String) arg1;\r\n                    } else if (arg1 instanceof List) {\r\n                      List<CoreMap> cms = (List<CoreMap>) arg1;\r\n                      quant = ChunkAnnotationUtils.getTokenText(cms, CoreAnnotations.TextAnnotation.class);\r\n                      if (quant != null) {\r\n                        quant = quant.toLowerCase();\r\n                      }\r\n                    } else {\r\n                      throw new IllegalArgumentException(\"Type mismatch on arg1: Cannot apply \" + this + \" to \" + in);\r\n                    }\r\n                  }\r\n                  if (in.size() >= 3 && in.get(2) != null) {\r\n                    Number arg2 = (Number) in.get(2).get();\r\n                    if (arg2 != null) {\r\n                      scale = arg2.intValue();\r\n                    }\r\n                  }\r\n                  SUTime.Duration period = temporal.getPeriod();\r\n                  if (period != null & scale != 1) {\r\n                    period = period.multiplyBy(scale);\r\n                  }\r\n                  return new Expressions.PrimitiveValue(\"PeriodicTemporalSet\",\r\n                          new SUTime.PeriodicTemporalSet(temporal,period,quant,null/*\"P1X\"*/));\r\n                } else {\r\n                  throw new IllegalArgumentException(\"Invalid number of arguments to \" + name);\r\n                }\r\n              }\r\n            }\r\n    ));\r\n\r\n    env.bind(\"TemporalCompose\", new Expressions.PrimitiveValue<ValueFunction>(\r\n            Expressions.TYPE_FUNCTION,\r\n            new ValueFunctions.NamedValueFunction(\"TemporalCompose\") {\r\n              public boolean checkArgs(List<Value> in) {\r\n                if (in.size() < 1) {\r\n                  return false;\r\n                }\r\n                if (in.get(0) == null || !(in.get(0).get() instanceof SUTime.TemporalOp)) {\r\n                  return false;\r\n                }\r\n                return true;\r\n              }\r\n              public Value apply(Env env, List<Value> in) {\r\n                if (in.size() > 1) {\r\n                  SUTime.TemporalOp op = (SUTime.TemporalOp) in.get(0).get();\r\n                  boolean allTemporalArgs = true;\r\n                  Object[] args = new Object[in.size()-1];\r\n                  for (int i = 0; i < args.length; i++) {\r\n                    Value v = in.get(i+1);\r\n                    if (v != null) {\r\n                      args[i] = v.get();\r\n                      if (args[i] instanceof MatchedExpression) {\r\n                        Value v2 = ((MatchedExpression) args[i]).getValue();\r\n                        args[i] = (v2 != null)? v2.get():null;\r\n                      }\r\n                      if (args[i] != null && !(args[i] instanceof SUTime.Temporal)) {\r\n                        allTemporalArgs = false;\r\n                      }\r\n                    }\r\n                  }\r\n                  if (allTemporalArgs) {\r\n                    SUTime.Temporal[] temporalArgs = new SUTime.Temporal[args.length];\r\n                    for (int i = 0; i < args.length; i++) {\r\n                      temporalArgs[i] = (SUTime.Temporal) args[i];\r\n                    }\r\n                    return new Expressions.PrimitiveValue(null, op.apply(temporalArgs));\r\n                  } else {\r\n                    return new Expressions.PrimitiveValue(null, op.apply(args));\r\n                  }\r\n                } else {\r\n                  throw new IllegalArgumentException(\"Invalid number of arguments to \" + name);\r\n                }\r\n              }\r\n            }\r\n    ));\r\n  }","commit_id":"51a323b52df7f45e79a15ffa4d3b7f87f75ace5c","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"/**\n   * Return the TIMEX string for the time given\n   */\n  public static String timexTimeValue(ReadableDateTime time){\n    return String.valueOf(time.getYear()) + '-' + zeroPad(time.getMonthOfYear(), 2) + '-' + zeroPad(time.getDayOfMonth(), 2) + 'T' + zeroPad(time.getHourOfDay(), 2) + ':' + zeroPad(time.getMinuteOfHour(), 2);\n  }","id":55061,"modified_method":"/**\n   * Return the TIMEX string for the time given\n   */\n  public static String timexTimeValue(ReadableDateTime time){\n    return new StringBuilder()\n        .append(time.getYear()).append(\"-\")                    //year\n        .append(zeroPad(time.getMonthOfYear(),2)).append(\"-\")  //month\n        .append(zeroPad(time.getDayOfMonth(),2)).append(\"T\")   //day\n        .append(zeroPad(time.getHourOfDay(),2)).append(\":\")    //hour\n        .append(zeroPad(time.getMinuteOfHour(),2))             //minute\n        .toString();\n  }","commit_id":"51a323b52df7f45e79a15ffa4d3b7f87f75ace5c","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"private static double standardDeviation(List<Integer> branchingFactors, double mean) {\n    double variance = 0.0;\n    for (int i : branchingFactors) {\n      variance += (i-mean)*(i-mean);\n    }\n    return Math.sqrt(variance / (branchingFactors.size()-1));\n  }","id":55062,"modified_method":"private static Object standardDeviation(List<Integer> branchingFactors, double mean) {\n    double variance = 0.0;\n    for (int i : branchingFactors) {\n      variance += (i-mean)*(i-mean);\n    }\n    return Math.sqrt(variance / (branchingFactors.size()-1));\n  }","commit_id":"51a323b52df7f45e79a15ffa4d3b7f87f75ace5c","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"protected String exportToRSS(\n\t\t\tString name, String description, String type, double version,\n\t\t\tString displayStyle, String feedURL, String tagURL,\n\t\t\tList<AssetEntry> assetEntries)\n\t\tthrows SystemException {\n\n\t\tSyndFeed syndFeed = new SyndFeedImpl();\n\n\t\tsyndFeed.setFeedType(RSSUtil.getFeedType(type, version));\n\t\tsyndFeed.setTitle(name);\n\t\tsyndFeed.setLink(feedURL);\n\t\tsyndFeed.setDescription(GetterUtil.getString(description, name));\n\n\t\tList<SyndEntry> entries = new ArrayList<SyndEntry>();\n\n\t\tsyndFeed.setEntries(entries);\n\n\t\tfor (AssetEntry entry : assetEntries) {\n\t\t\tString author = HtmlUtil.escape(\n\t\t\t\tPortalUtil.getUserName(entry.getUserId(), entry.getUserName()));\n\n\t\t\tString link = tagURL.concat(\"entryId=\").concat(\n\t\t\t\tString.valueOf(entry.getEntryId()));\n\n\t\t\tString value = entry.getSummary();\n\n\t\t\tSyndEntry syndEntry = new SyndEntryImpl();\n\n\t\t\tsyndEntry.setAuthor(author);\n\t\t\tsyndEntry.setTitle(entry.getTitle());\n\t\t\tsyndEntry.setLink(link);\n\t\t\tsyndEntry.setUri(syndEntry.getLink());\n\t\t\tsyndEntry.setPublishedDate(entry.getCreateDate());\n\t\t\tsyndEntry.setUpdatedDate(entry.getModifiedDate());\n\n\t\t\tSyndContent syndContent = new SyndContentImpl();\n\n\t\t\tsyndContent.setType(RSSUtil.DEFAULT_ENTRY_TYPE);\n\t\t\tsyndContent.setValue(value);\n\n\t\t\tsyndEntry.setDescription(syndContent);\n\n\t\t\tentries.add(syndEntry);\n\t\t}\n\n\t\ttry {\n\t\t\treturn RSSUtil.export(syndFeed);\n\t\t}\n\t\tcatch (FeedException fe) {\n\t\t\tthrow new SystemException(fe);\n\t\t}\n\t}","id":55063,"modified_method":"protected String exportToRSS(\n\t\t\tString name, String description, String type, double version,\n\t\t\tString displayStyle, String feedURL, String tagURL,\n\t\t\tList<AssetEntry> assetEntries)\n\t\tthrows SystemException {\n\n\t\tSyndFeed syndFeed = new SyndFeedImpl();\n\n\t\tsyndFeed.setFeedType(RSSUtil.getFeedType(type, version));\n\t\tsyndFeed.setTitle(name);\n\t\tsyndFeed.setLink(feedURL);\n\t\tsyndFeed.setDescription(GetterUtil.getString(description, name));\n\n\t\tList<SyndEntry> entries = new ArrayList<SyndEntry>();\n\n\t\tsyndFeed.setEntries(entries);\n\n\t\tfor (AssetEntry entry : assetEntries) {\n\t\t\tAssetRendererFactory assetRendererFactory =\n\t\t\t\tAssetRendererFactoryRegistryUtil.\n\t\t\t\t\tgetAssetRendererFactoryByClassName(entry.getClassName());\n\n\t\t\tString author = HtmlUtil.escape(\n\t\t\t\tPortalUtil.getUserName(entry.getUserId(), entry.getUserName()));\n\n\t\t\tStringBundler sb = new StringBundler(4);\n\n\t\t\tsb.append(tagURL);\n\t\t\tsb.append(assetRendererFactory.getType());\n\t\t\tsb.append(\"/id/\");\n\t\t\tsb.append(entry.getEntryId());\n\n\t\t\tString link = sb.toString();\n\n\t\t\tString value = entry.getSummary();\n\n\t\t\tSyndEntry syndEntry = new SyndEntryImpl();\n\n\t\t\tsyndEntry.setAuthor(author);\n\t\t\tsyndEntry.setTitle(entry.getTitle());\n\t\t\tsyndEntry.setLink(link);\n\t\t\tsyndEntry.setUri(syndEntry.getLink());\n\t\t\tsyndEntry.setPublishedDate(entry.getCreateDate());\n\t\t\tsyndEntry.setUpdatedDate(entry.getModifiedDate());\n\n\t\t\tSyndContent syndContent = new SyndContentImpl();\n\n\t\t\tsyndContent.setType(RSSUtil.DEFAULT_ENTRY_TYPE);\n\t\t\tsyndContent.setValue(value);\n\n\t\t\tsyndEntry.setDescription(syndContent);\n\n\t\t\tentries.add(syndEntry);\n\t\t}\n\n\t\ttry {\n\t\t\treturn RSSUtil.export(syndFeed);\n\t\t}\n\t\tcatch (FeedException fe) {\n\t\t\tthrow new SystemException(fe);\n\t\t}\n\t}","commit_id":"45de75e0825bd14f267559c773fc3d81b320aae0","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public String getEntriesRSS(\n\t\t\tAssetEntryQuery entryQuery, String type, double version,\n\t\t\tString displayStyle, String feedURL, String tagURL)\n\t\tthrows PortalException, SystemException {\n\n\t\tfilterQuery(entryQuery);\n\n\t\tString name = StringPool.BLANK;\n\n\t\tlong[] groupIds = entryQuery.getGroupIds();\n\n\t\tfor (long groupId : groupIds) {\n\t\t\tGroup group = groupPersistence.findByPrimaryKey(groupId);\n\n\t\t\tif ((groupIds.length == 1) || !group.isCompany()) {\n\t\t\t\tname = HtmlUtil.escape(group.getDescriptiveName());\n\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tList<AssetEntry> entries = assetEntryLocalService.getEntries(\n\t\t\tentryQuery);\n\n\t\treturn exportToRSS(\n\t\t\tname, null, type, version, displayStyle, feedURL, tagURL, entries);\n\t}","id":55064,"modified_method":"public String getEntriesRSS(\n\t\t\tString name, AssetEntryQuery entryQuery, String type,\n\t\t\tdouble version, String displayStyle, String feedURL, String tagURL)\n\t\tthrows PortalException, SystemException {\n\n\t\tfilterQuery(entryQuery);\n\n\t\tList<AssetEntry> entries = assetEntryLocalService.getEntries(\n\t\t\tentryQuery);\n\n\t\treturn exportToRSS(\n\t\t\tname, null, type, version, displayStyle, feedURL, tagURL, entries);\n\t}","commit_id":"45de75e0825bd14f267559c773fc3d81b320aae0","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void populateParams(\n\t\tString friendlyURLPath, Map<String, String[]> params) {\n\n\t\tint x = friendlyURLPath.indexOf(StringPool.SLASH, 1);\n\n\t\tString[] urlFragments = StringUtil.split(\n\t\t\tfriendlyURLPath.substring(x + 1), StringPool.SLASH);\n\n\t\tif (urlFragments.length > 2) {\n\t\t\tString instanceId = urlFragments[0];\n\t\t\tString type = urlFragments[1];\n\t\t\tString assetEntryId = null;\n\t\t\tlong groupId = 0;\n\t\t\tString urlTitle = null;\n\n\t\t\tif ((urlFragments.length > 3) && urlFragments[2].equals(\"id\")) {\n\t\t\t\tassetEntryId = urlFragments[3];\n\t\t\t}\n\t\t\telse if (urlFragments.length > 3) {\n\t\t\t\turlTitle = urlFragments[2];\n\n\t\t\t\tgroupId = GetterUtil.getLong(urlFragments[3]);\n\t\t\t}\n\t\t\telse {\n\t\t\t\turlTitle = urlFragments[2];\n\t\t\t}\n\n\t\t\tString portletId =\n\t\t\t\t_PORTLET_ID + PortletConstants.INSTANCE_SEPARATOR + instanceId;\n\n\t\t\tparams.put(\"p_p_id\", new String[] {portletId});\n\t\t\tparams.put(\"p_p_lifecycle\", new String[] {\"0\"});\n\n\t\t\tif (friendlyURLPath.indexOf(\"maximized\", x) != -1) {\n\t\t\t\taddParam(params, \"p_p_state\", WindowState.MAXIMIZED);\n\t\t\t}\n\n\t\t\tparams.put(\"p_p_mode\", new String[] {PortletMode.VIEW.toString()});\n\n\t\t\tString namespace =\n\t\t\t\tStringPool.UNDERLINE + portletId + StringPool.UNDERLINE;\n\n\t\t\tparams.put(\n\t\t\t\tnamespace + \"struts_action\",\n\t\t\t\tnew String[] {\"/asset_publisher/view_content\"});\n\t\t\tparams.put(namespace + \"type\", new String[] {type});\n\n\t\t\tif (Validator.isNotNull(assetEntryId)) {\n\t\t\t\tparams.put(\n\t\t\t\t\tnamespace + \"assetEntryId\", new String[] {assetEntryId});\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (groupId > 0) {\n\t\t\t\t\tparams.put(\n\t\t\t\t\t\tnamespace + \"groupId\",\n\t\t\t\t\t\tnew String[] {String.valueOf(groupId)});\n\t\t\t\t}\n\n\t\t\t\tparams.put(namespace + \"urlTitle\", new String[] {urlTitle});\n\t\t\t}\n\t\t}\n\t}","id":55065,"modified_method":"public void populateParams(\n\t\tString friendlyURLPath, Map<String, String[]> params) {\n\n\t\tint x = friendlyURLPath.indexOf(StringPool.SLASH, 1);\n\n\t\tString[] urlFragments = StringUtil.split(\n\t\t\tfriendlyURLPath.substring(x + 1), StringPool.SLASH);\n\n\t\tif (urlFragments.length >= 2) {\n\t\t\tString instanceId = urlFragments[0];\n\t\t\tString type = urlFragments[1];\n\t\t\tString assetEntryId = null;\n\t\t\tlong groupId = 0;\n\t\t\tString urlTitle = null;\n\n\t\t\tString portletId =\n\t\t\t\t_PORTLET_ID + PortletConstants.INSTANCE_SEPARATOR + instanceId;\n\n\t\t\tparams.put(\"p_p_id\", new String[] {portletId});\n\n\t\t\tif (friendlyURLPath.indexOf(\"maximized\", x) != -1) {\n\t\t\t\taddParam(params, \"p_p_state\", WindowState.MAXIMIZED);\n\t\t\t}\n\n\t\t\tparams.put(\"p_p_mode\", new String[] {PortletMode.VIEW.toString()});\n\n\t\t\tString namespace =\n\t\t\t\tStringPool.UNDERLINE + portletId + StringPool.UNDERLINE;\n\n\t\t\tif (type.equals(\"rss\")) {\n\t\t\t\tparams.put(\n\t\t\t\t\tnamespace + \"struts_action\",\n\t\t\t\t\tnew String[] {\"/asset_publisher/rss\"});\n\n\t\t\t\tparams.put(\"p_p_lifecycle\", new String[] {\"2\"});\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif ((urlFragments.length > 3) && urlFragments[2].equals(\"id\")) {\n\t\t\t\t\tassetEntryId = urlFragments[3];\n\t\t\t\t}\n\t\t\t\telse if (urlFragments.length > 3) {\n\t\t\t\t\turlTitle = urlFragments[2];\n\n\t\t\t\t\tgroupId = GetterUtil.getLong(urlFragments[3]);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\turlTitle = urlFragments[2];\n\t\t\t\t}\n\n\t\t\t\tparams.put(\"p_p_lifecycle\", new String[] {\"0\"});\n\n\t\t\t\tparams.put(\n\t\t\t\t\tnamespace + \"struts_action\",\n\t\t\t\t\tnew String[] {\"/asset_publisher/view_content\"});\n\n\t\t\t\tparams.put(namespace + \"type\", new String[] {type});\n\n\t\t\t\tif (Validator.isNotNull(assetEntryId)) {\n\t\t\t\t\tparams.put(\n\t\t\t\t\t\tnamespace + \"assetEntryId\",\n\t\t\t\t\t\tnew String[] {assetEntryId});\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tif (groupId > 0) {\n\t\t\t\t\t\tparams.put(\n\t\t\t\t\t\t\tnamespace + \"groupId\",\n\t\t\t\t\t\t\tnew String[] {String.valueOf(groupId)});\n\t\t\t\t\t}\n\n\t\t\t\t\tparams.put(namespace + \"urlTitle\", new String[] {urlTitle});\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}","commit_id":"45de75e0825bd14f267559c773fc3d81b320aae0","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public String buildPath(LiferayPortletURL portletURL) {\n\t\tString friendlyURLPath = null;\n\n\t\tString strutsAction = GetterUtil.getString(\n\t\t\tportletURL.getParameter(\"struts_action\"));\n\n\t\tWindowState windowState = portletURL.getWindowState();\n\n\t\tif ((strutsAction.equals(\"/asset_publisher/view_content\"))  &&\n\t\t\t((windowState == null) ||\n\t\t\t (!windowState.equals(LiferayWindowState.EXCLUSIVE) &&\n\t\t\t  !windowState.equals(LiferayWindowState.POP_UP)))) {\n\n\t\t\tString portletId = portletURL.getPortletId();\n\t\t\tString assetEntryId = portletURL.getParameter(\"assetEntryId\");\n\t\t\tString type = GetterUtil.getString(\n\t\t\t\tportletURL.getParameter(\"type\"), \"content\");\n\t\t\tlong groupId = GetterUtil.getLong(\n\t\t\t\tportletURL.getParameter(\"groupId\"));\n\t\t\tString urlTitle = portletURL.getParameter(\"urlTitle\");\n\n\t\t\tif (Validator.isNotNull(portletId) &&\n\t\t\t\tValidator.isNotNull(assetEntryId)) {\n\n\t\t\t\tif (portletId.equals(_PORTLET_DEFAULT_INSTANCE)) {\n\t\t\t\t\tportletId = _PORTLET_ID;\n\t\t\t\t}\n\n\t\t\t\tint pos = portletId.indexOf(\n\t\t\t\t\tPortletConstants.INSTANCE_SEPARATOR);\n\n\t\t\t\tString instanceId = null;\n\n\t\t\t\tif (pos > 0) {\n\t\t\t\t\tinstanceId = portletId.substring(pos + 10);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tinstanceId = portletId;\n\t\t\t\t}\n\n\t\t\t\tfriendlyURLPath =\n\t\t\t\t\t\"/asset_publisher/\" + instanceId + StringPool.SLASH + type +\n\t\t\t\t\t\tStringPool.SLASH;\n\n\t\t\t\tif (Validator.isNotNull(urlTitle)) {\n\t\t\t\t\tfriendlyURLPath += urlTitle;\n\n\t\t\t\t\tportletURL.addParameterIncludedInPath(\"urlTitle\");\n\n\t\t\t\t\tif (groupId > 0) {\n\t\t\t\t\t\tfriendlyURLPath += StringPool.SLASH + groupId;\n\n\t\t\t\t\t\tportletURL.addParameterIncludedInPath(\"groupId\");\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tfriendlyURLPath += \"id/\" + assetEntryId;\n\t\t\t\t}\n\n\t\t\t\tportletURL.addParameterIncludedInPath(\"type\");\n\t\t\t\tportletURL.addParameterIncludedInPath(\"assetEntryId\");\n\t\t\t}\n\t\t}\n\t\telse if (windowState.equals(WindowState.MAXIMIZED)) {\n\t\t\tfriendlyURLPath += StringPool.SLASH + windowState;\n\t\t}\n\n\t\tif (Validator.isNotNull(friendlyURLPath)) {\n\t\t\tportletURL.addParameterIncludedInPath(\"p_p_id\");\n\n\t\t\tportletURL.addParameterIncludedInPath(\"struts_action\");\n\t\t}\n\n\t\treturn friendlyURLPath;\n\t}","id":55066,"modified_method":"public String buildPath(LiferayPortletURL portletURL) {\n\t\tString friendlyURLPath = null;\n\n\t\tString strutsAction = GetterUtil.getString(\n\t\t\tportletURL.getParameter(\"struts_action\"));\n\n\t\tWindowState windowState = portletURL.getWindowState();\n\n\t\tif (strutsAction.equals(\"/asset_publisher/view_content\")) {\n\t\t\tString portletId = portletURL.getPortletId();\n\t\t\tString assetEntryId = portletURL.getParameter(\"assetEntryId\");\n\t\t\tString type = GetterUtil.getString(\n\t\t\t\tportletURL.getParameter(\"type\"), \"content\");\n\t\t\tlong groupId = GetterUtil.getLong(\n\t\t\t\tportletURL.getParameter(\"groupId\"));\n\t\t\tString urlTitle = portletURL.getParameter(\"urlTitle\");\n\n\t\t\tif (Validator.isNotNull(portletId) &&\n\t\t\t\tValidator.isNotNull(assetEntryId)) {\n\n\t\t\t\tif (portletId.equals(_PORTLET_DEFAULT_INSTANCE)) {\n\t\t\t\t\tportletId = _PORTLET_ID;\n\t\t\t\t}\n\n\t\t\t\tint pos = portletId.indexOf(\n\t\t\t\t\tPortletConstants.INSTANCE_SEPARATOR);\n\n\t\t\t\tString instanceId = null;\n\n\t\t\t\tif (pos > 0) {\n\t\t\t\t\tinstanceId = portletId.substring(pos + 10);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tinstanceId = portletId;\n\t\t\t\t}\n\n\t\t\t\tfriendlyURLPath =\n\t\t\t\t\t\"/asset_publisher/\" + instanceId + StringPool.SLASH + type +\n\t\t\t\t\t\tStringPool.SLASH;\n\n\t\t\t\tif (Validator.isNotNull(urlTitle)) {\n\t\t\t\t\tfriendlyURLPath += urlTitle;\n\n\t\t\t\t\tportletURL.addParameterIncludedInPath(\"urlTitle\");\n\n\t\t\t\t\tif (groupId > 0) {\n\t\t\t\t\t\tfriendlyURLPath += StringPool.SLASH + groupId;\n\n\t\t\t\t\t\tportletURL.addParameterIncludedInPath(\"groupId\");\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tfriendlyURLPath += \"id/\" + assetEntryId;\n\t\t\t\t}\n\n\t\t\t\tportletURL.addParameterIncludedInPath(\"type\");\n\t\t\t\tportletURL.addParameterIncludedInPath(\"assetEntryId\");\n\t\t\t}\n\t\t}\n\t\telse if (strutsAction.equals(\"/asset_publisher/rss\")) {\n\t\t\tString portletId = portletURL.getPortletId();\n\n\t\t\tif (Validator.isNotNull(portletId)) {\n\t\t\t\tif (portletId.equals(_PORTLET_DEFAULT_INSTANCE)) {\n\t\t\t\t\tportletId = _PORTLET_ID;\n\t\t\t\t}\n\n\t\t\t\tint pos = portletId.indexOf(\n\t\t\t\t\tPortletConstants.INSTANCE_SEPARATOR);\n\n\t\t\t\tString instanceId = null;\n\n\t\t\t\tif (pos > 0) {\n\t\t\t\t\tinstanceId = portletId.substring(pos + 10);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tinstanceId = portletId;\n\t\t\t\t}\n\n\t\t\t\tfriendlyURLPath =\n\t\t\t\t\t\"/asset_publisher/\" + instanceId + \"/rss\";\n\t\t\t}\n\t\t}\n\n\t\tif (Validator.isNotNull(friendlyURLPath)) {\n\t\t\tif (windowState.equals(WindowState.MAXIMIZED)) {\n\t\t\t\tfriendlyURLPath += StringPool.SLASH + windowState;\n\t\t\t}\n\n\t\t\tportletURL.addParameterIncludedInPath(\"p_p_id\");\n\n\t\t\tportletURL.addParameterIncludedInPath(\"struts_action\");\n\t\t}\n\n\t\treturn friendlyURLPath;\n\t}","commit_id":"45de75e0825bd14f267559c773fc3d81b320aae0","url":"https://github.com/liferay/liferay-portal"},{"original_method":"@Override\n\tpublic List<String> getArgs() {\n\t\tList<String> args = new ArrayList<>();\n\n\t\tProject project = getProject();\n\n\t\tExtensionContainer extensionContainer = project.getExtensions();\n\n\t\tServiceBuilderArgs serviceBuilderArgs = extensionContainer.getByType(\n\t\t\tServiceBuilderArgs.class);\n\n\t\targs.add(\"service.api.dir=\" + serviceBuilderArgs.getApiDirName());\n\t\targs.add(\n\t\t\t\"service.auto.import.default.references=\" +\n\t\t\t\tserviceBuilderArgs.isAutoImportDefaultReferences());\n\t\targs.add(\n\t\t\t\"service.auto.namespace.tables=\" +\n\t\t\t\tserviceBuilderArgs.isAutoNamespaceTables());\n\t\targs.add(\n\t\t\t\"service.bean.locator.util=\" +\n\t\t\t\tserviceBuilderArgs.getBeanLocatorUtil());\n\t\targs.add(\n\t\t\t\"service.build.number.increment=\" +\n\t\t\t\tserviceBuilderArgs.isBuildNumberIncrement());\n\t\targs.add(\"service.build.number=\" + serviceBuilderArgs.getBuildNumber());\n\t\targs.add(\"service.hbm.file=\" + serviceBuilderArgs.getHbmFileName());\n\t\targs.add(\"service.impl.dir=\" + serviceBuilderArgs.getImplDirName());\n\t\targs.add(\"service.input.file=\" + serviceBuilderArgs.getInputFileName());\n\t\targs.add(\n\t\t\t\"service.model.hints.configs=\" +\n\t\t\t\tStringUtil.merge(\n\t\t\t\t\tserviceBuilderArgs.getModelHintsConfigs(), \",\"));\n\t\targs.add(\n\t\t\t\"service.model.hints.file=\" +\n\t\t\t\tserviceBuilderArgs.getModelHintsFileName());\n\t\targs.add(\"service.osgi.module=\" + serviceBuilderArgs.isOsgiModule());\n\t\targs.add(\"service.plugin.name=\" + serviceBuilderArgs.getPluginName());\n\t\targs.add(\"service.props.util=\" + serviceBuilderArgs.getPropsUtil());\n\t\targs.add(\n\t\t\t\"service.read.only.prefixes=\" +\n\t\t\t\tStringUtil.merge(\n\t\t\t\t\tserviceBuilderArgs.getReadOnlyPrefixes(), \",\"));\n\t\targs.add(\n\t\t\t\"service.remoting.file=\" +\n\t\t\t\tserviceBuilderArgs.getRemotingFileName());\n\t\targs.add(\n\t\t\t\"service.resource.actions.configs=\" +\n\t\t\t\tStringUtil.merge(\n\t\t\t\t\tserviceBuilderArgs.getResourceActionsConfigs(), \",\"));\n\t\targs.add(\n\t\t\t\"service.resources.dir=\" +\n\t\t\t\tserviceBuilderArgs.getResourcesDirName());\n\t\targs.add(\n\t\t\t\"service.spring.file=\" + serviceBuilderArgs.getSpringFileName());\n\t\targs.add(\n\t\t\t\"service.spring.namespaces=\" +\n\t\t\t\tStringUtil.merge(\n\t\t\t\t\tserviceBuilderArgs.getSpringNamespaces(), \",\"));\n\t\targs.add(\"service.sql.dir=\" + serviceBuilderArgs.getSqlDirName());\n\t\targs.add(\"service.sql.file=\" + serviceBuilderArgs.getSqlFileName());\n\t\targs.add(\n\t\t\t\"service.sql.indexes.file=\" +\n\t\t\t\tserviceBuilderArgs.getSqlIndexesFileName());\n\t\targs.add(\n\t\t\t\"service.sql.sequences.file=\" +\n\t\t\t\tserviceBuilderArgs.getSqlSequencesFileName());\n\t\targs.add(\n\t\t\t\"service.target.entity.name=\" +\n\t\t\t\tserviceBuilderArgs.getTargetEntityName());\n\t\targs.add(\"service.test.dir=\" + serviceBuilderArgs.getTestDirName());\n\n\t\treturn args;\n\t}","id":55067,"modified_method":"@Override\n\tpublic List<String> getArgs() {\n\t\tList<String> args = new ArrayList<>();\n\n\t\targs.add(\"service.api.dir=\" + FileUtil.getAbsolutePath(getApiDir()));\n\t\targs.add(\n\t\t\t\"service.auto.import.default.references=\" +\n\t\t\t\tisAutoImportDefaultReferences());\n\t\targs.add(\"service.auto.namespace.tables=\" + isAutoNamespaceTables());\n\t\targs.add(\"service.bean.locator.util=\" + getBeanLocatorUtil());\n\t\targs.add(\"service.build.number.increment=\" + isBuildNumberIncrement());\n\t\targs.add(\"service.build.number=\" + getBuildNumber());\n\t\targs.add(\"service.hbm.file=\" + FileUtil.getAbsolutePath(getHbmFile()));\n\t\targs.add(\"service.impl.dir=\" + FileUtil.getAbsolutePath(getImplDir()));\n\t\targs.add(\n\t\t\t\"service.input.file=\" + FileUtil.getAbsolutePath(getInputFile()));\n\t\targs.add(\n\t\t\t\"service.model.hints.configs=\" +\n\t\t\t\tStringUtil.merge(getModelHintsConfigs(), \",\"));\n\t\targs.add(\n\t\t\t\"service.model.hints.file=\" +\n\t\t\t\tFileUtil.getAbsolutePath(getModelHintsFile()));\n\t\targs.add(\"service.osgi.module=\" + isOsgiModule());\n\t\targs.add(\"service.plugin.name=\" + getPluginName());\n\t\targs.add(\"service.props.util=\" + getPropsUtil());\n\t\targs.add(\n\t\t\t\"service.read.only.prefixes=\" +\n\t\t\t\tStringUtil.merge(getReadOnlyPrefixes(), \",\"));\n\t\targs.add(\n\t\t\t\"service.remoting.file=\" +\n\t\t\t\tFileUtil.getAbsolutePath(getRemotingFile()));\n\t\targs.add(\n\t\t\t\"service.resource.actions.configs=\" +\n\t\t\t\tStringUtil.merge(getResourceActionsConfigs(), \",\"));\n\t\targs.add(\n\t\t\t\"service.resources.dir=\" +\n\t\t\t\tFileUtil.getAbsolutePath(getResourcesDir()));\n\t\targs.add(\n\t\t\t\"service.spring.file=\" + FileUtil.getAbsolutePath(getSpringFile()));\n\t\targs.add(\n\t\t\t\"service.spring.namespaces=\" +\n\t\t\t\tStringUtil.merge(getSpringNamespaces(), \",\"));\n\t\targs.add(\"service.sql.dir=\" + FileUtil.getAbsolutePath(getSqlDir()));\n\t\targs.add(\"service.sql.file=\" + getSqlFileName());\n\t\targs.add(\"service.sql.indexes.file=\" + getSqlIndexesFileName());\n\t\targs.add(\"service.sql.sequences.file=\" + getSqlSequencesFileName());\n\t\targs.add(\"service.target.entity.name=\" + getTargetEntityName());\n\t\targs.add(\"service.test.dir=\" + FileUtil.getAbsolutePath(getTestDir()));\n\n\t\treturn args;\n\t}","commit_id":"afc1cfdcba7da71ff364a760a490adef4ac4edb2","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void setMergeModelHintsConfigs(String mergeModelHintsConfigs) {\n\t\t_setModelHintsConfigs(\n\t\t\t_append(_modelHintsConfigs, _split(mergeModelHintsConfigs)));\n\t}","id":55068,"modified_method":"public void setMergeModelHintsConfigs(String mergeModelHintsConfigs) {\n\t\tsetMergeModelHintsConfigs(_split(mergeModelHintsConfigs));\n\t}","commit_id":"afc1cfdcba7da71ff364a760a490adef4ac4edb2","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void setResourceActionsConfigs(String resourceActionsConfigs) {\n\t\t_setResourceActionsConfigs(_split(resourceActionsConfigs));\n\t}","id":55069,"modified_method":"public void setResourceActionsConfigs(String resourceActionsConfigs) {\n\t\tsetResourceActionsConfigs(_split(resourceActionsConfigs));\n\t}","commit_id":"afc1cfdcba7da71ff364a760a490adef4ac4edb2","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void setMergeResourceActionsConfigs(\n\t\tString mergeResourceActionsConfigs) {\n\n\t\t_setResourceActionsConfigs(\n\t\t\t_append(\n\t\t\t\t_resourceActionsConfigs, _split(mergeResourceActionsConfigs)));\n\t}","id":55070,"modified_method":"public void setMergeResourceActionsConfigs(\n\t\tString mergeResourceActionsConfigs) {\n\n\t\tsetMergeResourceActionsConfigs(_split(mergeResourceActionsConfigs));\n\t}","commit_id":"afc1cfdcba7da71ff364a760a490adef4ac4edb2","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void setModelHintsConfigs(String modelHintsConfigs) {\n\t\t_setModelHintsConfigs(_split(modelHintsConfigs));\n\t}","id":55071,"modified_method":"public void setModelHintsConfigs(String modelHintsConfigs) {\n\t\tsetModelHintsConfigs(_split(modelHintsConfigs));\n\t}","commit_id":"afc1cfdcba7da71ff364a760a490adef4ac4edb2","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void setMergeReadOnlyPrefixes(String mergeReadOnlyPrefixes) {\n\t\t_setReadOnlyPrefixes(\n\t\t\t_append(_readOnlyPrefixes, _split(mergeReadOnlyPrefixes)));\n\t}","id":55072,"modified_method":"public void setMergeReadOnlyPrefixes(String mergeReadOnlyPrefixes) {\n\t\tsetMergeReadOnlyPrefixes(_split(mergeReadOnlyPrefixes));\n\t}","commit_id":"afc1cfdcba7da71ff364a760a490adef4ac4edb2","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void setReadOnlyPrefixes(String readOnlyPrefixes) {\n\t\t_setReadOnlyPrefixes(_split(readOnlyPrefixes));\n\t}","id":55073,"modified_method":"public void setReadOnlyPrefixes(String readOnlyPrefixes) {\n\t\tsetReadOnlyPrefixes(_split(readOnlyPrefixes));\n\t}","commit_id":"afc1cfdcba7da71ff364a760a490adef4ac4edb2","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void setSpringNamespaces(String springNamespaces) {\n\t\t_springNamespaces = _split(springNamespaces);\n\t}","id":55074,"modified_method":"public void setSpringNamespaces(String springNamespaces) {\n\t\tsetSpringNamespaces(_split(springNamespaces));\n\t}","commit_id":"afc1cfdcba7da71ff364a760a490adef4ac4edb2","url":"https://github.com/liferay/liferay-portal"},{"original_method":"@Override\n\tpublic void apply(Project project) {\n\t\taddServiceBuilderConfiguration(project);\n\t\taddServiceBuilderExtension(project);\n\n\t\taddBuildServiceTask(project);\n\t}","id":55075,"modified_method":"@Override\n\tpublic void apply(Project project) {\n\t\taddServiceBuilderConfiguration(project);\n\n\t\taddBuildServiceTask(project);\n\t}","commit_id":"afc1cfdcba7da71ff364a760a490adef4ac4edb2","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public static JmxProcess getJmxProcess(String name, InputStream in) throws JsonParseException, JsonMappingException, IOException {\n        ObjectMapper mapper = new ObjectMapper();\n\n        // lets tweak the class loader so we can find the classes\n        ClassLoader oldClassLoader = Thread.currentThread().getContextClassLoader();\n        ClassLoader classLoader = GraphiteWriter.class.getClassLoader();\n        Thread.currentThread().setContextClassLoader(classLoader);\n\n        try {\n            JmxProcess jmx = mapper.readValue(in, JmxProcess.class);\n            jmx.setName(name);\n            return jmx;\n        } finally {\n            Thread.currentThread().setContextClassLoader(oldClassLoader);\n        }\n    }","id":55076,"modified_method":"public static JmxProcess getJmxProcess(String name, InputStream in) throws JsonParseException, JsonMappingException, IOException {\n        JmxProcess jmx = Json.readJsonValue(name, in, JmxProcess.class);\n        jmx.setName(name);\n        return jmx;\n    }","commit_id":"74cd73f0229d0feb8d1052da1c058ee1ca0ec2b8","url":"https://github.com/fabric8io/fabric8"},{"original_method":"protected void loadProfile(Agent agent, Profile profile) throws IOException {\n        Map<String, byte[]> fileConfigurations = profile.getFileConfigurations();\n        byte[] bytes = fileConfigurations.get(GRAPH_JSON);\n        if (bytes != null && bytes.length > 0) {\n            JmxProcess process = getJmxProcess(GRAPH_JSON, new ByteArrayInputStream(bytes));\n            if (process != null) {\n                JmxUtils.mergeServerLists(this.masterServersList, process.getServers());\n            }\n        }\n    }","id":55077,"modified_method":"protected void loadProfile(Agent agent, Profile profile) throws IOException {\n        Map<String, byte[]> fileConfigurations = profile.getFileConfigurations();\n        byte[] bytes = fileConfigurations.get(GRAPH_JSON);\n        if (bytes != null && bytes.length > 0) {\n            JmxProcess process = getJmxProcess(GRAPH_JSON, new ByteArrayInputStream(bytes));\n            if (process != null) {\n                List<Server> servers = process.getServers();\n                for (Server server : servers) {\n                    configureProfileServer(server, agent, profile);\n                }\n                JmxUtils.mergeServerLists(this.masterServersList, servers);\n            }\n        }\n    }","commit_id":"74cd73f0229d0feb8d1052da1c058ee1ca0ec2b8","url":"https://github.com/fabric8io/fabric8"},{"original_method":"public String toString()\n    {\n        StringBuffer sb = new StringBuffer();\n        \n        sb.append( \"             id: \" + getId() ).append(  \"\\n\" );\n        sb.append( \"            url: \" + getUrl() ).append(  \"\\n\" );\n        sb.append( \"         layout: \" + layout != null ? layout.getId() : \"none\"  ).append(  \"\\n\" );\n        sb.append( \"snapshot policy: [update => \" + snapshots.getUpdatePolicy() ).append(  \" ]\\n\" );\n        sb.append( \" release policy: [update => \" + releases.getUpdatePolicy() ).append(  \" ]\\n\" );        \n        \n        return sb.toString();\n    }","id":55078,"modified_method":"public String toString()\n    {\n        StringBuffer sb = new StringBuffer();\n        \n        sb.append( \"             id: \" + getId() ).append(  \"\\n\" );\n        sb.append( \"            url: \" + getUrl() ).append(  \"\\n\" );\n        sb.append( \"         layout: \" + ( layout != null ? layout.getId() : \"none\" ) ).append( \"\\n\" );\n        sb.append( \"snapshot policy: [update => \" + snapshots.getUpdatePolicy() ).append(  \" ]\\n\" );\n        sb.append( \" release policy: [update => \" + releases.getUpdatePolicy() ).append(  \" ]\\n\" );        \n        \n        return sb.toString();\n    }","commit_id":"205d7a6f481e0c9ca84924e4fab58dada6972ef7","url":"https://github.com/apache/maven"},{"original_method":"private void processSettings( MavenExecutionRequest request, Configuration configuration )\n        throws MavenEmbedderException\n    {\n        ProfileManager profileManager = request.getProfileManager();\n\n        Settings settings = request.getSettings();\n\n        request.setPluginGroups( settings.getPluginGroups() );\n\n        List<org.apache.maven.settings.Profile> settingsProfiles = settings.getProfiles();\n\n        List<String> settingsActiveProfileIds = settings.getActiveProfiles();\n\n        if ( settingsActiveProfileIds != null )\n        {\n            for ( String profileId : settingsActiveProfileIds )\n            {\n                profileManager.getProfileActivationContext().setActive( profileId );\n            }\n        }\n\n        if ( ( settingsProfiles != null ) && !settingsProfiles.isEmpty() )\n        {\n            for ( Iterator<org.apache.maven.settings.Profile> it = settings.getProfiles().iterator(); it.hasNext(); )\n            {\n                org.apache.maven.settings.Profile rawProfile = it.next();\n\n                Profile profile = SettingsUtils.convertFromSettingsProfile( rawProfile );\n\n                profileManager.addProfile( profile );\n\n                // We need to convert profile repositories to artifact repositories                \n\n                for ( Iterator<Repository> j = profile.getRepositories().iterator(); j.hasNext(); )\n                {\n                    Repository r = j.next();\n\n                    ArtifactRepository ar;\n                    try\n                    {\n                        ar = repositorySystem.buildArtifactRepository( r );\n                    }\n                    catch ( InvalidRepositoryException e )\n                    {\n                        throw new MavenEmbedderException( \"Cannot create remote repository \" + r.getId(), e );\n                    }\n\n                    request.addRemoteRepository( ar );\n                }\n            }\n        }\n\n        injectDefaultRepositories( request );\n\n        processRepositoriesInSettings( request, configuration );\n    }","id":55079,"modified_method":"private void processSettings( MavenExecutionRequest request, Configuration configuration )\n        throws MavenEmbedderException\n    {\n        ProfileManager profileManager = request.getProfileManager();\n\n        Settings settings = request.getSettings();\n\n        request.setPluginGroups( settings.getPluginGroups() );\n\n        List<org.apache.maven.settings.Profile> settingsProfiles = settings.getProfiles();\n\n        List<String> settingsActiveProfileIds = settings.getActiveProfiles();\n\n        if ( settingsActiveProfileIds != null )\n        {\n            for ( String profileId : settingsActiveProfileIds )\n            {\n                profileManager.getProfileActivationContext().setActive( profileId );\n            }\n        }\n\n        if ( ( settingsProfiles != null ) && !settingsProfiles.isEmpty() )\n        {\n            for ( org.apache.maven.settings.Profile rawProfile : settings.getProfiles() )\n            {\n                Profile profile = SettingsUtils.convertFromSettingsProfile( rawProfile );\n\n                profileManager.addProfile( profile );\n\n                // We need to convert profile repositories to artifact repositories\n\n                for ( Repository r : profile.getRepositories() )\n                {\n                    try\n                    {\n                        request.addRemoteRepository( repositorySystem.buildArtifactRepository( r ) );\n                    }\n                    catch ( InvalidRepositoryException e )\n                    {\n                        throw new MavenEmbedderException( \"Cannot create remote repository \" + r.getId(), e );\n                    }\n                }\n            }\n        }\n\n        injectDefaultRepositories( request );\n\n        processRepositoriesInSettings( request, configuration );\n    }","commit_id":"205d7a6f481e0c9ca84924e4fab58dada6972ef7","url":"https://github.com/apache/maven"},{"original_method":"private void processRepositoriesInSettings( MavenExecutionRequest request, Configuration configuration )\n        throws MavenEmbedderException\n    {\n        Settings settings = request.getSettings();\n\n        Proxy proxy = settings.getActiveProxy();\n\n        if ( proxy != null )\n        {\n            if ( proxy.getHost() == null )\n            {\n                throw new MavenEmbedderException( \"Proxy in settings.xml has no host\" );\n            }\n\n            repositorySystem.addProxy( proxy.getProtocol(), proxy.getHost(), proxy.getPort(), proxy.getUsername(), proxy.getPassword(), proxy.getNonProxyHosts() );\n        }\n\n        for ( Iterator i = settings.getServers().iterator(); i.hasNext(); )\n        {\n            Server server = (Server) i.next();\n\n            String pass;\n            String phrase;\n            try\n            {\n                pass = securityDispatcher.decrypt( server.getPassword() );\n                phrase = securityDispatcher.decrypt( server.getPassphrase() );\n            }\n            catch ( SecDispatcherException e )\n            {\n                throw new MavenEmbedderException( \"Error decrypting server password/passphrase.\", e );\n            }\n\n            repositorySystem.addAuthenticationInfo( server.getId(), server.getUsername(), pass, server.getPrivateKey(), phrase );\n\n            repositorySystem.addPermissionInfo( server.getId(), server.getFilePermissions(), server.getDirectoryPermissions() );\n        }\n\n        for ( Iterator<Mirror> i = settings.getMirrors().iterator(); i.hasNext(); )\n        {\n            Mirror mirror = i.next();\n\n            repositorySystem.addMirror( mirror.getId(), mirror.getMirrorOf(), mirror.getUrl() );\n        }\n\n        // <mirrors>\n        //   <mirror>\n        //     <id>nexus<\/id>\n        //     <mirrorOf>*<\/mirrorOf>\n        //     <url>http://repository.sonatype.org/content/groups/public<\/url>\n        //   <\/mirror>\n        // <\/mirrors>        \n\n        request.setRemoteRepositories( repositorySystem.getMirrors( request.getRemoteRepositories() ) );       \n    }","id":55080,"modified_method":"private void processRepositoriesInSettings( MavenExecutionRequest request, Configuration configuration )\n        throws MavenEmbedderException\n    {\n        Settings settings = request.getSettings();\n\n        Proxy proxy = settings.getActiveProxy();\n\n        if ( proxy != null )\n        {\n            if ( proxy.getHost() == null )\n            {\n                throw new MavenEmbedderException( \"Proxy in settings.xml has no host\" );\n            }\n\n            repositorySystem.addProxy( proxy.getProtocol(), proxy.getHost(), proxy.getPort(), proxy.getUsername(), proxy.getPassword(), proxy.getNonProxyHosts() );\n        }\n\n        for ( Server server : settings.getServers() )\n        {\n            String pass;\n            String phrase;\n            try\n            {\n                pass = securityDispatcher.decrypt( server.getPassword() );\n                phrase = securityDispatcher.decrypt( server.getPassphrase() );\n            }\n            catch ( SecDispatcherException e )\n            {\n                throw new MavenEmbedderException( \"Error decrypting server password/passphrase.\", e );\n            }\n\n            repositorySystem.addAuthenticationInfo( server.getId(), server.getUsername(), pass, server.getPrivateKey(), phrase );\n\n            repositorySystem.addPermissionInfo( server.getId(), server.getFilePermissions(), server.getDirectoryPermissions() );\n        }\n\n        for ( Mirror mirror : settings.getMirrors() )\n        {\n            repositorySystem.addMirror( mirror.getId(), mirror.getMirrorOf(), mirror.getUrl() );\n        }\n\n        // <mirrors>\n        //   <mirror>\n        //     <id>nexus<\/id>\n        //     <mirrorOf>*<\/mirrorOf>\n        //     <url>http://repository.sonatype.org/content/groups/public<\/url>\n        //   <\/mirror>\n        // <\/mirrors>        \n\n        System.out.println( \"ORIGINAL REPOSITORIES\" );\n        for ( ArtifactRepository repo : request.getRemoteRepositories() )\n        {\n            System.out.println( repo );\n        }\n        request.setRemoteRepositories( repositorySystem.getMirrors( request.getRemoteRepositories() ) );       \n        System.out.println( \"MIRRORED REPOSITORIES\" );\n        for ( ArtifactRepository repo : request.getRemoteRepositories() )\n        {\n            System.out.println( repo );\n        }\n    }","commit_id":"205d7a6f481e0c9ca84924e4fab58dada6972ef7","url":"https://github.com/apache/maven"},{"original_method":"private void eventing( MavenExecutionRequest request, Configuration configuration )\n    {\n        // ------------------------------------------------------------------------\n        // Event Monitor/Logging\n        //\n        //\n        // ------------------------------------------------------------------------\n\n        if ( ( request.getEventMonitors() == null ) || request.getEventMonitors().isEmpty() )\n        {\n            request.addEventMonitor( new DefaultEventMonitor( getLogger() ) );\n        }\n\n        // Now, add in any event monitors from the Configuration instance.\n        List<EventMonitor> configEventMonitors = configuration.getEventMonitors();\n\n        if ( ( configEventMonitors != null ) && !configEventMonitors.isEmpty() )\n        {\n            for ( Iterator<EventMonitor> it = configEventMonitors.iterator(); it.hasNext(); )\n            {\n                EventMonitor monitor = (EventMonitor) it.next();\n                request.addEventMonitor( monitor );\n            }\n        }\n    }","id":55081,"modified_method":"private void eventing( MavenExecutionRequest request, Configuration configuration )\n    {\n        // ------------------------------------------------------------------------\n        // Event Monitor/Logging\n        //\n        //\n        // ------------------------------------------------------------------------\n\n        if ( ( request.getEventMonitors() == null ) || request.getEventMonitors().isEmpty() )\n        {\n            request.addEventMonitor( new DefaultEventMonitor( getLogger() ) );\n        }\n\n        // Now, add in any event monitors from the Configuration instance.\n        List<EventMonitor> configEventMonitors = configuration.getEventMonitors();\n\n        if ( ( configEventMonitors != null ) && !configEventMonitors.isEmpty() )\n        {\n            for ( EventMonitor monitor : configEventMonitors )\n            {\n                request.addEventMonitor( monitor );\n            }\n        }\n    }","commit_id":"205d7a6f481e0c9ca84924e4fab58dada6972ef7","url":"https://github.com/apache/maven"},{"original_method":"/**\n     * Configure the Wagon with the information from serverConfigurationMap ( which comes from settings.xml )\n     *\n     * @param wagon\n     * @param repositoryId\n     * @param settings\n     * @param container\n     * @param log\n     * @throws TransferFailedException\n     * @todo Remove when {@link WagonManager#getWagon(Repository) is available}. It's available in Maven 2.0.5.\n     */\n    private static void configureWagon( Wagon wagon, String repositoryId, Settings settings, PlexusContainer container,\n                                        Log log )\n        throws TransferFailedException\n    {\n        log.debug( \" configureWagon \" );\n\n        // MSITE-25: Make sure that the server settings are inserted\n        for ( int i = 0; i < settings.getServers().size(); i++ )\n        {\n            Server server = settings.getServers().get( i );\n            String id = server.getId();\n\n            log.debug( \"configureWagon server \" + id );\n\n            if ( id != null && id.equals( repositoryId ) )\n            {\n                if ( server.getConfiguration() != null )\n                {\n                    final PlexusConfiguration plexusConf =\n                        new XmlPlexusConfiguration( (Xpp3Dom) server.getConfiguration() );\n\n                    ComponentConfigurator componentConfigurator = null;\n                    try\n                    {\n                        componentConfigurator =\n                            (ComponentConfigurator) container.lookup( ComponentConfigurator.ROLE, \"basic\" );\n                        if ( isMaven3OrMore() )\n                        {\n                            componentConfigurator.configureComponent( wagon, plexusConf,\n                                                                      container.getContainerRealm() );\n                        }\n                        else\n                        {\n                            configureWagonWithMaven2( componentConfigurator, wagon, plexusConf, container );\n                        }\n                    }\n                    catch ( final ComponentLookupException e )\n                    {\n                        throw new TransferFailedException(\n                            \"While configuring wagon for \\'\" + repositoryId + \"\\': Unable to lookup wagon configurator.\"\n                                + \" Wagon configuration cannot be applied.\", e );\n                    }\n                    catch ( ComponentConfigurationException e )\n                    {\n                        throw new TransferFailedException( \"While configuring wagon for \\'\" + repositoryId\n                                                               + \"\\': Unable to apply wagon configuration.\", e );\n                    }\n                    finally\n                    {\n                        if ( componentConfigurator != null )\n                        {\n                            try\n                            {\n                                container.release( componentConfigurator );\n                            }\n                            catch ( ComponentLifecycleException e )\n                            {\n                                log.error( \"Problem releasing configurator - ignoring: \" + e.getMessage() );\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }","id":55082,"modified_method":"/**\n     * Configure the Wagon with the information from serverConfigurationMap ( which comes from settings.xml )\n     *\n     * @param wagon\n     * @param repositoryId\n     * @param settings\n     * @param container\n     * @param log\n     * @throws TransferFailedException\n     * @todo Remove when {@link WagonManager#getWagon(Repository) is available}. It's available in Maven 2.0.5.\n     */\n    private static void configureWagon( Wagon wagon, String repositoryId, Settings settings, PlexusContainer container,\n                                        Log log )\n        throws TransferFailedException\n    {\n        log.debug( \" configureWagon \" );\n\n        // MSITE-25: Make sure that the server settings are inserted\n        for ( Server server : settings.getServers() )\n        {\n            String id = server.getId();\n\n            log.debug( \"configureWagon server \" + id );\n\n            if ( id != null && id.equals( repositoryId ) && ( server.getConfiguration() != null ) )\n            {\n                final PlexusConfiguration plexusConf =\n                    new XmlPlexusConfiguration( (Xpp3Dom) server.getConfiguration() );\n\n                ComponentConfigurator componentConfigurator = null;\n                try\n                {\n                    componentConfigurator =\n                        (ComponentConfigurator) container.lookup( ComponentConfigurator.ROLE, \"basic\" );\n                    if ( isMaven3OrMore() )\n                    {\n                        componentConfigurator.configureComponent( wagon, plexusConf,\n                                                                  container.getContainerRealm() );\n                    }\n                    else\n                    {\n                        configureWagonWithMaven2( componentConfigurator, wagon, plexusConf, container );\n                    }\n                }\n                catch ( final ComponentLookupException e )\n                {\n                    throw new TransferFailedException(\n                        \"While configuring wagon for \\'\" + repositoryId + \"\\': Unable to lookup wagon configurator.\"\n                            + \" Wagon configuration cannot be applied.\", e );\n                }\n                catch ( ComponentConfigurationException e )\n                {\n                    throw new TransferFailedException( \"While configuring wagon for \\'\" + repositoryId\n                                                           + \"\\': Unable to apply wagon configuration.\", e );\n                }\n                finally\n                {\n                    if ( componentConfigurator != null )\n                    {\n                        try\n                        {\n                            container.release( componentConfigurator );\n                        }\n                        catch ( ComponentLifecycleException e )\n                        {\n                            log.error( \"Problem releasing configurator - ignoring: \" + e.getMessage() );\n                        }\n                    }\n                }\n            }\n        }\n    }","commit_id":"02bdee0f596246017873ca80b8dec9556904a294","url":"https://github.com/apache/maven-plugins"},{"original_method":"public int compareTo(Mapping o) {\n        if (o == null) {\n            return -1;\n        }\n\n        int result = compare(this.serviceName, o.serviceName);\n        if (result == 0) {\n            result = compare(this.subServiceName, o.subServiceName);\n            if (result == 0) {\n                result = compare(this.userName, o.userName);\n            }\n        }\n        return result;\n    }","id":55083,"modified_method":"public int compareTo(Mapping o) {\n        if (o == null) {\n            return -1;\n        }\n\n        int result = compare(this.serviceName, o.serviceName);\n        if (result == 0) {\n            result = compare(this.subServiceName, o.subServiceName);\n        }\n        return result;\n    }","commit_id":"3462d9bbb5addb82d6ebd5f7143aa6d376ea3122","url":"https://github.com/apache/sling"},{"original_method":"protected void updateMappings() {\n        final List<MappingConfigAmendment> sortedMappings = new ArrayList<MappingConfigAmendment>();\n        for(final MappingConfigAmendment amendment : this.amendments.values() ) {\n            sortedMappings.add(amendment);\n        }\n        Collections.sort(sortedMappings);\n\n        final List<Mapping> mappings = new ArrayList<Mapping>();\n        for(final Mapping m : this.globalServiceUserMappings) {\n            mappings.add(m);\n        }\n        for(final MappingConfigAmendment mca : sortedMappings) {\n            for(final Mapping m : mca.getServiceUserMappings()) {\n                mappings.add(m);\n            }\n        }\n\n        activeMappings = mappings.toArray(new Mapping[mappings.size()]);\n\n        updateServiceMappings(mappings);\n    }","id":55084,"modified_method":"protected RegistrationSet updateMappings() {\n        final List<MappingConfigAmendment> sortedMappings = new ArrayList<MappingConfigAmendment>();\n        for(final MappingConfigAmendment amendment : this.amendments.values() ) {\n            sortedMappings.add(amendment);\n        }\n        Collections.sort(sortedMappings);\n\n        final List<Mapping> mappings = new ArrayList<Mapping>();\n        for(final Mapping m : this.globalServiceUserMappings) {\n            mappings.add(m);\n        }\n        for(final MappingConfigAmendment mca : sortedMappings) {\n            for(final Mapping m : mca.getServiceUserMappings()) {\n                mappings.add(m);\n            }\n        }\n\n        activeMappings = mappings.toArray(new Mapping[mappings.size()]);\n\n        RegistrationSet registrationSet = updateServiceRegistrations(activeMappings);\n\n        return registrationSet;\n\n    }","commit_id":"3462d9bbb5addb82d6ebd5f7143aa6d376ea3122","url":"https://github.com/apache/sling"},{"original_method":"@Activate\n    @Modified\n    void configure(BundleContext bundleContext, final Map<String, Object> config) {\n        final String[] props = PropertiesUtil.toStringArray(config.get(PROP_SERVICE2USER_MAPPING),\n            PROP_SERVICE2USER_MAPPING_DEFAULT);\n\n        final ArrayList<Mapping> mappings = new ArrayList<Mapping>(props.length);\n        for (final String prop : props) {\n            if (prop != null && prop.trim().length() > 0 ) {\n                try {\n                    final Mapping mapping = new Mapping(prop.trim());\n                    mappings.add(mapping);\n                } catch (final IllegalArgumentException iae) {\n                    log.error(\"configure: Ignoring '{}': {}\", prop, iae.getMessage());\n                }\n            }\n        }\n\n        this.globalServiceUserMappings = mappings.toArray(new Mapping[mappings.size()]);\n        this.defaultUser = PropertiesUtil.toString(config.get(PROP_DEFAULT_USER), PROP_DEFAULT_USER_DEFAULT);\n        synchronized ( this.amendments ) {\n            this.bundleContext = bundleContext;\n            this.updateMappings();\n        }\n    }","id":55085,"modified_method":"@Activate\n    @Modified\n    void configure(BundleContext bundleContext, final Map<String, Object> config) {\n        final String[] props = PropertiesUtil.toStringArray(config.get(PROP_SERVICE2USER_MAPPING),\n            PROP_SERVICE2USER_MAPPING_DEFAULT);\n\n        final ArrayList<Mapping> mappings = new ArrayList<Mapping>(props.length);\n        for (final String prop : props) {\n            if (prop != null && prop.trim().length() > 0 ) {\n                try {\n                    final Mapping mapping = new Mapping(prop.trim());\n                    mappings.add(mapping);\n                } catch (final IllegalArgumentException iae) {\n                    log.error(\"configure: Ignoring '{}': {}\", prop, iae.getMessage());\n                }\n            }\n        }\n\n        this.globalServiceUserMappings = mappings.toArray(new Mapping[mappings.size()]);\n        this.defaultUser = PropertiesUtil.toString(config.get(PROP_DEFAULT_USER), PROP_DEFAULT_USER_DEFAULT);\n\n        RegistrationSet registrationSet = null;\n        synchronized ( this.amendments ) {\n            this.bundleContext = bundleContext;\n            registrationSet = this.updateMappings();\n        }\n\n        this.executeServiceRegistrations(registrationSet);\n    }","commit_id":"3462d9bbb5addb82d6ebd5f7143aa6d376ea3122","url":"https://github.com/apache/sling"},{"original_method":"protected void unbindAmendment(final MappingConfigAmendment amendment, final Map<String, Object> props) {\n        final Long key = (Long) props.get(Constants.SERVICE_ID);\n        synchronized ( this.amendments ) {\n            if ( amendments.remove(key) != null ) {\n                this.updateMappings();\n            }\n        }\n\n    }","id":55086,"modified_method":"protected void unbindAmendment(final MappingConfigAmendment amendment, final Map<String, Object> props) {\n        final Long key = (Long) props.get(Constants.SERVICE_ID);\n        RegistrationSet registrationSet = null;\n        synchronized ( this.amendments ) {\n            if ( amendments.remove(key) != null ) {\n                registrationSet = this.updateMappings();\n            }\n        }\n\n        executeServiceRegistrations(registrationSet);\n    }","commit_id":"3462d9bbb5addb82d6ebd5f7143aa6d376ea3122","url":"https://github.com/apache/sling"},{"original_method":"void updateServiceMappings(final List<Mapping> newMappings) {\n\n        // do not do anything if not activated\n        if (bundleContext == null) {\n            return;\n        }\n\n        final SortedSet<Mapping> orderedActiveMappings = new TreeSet<Mapping>(newMappings);\n\n        final Iterator<Map.Entry<Mapping, ServiceRegistration>> it = activeMappingRegistrations.entrySet().iterator();\n        while (it.hasNext()) {\n            final Map.Entry<Mapping, ServiceRegistration> registrationEntry = it.next();\n\n            if (!orderedActiveMappings.contains(registrationEntry.getKey())) {\n                registrationEntry.getValue().unregister();\n                it.remove();\n            }\n        }\n\n\n        for (final Mapping mapping: orderedActiveMappings) {\n            if (!activeMappingRegistrations.containsKey(mapping)) {\n                final Dictionary<String, Object> properties = new Hashtable<String, Object>();\n                if (mapping.getSubServiceName() != null) {\n                    properties.put(ServiceUserMapped.SUBSERVICENAME, mapping.getSubServiceName());\n                }\n\n                properties.put(Mapping.SERVICENAME, mapping.getServiceName());\n                final ServiceRegistration registration = bundleContext.registerService(ServiceUserMappedImpl.SERVICEUSERMAPPED,\n                        new ServiceUserMappedImpl(), properties);\n                activeMappingRegistrations.put(mapping, registration);\n            }\n        }\n    }","id":55087,"modified_method":"RegistrationSet updateServiceRegistrations(final Mapping[] newMappings) {\n\n        RegistrationSet result = new RegistrationSet();\n        // do not do anything if not activated\n        if (bundleContext == null) {\n            return result;\n        }\n\n        final SortedSet<Mapping> orderedNewMappings = new TreeSet<Mapping>(Arrays.asList(newMappings));\n        final SortedMap<Mapping, Registration> newRegistrations = new TreeMap<Mapping, Registration>();\n\n        // keep those that are still mapped\n        for (Map.Entry<Mapping, Registration> registrationEntry: activeRegistrations.entrySet()) {\n            boolean keepEntry = true;\n\n            if (!orderedNewMappings.contains(registrationEntry.getKey())) {\n                Registration registration = registrationEntry.getValue();\n\n                // remove it only if it is a completed registration\n                if (registration.serviceRegistration != null) {\n                    result.removed.add(registration);\n                    keepEntry = false;\n                }\n            }\n\n            if (keepEntry) {\n                newRegistrations.put(registrationEntry.getKey(), registrationEntry.getValue());\n            }\n        }\n\n        // add those that are new\n        for (final Mapping mapping: orderedNewMappings) {\n            if (!newRegistrations.containsKey(mapping)) {\n                Registration registration = new Registration(mapping, null);\n                newRegistrations.put(mapping, registration);\n                result.added.add(registration);\n            }\n        }\n\n        activeRegistrations = newRegistrations;\n\n        return result;\n    }","commit_id":"3462d9bbb5addb82d6ebd5f7143aa6d376ea3122","url":"https://github.com/apache/sling"},{"original_method":"protected void bindAmendment(final MappingConfigAmendment amendment, final Map<String, Object> props) {\n        final Long key = (Long) props.get(Constants.SERVICE_ID);\n        synchronized ( this.amendments ) {\n            amendments.put(key, amendment);\n            this.updateMappings();\n        }\n    }","id":55088,"modified_method":"protected void bindAmendment(final MappingConfigAmendment amendment, final Map<String, Object> props) {\n        final Long key = (Long) props.get(Constants.SERVICE_ID);\n        RegistrationSet registrationSet = null;\n        synchronized ( this.amendments ) {\n            amendments.put(key, amendment);\n            registrationSet = this.updateMappings();\n        }\n\n        executeServiceRegistrations(registrationSet);\n    }","commit_id":"3462d9bbb5addb82d6ebd5f7143aa6d376ea3122","url":"https://github.com/apache/sling"},{"original_method":"@Deactivate\n    void deactivate() {\n        synchronized ( this.amendments) {\n            updateServiceMappings(new ArrayList<Mapping>());\n            bundleContext = null;\n        }\n    }","id":55089,"modified_method":"@Deactivate\n    void deactivate() {\n        RegistrationSet registrationSet = null;\n\n        synchronized ( this.amendments ) {\n            updateServiceRegistrations(new Mapping[0]);\n            bundleContext = null;\n        }\n\n        this.executeServiceRegistrations(registrationSet);\n    }","commit_id":"3462d9bbb5addb82d6ebd5f7143aa6d376ea3122","url":"https://github.com/apache/sling"},{"original_method":"/**\n     * Pings initial members. Removes self before returning vector of initial members.\n     * Uses IP multicast or gossiping, depending on parameters.\n     */\n    void findInitialMembers() {\n        PingRsp ping_rsp;\n\n        synchronized(initial_mbrs) {\n            initial_mbrs.removeAllElements();\n            initial_mbrs_received=false;\n            gms.getDownProtocol().down(new Event(Event.FIND_INITIAL_MBRS));\n\n            // the initial_mbrs_received flag is needed when down_prot.down() is executed on the same thread, so when\n            // it returns, a response might actually have been received (even though the initial_mbrs might still be empty)\n            if(initial_mbrs_received == false) {\n                try {\n                    initial_mbrs.wait();\n                }\n                catch(Exception e) {\n                }\n            }\n\n            for(int i=0; i < initial_mbrs.size(); i++) {\n                ping_rsp=(PingRsp)initial_mbrs.elementAt(i);\n                if(ping_rsp.own_addr != null && gms.local_addr != null &&\n                        ping_rsp.own_addr.equals(gms.local_addr)) {\n                    initial_mbrs.removeElementAt(i);\n                    break;\n                }\n            }\n        }\n    }","id":55090,"modified_method":"private List<PingRsp> findInitialMembers() {\n\t\t\n\t\tList<PingRsp> responses = (List<PingRsp>) gms.getDownProtocol().down(new Event(Event.FIND_INITIAL_MBRS));\t\t\n\t\tfor(Iterator<PingRsp> iter = responses.iterator();iter.hasNext();){\n\t\t\tPingRsp response = iter.next();\n\t\t\tif(response.own_addr !=null && response.own_addr.equals(gms.local_addr))\n\t\t\t\titer.remove();\t\n\t\t}\t\n\t\treturn responses;\n\t}","commit_id":"f29d5b533e6b8d9d262b13c3b44b8322e387f958","url":"https://github.com/belaban/JGroups"},{"original_method":"/**\n     * Joins this process to a group. Determines the coordinator and sends a unicast\n     * handleJoin() message to it. The coordinator returns a JoinRsp and then broadcasts the new view, which\n     * contains a message digest and the current membership (including the joiner). The joiner is then\n     * supposed to install the new view and the digest and starts accepting mcast messages. Previous\n     * mcast messages were discarded (this is done in PBCAST).<p>\n     * If successful, impl is changed to an instance of ParticipantGmsImpl.\n     * Otherwise, we continue trying to send join() messages to\tthe coordinator,\n     * until we succeed (or there is no member in the group. In this case, we create our own singleton group).\n     * <p>When GMS.disable_initial_coord is set to true, then we won't become coordinator on receiving an initial\n     * membership of 0, but instead will retry (forever) until we get an initial membership of > 0.\n     * @param mbr Our own address (assigned through SET_LOCAL_ADDRESS)\n     */\n    public void join(Address mbr) {\n        Address coord;\n        JoinRsp rsp;\n        View    tmp_view;\n        leaving=false;\n\n        join_promise.reset();\n        while(!leaving) {\n            findInitialMembers();\n            if(log.isDebugEnabled()) log.debug(\"initial_mbrs are \" + initial_mbrs);\n            if(initial_mbrs.isEmpty()) {\n                if(gms.disable_initial_coord) {\n                    if(log.isTraceEnabled())\n                        log.trace(\"received an initial membership of 0, but cannot become coordinator \" +\n                                \"(disable_initial_coord=true), will retry fetching the initial membership\");\n                    continue;\n                }\n                if(log.isDebugEnabled())\n                    log.debug(\"no initial members discovered: creating group as first member\");\n                becomeSingletonMember(mbr);\n                return;\n            }\n\n            coord=determineCoord(initial_mbrs);\n            if(coord == null) { // e.g. because we have all clients only\n                if(gms.handle_concurrent_startup == false) {\n                    if(log.isTraceEnabled())\n                        log.trace(\"handle_concurrent_startup is false; ignoring responses of initial clients\");\n                    becomeSingletonMember(mbr);\n                    return;\n                }\n\n                if(log.isTraceEnabled())\n                    log.trace(\"could not determine coordinator from responses \" + initial_mbrs);\n\n                // so the member to become singleton member (and thus coord) is the first of all clients\n                Set<Address> clients=new TreeSet<Address>(); // sorted\n                clients.add(mbr); // add myself again (was removed by findInitialMembers())\n                for(int i=0; i < initial_mbrs.size(); i++) {\n                    PingRsp pingRsp=(PingRsp)initial_mbrs.elementAt(i);\n                    Address client_addr=pingRsp.getAddress();\n                    if(client_addr != null)\n                        clients.add(client_addr);\n                }\n                if(log.isTraceEnabled())\n                    log.trace(\"clients to choose new coord from are: \" + clients);\n                Address new_coord=clients.iterator().next();\n                if(new_coord.equals(mbr)) {\n                    if(log.isTraceEnabled())\n                        log.trace(\"I (\" + mbr + \") am the first of the clients, will become coordinator\");\n                    becomeSingletonMember(mbr);\n                    return;\n                }\n                else {\n                    if(log.isTraceEnabled())\n                        log.trace(\"I (\" + mbr + \") am not the first of the clients, \" +\n                                \"waiting for another client to become coordinator\");\n                    Util.sleep(500);\n                }\n                continue;\n            }\n\n            try {\n                if(log.isDebugEnabled())\n                    log.debug(\"sending handleJoin(\" + mbr + \") to \" + coord);\n                sendJoinMessage(coord, mbr);\n                rsp=(JoinRsp)join_promise.getResult(gms.join_timeout);\n\n                if(rsp == null) {\n                    if(log.isWarnEnabled()) log.warn(\"join(\" + mbr + \") sent to \" + coord + \" timed out, retrying\");\n                }\n                else {\n                    // 1. check whether JOIN was rejected\n                    String failure=rsp.getFailReason();\n                    if(failure != null)\n                        throw new SecurityException(failure);\n\n                    // 2. Install digest\n                    MutableDigest tmp_digest=new MutableDigest(rsp.getDigest());\n                    tmp_view=rsp.getView();\n                    if(tmp_digest == null || tmp_view == null) {\n                        if(log.isErrorEnabled())\n                            log.error(\"JoinRsp has a null view or digest: view=\" + tmp_view + \", digest=\" +\n                                    tmp_digest + \", skipping it\");\n                    }\n                    else {\n                        tmp_digest.incrementHighestDeliveredSeqno(coord); \t// see DESIGN for an explanantion\n                        tmp_digest.seal();\n                        gms.setDigest(tmp_digest);\n\n                        if(log.isDebugEnabled()) log.debug(\"[\" + gms.local_addr + \"]: JoinRsp=\" + tmp_view +\n                                \" [size=\" + tmp_view.size() + \"]\\n\\n\");\n\n                        if(!installView(tmp_view)) {\n                            if(log.isErrorEnabled()) log.error(\"view installation failed, retrying to join group\");\n                            Util.sleep(gms.join_retry_timeout);\n                            continue;\n                        }\n\n                        // send VIEW_ACK to sender of view\n                        Message view_ack=new Message(coord, null, null);\n                        view_ack.setFlag(Message.OOB);\n                        GMS.GmsHeader tmphdr=new GMS.GmsHeader(GMS.GmsHeader.VIEW_ACK);\n                        view_ack.putHeader(GMS.name, tmphdr);\n                        if(!gms.members.contains(coord))\n                            gms.getDownProtocol().down(new Event(Event.ENABLE_UNICASTS_TO, coord));\n                        gms.getDownProtocol().down(new Event(Event.MSG, view_ack));\n\n                        gms.getUpProtocol().up(new Event(Event.BECOME_SERVER));\n                        gms.getDownProtocol().down(new Event(Event.BECOME_SERVER));\n                        return;\n                    }\n                }\n            }\n            catch(SecurityException security_ex) {\n                throw security_ex;\n            }\n            catch(IllegalArgumentException illegal_arg) {\n                throw illegal_arg;\n            }\n            catch(Throwable e) {\n                if(log.isDebugEnabled()) log.debug(\"exception=\" + e + \", retrying\");\n            }\n\n            Util.sleep(gms.join_retry_timeout);\n        }\n    }","id":55091,"modified_method":"/**\n     * Joins this process to a group. Determines the coordinator and sends a unicast\n     * handleJoin() message to it. The coordinator returns a JoinRsp and then broadcasts the new view, which\n     * contains a message digest and the current membership (including the joiner). The joiner is then\n     * supposed to install the new view and the digest and starts accepting mcast messages. Previous\n     * mcast messages were discarded (this is done in PBCAST).<p>\n     * If successful, impl is changed to an instance of ParticipantGmsImpl.\n     * Otherwise, we continue trying to send join() messages to\tthe coordinator,\n     * until we succeed (or there is no member in the group. In this case, we create our own singleton group).\n     * <p>When GMS.disable_initial_coord is set to true, then we won't become coordinator on receiving an initial\n     * membership of 0, but instead will retry (forever) until we get an initial membership of > 0.\n     * @param mbr Our own address (assigned through SET_LOCAL_ADDRESS)\n     */   \n\tpublic void join(Address mbr) {\n        Address coord;\n        JoinRsp rsp;\n        View    tmp_view;\n        leaving=false;\n\n        join_promise.reset();\n        while(!leaving) {\n        \tList<PingRsp> responses = findInitialMembers();        \n            if(log.isDebugEnabled()) log.debug(\"initial_mbrs are \" + responses);\n            if(responses.isEmpty()) {\n                if(gms.disable_initial_coord) {\n                    if(log.isTraceEnabled())\n                        log.trace(\"received an initial membership of 0, but cannot become coordinator \" +\n                                \"(disable_initial_coord=true), will retry fetching the initial membership\");\n                    continue;\n                }\n                if(log.isDebugEnabled())\n                    log.debug(\"no initial members discovered: creating group as first member\");\n                becomeSingletonMember(mbr);\n                return;\n            }\n\n            coord=determineCoord(responses);\n            if(coord == null) { // e.g. because we have all clients only\n                if(gms.handle_concurrent_startup == false) {\n                    if(log.isTraceEnabled())\n                        log.trace(\"handle_concurrent_startup is false; ignoring responses of initial clients\");\n                    becomeSingletonMember(mbr);\n                    return;\n                }\n\n                if(log.isTraceEnabled())\n                    log.trace(\"could not determine coordinator from responses \" + responses);\n\n                // so the member to become singleton member (and thus coord) is the first of all clients\n                Set<Address> clients=new TreeSet<Address>(); // sorted\n                clients.add(mbr); // add myself again (was removed by findInitialMembers())\n                for(PingRsp response:responses){\n                \tAddress client_addr = response.getAddress();\n                \tif(client_addr != null)\n                        clients.add(client_addr);\n\t\t\t\t}                \n                if(log.isTraceEnabled())\n                    log.trace(\"clients to choose new coord from are: \" + clients);\n                Address new_coord=clients.iterator().next();\n                if(new_coord.equals(mbr)) {\n                    if(log.isTraceEnabled())\n                        log.trace(\"I (\" + mbr + \") am the first of the clients, will become coordinator\");\n                    becomeSingletonMember(mbr);\n                    return;\n                }\n                else {\n                    if(log.isTraceEnabled())\n                        log.trace(\"I (\" + mbr + \") am not the first of the clients, \" +\n                                \"waiting for another client to become coordinator\");\n                    Util.sleep(500);\n                }\n                continue;\n            }\n\n            try {\n                if(log.isDebugEnabled())\n                    log.debug(\"sending handleJoin(\" + mbr + \") to \" + coord);\n                sendJoinMessage(coord, mbr);\n                rsp=(JoinRsp)join_promise.getResult(gms.join_timeout);\n\n                if(rsp == null) {\n                    if(log.isWarnEnabled()) log.warn(\"join(\" + mbr + \") sent to \" + coord + \" timed out, retrying\");\n                }\n                else {\n                    // 1. check whether JOIN was rejected\n                    String failure=rsp.getFailReason();\n                    if(failure != null)\n                        throw new SecurityException(failure);\n\n                    // 2. Install digest\n                    MutableDigest tmp_digest=new MutableDigest(rsp.getDigest());\n                    tmp_view=rsp.getView();\n                    if(tmp_digest == null || tmp_view == null) {\n                        if(log.isErrorEnabled())\n                            log.error(\"JoinRsp has a null view or digest: view=\" + tmp_view + \", digest=\" +\n                                    tmp_digest + \", skipping it\");\n                    }\n                    else {\n                        tmp_digest.incrementHighestDeliveredSeqno(coord); \t// see DESIGN for an explanantion\n                        tmp_digest.seal();\n                        gms.setDigest(tmp_digest);\n\n                        if(log.isDebugEnabled()) log.debug(\"[\" + gms.local_addr + \"]: JoinRsp=\" + tmp_view +\n                                \" [size=\" + tmp_view.size() + \"]\\n\\n\");\n\n                        if(!installView(tmp_view)) {\n                            if(log.isErrorEnabled()) log.error(\"view installation failed, retrying to join group\");\n                            Util.sleep(gms.join_retry_timeout);\n                            continue;\n                        }\n\n                        // send VIEW_ACK to sender of view\n                        Message view_ack=new Message(coord, null, null);\n                        view_ack.setFlag(Message.OOB);\n                        GMS.GmsHeader tmphdr=new GMS.GmsHeader(GMS.GmsHeader.VIEW_ACK);\n                        view_ack.putHeader(GMS.name, tmphdr);\n                        if(!gms.members.contains(coord))\n                            gms.getDownProtocol().down(new Event(Event.ENABLE_UNICASTS_TO, coord));\n                        gms.getDownProtocol().down(new Event(Event.MSG, view_ack));\n\n                        gms.getUpProtocol().up(new Event(Event.BECOME_SERVER));\n                        gms.getDownProtocol().down(new Event(Event.BECOME_SERVER));\n                        return;\n                    }\n                }\n            }\n            catch(SecurityException security_ex) {\n                throw security_ex;\n            }\n            catch(IllegalArgumentException illegal_arg) {\n                throw illegal_arg;\n            }\n            catch(Throwable e) {\n                if(log.isDebugEnabled()) log.debug(\"exception=\" + e + \", retrying\");\n            }\n\n            Util.sleep(gms.join_retry_timeout);\n        }\n    }","commit_id":"f29d5b533e6b8d9d262b13c3b44b8322e387f958","url":"https://github.com/belaban/JGroups"},{"original_method":"void sendJoinMessage(Address coord, Address mbr) {\n        Message msg;\n        GMS.GmsHeader hdr;\n\n        msg=new Message(coord, null, null);\n        hdr=new GMS.GmsHeader(GMS.GmsHeader.JOIN_REQ, mbr);\n        msg.putHeader(gms.getName(), hdr);\n        \n        // we have to enable unicasts to coord, as coord is not in our membership (the unicast message would get dropped)\n        gms.getDownProtocol().down(new Event(Event.ENABLE_UNICASTS_TO, coord));\n        gms.getDownProtocol().down(new Event(Event.MSG, msg));\n    }","id":55092,"modified_method":"/** Returns immediately. Clients don't handle suspect() requests */\n    // public void handleSuspect(Address mbr) {\n    // }\n\n\n    /* --------------------------- Private Methods ------------------------------------ */\n\n\n\n    void sendJoinMessage(Address coord, Address mbr) {\n        Message msg;\n        GMS.GmsHeader hdr;\n\n        msg=new Message(coord, null, null);\n        hdr=new GMS.GmsHeader(GMS.GmsHeader.JOIN_REQ, mbr);\n        msg.putHeader(gms.getName(), hdr);\n        \n        // we have to enable unicasts to coord, as coord is not in our membership (the unicast message would get dropped)\n        gms.getDownProtocol().down(new Event(Event.ENABLE_UNICASTS_TO, coord));\n        gms.getDownProtocol().down(new Event(Event.MSG, msg));\n    }","commit_id":"f29d5b533e6b8d9d262b13c3b44b8322e387f958","url":"https://github.com/belaban/JGroups"},{"original_method":"public void init() throws Exception {\n        super.init();\n        synchronized(initial_mbrs) {\n            initial_mbrs.clear();\n            initial_mbrs_received=false;\n        }\n        join_promise.reset();\n    }","id":55093,"modified_method":"public void init() throws Exception {\n        super.init();     \n        join_promise.reset();\n    }","commit_id":"f29d5b533e6b8d9d262b13c3b44b8322e387f958","url":"https://github.com/belaban/JGroups"},{"original_method":"public Vector findInitialMembers() {\n        return p.findInitialMembers();\n    }","id":55094,"modified_method":"public Vector findInitialMembers() {\n        return new Vector(p.findInitialMembers());\n    }","commit_id":"f29d5b533e6b8d9d262b13c3b44b8322e387f958","url":"https://github.com/belaban/JGroups"},{"original_method":"/**\n     * Finds the initial membership\n     * @return Vector<PingRsp>\n     */\n    public Vector findInitialMembers() {\n        return ping_waiter != null? ping_waiter.findInitialMembers() : null;\n    }","id":55095,"modified_method":"/**\n     * Finds the initial membership\n     * @return Vector<PingRsp>\n     */\n    public List<PingRsp> findInitialMembers() {\n        return member_finder_task.findInitialMembers();\n    }","commit_id":"f29d5b533e6b8d9d262b13c3b44b8322e387f958","url":"https://github.com/belaban/JGroups"},{"original_method":"public void setNumInitialMembers(int num_initial_members) {\n        this.num_initial_members=num_initial_members;\n        if(ping_waiter != null)\n            ping_waiter.setNumRsps(num_initial_members);\n    }","id":55096,"modified_method":"public void setNumInitialMembers(int num_initial_members) {\n        this.num_initial_members=num_initial_members;        \n        member_finder_task.setNumRsps(num_initial_members);\n    }","commit_id":"f29d5b533e6b8d9d262b13c3b44b8322e387f958","url":"https://github.com/belaban/JGroups"},{"original_method":"public Vector providedUpServices() {\n        Vector ret=new Vector(1);\n        ret.addElement(new Integer(Event.FIND_INITIAL_MBRS));\n        return ret;\n    }","id":55097,"modified_method":"public Vector<Integer> providedUpServices() {\n        Vector<Integer> ret=new Vector<Integer>(1);\n        ret.addElement(new Integer(Event.FIND_INITIAL_MBRS));\n        return ret;\n    }","commit_id":"f29d5b533e6b8d9d262b13c3b44b8322e387f958","url":"https://github.com/belaban/JGroups"},{"original_method":"/**\n     * An event is to be sent down the stack. The layer may want to examine its type and perform\n     * some action on it, depending on the event's type. If the event is a message MSG, then\n     * the layer may need to add a header to it (or do nothing at all) before sending it down\n     * the stack using <code>PassDown<\/code>. In case of a GET_ADDRESS event (which tries to\n     * retrieve the stack's address from one of the bottom layers), the layer may need to send\n     * a new response event back up the stack using <code>up_prot.up()<\/code>.\n     * The PING protocol is interested in several different down events,\n     * Event.FIND_INITIAL_MBRS - sent by the GMS layer and expecting a GET_MBRS_OK\n     * Event.TMP_VIEW and Event.VIEW_CHANGE - a view change event\n     * Event.BECOME_SERVER - called after client has joined and is fully working group member\n     * Event.CONNECT, Event.DISCONNECT.\n     */\n    public Object down(Event evt) {\n\n        switch(evt.getType()) {\n\n        case Event.FIND_INITIAL_MBRS:   // sent by GMS layer, pass up a GET_MBRS_OK event\n            // sends the GET_MBRS_REQ to all members, waits 'timeout' ms or until 'num_initial_members' have been retrieved\n            num_discovery_requests++;\n            ping_waiter.start();\n            return null;\n\n        case Event.TMP_VIEW:\n        case Event.VIEW_CHANGE:\n            Vector tmp;\n            if((tmp=((View)evt.getArg()).getMembers()) != null) {\n                synchronized(members) {\n                    members.clear();\n                    members.addAll(tmp);\n                }\n            }\n            return down_prot.down(evt);\n\n        case Event.BECOME_SERVER: // called after client has joined and is fully working group member\n            down_prot.down(evt);\n            is_server=true;\n            return null;\n\n        case Event.CONNECT:\n            group_addr=(String)evt.getArg();\n            Object ret=down_prot.down(evt);\n            handleConnect();\n            return ret;\n\n        case Event.DISCONNECT:\n            handleDisconnect();\n            return down_prot.down(evt);\n\n        default:\n            return down_prot.down(evt);          // Pass on to the layer below us\n        }\n    }","id":55098,"modified_method":"/**\n     * An event is to be sent down the stack. The layer may want to examine its type and perform\n     * some action on it, depending on the event's type. If the event is a message MSG, then\n     * the layer may need to add a header to it (or do nothing at all) before sending it down\n     * the stack using <code>PassDown<\/code>. In case of a GET_ADDRESS event (which tries to\n     * retrieve the stack's address from one of the bottom layers), the layer may need to send\n     * a new response event back up the stack using <code>up_prot.up()<\/code>.\n     * The PING protocol is interested in several different down events,\n     * Event.FIND_INITIAL_MBRS - sent by the GMS layer and expecting a GET_MBRS_OK\n     * Event.TMP_VIEW and Event.VIEW_CHANGE - a view change event\n     * Event.BECOME_SERVER - called after client has joined and is fully working group member\n     * Event.CONNECT, Event.DISCONNECT.\n     */\n    public Object down(Event evt) {\n\n        switch(evt.getType()) {\n\n        case Event.FIND_INITIAL_MBRS:   // sent by GMS layer, pass up a GET_MBRS_OK event\n            // sends the GET_MBRS_REQ to all members, waits 'timeout' ms or until 'num_initial_members' have been retrieved\n            num_discovery_requests++;\n            return member_finder_task.find();            \n\n        case Event.TMP_VIEW:\n        case Event.VIEW_CHANGE:\n            Vector<Address> tmp;\n            if((tmp=((View)evt.getArg()).getMembers()) != null) {\n                synchronized(members) {\n                    members.clear();\n                    members.addAll(tmp);\n                }\n            }\n            return down_prot.down(evt);\n\n        case Event.BECOME_SERVER: // called after client has joined and is fully working group member\n            down_prot.down(evt);\n            is_server=true;\n            return null;\n\n        case Event.CONNECT:\n            group_addr=(String)evt.getArg();\n            Object ret=down_prot.down(evt);\n            handleConnect();\n            return ret;\n\n        case Event.DISCONNECT:\n            handleDisconnect();\n            return down_prot.down(evt);\n\n        default:\n            return down_prot.down(evt);          // Pass on to the layer below us\n        }\n    }","commit_id":"f29d5b533e6b8d9d262b13c3b44b8322e387f958","url":"https://github.com/belaban/JGroups"},{"original_method":"public void start() throws Exception {\n        super.start();\n        PingSender ping_sender=new PingSender(timeout, num_ping_requests, this);\n        if(ping_waiter == null)\n            ping_waiter=new PingWaiter(timeout, num_initial_members, this, ping_sender);\n    }","id":55099,"modified_method":"public void start() throws Exception {\n        super.start();\n        member_finder_task.setTimeout(timeout);\n        member_finder_task.setNumRsps(num_initial_members);       \n    }","commit_id":"f29d5b533e6b8d9d262b13c3b44b8322e387f958","url":"https://github.com/belaban/JGroups"},{"original_method":"public void stop() {\n        is_server=false;\n        if(ping_waiter != null)\n            ping_waiter.stop();\n    }","id":55100,"modified_method":"public void stop() {\n        is_server=false;        \n        member_finder_task.stop();\n    }","commit_id":"f29d5b533e6b8d9d262b13c3b44b8322e387f958","url":"https://github.com/belaban/JGroups"},{"original_method":"public String findInitialMembersAsString() {\n        Vector results=findInitialMembers();\n        if(results == null || results.isEmpty()) return \"<empty>\";\n        PingRsp rsp;\n        StringBuilder sb=new StringBuilder();\n        for(Iterator it=results.iterator(); it.hasNext();) {\n            rsp=(PingRsp)it.next();\n            sb.append(rsp).append(\"\\n\");\n        }\n        return sb.toString();\n    }","id":55101,"modified_method":"public String findInitialMembersAsString() {\n    \tList<PingRsp> results=findInitialMembers();\n        if(results == null || results.isEmpty()) return \"<empty>\";\n        PingRsp rsp;\n        StringBuilder sb=new StringBuilder();\n        for(Iterator it=results.iterator(); it.hasNext();) {\n            rsp=(PingRsp)it.next();\n            sb.append(rsp).append(\"\\n\");\n        }\n        return sb.toString();\n    }","commit_id":"f29d5b533e6b8d9d262b13c3b44b8322e387f958","url":"https://github.com/belaban/JGroups"},{"original_method":"/**\n     * An event was received from the layer below. Usually the current layer will want to examine\n     * the event type and - depending on its type - perform some computation\n     * (e.g. removing headers from a MSG event type, or updating the internal membership list\n     * when receiving a VIEW_CHANGE event).\n     * Finally the event is either a) discarded, or b) an event is sent down\n     * the stack using <code>PassDown<\/code> or c) the event (or another event) is sent up\n     * the stack using <code>PassUp<\/code>.\n     * <p/>\n     * For the PING protocol, the Up operation does the following things.\n     * 1. If the event is a Event.MSG then PING will inspect the message header.\n     * If the header is null, PING simply passes up the event\n     * If the header is PingHeader.GET_MBRS_REQ then the PING protocol\n     * will PassDown a PingRequest message\n     * If the header is PingHeader.GET_MBRS_RSP we will add the message to the initial members\n     * vector and wake up any waiting threads.\n     * 2. If the event is Event.SET_LOCAL_ADDR we will simple set the local address of this protocol\n     * 3. For all other messages we simple pass it up to the protocol above\n     *\n     * @param evt - the event that has been sent from the layer below\n     */\n\n    public Object up(Event evt) {\n        Message msg, rsp_msg;\n        PingHeader rsp_hdr;\n        PingRsp rsp;\n        Address coord;\n\n        switch(evt.getType()) {\n\n        case Event.MSG:\n            msg=(Message)evt.getArg();\n            PingHeader hdr=(PingHeader)msg.getHeader(getName());\n            if(hdr == null) {\n                return up_prot.up(evt);\n            }\n\n            switch(hdr.type) {\n\n            case PingHeader.GET_MBRS_REQ:   // return Rsp(local_addr, coord)\n                if(local_addr != null && msg.getSrc() != null && local_addr.equals(msg.getSrc())) {\n                    return null;\n                }\n                synchronized(members) {\n                    coord=!members.isEmpty()? (Address)members.firstElement() : local_addr;\n                }\n\n                PingRsp ping_rsp=new PingRsp(local_addr, coord, is_server);\n                rsp_msg=new Message(msg.getSrc(), null, null);\n                rsp_msg.setFlag(Message.OOB);\n                rsp_hdr=new PingHeader(PingHeader.GET_MBRS_RSP, ping_rsp);\n                rsp_msg.putHeader(getName(), rsp_hdr);\n                if(log.isTraceEnabled())\n                    log.trace(\"received GET_MBRS_REQ from \" + msg.getSrc() + \", sending response \" + rsp_hdr);\n                down_prot.down(new Event(Event.MSG, rsp_msg));\n                return null;\n\n            case PingHeader.GET_MBRS_RSP:   // add response to vector and notify waiting thread\n                rsp=hdr.arg;\n\n                if(log.isTraceEnabled())\n                    log.trace(\"received GET_MBRS_RSP, rsp=\" + rsp);\n                ping_waiter.addResponse(rsp);\n                return null;\n\n            default:\n                if(log.isWarnEnabled()) log.warn(\"got PING header with unknown type (\" + hdr.type + ')');\n                return null;\n            }\n\n        case Event.SET_LOCAL_ADDRESS:\n            up_prot.up(evt);\n            local_addr=(Address)evt.getArg();\n            localAddressSet(local_addr);\n            break;\n\n        default:\n            up_prot.up(evt);            // Pass up to the layer above us\n            break;\n        }\n\n        return null;\n    }","id":55102,"modified_method":"/**\n     * An event was received from the layer below. Usually the current layer will want to examine\n     * the event type and - depending on its type - perform some computation\n     * (e.g. removing headers from a MSG event type, or updating the internal membership list\n     * when receiving a VIEW_CHANGE event).\n     * Finally the event is either a) discarded, or b) an event is sent down\n     * the stack using <code>PassDown<\/code> or c) the event (or another event) is sent up\n     * the stack using <code>PassUp<\/code>.\n     * <p/>\n     * For the PING protocol, the Up operation does the following things.\n     * 1. If the event is a Event.MSG then PING will inspect the message header.\n     * If the header is null, PING simply passes up the event\n     * If the header is PingHeader.GET_MBRS_REQ then the PING protocol\n     * will PassDown a PingRequest message\n     * If the header is PingHeader.GET_MBRS_RSP we will add the message to the initial members\n     * vector and wake up any waiting threads.\n     * 2. If the event is Event.SET_LOCAL_ADDR we will simple set the local address of this protocol\n     * 3. For all other messages we simple pass it up to the protocol above\n     *\n     * @param evt - the event that has been sent from the layer below\n     */\n\n    public Object up(Event evt) {\n        Message msg, rsp_msg;\n        PingHeader rsp_hdr;\n        PingRsp rsp;\n        Address coord;\n\n        switch(evt.getType()) {\n\n        case Event.MSG:\n            msg=(Message)evt.getArg();\n            PingHeader hdr=(PingHeader)msg.getHeader(getName());\n            if(hdr == null) {\n                return up_prot.up(evt);\n            }\n\n            switch(hdr.type) {\n\n            case PingHeader.GET_MBRS_REQ:   // return Rsp(local_addr, coord)\n                if(local_addr != null && msg.getSrc() != null && local_addr.equals(msg.getSrc())) {\n                    return null;\n                }\n                synchronized(members) {\n                    coord=!members.isEmpty()? (Address)members.firstElement() : local_addr;\n                }\n\n                PingRsp ping_rsp=new PingRsp(local_addr, coord, is_server);\n                rsp_msg=new Message(msg.getSrc(), null, null);\n                rsp_msg.setFlag(Message.OOB);\n                rsp_hdr=new PingHeader(PingHeader.GET_MBRS_RSP, ping_rsp);\n                rsp_msg.putHeader(getName(), rsp_hdr);\n                if(log.isTraceEnabled())\n                    log.trace(\"received GET_MBRS_REQ from \" + msg.getSrc() + \", sending response \" + rsp_hdr);\n                down_prot.down(new Event(Event.MSG, rsp_msg));\n                return null;\n\n            case PingHeader.GET_MBRS_RSP:   // add response to vector and notify waiting thread\n                rsp=hdr.arg;\n\n                if(log.isTraceEnabled())\n                    log.trace(\"received GET_MBRS_RSP, rsp=\" + rsp);\n                member_finder_task.addResponse(rsp);\n                return null;\n\n            default:\n                if(log.isWarnEnabled()) log.warn(\"got PING header with unknown type (\" + hdr.type + ')');\n                return null;\n            }\n\n        case Event.SET_LOCAL_ADDRESS:\n            up_prot.up(evt);\n            local_addr=(Address)evt.getArg();\n            localAddressSet(local_addr);\n            break;\n\n        default:\n            up_prot.up(evt);            // Pass up to the layer above us\n            break;\n        }\n\n        return null;\n    }","commit_id":"f29d5b533e6b8d9d262b13c3b44b8322e387f958","url":"https://github.com/belaban/JGroups"},{"original_method":"public void setTimeout(long timeout) {\n        this.timeout=timeout;\n        if(ping_waiter != null)\n            ping_waiter.setTimeout(timeout);\n    }","id":55103,"modified_method":"public void setTimeout(long timeout) {\n        this.timeout=timeout;        \n        member_finder_task.setTimeout(timeout);\n    }","commit_id":"f29d5b533e6b8d9d262b13c3b44b8322e387f958","url":"https://github.com/belaban/JGroups"},{"original_method":"public static String type2String(int t) {\n        switch(t) {\n            case MSG:\t                 return \"MSG\";\n            case CONNECT:\t             return \"CONNECT\";\n            case DISCONNECT:\t         return \"DISCONNECT\";\n            case VIEW_CHANGE:\t         return \"VIEW_CHANGE\";\n            case SET_LOCAL_ADDRESS:\t     return \"SET_LOCAL_ADDRESS\";\n            case SUSPECT:                return \"SUSPECT\";\n            case BLOCK:\t                 return \"BLOCK\";            \n            case FIND_INITIAL_MBRS:\t     return \"FIND_INITIAL_MBRS\";\n            case FIND_INITIAL_MBRS_OK:   return \"FIND_INITIAL_MBRS_OK\";\n            case TMP_VIEW:\t             return \"TMP_VIEW\";\n            case BECOME_SERVER:\t         return \"BECOME_SERVER\";\n            case GET_APPLSTATE:          return \"GET_APPLSTATE\";\n            case GET_STATE:              return \"GET_STATE\";\n            case GET_STATE_OK:           return \"GET_STATE_OK\";\n            case STATE_RECEIVED:         return \"STATE_RECEIVED\";\n            case FLUSH:                  return \"FLUSH\";\n            case FLUSH_OK:               return \"FLUSH_OK\";\n            case STABLE:                 return \"STABLE\";\n            case GET_DIGEST:             return \"GET_DIGEST\";\n            case SET_DIGEST:             return \"SET_DIGEST\";\n            case MERGE:                  return \"MERGE\"; // Added by gianlucac@tin.it to support partitions merging in GMS\n            case EXIT:                   return \"EXIT\";\n            case PERF:                   return \"PERF\";\n            case HEARD_FROM:             return \"HEARD_FROM\";\n            case UNSUSPECT:              return \"UNSUSPECT\";\n            case MERGE_DIGEST:           return \"MERGE_DIGEST\";\n            case CONFIG:                 return \"CONFIG\";\n            case GET_DIGEST_STABLE:      return \"GET_DIGEST_STABLE\";\n            case SUSPEND_STABLE:         return \"SUSPEND_STABLE\";\n            case RESUME_STABLE:          return \"RESUME_STABLE\";\n            case ENABLE_UNICASTS_TO:     return \"ENABLE_UNICASTS_TO\";\n            case SUSPEND:        \t\t return \"SUSPEND\";          \n            case RESUME:     \t\t\t return \"RESUME\";\n            case STATE_TRANSFER_INPUTSTREAM: return \"STATE_TRANSFER_INPUTSTREAM\";\n            case STATE_TRANSFER_OUTPUTSTREAM:return \"STATE_TRANSFER_OUTPUTSTREAM\";\n            case STATE_TRANSFER_INPUTSTREAM_CLOSED: return \"STATE_TRANSFER_INPUTSTREAM_CLOSED\";\n            case STATE_TRANSFER_OUTPUTSTREAM_CLOSED: return \"STATE_TRANSFER_OUTPUTSTREAM_CLOSED\";\n            case UNBLOCK:                return \"UNBLOCK\";\n            case CLOSE_BARRIER:          return \"CLOSE_BARRIER\";\n            case OPEN_BARRIER:           return \"OPEN_BARRIER\";\n            case REBROADCAST:            return \"REBROADCAST\";\n            case SHUTDOWN:               return \"SHUTDOWN\";\n            case USER_DEFINED:           return \"USER_DEFINED\";\n            default:                     return \"UNDEFINED(\" + t + \")\";\n        }\n    }","id":55104,"modified_method":"public static String type2String(int t) {\n        switch(t) {\n            case MSG:\t                 return \"MSG\";\n            case CONNECT:\t             return \"CONNECT\";\n            case DISCONNECT:\t         return \"DISCONNECT\";\n            case VIEW_CHANGE:\t         return \"VIEW_CHANGE\";\n            case SET_LOCAL_ADDRESS:\t     return \"SET_LOCAL_ADDRESS\";\n            case SUSPECT:                return \"SUSPECT\";\n            case BLOCK:\t                 return \"BLOCK\";            \n            case FIND_INITIAL_MBRS:\t     return \"FIND_INITIAL_MBRS\";           \n            case TMP_VIEW:\t             return \"TMP_VIEW\";\n            case BECOME_SERVER:\t         return \"BECOME_SERVER\";\n            case GET_APPLSTATE:          return \"GET_APPLSTATE\";\n            case GET_STATE:              return \"GET_STATE\";\n            case GET_STATE_OK:           return \"GET_STATE_OK\";\n            case STATE_RECEIVED:         return \"STATE_RECEIVED\";\n            case FLUSH:                  return \"FLUSH\";\n            case FLUSH_OK:               return \"FLUSH_OK\";\n            case STABLE:                 return \"STABLE\";\n            case GET_DIGEST:             return \"GET_DIGEST\";\n            case SET_DIGEST:             return \"SET_DIGEST\";\n            case MERGE:                  return \"MERGE\"; // Added by gianlucac@tin.it to support partitions merging in GMS\n            case EXIT:                   return \"EXIT\";\n            case PERF:                   return \"PERF\";\n            case HEARD_FROM:             return \"HEARD_FROM\";\n            case UNSUSPECT:              return \"UNSUSPECT\";\n            case MERGE_DIGEST:           return \"MERGE_DIGEST\";\n            case CONFIG:                 return \"CONFIG\";\n            case GET_DIGEST_STABLE:      return \"GET_DIGEST_STABLE\";\n            case SUSPEND_STABLE:         return \"SUSPEND_STABLE\";\n            case RESUME_STABLE:          return \"RESUME_STABLE\";\n            case ENABLE_UNICASTS_TO:     return \"ENABLE_UNICASTS_TO\";\n            case SUSPEND:        \t\t return \"SUSPEND\";          \n            case RESUME:     \t\t\t return \"RESUME\";\n            case STATE_TRANSFER_INPUTSTREAM: return \"STATE_TRANSFER_INPUTSTREAM\";\n            case STATE_TRANSFER_OUTPUTSTREAM:return \"STATE_TRANSFER_OUTPUTSTREAM\";\n            case STATE_TRANSFER_INPUTSTREAM_CLOSED: return \"STATE_TRANSFER_INPUTSTREAM_CLOSED\";\n            case STATE_TRANSFER_OUTPUTSTREAM_CLOSED: return \"STATE_TRANSFER_OUTPUTSTREAM_CLOSED\";\n            case UNBLOCK:                return \"UNBLOCK\";\n            case CLOSE_BARRIER:          return \"CLOSE_BARRIER\";\n            case OPEN_BARRIER:           return \"OPEN_BARRIER\";\n            case REBROADCAST:            return \"REBROADCAST\";\n            case SHUTDOWN:               return \"SHUTDOWN\";\n            case USER_DEFINED:           return \"USER_DEFINED\";\n            default:                     return \"UNDEFINED(\" + t + \")\";\n        }\n    }","commit_id":"f29d5b533e6b8d9d262b13c3b44b8322e387f958","url":"https://github.com/belaban/JGroups"},{"original_method":"public void run() {\n            long interval;\n            Vector coords;\n            Vector initial_mbrs;\n\n            // if(log.isDebugEnabled()) log.debug(\"merge task started as I'm the coordinator\");\n            while(thread != null && Thread.currentThread().equals(thread)) {\n                interval=computeInterval();\n                Util.sleep(interval);\n                if(thread == null) break;\n                initial_mbrs=findInitialMembers();\n                if(thread == null) break;\n                if(log.isDebugEnabled()) log.debug(\"initial_mbrs=\" + initial_mbrs);\n                coords=detectMultipleCoordinators(initial_mbrs);\n                if(coords != null && coords.size() > 1) {\n                    if(log.isDebugEnabled())\n                        log.debug(\"found multiple coordinators: \" + coords + \"; sending up MERGE event\");\n                    final Event evt=new Event(Event.MERGE, coords);\n                    if(use_separate_thread) {\n                        Thread merge_notifier=new Thread() {\n                            public void run() {\n                                up_prot.up(evt);\n                            }\n                        };\n                        merge_notifier.setDaemon(true);\n                        merge_notifier.setName(\"merge notifier thread\");\n                        merge_notifier.start();\n                    }\n                    else {\n                        up_prot.up(evt);\n                    }\n                }\n            }\n            if(log.isTraceEnabled())\n                log.trace(\"MERGE2.FindSubgroups thread terminated (local_addr=\" + local_addr + \")\");\n        }","id":55105,"modified_method":"public void run() {\n            long interval;\n            Vector<Address> coords;\n            List<PingRsp> initial_mbrs;\n\n            // if(log.isDebugEnabled()) log.debug(\"merge task started as I'm the coordinator\");\n            while(thread != null && Thread.currentThread().equals(thread)) {\n                interval=computeInterval();\n                Util.sleep(interval);\n                if(thread == null) break;\n                initial_mbrs=findInitialMembers();\n                if(thread == null) break;\n                if(log.isDebugEnabled()) log.debug(\"initial_mbrs=\" + initial_mbrs);\n                coords=detectMultipleCoordinators(initial_mbrs);\n                if(coords != null && coords.size() > 1) {\n                    if(log.isDebugEnabled())\n                        log.debug(\"found multiple coordinators: \" + coords + \"; sending up MERGE event\");\n                    final Event evt=new Event(Event.MERGE, coords);\n                    if(use_separate_thread) {\n                        Thread merge_notifier=new Thread() {\n                            public void run() {\n                                up_prot.up(evt);\n                            }\n                        };\n                        merge_notifier.setDaemon(true);\n                        merge_notifier.setName(\"merge notifier thread\");\n                        merge_notifier.start();\n                    }\n                    else {\n                        up_prot.up(evt);\n                    }\n                }\n            }\n            if(log.isTraceEnabled())\n                log.trace(\"MERGE2.FindSubgroups thread terminated (local_addr=\" + local_addr + \")\");\n        }","commit_id":"f29d5b533e6b8d9d262b13c3b44b8322e387f958","url":"https://github.com/belaban/JGroups"},{"original_method":"public Vector requiredDownServices() {\n        Vector retval=new Vector(1);\n        retval.addElement(new Integer(Event.FIND_INITIAL_MBRS));\n        return retval;\n    }","id":55106,"modified_method":"public Vector<Integer> requiredDownServices() {\n        Vector<Integer> retval=new Vector<Integer>(1);\n        retval.addElement(new Integer(Event.FIND_INITIAL_MBRS));\n        return retval;\n    }","commit_id":"f29d5b533e6b8d9d262b13c3b44b8322e387f958","url":"https://github.com/belaban/JGroups"},{"original_method":"public Object up(Event evt) {\n        switch(evt.getType()) {\n\n            case Event.SET_LOCAL_ADDRESS:\n                local_addr=(Address)evt.getArg();\n                return up_prot.up(evt);\n\n            case Event.FIND_INITIAL_MBRS_OK:\n                find_promise.setResult(evt.getArg());\n                return up_prot.up(evt); // could be needed by GMS\n\n            default:\n                return up_prot.up(evt);            // Pass up to the layer above us\n        }\n    }","id":55107,"modified_method":"public Object up(Event evt) {\n        switch(evt.getType()) {\n\n            case Event.SET_LOCAL_ADDRESS:\n                local_addr=(Address)evt.getArg();\n                return up_prot.up(evt);\n\n            default:\n                return up_prot.up(evt);            // Pass up to the layer above us\n        }\n    }","commit_id":"f29d5b533e6b8d9d262b13c3b44b8322e387f958","url":"https://github.com/belaban/JGroups"},{"original_method":"public void stop() {\n            if(thread != null) {\n                Thread tmp=thread;\n                thread=null;\n                tmp.interrupt(); // wakes up sleeping thread\n                find_promise.reset();\n            }\n            thread=null;\n        }","id":55108,"modified_method":"public void stop() {\n            if(thread != null) {\n                Thread tmp=thread;\n                thread=null;\n                tmp.interrupt(); // wakes up sleeping thread                \n            }\n            thread=null;\n        }","commit_id":"f29d5b533e6b8d9d262b13c3b44b8322e387f958","url":"https://github.com/belaban/JGroups"},{"original_method":"/**\n         * Returns a list of PingRsp pairs.\n         */\n        Vector findInitialMembers() {\n            PingRsp tmp=new PingRsp(local_addr, local_addr, true);\n            find_promise.reset();\n            down_prot.down(Event.FIND_INITIAL_MBRS_EVT);\n            Vector retval=(Vector)find_promise.getResult(0); // wait indefinitely until response is received\n            if(retval != null && is_coord && local_addr != null && !retval.contains(tmp))\n                retval.add(tmp);\n            return retval;\n        }","id":55109,"modified_method":"/**\n         * Returns a list of PingRsp pairs.\n         */\n        List<PingRsp> findInitialMembers() {\n            PingRsp tmp=new PingRsp(local_addr, local_addr, true);            \n            List<PingRsp> retval=(List<PingRsp>) down_prot.down(Event.FIND_INITIAL_MBRS_EVT);\n            if(retval != null && is_coord && local_addr != null && !retval.contains(tmp))\n                retval.add(tmp);\n            return retval;\n        }","commit_id":"f29d5b533e6b8d9d262b13c3b44b8322e387f958","url":"https://github.com/belaban/JGroups"},{"original_method":"/**\n         * Finds out if there is more than 1 coordinator in the initial_mbrs vector (contains PingRsp elements).\n         * @param initial_mbrs A list of PingRsp pairs\n         * @return Vector A list of the coordinators (Addresses) found. Will contain just 1 element for a correct\n         *         membership, and more than 1 for multiple coordinators\n         */\n        Vector detectMultipleCoordinators(Vector initial_mbrs) {\n            Vector ret=new Vector(11);\n            PingRsp rsp;\n            Address coord;\n\n            if(initial_mbrs == null) return null;\n            for(int i=0; i < initial_mbrs.size(); i++) {\n                rsp=(PingRsp)initial_mbrs.elementAt(i);\n                if(!rsp.is_server)\n                    continue;\n                coord=rsp.getCoordAddress();\n                if(!ret.contains(coord))\n                    ret.addElement(coord);\n            }\n\n            return ret;\n        }","id":55110,"modified_method":"/**\n         * Finds out if there is more than 1 coordinator in the initial_mbrs vector (contains PingRsp elements).\n         * @param initial_mbrs A list of PingRsp pairs\n         * @return Vector A list of the coordinators (Addresses) found. Will contain just 1 element for a correct\n         *         membership, and more than 1 for multiple coordinators\n         */\n        Vector<Address> detectMultipleCoordinators(List<PingRsp> initial_mbrs) {\n        \tVector<Address> ret=new Vector<Address>(11);\n            PingRsp rsp;\n            Address coord;\n\n            if(initial_mbrs == null || initial_mbrs.isEmpty()) return null;\n            \n            for(int i=0; i < initial_mbrs.size(); i++) {\n                rsp=initial_mbrs.get(i);\n                if(!rsp.is_server)\n                    continue;\n                coord=rsp.getCoordAddress();\n                if(!ret.contains(coord))\n                    ret.add(coord);\n            }\n\n            return ret;\n        }","commit_id":"f29d5b533e6b8d9d262b13c3b44b8322e387f958","url":"https://github.com/belaban/JGroups"},{"original_method":"public void sendGetMembersRequest() {\n        Message msg;\n        PingHeader hdr;\n        java.util.List gossip_rsps;\n\n        if(client != null) {\n            gossip_rsps=client.getMembers(group_addr);\n            if(gossip_rsps != null && !gossip_rsps.isEmpty()) {\n                // Set a temporary membership in the UDP layer, so that the following multicast\n                // will be sent to all of them\n                Event view_event=new Event(Event.TMP_VIEW, makeView(new Vector(gossip_rsps)));\n                down_prot.down(view_event); // needed e.g. by failure detector or UDP\n            }\n            else {\n                up_prot.up(new Event(Event.FIND_INITIAL_MBRS_OK, null));\n                return;\n            }\n\n            if(!gossip_rsps.isEmpty()) {\n                for(Iterator it=gossip_rsps.iterator(); it.hasNext();) {\n                    Address dest=(Address)it.next();\n                    msg=new Message(dest, null, null);  // unicast msg\n                    msg.setFlag(Message.OOB);\n                    msg.putHeader(getName(), new PingHeader(PingHeader.GET_MBRS_REQ, null));\n                    down_prot.down(new Event(Event.MSG, msg));\n                }\n            }\n\n            Util.sleep(500);\n        }\n        else {\n            if(initial_hosts != null && initial_hosts.size() > 0) {\n                IpAddress h;\n                List hlist;\n                msg=new Message(null);\n                msg.setFlag(Message.OOB);\n                msg.putHeader(getName(), new PingHeader(PingHeader.GET_MBRS_REQ, null));\n                for(Enumeration en=initial_hosts.elements(); en.hasMoreElements();) {\n                    hlist=(List)en.nextElement();\n                    boolean isMember=false;\n                    for(Enumeration hen=hlist.elements(); hen.hasMoreElements() && !isMember;) {\n                        h=(IpAddress)hen.nextElement();\n                        msg.setDest(h);\n                        if(log.isTraceEnabled())\n                            log.trace(\"[FIND_INITIAL_MBRS] sending PING request to \" + msg.getDest());\n                        down_prot.down(new Event(Event.MSG, msg.copy()));\n                    }\n                }\n            }\n            else {\n                // 1. Mcast GET_MBRS_REQ message\n                hdr=new PingHeader(PingHeader.GET_MBRS_REQ, null);\n                msg=new Message(null);  // mcast msg\n                msg.setFlag(Message.OOB);\n                msg.putHeader(getName(), hdr); // needs to be getName(), so we might get \"MPING\" !\n                sendMcastDiscoveryRequest(msg);\n            }\n        }\n    }","id":55111,"modified_method":"public void sendGetMembersRequest() {\n        Message msg;\n        PingHeader hdr;\n        java.util.List gossip_rsps;\n\n        if(client != null) {\n            gossip_rsps=client.getMembers(group_addr);\n            if(gossip_rsps != null && !gossip_rsps.isEmpty()) {\n                // Set a temporary membership in the UDP layer, so that the following multicast\n                // will be sent to all of them\n                Event view_event=new Event(Event.TMP_VIEW, makeView(new Vector<Address>(gossip_rsps)));\n                down_prot.down(view_event); // needed e.g. by failure detector or UDP\n            }\n            else {\n                //do nothing\n                return;\n            }\n\n            if(!gossip_rsps.isEmpty()) {\n                for(Iterator it=gossip_rsps.iterator(); it.hasNext();) {\n                    Address dest=(Address)it.next();\n                    msg=new Message(dest, null, null);  // unicast msg\n                    msg.setFlag(Message.OOB);\n                    msg.putHeader(getName(), new PingHeader(PingHeader.GET_MBRS_REQ, null));\n                    down_prot.down(new Event(Event.MSG, msg));\n                }\n            }\n\n            Util.sleep(500);\n        }\n        else {\n            if(initial_hosts != null && initial_hosts.size() > 0) {\n                IpAddress h;\n                List hlist;\n                msg=new Message(null);\n                msg.setFlag(Message.OOB);\n                msg.putHeader(getName(), new PingHeader(PingHeader.GET_MBRS_REQ, null));\n                for(Enumeration en=initial_hosts.elements(); en.hasMoreElements();) {\n                    hlist=(List)en.nextElement();\n                    boolean isMember=false;\n                    for(Enumeration hen=hlist.elements(); hen.hasMoreElements() && !isMember;) {\n                        h=(IpAddress)hen.nextElement();\n                        msg.setDest(h);\n                        if(log.isTraceEnabled())\n                            log.trace(\"[FIND_INITIAL_MBRS] sending PING request to \" + msg.getDest());\n                        down_prot.down(new Event(Event.MSG, msg.copy()));\n                    }\n                }\n            }\n            else {\n                // 1. Mcast GET_MBRS_REQ message\n                hdr=new PingHeader(PingHeader.GET_MBRS_REQ, null);\n                msg=new Message(null);  // mcast msg\n                msg.setFlag(Message.OOB);\n                msg.putHeader(getName(), hdr); // needs to be getName(), so we might get \"MPING\" !\n                sendMcastDiscoveryRequest(msg);\n            }\n        }\n    }","commit_id":"f29d5b533e6b8d9d262b13c3b44b8322e387f958","url":"https://github.com/belaban/JGroups"},{"original_method":"public void go(String groupname) {\n\n        try {\n            channel.connect(groupname);\n            channel.down(Event.FIND_INITIAL_MBRS_EVT);\n        }\n        catch(Exception e) {\n            System.err.println(\"Ping.go(): \" + e);\n            System.exit(1);\n        }\n    }","id":55112,"modified_method":"public void go(String groupname) {\n\n        try {\n            channel.connect(groupname);\n            List<PingRsp> responses = (List<PingRsp>) channel.downcall(Event.FIND_INITIAL_MBRS_EVT);\n            for(int i=0; i < responses.size(); i++) {\n            \tPingRsp rsp=(PingRsp)responses.get(i);\n                System.out.println(\"Rsp #\" + (i + 1) + \": \" + rsp);\n            }\n\n            if(!responses.isEmpty())\n                verifyCoordinator(responses);\n\n            System.exit(1);\n        }\n        catch(Exception e) {\n            System.err.println(\"Ping.go(): \" + e);\n            System.exit(1);\n        }\n    }","commit_id":"f29d5b533e6b8d9d262b13c3b44b8322e387f958","url":"https://github.com/belaban/JGroups"},{"original_method":"public Object up(Event evt) {\n        Vector v;\n        PingRsp rsp;\n\n        if(evt.getType() == Event.FIND_INITIAL_MBRS_OK) {\n            v=(Vector)evt.getArg();\n\n            System.out.println(\"Found \" + v.size() + \" members\");\n            for(int i=0; i < v.size(); i++) {\n                rsp=(PingRsp)v.elementAt(i);\n                System.out.println(\"Rsp #\" + (i + 1) + \": \" + rsp);\n            }\n\n            if(!v.isEmpty())\n                verifyCoordinator(v);\n\n            System.exit(1);\n        }\n        else {\n            if(print_all_events)\n                System.out.println(\">> \" + evt);\n        }\n        return null;\n    }","id":55113,"modified_method":"public Object up(Event evt) {\t\n\t\treturn null;\n\t}","commit_id":"f29d5b533e6b8d9d262b13c3b44b8322e387f958","url":"https://github.com/belaban/JGroups"},{"original_method":"static void verifyCoordinator(Vector rsps) {\n        Hashtable votes=new Hashtable();  // coord address, list of members who voted for this guy\n        PingRsp rsp;\n        Vector v;\n        Address coord, mbr;\n\n        for(int i=0; i < rsps.size(); i++) {\n            rsp=(PingRsp)rsps.elementAt(i);\n            coord=rsp.getCoordAddress();\n            mbr=rsp.getAddress();\n            v=(Vector)votes.get(coord);\n            if(v == null) {\n                v=new Vector();\n                votes.put(coord, v);\n            }\n            if(!v.contains(mbr))\n                v.addElement(mbr);\n        }\n\n        System.out.println(\"\");\n        if(votes.size() > 1)\n            System.err.println(\"*** Found more than 1 coordinator !\");\n\n        printVotes(votes);\n    }","id":55114,"modified_method":"static void verifyCoordinator(List<PingRsp> rsps) {\n        Hashtable votes=new Hashtable();  // coord address, list of members who voted for this guy\n        PingRsp rsp;\n        Vector v;\n        Address coord, mbr;\n\n        for(int i=0; i < rsps.size(); i++) {\n            rsp=(PingRsp)rsps.get(i);\n            coord=rsp.getCoordAddress();\n            mbr=rsp.getAddress();\n            v=(Vector)votes.get(coord);\n            if(v == null) {\n                v=new Vector();\n                votes.put(coord, v);\n            }\n            if(!v.contains(mbr))\n                v.addElement(mbr);\n        }\n\n        System.out.println(\"\");\n        if(votes.size() > 1)\n            System.err.println(\"*** Found more than 1 coordinator !\");\n\n        printVotes(votes);\n    }","commit_id":"f29d5b533e6b8d9d262b13c3b44b8322e387f958","url":"https://github.com/belaban/JGroups"},{"original_method":"public void sendGetMembersRequest() {\n        Message msg, copy;\n        PingHeader hdr;\n        List tmp_mbrs;\n        Address mbr_addr;\n\n        if(group_addr == null) {\n            if(log.isErrorEnabled()) log.error(\"[FIND_INITIAL_MBRS]: group_addr is null, cannot get mbrship\");\n            up_prot.up(new Event(Event.FIND_INITIAL_MBRS_OK, EMPTY_VECTOR));\n            return;\n        }\n        if(log.isTraceEnabled()) log.trace(\"fetching members from GossipRouter(s)\");\n        tmp_mbrs=gossip_client.getMembers(group_addr);\n        if(tmp_mbrs == null || tmp_mbrs.isEmpty()) {\n            if(log.isErrorEnabled()) log.error(\"[FIND_INITIAL_MBRS]: gossip client found no members\");\n            up_prot.up(new Event(Event.FIND_INITIAL_MBRS_OK, EMPTY_VECTOR));\n            return;\n        }\n        if(log.isTraceEnabled()) log.trace(\"consolidated mbrs from GossipRouter(s) are \" + tmp_mbrs);\n\n        // 1. 'Mcast' GET_MBRS_REQ message\n        hdr=new PingHeader(PingHeader.GET_MBRS_REQ, null);\n        msg=new Message(null);\n        msg.setFlag(Message.OOB);\n        msg.putHeader(name, hdr);\n\n        for(Iterator it=tmp_mbrs.iterator(); it.hasNext();) {\n            mbr_addr=(Address)it.next();\n            copy=msg.copy();\n            copy.setDest(mbr_addr);\n            if(log.isTraceEnabled()) log.trace(\"[FIND_INITIAL_MBRS] sending PING request to \" + copy.getDest());\n            down_prot.down(new Event(Event.MSG, copy));\n        }\n    }","id":55115,"modified_method":"public void sendGetMembersRequest() {\n        Message msg, copy;\n        PingHeader hdr;\n        List tmp_mbrs;\n        Address mbr_addr;\n\n        if(group_addr == null) {\n            if(log.isErrorEnabled()) log.error(\"[FIND_INITIAL_MBRS]: group_addr is null, cannot get mbrship\");            \n            return;\n        }\n        if(log.isTraceEnabled()) log.trace(\"fetching members from GossipRouter(s)\");\n        tmp_mbrs=gossip_client.getMembers(group_addr);\n        if(tmp_mbrs == null || tmp_mbrs.isEmpty()) {\n            if(log.isErrorEnabled()) log.error(\"[FIND_INITIAL_MBRS]: gossip client found no members\");           \n            return;\n        }\n        if(log.isTraceEnabled()) log.trace(\"consolidated mbrs from GossipRouter(s) are \" + tmp_mbrs);\n\n        // 1. 'Mcast' GET_MBRS_REQ message\n        hdr=new PingHeader(PingHeader.GET_MBRS_REQ, null);\n        msg=new Message(null);\n        msg.setFlag(Message.OOB);\n        msg.putHeader(name, hdr);\n\n        for(Iterator it=tmp_mbrs.iterator(); it.hasNext();) {\n            mbr_addr=(Address)it.next();\n            copy=msg.copy();\n            copy.setDest(mbr_addr);\n            if(log.isTraceEnabled()) log.trace(\"[FIND_INITIAL_MBRS] sending PING request to \" + copy.getDest());\n            down_prot.down(new Event(Event.MSG, copy));\n        }\n    }","commit_id":"f29d5b533e6b8d9d262b13c3b44b8322e387f958","url":"https://github.com/belaban/JGroups"},{"original_method":"public ContinuationProvider createContinuationProvider(Message inMessage, \n                                                           HttpServletRequest req,\n                                                           HttpServletResponse resp) {\n        if (req instanceof Request && ((Request)req).isAsyncSupported()) {\n            return new JettyContinuationProvider(req, resp, inMessage);\n        }\n        return null;\n    }","id":55116,"modified_method":"public ContinuationProvider createContinuationProvider(Message inMessage, \n                                                           HttpServletRequest req,\n                                                           HttpServletResponse resp) {\n        if (!disableJettyContinuations) {\n            ServletRequest r2 = req;\n            while (r2 instanceof ServletRequestWrapper) {\n                r2 = ((ServletRequestWrapper)r2).getRequest();\n            }\n            if (!r2.getClass().getName().contains(\"jetty\")) {\n                return null;\n            }\n    \n            try {\n                Method m = r2.getClass().getMethod(\"isAsyncSupported\");\n                Object o = ReflectionUtil.setAccessible(m).invoke(r2);\n                if (((Boolean)o).booleanValue()) {\n                    return new JettyContinuationProvider(req, resp, inMessage);\n                }\n            } catch (Throwable t) {\n                //ignore - either not a proper Jetty request object or classloader issue\n                //or similar.\n            }\n        }\n        return null;\n    }","commit_id":"781694ecef69035ae36dd95f60b2fbf11c8f5306","url":"https://github.com/apache/cxf"},{"original_method":"public void onComplete(org.eclipse.jetty.continuation.Continuation continuation) {\n        getMessage().remove(AbstractHTTPDestination.CXF_CONTINUATION_MESSAGE);\n        isPending = false;\n    }","id":55117,"modified_method":"public void onComplete(org.eclipse.jetty.continuation.Continuation cont) {\n        getMessage().remove(AbstractHTTPDestination.CXF_CONTINUATION_MESSAGE);\n        isPending = false;\n    }","commit_id":"781694ecef69035ae36dd95f60b2fbf11c8f5306","url":"https://github.com/apache/cxf"},{"original_method":"public JettyContinuationWrapper(HttpServletRequest request, \n                                    HttpServletResponse resp, \n                                    Message m) {\n        req = (Request)request;\n        message = m;\n        isNew = req.getAttribute(AbstractHTTPDestination.CXF_CONTINUATION_MESSAGE) == null;\n        if (isNew) {\n            req.setAttribute(AbstractHTTPDestination.CXF_CONTINUATION_MESSAGE,\n                             message.getExchange().getInMessage());\n            context = req.startAsync(req, resp);\n            context.addContinuationListener(this);\n            req.setAttribute(AbstractHTTPDestination.CXF_ASYNC_CONTEXT, context);\n        } else {\n            context = (AsyncContext)req.getAttribute(AbstractHTTPDestination.CXF_ASYNC_CONTEXT);\n        }\n    }","id":55118,"modified_method":"public JettyContinuationWrapper(HttpServletRequest request, \n                                    HttpServletResponse resp, \n                                    Message m) {\n        continuation = ContinuationSupport.getContinuation(request);\n        \n        message = m;\n        isNew = request.getAttribute(AbstractHTTPDestination.CXF_CONTINUATION_MESSAGE) == null;\n        if (isNew) {\n            request.setAttribute(AbstractHTTPDestination.CXF_CONTINUATION_MESSAGE,\n                                 message.getExchange().getInMessage());\n            continuation.addContinuationListener(this);\n        }\n    }","commit_id":"781694ecef69035ae36dd95f60b2fbf11c8f5306","url":"https://github.com/apache/cxf"},{"original_method":"public void reset() {\n        context.complete();\n        obj = null;\n    }","id":55119,"modified_method":"public void reset() {\n        continuation.complete();\n        obj = null;\n    }","commit_id":"781694ecef69035ae36dd95f60b2fbf11c8f5306","url":"https://github.com/apache/cxf"},{"original_method":"public void onTimeout(org.eclipse.jetty.continuation.Continuation continuation) {\n        isPending = false;\n        context.dispatch();\n    }","id":55120,"modified_method":"public void onTimeout(org.eclipse.jetty.continuation.Continuation cont) {\n        isPending = false;\n    }","commit_id":"781694ecef69035ae36dd95f60b2fbf11c8f5306","url":"https://github.com/apache/cxf"},{"original_method":"public boolean suspend(long timeout) {\n        if (isPending) {\n            return false;\n        }\n        context.setTimeout(timeout);\n        isNew = false;\n        // Need to get the right message which is handled in the interceptor chain\n        message.getExchange().getInMessage().getInterceptorChain().suspend();\n        isPending = true;\n        return true;\n    }","id":55121,"modified_method":"public boolean suspend(long timeout) {\n        if (isPending) {\n            return false;\n        }\n        isNew = false;\n        // Need to get the right message which is handled in the interceptor chain\n        message.getExchange().getInMessage().getInterceptorChain().suspend();\n        isPending = true;\n        continuation.setTimeout(timeout);\n        continuation.suspend();\n        return true;\n    }","commit_id":"781694ecef69035ae36dd95f60b2fbf11c8f5306","url":"https://github.com/apache/cxf"},{"original_method":"public void resume() {\n        isResumed = true;\n        context.dispatch();\n    }","id":55122,"modified_method":"public void resume() {\n        isResumed = true;\n        continuation.resume();\n    }","commit_id":"781694ecef69035ae36dd95f60b2fbf11c8f5306","url":"https://github.com/apache/cxf"},{"original_method":"@Override\n\tpublic ClusterHealthResponse getClusterHealthResponse() {\n\t\tAdminClient adminClient = _client.admin();\n\n\t\tClusterAdminClient clusterAdminClient = adminClient.cluster();\n\n\t\tClusterHealthRequestBuilder clusterHealthRequestBuilder =\n\t\t\tclusterAdminClient.prepareHealth();\n\n\t\tif (PortalRunMode.isTestMode()) {\n\t\t\tclusterHealthRequestBuilder.setTimeout(\n\t\t\t\tTimeValue.timeValueMillis(100));\n\t\t}\n\t\telse {\n\t\t\tclusterHealthRequestBuilder.setTimeout(\n\t\t\t\tTimeValue.timeValueSeconds(30));\n\t\t}\n\n\t\tclusterHealthRequestBuilder.setWaitForGreenStatus();\n\t\tclusterHealthRequestBuilder.setWaitForNodes(\">1\");\n\n\t\tFuture<ClusterHealthResponse> future =\n\t\t\tclusterHealthRequestBuilder.execute();\n\n\t\ttry {\n\t\t\treturn future.get();\n\t\t}\n\t\tcatch (Exception e) {\n\t\t\tthrow new IllegalStateException(e);\n\t\t}\n\t}","id":55123,"modified_method":"@Override\n\tpublic ClusterHealthResponse getClusterHealthResponse(\n\t\tlong timeout, int nodeCount) {\n\n\t\tAdminClient adminClient = _client.admin();\n\n\t\tClusterAdminClient clusterAdminClient = adminClient.cluster();\n\n\t\tClusterHealthRequestBuilder clusterHealthRequestBuilder =\n\t\t\tclusterAdminClient.prepareHealth();\n\n\t\tclusterHealthRequestBuilder.setTimeout(\n\t\t\tTimeValue.timeValueMillis(timeout));\n\n\t\tclusterHealthRequestBuilder.setWaitForGreenStatus();\n\t\tclusterHealthRequestBuilder.setWaitForNodes(\">\" + (nodeCount - 1));\n\n\t\tFuture<ClusterHealthResponse> future =\n\t\t\tclusterHealthRequestBuilder.execute();\n\n\t\ttry {\n\t\t\treturn future.get();\n\t\t}\n\t\tcatch (Exception e) {\n\t\t\tthrow new IllegalStateException(e);\n\t\t}\n\t}","commit_id":"8f6843efdb4fbbb7f9403ad4ede5e20e5991cf8a","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public ClusterHealthResponse getClusterHealthResponse() {\n\t\treturn _elasticsearchConnection.get().getClusterHealthResponse();\n\t}","id":55124,"modified_method":"public ClusterHealthResponse getClusterHealthResponse(\n\t\tlong timeout, int nodeCount) {\n\n\t\treturn _elasticsearchConnection.get().getClusterHealthResponse(\n\t\t\ttimeout, nodeCount);\n\t}","commit_id":"8f6843efdb4fbbb7f9403ad4ede5e20e5991cf8a","url":"https://github.com/liferay/liferay-portal"},{"original_method":"@Override\n\tpublic void initialize(long companyId) {\n\t\tsuper.initialize(companyId);\n\n\t\tClusterHealthResponse clusterHealthResponse =\n\t\t\t_elasticsearchConnectionManager.getClusterHealthResponse();\n\n\t\tif (clusterHealthResponse.getStatus() == ClusterHealthStatus.RED) {\n\t\t\tthrow new IllegalStateException(\n\t\t\t\t\"Unable to initialize Elasticsearch cluster: \" +\n\t\t\t\t\tclusterHealthResponse);\n\t\t}\n\n\t\ttry {\n\t\t\t_indexFactory.createIndices(\n\t\t\t\t_elasticsearchConnectionManager.getAdminClient(), companyId);\n\t\t}\n\t\tcatch (Exception e) {\n\t\t\tthrow new IllegalStateException(e);\n\t\t}\n\t}","id":55125,"modified_method":"@Override\n\tpublic void initialize(long companyId) {\n\t\tsuper.initialize(companyId);\n\n\t\tClusterHealthResponse clusterHealthResponse = null;\n\n\t\tif (PortalRunMode.isTestMode()) {\n\t\t\tclusterHealthResponse =\n\t\t\t\t_elasticsearchConnectionManager.getClusterHealthResponse(\n\t\t\t\t\tTime.HOUR, 1);\n\t\t}\n\t\telse {\n\t\t\tclusterHealthResponse =\n\t\t\t\t_elasticsearchConnectionManager.getClusterHealthResponse(\n\t\t\t\t\t30 * Time.SECOND, 2);\n\t\t}\n\n\t\tif (clusterHealthResponse.getStatus() == ClusterHealthStatus.RED) {\n\t\t\tthrow new IllegalStateException(\n\t\t\t\t\"Unable to initialize Elasticsearch cluster: \" +\n\t\t\t\t\tclusterHealthResponse);\n\t\t}\n\n\t\ttry {\n\t\t\t_indexFactory.createIndices(\n\t\t\t\t_elasticsearchConnectionManager.getAdminClient(), companyId);\n\t\t}\n\t\tcatch (Exception e) {\n\t\t\tthrow new IllegalStateException(e);\n\t\t}\n\t}","commit_id":"8f6843efdb4fbbb7f9403ad4ede5e20e5991cf8a","url":"https://github.com/liferay/liferay-portal"},{"original_method":"@Override\n\tpublic synchronized void restore(long companyId, String backupName)\n\t\tthrows SearchException {\n\n\t\tbackupName = StringUtil.toLowerCase(backupName);\n\n\t\tvalidateBackupName(backupName);\n\n\t\tAdminClient adminClient =\n\t\t\t_elasticsearchConnectionManager.getAdminClient();\n\n\t\tIndicesAdminClient indicesAdminClient = adminClient.indices();\n\n\t\tCloseIndexRequestBuilder closeIndexRequestBuilder =\n\t\t\tindicesAdminClient.prepareClose(String.valueOf(companyId));\n\n\t\ttry {\n\t\t\tFuture<CloseIndexResponse> future =\n\t\t\t\tcloseIndexRequestBuilder.execute();\n\n\t\t\tCloseIndexResponse closeIndexResponse = future.get();\n\n\t\t\tLogUtil.logActionResponse(_log, closeIndexResponse);\n\t\t}\n\t\tcatch (Exception e) {\n\t\t\tthrow new SearchException(e);\n\t\t}\n\n\t\tClusterAdminClient clusterAdminClient =\n\t\t\t_elasticsearchConnectionManager.getClusterAdminClient();\n\n\t\tRestoreSnapshotRequestBuilder restoreSnapshotRequestBuilder =\n\t\t\tclusterAdminClient.prepareRestoreSnapshot(\n\t\t\t\t_BACKUP_REPOSITORY_NAME, backupName);\n\n\t\trestoreSnapshotRequestBuilder.setIndices(String.valueOf(companyId));\n\t\trestoreSnapshotRequestBuilder.setWaitForCompletion(true);\n\n\t\ttry {\n\t\t\tFuture<RestoreSnapshotResponse> future =\n\t\t\t\trestoreSnapshotRequestBuilder.execute();\n\n\t\t\tRestoreSnapshotResponse restoreSnapshotResponse = future.get();\n\n\t\t\tLogUtil.logActionResponse(_log, restoreSnapshotResponse);\n\t\t}\n\t\tcatch (Exception e) {\n\t\t\tthrow new SearchException(e);\n\t\t}\n\n\t\tClusterHealthResponse clusterHealthResponse =\n\t\t\t_elasticsearchConnectionManager.getClusterHealthResponse();\n\n\t\tif (clusterHealthResponse.getStatus() == ClusterHealthStatus.RED) {\n\t\t\tthrow new IllegalStateException(\n\t\t\t\t\"Unable to initialize Elasticsearch cluster: \" +\n\t\t\t\t\tclusterHealthResponse);\n\t\t}\n\t}","id":55126,"modified_method":"@Override\n\tpublic synchronized void restore(long companyId, String backupName)\n\t\tthrows SearchException {\n\n\t\tbackupName = StringUtil.toLowerCase(backupName);\n\n\t\tvalidateBackupName(backupName);\n\n\t\tAdminClient adminClient =\n\t\t\t_elasticsearchConnectionManager.getAdminClient();\n\n\t\tIndicesAdminClient indicesAdminClient = adminClient.indices();\n\n\t\tCloseIndexRequestBuilder closeIndexRequestBuilder =\n\t\t\tindicesAdminClient.prepareClose(String.valueOf(companyId));\n\n\t\ttry {\n\t\t\tFuture<CloseIndexResponse> future =\n\t\t\t\tcloseIndexRequestBuilder.execute();\n\n\t\t\tCloseIndexResponse closeIndexResponse = future.get();\n\n\t\t\tLogUtil.logActionResponse(_log, closeIndexResponse);\n\t\t}\n\t\tcatch (Exception e) {\n\t\t\tthrow new SearchException(e);\n\t\t}\n\n\t\tClusterAdminClient clusterAdminClient =\n\t\t\t_elasticsearchConnectionManager.getClusterAdminClient();\n\n\t\tRestoreSnapshotRequestBuilder restoreSnapshotRequestBuilder =\n\t\t\tclusterAdminClient.prepareRestoreSnapshot(\n\t\t\t\t_BACKUP_REPOSITORY_NAME, backupName);\n\n\t\trestoreSnapshotRequestBuilder.setIndices(String.valueOf(companyId));\n\t\trestoreSnapshotRequestBuilder.setWaitForCompletion(true);\n\n\t\ttry {\n\t\t\tFuture<RestoreSnapshotResponse> future =\n\t\t\t\trestoreSnapshotRequestBuilder.execute();\n\n\t\t\tRestoreSnapshotResponse restoreSnapshotResponse = future.get();\n\n\t\t\tLogUtil.logActionResponse(_log, restoreSnapshotResponse);\n\t\t}\n\t\tcatch (Exception e) {\n\t\t\tthrow new SearchException(e);\n\t\t}\n\n\t\tClusterHealthResponse clusterHealthResponse = null;\n\n\t\tif (PortalRunMode.isTestMode()) {\n\t\t\tclusterHealthResponse =\n\t\t\t\t_elasticsearchConnectionManager.getClusterHealthResponse(\n\t\t\t\t\tTime.HOUR, 1);\n\t\t}\n\t\telse {\n\t\t\tclusterHealthResponse =\n\t\t\t\t_elasticsearchConnectionManager.getClusterHealthResponse(\n\t\t\t\t\t30 * Time.SECOND, 2);\n\t\t}\n\n\t\tif (clusterHealthResponse.getStatus() == ClusterHealthStatus.RED) {\n\t\t\tthrow new IllegalStateException(\n\t\t\t\t\"Unable to initialize Elasticsearch cluster: \" +\n\t\t\t\t\tclusterHealthResponse);\n\t\t}\n\t}","commit_id":"8f6843efdb4fbbb7f9403ad4ede5e20e5991cf8a","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void init() throws Exception {\n        super.init();\n        synchronized(initial_mbrs) {\n            initial_mbrs.clear();\n            initial_mbrs_received=false;\n        }\n        join_promise.reset();\n    }","id":55127,"modified_method":"public void init() throws Exception {\n        super.init();     \n        join_promise.reset();\n    }","commit_id":"bcf5a5877ea0508a15a00b73f5ae7bce98e4f698","url":"https://github.com/belaban/JGroups"},{"original_method":"/**\n     * Pings initial members. Removes self before returning vector of initial members.\n     * Uses IP multicast or gossiping, depending on parameters.\n     */\n    void findInitialMembers() {\n        PingRsp ping_rsp;\n\n        synchronized(initial_mbrs) {\n            initial_mbrs.removeAllElements();\n            initial_mbrs_received=false;\n            gms.getDownProtocol().down(new Event(Event.FIND_INITIAL_MBRS));\n\n            // the initial_mbrs_received flag is needed when down_prot.down() is executed on the same thread, so when\n            // it returns, a response might actually have been received (even though the initial_mbrs might still be empty)\n            if(initial_mbrs_received == false) {\n                try {\n                    initial_mbrs.wait();\n                }\n                catch(Exception e) {\n                }\n            }\n\n            for(int i=0; i < initial_mbrs.size(); i++) {\n                ping_rsp=(PingRsp)initial_mbrs.elementAt(i);\n                if(ping_rsp.own_addr != null && gms.local_addr != null &&\n                        ping_rsp.own_addr.equals(gms.local_addr)) {\n                    initial_mbrs.removeElementAt(i);\n                    break;\n                }\n            }\n        }\n    }","id":55128,"modified_method":"private List<PingRsp> findInitialMembers() {\n\t\t\n\t\tList<PingRsp> responses = (List<PingRsp>) gms.getDownProtocol().down(new Event(Event.FIND_INITIAL_MBRS));\t\t\n\t\tfor(Iterator<PingRsp> iter = responses.iterator();iter.hasNext();){\n\t\t\tPingRsp response = iter.next();\n\t\t\tif(response.own_addr !=null && response.own_addr.equals(gms.local_addr))\n\t\t\t\titer.remove();\t\n\t\t}\t\n\t\treturn responses;\n\t}","commit_id":"bcf5a5877ea0508a15a00b73f5ae7bce98e4f698","url":"https://github.com/belaban/JGroups"},{"original_method":"/**\n     * Joins this process to a group. Determines the coordinator and sends a unicast\n     * handleJoin() message to it. The coordinator returns a JoinRsp and then broadcasts the new view, which\n     * contains a message digest and the current membership (including the joiner). The joiner is then\n     * supposed to install the new view and the digest and starts accepting mcast messages. Previous\n     * mcast messages were discarded (this is done in PBCAST).<p>\n     * If successful, impl is changed to an instance of ParticipantGmsImpl.\n     * Otherwise, we continue trying to send join() messages to\tthe coordinator,\n     * until we succeed (or there is no member in the group. In this case, we create our own singleton group).\n     * <p>When GMS.disable_initial_coord is set to true, then we won't become coordinator on receiving an initial\n     * membership of 0, but instead will retry (forever) until we get an initial membership of > 0.\n     * @param mbr Our own address (assigned through SET_LOCAL_ADDRESS)\n     */\n    public void join(Address mbr) {\n        Address coord;\n        JoinRsp rsp;\n        View    tmp_view;\n        leaving=false;\n\n        join_promise.reset();\n        while(!leaving) {\n            findInitialMembers();\n            if(log.isDebugEnabled()) log.debug(\"initial_mbrs are \" + initial_mbrs);\n            if(initial_mbrs.isEmpty()) {\n                if(gms.disable_initial_coord) {\n                    if(log.isTraceEnabled())\n                        log.trace(\"received an initial membership of 0, but cannot become coordinator \" +\n                                \"(disable_initial_coord=true), will retry fetching the initial membership\");\n                    continue;\n                }\n                if(log.isDebugEnabled())\n                    log.debug(\"no initial members discovered: creating group as first member\");\n                becomeSingletonMember(mbr);\n                return;\n            }\n\n            coord=determineCoord(initial_mbrs);\n            if(coord == null) { // e.g. because we have all clients only\n                if(gms.handle_concurrent_startup == false) {\n                    if(log.isTraceEnabled())\n                        log.trace(\"handle_concurrent_startup is false; ignoring responses of initial clients\");\n                    becomeSingletonMember(mbr);\n                    return;\n                }\n\n                if(log.isTraceEnabled())\n                    log.trace(\"could not determine coordinator from responses \" + initial_mbrs);\n\n                // so the member to become singleton member (and thus coord) is the first of all clients\n                Set<Address> clients=new TreeSet<Address>(); // sorted\n                clients.add(mbr); // add myself again (was removed by findInitialMembers())\n                for(int i=0; i < initial_mbrs.size(); i++) {\n                    PingRsp pingRsp=(PingRsp)initial_mbrs.elementAt(i);\n                    Address client_addr=pingRsp.getAddress();\n                    if(client_addr != null)\n                        clients.add(client_addr);\n                }\n                if(log.isTraceEnabled())\n                    log.trace(\"clients to choose new coord from are: \" + clients);\n                Address new_coord=clients.iterator().next();\n                if(new_coord.equals(mbr)) {\n                    if(log.isTraceEnabled())\n                        log.trace(\"I (\" + mbr + \") am the first of the clients, will become coordinator\");\n                    becomeSingletonMember(mbr);\n                    return;\n                }\n                else {\n                    if(log.isTraceEnabled())\n                        log.trace(\"I (\" + mbr + \") am not the first of the clients, \" +\n                                \"waiting for another client to become coordinator\");\n                    Util.sleep(500);\n                }\n                continue;\n            }\n\n            try {\n                if(log.isDebugEnabled())\n                    log.debug(\"sending handleJoin(\" + mbr + \") to \" + coord);\n                sendJoinMessage(coord, mbr);\n                rsp=(JoinRsp)join_promise.getResult(gms.join_timeout);\n\n                if(rsp == null) {\n                    if(log.isWarnEnabled()) log.warn(\"join(\" + mbr + \") sent to \" + coord + \" timed out, retrying\");\n                }\n                else {\n                    // 1. check whether JOIN was rejected\n                    String failure=rsp.getFailReason();\n                    if(failure != null)\n                        throw new SecurityException(failure);\n\n                    // 2. Install digest\n                    MutableDigest tmp_digest=new MutableDigest(rsp.getDigest());\n                    tmp_view=rsp.getView();\n                    if(tmp_digest == null || tmp_view == null) {\n                        if(log.isErrorEnabled())\n                            log.error(\"JoinRsp has a null view or digest: view=\" + tmp_view + \", digest=\" +\n                                    tmp_digest + \", skipping it\");\n                    }\n                    else {\n                        tmp_digest.incrementHighestDeliveredSeqno(coord); \t// see DESIGN for an explanantion\n                        tmp_digest.seal();\n                        gms.setDigest(tmp_digest);\n\n                        if(log.isDebugEnabled()) log.debug(\"[\" + gms.local_addr + \"]: JoinRsp=\" + tmp_view +\n                                \" [size=\" + tmp_view.size() + \"]\\n\\n\");\n\n                        if(!installView(tmp_view)) {\n                            if(log.isErrorEnabled()) log.error(\"view installation failed, retrying to join group\");\n                            Util.sleep(gms.join_retry_timeout);\n                            continue;\n                        }\n\n                        // send VIEW_ACK to sender of view\n                        Message view_ack=new Message(coord, null, null);\n                        view_ack.setFlag(Message.OOB);\n                        GMS.GmsHeader tmphdr=new GMS.GmsHeader(GMS.GmsHeader.VIEW_ACK);\n                        view_ack.putHeader(GMS.name, tmphdr);\n                        if(!gms.members.contains(coord))\n                            gms.getDownProtocol().down(new Event(Event.ENABLE_UNICASTS_TO, coord));\n                        gms.getDownProtocol().down(new Event(Event.MSG, view_ack));\n\n                        gms.getUpProtocol().up(new Event(Event.BECOME_SERVER));\n                        gms.getDownProtocol().down(new Event(Event.BECOME_SERVER));\n                        return;\n                    }\n                }\n            }\n            catch(SecurityException security_ex) {\n                throw security_ex;\n            }\n            catch(IllegalArgumentException illegal_arg) {\n                throw illegal_arg;\n            }\n            catch(Throwable e) {\n                if(log.isDebugEnabled()) log.debug(\"exception=\" + e + \", retrying\");\n            }\n\n            Util.sleep(gms.join_retry_timeout);\n        }\n    }","id":55129,"modified_method":"/**\n     * Joins this process to a group. Determines the coordinator and sends a unicast\n     * handleJoin() message to it. The coordinator returns a JoinRsp and then broadcasts the new view, which\n     * contains a message digest and the current membership (including the joiner). The joiner is then\n     * supposed to install the new view and the digest and starts accepting mcast messages. Previous\n     * mcast messages were discarded (this is done in PBCAST).<p>\n     * If successful, impl is changed to an instance of ParticipantGmsImpl.\n     * Otherwise, we continue trying to send join() messages to\tthe coordinator,\n     * until we succeed (or there is no member in the group. In this case, we create our own singleton group).\n     * <p>When GMS.disable_initial_coord is set to true, then we won't become coordinator on receiving an initial\n     * membership of 0, but instead will retry (forever) until we get an initial membership of > 0.\n     * @param mbr Our own address (assigned through SET_LOCAL_ADDRESS)\n     */   \n\tpublic void join(Address mbr) {\n        Address coord;\n        JoinRsp rsp;\n        View    tmp_view;\n        leaving=false;\n\n        join_promise.reset();\n        while(!leaving) {\n        \tList<PingRsp> responses = findInitialMembers();        \n            if(log.isDebugEnabled()) log.debug(\"initial_mbrs are \" + responses);\n            if(responses.isEmpty()) {\n                if(gms.disable_initial_coord) {\n                    if(log.isTraceEnabled())\n                        log.trace(\"received an initial membership of 0, but cannot become coordinator \" +\n                                \"(disable_initial_coord=true), will retry fetching the initial membership\");\n                    continue;\n                }\n                if(log.isDebugEnabled())\n                    log.debug(\"no initial members discovered: creating group as first member\");\n                becomeSingletonMember(mbr);\n                return;\n            }\n\n            coord=determineCoord(responses);\n            if(coord == null) { // e.g. because we have all clients only\n                if(gms.handle_concurrent_startup == false) {\n                    if(log.isTraceEnabled())\n                        log.trace(\"handle_concurrent_startup is false; ignoring responses of initial clients\");\n                    becomeSingletonMember(mbr);\n                    return;\n                }\n\n                if(log.isTraceEnabled())\n                    log.trace(\"could not determine coordinator from responses \" + responses);\n\n                // so the member to become singleton member (and thus coord) is the first of all clients\n                Set<Address> clients=new TreeSet<Address>(); // sorted\n                clients.add(mbr); // add myself again (was removed by findInitialMembers())\n                for(PingRsp response:responses){\n                \tAddress client_addr = response.getAddress();\n                \tif(client_addr != null)\n                        clients.add(client_addr);\n\t\t\t\t}                \n                if(log.isTraceEnabled())\n                    log.trace(\"clients to choose new coord from are: \" + clients);\n                Address new_coord=clients.iterator().next();\n                if(new_coord.equals(mbr)) {\n                    if(log.isTraceEnabled())\n                        log.trace(\"I (\" + mbr + \") am the first of the clients, will become coordinator\");\n                    becomeSingletonMember(mbr);\n                    return;\n                }\n                else {\n                    if(log.isTraceEnabled())\n                        log.trace(\"I (\" + mbr + \") am not the first of the clients, \" +\n                                \"waiting for another client to become coordinator\");\n                    Util.sleep(500);\n                }\n                continue;\n            }\n\n            try {\n                if(log.isDebugEnabled())\n                    log.debug(\"sending handleJoin(\" + mbr + \") to \" + coord);\n                sendJoinMessage(coord, mbr);\n                rsp=(JoinRsp)join_promise.getResult(gms.join_timeout);\n\n                if(rsp == null) {\n                    if(log.isWarnEnabled()) log.warn(\"join(\" + mbr + \") sent to \" + coord + \" timed out, retrying\");\n                }\n                else {\n                    // 1. check whether JOIN was rejected\n                    String failure=rsp.getFailReason();\n                    if(failure != null)\n                        throw new SecurityException(failure);\n\n                    // 2. Install digest\n                    MutableDigest tmp_digest=new MutableDigest(rsp.getDigest());\n                    tmp_view=rsp.getView();\n                    if(tmp_digest == null || tmp_view == null) {\n                        if(log.isErrorEnabled())\n                            log.error(\"JoinRsp has a null view or digest: view=\" + tmp_view + \", digest=\" +\n                                    tmp_digest + \", skipping it\");\n                    }\n                    else {\n                        tmp_digest.incrementHighestDeliveredSeqno(coord); \t// see DESIGN for an explanantion\n                        tmp_digest.seal();\n                        gms.setDigest(tmp_digest);\n\n                        if(log.isDebugEnabled()) log.debug(\"[\" + gms.local_addr + \"]: JoinRsp=\" + tmp_view +\n                                \" [size=\" + tmp_view.size() + \"]\\n\\n\");\n\n                        if(!installView(tmp_view)) {\n                            if(log.isErrorEnabled()) log.error(\"view installation failed, retrying to join group\");\n                            Util.sleep(gms.join_retry_timeout);\n                            continue;\n                        }\n\n                        // send VIEW_ACK to sender of view\n                        Message view_ack=new Message(coord, null, null);\n                        view_ack.setFlag(Message.OOB);\n                        GMS.GmsHeader tmphdr=new GMS.GmsHeader(GMS.GmsHeader.VIEW_ACK);\n                        view_ack.putHeader(GMS.name, tmphdr);\n                        if(!gms.members.contains(coord))\n                            gms.getDownProtocol().down(new Event(Event.ENABLE_UNICASTS_TO, coord));\n                        gms.getDownProtocol().down(new Event(Event.MSG, view_ack));\n\n                        gms.getUpProtocol().up(new Event(Event.BECOME_SERVER));\n                        gms.getDownProtocol().down(new Event(Event.BECOME_SERVER));\n                        return;\n                    }\n                }\n            }\n            catch(SecurityException security_ex) {\n                throw security_ex;\n            }\n            catch(IllegalArgumentException illegal_arg) {\n                throw illegal_arg;\n            }\n            catch(Throwable e) {\n                if(log.isDebugEnabled()) log.debug(\"exception=\" + e + \", retrying\");\n            }\n\n            Util.sleep(gms.join_retry_timeout);\n        }\n    }","commit_id":"bcf5a5877ea0508a15a00b73f5ae7bce98e4f698","url":"https://github.com/belaban/JGroups"},{"original_method":"void sendJoinMessage(Address coord, Address mbr) {\n        Message msg;\n        GMS.GmsHeader hdr;\n\n        msg=new Message(coord, null, null);\n        hdr=new GMS.GmsHeader(GMS.GmsHeader.JOIN_REQ, mbr);\n        msg.putHeader(gms.getName(), hdr);\n        \n        // we have to enable unicasts to coord, as coord is not in our membership (the unicast message would get dropped)\n        gms.getDownProtocol().down(new Event(Event.ENABLE_UNICASTS_TO, coord));\n        gms.getDownProtocol().down(new Event(Event.MSG, msg));\n    }","id":55130,"modified_method":"/** Returns immediately. Clients don't handle suspect() requests */\n    // public void handleSuspect(Address mbr) {\n    // }\n\n\n    /* --------------------------- Private Methods ------------------------------------ */\n\n\n\n    void sendJoinMessage(Address coord, Address mbr) {\n        Message msg;\n        GMS.GmsHeader hdr;\n\n        msg=new Message(coord, null, null);\n        hdr=new GMS.GmsHeader(GMS.GmsHeader.JOIN_REQ, mbr);\n        msg.putHeader(gms.getName(), hdr);\n        \n        // we have to enable unicasts to coord, as coord is not in our membership (the unicast message would get dropped)\n        gms.getDownProtocol().down(new Event(Event.ENABLE_UNICASTS_TO, coord));\n        gms.getDownProtocol().down(new Event(Event.MSG, msg));\n    }","commit_id":"bcf5a5877ea0508a15a00b73f5ae7bce98e4f698","url":"https://github.com/belaban/JGroups"},{"original_method":"public void setNumInitialMembers(int num_initial_members) {\n        this.num_initial_members=num_initial_members;\n        if(ping_waiter != null)\n            ping_waiter.setNumRsps(num_initial_members);\n    }","id":55131,"modified_method":"public void setNumInitialMembers(int num_initial_members) {\n        this.num_initial_members=num_initial_members;        \n        member_finder_task.setNumRsps(num_initial_members);\n    }","commit_id":"bcf5a5877ea0508a15a00b73f5ae7bce98e4f698","url":"https://github.com/belaban/JGroups"},{"original_method":"/**\n     * An event is to be sent down the stack. The layer may want to examine its type and perform\n     * some action on it, depending on the event's type. If the event is a message MSG, then\n     * the layer may need to add a header to it (or do nothing at all) before sending it down\n     * the stack using <code>PassDown<\/code>. In case of a GET_ADDRESS event (which tries to\n     * retrieve the stack's address from one of the bottom layers), the layer may need to send\n     * a new response event back up the stack using <code>up_prot.up()<\/code>.\n     * The PING protocol is interested in several different down events,\n     * Event.FIND_INITIAL_MBRS - sent by the GMS layer and expecting a GET_MBRS_OK\n     * Event.TMP_VIEW and Event.VIEW_CHANGE - a view change event\n     * Event.BECOME_SERVER - called after client has joined and is fully working group member\n     * Event.CONNECT, Event.DISCONNECT.\n     */\n    public Object down(Event evt) {\n\n        switch(evt.getType()) {\n\n        case Event.FIND_INITIAL_MBRS:   // sent by GMS layer, pass up a GET_MBRS_OK event\n            // sends the GET_MBRS_REQ to all members, waits 'timeout' ms or until 'num_initial_members' have been retrieved\n            num_discovery_requests++;\n            ping_waiter.start();\n            return null;\n\n        case Event.TMP_VIEW:\n        case Event.VIEW_CHANGE:\n            Vector tmp;\n            if((tmp=((View)evt.getArg()).getMembers()) != null) {\n                synchronized(members) {\n                    members.clear();\n                    members.addAll(tmp);\n                }\n            }\n            return down_prot.down(evt);\n\n        case Event.BECOME_SERVER: // called after client has joined and is fully working group member\n            down_prot.down(evt);\n            is_server=true;\n            return null;\n\n        case Event.CONNECT:\n            group_addr=(String)evt.getArg();\n            Object ret=down_prot.down(evt);\n            handleConnect();\n            return ret;\n\n        case Event.DISCONNECT:\n            handleDisconnect();\n            return down_prot.down(evt);\n\n        default:\n            return down_prot.down(evt);          // Pass on to the layer below us\n        }\n    }","id":55132,"modified_method":"/**\n     * An event is to be sent down the stack. The layer may want to examine its type and perform\n     * some action on it, depending on the event's type. If the event is a message MSG, then\n     * the layer may need to add a header to it (or do nothing at all) before sending it down\n     * the stack using <code>PassDown<\/code>. In case of a GET_ADDRESS event (which tries to\n     * retrieve the stack's address from one of the bottom layers), the layer may need to send\n     * a new response event back up the stack using <code>up_prot.up()<\/code>.\n     * The PING protocol is interested in several different down events,\n     * Event.FIND_INITIAL_MBRS - sent by the GMS layer and expecting a GET_MBRS_OK\n     * Event.TMP_VIEW and Event.VIEW_CHANGE - a view change event\n     * Event.BECOME_SERVER - called after client has joined and is fully working group member\n     * Event.CONNECT, Event.DISCONNECT.\n     */\n    public Object down(Event evt) {\n\n        switch(evt.getType()) {\n\n        case Event.FIND_INITIAL_MBRS:   // sent by GMS layer, pass up a GET_MBRS_OK event\n            // sends the GET_MBRS_REQ to all members, waits 'timeout' ms or until 'num_initial_members' have been retrieved\n            num_discovery_requests++;\n            return member_finder_task.find();            \n\n        case Event.TMP_VIEW:\n        case Event.VIEW_CHANGE:\n            Vector<Address> tmp;\n            if((tmp=((View)evt.getArg()).getMembers()) != null) {\n                synchronized(members) {\n                    members.clear();\n                    members.addAll(tmp);\n                }\n            }\n            return down_prot.down(evt);\n\n        case Event.BECOME_SERVER: // called after client has joined and is fully working group member\n            down_prot.down(evt);\n            is_server=true;\n            return null;\n\n        case Event.CONNECT:\n            group_addr=(String)evt.getArg();\n            Object ret=down_prot.down(evt);\n            handleConnect();\n            return ret;\n\n        case Event.DISCONNECT:\n            handleDisconnect();\n            return down_prot.down(evt);\n\n        default:\n            return down_prot.down(evt);          // Pass on to the layer below us\n        }\n    }","commit_id":"bcf5a5877ea0508a15a00b73f5ae7bce98e4f698","url":"https://github.com/belaban/JGroups"},{"original_method":"/**\n     * An event was received from the layer below. Usually the current layer will want to examine\n     * the event type and - depending on its type - perform some computation\n     * (e.g. removing headers from a MSG event type, or updating the internal membership list\n     * when receiving a VIEW_CHANGE event).\n     * Finally the event is either a) discarded, or b) an event is sent down\n     * the stack using <code>PassDown<\/code> or c) the event (or another event) is sent up\n     * the stack using <code>PassUp<\/code>.\n     * <p/>\n     * For the PING protocol, the Up operation does the following things.\n     * 1. If the event is a Event.MSG then PING will inspect the message header.\n     * If the header is null, PING simply passes up the event\n     * If the header is PingHeader.GET_MBRS_REQ then the PING protocol\n     * will PassDown a PingRequest message\n     * If the header is PingHeader.GET_MBRS_RSP we will add the message to the initial members\n     * vector and wake up any waiting threads.\n     * 2. If the event is Event.SET_LOCAL_ADDR we will simple set the local address of this protocol\n     * 3. For all other messages we simple pass it up to the protocol above\n     *\n     * @param evt - the event that has been sent from the layer below\n     */\n\n    public Object up(Event evt) {\n        Message msg, rsp_msg;\n        PingHeader rsp_hdr;\n        PingRsp rsp;\n        Address coord;\n\n        switch(evt.getType()) {\n\n        case Event.MSG:\n            msg=(Message)evt.getArg();\n            PingHeader hdr=(PingHeader)msg.getHeader(getName());\n            if(hdr == null) {\n                return up_prot.up(evt);\n            }\n\n            switch(hdr.type) {\n\n            case PingHeader.GET_MBRS_REQ:   // return Rsp(local_addr, coord)\n                if(local_addr != null && msg.getSrc() != null && local_addr.equals(msg.getSrc())) {\n                    return null;\n                }\n                synchronized(members) {\n                    coord=!members.isEmpty()? (Address)members.firstElement() : local_addr;\n                }\n\n                PingRsp ping_rsp=new PingRsp(local_addr, coord, is_server);\n                rsp_msg=new Message(msg.getSrc(), null, null);\n                rsp_msg.setFlag(Message.OOB);\n                rsp_hdr=new PingHeader(PingHeader.GET_MBRS_RSP, ping_rsp);\n                rsp_msg.putHeader(getName(), rsp_hdr);\n                if(log.isTraceEnabled())\n                    log.trace(\"received GET_MBRS_REQ from \" + msg.getSrc() + \", sending response \" + rsp_hdr);\n                down_prot.down(new Event(Event.MSG, rsp_msg));\n                return null;\n\n            case PingHeader.GET_MBRS_RSP:   // add response to vector and notify waiting thread\n                rsp=hdr.arg;\n\n                if(log.isTraceEnabled())\n                    log.trace(\"received GET_MBRS_RSP, rsp=\" + rsp);\n                ping_waiter.addResponse(rsp);\n                return null;\n\n            default:\n                if(log.isWarnEnabled()) log.warn(\"got PING header with unknown type (\" + hdr.type + ')');\n                return null;\n            }\n\n        case Event.SET_LOCAL_ADDRESS:\n            up_prot.up(evt);\n            local_addr=(Address)evt.getArg();\n            localAddressSet(local_addr);\n            break;\n\n        default:\n            up_prot.up(evt);            // Pass up to the layer above us\n            break;\n        }\n\n        return null;\n    }","id":55133,"modified_method":"/**\n     * An event was received from the layer below. Usually the current layer will want to examine\n     * the event type and - depending on its type - perform some computation\n     * (e.g. removing headers from a MSG event type, or updating the internal membership list\n     * when receiving a VIEW_CHANGE event).\n     * Finally the event is either a) discarded, or b) an event is sent down\n     * the stack using <code>PassDown<\/code> or c) the event (or another event) is sent up\n     * the stack using <code>PassUp<\/code>.\n     * <p/>\n     * For the PING protocol, the Up operation does the following things.\n     * 1. If the event is a Event.MSG then PING will inspect the message header.\n     * If the header is null, PING simply passes up the event\n     * If the header is PingHeader.GET_MBRS_REQ then the PING protocol\n     * will PassDown a PingRequest message\n     * If the header is PingHeader.GET_MBRS_RSP we will add the message to the initial members\n     * vector and wake up any waiting threads.\n     * 2. If the event is Event.SET_LOCAL_ADDR we will simple set the local address of this protocol\n     * 3. For all other messages we simple pass it up to the protocol above\n     *\n     * @param evt - the event that has been sent from the layer below\n     */\n\n    public Object up(Event evt) {\n        Message msg, rsp_msg;\n        PingHeader rsp_hdr;\n        PingRsp rsp;\n        Address coord;\n\n        switch(evt.getType()) {\n\n        case Event.MSG:\n            msg=(Message)evt.getArg();\n            PingHeader hdr=(PingHeader)msg.getHeader(getName());\n            if(hdr == null) {\n                return up_prot.up(evt);\n            }\n\n            switch(hdr.type) {\n\n            case PingHeader.GET_MBRS_REQ:   // return Rsp(local_addr, coord)\n                if(local_addr != null && msg.getSrc() != null && local_addr.equals(msg.getSrc())) {\n                    return null;\n                }\n                synchronized(members) {\n                    coord=!members.isEmpty()? (Address)members.firstElement() : local_addr;\n                }\n\n                PingRsp ping_rsp=new PingRsp(local_addr, coord, is_server);\n                rsp_msg=new Message(msg.getSrc(), null, null);\n                rsp_msg.setFlag(Message.OOB);\n                rsp_hdr=new PingHeader(PingHeader.GET_MBRS_RSP, ping_rsp);\n                rsp_msg.putHeader(getName(), rsp_hdr);\n                if(log.isTraceEnabled())\n                    log.trace(\"received GET_MBRS_REQ from \" + msg.getSrc() + \", sending response \" + rsp_hdr);\n                down_prot.down(new Event(Event.MSG, rsp_msg));\n                return null;\n\n            case PingHeader.GET_MBRS_RSP:   // add response to vector and notify waiting thread\n                rsp=hdr.arg;\n\n                if(log.isTraceEnabled())\n                    log.trace(\"received GET_MBRS_RSP, rsp=\" + rsp);\n                member_finder_task.addResponse(rsp);\n                return null;\n\n            default:\n                if(log.isWarnEnabled()) log.warn(\"got PING header with unknown type (\" + hdr.type + ')');\n                return null;\n            }\n\n        case Event.SET_LOCAL_ADDRESS:\n            up_prot.up(evt);\n            local_addr=(Address)evt.getArg();\n            localAddressSet(local_addr);\n            break;\n\n        default:\n            up_prot.up(evt);            // Pass up to the layer above us\n            break;\n        }\n\n        return null;\n    }","commit_id":"bcf5a5877ea0508a15a00b73f5ae7bce98e4f698","url":"https://github.com/belaban/JGroups"},{"original_method":"public void stop() {\n        is_server=false;\n        if(ping_waiter != null)\n            ping_waiter.stop();\n    }","id":55134,"modified_method":"public void stop() {\n        is_server=false;        \n        member_finder_task.stop();\n    }","commit_id":"bcf5a5877ea0508a15a00b73f5ae7bce98e4f698","url":"https://github.com/belaban/JGroups"},{"original_method":"/**\n     * Finds the initial membership\n     * @return Vector<PingRsp>\n     */\n    public Vector findInitialMembers() {\n        return ping_waiter != null? ping_waiter.findInitialMembers() : null;\n    }","id":55135,"modified_method":"/**\n     * Finds the initial membership\n     * @return Vector<PingRsp>\n     */\n    public List<PingRsp> findInitialMembers() {\n        return member_finder_task.findInitialMembers();\n    }","commit_id":"bcf5a5877ea0508a15a00b73f5ae7bce98e4f698","url":"https://github.com/belaban/JGroups"},{"original_method":"public void start() throws Exception {\n        super.start();\n        PingSender ping_sender=new PingSender(timeout, num_ping_requests, this);\n        if(ping_waiter == null)\n            ping_waiter=new PingWaiter(timeout, num_initial_members, this, ping_sender);\n    }","id":55136,"modified_method":"public void start() throws Exception {\n        super.start();\n        member_finder_task.setTimeout(timeout);\n        member_finder_task.setNumRsps(num_initial_members);       \n    }","commit_id":"bcf5a5877ea0508a15a00b73f5ae7bce98e4f698","url":"https://github.com/belaban/JGroups"},{"original_method":"public Vector providedUpServices() {\n        Vector ret=new Vector(1);\n        ret.addElement(new Integer(Event.FIND_INITIAL_MBRS));\n        return ret;\n    }","id":55137,"modified_method":"public Vector<Integer> providedUpServices() {\n        Vector<Integer> ret=new Vector<Integer>(1);\n        ret.addElement(new Integer(Event.FIND_INITIAL_MBRS));\n        return ret;\n    }","commit_id":"bcf5a5877ea0508a15a00b73f5ae7bce98e4f698","url":"https://github.com/belaban/JGroups"},{"original_method":"public String findInitialMembersAsString() {\n        Vector results=findInitialMembers();\n        if(results == null || results.isEmpty()) return \"<empty>\";\n        PingRsp rsp;\n        StringBuilder sb=new StringBuilder();\n        for(Iterator it=results.iterator(); it.hasNext();) {\n            rsp=(PingRsp)it.next();\n            sb.append(rsp).append(\"\\n\");\n        }\n        return sb.toString();\n    }","id":55138,"modified_method":"public String findInitialMembersAsString() {\n    \tList<PingRsp> results=findInitialMembers();\n        if(results == null || results.isEmpty()) return \"<empty>\";\n        PingRsp rsp;\n        StringBuilder sb=new StringBuilder();\n        for(Iterator it=results.iterator(); it.hasNext();) {\n            rsp=(PingRsp)it.next();\n            sb.append(rsp).append(\"\\n\");\n        }\n        return sb.toString();\n    }","commit_id":"bcf5a5877ea0508a15a00b73f5ae7bce98e4f698","url":"https://github.com/belaban/JGroups"},{"original_method":"public void setTimeout(long timeout) {\n        this.timeout=timeout;\n        if(ping_waiter != null)\n            ping_waiter.setTimeout(timeout);\n    }","id":55139,"modified_method":"public void setTimeout(long timeout) {\n        this.timeout=timeout;        \n        member_finder_task.setTimeout(timeout);\n    }","commit_id":"bcf5a5877ea0508a15a00b73f5ae7bce98e4f698","url":"https://github.com/belaban/JGroups"},{"original_method":"public Vector findInitialMembers() {\n        return p.findInitialMembers();\n    }","id":55140,"modified_method":"public Vector findInitialMembers() {\n        return new Vector(p.findInitialMembers());\n    }","commit_id":"bcf5a5877ea0508a15a00b73f5ae7bce98e4f698","url":"https://github.com/belaban/JGroups"},{"original_method":"public static String type2String(int t) {\n        switch(t) {\n            case MSG:\t                 return \"MSG\";\n            case CONNECT:\t             return \"CONNECT\";\n            case DISCONNECT:\t         return \"DISCONNECT\";\n            case VIEW_CHANGE:\t         return \"VIEW_CHANGE\";\n            case SET_LOCAL_ADDRESS:\t     return \"SET_LOCAL_ADDRESS\";\n            case SUSPECT:                return \"SUSPECT\";\n            case BLOCK:\t                 return \"BLOCK\";            \n            case FIND_INITIAL_MBRS:\t     return \"FIND_INITIAL_MBRS\";\n            case FIND_INITIAL_MBRS_OK:   return \"FIND_INITIAL_MBRS_OK\";\n            case TMP_VIEW:\t             return \"TMP_VIEW\";\n            case BECOME_SERVER:\t         return \"BECOME_SERVER\";\n            case GET_APPLSTATE:          return \"GET_APPLSTATE\";\n            case GET_STATE:              return \"GET_STATE\";\n            case GET_STATE_OK:           return \"GET_STATE_OK\";\n            case STATE_RECEIVED:         return \"STATE_RECEIVED\";\n            case FLUSH:                  return \"FLUSH\";\n            case FLUSH_OK:               return \"FLUSH_OK\";\n            case STABLE:                 return \"STABLE\";\n            case GET_DIGEST:             return \"GET_DIGEST\";\n            case SET_DIGEST:             return \"SET_DIGEST\";\n            case MERGE:                  return \"MERGE\"; // Added by gianlucac@tin.it to support partitions merging in GMS\n            case EXIT:                   return \"EXIT\";\n            case PERF:                   return \"PERF\";\n            case HEARD_FROM:             return \"HEARD_FROM\";\n            case UNSUSPECT:              return \"UNSUSPECT\";\n            case MERGE_DIGEST:           return \"MERGE_DIGEST\";\n            case CONFIG:                 return \"CONFIG\";\n            case GET_DIGEST_STABLE:      return \"GET_DIGEST_STABLE\";\n            case SUSPEND_STABLE:         return \"SUSPEND_STABLE\";\n            case RESUME_STABLE:          return \"RESUME_STABLE\";\n            case ENABLE_UNICASTS_TO:     return \"ENABLE_UNICASTS_TO\";\n            case SUSPEND:        \t\t return \"SUSPEND\";          \n            case RESUME:     \t\t\t return \"RESUME\";\n            case STATE_TRANSFER_INPUTSTREAM: return \"STATE_TRANSFER_INPUTSTREAM\";\n            case STATE_TRANSFER_OUTPUTSTREAM:return \"STATE_TRANSFER_OUTPUTSTREAM\";\n            case STATE_TRANSFER_INPUTSTREAM_CLOSED: return \"STATE_TRANSFER_INPUTSTREAM_CLOSED\";\n            case STATE_TRANSFER_OUTPUTSTREAM_CLOSED: return \"STATE_TRANSFER_OUTPUTSTREAM_CLOSED\";\n            case UNBLOCK:                return \"UNBLOCK\";\n            case CLOSE_BARRIER:          return \"CLOSE_BARRIER\";\n            case OPEN_BARRIER:           return \"OPEN_BARRIER\";\n            case REBROADCAST:            return \"REBROADCAST\";\n            case SHUTDOWN:               return \"SHUTDOWN\";\n            case USER_DEFINED:           return \"USER_DEFINED\";\n            default:                     return \"UNDEFINED(\" + t + \")\";\n        }\n    }","id":55141,"modified_method":"public static String type2String(int t) {\n        switch(t) {\n            case MSG:\t                 return \"MSG\";\n            case CONNECT:\t             return \"CONNECT\";\n            case DISCONNECT:\t         return \"DISCONNECT\";\n            case VIEW_CHANGE:\t         return \"VIEW_CHANGE\";\n            case SET_LOCAL_ADDRESS:\t     return \"SET_LOCAL_ADDRESS\";\n            case SUSPECT:                return \"SUSPECT\";\n            case BLOCK:\t                 return \"BLOCK\";            \n            case FIND_INITIAL_MBRS:\t     return \"FIND_INITIAL_MBRS\";           \n            case TMP_VIEW:\t             return \"TMP_VIEW\";\n            case BECOME_SERVER:\t         return \"BECOME_SERVER\";\n            case GET_APPLSTATE:          return \"GET_APPLSTATE\";\n            case GET_STATE:              return \"GET_STATE\";\n            case GET_STATE_OK:           return \"GET_STATE_OK\";\n            case STATE_RECEIVED:         return \"STATE_RECEIVED\";\n            case FLUSH:                  return \"FLUSH\";\n            case FLUSH_OK:               return \"FLUSH_OK\";\n            case STABLE:                 return \"STABLE\";\n            case GET_DIGEST:             return \"GET_DIGEST\";\n            case SET_DIGEST:             return \"SET_DIGEST\";\n            case MERGE:                  return \"MERGE\"; // Added by gianlucac@tin.it to support partitions merging in GMS\n            case EXIT:                   return \"EXIT\";\n            case PERF:                   return \"PERF\";\n            case HEARD_FROM:             return \"HEARD_FROM\";\n            case UNSUSPECT:              return \"UNSUSPECT\";\n            case MERGE_DIGEST:           return \"MERGE_DIGEST\";\n            case CONFIG:                 return \"CONFIG\";\n            case GET_DIGEST_STABLE:      return \"GET_DIGEST_STABLE\";\n            case SUSPEND_STABLE:         return \"SUSPEND_STABLE\";\n            case RESUME_STABLE:          return \"RESUME_STABLE\";\n            case ENABLE_UNICASTS_TO:     return \"ENABLE_UNICASTS_TO\";\n            case SUSPEND:        \t\t return \"SUSPEND\";          \n            case RESUME:     \t\t\t return \"RESUME\";\n            case STATE_TRANSFER_INPUTSTREAM: return \"STATE_TRANSFER_INPUTSTREAM\";\n            case STATE_TRANSFER_OUTPUTSTREAM:return \"STATE_TRANSFER_OUTPUTSTREAM\";\n            case STATE_TRANSFER_INPUTSTREAM_CLOSED: return \"STATE_TRANSFER_INPUTSTREAM_CLOSED\";\n            case STATE_TRANSFER_OUTPUTSTREAM_CLOSED: return \"STATE_TRANSFER_OUTPUTSTREAM_CLOSED\";\n            case UNBLOCK:                return \"UNBLOCK\";\n            case CLOSE_BARRIER:          return \"CLOSE_BARRIER\";\n            case OPEN_BARRIER:           return \"OPEN_BARRIER\";\n            case REBROADCAST:            return \"REBROADCAST\";\n            case SHUTDOWN:               return \"SHUTDOWN\";\n            case USER_DEFINED:           return \"USER_DEFINED\";\n            default:                     return \"UNDEFINED(\" + t + \")\";\n        }\n    }","commit_id":"bcf5a5877ea0508a15a00b73f5ae7bce98e4f698","url":"https://github.com/belaban/JGroups"},{"original_method":"public void run() {\n            long interval;\n            Vector coords;\n            Vector initial_mbrs;\n\n            // if(log.isDebugEnabled()) log.debug(\"merge task started as I'm the coordinator\");\n            while(thread != null && Thread.currentThread().equals(thread)) {\n                interval=computeInterval();\n                Util.sleep(interval);\n                if(thread == null) break;\n                initial_mbrs=findInitialMembers();\n                if(thread == null) break;\n                if(log.isDebugEnabled()) log.debug(\"initial_mbrs=\" + initial_mbrs);\n                coords=detectMultipleCoordinators(initial_mbrs);\n                if(coords != null && coords.size() > 1) {\n                    if(log.isDebugEnabled())\n                        log.debug(\"found multiple coordinators: \" + coords + \"; sending up MERGE event\");\n                    final Event evt=new Event(Event.MERGE, coords);\n                    if(use_separate_thread) {\n                        Thread merge_notifier=new Thread() {\n                            public void run() {\n                                up_prot.up(evt);\n                            }\n                        };\n                        merge_notifier.setDaemon(true);\n                        merge_notifier.setName(\"merge notifier thread\");\n                        merge_notifier.start();\n                    }\n                    else {\n                        up_prot.up(evt);\n                    }\n                }\n            }\n            if(log.isTraceEnabled())\n                log.trace(\"MERGE2.FindSubgroups thread terminated (local_addr=\" + local_addr + \")\");\n        }","id":55142,"modified_method":"public void run() {\n            long interval;\n            Vector<Address> coords;\n            List<PingRsp> initial_mbrs;\n\n            // if(log.isDebugEnabled()) log.debug(\"merge task started as I'm the coordinator\");\n            while(thread != null && Thread.currentThread().equals(thread)) {\n                interval=computeInterval();\n                Util.sleep(interval);\n                if(thread == null) break;\n                initial_mbrs=findInitialMembers();\n                if(thread == null) break;\n                if(log.isDebugEnabled()) log.debug(\"initial_mbrs=\" + initial_mbrs);\n                coords=detectMultipleCoordinators(initial_mbrs);\n                if(coords != null && coords.size() > 1) {\n                    if(log.isDebugEnabled())\n                        log.debug(\"found multiple coordinators: \" + coords + \"; sending up MERGE event\");\n                    final Event evt=new Event(Event.MERGE, coords);\n                    if(use_separate_thread) {\n                        Thread merge_notifier=new Thread() {\n                            public void run() {\n                                up_prot.up(evt);\n                            }\n                        };\n                        merge_notifier.setDaemon(true);\n                        merge_notifier.setName(\"merge notifier thread\");\n                        merge_notifier.start();\n                    }\n                    else {\n                        up_prot.up(evt);\n                    }\n                }\n            }\n            if(log.isTraceEnabled())\n                log.trace(\"MERGE2.FindSubgroups thread terminated (local_addr=\" + local_addr + \")\");\n        }","commit_id":"bcf5a5877ea0508a15a00b73f5ae7bce98e4f698","url":"https://github.com/belaban/JGroups"},{"original_method":"/**\n         * Returns a list of PingRsp pairs.\n         */\n        Vector findInitialMembers() {\n            PingRsp tmp=new PingRsp(local_addr, local_addr, true);\n            find_promise.reset();\n            down_prot.down(Event.FIND_INITIAL_MBRS_EVT);\n            Vector retval=(Vector)find_promise.getResult(0); // wait indefinitely until response is received\n            if(retval != null && is_coord && local_addr != null && !retval.contains(tmp))\n                retval.add(tmp);\n            return retval;\n        }","id":55143,"modified_method":"/**\n         * Returns a list of PingRsp pairs.\n         */\n        List<PingRsp> findInitialMembers() {\n            PingRsp tmp=new PingRsp(local_addr, local_addr, true);            \n            List<PingRsp> retval=(List<PingRsp>) down_prot.down(Event.FIND_INITIAL_MBRS_EVT);\n            if(retval != null && is_coord && local_addr != null && !retval.contains(tmp))\n                retval.add(tmp);\n            return retval;\n        }","commit_id":"bcf5a5877ea0508a15a00b73f5ae7bce98e4f698","url":"https://github.com/belaban/JGroups"},{"original_method":"public void stop() {\n            if(thread != null) {\n                Thread tmp=thread;\n                thread=null;\n                tmp.interrupt(); // wakes up sleeping thread\n                find_promise.reset();\n            }\n            thread=null;\n        }","id":55144,"modified_method":"public void stop() {\n            if(thread != null) {\n                Thread tmp=thread;\n                thread=null;\n                tmp.interrupt(); // wakes up sleeping thread                \n            }\n            thread=null;\n        }","commit_id":"bcf5a5877ea0508a15a00b73f5ae7bce98e4f698","url":"https://github.com/belaban/JGroups"},{"original_method":"public Object up(Event evt) {\n        switch(evt.getType()) {\n\n            case Event.SET_LOCAL_ADDRESS:\n                local_addr=(Address)evt.getArg();\n                return up_prot.up(evt);\n\n            case Event.FIND_INITIAL_MBRS_OK:\n                find_promise.setResult(evt.getArg());\n                return up_prot.up(evt); // could be needed by GMS\n\n            default:\n                return up_prot.up(evt);            // Pass up to the layer above us\n        }\n    }","id":55145,"modified_method":"public Object up(Event evt) {\n        switch(evt.getType()) {\n\n            case Event.SET_LOCAL_ADDRESS:\n                local_addr=(Address)evt.getArg();\n                return up_prot.up(evt);\n\n            default:\n                return up_prot.up(evt);            // Pass up to the layer above us\n        }\n    }","commit_id":"bcf5a5877ea0508a15a00b73f5ae7bce98e4f698","url":"https://github.com/belaban/JGroups"},{"original_method":"/**\n         * Finds out if there is more than 1 coordinator in the initial_mbrs vector (contains PingRsp elements).\n         * @param initial_mbrs A list of PingRsp pairs\n         * @return Vector A list of the coordinators (Addresses) found. Will contain just 1 element for a correct\n         *         membership, and more than 1 for multiple coordinators\n         */\n        Vector detectMultipleCoordinators(Vector initial_mbrs) {\n            Vector ret=new Vector(11);\n            PingRsp rsp;\n            Address coord;\n\n            if(initial_mbrs == null) return null;\n            for(int i=0; i < initial_mbrs.size(); i++) {\n                rsp=(PingRsp)initial_mbrs.elementAt(i);\n                if(!rsp.is_server)\n                    continue;\n                coord=rsp.getCoordAddress();\n                if(!ret.contains(coord))\n                    ret.addElement(coord);\n            }\n\n            return ret;\n        }","id":55146,"modified_method":"/**\n         * Finds out if there is more than 1 coordinator in the initial_mbrs vector (contains PingRsp elements).\n         * @param initial_mbrs A list of PingRsp pairs\n         * @return Vector A list of the coordinators (Addresses) found. Will contain just 1 element for a correct\n         *         membership, and more than 1 for multiple coordinators\n         */\n        Vector<Address> detectMultipleCoordinators(List<PingRsp> initial_mbrs) {\n        \tVector<Address> ret=new Vector<Address>(11);\n            PingRsp rsp;\n            Address coord;\n\n            if(initial_mbrs == null || initial_mbrs.isEmpty()) return null;\n            \n            for(int i=0; i < initial_mbrs.size(); i++) {\n                rsp=initial_mbrs.get(i);\n                if(!rsp.is_server)\n                    continue;\n                coord=rsp.getCoordAddress();\n                if(!ret.contains(coord))\n                    ret.add(coord);\n            }\n\n            return ret;\n        }","commit_id":"bcf5a5877ea0508a15a00b73f5ae7bce98e4f698","url":"https://github.com/belaban/JGroups"},{"original_method":"public Vector requiredDownServices() {\n        Vector retval=new Vector(1);\n        retval.addElement(new Integer(Event.FIND_INITIAL_MBRS));\n        return retval;\n    }","id":55147,"modified_method":"public Vector<Integer> requiredDownServices() {\n        Vector<Integer> retval=new Vector<Integer>(1);\n        retval.addElement(new Integer(Event.FIND_INITIAL_MBRS));\n        return retval;\n    }","commit_id":"bcf5a5877ea0508a15a00b73f5ae7bce98e4f698","url":"https://github.com/belaban/JGroups"},{"original_method":"public void sendGetMembersRequest() {\n        Message msg;\n        PingHeader hdr;\n        java.util.List gossip_rsps;\n\n        if(client != null) {\n            gossip_rsps=client.getMembers(group_addr);\n            if(gossip_rsps != null && !gossip_rsps.isEmpty()) {\n                // Set a temporary membership in the UDP layer, so that the following multicast\n                // will be sent to all of them\n                Event view_event=new Event(Event.TMP_VIEW, makeView(new Vector(gossip_rsps)));\n                down_prot.down(view_event); // needed e.g. by failure detector or UDP\n            }\n            else {\n                up_prot.up(new Event(Event.FIND_INITIAL_MBRS_OK, null));\n                return;\n            }\n\n            if(!gossip_rsps.isEmpty()) {\n                for(Iterator it=gossip_rsps.iterator(); it.hasNext();) {\n                    Address dest=(Address)it.next();\n                    msg=new Message(dest, null, null);  // unicast msg\n                    msg.setFlag(Message.OOB);\n                    msg.putHeader(getName(), new PingHeader(PingHeader.GET_MBRS_REQ, null));\n                    down_prot.down(new Event(Event.MSG, msg));\n                }\n            }\n\n            Util.sleep(500);\n        }\n        else {\n            if(initial_hosts != null && initial_hosts.size() > 0) {\n                IpAddress h;\n                List hlist;\n                msg=new Message(null);\n                msg.setFlag(Message.OOB);\n                msg.putHeader(getName(), new PingHeader(PingHeader.GET_MBRS_REQ, null));\n                for(Enumeration en=initial_hosts.elements(); en.hasMoreElements();) {\n                    hlist=(List)en.nextElement();\n                    boolean isMember=false;\n                    for(Enumeration hen=hlist.elements(); hen.hasMoreElements() && !isMember;) {\n                        h=(IpAddress)hen.nextElement();\n                        msg.setDest(h);\n                        if(log.isTraceEnabled())\n                            log.trace(\"[FIND_INITIAL_MBRS] sending PING request to \" + msg.getDest());\n                        down_prot.down(new Event(Event.MSG, msg.copy()));\n                    }\n                }\n            }\n            else {\n                // 1. Mcast GET_MBRS_REQ message\n                hdr=new PingHeader(PingHeader.GET_MBRS_REQ, null);\n                msg=new Message(null);  // mcast msg\n                msg.setFlag(Message.OOB);\n                msg.putHeader(getName(), hdr); // needs to be getName(), so we might get \"MPING\" !\n                sendMcastDiscoveryRequest(msg);\n            }\n        }\n    }","id":55148,"modified_method":"public void sendGetMembersRequest() {\n        Message msg;\n        PingHeader hdr;\n        java.util.List gossip_rsps;\n\n        if(client != null) {\n            gossip_rsps=client.getMembers(group_addr);\n            if(gossip_rsps != null && !gossip_rsps.isEmpty()) {\n                // Set a temporary membership in the UDP layer, so that the following multicast\n                // will be sent to all of them\n                Event view_event=new Event(Event.TMP_VIEW, makeView(new Vector<Address>(gossip_rsps)));\n                down_prot.down(view_event); // needed e.g. by failure detector or UDP\n            }\n            else {\n                //do nothing\n                return;\n            }\n\n            if(!gossip_rsps.isEmpty()) {\n                for(Iterator it=gossip_rsps.iterator(); it.hasNext();) {\n                    Address dest=(Address)it.next();\n                    msg=new Message(dest, null, null);  // unicast msg\n                    msg.setFlag(Message.OOB);\n                    msg.putHeader(getName(), new PingHeader(PingHeader.GET_MBRS_REQ, null));\n                    down_prot.down(new Event(Event.MSG, msg));\n                }\n            }\n\n            Util.sleep(500);\n        }\n        else {\n            if(initial_hosts != null && initial_hosts.size() > 0) {\n                IpAddress h;\n                List hlist;\n                msg=new Message(null);\n                msg.setFlag(Message.OOB);\n                msg.putHeader(getName(), new PingHeader(PingHeader.GET_MBRS_REQ, null));\n                for(Enumeration en=initial_hosts.elements(); en.hasMoreElements();) {\n                    hlist=(List)en.nextElement();\n                    boolean isMember=false;\n                    for(Enumeration hen=hlist.elements(); hen.hasMoreElements() && !isMember;) {\n                        h=(IpAddress)hen.nextElement();\n                        msg.setDest(h);\n                        if(log.isTraceEnabled())\n                            log.trace(\"[FIND_INITIAL_MBRS] sending PING request to \" + msg.getDest());\n                        down_prot.down(new Event(Event.MSG, msg.copy()));\n                    }\n                }\n            }\n            else {\n                // 1. Mcast GET_MBRS_REQ message\n                hdr=new PingHeader(PingHeader.GET_MBRS_REQ, null);\n                msg=new Message(null);  // mcast msg\n                msg.setFlag(Message.OOB);\n                msg.putHeader(getName(), hdr); // needs to be getName(), so we might get \"MPING\" !\n                sendMcastDiscoveryRequest(msg);\n            }\n        }\n    }","commit_id":"bcf5a5877ea0508a15a00b73f5ae7bce98e4f698","url":"https://github.com/belaban/JGroups"},{"original_method":"public void go(String groupname) {\n\n        try {\n            channel.connect(groupname);\n            channel.down(Event.FIND_INITIAL_MBRS_EVT);\n        }\n        catch(Exception e) {\n            System.err.println(\"Ping.go(): \" + e);\n            System.exit(1);\n        }\n    }","id":55149,"modified_method":"public void go(String groupname) {\n\n        try {\n            channel.connect(groupname);\n            List<PingRsp> responses = (List<PingRsp>) channel.downcall(Event.FIND_INITIAL_MBRS_EVT);\n            for(int i=0; i < responses.size(); i++) {\n            \tPingRsp rsp=(PingRsp)responses.get(i);\n                System.out.println(\"Rsp #\" + (i + 1) + \": \" + rsp);\n            }\n\n            if(!responses.isEmpty())\n                verifyCoordinator(responses);\n\n            System.exit(1);\n        }\n        catch(Exception e) {\n            System.err.println(\"Ping.go(): \" + e);\n            System.exit(1);\n        }\n    }","commit_id":"bcf5a5877ea0508a15a00b73f5ae7bce98e4f698","url":"https://github.com/belaban/JGroups"},{"original_method":"public Object up(Event evt) {\n        Vector v;\n        PingRsp rsp;\n\n        if(evt.getType() == Event.FIND_INITIAL_MBRS_OK) {\n            v=(Vector)evt.getArg();\n\n            System.out.println(\"Found \" + v.size() + \" members\");\n            for(int i=0; i < v.size(); i++) {\n                rsp=(PingRsp)v.elementAt(i);\n                System.out.println(\"Rsp #\" + (i + 1) + \": \" + rsp);\n            }\n\n            if(!v.isEmpty())\n                verifyCoordinator(v);\n\n            System.exit(1);\n        }\n        else {\n            if(print_all_events)\n                System.out.println(\">> \" + evt);\n        }\n        return null;\n    }","id":55150,"modified_method":"public Object up(Event evt) {\t\n\t\treturn null;\n\t}","commit_id":"bcf5a5877ea0508a15a00b73f5ae7bce98e4f698","url":"https://github.com/belaban/JGroups"},{"original_method":"static void verifyCoordinator(Vector rsps) {\n        Hashtable votes=new Hashtable();  // coord address, list of members who voted for this guy\n        PingRsp rsp;\n        Vector v;\n        Address coord, mbr;\n\n        for(int i=0; i < rsps.size(); i++) {\n            rsp=(PingRsp)rsps.elementAt(i);\n            coord=rsp.getCoordAddress();\n            mbr=rsp.getAddress();\n            v=(Vector)votes.get(coord);\n            if(v == null) {\n                v=new Vector();\n                votes.put(coord, v);\n            }\n            if(!v.contains(mbr))\n                v.addElement(mbr);\n        }\n\n        System.out.println(\"\");\n        if(votes.size() > 1)\n            System.err.println(\"*** Found more than 1 coordinator !\");\n\n        printVotes(votes);\n    }","id":55151,"modified_method":"static void verifyCoordinator(List<PingRsp> rsps) {\n        Hashtable votes=new Hashtable();  // coord address, list of members who voted for this guy\n        PingRsp rsp;\n        Vector v;\n        Address coord, mbr;\n\n        for(int i=0; i < rsps.size(); i++) {\n            rsp=(PingRsp)rsps.get(i);\n            coord=rsp.getCoordAddress();\n            mbr=rsp.getAddress();\n            v=(Vector)votes.get(coord);\n            if(v == null) {\n                v=new Vector();\n                votes.put(coord, v);\n            }\n            if(!v.contains(mbr))\n                v.addElement(mbr);\n        }\n\n        System.out.println(\"\");\n        if(votes.size() > 1)\n            System.err.println(\"*** Found more than 1 coordinator !\");\n\n        printVotes(votes);\n    }","commit_id":"bcf5a5877ea0508a15a00b73f5ae7bce98e4f698","url":"https://github.com/belaban/JGroups"},{"original_method":"public void sendGetMembersRequest() {\n        Message msg, copy;\n        PingHeader hdr;\n        List tmp_mbrs;\n        Address mbr_addr;\n\n        if(group_addr == null) {\n            if(log.isErrorEnabled()) log.error(\"[FIND_INITIAL_MBRS]: group_addr is null, cannot get mbrship\");\n            up_prot.up(new Event(Event.FIND_INITIAL_MBRS_OK, EMPTY_VECTOR));\n            return;\n        }\n        if(log.isTraceEnabled()) log.trace(\"fetching members from GossipRouter(s)\");\n        tmp_mbrs=gossip_client.getMembers(group_addr);\n        if(tmp_mbrs == null || tmp_mbrs.isEmpty()) {\n            if(log.isErrorEnabled()) log.error(\"[FIND_INITIAL_MBRS]: gossip client found no members\");\n            up_prot.up(new Event(Event.FIND_INITIAL_MBRS_OK, EMPTY_VECTOR));\n            return;\n        }\n        if(log.isTraceEnabled()) log.trace(\"consolidated mbrs from GossipRouter(s) are \" + tmp_mbrs);\n\n        // 1. 'Mcast' GET_MBRS_REQ message\n        hdr=new PingHeader(PingHeader.GET_MBRS_REQ, null);\n        msg=new Message(null);\n        msg.setFlag(Message.OOB);\n        msg.putHeader(name, hdr);\n\n        for(Iterator it=tmp_mbrs.iterator(); it.hasNext();) {\n            mbr_addr=(Address)it.next();\n            copy=msg.copy();\n            copy.setDest(mbr_addr);\n            if(log.isTraceEnabled()) log.trace(\"[FIND_INITIAL_MBRS] sending PING request to \" + copy.getDest());\n            down_prot.down(new Event(Event.MSG, copy));\n        }\n    }","id":55152,"modified_method":"public void sendGetMembersRequest() {\n        Message msg, copy;\n        PingHeader hdr;\n        List tmp_mbrs;\n        Address mbr_addr;\n\n        if(group_addr == null) {\n            if(log.isErrorEnabled()) log.error(\"[FIND_INITIAL_MBRS]: group_addr is null, cannot get mbrship\");            \n            return;\n        }\n        if(log.isTraceEnabled()) log.trace(\"fetching members from GossipRouter(s)\");\n        tmp_mbrs=gossip_client.getMembers(group_addr);\n        if(tmp_mbrs == null || tmp_mbrs.isEmpty()) {\n            if(log.isErrorEnabled()) log.error(\"[FIND_INITIAL_MBRS]: gossip client found no members\");           \n            return;\n        }\n        if(log.isTraceEnabled()) log.trace(\"consolidated mbrs from GossipRouter(s) are \" + tmp_mbrs);\n\n        // 1. 'Mcast' GET_MBRS_REQ message\n        hdr=new PingHeader(PingHeader.GET_MBRS_REQ, null);\n        msg=new Message(null);\n        msg.setFlag(Message.OOB);\n        msg.putHeader(name, hdr);\n\n        for(Iterator it=tmp_mbrs.iterator(); it.hasNext();) {\n            mbr_addr=(Address)it.next();\n            copy=msg.copy();\n            copy.setDest(mbr_addr);\n            if(log.isTraceEnabled()) log.trace(\"[FIND_INITIAL_MBRS] sending PING request to \" + copy.getDest());\n            down_prot.down(new Event(Event.MSG, copy));\n        }\n    }","commit_id":"bcf5a5877ea0508a15a00b73f5ae7bce98e4f698","url":"https://github.com/belaban/JGroups"},{"original_method":"protected void createComponent() throws IllegalAccessException, IOException {\n        // create the component\n        SalesforceComponent component = new SalesforceComponent();\n        final SalesforceEndpointConfig config = new SalesforceEndpointConfig();\n        config.setApiVersion(System.getProperty(\"apiVersion\", SalesforceEndpointConfig.DEFAULT_VERSION));\n        component.setConfig(config);\n        component.setLoginConfig(LoginConfigHelper.getLoginConfig());\n\n        // set DTO package\n        component.setPackages(new String[] {\n            Merchandise__c.class.getPackage().getName()\n        });\n\n        // add it to context\n        context().addComponent(\"salesforce\", component);\n    }","id":55153,"modified_method":"protected void createComponent() throws Exception {\n        // create the component\n        SalesforceComponent component = new SalesforceComponent();\n        final SalesforceEndpointConfig config = new SalesforceEndpointConfig();\n        config.setApiVersion(System.getProperty(\"apiVersion\", SalesforceEndpointConfig.DEFAULT_VERSION));\n        component.setConfig(config);\n        component.setLoginConfig(LoginConfigHelper.getLoginConfig());\n\n        // set DTO package\n        component.setPackages(new String[] {\n            Merchandise__c.class.getPackage().getName()\n        });\n\n        // add it to context\n        context().addComponent(\"salesforce\", component);\n    }","commit_id":"9f0e167b8306e4d15e43a0ec66916085f88e08dd","url":"https://github.com/apache/camel"},{"original_method":"/**\n     * Execute the mojo to generate SObject POJOs\n     *\n     * @throws MojoExecutionException\n     */\n    // CHECKSTYLE:OFF\n    public void execute() throws MojoExecutionException {\n        // initialize velocity to load resources from class loader and use Log4J\n        Properties velocityProperties = new Properties();\n        velocityProperties.setProperty(RuntimeConstants.RESOURCE_LOADER, \"cloader\");\n        velocityProperties.setProperty(\"cloader.resource.loader.class\", ClasspathResourceLoader.class.getName());\n        velocityProperties.setProperty(RuntimeConstants.RUNTIME_LOG_LOGSYSTEM_CLASS, Log4JLogChute.class.getName());\n        velocityProperties.setProperty(RuntimeConstants.RUNTIME_LOG_LOGSYSTEM + \".log4j.logger\", LOG.getName());\n        engine = new VelocityEngine(velocityProperties);\n        engine.init();\n\n        // make sure we can load both templates\n        if (!engine.resourceExists(SOBJECT_POJO_VM) || !engine.resourceExists(SOBJECT_QUERY_RECORDS_VM)) {\n            throw new MojoExecutionException(\"Velocity templates not found\");\n        }\n\n        // connect to Salesforce\n        final HttpClient httpClient = new HttpClient();\n        httpClient.registerListener(RedirectListener.class.getName());\n        httpClient.setConnectTimeout(TIMEOUT);\n        httpClient.setTimeout(TIMEOUT);\n        try {\n            httpClient.start();\n        } catch (Exception e) {\n            throw new MojoExecutionException(\"Error creating HTTP client: \" + e.getMessage(), e);\n        }\n\n        final SalesforceSession session = new SalesforceSession(httpClient,\n                new SalesforceLoginConfig(loginUrl, clientId, clientSecret, userName, password, false));\n\n        getLog().info(\"Salesforce login...\");\n        try {\n            session.login(null);\n        } catch (SalesforceException e) {\n            String msg = \"Salesforce login error \" + e.getMessage();\n            throw new MojoExecutionException(msg, e);\n        }\n        getLog().info(\"Salesforce login successful\");\n\n        // create rest client\n        RestClient restClient;\n        try {\n            restClient = new DefaultRestClient(httpClient,\n                    version, PayloadFormat.JSON, session);\n            // remember to start the active client object\n            ((DefaultRestClient) restClient).start();\n        } catch (Exception e) {\n            final String msg = \"Unexpected exception creating Rest client: \" + e.getMessage();\n            throw new MojoExecutionException(msg, e);\n        }\n\n        try {\n            // use Jackson json\n            final ObjectMapper mapper = new ObjectMapper();\n\n            // call getGlobalObjects to get all SObjects\n            final Set<String> objectNames = new TreeSet<String>();\n            final SyncResponseCallback callback = new SyncResponseCallback();\n            try {\n                getLog().info(\"Getting Salesforce Objects...\");\n                restClient.getGlobalObjects(callback);\n                if (!callback.await(TIMEOUT, TimeUnit.MILLISECONDS)) {\n                    throw new MojoExecutionException(\"Timeout waiting for getGlobalObjects!\");\n                }\n                final SalesforceException ex = callback.getException();\n                if (ex != null) {\n                    throw ex;\n                }\n                final GlobalObjects globalObjects = mapper.readValue(callback.getResponse(),\n                        GlobalObjects.class);\n\n                // create a list of object names\n                for (SObject sObject : globalObjects.getSobjects()) {\n                    objectNames.add(sObject.getName());\n                }\n            } catch (Exception e) {\n                String msg = \"Error getting global Objects \" + e.getMessage();\n                throw new MojoExecutionException(msg, e);\n            }\n\n            // check if we are generating POJOs for all objects or not\n            if ((includes != null && includes.length > 0)\n                    || (excludes != null && excludes.length > 0)\n                    || (includePattern != null && !includePattern.trim().isEmpty())\n                    || (excludePattern != null && !excludePattern.trim().isEmpty())) {\n\n                getLog().info(\"Looking for matching Object names...\");\n                // create a list of accepted names\n                final Set<String> includedNames = new HashSet<String>();\n                if (includes != null && includes.length > 0) {\n                    for (String name : includes) {\n                        name = name.trim();\n                        if (name.isEmpty()) {\n                            throw new MojoExecutionException(\"Invalid empty name in includes\");\n                        }\n                        includedNames.add(name);\n                    }\n                }\n\n                final Set<String> excludedNames = new HashSet<String>();\n                if (excludes != null && excludes.length > 0) {\n                    for (String name : excludes) {\n                        name = name.trim();\n                        if (name.isEmpty()) {\n                            throw new MojoExecutionException(\"Invalid empty name in excludes\");\n                        }\n                        excludedNames.add(name);\n                    }\n                }\n\n                // check whether a pattern is in effect\n                Pattern incPattern;\n                if (includePattern != null && !includePattern.trim().isEmpty()) {\n                    incPattern = Pattern.compile(includePattern.trim());\n                } else if (includedNames.isEmpty()) {\n                    // include everything by default if no include names are set\n                    incPattern = Pattern.compile(\".*\");\n                } else {\n                    // include nothing by default if include names are set\n                    incPattern = Pattern.compile(\"^$\");\n                }\n\n                // check whether a pattern is in effect\n                Pattern excPattern;\n                if (excludePattern != null && !excludePattern.trim().isEmpty()) {\n                    excPattern = Pattern.compile(excludePattern.trim());\n                } else {\n                    // exclude nothing by default\n                    excPattern = Pattern.compile(\"^$\");\n                }\n\n                final Set<String> acceptedNames = new HashSet<String>();\n                for (String name : objectNames) {\n                    // name is included, or matches include pattern\n                    // and is not excluded and does not match exclude pattern\n                    if ((includedNames.contains(name) || incPattern.matcher(name).matches())\n                            && !excludedNames.contains(name) && !excPattern.matcher(name).matches()) {\n                        acceptedNames.add(name);\n                    }\n                }\n                objectNames.clear();\n                objectNames.addAll(acceptedNames);\n\n                getLog().info(String.format(\"Found %s matching Objects\", objectNames.size()));\n            } else {\n                getLog().warn(String.format(\"Generating Java classes for all %s Objects, this may take a while...\", objectNames.size()));\n            }\n\n            // for every accepted name, get SObject description\n            final Set<SObjectDescription> descriptions = new HashSet<SObjectDescription>();\n\n            getLog().info(\"Retrieving Object descriptions...\");\n            for (String name : objectNames) {\n                try {\n                        callback.reset();\n                        restClient.getDescription(name, callback);\n                        if (!callback.await(TIMEOUT, TimeUnit.MILLISECONDS)) {\n                            throw new MojoExecutionException(\"Timeout waiting for getDescription for sObject \" + name);\n                        }\n                        final SalesforceException ex = callback.getException();\n                        if (ex != null) {\n                            throw ex;\n                        }\n                        descriptions.add(mapper.readValue(callback.getResponse(), SObjectDescription.class));\n                } catch (Exception e) {\n                    String msg = \"Error getting SObject description for '\" + name + \"': \" + e.getMessage();\n                    throw new MojoExecutionException(msg, e);\n                }\n            }\n\n            // create package directory\n            // validate package name\n            if (!packageName.matches(PACKAGE_NAME_PATTERN)) {\n                throw new MojoExecutionException(\"Invalid package name \" + packageName);\n            }\n            final File pkgDir = new File(outputDirectory, packageName.trim().replace('.', File.separatorChar));\n            if (!pkgDir.exists()) {\n                if (!pkgDir.mkdirs()) {\n                    throw new MojoExecutionException(\"Unable to create \" + pkgDir);\n                }\n            }\n\n            getLog().info(\"Generating Java Classes...\");\n            // generate POJOs for every object description\n            final GeneratorUtility utility = new GeneratorUtility();\n            // should we provide a flag to control timestamp generation?\n            final String generatedDate = new Date().toString();\n            for (SObjectDescription description : descriptions) {\n                processDescription(pkgDir, description, utility, generatedDate);\n            }\n            getLog().info(String.format(\"Successfully generated %s Java Classes\", descriptions.size() * 2));\n\n        } finally {\n            // remember to stop the client\n            try {\n                ((DefaultRestClient) restClient).stop();\n            } catch (Exception ignore) {\n            }\n\n            // Salesforce session stop\n            try {\n                session.stop();\n            } catch (Exception ignore) {\n            }\n\n            // release HttpConnections\n            try {\n                httpClient.stop();\n            } catch (Exception ignore) {\n            }\n        }\n    }","id":55154,"modified_method":"/**\n     * Execute the mojo to generate SObject DTOs\n     *\n     * @throws MojoExecutionException\n     */\n    public void execute() throws MojoExecutionException {\n        // initialize velocity to load resources from class loader and use Log4J\n        Properties velocityProperties = new Properties();\n        velocityProperties.setProperty(RuntimeConstants.RESOURCE_LOADER, \"cloader\");\n        velocityProperties.setProperty(\"cloader.resource.loader.class\", ClasspathResourceLoader.class.getName());\n        velocityProperties.setProperty(RuntimeConstants.RUNTIME_LOG_LOGSYSTEM_CLASS, Log4JLogChute.class.getName());\n        velocityProperties.setProperty(RuntimeConstants.RUNTIME_LOG_LOGSYSTEM + \".log4j.logger\", LOG.getName());\n        engine = new VelocityEngine(velocityProperties);\n        engine.init();\n\n        // make sure we can load both templates\n        if (!engine.resourceExists(SOBJECT_POJO_VM) || !engine.resourceExists(SOBJECT_QUERY_RECORDS_VM)) {\n            throw new MojoExecutionException(\"Velocity templates not found\");\n        }\n\n        // connect to Salesforce\n        final HttpClient httpClient = createHttpClient();\n\n        final SalesforceSession session = new SalesforceSession(httpClient,\n                new SalesforceLoginConfig(loginUrl, clientId, clientSecret, userName, password, false));\n\n        getLog().info(\"Salesforce login...\");\n        try {\n            session.login(null);\n        } catch (SalesforceException e) {\n            String msg = \"Salesforce login error \" + e.getMessage();\n            throw new MojoExecutionException(msg, e);\n        }\n        getLog().info(\"Salesforce login successful\");\n\n        // create rest client\n        RestClient restClient;\n        try {\n            restClient = new DefaultRestClient(httpClient,\n                    version, PayloadFormat.JSON, session);\n            // remember to start the active client object\n            ((DefaultRestClient) restClient).start();\n        } catch (Exception e) {\n            final String msg = \"Unexpected exception creating Rest client: \" + e.getMessage();\n            throw new MojoExecutionException(msg, e);\n        }\n\n        try {\n            // use Jackson json\n            final ObjectMapper mapper = new ObjectMapper();\n\n            // call getGlobalObjects to get all SObjects\n            final Set<String> objectNames = new TreeSet<String>();\n            final SyncResponseCallback callback = new SyncResponseCallback();\n            try {\n                getLog().info(\"Getting Salesforce Objects...\");\n                restClient.getGlobalObjects(callback);\n                if (!callback.await(responseTimeout, TimeUnit.MILLISECONDS)) {\n                    throw new MojoExecutionException(\"Timeout waiting for getGlobalObjects!\");\n                }\n                final SalesforceException ex = callback.getException();\n                if (ex != null) {\n                    throw ex;\n                }\n                final GlobalObjects globalObjects = mapper.readValue(callback.getResponse(),\n                        GlobalObjects.class);\n\n                // create a list of object names\n                for (SObject sObject : globalObjects.getSobjects()) {\n                    objectNames.add(sObject.getName());\n                }\n            } catch (Exception e) {\n                String msg = \"Error getting global Objects \" + e.getMessage();\n                throw new MojoExecutionException(msg, e);\n            }\n\n            // check if we are generating POJOs for all objects or not\n            if ((includes != null && includes.length > 0)\n                    || (excludes != null && excludes.length > 0)\n                    || ObjectHelper.isNotEmpty(includePattern)\n                    || ObjectHelper.isNotEmpty(excludePattern)) {\n\n                filterObjectNames(objectNames);\n\n            } else {\n                getLog().warn(String.format(\"Generating Java classes for all %s Objects, this may take a while...\", objectNames.size()));\n            }\n\n            // for every accepted name, get SObject description\n            final Set<SObjectDescription> descriptions = new HashSet<SObjectDescription>();\n\n            getLog().info(\"Retrieving Object descriptions...\");\n            for (String name : objectNames) {\n                try {\n                    callback.reset();\n                    restClient.getDescription(name, callback);\n                    if (!callback.await(responseTimeout, TimeUnit.MILLISECONDS)) {\n                        throw new MojoExecutionException(\"Timeout waiting for getDescription for sObject \" + name);\n                    }\n                    final SalesforceException ex = callback.getException();\n                    if (ex != null) {\n                        throw ex;\n                    }\n                    descriptions.add(mapper.readValue(callback.getResponse(), SObjectDescription.class));\n                } catch (Exception e) {\n                    String msg = \"Error getting SObject description for '\" + name + \"': \" + e.getMessage();\n                    throw new MojoExecutionException(msg, e);\n                }\n            }\n\n            // create package directory\n            // validate package name\n            if (!packageName.matches(PACKAGE_NAME_PATTERN)) {\n                throw new MojoExecutionException(\"Invalid package name \" + packageName);\n            }\n            final File pkgDir = new File(outputDirectory, packageName.trim().replace('.', File.separatorChar));\n            if (!pkgDir.exists()) {\n                if (!pkgDir.mkdirs()) {\n                    throw new MojoExecutionException(\"Unable to create \" + pkgDir);\n                }\n            }\n\n            getLog().info(\"Generating Java Classes...\");\n            // generate POJOs for every object description\n            final GeneratorUtility utility = new GeneratorUtility();\n            // should we provide a flag to control timestamp generation?\n            final String generatedDate = new Date().toString();\n            for (SObjectDescription description : descriptions) {\n                processDescription(pkgDir, description, utility, generatedDate);\n            }\n            getLog().info(String.format(\"Successfully generated %s Java Classes\", descriptions.size() * 2));\n\n        } finally {\n            // remember to stop the client\n            try {\n                ((DefaultRestClient) restClient).stop();\n            } catch (Exception ignore) {\n            }\n\n            // Salesforce session stop\n            try {\n                session.stop();\n            } catch (Exception ignore) {\n            }\n\n            // release HttpConnections\n            try {\n                httpClient.stop();\n            } catch (Exception ignore) {\n            }\n        }\n    }","commit_id":"9f0e167b8306e4d15e43a0ec66916085f88e08dd","url":"https://github.com/apache/camel"},{"original_method":"@Test\n    public void testExecute() throws Exception {\n        CamelSalesforceMojo mojo = new CamelSalesforceMojo();\n\n        mojo.setLog(new SystemStreamLog());\n\n        // set login properties\n        setLoginProperties(mojo);\n\n        // set defaults\n        mojo.version = System.getProperty(\"apiVersion\", SalesforceEndpointConfig.DEFAULT_VERSION);\n        mojo.loginUrl = System.getProperty(\"loginUrl\", SalesforceLoginConfig.DEFAULT_LOGIN_URL);\n        mojo.outputDirectory = new File(\"target/generated-sources/camel-salesforce\");\n        mojo.packageName = \"org.apache.camel.salesforce.dto\";\n\n        // set code generation properties\n        mojo.includePattern = \"(.*__c)|(PushTopic)|(Document)\";\n\n        // remove generated code directory\n        if (mojo.outputDirectory.exists()) {\n            // remove old files\n            for (File file : mojo.outputDirectory.listFiles()) {\n                file.delete();\n            }\n            mojo.outputDirectory.delete();\n        }\n\n        // generate code\n        mojo.execute();\n\n        // validate generated code\n        // check that it was generated\n        Assert.assertTrue(\"Output directory was not created\", mojo.outputDirectory.exists());\n\n        // TODO check that the generated code compiles\n    }","id":55155,"modified_method":"@Test\n    public void testExecute() throws Exception {\n        CamelSalesforceMojo mojo = createMojo();\n\n        // generate code\n        mojo.execute();\n\n        // validate generated code\n        // check that it was generated\n        Assert.assertTrue(\"Output directory was not created\", mojo.outputDirectory.exists());\n\n        // TODO check that the generated code compiles\n    }","commit_id":"9f0e167b8306e4d15e43a0ec66916085f88e08dd","url":"https://github.com/apache/camel"},{"original_method":"protected Endpoint createEndpoint(String uri, String remaining, Map<String, Object> parameters) throws Exception {\n        // get Operation from remaining URI\n        OperationName operationName = null;\n        String topicName = null;\n        String apexUrl = null;\n        try {\n            LOG.debug(\"Creating endpoint for: {}\", remaining);\n            if (remaining.startsWith(APEX_CALL_PREFIX)) {\n                // extract APEX URL\n                apexUrl = remaining.substring(APEX_CALL_PREFIX.length());\n                remaining = OperationName.APEX_CALL.value();\n            }\n            operationName = OperationName.fromValue(remaining);\n        } catch (IllegalArgumentException ex) {\n            // if its not an operation name, treat is as topic name for consumer endpoints\n            topicName = remaining;\n        }\n\n        // create endpoint config\n        if (config == null) {\n            config = new SalesforceEndpointConfig();\n        }\n        if (config.getHttpClient() == null) {\n            // set the component's httpClient as default\n            config.setHttpClient(httpClient);\n        }\n\n        // create a deep copy and map parameters\n        final SalesforceEndpointConfig copy = config.copy();\n        setProperties(copy, parameters);\n\n        // set apexUrl in endpoint config\n        if (apexUrl != null) {\n            copy.setApexUrl(apexUrl);\n        }\n\n        final SalesforceEndpoint endpoint = new SalesforceEndpoint(uri, this, copy,\n                operationName, topicName);\n\n        // map remaining parameters to endpoint (specifically, synchronous)\n        setProperties(endpoint, parameters);\n\n        // if operation is APEX call, map remaining parameters to query params\n        if (operationName == OperationName.APEX_CALL && !parameters.isEmpty()) {\n            Map<String, Object> queryParams = new HashMap<String, Object>(parameters);\n            parameters.clear();\n\n            queryParams.putAll(copy.getApexQueryParams());\n            copy.setApexQueryParams(queryParams);\n        }\n\n        return endpoint;\n    }","id":55156,"modified_method":"protected Endpoint createEndpoint(String uri, String remaining, Map<String, Object> parameters) throws Exception {\n        // get Operation from remaining URI\n        OperationName operationName = null;\n        String topicName = null;\n        String apexUrl = null;\n        try {\n            LOG.debug(\"Creating endpoint for: {}\", remaining);\n            if (remaining.startsWith(APEX_CALL_PREFIX)) {\n                // extract APEX URL\n                apexUrl = remaining.substring(APEX_CALL_PREFIX.length());\n                remaining = OperationName.APEX_CALL.value();\n            }\n            operationName = OperationName.fromValue(remaining);\n        } catch (IllegalArgumentException ex) {\n            // if its not an operation name, treat is as topic name for consumer endpoints\n            topicName = remaining;\n        }\n\n        // create endpoint config\n        if (config == null) {\n            config = new SalesforceEndpointConfig();\n        }\n        if (config.getHttpClient() == null) {\n            // set the component's httpClient as default\n            config.setHttpClient(httpClient);\n        }\n\n        // create a deep copy and map parameters\n        final SalesforceEndpointConfig copy = config.copy();\n        setProperties(copy, parameters);\n\n        // set apexUrl in endpoint config\n        if (apexUrl != null) {\n            copy.setApexUrl(apexUrl);\n        }\n\n        final SalesforceEndpoint endpoint = new SalesforceEndpoint(uri, this, copy,\n                operationName, topicName);\n\n        // map remaining parameters to endpoint (specifically, synchronous)\n        setProperties(endpoint, parameters);\n\n        // if operation is APEX call, map remaining parameters to query params\n        if (operationName == OperationName.APEX_CALL && !parameters.isEmpty()) {\n            Map<String, Object> queryParams = new HashMap<String, Object>(copy.getApexQueryParams());\n\n            // override component params with endpoint params\n            queryParams.putAll(parameters);\n            parameters.clear();\n\n            copy.setApexQueryParams(queryParams);\n        }\n\n        return endpoint;\n    }","commit_id":"9f0e167b8306e4d15e43a0ec66916085f88e08dd","url":"https://github.com/apache/camel"},{"original_method":"@Override\n    protected void doStart() throws Exception {\n        // validate properties\n        ObjectHelper.notNull(loginConfig, \"loginConfig\");\n\n        // create a Jetty HttpClient if not already set\n        if (null == httpClient) {\n            if (config != null && config.getHttpClient() != null) {\n                httpClient = config.getHttpClient();\n            } else {\n                final SslContextFactory sslContextFactory = new SslContextFactory();\n                final SSLContextParameters contextParameters =\n                    sslContextParameters != null ? sslContextParameters : new SSLContextParameters();\n                sslContextFactory.setSslContext(contextParameters.createSSLContext());\n                httpClient = new HttpClient(sslContextFactory);\n                httpClient.setConnectorType(HttpClient.CONNECTOR_SELECT_CHANNEL);\n                httpClient.setMaxConnectionsPerAddress(MAX_CONNECTIONS_PER_ADDRESS);\n                httpClient.setConnectTimeout(CONNECTION_TIMEOUT);\n                httpClient.setTimeout(RESPONSE_TIMEOUT);\n            }\n        }\n\n        // add redirect listener to handle Salesforce redirects\n        // this is ok to do since the RedirectListener is in the same classloader as Jetty client\n        String listenerClass = RedirectListener.class.getName();\n        if (httpClient.getRegisteredListeners() == null\n                || !httpClient.getRegisteredListeners().contains(listenerClass)) {\n            httpClient.registerListener(listenerClass);\n        }\n        // SalesforceSecurityListener can't be registered the same way\n        // since Jetty HttpClient's Class.forName() can't see it\n\n        // start the Jetty client to initialize thread pool, etc.\n        httpClient.start();\n\n        // support restarts\n        if (null == this.session) {\n            this.session = new SalesforceSession(httpClient, loginConfig);\n        }\n\n        // login at startup if lazyLogin is disabled\n        if (!loginConfig.isLazyLogin()) {\n            ServiceHelper.startService(session);\n        }\n\n        if (packages != null && packages.length > 0) {\n            // parse the packages to create SObject name to class map\n            classMap = parsePackages();\n            LOG.info(\"Found {} generated classes in packages: {}\", classMap.size(), Arrays.asList(packages));\n        } else {\n            // use an empty map to avoid NPEs later\n            LOG.warn(\"Missing property packages, getSObject* operations will NOT work\");\n            classMap = new HashMap<String, Class<?>>(0);\n        }\n\n        if (subscriptionHelper != null) {\n            ServiceHelper.startService(subscriptionHelper);\n        }\n    }","id":55157,"modified_method":"@Override\n    protected void doStart() throws Exception {\n        // validate properties\n        ObjectHelper.notNull(loginConfig, \"loginConfig\");\n\n        // create a Jetty HttpClient if not already set\n        if (null == httpClient) {\n            if (config != null && config.getHttpClient() != null) {\n                httpClient = config.getHttpClient();\n            } else {\n                httpClient = new HttpClient();\n                // default settings\n                httpClient.setConnectorType(HttpClient.CONNECTOR_SELECT_CHANNEL);\n                httpClient.setConnectTimeout(CONNECTION_TIMEOUT);\n                httpClient.setTimeout(RESPONSE_TIMEOUT);\n            }\n        }\n\n        // set ssl context parameters\n        final SSLContextParameters contextParameters = sslContextParameters != null\n            ? sslContextParameters : new SSLContextParameters();\n        final SslContextFactory sslContextFactory = httpClient.getSslContextFactory();\n        sslContextFactory.setSslContext(contextParameters.createSSLContext());\n\n        // set HTTP client parameters\n        if (httpClientProperties != null && !httpClientProperties.isEmpty()) {\n            IntrospectionSupport.setProperties(getCamelContext().getTypeConverter(),\n                httpClient, new HashMap<String, Object>(httpClientProperties));\n        }\n\n        // set HTTP proxy settings\n        if (this.httpProxyHost != null && httpProxyPort != null) {\n            httpClient.setProxy(new Address(this.httpProxyHost, this.httpProxyPort));\n        }\n        if (this.httpProxyUsername != null && httpProxyPassword != null) {\n            httpClient.setProxyAuthentication(new ProxyAuthorization(this.httpProxyUsername, this.httpProxyPassword));\n        }\n\n        // add redirect listener to handle Salesforce redirects\n        // this is ok to do since the RedirectListener is in the same classloader as Jetty client\n        String listenerClass = RedirectListener.class.getName();\n        if (httpClient.getRegisteredListeners() == null\n                || !httpClient.getRegisteredListeners().contains(listenerClass)) {\n            httpClient.registerListener(listenerClass);\n        }\n        // SalesforceSecurityListener can't be registered the same way\n        // since Jetty HttpClient's Class.forName() can't see it\n\n        // start the Jetty client to initialize thread pool, etc.\n        httpClient.start();\n\n        // support restarts\n        if (null == this.session) {\n            this.session = new SalesforceSession(httpClient, loginConfig);\n        }\n\n        // login at startup if lazyLogin is disabled\n        if (!loginConfig.isLazyLogin()) {\n            ServiceHelper.startService(session);\n        }\n\n        if (packages != null && packages.length > 0) {\n            // parse the packages to create SObject name to class map\n            classMap = parsePackages();\n            LOG.info(\"Found {} generated classes in packages: {}\", classMap.size(), Arrays.asList(packages));\n        } else {\n            // use an empty map to avoid NPEs later\n            LOG.warn(\"Missing property packages, getSObject* operations will NOT work\");\n            classMap = new HashMap<String, Class<?>>(0);\n        }\n\n        if (subscriptionHelper != null) {\n            ServiceHelper.startService(subscriptionHelper);\n        }\n    }","commit_id":"9f0e167b8306e4d15e43a0ec66916085f88e08dd","url":"https://github.com/apache/camel"},{"original_method":"@Override\n    protected void doStop() throws Exception {\n        if (classMap != null) {\n            classMap.clear();\n        }\n\n        try {\n            if (subscriptionHelper != null) {\n                // shutdown all streaming connections\n                // note that this is done in the component, and not in consumer\n                ServiceHelper.stopService(subscriptionHelper);\n                subscriptionHelper = null;\n            }\n            if (session != null && session.getAccessToken() != null) {\n                try {\n                    // logout of Salesforce\n                    ServiceHelper.stopService(session);\n                } catch (SalesforceException ignored) {\n                }\n            }\n        } finally {\n            if (httpClient != null) {\n                // shutdown http client connections\n                httpClient.stop();\n                httpClient.destroy();\n                httpClient = null;\n            }\n        }\n    }","id":55158,"modified_method":"@Override\n    protected void doStop() throws Exception {\n        if (classMap != null) {\n            classMap.clear();\n        }\n\n        try {\n            if (subscriptionHelper != null) {\n                // shutdown all streaming connections\n                // note that this is done in the component, and not in consumer\n                ServiceHelper.stopService(subscriptionHelper);\n                subscriptionHelper = null;\n            }\n            if (session != null && session.getAccessToken() != null) {\n                try {\n                    // logout of Salesforce\n                    ServiceHelper.stopService(session);\n                } catch (SalesforceException ignored) {\n                }\n            }\n        } finally {\n            if (httpClient != null) {\n                // shutdown http client connections\n                httpClient.stop();\n                // destroy http client if it was created by the component\n                if (config.getHttpClient() == null) {\n                    httpClient.destroy();\n                }\n                httpClient = null;\n            }\n        }\n    }","commit_id":"9f0e167b8306e4d15e43a0ec66916085f88e08dd","url":"https://github.com/apache/camel"},{"original_method":"public Result execute(Result previousResult, int nr, Repository rep, Job parentJob)\n\t{\n\t\tLogWriter log = LogWriter.getInstance();\n\n        Result result = previousResult;\n\t\tresult.setResult( false );\n\t\tlong filesput = 0;\n\n\n\t\tlog.logDetailed(toString(), Messages.getString(\"JobFTPPUT.Log.Starting\"));\n        \n        // String substitution..\n        String realServerName      = environmentSubstitute(serverName);\n        String realServerPort      = environmentSubstitute(serverPort);\n        String realUsername        = environmentSubstitute(userName);\n        String realPassword        = environmentSubstitute(password);\n        String realRemoteDirectory = environmentSubstitute(sftpDirectory);\n        String realWildcard        = environmentSubstitute(wildcard);\n        String realLocalDirectory  = environmentSubstitute(targetDirectory);\n        \n        \n        FTPClient ftpclient=null;\n        \n\t\ttry\n\t\t{\n\t\t\t// Create ftp client to host:port ...\n\t\t\tftpclient = new FTPClient();\n            ftpclient.setRemoteAddr(InetAddress.getByName(realServerName));\n            ftpclient.setRemotePort(Const.toInt(realServerPort, 21));\n            \n            if (log.isDetailed()) log.logDetailed(toString(), Messages.getString(\"JobFTPPUT.Log.OpenConnection\",realServerName));\n\n\t\t\t// set activeConnection connectmode ...\n            if (activeConnection)\n            {\n                ftpclient.setConnectMode(FTPConnectMode.ACTIVE);\n                if (log.isDetailed()) log.logDetailed(toString(), Messages.getString(\"JobFTPPUT.Log.SetActiveConnection\"));\n            }\n            else\n            {\n                ftpclient.setConnectMode(FTPConnectMode.PASV);\n                if (log.isDetailed()) log.logDetailed(toString(), Messages.getString(\"JobFTPPUT.Log.SetPassiveConnection\"));\n            }\n\t\t\t\n        \t// Set the timeout\n\t\t\tftpclient.setTimeout(timeout);\n\t\t\tif (log.isDetailed()) log.logDetailed(toString(), Messages.getString(\"JobFTPPUT.Log.SetTimeout\",\"\"+timeout));\n\t\t\t\n\t\t\tftpclient.setControlEncoding(controlEncoding);\n\t\t\tif (log.isDetailed()) log.logDetailed(toString(), Messages.getString(\"JobFTPPUT.Log.SetEncoding\",controlEncoding));\n\n\t\t\t// login to ftp host ...\n            ftpclient.connect();\n\t\t\tftpclient.login(realUsername, realPassword);\n\t\t\t\t\n\t\t\t\n\t\t\t//  Remove password from logging, you don't know where it ends up.\n\t\t\tif (log.isDetailed()) log.logDetailed(toString(), Messages.getString(\"JobFTPPUT.Log.Logged\",realUsername));\n\n\t\t\t// move to spool dir ...\n\t\t\tif (!Const.isEmpty(realRemoteDirectory))\n\t\t\t{\n\t\t\t\tftpclient.chdir(realRemoteDirectory);\n\t\t\t\tif (log.isDetailed()) log.logDetailed(toString(), Messages.getString(\"JobFTPPUT.Log.ChangedDirectory\",realRemoteDirectory));\n\t\t\t}\n\t\t\t\n\t\t\t// Get all the files in the local directory...\n\t\t\tint x = 0;\n\t\t\t\n\t\t\t// Joerg:  ..that's for Java5 \n\t\t\t// ArrayList<String> myFileList = new ArrayList<String>();\n\t\t\tArrayList<String> myFileList = new ArrayList<String>();\n\t\t\t\n\t\t\t\n\t\t\tFile localFiles = new File(realLocalDirectory);\n\t\t\tFile[] children = localFiles.listFiles();\n\t\t\tfor (int i=0; i<children.length; i++) {\n\t            // Get filename of file or directory\n\t\t\t\tif (!children[i].isDirectory()) {\n\t\t\t\t\t// myFileList.add(children[i].getAbsolutePath());\n\t\t\t\t\tmyFileList.add(children[i].getName());\n\t\t\t\t\tx = x+1;\n\t\t\t\t\t\n\t\t\t\t}\n\t        } // end for\n\t\t\t\n\t\t\t// Joerg:  ..that's for Java5\n\t\t\t// String[] filelist = myFileList.toArray(new String[myFileList.size()]);\n\t\t\t\n\t\t\tString[] filelist = new String[myFileList.size()];\n\t\t\tmyFileList.toArray(filelist);\n\t\t\t\n\t\t\t\n\t\t\tif (log.isDetailed()) log.logDetailed(toString(), Messages.getString(\"JobFTPPUT.Log.FoundFileLocalDirectory\",\"\"+filelist.length,realLocalDirectory));\n\t\t\t\n\t\t\tPattern pattern = null;\n\t\t\tif (!Const.isEmpty(realWildcard)) \n\t\t\t{\n\t\t\t\tpattern = Pattern.compile(realWildcard);\n\t\t\t\t\n\t\t\t} // end if\n\t\t\t\n\t\t\t\n\t\t\t// Get the files in the list and execute ftp.put() for each file\n\t\t\tfor (int i=0;i<filelist.length && !parentJob.isStopped();i++)\n\t\t\t{\n\t\t\t\tboolean getIt = true;\n\t\t\t\t\n\t\t\t\t// First see if the file matches the regular expression!\n\t\t\t\tif (pattern!=null)\n\t\t\t\t{\n\t\t\t\t\tMatcher matcher = pattern.matcher(filelist[i]);\n\t\t\t\t\tgetIt = matcher.matches();\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif (getIt)\n\t\t\t\t{\n\t\t\t\t\tif (!ftpclient.exists(filelist[i]) || (ftpclient.exists(filelist[i]) && !onlyPuttingNewFiles))\n\t\t\t\t\t{\n\t\t\t\t\t\tif (log.isDebug()) log.logDebug(toString(), Messages.getString(\"JobFTPPUT.Log.PuttingFileToRemoteDirectory\",filelist[i],realRemoteDirectory));\n\t\t\t\t\t\t\n\t\t\t\t\t\tString localFilename = realLocalDirectory+Const.FILE_SEPARATOR+filelist[i]; \n\t\t\t\t\t\tftpclient.put(localFilename, filelist[i]);\n\t\t\t\t\t\t\n\t\t\t\t\t\tfilesput++;\n\t\t\t\t\t\n\t\t\t\t\t\t// Delete the file if this is needed!\n\t\t\t\t\t\tif (remove) \n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tchildren[i].delete();\n\t\t\t\t\t\t\tif (log.isDetailed()) log.logDetailed(toString(), Messages.getString(\"JobFTPPUT.Log.DeletedFile\",filelist[i]));\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\n\t\t\tresult.setResult( true );\n\t\t\tif (log.isDetailed()) log.logDebug(toString(), Messages.getString(\"JobFTPPUT.Log.WeHavePut\",\"\"+filesput));\n\t\t}\n\t\tcatch(Exception e)\n\t\t{\n\t\t\tresult.setNrErrors(1);\n\t\t\tlog.logError(toString(), Messages.getString(\"JobFTPPUT.Log.ErrorPuttingFiles\",e.getMessage()));\n            log.logError(toString(), Const.getStackTracker(e));\n\t\t} finally \n\t\t{\n\t\t\t if (ftpclient!=null && ftpclient.connected())\n\t            {\n\t                try\n\t                {\n\t                    ftpclient.quit();\n\t                }\n\t                catch(Exception e)\n\t                {\n\t                    log.logError(toString(), Messages.getString(\"JobFTPPUT.Log.ErrorQuitingFTP\",e.getMessage()));\n\t                }\n\t            }\n\t\t}\n\t\t\n\t\treturn result;\n\t}","id":55159,"modified_method":"public Result execute(Result previousResult, int nr, Repository rep, Job parentJob)\n\t{\n\t\tLogWriter log = LogWriter.getInstance();\n\n        Result result = previousResult;\n\t\tresult.setResult( false );\n\t\tlong filesput = 0;\n\n\n\t\tlog.logDetailed(toString(), Messages.getString(\"JobFTPPUT.Log.Starting\"));\n        \n        // String substitution..\n        String realServerName      = environmentSubstitute(serverName);\n        String realServerPort      = environmentSubstitute(serverPort);\n        String realUsername        = environmentSubstitute(userName);\n        String realPassword        = environmentSubstitute(password);\n        String realRemoteDirectory = environmentSubstitute(remoteDirectory);\n        String realWildcard        = environmentSubstitute(wildcard);\n        String realLocalDirectory  = environmentSubstitute(localDirectory);\n        \n        \n        FTPClient ftpclient=null;\n        \n\t\ttry\n\t\t{\n\t\t\t// Create ftp client to host:port ...\n\t\t\tftpclient = new FTPClient();\n            ftpclient.setRemoteAddr(InetAddress.getByName(realServerName));\n            ftpclient.setRemotePort(Const.toInt(realServerPort, 21));\n            \n            if (log.isDetailed()) log.logDetailed(toString(), Messages.getString(\"JobFTPPUT.Log.OpenConnection\",realServerName));\n\n\t\t\t// set activeConnection connectmode ...\n            if (activeConnection)\n            {\n                ftpclient.setConnectMode(FTPConnectMode.ACTIVE);\n                if (log.isDetailed()) log.logDetailed(toString(), Messages.getString(\"JobFTPPUT.Log.SetActiveConnection\"));\n            }\n            else\n            {\n                ftpclient.setConnectMode(FTPConnectMode.PASV);\n                if (log.isDetailed()) log.logDetailed(toString(), Messages.getString(\"JobFTPPUT.Log.SetPassiveConnection\"));\n            }\n\t\t\t\n        \t// Set the timeout\n            if (timeout>0) \n            {\n\t\t\t\tftpclient.setTimeout(timeout);\n\t\t\t\tif (log.isDetailed()) log.logDetailed(toString(), Messages.getString(\"JobFTPPUT.Log.SetTimeout\",\"\"+timeout));\n            }\n            \n\t\t\tftpclient.setControlEncoding(controlEncoding);\n\t\t\tif (log.isDetailed()) log.logDetailed(toString(), Messages.getString(\"JobFTPPUT.Log.SetEncoding\",controlEncoding));\n\n\t\t\t// login to ftp host ...\n            ftpclient.connect();\n\t\t\tftpclient.login(realUsername, realPassword);\n\t\t\t\t\n            // set BINARY\n            if (binaryMode) \n            {\n            \tftpclient.setType(FTPTransferType.BINARY);\n            \tif (log.isDetailed()) log.logDetailed(toString(), Messages.getString(\"JobFTPPUT.Log.BinaryMode\"));\n            }\n\t\t\t\n\t\t\t//  Remove password from logging, you don't know where it ends up.\n\t\t\tif (log.isDetailed()) log.logDetailed(toString(), Messages.getString(\"JobFTPPUT.Log.Logged\",realUsername));\n\n\t\t\t// move to spool dir ...\n\t\t\tif (!Const.isEmpty(realRemoteDirectory))\n\t\t\t{\n\t\t\t\tftpclient.chdir(realRemoteDirectory);\n\t\t\t\tif (log.isDetailed()) log.logDetailed(toString(), Messages.getString(\"JobFTPPUT.Log.ChangedDirectory\",realRemoteDirectory));\n\t\t\t}\n\t\t\t\n\t\t\t// Get all the files in the local directory...\n\t\t\tint x = 0;\n\t\t\t\n\t\t\t// Joerg:  ..that's for Java5 \n\t\t\t// ArrayList<String> myFileList = new ArrayList<String>();\n\t\t\tArrayList<String> myFileList = new ArrayList<String>();\n\t\t\t\n\t\t\t\n\t\t\tFile localFiles = new File(realLocalDirectory);\n\t\t\tFile[] children = localFiles.listFiles();\n\t\t\tfor (int i=0; i<children.length; i++) {\n\t            // Get filename of file or directory\n\t\t\t\tif (!children[i].isDirectory()) {\n\t\t\t\t\t// myFileList.add(children[i].getAbsolutePath());\n\t\t\t\t\tmyFileList.add(children[i].getName());\n\t\t\t\t\tx = x+1;\n\t\t\t\t\t\n\t\t\t\t}\n\t        } // end for\n\t\t\t\n\t\t\t// Joerg:  ..that's for Java5\n\t\t\t// String[] filelist = myFileList.toArray(new String[myFileList.size()]);\n\t\t\t\n\t\t\tString[] filelist = new String[myFileList.size()];\n\t\t\tmyFileList.toArray(filelist);\n\t\t\t\n\t\t\t\n\t\t\tif (log.isDetailed()) log.logDetailed(toString(), Messages.getString(\"JobFTPPUT.Log.FoundFileLocalDirectory\",\"\"+filelist.length,realLocalDirectory));\n\t\t\t\n\t\t\tPattern pattern = null;\n\t\t\tif (!Const.isEmpty(realWildcard)) \n\t\t\t{\n\t\t\t\tpattern = Pattern.compile(realWildcard);\n\t\t\t\t\n\t\t\t} // end if\n\t\t\t\n\t\t\t\n\t\t\t// Get the files in the list and execute ftp.put() for each file\n\t\t\tfor (int i=0;i<filelist.length && !parentJob.isStopped();i++)\n\t\t\t{\n\t\t\t\tboolean getIt = true;\n\t\t\t\t\n\t\t\t\t// First see if the file matches the regular expression!\n\t\t\t\tif (pattern!=null)\n\t\t\t\t{\n\t\t\t\t\tMatcher matcher = pattern.matcher(filelist[i]);\n\t\t\t\t\tgetIt = matcher.matches();\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif (getIt)\n\t\t\t\t{\n\t\t\t\t\t// Put file if it's new file or user want to put even existing files\n\t\t\t\t\tboolean putFile=true;\n\t\t\t\t\t\n\t\t\t\t\tif(onlyPuttingNewFiles) putFile=!ftpclient.exists(filelist[i]);\n\t\t\t\t\t\n\t\t\t\t\tif (putFile)\n\t\t\t\t\t{\n\t\t\t\t\t\tif (log.isDebug()) log.logDebug(toString(), Messages.getString(\"JobFTPPUT.Log.PuttingFileToRemoteDirectory\",filelist[i],realRemoteDirectory));\n\t\t\t\t\t\t\n\t\t\t\t\t\tString localFilename = realLocalDirectory+Const.FILE_SEPARATOR+filelist[i]; \n\t\t\t\t\t\tftpclient.put(localFilename, filelist[i]);\n\t\t\t\t\t\t\n\t\t\t\t\t\tfilesput++;\n\t\t\t\t\t\n\t\t\t\t\t\t// Delete the file if this is needed!\n\t\t\t\t\t\tif (remove) \n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tchildren[i].delete();\n\t\t\t\t\t\t\tif (log.isDetailed()) log.logDetailed(toString(), Messages.getString(\"JobFTPPUT.Log.DeletedFile\",filelist[i]));\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\n\t\t\tresult.setResult( true );\n\t\t\tif (log.isDetailed()) log.logDebug(toString(), Messages.getString(\"JobFTPPUT.Log.WeHavePut\",\"\"+filesput));\n\t\t}\n\t\tcatch(Exception e)\n\t\t{\n\t\t\tresult.setNrErrors(1);\n\t\t\tlog.logError(toString(), Messages.getString(\"JobFTPPUT.Log.ErrorPuttingFiles\",e.getMessage()));\n            log.logError(toString(), Const.getStackTracker(e));\n\t\t} finally \n\t\t{\n\t\t\t if (ftpclient!=null && ftpclient.connected())\n\t            {\n\t                try\n\t                {\n\t                    ftpclient.quit();\n\t                }\n\t                catch(Exception e)\n\t                {\n\t                    log.logError(toString(), Messages.getString(\"JobFTPPUT.Log.ErrorQuitingFTP\",e.getMessage()));\n\t                }\n\t            }\n\t\t}\n\t\t\n\t\treturn result;\n\t}","commit_id":"587a532df609b268bed4d712b1f3565f6ae0669a","url":"https://github.com/pentaho/pentaho-kettle"},{"original_method":"public void loadRep(Repository rep, long id_jobentry, List<DatabaseMeta> databases, List<SlaveServer> slaveServers) throws KettleException\n\t  {\n\t\ttry\n\t\t{\n\t\t\tsuper.loadRep(rep, id_jobentry, databases, slaveServers);\n\t\t\tserverName      = rep.getJobEntryAttributeString(id_jobentry, \"servername\");\n\t\t\tint intServerPort = (int)rep.getJobEntryAttributeInteger(id_jobentry, \"serverport\");\n            serverPort = rep.getJobEntryAttributeString(id_jobentry, \"serverport\"); // backward compatible.\n            if (intServerPort>0 && Const.isEmpty(serverPort)) serverPort = Integer.toString(intServerPort);\n\n\t\t\tuserName        = rep.getJobEntryAttributeString(id_jobentry, \"username\");\n\t\t\tpassword        = rep.getJobEntryAttributeString(id_jobentry, \"password\");\n\t\t\tsftpDirectory   = rep.getJobEntryAttributeString(id_jobentry, \"sftpdirectory\");\n\t\t\ttargetDirectory = rep.getJobEntryAttributeString(id_jobentry, \"targetdirectory\");\n\t\t\twildcard        = rep.getJobEntryAttributeString(id_jobentry, \"wildcard\");\n\t\t\tbinaryMode          = rep.getJobEntryAttributeBoolean(id_jobentry, \"binary\");\n\t\t\ttimeout             = (int)rep.getJobEntryAttributeInteger(id_jobentry, \"timeout\");\n            remove              = rep.getJobEntryAttributeBoolean(id_jobentry, \"remove\");\n            onlyPuttingNewFiles = rep.getJobEntryAttributeBoolean(id_jobentry, \"only_new\");\n            activeConnection    = rep.getJobEntryAttributeBoolean(id_jobentry, \"active\");\n            controlEncoding     = rep.getJobEntryAttributeString(id_jobentry, \"control_encoding\");\n            if ( controlEncoding == null )\n            {\n            \t// if we couldn't retrieve an encoding, assume it's an old instance and\n            \t// put in the the encoding used before v 2.4.0\n            \tcontrolEncoding = LEGACY_CONTROL_ENCODING;\n            }\n\t\t}\n\t\tcatch(KettleException dbe)\n\t\t{\n\t\t\tthrow new KettleException(Messages.getString(\"JobFTPPUT.UnableToLoadFromRepo\", String.valueOf(id_jobentry)), dbe);\n\t\t}\n\t}","id":55160,"modified_method":"public void loadRep(Repository rep, long id_jobentry, List<DatabaseMeta> databases, List<SlaveServer> slaveServers) throws KettleException\n\t  {\n\t\ttry\n\t\t{\n\t\t\tsuper.loadRep(rep, id_jobentry, databases, slaveServers);\n\t\t\tserverName      = rep.getJobEntryAttributeString(id_jobentry, \"servername\");\n\t\t\tint intServerPort = (int)rep.getJobEntryAttributeInteger(id_jobentry, \"serverport\");\n            serverPort = rep.getJobEntryAttributeString(id_jobentry, \"serverport\"); // backward compatible.\n            if (intServerPort>0 && Const.isEmpty(serverPort)) serverPort = Integer.toString(intServerPort);\n\n\t\t\tuserName        = rep.getJobEntryAttributeString(id_jobentry, \"username\");\n\t\t\tpassword        = rep.getJobEntryAttributeString(id_jobentry, \"password\");\n\t\t\tremoteDirectory   = rep.getJobEntryAttributeString(id_jobentry, \"remoteDirectory\");\n\t\t\tlocalDirectory = rep.getJobEntryAttributeString(id_jobentry, \"localDirectory\");\n\t\t\twildcard        = rep.getJobEntryAttributeString(id_jobentry, \"wildcard\");\n\t\t\tbinaryMode          = rep.getJobEntryAttributeBoolean(id_jobentry, \"binary\");\n\t\t\ttimeout             = (int)rep.getJobEntryAttributeInteger(id_jobentry, \"timeout\");\n            remove              = rep.getJobEntryAttributeBoolean(id_jobentry, \"remove\");\n            onlyPuttingNewFiles = rep.getJobEntryAttributeBoolean(id_jobentry, \"only_new\");\n            activeConnection    = rep.getJobEntryAttributeBoolean(id_jobentry, \"active\");\n            controlEncoding     = rep.getJobEntryAttributeString(id_jobentry, \"control_encoding\");\n            if ( controlEncoding == null )\n            {\n            \t// if we couldn't retrieve an encoding, assume it's an old instance and\n            \t// put in the the encoding used before v 2.4.0\n            \tcontrolEncoding = LEGACY_CONTROL_ENCODING;\n            }\n\t\t}\n\t\tcatch(KettleException dbe)\n\t\t{\n\t\t\tthrow new KettleException(Messages.getString(\"JobFTPPUT.UnableToLoadFromRepo\", String.valueOf(id_jobentry)), dbe);\n\t\t}\n\t}","commit_id":"587a532df609b268bed4d712b1f3565f6ae0669a","url":"https://github.com/pentaho/pentaho-kettle"},{"original_method":"/**\n\t * @return Returns the directory.\n\t */\n\tpublic String getScpDirectory()\n\t{\n\t\treturn sftpDirectory;\n\t}","id":55161,"modified_method":"/**\n\t * @return Returns the localDirectory.\n\t */\n\tpublic String getLocalDirectory()\n\t{\n\t\treturn localDirectory;\n\t}","commit_id":"587a532df609b268bed4d712b1f3565f6ae0669a","url":"https://github.com/pentaho/pentaho-kettle"},{"original_method":"/**\n\t * @return Returns the targetDirectory.\n\t */\n\tpublic String getTargetDirectory()\n\t{\n\t\treturn targetDirectory;\n\t}","id":55162,"modified_method":"/**\n\t * @return Returns the remoteDirectory.\n\t */\n\tpublic String getRemoteDirectory()\n\t{\n\t\treturn remoteDirectory;\n\t}","commit_id":"587a532df609b268bed4d712b1f3565f6ae0669a","url":"https://github.com/pentaho/pentaho-kettle"},{"original_method":"/**\n\t * @param targetDirectory The targetDirectory to set.\n\t */\n\tpublic void setTargetDirectory(String targetDirectory)\n\t{\n\t\tthis.targetDirectory = targetDirectory;\n\t}","id":55163,"modified_method":"/**\n\t * @param directory The remoteDirectory to set.\n\t */\n\tpublic void setRemoteDirectory(String directory)\n\t{\n\t\tthis.remoteDirectory = directory;\n\t}","commit_id":"587a532df609b268bed4d712b1f3565f6ae0669a","url":"https://github.com/pentaho/pentaho-kettle"},{"original_method":"public JobEntryFTPPUT(String n)\n\t{\n\t\tsuper(n, \"\");\n\t\tserverName=null;\n        serverPort=\"21\";\n\t\tsetID(-1L);\n\t\tsetJobEntryType(JobEntryType.FTP_PUT);\n\t\tsetControlEncoding(DEFAULT_CONTROL_ENCODING);\n\t}","id":55164,"modified_method":"public JobEntryFTPPUT(String n)\n\t{\n\t\tsuper(n, \"\");\n\t\tserverName=null;\n        serverPort=\"21\";\n        remoteDirectory=null;\n        localDirectory=null;\n\t\tsetID(-1L);\n\t\tsetJobEntryType(JobEntryType.FTP_PUT);\n\t\tsetControlEncoding(DEFAULT_CONTROL_ENCODING);\n\t}","commit_id":"587a532df609b268bed4d712b1f3565f6ae0669a","url":"https://github.com/pentaho/pentaho-kettle"},{"original_method":"/**\n\t * @param directory The directory to set.\n\t */\n\tpublic void setScpDirectory(String directory)\n\t{\n\t\tthis.sftpDirectory = directory;\n\t}","id":55165,"modified_method":"/**\n\t * @param directory The localDirectory to set.\n\t */\n\tpublic void setLocalDirectory(String directory)\n\t{\n\t\tthis.localDirectory = directory;\n\t}","commit_id":"587a532df609b268bed4d712b1f3565f6ae0669a","url":"https://github.com/pentaho/pentaho-kettle"},{"original_method":"public void saveRep(Repository rep, long id_job)\n\t\tthrows KettleException\n\t{\n\t\ttry\n\t\t{\n\t\t\tsuper.saveRep(rep, id_job);\n\t\t\t\n\t\t\trep.saveJobEntryAttribute(id_job, getID(), \"servername\",      serverName);\n\t\t\trep.saveJobEntryAttribute(id_job, getID(), \"serverport\",      serverPort);\n\t\t\trep.saveJobEntryAttribute(id_job, getID(), \"username\",        userName);\n\t\t\trep.saveJobEntryAttribute(id_job, getID(), \"password\",        password);\n\t\t\trep.saveJobEntryAttribute(id_job, getID(), \"sftpdirectory\",    sftpDirectory);\n\t\t\trep.saveJobEntryAttribute(id_job, getID(), \"targetdirectory\", targetDirectory);\n\t\t\trep.saveJobEntryAttribute(id_job, getID(), \"wildcard\",        wildcard);\n\t\t\trep.saveJobEntryAttribute(id_job, getID(), \"binary\",          binaryMode);\n\t\t\trep.saveJobEntryAttribute(id_job, getID(), \"timeout\",         timeout);\n            rep.saveJobEntryAttribute(id_job, getID(), \"remove\",          remove);\n\t\t\trep.saveJobEntryAttribute(id_job, getID(), \"only_new\",        onlyPuttingNewFiles);\n            rep.saveJobEntryAttribute(id_job, getID(), \"active\",          activeConnection);\n            rep.saveJobEntryAttribute(id_job, getID(), \"control_encoding\",controlEncoding);\n\t\t}\n\t\tcatch(KettleDatabaseException dbe)\n\t\t{\n\t\t\tthrow new KettleException(Messages.getString(\"JobFTPPUT.UnableToSaveToRepo\", String.valueOf(id_job)), dbe); //$NON-NLS-1$\n\t\t\t   \n\t\t\n\t\t}\n\t}","id":55166,"modified_method":"public void saveRep(Repository rep, long id_job)\n\t\tthrows KettleException\n\t{\n\t\ttry\n\t\t{\n\t\t\tsuper.saveRep(rep, id_job);\n\t\t\t\n\t\t\trep.saveJobEntryAttribute(id_job, getID(), \"servername\",      serverName);\n\t\t\trep.saveJobEntryAttribute(id_job, getID(), \"serverport\",      serverPort);\n\t\t\trep.saveJobEntryAttribute(id_job, getID(), \"username\",        userName);\n\t\t\trep.saveJobEntryAttribute(id_job, getID(), \"password\",        password);\n\t\t\trep.saveJobEntryAttribute(id_job, getID(), \"remoteDirectory\",    remoteDirectory);\n\t\t\trep.saveJobEntryAttribute(id_job, getID(), \"localDirectory\", localDirectory);\n\t\t\trep.saveJobEntryAttribute(id_job, getID(), \"wildcard\",        wildcard);\n\t\t\trep.saveJobEntryAttribute(id_job, getID(), \"binary\",          binaryMode);\n\t\t\trep.saveJobEntryAttribute(id_job, getID(), \"timeout\",         timeout);\n            rep.saveJobEntryAttribute(id_job, getID(), \"remove\",          remove);\n\t\t\trep.saveJobEntryAttribute(id_job, getID(), \"only_new\",        onlyPuttingNewFiles);\n            rep.saveJobEntryAttribute(id_job, getID(), \"active\",          activeConnection);\n            rep.saveJobEntryAttribute(id_job, getID(), \"control_encoding\",controlEncoding);\n\t\t}\n\t\tcatch(KettleDatabaseException dbe)\n\t\t{\n\t\t\tthrow new KettleException(Messages.getString(\"JobFTPPUT.UnableToSaveToRepo\", String.valueOf(id_job)), dbe); //$NON-NLS-1$\n\t\t\t   \n\t\t\n\t\t}\n\t}","commit_id":"587a532df609b268bed4d712b1f3565f6ae0669a","url":"https://github.com/pentaho/pentaho-kettle"},{"original_method":"public String getXML()\n\t{\n        StringBuffer retval = new StringBuffer(200);\n\t\t\n\t\tretval.append(super.getXML());\n\t\t\n\t\tretval.append(\"      \").append(XMLHandler.addTagValue(\"servername\",   serverName));\n\t\tretval.append(\"      \").append(XMLHandler.addTagValue(\"serverport\",   serverPort));\n\t\tretval.append(\"      \").append(XMLHandler.addTagValue(\"username\",     userName));\n\t\tretval.append(\"      \").append(XMLHandler.addTagValue(\"password\",     password));\n\t\tretval.append(\"      \").append(XMLHandler.addTagValue(\"sftpdirectory\", sftpDirectory));\n\t\tretval.append(\"      \").append(XMLHandler.addTagValue(\"targetdirectory\", targetDirectory));\n\t\tretval.append(\"      \").append(XMLHandler.addTagValue(\"wildcard\",     wildcard));\n\t\tretval.append(\"      \").append(XMLHandler.addTagValue(\"binary\",       binaryMode));\n\t\tretval.append(\"      \").append(XMLHandler.addTagValue(\"timeout\",      timeout));\n\t\tretval.append(\"      \").append(XMLHandler.addTagValue(\"remove\",       remove));\n        retval.append(\"      \").append(XMLHandler.addTagValue(\"only_new\",     onlyPuttingNewFiles));\n        retval.append(\"      \").append(XMLHandler.addTagValue(\"active\",       activeConnection));\n        retval.append(\"      \").append(XMLHandler.addTagValue(\"control_encoding\",  controlEncoding));\n\t\t\n\t\treturn retval.toString();\n\t}","id":55167,"modified_method":"public String getXML()\n\t{\n        StringBuffer retval = new StringBuffer(200);\n\t\t\n\t\tretval.append(super.getXML());\n\t\t\n\t\tretval.append(\"      \").append(XMLHandler.addTagValue(\"servername\",   serverName));\n\t\tretval.append(\"      \").append(XMLHandler.addTagValue(\"serverport\",   serverPort));\n\t\tretval.append(\"      \").append(XMLHandler.addTagValue(\"username\",     userName));\n\t\tretval.append(\"      \").append(XMLHandler.addTagValue(\"password\",     password));\n\t\tretval.append(\"      \").append(XMLHandler.addTagValue(\"remoteDirectory\", remoteDirectory));\n\t\tretval.append(\"      \").append(XMLHandler.addTagValue(\"localDirectory\", localDirectory));\n\t\tretval.append(\"      \").append(XMLHandler.addTagValue(\"wildcard\",     wildcard));\n\t\tretval.append(\"      \").append(XMLHandler.addTagValue(\"binary\",       binaryMode));\n\t\tretval.append(\"      \").append(XMLHandler.addTagValue(\"timeout\",      timeout));\n\t\tretval.append(\"      \").append(XMLHandler.addTagValue(\"remove\",       remove));\n        retval.append(\"      \").append(XMLHandler.addTagValue(\"only_new\",     onlyPuttingNewFiles));\n        retval.append(\"      \").append(XMLHandler.addTagValue(\"active\",       activeConnection));\n        retval.append(\"      \").append(XMLHandler.addTagValue(\"control_encoding\",  controlEncoding));\n\t\t\n\t\treturn retval.toString();\n\t}","commit_id":"587a532df609b268bed4d712b1f3565f6ae0669a","url":"https://github.com/pentaho/pentaho-kettle"},{"original_method":"public void loadXML(Node entrynode, List<DatabaseMeta> databases, List<SlaveServer> slaveServers, Repository rep) throws KettleXMLException\n\t  {\n\t\ttry\n\t\t{\n\t\t\tsuper.loadXML(entrynode, databases, slaveServers);\n\t\t\tserverName      = XMLHandler.getTagValue(entrynode, \"servername\");\n\t\t\tserverPort      = XMLHandler.getTagValue(entrynode, \"serverport\");\n\t\t\tuserName        = XMLHandler.getTagValue(entrynode, \"username\");\n\t\t\tpassword        = XMLHandler.getTagValue(entrynode, \"password\");\n\t\t\tsftpDirectory   = XMLHandler.getTagValue(entrynode, \"sftpdirectory\");\n\t\t\ttargetDirectory = XMLHandler.getTagValue(entrynode, \"targetdirectory\");\n\t\t\twildcard        = XMLHandler.getTagValue(entrynode, \"wildcard\");\n\t\t\tbinaryMode          = \"Y\".equalsIgnoreCase( XMLHandler.getTagValue(entrynode, \"binary\") );\n\t\t\ttimeout             = Const.toInt(XMLHandler.getTagValue(entrynode, \"timeout\"), 10000);\n\t\t\tremove              = \"Y\".equalsIgnoreCase( XMLHandler.getTagValue(entrynode, \"remove\") );\n\t\t\tonlyPuttingNewFiles = \"Y\".equalsIgnoreCase( XMLHandler.getTagValue(entrynode, \"only_new\") );\n            activeConnection    = \"Y\".equalsIgnoreCase( XMLHandler.getTagValue(entrynode, \"active\") );\n            controlEncoding     = XMLHandler.getTagValue(entrynode, \"control_encoding\");\n            if ( controlEncoding == null )\n            {\n            \t// if we couldn't retrieve an encoding, assume it's an old instance and\n            \t// put in the the encoding used before v 2.4.0\n            \tcontrolEncoding = LEGACY_CONTROL_ENCODING;\n            }       ;\n\t\t}\n\t\tcatch(KettleXMLException xe)\n\t\t{\n\t\t\tthrow new KettleXMLException(Messages.getString(\"JobFTPPUT.Log.UnableToLoadFromXml\"), xe);\t\t\t\n\t\t}\n\t}","id":55168,"modified_method":"public void loadXML(Node entrynode, List<DatabaseMeta> databases, List<SlaveServer> slaveServers, Repository rep) throws KettleXMLException\n\t  {\n\t\ttry\n\t\t{\n\t\t\tsuper.loadXML(entrynode, databases, slaveServers);\n\t\t\tserverName      = XMLHandler.getTagValue(entrynode, \"servername\");\n\t\t\tserverPort      = XMLHandler.getTagValue(entrynode, \"serverport\");\n\t\t\tuserName        = XMLHandler.getTagValue(entrynode, \"username\");\n\t\t\tpassword        = XMLHandler.getTagValue(entrynode, \"password\");\n\t\t\tremoteDirectory   = XMLHandler.getTagValue(entrynode, \"remoteDirectory\");\n\t\t\tlocalDirectory = XMLHandler.getTagValue(entrynode, \"localDirectory\");\n\t\t\twildcard        = XMLHandler.getTagValue(entrynode, \"wildcard\");\n\t\t\tbinaryMode          = \"Y\".equalsIgnoreCase( XMLHandler.getTagValue(entrynode, \"binary\") );\n\t\t\ttimeout             = Const.toInt(XMLHandler.getTagValue(entrynode, \"timeout\"), 10000);\n\t\t\tremove              = \"Y\".equalsIgnoreCase( XMLHandler.getTagValue(entrynode, \"remove\") );\n\t\t\tonlyPuttingNewFiles = \"Y\".equalsIgnoreCase( XMLHandler.getTagValue(entrynode, \"only_new\") );\n            activeConnection    = \"Y\".equalsIgnoreCase( XMLHandler.getTagValue(entrynode, \"active\") );\n            controlEncoding     = XMLHandler.getTagValue(entrynode, \"control_encoding\");\n            if ( controlEncoding == null )\n            {\n            \t// if we couldn't retrieve an encoding, assume it's an old instance and\n            \t// put in the the encoding used before v 2.4.0\n            \tcontrolEncoding = LEGACY_CONTROL_ENCODING;\n            }       ;\n\t\t}\n\t\tcatch(KettleXMLException xe)\n\t\t{\n\t\t\tthrow new KettleXMLException(Messages.getString(\"JobFTPPUT.Log.UnableToLoadFromXml\"), xe);\t\t\t\n\t\t}\n\t}","commit_id":"587a532df609b268bed4d712b1f3565f6ae0669a","url":"https://github.com/pentaho/pentaho-kettle"},{"original_method":"private void ok()\n    {\n        jobEntry.setName(wName.getText());\n        jobEntry.setServerName(wServerName.getText());\n        jobEntry.setServerPort(wServerPort.getText());\n        jobEntry.setUserName(wUserName.getText());\n        jobEntry.setPassword(wPassword.getText());\n        jobEntry.setScpDirectory(wScpDirectory.getText());\n        jobEntry.setTargetDirectory(wTargetDirectory.getText());\n        jobEntry.setWildcard(wWildcard.getText());\n        jobEntry.setRemove(wRemove.getSelection());\n        jobEntry.setBinaryMode(wBinaryMode.getSelection());\n        jobEntry.setTimeout(Const.toInt(wTimeout.getText(), 10000));\n        jobEntry.setOnlyPuttingNewFiles(wOnlyNew.getSelection());\n        jobEntry.setActiveConnection(wActive.getSelection());\n        jobEntry.setControlEncoding(wControlEncoding.getText());\n\n        dispose();\n    }","id":55169,"modified_method":"private void ok()\n    {\n        jobEntry.setName(wName.getText());\n        jobEntry.setServerName(wServerName.getText());\n        jobEntry.setServerPort(wServerPort.getText());\n        jobEntry.setUserName(wUserName.getText());\n        jobEntry.setPassword(wPassword.getText());\n        jobEntry.setRemoteDirectory(wRemoteDirectory.getText());\n        jobEntry.setLocalDirectory(wLocalDirectory.getText());\n        jobEntry.setWildcard(wWildcard.getText());\n        jobEntry.setRemove(wRemove.getSelection());\n        jobEntry.setBinaryMode(wBinaryMode.getSelection());\n        jobEntry.setTimeout(Const.toInt(wTimeout.getText(), 10000));\n        jobEntry.setOnlyPuttingNewFiles(wOnlyNew.getSelection());\n        jobEntry.setActiveConnection(wActive.getSelection());\n        jobEntry.setControlEncoding(wControlEncoding.getText());\n\n        dispose();\n    }","commit_id":"587a532df609b268bed4d712b1f3565f6ae0669a","url":"https://github.com/pentaho/pentaho-kettle"},{"original_method":"/**\n     * Copy information from the meta-data input to the dialog fields.\n     */\n    public void getData()\n    {\n        if (jobEntry.getName() != null)\n            wName.setText(jobEntry.getName());\n        wName.selectAll();\n\n        wServerName.setText(Const.NVL(jobEntry.getServerName(), \"\"));\n        wServerPort.setText(jobEntry.getServerPort());\n        wUserName.setText(Const.NVL(jobEntry.getUserName(), \"\"));\n        wPassword.setText(Const.NVL(jobEntry.getPassword(), \"\"));\n        wScpDirectory.setText(Const.NVL(jobEntry.getScpDirectory(), \"\"));\n        wTargetDirectory.setText(Const.NVL(jobEntry.getTargetDirectory(), \"\"));\n        wWildcard.setText(Const.NVL(jobEntry.getWildcard(), \"\"));\n        wRemove.setSelection(jobEntry.getRemove());\n        wBinaryMode.setSelection(jobEntry.isBinaryMode());\n        wTimeout.setText(\"\" + jobEntry.getTimeout());\n        wOnlyNew.setSelection(jobEntry.isOnlyPuttingNewFiles());\n        wActive.setSelection(jobEntry.isActiveConnection());\n        wControlEncoding.setText(jobEntry.getControlEncoding());\n    }","id":55170,"modified_method":"/**\n     * Copy information from the meta-data input to the dialog fields.\n     */\n    public void getData()\n    {\n        if (jobEntry.getName() != null)\n            wName.setText(jobEntry.getName());\n        wName.selectAll();\n\n        wServerName.setText(Const.NVL(jobEntry.getServerName(), \"\"));\n        wServerPort.setText(jobEntry.getServerPort());\n        wUserName.setText(Const.NVL(jobEntry.getUserName(), \"\"));\n        wPassword.setText(Const.NVL(jobEntry.getPassword(), \"\"));\n        wRemoteDirectory.setText(Const.NVL(jobEntry.getRemoteDirectory(), \"\"));\n        wLocalDirectory.setText(Const.NVL(jobEntry.getLocalDirectory(), \"\"));\n        wWildcard.setText(Const.NVL(jobEntry.getWildcard(), \"\"));\n        wRemove.setSelection(jobEntry.getRemove());\n        wBinaryMode.setSelection(jobEntry.isBinaryMode());\n        wTimeout.setText(\"\" + jobEntry.getTimeout());\n        wOnlyNew.setSelection(jobEntry.isOnlyPuttingNewFiles());\n        wActive.setSelection(jobEntry.isActiveConnection());\n        wControlEncoding.setText(jobEntry.getControlEncoding());\n    }","commit_id":"587a532df609b268bed4d712b1f3565f6ae0669a","url":"https://github.com/pentaho/pentaho-kettle"},{"original_method":"public JobEntryInterface open()\n    {\n        Shell parent = getParent();\n        Display display = parent.getDisplay();\n\n        shell = new Shell(parent, props.getJobsDialogStyle());\n        props.setLook(shell);\n        JobDialog.setShellImage(shell, jobEntry);\n\n        ModifyListener lsMod = new ModifyListener()\n        {\n            public void modifyText(ModifyEvent e)\n            {\n                jobEntry.setChanged();\n            }\n        };\n        changed = jobEntry.hasChanged();\n\n        FormLayout formLayout = new FormLayout();\n        formLayout.marginWidth = Const.FORM_MARGIN;\n        formLayout.marginHeight = Const.FORM_MARGIN;\n\n        shell.setLayout(formLayout);\n        shell.setText(Messages.getString(\"JobFTPPUT.Title\"));\n\n        int middle = props.getMiddlePct();\n        int margin = Const.MARGIN;\n\n        // Filename line\n        wlName = new Label(shell, SWT.RIGHT);\n        wlName.setText(Messages.getString(\"JobFTPPUT.Name.Label\"));\n        props.setLook(wlName);\n        fdlName = new FormData();\n        fdlName.left = new FormAttachment(0, 0);\n        fdlName.right = new FormAttachment(middle, -margin);\n        fdlName.top = new FormAttachment(0, margin);\n        wlName.setLayoutData(fdlName);\n        wName = new Text(shell, SWT.SINGLE | SWT.LEFT | SWT.BORDER);\n        props.setLook(wName);\n        wName.addModifyListener(lsMod);\n        fdName = new FormData();\n        fdName.left = new FormAttachment(middle, 0);\n        fdName.top = new FormAttachment(0, margin);\n        fdName.right = new FormAttachment(100, 0);\n        wName.setLayoutData(fdName);\n\n        // ServerName line\n        wlServerName = new Label(shell, SWT.RIGHT);\n        wlServerName.setText(Messages.getString(\"JobFTPPUT.Server.Label\"));\n        props.setLook(wlServerName);\n        fdlServerName = new FormData();\n        fdlServerName.left = new FormAttachment(0, 0);\n        fdlServerName.top = new FormAttachment(wName, margin);\n        fdlServerName.right = new FormAttachment(middle, -margin);\n        wlServerName.setLayoutData(fdlServerName);\n        wServerName = new TextVar(jobMeta, shell, SWT.SINGLE | SWT.LEFT | SWT.BORDER);\n        props.setLook(wServerName);\n        wServerName.addModifyListener(lsMod);\n        fdServerName = new FormData();\n        fdServerName.left = new FormAttachment(middle, 0);\n        fdServerName.top = new FormAttachment(wName, margin);\n        fdServerName.right = new FormAttachment(100, 0);\n        wServerName.setLayoutData(fdServerName);\n\n        // ServerPort line\n        wlServerPort = new Label(shell, SWT.RIGHT);\n        wlServerPort.setText(Messages.getString(\"JobFTPPUT.Port.Label\"));\n        props.setLook(wlServerPort);\n        fdlServerPort = new FormData();\n        fdlServerPort.left = new FormAttachment(0, 0);\n        fdlServerPort.top = new FormAttachment(wServerName, margin);\n        fdlServerPort.right = new FormAttachment(middle, -margin);\n        wlServerPort.setLayoutData(fdlServerPort);\n        wServerPort = new TextVar(jobMeta, shell, SWT.SINGLE | SWT.LEFT | SWT.BORDER);\n        props.setLook(wServerPort);\n        wServerPort.setToolTipText(Messages.getString(\"JobFTPPUT.Port.Tooltip\"));\n        wServerPort.addModifyListener(lsMod);\n        fdServerPort = new FormData();\n        fdServerPort.left = new FormAttachment(middle, 0);\n        fdServerPort.top = new FormAttachment(wServerName, margin);\n        fdServerPort.right = new FormAttachment(100, 0);\n        wServerPort.setLayoutData(fdServerPort);\n\n        // UserName line\n        wlUserName = new Label(shell, SWT.RIGHT);\n        wlUserName.setText(Messages.getString(\"JobFTPPUT.Username.Label\"));\n        props.setLook(wlUserName);\n        fdlUserName = new FormData();\n        fdlUserName.left = new FormAttachment(0, 0);\n        fdlUserName.top = new FormAttachment(wServerPort, margin);\n        fdlUserName.right = new FormAttachment(middle, -margin);\n        wlUserName.setLayoutData(fdlUserName);\n        wUserName = new TextVar(jobMeta, shell, SWT.SINGLE | SWT.LEFT | SWT.BORDER);\n        props.setLook(wUserName);\n        wUserName.addModifyListener(lsMod);\n        fdUserName = new FormData();\n        fdUserName.left = new FormAttachment(middle, 0);\n        fdUserName.top = new FormAttachment(wServerPort, margin);\n        fdUserName.right = new FormAttachment(100, 0);\n        wUserName.setLayoutData(fdUserName);\n\n        // Password line\n        wlPassword = new Label(shell, SWT.RIGHT);\n        wlPassword.setText(Messages.getString(\"JobFTPPUT.Password.Label\"));\n        props.setLook(wlPassword);\n        fdlPassword = new FormData();\n        fdlPassword.left = new FormAttachment(0, 0);\n        fdlPassword.top = new FormAttachment(wUserName, margin);\n        fdlPassword.right = new FormAttachment(middle, -margin);\n        wlPassword.setLayoutData(fdlPassword);\n        wPassword = new TextVar(jobMeta, shell, SWT.SINGLE | SWT.LEFT | SWT.BORDER);\n        props.setLook(wPassword);\n        wPassword.setEchoChar('*');\n        wPassword.addModifyListener(lsMod);\n        fdPassword = new FormData();\n        fdPassword.left = new FormAttachment(middle, 0);\n        fdPassword.top = new FormAttachment(wUserName, margin);\n        fdPassword.right = new FormAttachment(100, 0);\n        wPassword.setLayoutData(fdPassword);\n\n        // FtpDirectory line\n        wlScpDirectory = new Label(shell, SWT.RIGHT);\n        wlScpDirectory.setText(Messages.getString(\"JobFTPPUT.RemoteDir.Label\"));\n        props.setLook(wlScpDirectory);\n        fdlScpDirectory = new FormData();\n        fdlScpDirectory.left = new FormAttachment(0, 0);\n        fdlScpDirectory.top = new FormAttachment(wPassword, margin);\n        fdlScpDirectory.right = new FormAttachment(middle, -margin);\n        wlScpDirectory.setLayoutData(fdlScpDirectory);\n        \n        \n        // Browse folders button ...\n\t\twbScpDirectory=new Button(shell, SWT.PUSH| SWT.CENTER);\n\t\tprops.setLook(wbScpDirectory);\n\t\twbScpDirectory.setText(Messages.getString(\"JobFTPPUT.BrowseFolders.Label\"));\n\t\tfdbScpDirectory=new FormData();\n\t\tfdbScpDirectory.right= new FormAttachment(100, 0);\n\t\tfdbScpDirectory.top  = new FormAttachment(wPassword, margin);\n\t\twbScpDirectory.setLayoutData(fdbScpDirectory);\n        \n        \n        wScpDirectory = new TextVar(jobMeta, shell, SWT.SINGLE | SWT.LEFT | SWT.BORDER, Messages.getString(\"JobFTPPUT.RemoteDir.Tooltip\"));\n        props.setLook(wScpDirectory);\n        wScpDirectory.addModifyListener(lsMod);\n        fdScpDirectory = new FormData();\n        fdScpDirectory.left = new FormAttachment(middle, 0);\n        fdScpDirectory.top = new FormAttachment(wPassword, margin);\n        fdScpDirectory.right = new FormAttachment(wbScpDirectory, -margin);\n        wScpDirectory.setLayoutData(fdScpDirectory);\n\n        // TargetDirectory line\n        wlTargetDirectory = new Label(shell, SWT.RIGHT);\n        wlTargetDirectory.setText(Messages.getString(\"JobFTPPUT.TargetDir.Label\"));\n        props.setLook(wlTargetDirectory);\n        fdlTargetDirectory = new FormData();\n        fdlTargetDirectory.left = new FormAttachment(0, 0);\n        fdlTargetDirectory.top = new FormAttachment(wScpDirectory, margin);\n        fdlTargetDirectory.right = new FormAttachment(middle, -margin);\n        wlTargetDirectory.setLayoutData(fdlTargetDirectory);\n        wTargetDirectory = new TextVar(jobMeta, shell, SWT.SINGLE | SWT.LEFT | SWT.BORDER, Messages.getString(\"JobFTPPUT.TargetDir.Tooltip\"));\n        props.setLook(wTargetDirectory);\n        wTargetDirectory.addModifyListener(lsMod);\n        fdTargetDirectory = new FormData();\n        fdTargetDirectory.left = new FormAttachment(middle, 0);\n        fdTargetDirectory.top = new FormAttachment(wScpDirectory, margin);\n        fdTargetDirectory.right = new FormAttachment(100, 0);\n        wTargetDirectory.setLayoutData(fdTargetDirectory);\n\n        // Wildcard line\n        wlWildcard = new Label(shell, SWT.RIGHT);\n        wlWildcard.setText(Messages.getString(\"JobFTPPUT.Wildcard.Label\"));\n        props.setLook(wlWildcard);\n        fdlWildcard = new FormData();\n        fdlWildcard.left = new FormAttachment(0, 0);\n        fdlWildcard.top = new FormAttachment(wTargetDirectory, margin);\n        fdlWildcard.right = new FormAttachment(middle, -margin);\n        wlWildcard.setLayoutData(fdlWildcard);\n        wWildcard = new TextVar(jobMeta, shell, SWT.SINGLE | SWT.LEFT | SWT.BORDER, Messages.getString(\"JobFTPPUT.Wildcard.Tooltip\"));\n        props.setLook(wWildcard);\n        wWildcard.addModifyListener(lsMod);\n        fdWildcard = new FormData();\n        fdWildcard.left = new FormAttachment(middle, 0);\n        fdWildcard.top = new FormAttachment(wTargetDirectory, margin);\n        fdWildcard.right = new FormAttachment(100, 0);\n        wWildcard.setLayoutData(fdWildcard);\n        \n        // Binary mode selection...\n        wlBinaryMode = new Label(shell, SWT.RIGHT);\n        wlBinaryMode.setText(Messages.getString(\"JobFTPPUT.BinaryMode.Label\"));\n        props.setLook(wlBinaryMode);\n        fdlBinaryMode = new FormData();\n        fdlBinaryMode.left = new FormAttachment(0, 0);\n        fdlBinaryMode.top = new FormAttachment(wWildcard, margin);\n        fdlBinaryMode.right = new FormAttachment(middle, 0);\n        wlBinaryMode.setLayoutData(fdlBinaryMode);\n        wBinaryMode = new Button(shell, SWT.CHECK);\n        props.setLook(wBinaryMode);\n        wBinaryMode.setToolTipText(Messages.getString(\"JobFTPPUT.BinaryMode.Tooltip\"));\n        fdBinaryMode = new FormData();\n        fdBinaryMode.left = new FormAttachment(middle, 0);\n        fdBinaryMode.top = new FormAttachment(wWildcard, margin);\n        fdBinaryMode.right = new FormAttachment(100, 0);\n        wBinaryMode.setLayoutData(fdBinaryMode);\n\n        // Timeout line\n        wTimeout = new LabelTextVar(jobMeta, shell, Messages.getString(\"JobFTPPUT.Timeout.Label\"), Messages.getString(\"JobFTPPUT.Timeout.Tooltip\"));\n        props.setLook(wTimeout);\n        wTimeout.addModifyListener(lsMod);\n        fdTimeout = new FormData();\n        fdTimeout.left = new FormAttachment(0, 0);\n        fdTimeout.top = new FormAttachment(wlBinaryMode, margin);\n        fdTimeout.right = new FormAttachment(100, 0);\n        wTimeout.setLayoutData(fdTimeout);\n\n\n        // Remove files after retrieval...\n        wlRemove = new Label(shell, SWT.RIGHT);\n        wlRemove.setText(Messages.getString(\"JobFTPPUT.RemoveFiles.Label\"));\n        props.setLook(wlRemove);\n        fdlRemove = new FormData();\n        fdlRemove.left = new FormAttachment(0, 0);\n        fdlRemove.top = new FormAttachment(wTimeout, margin);\n        fdlRemove.right = new FormAttachment(middle, -margin);\n        wlRemove.setLayoutData(fdlRemove);\n        wRemove = new Button(shell, SWT.CHECK);\n        props.setLook(wRemove);\n        wRemove.setToolTipText(Messages.getString(\"JobFTPPUT.RemoveFiles.Tooltip\"));\n        fdRemove = new FormData();\n        fdRemove.left = new FormAttachment(middle, 0);\n        fdRemove.top = new FormAttachment(wTimeout, margin);\n        fdRemove.right = new FormAttachment(100, 0);\n        wRemove.setLayoutData(fdRemove);\n        \n        // OnlyNew files after retrieval...\n        wlOnlyNew = new Label(shell, SWT.RIGHT);\n        wlOnlyNew.setText(Messages.getString(\"JobFTPPUT.DontOverwrite.Label\"));\n        props.setLook(wlOnlyNew);\n        fdlOnlyNew = new FormData();\n        fdlOnlyNew.left = new FormAttachment(0, 0);\n        fdlOnlyNew.top = new FormAttachment(wRemove, margin);\n        fdlOnlyNew.right = new FormAttachment(middle, 0);\n        wlOnlyNew.setLayoutData(fdlOnlyNew);\n        wOnlyNew = new Button(shell, SWT.CHECK);\n        wOnlyNew.setToolTipText(Messages.getString(\"JobFTPPUT.DontOverwrite.Tooltip\"));\n        props.setLook(wOnlyNew);\n        fdOnlyNew = new FormData();\n        fdOnlyNew.left = new FormAttachment(middle, 0);\n        fdOnlyNew.top = new FormAttachment(wRemove, margin);\n        fdOnlyNew.right = new FormAttachment(100, 0);\n        wOnlyNew.setLayoutData(fdOnlyNew);\n\n        // active connection?\n        wlActive = new Label(shell, SWT.RIGHT);\n        wlActive.setText(Messages.getString(\"JobFTPPUT.ActiveConns.Label\"));\n        props.setLook(wlActive);\n        fdlActive = new FormData();\n        fdlActive.left = new FormAttachment(0, 0);\n        fdlActive.top = new FormAttachment(wOnlyNew, margin);\n        fdlActive.right = new FormAttachment(middle, 0);\n        wlActive.setLayoutData(fdlActive);\n        wActive = new Button(shell, SWT.CHECK);\n        wActive.setToolTipText(Messages.getString(\"JobFTPPUT.ActiveConns.Tooltip\"));\n        props.setLook(wActive);\n        fdActive = new FormData();\n        fdActive.left = new FormAttachment(middle, 0);\n        fdActive.top = new FormAttachment(wOnlyNew, margin);\n        fdActive.right = new FormAttachment(100, 0);\n        wActive.setLayoutData(fdActive);\n        \n        // Control encoding line\n        //\n        // The drop down is editable as it may happen an encoding may not be present\n        // on one machine, but you may want to use it on your execution server\n        //\n        wlControlEncoding=new Label(shell, SWT.RIGHT);\n        wlControlEncoding.setText(Messages.getString(\"JobFTPPUT.ControlEncoding.Label\"));\n        props.setLook(wlControlEncoding);\n        fdlControlEncoding=new FormData();\n        fdlControlEncoding.left  = new FormAttachment(0, 0);\n        fdlControlEncoding.top   = new FormAttachment(wActive, margin);\n        fdlControlEncoding.right = new FormAttachment(middle, 0);\n        wlControlEncoding.setLayoutData(fdlControlEncoding);\n        wControlEncoding=new Combo(shell, SWT.SINGLE | SWT.LEFT | SWT.BORDER);\n        wControlEncoding.setToolTipText(Messages.getString(\"JobFTPPUT.ControlEncoding.Tooltip\"));\n        wControlEncoding.setItems(encodings);\n        props.setLook(wControlEncoding);\n        fdControlEncoding=new FormData();\n        fdControlEncoding.left = new FormAttachment(middle, 0);\n        fdControlEncoding.top  = new FormAttachment(wActive, margin);\n        fdControlEncoding.right= new FormAttachment(100, 0);        \n        wControlEncoding.setLayoutData(fdControlEncoding); \n\n        wOK = new Button(shell, SWT.PUSH);\n        wOK.setText(Messages.getString(\"System.Button.OK\"));\n        wCancel = new Button(shell, SWT.PUSH);\n        wCancel.setText(Messages.getString(\"System.Button.Cancel\"));\n\n        BaseStepDialog.positionBottomButtons(shell, new Button[] { wOK, wCancel }, margin, wControlEncoding);\n\n        // Add listeners\n        lsCancel = new Listener()\n        {\n            public void handleEvent(Event e)\n            {\n                cancel();\n            }\n        };\n        lsOK = new Listener()\n        {\n            public void handleEvent(Event e)\n            {\n                ok();\n            }\n        };\n        \n        wbScpDirectory.addSelectionListener\n\t\t(\n\t\t\tnew SelectionAdapter()\n\t\t\t{\n\t\t\t\tpublic void widgetSelected(SelectionEvent e)\n\t\t\t\t{\n\t\t\t\t\tDirectoryDialog ddialog = new DirectoryDialog(shell, SWT.OPEN);\n\t\t\t\t\tif (wScpDirectory.getText()!=null)\n\t\t\t\t\t{\n\t\t\t\t\t\tddialog.setFilterPath(jobMeta.environmentSubstitute(wScpDirectory.getText()) );\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\t // Calling open() will open and run the dialog.\n\t\t\t        // It will return the selected directory, or\n\t\t\t        // null if user cancels\n\t\t\t        String dir = ddialog.open();\n\t\t\t        if (dir != null) {\n\t\t\t          // Set the text box to the new selection\n\t\t\t        \twScpDirectory.setText(dir);\n\t\t\t        }\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t}\n\t\t);\n\t\t\n\n        wCancel.addListener(SWT.Selection, lsCancel);\n        wOK.addListener(SWT.Selection, lsOK);\n\n        lsDef = new SelectionAdapter()\n        {\n            public void widgetDefaultSelected(SelectionEvent e)\n            {\n                ok();\n            }\n        };\n\n        wName.addSelectionListener(lsDef);\n        wServerName.addSelectionListener(lsDef);\n        wUserName.addSelectionListener(lsDef);\n        wPassword.addSelectionListener(lsDef);\n        wScpDirectory.addSelectionListener(lsDef);\n        wTargetDirectory.addSelectionListener(lsDef);\n        wWildcard.addSelectionListener(lsDef);\n\n        // Detect X or ALT-F4 or something that kills this window...\n        shell.addShellListener(new ShellAdapter()\n        {\n            public void shellClosed(ShellEvent e)\n            {\n                cancel();\n            }\n        });\n\n        getData();\n\n        BaseStepDialog.setSize(shell);\n\n        shell.open();\n        props.setDialogSize(shell, \"JobSFTPDialogSize\");\n        while (!shell.isDisposed())\n        {\n            if (!display.readAndDispatch())\n                display.sleep();\n        }\n        return jobEntry;\n    }","id":55171,"modified_method":"public JobEntryInterface open()\n    {\n        Shell parent = getParent();\n        Display display = parent.getDisplay();\n\n        shell = new Shell(parent, props.getJobsDialogStyle());\n        props.setLook(shell);\n        JobDialog.setShellImage(shell, jobEntry);\n\n        ModifyListener lsMod = new ModifyListener()\n        {\n            public void modifyText(ModifyEvent e)\n            {\n                jobEntry.setChanged();\n            }\n        };\n        changed = jobEntry.hasChanged();\n\n        FormLayout formLayout = new FormLayout();\n        formLayout.marginWidth = Const.FORM_MARGIN;\n        formLayout.marginHeight = Const.FORM_MARGIN;\n\n        shell.setLayout(formLayout);\n        shell.setText(Messages.getString(\"JobFTPPUT.Title\"));\n\n        int middle = props.getMiddlePct();\n        int margin = Const.MARGIN;\n\n        // Filename line\n        wlName = new Label(shell, SWT.RIGHT);\n        wlName.setText(Messages.getString(\"JobFTPPUT.Name.Label\"));\n        props.setLook(wlName);\n        fdlName = new FormData();\n        fdlName.left = new FormAttachment(0, 0);\n        fdlName.right = new FormAttachment(middle, -margin);\n        fdlName.top = new FormAttachment(0, margin);\n        wlName.setLayoutData(fdlName);\n        wName = new Text(shell, SWT.SINGLE | SWT.LEFT | SWT.BORDER);\n        props.setLook(wName);\n        wName.addModifyListener(lsMod);\n        fdName = new FormData();\n        fdName.left = new FormAttachment(middle, 0);\n        fdName.top = new FormAttachment(0, margin);\n        fdName.right = new FormAttachment(100, 0);\n        wName.setLayoutData(fdName);\n\n        // ServerName line\n        wlServerName = new Label(shell, SWT.RIGHT);\n        wlServerName.setText(Messages.getString(\"JobFTPPUT.Server.Label\"));\n        props.setLook(wlServerName);\n        fdlServerName = new FormData();\n        fdlServerName.left = new FormAttachment(0, 0);\n        fdlServerName.top = new FormAttachment(wName, margin);\n        fdlServerName.right = new FormAttachment(middle, -margin);\n        wlServerName.setLayoutData(fdlServerName);\n        wServerName = new TextVar(jobMeta, shell, SWT.SINGLE | SWT.LEFT | SWT.BORDER);\n        props.setLook(wServerName);\n        wServerName.addModifyListener(lsMod);\n        fdServerName = new FormData();\n        fdServerName.left = new FormAttachment(middle, 0);\n        fdServerName.top = new FormAttachment(wName, margin);\n        fdServerName.right = new FormAttachment(100, 0);\n        wServerName.setLayoutData(fdServerName);\n\n        // ServerPort line\n        wlServerPort = new Label(shell, SWT.RIGHT);\n        wlServerPort.setText(Messages.getString(\"JobFTPPUT.Port.Label\"));\n        props.setLook(wlServerPort);\n        fdlServerPort = new FormData();\n        fdlServerPort.left = new FormAttachment(0, 0);\n        fdlServerPort.top = new FormAttachment(wServerName, margin);\n        fdlServerPort.right = new FormAttachment(middle, -margin);\n        wlServerPort.setLayoutData(fdlServerPort);\n        wServerPort = new TextVar(jobMeta, shell, SWT.SINGLE | SWT.LEFT | SWT.BORDER);\n        props.setLook(wServerPort);\n        wServerPort.setToolTipText(Messages.getString(\"JobFTPPUT.Port.Tooltip\"));\n        wServerPort.addModifyListener(lsMod);\n        fdServerPort = new FormData();\n        fdServerPort.left = new FormAttachment(middle, 0);\n        fdServerPort.top = new FormAttachment(wServerName, margin);\n        fdServerPort.right = new FormAttachment(100, 0);\n        wServerPort.setLayoutData(fdServerPort);\n\n        // UserName line\n        wlUserName = new Label(shell, SWT.RIGHT);\n        wlUserName.setText(Messages.getString(\"JobFTPPUT.Username.Label\"));\n        props.setLook(wlUserName);\n        fdlUserName = new FormData();\n        fdlUserName.left = new FormAttachment(0, 0);\n        fdlUserName.top = new FormAttachment(wServerPort, margin);\n        fdlUserName.right = new FormAttachment(middle, -margin);\n        wlUserName.setLayoutData(fdlUserName);\n        wUserName = new TextVar(jobMeta, shell, SWT.SINGLE | SWT.LEFT | SWT.BORDER);\n        props.setLook(wUserName);\n        wUserName.addModifyListener(lsMod);\n        fdUserName = new FormData();\n        fdUserName.left = new FormAttachment(middle, 0);\n        fdUserName.top = new FormAttachment(wServerPort, margin);\n        fdUserName.right = new FormAttachment(100, 0);\n        wUserName.setLayoutData(fdUserName);\n\n        // Password line\n        wlPassword = new Label(shell, SWT.RIGHT);\n        wlPassword.setText(Messages.getString(\"JobFTPPUT.Password.Label\"));\n        props.setLook(wlPassword);\n        fdlPassword = new FormData();\n        fdlPassword.left = new FormAttachment(0, 0);\n        fdlPassword.top = new FormAttachment(wUserName, margin);\n        fdlPassword.right = new FormAttachment(middle, -margin);\n        wlPassword.setLayoutData(fdlPassword);\n        wPassword = new TextVar(jobMeta, shell, SWT.SINGLE | SWT.LEFT | SWT.BORDER);\n        props.setLook(wPassword);\n        wPassword.setEchoChar('*');\n        wPassword.addModifyListener(lsMod);\n        fdPassword = new FormData();\n        fdPassword.left = new FormAttachment(middle, 0);\n        fdPassword.top = new FormAttachment(wUserName, margin);\n        fdPassword.right = new FormAttachment(100, 0);\n        wPassword.setLayoutData(fdPassword);\n\n\n        // Local (source) directory line\n        wlLocalDirectory = new Label(shell, SWT.RIGHT);\n        wlLocalDirectory.setText(Messages.getString(\"JobFTPPUT.LocalDir.Label\"));\n        props.setLook(wlLocalDirectory);\n        fdlLocalDirectory = new FormData();\n        fdlLocalDirectory.left = new FormAttachment(0, 0);\n        fdlLocalDirectory.top = new FormAttachment(wPassword, margin);\n        fdlLocalDirectory.right = new FormAttachment(middle, -margin);\n        wlLocalDirectory.setLayoutData(fdlLocalDirectory);\n        \n        // Browse folders button ...\n\t\twbLocalDirectory=new Button(shell, SWT.PUSH| SWT.CENTER);\n\t\tprops.setLook(wbLocalDirectory);\n\t\twbLocalDirectory.setText(Messages.getString(\"JobFTPPUT.BrowseFolders.Label\"));\n\t\tfdbLocalDirectory=new FormData();\n\t\tfdbLocalDirectory.right= new FormAttachment(100, 0);\n\t\tfdbLocalDirectory.top  = new FormAttachment(wPassword, margin);\n\t\twbLocalDirectory.setLayoutData(fdbLocalDirectory);\n        \n        wLocalDirectory = new TextVar(jobMeta, shell, SWT.SINGLE | SWT.LEFT | SWT.BORDER, Messages\n            .getString(\"JobFTPPUT.LocalDir.Tooltip\"));\n        props.setLook(wLocalDirectory);\n        wLocalDirectory.addModifyListener(lsMod);\n        fdLocalDirectory = new FormData();\n        fdLocalDirectory.left = new FormAttachment(middle, 0);\n        fdLocalDirectory.top = new FormAttachment(wPassword, margin);\n        fdLocalDirectory.right = new FormAttachment(wbLocalDirectory, -margin);\n        wLocalDirectory.setLayoutData(fdLocalDirectory);\n\n        // Remote Directory line\n        wlRemoteDirectory = new Label(shell, SWT.RIGHT);\n        wlRemoteDirectory.setText(Messages.getString(\"JobFTPPUT.RemoteDir.Label\"));\n        props.setLook(wlRemoteDirectory);\n        fdlRemoteDirectory = new FormData();\n        fdlRemoteDirectory.left = new FormAttachment(0, 0);\n        fdlRemoteDirectory.top = new FormAttachment(wLocalDirectory, margin);\n        fdlRemoteDirectory.right = new FormAttachment(middle, -margin);\n        wlRemoteDirectory.setLayoutData(fdlRemoteDirectory);\n        wRemoteDirectory = new TextVar(jobMeta, shell, SWT.SINGLE | SWT.LEFT | SWT.BORDER, Messages\n            .getString(\"JobFTPPUT.RemoteDir.Tooltip\"));\n        props.setLook(wRemoteDirectory);\n        wRemoteDirectory.addModifyListener(lsMod);\n        fdRemoteDirectory = new FormData();\n        fdRemoteDirectory.left = new FormAttachment(middle, 0);\n        fdRemoteDirectory.top = new FormAttachment(wLocalDirectory, margin);\n        fdRemoteDirectory.right = new FormAttachment(100, 0);\n        wRemoteDirectory.setLayoutData(fdRemoteDirectory);\n        \n        // Wildcard line\n        wlWildcard = new Label(shell, SWT.RIGHT);\n        wlWildcard.setText(Messages.getString(\"JobFTPPUT.Wildcard.Label\"));\n        props.setLook(wlWildcard);\n        fdlWildcard = new FormData();\n        fdlWildcard.left = new FormAttachment(0, 0);\n        fdlWildcard.top = new FormAttachment(wRemoteDirectory, margin);\n        fdlWildcard.right = new FormAttachment(middle, -margin);\n        wlWildcard.setLayoutData(fdlWildcard);\n        wWildcard = new TextVar(jobMeta, shell, SWT.SINGLE | SWT.LEFT | SWT.BORDER, Messages.getString(\"JobFTPPUT.Wildcard.Tooltip\"));\n        props.setLook(wWildcard);\n        wWildcard.addModifyListener(lsMod);\n        fdWildcard = new FormData();\n        fdWildcard.left = new FormAttachment(middle, 0);\n        fdWildcard.top = new FormAttachment(wRemoteDirectory, margin);\n        fdWildcard.right = new FormAttachment(100, 0);\n        wWildcard.setLayoutData(fdWildcard);\n        \n        // Binary mode selection...\n        wlBinaryMode = new Label(shell, SWT.RIGHT);\n        wlBinaryMode.setText(Messages.getString(\"JobFTPPUT.BinaryMode.Label\"));\n        props.setLook(wlBinaryMode);\n        fdlBinaryMode = new FormData();\n        fdlBinaryMode.left = new FormAttachment(0, 0);\n        fdlBinaryMode.top = new FormAttachment(wWildcard, margin);\n        fdlBinaryMode.right = new FormAttachment(middle, 0);\n        wlBinaryMode.setLayoutData(fdlBinaryMode);\n        wBinaryMode = new Button(shell, SWT.CHECK);\n        props.setLook(wBinaryMode);\n        wBinaryMode.setToolTipText(Messages.getString(\"JobFTPPUT.BinaryMode.Tooltip\"));\n        fdBinaryMode = new FormData();\n        fdBinaryMode.left = new FormAttachment(middle, 0);\n        fdBinaryMode.top = new FormAttachment(wWildcard, margin);\n        fdBinaryMode.right = new FormAttachment(100, 0);\n        wBinaryMode.setLayoutData(fdBinaryMode);\n\n        // Timeout line\n        wTimeout = new LabelTextVar(jobMeta, shell, Messages.getString(\"JobFTPPUT.Timeout.Label\"), Messages.getString(\"JobFTPPUT.Timeout.Tooltip\"));\n        props.setLook(wTimeout);\n        wTimeout.addModifyListener(lsMod);\n        fdTimeout = new FormData();\n        fdTimeout.left = new FormAttachment(0, 0);\n        fdTimeout.top = new FormAttachment(wlBinaryMode, margin);\n        fdTimeout.right = new FormAttachment(100, 0);\n        wTimeout.setLayoutData(fdTimeout);\n\n\n        // Remove files after retrieval...\n        wlRemove = new Label(shell, SWT.RIGHT);\n        wlRemove.setText(Messages.getString(\"JobFTPPUT.RemoveFiles.Label\"));\n        props.setLook(wlRemove);\n        fdlRemove = new FormData();\n        fdlRemove.left = new FormAttachment(0, 0);\n        fdlRemove.top = new FormAttachment(wTimeout, margin);\n        fdlRemove.right = new FormAttachment(middle, -margin);\n        wlRemove.setLayoutData(fdlRemove);\n        wRemove = new Button(shell, SWT.CHECK);\n        props.setLook(wRemove);\n        wRemove.setToolTipText(Messages.getString(\"JobFTPPUT.RemoveFiles.Tooltip\"));\n        fdRemove = new FormData();\n        fdRemove.left = new FormAttachment(middle, 0);\n        fdRemove.top = new FormAttachment(wTimeout, margin);\n        fdRemove.right = new FormAttachment(100, 0);\n        wRemove.setLayoutData(fdRemove);\n        \n        // OnlyNew files after retrieval...\n        wlOnlyNew = new Label(shell, SWT.RIGHT);\n        wlOnlyNew.setText(Messages.getString(\"JobFTPPUT.DontOverwrite.Label\"));\n        props.setLook(wlOnlyNew);\n        fdlOnlyNew = new FormData();\n        fdlOnlyNew.left = new FormAttachment(0, 0);\n        fdlOnlyNew.top = new FormAttachment(wRemove, margin);\n        fdlOnlyNew.right = new FormAttachment(middle, 0);\n        wlOnlyNew.setLayoutData(fdlOnlyNew);\n        wOnlyNew = new Button(shell, SWT.CHECK);\n        wOnlyNew.setToolTipText(Messages.getString(\"JobFTPPUT.DontOverwrite.Tooltip\"));\n        props.setLook(wOnlyNew);\n        fdOnlyNew = new FormData();\n        fdOnlyNew.left = new FormAttachment(middle, 0);\n        fdOnlyNew.top = new FormAttachment(wRemove, margin);\n        fdOnlyNew.right = new FormAttachment(100, 0);\n        wOnlyNew.setLayoutData(fdOnlyNew);\n\n        // active connection?\n        wlActive = new Label(shell, SWT.RIGHT);\n        wlActive.setText(Messages.getString(\"JobFTPPUT.ActiveConns.Label\"));\n        props.setLook(wlActive);\n        fdlActive = new FormData();\n        fdlActive.left = new FormAttachment(0, 0);\n        fdlActive.top = new FormAttachment(wOnlyNew, margin);\n        fdlActive.right = new FormAttachment(middle, 0);\n        wlActive.setLayoutData(fdlActive);\n        wActive = new Button(shell, SWT.CHECK);\n        wActive.setToolTipText(Messages.getString(\"JobFTPPUT.ActiveConns.Tooltip\"));\n        props.setLook(wActive);\n        fdActive = new FormData();\n        fdActive.left = new FormAttachment(middle, 0);\n        fdActive.top = new FormAttachment(wOnlyNew, margin);\n        fdActive.right = new FormAttachment(100, 0);\n        wActive.setLayoutData(fdActive);\n        \n        // Control encoding line\n        //\n        // The drop down is editable as it may happen an encoding may not be present\n        // on one machine, but you may want to use it on your execution server\n        //\n        wlControlEncoding=new Label(shell, SWT.RIGHT);\n        wlControlEncoding.setText(Messages.getString(\"JobFTPPUT.ControlEncoding.Label\"));\n        props.setLook(wlControlEncoding);\n        fdlControlEncoding=new FormData();\n        fdlControlEncoding.left  = new FormAttachment(0, 0);\n        fdlControlEncoding.top   = new FormAttachment(wActive, margin);\n        fdlControlEncoding.right = new FormAttachment(middle, 0);\n        wlControlEncoding.setLayoutData(fdlControlEncoding);\n        wControlEncoding=new Combo(shell, SWT.SINGLE | SWT.LEFT | SWT.BORDER);\n        wControlEncoding.setToolTipText(Messages.getString(\"JobFTPPUT.ControlEncoding.Tooltip\"));\n        wControlEncoding.setItems(encodings);\n        props.setLook(wControlEncoding);\n        fdControlEncoding=new FormData();\n        fdControlEncoding.left = new FormAttachment(middle, 0);\n        fdControlEncoding.top  = new FormAttachment(wActive, margin);\n        fdControlEncoding.right= new FormAttachment(100, 0);        \n        wControlEncoding.setLayoutData(fdControlEncoding); \n\n        wOK = new Button(shell, SWT.PUSH);\n        wOK.setText(Messages.getString(\"System.Button.OK\"));\n        wCancel = new Button(shell, SWT.PUSH);\n        wCancel.setText(Messages.getString(\"System.Button.Cancel\"));\n\n        BaseStepDialog.positionBottomButtons(shell, new Button[] { wOK, wCancel }, margin, wControlEncoding);\n\n        // Add listeners\n        lsCancel = new Listener()\n        {\n            public void handleEvent(Event e)\n            {\n                cancel();\n            }\n        };\n        lsOK = new Listener()\n        {\n            public void handleEvent(Event e)\n            {\n                ok();\n            }\n        };\n        \n        wbLocalDirectory.addSelectionListener\n\t\t(\n\t\t\tnew SelectionAdapter()\n\t\t\t{\n\t\t\t\tpublic void widgetSelected(SelectionEvent e)\n\t\t\t\t{\n\t\t\t\t\tDirectoryDialog ddialog = new DirectoryDialog(shell, SWT.OPEN);\n\t\t\t\t\tif (wLocalDirectory.getText()!=null)\n\t\t\t\t\t{\n\t\t\t\t\t\tddialog.setFilterPath(jobMeta.environmentSubstitute(wLocalDirectory.getText()) );\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\t // Calling open() will open and run the dialog.\n\t\t\t        // It will return the selected directory, or\n\t\t\t        // null if user cancels\n\t\t\t        String dir = ddialog.open();\n\t\t\t        if (dir != null) {\n\t\t\t          // Set the text box to the new selection\n\t\t\t        \twLocalDirectory.setText(dir);\n\t\t\t        }\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t}\n\t\t);\n\t\t\n\n        wCancel.addListener(SWT.Selection, lsCancel);\n        wOK.addListener(SWT.Selection, lsOK);\n\n        lsDef = new SelectionAdapter()\n        {\n            public void widgetDefaultSelected(SelectionEvent e)\n            {\n                ok();\n            }\n        };\n\n        wName.addSelectionListener(lsDef);\n        wServerName.addSelectionListener(lsDef);\n        wUserName.addSelectionListener(lsDef);\n        wPassword.addSelectionListener(lsDef);\n        wRemoteDirectory.addSelectionListener(lsDef);\n        wLocalDirectory.addSelectionListener(lsDef);\n        wWildcard.addSelectionListener(lsDef);\n\n        // Detect X or ALT-F4 or something that kills this window...\n        shell.addShellListener(new ShellAdapter()\n        {\n            public void shellClosed(ShellEvent e)\n            {\n                cancel();\n            }\n        });\n\n        getData();\n\n        BaseStepDialog.setSize(shell);\n\n        shell.open();\n        props.setDialogSize(shell, \"JobSFTPDialogSize\");\n        while (!shell.isDisposed())\n        {\n            if (!display.readAndDispatch())\n                display.sleep();\n        }\n        return jobEntry;\n    }","commit_id":"587a532df609b268bed4d712b1f3565f6ae0669a","url":"https://github.com/pentaho/pentaho-kettle"},{"original_method":"public synchronized void setResponse(String uid, HttpServletResponse response) {        \n        ChannelState channelState = (ChannelState)channelStateMap.get(uid);\n        ChannelData cd = channelState.getChannelData();\n        ChannelStaticData sd = channelState.getStaticData();\n        PortalControlStructures pcs = channelState.getPortalControlStructures();\n        \n        try {\n            PortletContainerServices.prepare(uniqueContainerName);\n\n            PortletWindowImpl portletWindow = (PortletWindowImpl)cd.getPortletWindow();\n            \n            // Get the portlet url manager which will analyze the request parameters\n            DynamicInformationProvider dip = InformationProviderAccess.getDynamicProvider(pcs.getHttpServletRequest());\n            PortletStateManager psm = ((DynamicInformationProviderImpl)dip).getPortletStateManager(portletWindow);\n            \n            //Since the portlet is rendering through IDirectResponse change the window state to \"exclusive\"\n            PortletActionProvider pap = dip.getPortletActionProvider(portletWindow);\n            pap.changePortletWindowState(new WindowState(\"exclusive\"));\n\n            //Create the request to send to the portlet container\n            HttpServletRequest wrappedRequest = new ServletRequestImpl(pcs.getHttpServletRequest(), sd.getPerson(), \n                    portletWindow.getPortletEntity().getPortletDefinition().getInitSecurityRoleRefSet());\n                \n            //Set up request attributes (user info, portal session, etc...)\n            setupRequestAttributes(wrappedRequest, uid);\n            wrappedRequest = new PortletParameterRequestWrapper(wrappedRequest);\n\n            HttpServletResponse wrappedResponse = new OutputStreamResponseWrapper(response);\n\n            //render the portlet\n            portletContainer.renderPortlet(cd.getPortletWindow(), wrappedRequest, wrappedResponse);\n            \n            //Ensure all the data gets written out\n            wrappedResponse.flushBuffer();\n            \n            cd.setProcessedAction(false);\n                        \n        } catch (Throwable t) {\n            log.error(t, t);\n        } finally {\n            PortletContainerServices.release();\n        }\n    }","id":55172,"modified_method":"public synchronized void setResponse(String uid, HttpServletResponse response) {        \n        ChannelState channelState = (ChannelState)channelStateMap.get(uid);\n        ChannelData cd = channelState.getChannelData();\n        ChannelStaticData sd = channelState.getStaticData();\n        PortalControlStructures pcs = channelState.getPortalControlStructures();\n        \n        try {\n            PortletContainerServices.prepare(uniqueContainerName);\n            \n            final PortletWindowImpl portletWindow = (PortletWindowImpl)cd.getPortletWindow();\n            final PortletEntity portletEntity = portletWindow.getPortletEntity();\n            final PortletDefinition portletDef = portletEntity.getPortletDefinition();\n            final HttpServletRequest baseRequest = pcs.getHttpServletRequest();\n\n            HttpServletRequest wrappedRequest = new ServletRequestImpl(baseRequest, sd.getPerson(), portletDef.getInitSecurityRoleRefSet());\n            \n            //Wrap the request to scope attributes to this portlet instance\n            wrappedRequest = new PortletAttributeRequestWrapper(wrappedRequest);\n            \n            //Set up request attributes (user info, portal session, etc...)\n            setupRequestAttributes(wrappedRequest, uid);\n            \n            //Hide the request parameters if this portlet isn't targeted \n            wrappedRequest = new PortletParameterRequestWrapper(wrappedRequest);\n\n            \n            //Since the portlet is rendering through IDirectResponse change the window state to \"exclusive\"\n            DynamicInformationProvider dip = InformationProviderAccess.getDynamicProvider(pcs.getHttpServletRequest());\n            PortletActionProvider pap = dip.getPortletActionProvider(portletWindow);\n            pap.changePortletWindowState(new WindowState(\"exclusive\"));\n            \n\n            HttpServletResponse wrappedResponse = new OutputStreamResponseWrapper(response);\n\n            //render the portlet\n            portletContainer.renderPortlet(cd.getPortletWindow(), wrappedRequest, wrappedResponse);\n            \n            //Ensure all the data gets written out\n            wrappedResponse.flushBuffer();\n        } catch (Throwable t) {\n            log.error(t, t);\n        } finally {\n            PortletContainerServices.release();\n        }\n    }","commit_id":"367199d1607d8a6cfa99e68e99203fa3451ebf25","url":"https://github.com/Jasig/uPortal"},{"original_method":"/**\n     * Sets the channel runtime data.\n     * @param rd the channel runtime data\n     * @param uid a unique ID used to identify the state of the channel\n     * @throws org.jasig.portal.PortalException\n     */\n    public void setRuntimeData(ChannelRuntimeData rd, String uid) throws PortalException {\n        ChannelState channelState = (ChannelState)channelStateMap.get(uid);\n        channelState.setRuntimeData(rd);\n        \n        ChannelStaticData sd = channelState.getStaticData();\n        ChannelData cd = channelState.getChannelData();\n        \n        if (!cd.isPortletWindowInitialized()) {\n            this.initPortletWindow(uid);\n        }\n        \n        try {\n            PortletContainerServices.prepare(uniqueContainerName);\n\n            PortalControlStructures pcs = channelState.getPortalControlStructures();\n            HttpServletRequest wrappedRequest = new ServletRequestImpl(pcs.getHttpServletRequest(), sd.getPerson(),\n                    cd.getPortletWindow().getPortletEntity().getPortletDefinition().getInitSecurityRoleRefSet());\n\n            //Set up request attributes (user info, portal session, etc...)\n            setupRequestAttributes(wrappedRequest, uid);\n\n            // Put the current runtime data and wrapped request into the portlet window\n            PortletWindowImpl portletWindow = (PortletWindowImpl)cd.getPortletWindow();\n            portletWindow.setChannelRuntimeData(rd);\n            portletWindow.setHttpServletRequest(wrappedRequest);\n\n            // Get the portlet url manager which will analyze the request parameters\n            DynamicInformationProvider dip = InformationProviderAccess.getDynamicProvider(wrappedRequest);\n            PortletStateManager psm = ((DynamicInformationProviderImpl)dip).getPortletStateManager(portletWindow);\n\n            PortletActionProvider pap = dip.getPortletActionProvider(portletWindow);\n\n            //If portlet is rendering as root, change mode to maximized, otherwise minimized\n            WindowState newWindowState = cd.getNewWindowState();\n            if (!psm.isAction() && rd.isRenderingAsRoot()) {\n                if (WindowState.MINIMIZED.equals(newWindowState)) {\n                    pap.changePortletWindowState(WindowState.MINIMIZED);\n                }\n                else {\n                    pap.changePortletWindowState(WindowState.MAXIMIZED);\n                }\n            } else if (newWindowState != null) {\n                pap.changePortletWindowState(newWindowState);\n            }\n            else if (!psm.isAction()) {\n                pap.changePortletWindowState(WindowState.NORMAL);\n            }\n            cd.setNewWindowState(null);\n\n            PortletMode newMode = cd.getNewPortletMode();\n            if (newMode != null) {\n                pap.changePortletMode(newMode);\n            }\n            cd.setNewPortletMode(null);\n\n            // Process action if this is the targeted channel and the URL is an action URL\n            if (rd.isTargeted() && psm.isAction() && !cd.hasProcessedAction()) {\n                try {\n                    //Create a sink to throw out and output (portlets can't output content during an action)\n                    PrintWriter pw = new PrintWriter(new NullOutputStream());\n                    HttpServletResponse wrappedResponse = ServletObjectAccess.getStoredServletResponse(pcs.getHttpServletResponse(), pw);\n\n                    //See if a WindowState change was requested for an ActionURL\n                    final String newWindowStateName = wrappedRequest.getParameter(PortletStateManager.UP_WINDOW_STATE);\n                    if (newWindowStateName != null) {\n                        pap.changePortletWindowState(new WindowState(newWindowStateName));\n                    }\n\n                    HttpServletRequest wrappedPortletRequest = new PortletParameterRequestWrapper(wrappedRequest);\n                    // record a portlet action\n\n                    portletContainer.processPortletAction(portletWindow, wrappedPortletRequest, wrappedResponse);\n                    InternalActionResponse actionResponse = (InternalActionResponse)PortletObjectAccess.getActionResponse(cd.getPortletWindow(), pcs.getHttpServletRequest(), pcs.getHttpServletResponse());\n                    cd.setProcessedAction(true);\n                } catch (Exception e) {\n                    throw new PortalException(e);\n                }\n            }\n        } finally {\n            PortletContainerServices.release();\n        }\n        \n    }","id":55173,"modified_method":"/**\n     * Sets the channel runtime data.\n     * @param rd the channel runtime data\n     * @param uid a unique ID used to identify the state of the channel\n     * @throws org.jasig.portal.PortalException\n     */\n    public void setRuntimeData(ChannelRuntimeData rd, String uid) throws PortalException {\n        ChannelState channelState = (ChannelState)channelStateMap.get(uid);\n        ChannelData cd = channelState.getChannelData();\n        ChannelStaticData sd = channelState.getStaticData();\n        PortalControlStructures pcs = channelState.getPortalControlStructures();\n        \n        channelState.setRuntimeData(rd);\n\n        if (!cd.isPortletWindowInitialized()) {\n            this.initPortletWindow(uid);\n        }\n\n        try {\n            PortletContainerServices.prepare(uniqueContainerName);\n            \n            final PortletWindowImpl portletWindow = (PortletWindowImpl)cd.getPortletWindow();\n            final PortletEntity portletEntity = portletWindow.getPortletEntity();\n            final PortletDefinition portletDef = portletEntity.getPortletDefinition();\n            final HttpServletRequest baseRequest = pcs.getHttpServletRequest();\n\n            HttpServletRequest wrappedRequest = new ServletRequestImpl(baseRequest, sd.getPerson(), portletDef.getInitSecurityRoleRefSet());\n            \n            //Wrap the request to scope attributes to this portlet instance\n            wrappedRequest = new PortletAttributeRequestWrapper(wrappedRequest);\n            \n            //Set up request attributes (user info, portal session, etc...)\n            setupRequestAttributes(wrappedRequest, uid);\n\n            // Put the current runtime data and wrapped request into the portlet window\n            portletWindow.setChannelRuntimeData(rd);\n            portletWindow.setHttpServletRequest(wrappedRequest);\n\n            // Get the portlet url manager which will analyze the request parameters\n            DynamicInformationProvider dip = InformationProviderAccess.getDynamicProvider(wrappedRequest);\n            PortletStateManager psm = ((DynamicInformationProviderImpl)dip).getPortletStateManager(portletWindow);\n            PortletActionProvider pap = dip.getPortletActionProvider(portletWindow);\n\n            //If portlet is rendering as root, change mode to maximized, otherwise minimized\n            WindowState newWindowState = cd.getNewWindowState();\n            if (!psm.isAction() && rd.isRenderingAsRoot()) {\n                if (WindowState.MINIMIZED.equals(newWindowState)) {\n                    pap.changePortletWindowState(WindowState.MINIMIZED);\n                }\n                else {\n                    pap.changePortletWindowState(WindowState.MAXIMIZED);\n                }\n            } else if (newWindowState != null) {\n                pap.changePortletWindowState(newWindowState);\n            }\n            else if (!psm.isAction()) {\n                pap.changePortletWindowState(WindowState.NORMAL);\n            }\n            cd.setNewWindowState(null);\n\n            //Check for a portlet mode change\n            PortletMode newMode = cd.getNewPortletMode();\n            if (newMode != null) {\n                pap.changePortletMode(newMode);\n                PortletStateManager.setMode(portletWindow, newMode);\n            }\n            cd.setNewPortletMode(null);\n\n            // Process action if this is the targeted channel and the URL is an action URL\n            if (rd.isTargeted() && psm.isAction()) {\n                //Create a sink to throw out and output (portlets can't output content during an action)\n                PrintWriter pw = new PrintWriter(new NullOutputStream());\n                HttpServletResponse wrappedResponse = ServletObjectAccess.getStoredServletResponse(pcs.getHttpServletResponse(), pw);\n\n                try {\n                    //See if a WindowState change was requested for an ActionURL\n                    final String newWindowStateName = wrappedRequest.getParameter(PortletStateManager.UP_WINDOW_STATE);\n                    if (newWindowStateName != null) {\n                        pap.changePortletWindowState(new WindowState(newWindowStateName));\n                    }\n\n                    HttpServletRequest wrappedPortletRequest = new PortletParameterRequestWrapper(wrappedRequest);\n\n                    portletContainer.processPortletAction(portletWindow, wrappedPortletRequest, wrappedResponse);\n                } catch (Exception e) {\n                    throw new PortalException(e);\n                }\n            }\n        } finally {\n            PortletContainerServices.release();\n        }        \n    }","commit_id":"367199d1607d8a6cfa99e68e99203fa3451ebf25","url":"https://github.com/Jasig/uPortal"},{"original_method":"/**\n     * This is where we do the real work of getting the markup.\n     * This is called from both renderXML() and renderCharacters().\n     * @param uid a unique ID used to identify the state of the channel\n     * @return markup representing channel content\n     */\n    protected synchronized String getMarkup(String uid) throws PortalException {\n        ChannelState channelState = (ChannelState)channelStateMap.get(uid);\n        ChannelRuntimeData rd = channelState.getRuntimeData();\n        ChannelStaticData sd = channelState.getStaticData();\n        ChannelData cd = channelState.getChannelData();\n        PortletWindow portletWindow = cd.getPortletWindow();\n        PortalControlStructures pcs = channelState.getPortalControlStructures();\n        \n        String markup = \"<b>Problem rendering portlet \" + sd.getParameter(\"portletDefinitionId\") + \"<\/b>\";\n        \n        try {\n            PortletContainerServices.prepare(uniqueContainerName);\n\n            StringWriter sw = new StringWriter();\n            PrintWriter pw = new PrintWriter(sw);\n            HttpServletRequest wrappedRequest = new ServletRequestImpl(((PortletWindowImpl)cd.getPortletWindow()).getHttpServletRequest(), \n                                                                       sd.getPerson(), \n                                                                       portletWindow.getPortletEntity().getPortletDefinition().getInitSecurityRoleRefSet());\n            \n            HttpServletResponse wrappedResponse = ServletObjectAccess.getStoredServletResponse(pcs.getHttpServletResponse(), pw);\n           \n                                                \n            // Hide the request parameters if this portlet isn't targeted\n            final String sessionParamsKey = REQUEST_PARAMS_KEY + \".\" + uid;\n            if (!rd.isTargeted()) {\n                final HttpSession portalSession = pcs.getHttpServletRequest().getSession(false);\n                final Map requestParams;\n                if (portalSession != null) {\n                    requestParams = (Map)portalSession.getAttribute(sessionParamsKey);\n                }\n                else {\n                    requestParams = null;\n                }\n\n                wrappedRequest = new DummyParameterRequestWrapper(wrappedRequest, requestParams);\n            }\n            // Use the parameters from the last request so the portlet maintains it's state\n            else {\n                wrappedRequest = new PortletParameterRequestWrapper(wrappedRequest);\n\n                final HttpSession portalSession = pcs.getHttpServletRequest().getSession(true);\n                portalSession.setAttribute(sessionParamsKey, wrappedRequest.getParameterMap());\n            }\n            \n            //Set up request attributes (user info, portal session, etc...)\n            setupRequestAttributes(wrappedRequest, uid);\n            \n            //System.out.println(\"Rendering portlet \" + cd.getPortletWindow().getId());\n            portletContainer.renderPortlet(portletWindow, wrappedRequest, wrappedResponse);\n            \n            //Support for the portlet modifying it's cache timeout\n            Map properties = PropertyManager.getRequestProperties(portletWindow, wrappedRequest);\n            String[] exprCacheTimeStr = (String[])properties.get(RenderResponse.EXPIRATION_CACHE);\n            \n            if (exprCacheTimeStr != null && exprCacheTimeStr.length > 0) {\n                PortletEntity pe = portletWindow.getPortletEntity();\n                PortletDefinition pd = pe.getPortletDefinition();\n                                \n                try {\n                    Integer.parseInt(exprCacheTimeStr[0]); //Check for valid number\n                    cd.setExpirationCache(exprCacheTimeStr[0]);\n                }\n                catch (NumberFormatException nfe) {\n                    log.error(\"The specified RenderResponse.EXPIRATION_CACHE value of (\" + exprCacheTimeStr + \") is not a number.\", nfe);\n                    throw nfe;\n                }\n            }\n            \n            markup = sw.toString();\n            \n            cd.setProcessedAction(false);\n                        \n        } catch (Throwable t) {\n            log.error(t, t);\n            throw new PortalException(t);\n        } finally {\n            PortletContainerServices.release();\n        }\n        \n        //Keep track of the last time the portlet was successfully rendered\n        cd.setLastRenderTime(System.currentTimeMillis());\n        \n        return markup;\n    }","id":55174,"modified_method":"/**\n     * This is where we do the real work of getting the markup.\n     * This is called from both renderXML() and renderCharacters().\n     * @param uid a unique ID used to identify the state of the channel\n     * @return markup representing channel content\n     */\n    protected synchronized String getMarkup(String uid) throws PortalException {\n        ChannelState channelState = (ChannelState)channelStateMap.get(uid);\n        ChannelData cd = channelState.getChannelData();\n        ChannelStaticData sd = channelState.getStaticData();\n        PortalControlStructures pcs = channelState.getPortalControlStructures();\n        \n        try {\n            PortletContainerServices.prepare(uniqueContainerName);\n            \n            final PortletWindowImpl portletWindow = (PortletWindowImpl)cd.getPortletWindow();\n            final PortletEntity portletEntity = portletWindow.getPortletEntity();\n            final PortletDefinition portletDef = portletEntity.getPortletDefinition();\n            final HttpServletRequest baseRequest = pcs.getHttpServletRequest();\n\n            HttpServletRequest wrappedRequest = new ServletRequestImpl(baseRequest, sd.getPerson(), portletDef.getInitSecurityRoleRefSet());\n            \n            //Wrap the request to scope attributes to this portlet instance\n            wrappedRequest = new PortletAttributeRequestWrapper(wrappedRequest);\n            \n            //Set up request attributes (user info, portal session, etc...)\n            setupRequestAttributes(wrappedRequest, uid);\n\n            \n            final StringWriter sw = new StringWriter();\n            HttpServletResponse wrappedResponse = ServletObjectAccess.getStoredServletResponse(pcs.getHttpServletResponse(), new PrintWriter(sw));\n           \n                                                \n            //Use the parameters from the last request so the portlet maintains it's state\n            final ChannelRuntimeData rd = channelState.getRuntimeData();\n            final String sessionParamsKey = REQUEST_PARAMS_KEY + \".\" + uid;\n            if (!rd.isTargeted()) {\n                final HttpSession portalSession = pcs.getHttpServletRequest().getSession(false);\n                \n                final Map requestParams;\n                if (portalSession != null) {\n                    requestParams = (Map)portalSession.getAttribute(sessionParamsKey);\n                }\n                else {\n                    requestParams = null;\n                }\n\n                wrappedRequest = new DummyParameterRequestWrapper(wrappedRequest, requestParams);\n            }\n            //Hide the request parameters if this portlet isn't targeted\n            else {\n                wrappedRequest = new PortletParameterRequestWrapper(wrappedRequest);\n\n                final HttpSession portalSession = pcs.getHttpServletRequest().getSession(true);\n                portalSession.setAttribute(sessionParamsKey, wrappedRequest.getParameterMap());\n            }\n\n            portletContainer.renderPortlet(portletWindow, wrappedRequest, wrappedResponse);\n            \n            //Support for the portlet modifying it's cache timeout\n            final Map properties = PropertyManager.getRequestProperties(portletWindow, wrappedRequest);\n            final String[] exprCacheTimeStr = (String[])properties.get(RenderResponse.EXPIRATION_CACHE);\n            \n            if (exprCacheTimeStr != null && exprCacheTimeStr.length > 0) {\n                try {\n                    Integer.parseInt(exprCacheTimeStr[0]); //Check for valid number\n                    cd.setExpirationCache(exprCacheTimeStr[0]);\n                }\n                catch (NumberFormatException nfe) {\n                    log.error(\"The specified RenderResponse.EXPIRATION_CACHE value of (\" + exprCacheTimeStr + \") is not a number.\", nfe);\n                    throw nfe;\n                }\n            }\n            \n            //Keep track of the last time the portlet was successfully rendered\n            cd.setLastRenderTime(System.currentTimeMillis());\n            \n            //Return the content\n            return sw.toString();\n                        \n        } catch (Throwable t) {\n            log.error(t, t);\n            throw new PortalException(t);\n        } finally {\n            PortletContainerServices.release();\n        }\n    }","commit_id":"367199d1607d8a6cfa99e68e99203fa3451ebf25","url":"https://github.com/Jasig/uPortal"},{"original_method":"/**\n     * This is where we do the real work of getting the markup.\n     * This is called from both renderXML() and renderCharacters().\n     * @param uid a unique ID used to identify the state of the channel\n     * @return markup representing channel content\n     */\n    protected synchronized String getMarkup(String uid) throws PortalException {\n        ChannelState channelState = (ChannelState)channelStateMap.get(uid);\n        ChannelRuntimeData rd = channelState.getRuntimeData();\n        ChannelStaticData sd = channelState.getStaticData();\n        ChannelData cd = channelState.getChannelData();\n        PortletWindow portletWindow = cd.getPortletWindow();\n        PortalControlStructures pcs = channelState.getPortalControlStructures();\n        \n        String markup = \"<b>Problem rendering portlet \" + sd.getParameter(\"portletDefinitionId\") + \"<\/b>\";\n        \n        try {\n            PortletContainerServices.prepare(uniqueContainerName);\n\n            StringWriter sw = new StringWriter();\n            PrintWriter pw = new PrintWriter(sw);\n            HttpServletRequest wrappedRequest = ((PortletWindowImpl)cd.getPortletWindow()).getHttpServletRequest();\n            HttpServletResponse wrappedResponse = ServletObjectAccess.getStoredServletResponse(pcs.getHttpServletResponse(), pw);\n           \n                                                \n            // Hide the request parameters if this portlet isn't targeted\n            if (!rd.isTargeted()) {\n                wrappedRequest = new DummyParameterRequestWrapper(wrappedRequest, cd.getLastRequestParameters());\n            }\n            // Use the parameters from the last request so the portlet maintains it's state\n            else {\n                wrappedRequest = new PortletParameterRequestWrapper(wrappedRequest);\n                cd.setLastRequestParameters(wrappedRequest.getParameterMap());\n            }\n            \n            //Set up request attributes (user info, portal session, etc...)\n            setupRequestAttributes(wrappedRequest, uid);\n            \n            //System.out.println(\"Rendering portlet \" + cd.getPortletWindow().getId());\n            portletContainer.renderPortlet(portletWindow, wrappedRequest, wrappedResponse);\n            \n            //Support for the portlet modifying it's cache timeout\n            Map properties = PropertyManager.getRequestProperties(portletWindow, wrappedRequest);\n            String[] exprCacheTimeStr = (String[])properties.get(RenderResponse.EXPIRATION_CACHE);\n            \n            if (exprCacheTimeStr != null && exprCacheTimeStr.length > 0) {\n                PortletEntity pe = portletWindow.getPortletEntity();\n                PortletDefinition pd = pe.getPortletDefinition();\n                                \n                try {\n                    Integer.parseInt(exprCacheTimeStr[0]); //Check for valid number\n                    cd.setExpirationCache(exprCacheTimeStr[0]);\n                }\n                catch (NumberFormatException nfe) {\n                    log.error(\"The specified RenderResponse.EXPIRATION_CACHE value of (\" + exprCacheTimeStr + \") is not a number.\", nfe);\n                    throw nfe;\n                }\n            }\n            \n            markup = sw.toString();\n            \n            cd.setProcessedAction(false);\n                        \n        } catch (Throwable t) {\n            // TODO: review this\n            // t.printStackTrace();\n            // since the stack trace will be logged, this printStackTrace()\n            // was overkill? -andrew.petro@yale.edu\n            \n            log.error(t, t);\n            throw new PortalException(t);\n        } finally {\n            PortletContainerServices.release();\n        }\n        \n        //Keep track of the last time the portlet was successfully rendered\n        cd.setLastRenderTime(System.currentTimeMillis());\n        \n        return markup;\n    }","id":55175,"modified_method":"/**\n     * This is where we do the real work of getting the markup.\n     * This is called from both renderXML() and renderCharacters().\n     * @param uid a unique ID used to identify the state of the channel\n     * @return markup representing channel content\n     */\n    protected synchronized String getMarkup(String uid) throws PortalException {\n        ChannelState channelState = (ChannelState)channelStateMap.get(uid);\n        ChannelRuntimeData rd = channelState.getRuntimeData();\n        ChannelStaticData sd = channelState.getStaticData();\n        ChannelData cd = channelState.getChannelData();\n        PortletWindow portletWindow = cd.getPortletWindow();\n        PortalControlStructures pcs = channelState.getPortalControlStructures();\n        \n        String markup = \"<b>Problem rendering portlet \" + sd.getParameter(\"portletDefinitionId\") + \"<\/b>\";\n        \n        try {\n            PortletContainerServices.prepare(uniqueContainerName);\n\n            StringWriter sw = new StringWriter();\n            PrintWriter pw = new PrintWriter(sw);\n            HttpServletRequest wrappedRequest = new ServletRequestImpl(((PortletWindowImpl)cd.getPortletWindow()).getHttpServletRequest(), \n                                                                       sd.getPerson(), \n                                                                       portletWindow.getPortletEntity().getPortletDefinition().getInitSecurityRoleRefSet());\n            \n            HttpServletResponse wrappedResponse = ServletObjectAccess.getStoredServletResponse(pcs.getHttpServletResponse(), pw);\n           \n                                                \n            // Hide the request parameters if this portlet isn't targeted\n            if (!rd.isTargeted()) {\n                wrappedRequest = new DummyParameterRequestWrapper(wrappedRequest, cd.getLastRequestParameters());\n            }\n            // Use the parameters from the last request so the portlet maintains it's state\n            else {\n                wrappedRequest = new PortletParameterRequestWrapper(wrappedRequest);\n                cd.setLastRequestParameters(wrappedRequest.getParameterMap());\n            }\n            \n            //Set up request attributes (user info, portal session, etc...)\n            setupRequestAttributes(wrappedRequest, uid);\n            \n            //System.out.println(\"Rendering portlet \" + cd.getPortletWindow().getId());\n            portletContainer.renderPortlet(portletWindow, wrappedRequest, wrappedResponse);\n            \n            //Support for the portlet modifying it's cache timeout\n            Map properties = PropertyManager.getRequestProperties(portletWindow, wrappedRequest);\n            String[] exprCacheTimeStr = (String[])properties.get(RenderResponse.EXPIRATION_CACHE);\n            \n            if (exprCacheTimeStr != null && exprCacheTimeStr.length > 0) {\n                PortletEntity pe = portletWindow.getPortletEntity();\n                PortletDefinition pd = pe.getPortletDefinition();\n                                \n                try {\n                    Integer.parseInt(exprCacheTimeStr[0]); //Check for valid number\n                    cd.setExpirationCache(exprCacheTimeStr[0]);\n                }\n                catch (NumberFormatException nfe) {\n                    log.error(\"The specified RenderResponse.EXPIRATION_CACHE value of (\" + exprCacheTimeStr + \") is not a number.\", nfe);\n                    throw nfe;\n                }\n            }\n            \n            markup = sw.toString();\n            \n            cd.setProcessedAction(false);\n                        \n        } catch (Throwable t) {\n            // TODO: review this\n            // t.printStackTrace();\n            // since the stack trace will be logged, this printStackTrace()\n            // was overkill? -andrew.petro@yale.edu\n            \n            log.error(t, t);\n            throw new PortalException(t);\n        } finally {\n            PortletContainerServices.release();\n        }\n        \n        //Keep track of the last time the portlet was successfully rendered\n        cd.setLastRenderTime(System.currentTimeMillis());\n        \n        return markup;\n    }","commit_id":"d170edc83dc0f9b1f7c84a855615dc4e7052772d","url":"https://github.com/Jasig/uPortal"},{"original_method":"public void handleGet(URI uri, ToadletContext ctx) \n\tthrows ToadletContextClosedException, IOException, RedirectException {\n\t\t\n\t\tStringBuffer buf = new StringBuffer(2048);\n\t\t\n\t\tctx.getPageMaker().makeHead(buf, \"Queued Requests\");\n\t\t\n\t\t// First, get the queued requests, and separate them into different types.\n\t\t\n\t\tLinkedList completedDownloadToDisk = new LinkedList();\n\t\tLinkedList completedDownloadToTemp = new LinkedList();\n\t\tLinkedList completedUpload = new LinkedList();\n\t\tLinkedList completedDirUpload = new LinkedList();\n\t\t\n\t\tLinkedList failedDownload = new LinkedList();\n\t\tLinkedList failedUpload = new LinkedList();\n\t\tLinkedList failedDirUpload = new LinkedList();\n\t\t\n\t\tLinkedList uncompletedDownload = new LinkedList();\n\t\tLinkedList uncompletedUpload = new LinkedList();\n\t\tLinkedList uncompletedDirUpload = new LinkedList();\n\t\t\n\t\tClientRequest[] reqs = fcp.getGlobalRequests();\n\t\tLogger.minor(this, \"Request count: \"+reqs.length);\n\t\t\n\t\tfor(int i=0;i<reqs.length;i++) {\n\t\t\tClientRequest req = reqs[i];\n\t\t\tif(req instanceof ClientGet) {\n\t\t\t\tClientGet cg = (ClientGet) req;\n\t\t\t\tif(cg.hasSucceeded()) {\n\t\t\t\t\tif(cg.isDirect())\n\t\t\t\t\t\tcompletedDownloadToTemp.add(cg);\n\t\t\t\t\telse if(cg.isToDisk())\n\t\t\t\t\t\tcompletedDownloadToDisk.add(cg);\n\t\t\t\t\telse\n\t\t\t\t\t\t// FIXME\n\t\t\t\t\t\tLogger.error(this, \"Don't know what to do with \"+cg);\n\t\t\t\t} else if(cg.hasFinished()) {\n\t\t\t\t\tfailedDownload.add(cg);\n\t\t\t\t} else {\n\t\t\t\t\tuncompletedDownload.add(cg);\n\t\t\t\t}\n\t\t\t} else if(req instanceof ClientPut) {\n\t\t\t\tClientPut cp = (ClientPut) req;\n\t\t\t\tif(cp.hasSucceeded()) {\n\t\t\t\t\tcompletedUpload.add(cp);\n\t\t\t\t} else if(cp.hasFinished()) {\n\t\t\t\t\tfailedUpload.add(cp);\n\t\t\t\t} else {\n\t\t\t\t\tuncompletedUpload.add(cp);\n\t\t\t\t}\n\t\t\t} else if(req instanceof ClientPutDir) {\n\t\t\t\tClientPutDir cp = (ClientPutDir) req;\n\t\t\t\tif(cp.hasSucceeded()) {\n\t\t\t\t\tcompletedDirUpload.add(cp);\n\t\t\t\t} else if(cp.hasFinished()) {\n\t\t\t\t\tfailedDirUpload.add(cp);\n\t\t\t\t} else {\n\t\t\t\t\tuncompletedDirUpload.add(cp);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\tif(!(completedDownloadToTemp.isEmpty() && completedDownloadToDisk.isEmpty() &&\n\t\t\t\tcompletedUpload.isEmpty() && completedDirUpload.isEmpty())) {\n\t\t\twriteBigHeading(\"Completed requests\", buf);\n\t\t\n\t\t\tif(!completedDownloadToTemp.isEmpty()) {\n\t\t\t\twriteTableHead(\"Completed downloads to temporary space\", new String[] { \"Key\", \"Size\", \"Type\", \"Download\", \"Persistence\", \"Identifier\" }, buf );\n\t\t\t\tfor(Iterator i = completedDownloadToTemp.iterator();i.hasNext();) {\n\t\t\t\t\tClientGet p = (ClientGet) i.next();\n\t\t\t\t\twriteRowStart(buf);\n\t\t\t\t\twriteKeyCell(p.getURI(), buf);\n\t\t\t\t\twriteSizeCell(p.getDataSize(), buf);\n\t\t\t\t\twriteTypeCell(p.getMIMEType(), buf);\n\t\t\t\t\twriteDownloadCell(p, buf);\n\t\t\t\t\twritePersistenceCell(p, buf);\n\t\t\t\t\twriteIdentifierCell(p, buf);\n\t\t\t\t\twriteRowEnd(buf);\n\t\t\t\t}\n\t\t\t\twriteTableEnd(buf);\n\t\t\t}\n\t\t\t\n\t\t\tif(!completedDownloadToDisk.isEmpty()) {\n\t\t\t\twriteTableHead(\"Completed downloads to disk\", new String[] { \"Key\", \"Filename\", \"Size\", \"Type\", \"Download\", \"Persistence\", \"Identifier\" }, buf);\n\t\t\t\tfor(Iterator i=completedDownloadToDisk.iterator();i.hasNext();) {\n\t\t\t\t\tClientGet p = (ClientGet) i.next();\n\t\t\t\t\twriteRowStart(buf);\n\t\t\t\t\twriteKeyCell(p.getURI(), buf);\n\t\t\t\t\twriteFilenameCell(p.getDestFilename(), buf);\n\t\t\t\t\twriteSizeCell(p.getDataSize(), buf);\n\t\t\t\t\twriteTypeCell(p.getMIMEType(), buf);\n\t\t\t\t\twriteDownloadCell(p, buf);\n\t\t\t\t\twritePersistenceCell(p, buf);\n\t\t\t\t\twriteIdentifierCell(p, buf);\n\t\t\t\t\twriteRowEnd(buf);\n\t\t\t\t}\n\t\t\t\twriteTableEnd(buf);\n\t\t\t}\n\n\t\t\tif(!completedUpload.isEmpty()) {\n\t\t\t\twriteTableHead(\"Completed uploads\", new String[] { \"Key\", \"Filename\", \"Size\", \"Type\", \"Persistence\", \"Identifier\" }, buf);\n\t\t\t\tfor(Iterator i=completedUpload.iterator();i.hasNext();) {\n\t\t\t\t\tClientPut p = (ClientPut) i.next();\n\t\t\t\t\twriteRowStart(buf);\n\t\t\t\t\twriteKeyCell(p.getFinalURI(), buf);\n\t\t\t\t\tif(p.isDirect())\n\t\t\t\t\t\twriteDirectCell(buf);\n\t\t\t\t\telse\n\t\t\t\t\t\twriteFilenameCell(p.getOrigFilename(), buf);\n\t\t\t\t\twriteSizeCell(p.getDataSize(), buf);\n\t\t\t\t\twriteTypeCell(p.getMIMEType(), buf);\n\t\t\t\t\twritePersistenceCell(p, buf);\n\t\t\t\t\twriteIdentifierCell(p, buf);\n\t\t\t\t\twriteRowEnd(buf);\n\t\t\t\t}\n\t\t\t\twriteTableEnd(buf);\n\t\t\t}\n\t\t\t\n\t\t\tif(!completedDirUpload.isEmpty()) {\n\t\t\t\t// FIXME include filename??\n\t\t\t\twriteTableHead(\"Completed directory uploads\", new String[] { \"Key\", \"Files\", \"Total Size\", \"Persistence\", \"Identifier\" }, buf);\n\t\t\t\tfor(Iterator i=completedUpload.iterator();i.hasNext();) {\n\t\t\t\t\tClientPutDir p = (ClientPutDir) i.next();\n\t\t\t\t\twriteRowStart(buf);\n\t\t\t\t\twriteKeyCell(p.getFinalURI(), buf);\n\t\t\t\t\twriteNumberCell(p.getNumberOfFiles(), buf);\n\t\t\t\t\twriteSizeCell(p.getTotalDataSize(), buf);\n\t\t\t\t\twritePersistenceCell(p, buf);\n\t\t\t\t\twriteIdentifierCell(p, buf);\n\t\t\t\t\twriteRowEnd(buf);\n\t\t\t\t}\n\t\t\t\twriteTableEnd(buf);\n\t\t\t}\n\t\t}\n\n\t\t/* FIXME color-coded progress bars.\n\t\t * It would be really nice to have a color-coded progress bar.\n\t\t * We can then show what part is successful, what part isn't tried yet,\n\t\t * what part has each different well known error code...\n\t\t */\n\t\t\n\t\tif(!(failedDownload.isEmpty() && failedUpload.isEmpty())) {\n\t\t\twriteBigHeading(\"Failed requests\", buf);\n\t\t\tif(!failedDownload.isEmpty()) {\n\t\t\t\twriteTableHead(\"Failed downloads\", new String[] { \"Key\", \"Filename\", \"Size\", \"Type\", \"Success\", \"Reason\", \"Persistence\", \"Identifier\" }, buf);\n\t\t\t\tfor(Iterator i=failedDownload.iterator();i.hasNext();) {\n\t\t\t\t\tClientGet p = (ClientGet) i.next();\n\t\t\t\t\twriteRowStart(buf);\n\t\t\t\t\twriteKeyCell(p.getURI(), buf);\n\t\t\t\t\tif(p.isDirect())\n\t\t\t\t\t\twriteDirectCell(buf);\n\t\t\t\t\telse\n\t\t\t\t\t\twriteFilenameCell(p.getDestFilename(), buf);\n\t\t\t\t\twriteSizeCell(p.getDataSize(), buf);\n\t\t\t\t\twriteTypeCell(p.getMIMEType(), buf);\n\t\t\t\t\twriteSuccessFractionCell(p, buf);\n\t\t\t\t\twriteFailureReasonCell(p, buf);\n\t\t\t\t\twritePersistenceCell(p, buf);\n\t\t\t\t\twriteIdentifierCell(p, buf);\n\t\t\t\t\twriteRowEnd(buf);\n\t\t\t\t}\n\t\t\t\twriteTableEnd(buf);\n\t\t\t}\n\t\t\t\n\t\t\tif(!failedUpload.isEmpty()) {\n\t\t\t\twriteTableHead(\"Failed uploads\", new String[] { \"Key\", \"Filename\", \"Size\", \"Type\", \"Success\", \"Reason\", \"Persistence\", \"Identifier\" }, buf);\n\t\t\t\tfor(Iterator i=failedUpload.iterator();i.hasNext();) {\n\t\t\t\t\tClientPut p = (ClientPut) i.next();\n\t\t\t\t\twriteRowStart(buf);\n\t\t\t\t\twriteKeyCell(p.getFinalURI(), buf);\n\t\t\t\t\tif(p.isDirect())\n\t\t\t\t\t\twriteDirectCell(buf);\n\t\t\t\t\telse\n\t\t\t\t\t\twriteFilenameCell(p.getOrigFilename(), buf);\n\t\t\t\t\twriteSizeCell(p.getDataSize(), buf);\n\t\t\t\t\twriteTypeCell(p.getMIMEType(), buf);\n\t\t\t\t\twriteSuccessFractionCell(p, buf);\n\t\t\t\t\twriteFailureReasonCell(p, buf);\n\t\t\t\t\twritePersistenceCell(p, buf);\n\t\t\t\t\twriteIdentifierCell(p, buf);\n\t\t\t\t\twriteRowEnd(buf);\n\t\t\t\t}\n\t\t\t\twriteTableEnd(buf);\n\t\t\t}\n\t\t\t\n\t\t\tif(!failedDirUpload.isEmpty()) {\n\t\t\t\twriteTableHead(\"Failed directory uploads\", new String[] { \"Key\", \"Files\", \"Total Size\", \"Success\", \"Reason\", \"Persistence\", \"Identifier\" }, buf);\n\t\t\t\tfor(Iterator i=failedDirUpload.iterator();i.hasNext();) {\n\t\t\t\t\tClientPutDir p = (ClientPutDir) i.next();\n\t\t\t\t\twriteRowStart(buf);\n\t\t\t\t\twriteKeyCell(p.getFinalURI(), buf);\n\t\t\t\t\twriteNumberCell(p.getNumberOfFiles(), buf);\n\t\t\t\t\twriteSizeCell(p.getTotalDataSize(), buf);\n\t\t\t\t\twriteSuccessFractionCell(p, buf);\n\t\t\t\t\twriteFailureReasonCell(p, buf);\n\t\t\t\t\twritePersistenceCell(p, buf);\n\t\t\t\t\twriteIdentifierCell(p, buf);\n\t\t\t\t\twriteRowEnd(buf);\n\t\t\t\t}\n\t\t\t\twriteTableEnd(buf);\n\t\t\t}\n\t\t}\n\t\t\n\t\tif(!(uncompletedDownload.isEmpty() && uncompletedUpload.isEmpty() && \n\t\t\t\tuncompletedDirUpload.isEmpty())) {\n\t\t\twriteBigHeading(\"Requests in progress\", buf);\n\t\t\tif(!uncompletedDownload.isEmpty()) {\n\t\t\t\twriteTableHead(\"Downloads in progress\", new String[] { \"Key\", \"Filename\", \"Size\", \"Type\", \"Success\", \"Persistence\", \"Identifier\" }, buf);\n\t\t\t\tfor(Iterator i = uncompletedDownload.iterator();i.hasNext();) {\n\t\t\t\t\tClientGet p = (ClientGet) i.next();\n\t\t\t\t\twriteRowStart(buf);\n\t\t\t\t\twriteKeyCell(p.getURI(), buf);\n\t\t\t\t\tif(p.isDirect())\n\t\t\t\t\t\twriteDirectCell(buf);\n\t\t\t\t\telse\n\t\t\t\t\t\twriteFilenameCell(p.getDestFilename(), buf);\n\t\t\t\t\twriteSizeCell(p.getDataSize(), buf);\n\t\t\t\t\twriteTypeCell(p.getMIMEType(), buf);\n\t\t\t\t\twriteSuccessFractionCell(p, buf);\n\t\t\t\t\twritePersistenceCell(p, buf);\n\t\t\t\t\twriteIdentifierCell(p, buf);\n\t\t\t\t\twriteRowEnd(buf);\n\t\t\t\t}\n\t\t\t\twriteTableEnd(buf);\n\t\t\t}\n\t\t\t\n\t\t\tif(!uncompletedUpload.isEmpty()) {\n\t\t\t\twriteTableHead(\"Uploads in progress\", new String[] { \"Key\", \"Filename\", \"Size\", \"Type\", \"Success\", \"Persistence\", \"Identifier\" }, buf);\n\t\t\t\tfor(Iterator i = uncompletedDownload.iterator();i.hasNext();) {\n\t\t\t\t\tClientPut p = (ClientPut) i.next();\n\t\t\t\t\twriteRowStart(buf);\n\t\t\t\t\twriteKeyCell(p.getFinalURI(), buf);\n\t\t\t\t\tif(p.isDirect())\n\t\t\t\t\t\twriteDirectCell(buf);\n\t\t\t\t\telse\n\t\t\t\t\t\twriteFilenameCell(p.getOrigFilename(), buf);\n\t\t\t\t\twriteSizeCell(p.getDataSize(), buf);\n\t\t\t\t\twriteTypeCell(p.getMIMEType(), buf);\n\t\t\t\t\twriteSuccessFractionCell(p, buf);\n\t\t\t\t\twritePersistenceCell(p, buf);\n\t\t\t\t\twriteIdentifierCell(p, buf);\n\t\t\t\t\twriteRowEnd(buf);\n\t\t\t\t}\n\t\t\t\twriteTableEnd(buf);\n\t\t\t}\n\t\t\t\n\t\t\tif(!uncompletedDirUpload.isEmpty()) {\n\t\t\t\twriteTableHead(\"Directory uploads in progress\", new String[] { \"Key\", \"Files\", \"Total Size\", \"Success\", \"Persistence\", \"Identifier\" }, buf);\n\t\t\t\tfor(Iterator i=completedUpload.iterator();i.hasNext();) {\n\t\t\t\t\tClientPutDir p = (ClientPutDir) i.next();\n\t\t\t\t\twriteRowStart(buf);\n\t\t\t\t\twriteKeyCell(p.getFinalURI(), buf);\n\t\t\t\t\twriteNumberCell(p.getNumberOfFiles(), buf);\n\t\t\t\t\twriteSizeCell(p.getTotalDataSize(), buf);\n\t\t\t\t\twriteSuccessFractionCell(p, buf);\n\t\t\t\t\twritePersistenceCell(p, buf);\n\t\t\t\t\twriteIdentifierCell(p, buf);\n\t\t\t\t\twriteRowEnd(buf);\n\t\t\t\t}\n\t\t\t\twriteTableEnd(buf);\n\t\t\t}\n\t\t}\n\t\t\n\t\tctx.getPageMaker().makeTail(buf);\n\t\t\n\t\tthis.writeReply(ctx, 200, \"text/html\", \"OK\", buf.toString());\n\t}","id":55176,"modified_method":"public void handleGet(URI uri, ToadletContext ctx) \n\tthrows ToadletContextClosedException, IOException, RedirectException {\n\t\t\n\t\tStringBuffer buf = new StringBuffer(2048);\n\t\t\n\t\tctx.getPageMaker().makeHead(buf, \"Queued Requests\");\n\t\t\n\t\t// First, get the queued requests, and separate them into different types.\n\t\t\n\t\tLinkedList completedDownloadToDisk = new LinkedList();\n\t\tLinkedList completedDownloadToTemp = new LinkedList();\n\t\tLinkedList completedUpload = new LinkedList();\n\t\tLinkedList completedDirUpload = new LinkedList();\n\t\t\n\t\tLinkedList failedDownload = new LinkedList();\n\t\tLinkedList failedUpload = new LinkedList();\n\t\tLinkedList failedDirUpload = new LinkedList();\n\t\t\n\t\tLinkedList uncompletedDownload = new LinkedList();\n\t\tLinkedList uncompletedUpload = new LinkedList();\n\t\tLinkedList uncompletedDirUpload = new LinkedList();\n\t\t\n\t\tClientRequest[] reqs = fcp.getGlobalRequests();\n\t\tLogger.minor(this, \"Request count: \"+reqs.length);\n\t\t\n\t\tfor(int i=0;i<reqs.length;i++) {\n\t\t\tClientRequest req = reqs[i];\n\t\t\tif(req instanceof ClientGet) {\n\t\t\t\tClientGet cg = (ClientGet) req;\n\t\t\t\tif(cg.hasSucceeded()) {\n\t\t\t\t\tif(cg.isDirect())\n\t\t\t\t\t\tcompletedDownloadToTemp.add(cg);\n\t\t\t\t\telse if(cg.isToDisk())\n\t\t\t\t\t\tcompletedDownloadToDisk.add(cg);\n\t\t\t\t\telse\n\t\t\t\t\t\t// FIXME\n\t\t\t\t\t\tLogger.error(this, \"Don't know what to do with \"+cg);\n\t\t\t\t} else if(cg.hasFinished()) {\n\t\t\t\t\tfailedDownload.add(cg);\n\t\t\t\t} else {\n\t\t\t\t\tuncompletedDownload.add(cg);\n\t\t\t\t}\n\t\t\t} else if(req instanceof ClientPut) {\n\t\t\t\tClientPut cp = (ClientPut) req;\n\t\t\t\tif(cp.hasSucceeded()) {\n\t\t\t\t\tcompletedUpload.add(cp);\n\t\t\t\t} else if(cp.hasFinished()) {\n\t\t\t\t\tfailedUpload.add(cp);\n\t\t\t\t} else {\n\t\t\t\t\tuncompletedUpload.add(cp);\n\t\t\t\t}\n\t\t\t} else if(req instanceof ClientPutDir) {\n\t\t\t\tClientPutDir cp = (ClientPutDir) req;\n\t\t\t\tif(cp.hasSucceeded()) {\n\t\t\t\t\tcompletedDirUpload.add(cp);\n\t\t\t\t} else if(cp.hasFinished()) {\n\t\t\t\t\tfailedDirUpload.add(cp);\n\t\t\t\t} else {\n\t\t\t\t\tuncompletedDirUpload.add(cp);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\tif(!(completedDownloadToTemp.isEmpty() && completedDownloadToDisk.isEmpty() &&\n\t\t\t\tcompletedUpload.isEmpty() && completedDirUpload.isEmpty())) {\n\t\t\twriteBigHeading(\"Completed requests\", buf);\n\t\t\n\t\t\tif(!completedDownloadToTemp.isEmpty()) {\n\t\t\t\twriteTableHead(\"Completed downloads to temporary space\", new String[] { \"Identifier\", \"Size\", \"Type\", \"Download\", \"Persistence\", \"Key\" }, buf );\n\t\t\t\tfor(Iterator i = completedDownloadToTemp.iterator();i.hasNext();) {\n\t\t\t\t\tClientGet p = (ClientGet) i.next();\n\t\t\t\t\twriteRowStart(buf);\n\t\t\t\t\twriteIdentifierCell(p, p.getURI(), buf);\n\t\t\t\t\twriteSizeCell(p.getDataSize(), buf);\n\t\t\t\t\twriteTypeCell(p.getMIMEType(), buf);\n\t\t\t\t\twriteDownloadCell(p, buf);\n\t\t\t\t\twritePersistenceCell(p, buf);\n\t\t\t\t\twriteKeyCell(p.getURI(), buf);\n\t\t\t\t\twriteRowEnd(buf);\n\t\t\t\t}\n\t\t\t\twriteTableEnd(buf);\n\t\t\t}\n\t\t\t\n\t\t\tif(!completedDownloadToDisk.isEmpty()) {\n\t\t\t\twriteTableHead(\"Completed downloads to disk\", new String[] { \"Identifier\", \"Filename\", \"Size\", \"Type\", \"Download\", \"Persistence\", \"Key\" }, buf);\n\t\t\t\tfor(Iterator i=completedDownloadToDisk.iterator();i.hasNext();) {\n\t\t\t\t\tClientGet p = (ClientGet) i.next();\n\t\t\t\t\twriteRowStart(buf);\n\t\t\t\t\twriteIdentifierCell(p, p.getURI(), buf);\n\t\t\t\t\twriteFilenameCell(p.getDestFilename(), buf);\n\t\t\t\t\twriteSizeCell(p.getDataSize(), buf);\n\t\t\t\t\twriteTypeCell(p.getMIMEType(), buf);\n\t\t\t\t\twriteDownloadCell(p, buf);\n\t\t\t\t\twritePersistenceCell(p, buf);\n\t\t\t\t\twriteKeyCell(p.getURI(), buf);\n\t\t\t\t\twriteRowEnd(buf);\n\t\t\t\t}\n\t\t\t\twriteTableEnd(buf);\n\t\t\t}\n\n\t\t\tif(!completedUpload.isEmpty()) {\n\t\t\t\twriteTableHead(\"Completed uploads\", new String[] { \"Key\", \"Filename\", \"Size\", \"Type\", \"Persistence\", \"Identifier\" }, buf);\n\t\t\t\tfor(Iterator i=completedUpload.iterator();i.hasNext();) {\n\t\t\t\t\tClientPut p = (ClientPut) i.next();\n\t\t\t\t\twriteRowStart(buf);\n\t\t\t\t\twriteIdentifierCell(p, p.getFinalURI(), buf);\n\t\t\t\t\tif(p.isDirect())\n\t\t\t\t\t\twriteDirectCell(buf);\n\t\t\t\t\telse\n\t\t\t\t\t\twriteFilenameCell(p.getOrigFilename(), buf);\n\t\t\t\t\twriteSizeCell(p.getDataSize(), buf);\n\t\t\t\t\twriteTypeCell(p.getMIMEType(), buf);\n\t\t\t\t\twritePersistenceCell(p, buf);\n\t\t\t\t\twriteKeyCell(p.getFinalURI(), buf);\n\t\t\t\t\twriteRowEnd(buf);\n\t\t\t\t}\n\t\t\t\twriteTableEnd(buf);\n\t\t\t}\n\t\t\t\n\t\t\tif(!completedDirUpload.isEmpty()) {\n\t\t\t\t// FIXME include filename??\n\t\t\t\twriteTableHead(\"Completed directory uploads\", new String[] { \"Identifier\", \"Files\", \"Total Size\", \"Persistence\", \"Key\" }, buf);\n\t\t\t\tfor(Iterator i=completedUpload.iterator();i.hasNext();) {\n\t\t\t\t\tClientPutDir p = (ClientPutDir) i.next();\n\t\t\t\t\twriteRowStart(buf);\n\t\t\t\t\twriteIdentifierCell(p, p.getFinalURI(), buf);\n\t\t\t\t\twriteNumberCell(p.getNumberOfFiles(), buf);\n\t\t\t\t\twriteSizeCell(p.getTotalDataSize(), buf);\n\t\t\t\t\twritePersistenceCell(p, buf);\n\t\t\t\t\twriteKeyCell(p.getFinalURI(), buf);\n\t\t\t\t\twriteRowEnd(buf);\n\t\t\t\t}\n\t\t\t\twriteTableEnd(buf);\n\t\t\t}\n\t\t}\n\n\t\t/* FIXME color-coded progress bars.\n\t\t * It would be really nice to have a color-coded progress bar.\n\t\t * We can then show what part is successful, what part isn't tried yet,\n\t\t * what part has each different well known error code...\n\t\t */\n\t\t\n\t\tif(!(failedDownload.isEmpty() && failedUpload.isEmpty())) {\n\t\t\twriteBigHeading(\"Failed requests\", buf);\n\t\t\tif(!failedDownload.isEmpty()) {\n\t\t\t\twriteTableHead(\"Failed downloads\", new String[] { \"Identifier\", \"Filename\", \"Size\", \"Type\", \"Success\", \"Reason\", \"Persistence\", \"Key\" }, buf);\n\t\t\t\tfor(Iterator i=failedDownload.iterator();i.hasNext();) {\n\t\t\t\t\tClientGet p = (ClientGet) i.next();\n\t\t\t\t\twriteRowStart(buf);\n\t\t\t\t\twriteIdentifierCell(p, p.getURI(), buf);\n\t\t\t\t\tif(p.isDirect())\n\t\t\t\t\t\twriteDirectCell(buf);\n\t\t\t\t\telse\n\t\t\t\t\t\twriteFilenameCell(p.getDestFilename(), buf);\n\t\t\t\t\twriteSizeCell(p.getDataSize(), buf);\n\t\t\t\t\twriteTypeCell(p.getMIMEType(), buf);\n\t\t\t\t\twriteSuccessFractionCell(p, buf);\n\t\t\t\t\twriteFailureReasonCell(p, buf);\n\t\t\t\t\twritePersistenceCell(p, buf);\n\t\t\t\t\twriteKeyCell(p.getURI(), buf);\n\t\t\t\t\twriteRowEnd(buf);\n\t\t\t\t}\n\t\t\t\twriteTableEnd(buf);\n\t\t\t}\n\t\t\t\n\t\t\tif(!failedUpload.isEmpty()) {\n\t\t\t\twriteTableHead(\"Failed uploads\", new String[] { \"Identifier\", \"Filename\", \"Size\", \"Type\", \"Success\", \"Reason\", \"Persistence\", \"Key\" }, buf);\n\t\t\t\tfor(Iterator i=failedUpload.iterator();i.hasNext();) {\n\t\t\t\t\tClientPut p = (ClientPut) i.next();\n\t\t\t\t\twriteRowStart(buf);\n\t\t\t\t\twriteIdentifierCell(p, p.getFinalURI(), buf);\n\t\t\t\t\tif(p.isDirect())\n\t\t\t\t\t\twriteDirectCell(buf);\n\t\t\t\t\telse\n\t\t\t\t\t\twriteFilenameCell(p.getOrigFilename(), buf);\n\t\t\t\t\twriteSizeCell(p.getDataSize(), buf);\n\t\t\t\t\twriteTypeCell(p.getMIMEType(), buf);\n\t\t\t\t\twriteSuccessFractionCell(p, buf);\n\t\t\t\t\twriteFailureReasonCell(p, buf);\n\t\t\t\t\twritePersistenceCell(p, buf);\n\t\t\t\t\twriteKeyCell(p.getFinalURI(), buf);\n\t\t\t\t\twriteRowEnd(buf);\n\t\t\t\t}\n\t\t\t\twriteTableEnd(buf);\n\t\t\t}\n\t\t\t\n\t\t\tif(!failedDirUpload.isEmpty()) {\n\t\t\t\twriteTableHead(\"Failed directory uploads\", new String[] { \"Identifier\", \"Files\", \"Total Size\", \"Success\", \"Reason\", \"Persistence\", \"Key\" }, buf);\n\t\t\t\tfor(Iterator i=failedDirUpload.iterator();i.hasNext();) {\n\t\t\t\t\tClientPutDir p = (ClientPutDir) i.next();\n\t\t\t\t\twriteRowStart(buf);\n\t\t\t\t\twriteIdentifierCell(p, p.getFinalURI(), buf);\n\t\t\t\t\twriteNumberCell(p.getNumberOfFiles(), buf);\n\t\t\t\t\twriteSizeCell(p.getTotalDataSize(), buf);\n\t\t\t\t\twriteSuccessFractionCell(p, buf);\n\t\t\t\t\twriteFailureReasonCell(p, buf);\n\t\t\t\t\twritePersistenceCell(p, buf);\n\t\t\t\t\twriteKeyCell(p.getFinalURI(), buf);\n\t\t\t\t\twriteRowEnd(buf);\n\t\t\t\t}\n\t\t\t\twriteTableEnd(buf);\n\t\t\t}\n\t\t}\n\t\t\n\t\tif(!(uncompletedDownload.isEmpty() && uncompletedUpload.isEmpty() && \n\t\t\t\tuncompletedDirUpload.isEmpty())) {\n\t\t\twriteBigHeading(\"Requests in progress\", buf);\n\t\t\tif(!uncompletedDownload.isEmpty()) {\n\t\t\t\twriteTableHead(\"Downloads in progress\", new String[] { \"Identifier\", \"Filename\", \"Size\", \"Type\", \"Success\", \"Persistence\", \"Key\" }, buf);\n\t\t\t\tfor(Iterator i = uncompletedDownload.iterator();i.hasNext();) {\n\t\t\t\t\tClientGet p = (ClientGet) i.next();\n\t\t\t\t\twriteRowStart(buf);\n\t\t\t\t\twriteIdentifierCell(p, p.getURI(), buf);\n\t\t\t\t\tif(p.isDirect())\n\t\t\t\t\t\twriteDirectCell(buf);\n\t\t\t\t\telse\n\t\t\t\t\t\twriteFilenameCell(p.getDestFilename(), buf);\n\t\t\t\t\twriteSizeCell(p.getDataSize(), buf);\n\t\t\t\t\twriteTypeCell(p.getMIMEType(), buf);\n\t\t\t\t\twriteSuccessFractionCell(p, buf);\n\t\t\t\t\twritePersistenceCell(p, buf);\n\t\t\t\t\twriteKeyCell(p.getURI(), buf);\n\t\t\t\t\twriteRowEnd(buf);\n\t\t\t\t}\n\t\t\t\twriteTableEnd(buf);\n\t\t\t}\n\t\t\t\n\t\t\tif(!uncompletedUpload.isEmpty()) {\n\t\t\t\twriteTableHead(\"Uploads in progress\", new String[] { \"Identifier\", \"Filename\", \"Size\", \"Type\", \"Success\", \"Persistence\", \"Key\" }, buf);\n\t\t\t\tfor(Iterator i = uncompletedDownload.iterator();i.hasNext();) {\n\t\t\t\t\tClientPut p = (ClientPut) i.next();\n\t\t\t\t\twriteRowStart(buf);\n\t\t\t\t\twriteIdentifierCell(p, p.getFinalURI(), buf);\n\t\t\t\t\tif(p.isDirect())\n\t\t\t\t\t\twriteDirectCell(buf);\n\t\t\t\t\telse\n\t\t\t\t\t\twriteFilenameCell(p.getOrigFilename(), buf);\n\t\t\t\t\twriteSizeCell(p.getDataSize(), buf);\n\t\t\t\t\twriteTypeCell(p.getMIMEType(), buf);\n\t\t\t\t\twriteSuccessFractionCell(p, buf);\n\t\t\t\t\twritePersistenceCell(p, buf);\n\t\t\t\t\twriteKeyCell(p.getFinalURI(), buf);\n\t\t\t\t\twriteRowEnd(buf);\n\t\t\t\t}\n\t\t\t\twriteTableEnd(buf);\n\t\t\t}\n\t\t\t\n\t\t\tif(!uncompletedDirUpload.isEmpty()) {\n\t\t\t\twriteTableHead(\"Directory uploads in progress\", new String[] { \"Identifier\", \"Files\", \"Total Size\", \"Success\", \"Persistence\", \"Key\" }, buf);\n\t\t\t\tfor(Iterator i=completedUpload.iterator();i.hasNext();) {\n\t\t\t\t\tClientPutDir p = (ClientPutDir) i.next();\n\t\t\t\t\twriteRowStart(buf);\n\t\t\t\t\twriteIdentifierCell(p, p.getFinalURI(), buf);\n\t\t\t\t\twriteNumberCell(p.getNumberOfFiles(), buf);\n\t\t\t\t\twriteSizeCell(p.getTotalDataSize(), buf);\n\t\t\t\t\twriteSuccessFractionCell(p, buf);\n\t\t\t\t\twritePersistenceCell(p, buf);\n\t\t\t\t\twriteKeyCell(p.getFinalURI(), buf);\n\t\t\t\t\twriteRowEnd(buf);\n\t\t\t\t}\n\t\t\t\twriteTableEnd(buf);\n\t\t\t}\n\t\t}\n\t\t\n\t\tctx.getPageMaker().makeTail(buf);\n\t\t\n\t\tthis.writeReply(ctx, 200, \"text/html\", \"OK\", buf.toString());\n\t}","commit_id":"ca428e3441894abe16fd2ea15e98089d6317d883","url":"https://github.com/freenet/fred"},{"original_method":"private void writeIdentifierCell(ClientRequest p, StringBuffer buf) {\n\t\tbuf.append(\"<td>\");\n\t\tbuf.append(HTMLEncoder.encode(p.getIdentifier()));\n\t\tbuf.append(\"<\/td>\\n\");\n\t}","id":55177,"modified_method":"private void writeIdentifierCell(ClientRequest p, FreenetURI uri, StringBuffer buf) {\n\t\tbuf.append(\"<td>\");\n\t\tbuf.append(\"<a href=\\\"/\");\n\t\tbuf.append(uri.toString(false));\n\t\tbuf.append(\"\\\">\");\n\t\tbuf.append(HTMLEncoder.encode(p.getIdentifier()));\n\t\tbuf.append(\"<\/a><\/td>\\n\");\n\t}","commit_id":"ca428e3441894abe16fd2ea15e98089d6317d883","url":"https://github.com/freenet/fred"},{"original_method":"public static String formatSize(long sz) {\n\t\t// First determine suffix\n\t\t\n\t\tString suffixes = \"kMGTPEZY\";\n\t\tlong s = 1;\n\t\tint i;\n\t\tfor(i=0;i<suffixes.length();i++) {\n\t\t\ts *= 1000;\n\t\t\tif(s > sz) {\n\t\t\t\tbreak;\n\t\t\t\t// Smaller than multiplier [i] - use the previous one\n\t\t\t}\n\t\t}\n\t\t\n\t\ts /= 1000; // we use the previous unit\n\t\tdouble mantissa = (double)sz / (double)s;\n\t\tString o = Double.toString(mantissa);\n\t\tif(o.indexOf('.') > -1 && o.indexOf('E') == -1 && o.length() > 4)\n\t\t\to = o.substring(0, 4);\n\t\tif(i > 0) o += suffixes.charAt(i-1);\n\t\to += \"B\";\n\t\treturn o;\n\t}","id":55178,"modified_method":"public static String formatSize(long sz) {\n\t\t// First determine suffix\n\t\t\n\t\tString suffixes = \"kMGTPEZY\";\n\t\tlong s = 1;\n\t\tint i;\n\t\tfor(i=0;i<suffixes.length();i++) {\n\t\t\ts *= 1000;\n\t\t\tif(s > sz) {\n\t\t\t\tbreak;\n\t\t\t\t// Smaller than multiplier [i] - use the previous one\n\t\t\t}\n\t\t}\n\t\t\n\t\ts /= 1000; // we use the previous unit\n\t\tdouble mantissa = (double)sz / (double)s;\n\t\tString o = Double.toString(mantissa);\n\t\tif(o.indexOf('.') == 3)\n\t\t\to = o.substring(0, 3);\n\t\telse if(o.indexOf('.') > -1 && o.indexOf('E') == -1 && o.length() > 4)\n\t\t\to = o.substring(0, 4);\n\t\tif(i > 0) o += suffixes.charAt(i-1);\n\t\to += \"B\";\n\t\treturn o;\n\t}","commit_id":"ca428e3441894abe16fd2ea15e98089d6317d883","url":"https://github.com/freenet/fred"},{"original_method":"private void addLibrary(@NotNull final String... annotationsDirs) {\n    ApplicationManager.getApplication().runWriteAction(new Runnable() {\n      @Override\n      public void run() {\n        final ModifiableRootModel model = ModuleRootManager.getInstance(myModule).getModifiableModel();\n        final LibraryTable libraryTable = model.getModuleLibraryTable();\n        final Library library = libraryTable.createLibrary(\"test\");\n\n        final Library.ModifiableModel libraryModel = library.getModifiableModel();\n        libraryModel.addRoot(VfsUtil.pathToUrl(myFixture.getTempDirPath() + \"/lib\"), OrderRootType.SOURCES);\n        for (String annotationsDir : annotationsDirs) {\n          libraryModel.addRoot(VfsUtil.pathToUrl(myFixture.getTempDirPath() + annotationsDir), AnnotationOrderRootType.getInstance());\n        }\n        libraryModel.commit();\n        model.commit();\n      }\n    });\n  }","id":55179,"modified_method":"private void addLibrary(@NotNull final String... annotationsDirs) {\n    ApplicationManager.getApplication().runWriteAction(() -> {\n      final ModifiableRootModel model = ModuleRootManager.getInstance(myModule).getModifiableModel();\n      final LibraryTable libraryTable = model.getModuleLibraryTable();\n      final Library library = libraryTable.createLibrary(\"test\");\n\n      final Library.ModifiableModel libraryModel = library.getModifiableModel();\n      libraryModel.addRoot(VfsUtilCore.pathToUrl(myFixture.getTempDirPath() + \"/lib\"), OrderRootType.SOURCES);\n      for (String annotationsDir : annotationsDirs) {\n        libraryModel.addRoot(VfsUtilCore.pathToUrl(myFixture.getTempDirPath() + annotationsDir), AnnotationOrderRootType.getInstance());\n      }\n      libraryModel.commit();\n      model.commit();\n    });\n  }","commit_id":"0e4c6e271457654b89124a00f0b2ebbec0415cc8","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void testListenerNotifiedOnExternalChanges() {\n    addDefaultLibrary();\n    myFixture.configureByFiles(\"/content/anno/p/annotations.xml\");\n    myFixture.configureByFiles(\"lib/p/Test.java\");\n\n    ExternalAnnotationsManager.getInstance(myProject).findExternalAnnotation(getOwner(), AnnotationUtil.NOT_NULL); // force creating service\n\n    startListeningForExternalChanges();\n    new WriteCommandAction(myProject){\n      @Override\n      protected void run(@NotNull final Result result) throws Throwable {\n        VirtualFile file = LocalFileSystem.getInstance().findFileByPath(myFixture.getTempDirPath() + \"/content/anno/p/annotations.xml\");\n        assert file != null;\n        String newText = \"  \" + StreamUtil.readText(file.getInputStream()) + \"      \"; // adding newspace to the beginning and end of file\n        FileUtil.writeToFile(VfsUtil.virtualToIoFile(file), newText); // writing using java.io.File to make this change external\n        file.refresh(false, false);\n      }\n    }.execute();\n    stopListeningAndCheckEvents();\n  }","id":55180,"modified_method":"public void testListenerNotifiedOnExternalChanges() {\n    addDefaultLibrary();\n    myFixture.configureByFiles(\"/content/anno/p/annotations.xml\");\n    myFixture.configureByFiles(\"lib/p/Test.java\");\n\n    ExternalAnnotationsManager.getInstance(myProject).findExternalAnnotation(getOwner(), AnnotationUtil.NOT_NULL); // force creating service\n\n    startListeningForExternalChanges();\n    new WriteCommandAction(myProject) {\n      @Override\n      protected void run(@NotNull final Result result) throws Throwable {\n        VirtualFile file = LocalFileSystem.getInstance().findFileByPath(myFixture.getTempDirPath() + \"/content/anno/p/annotations.xml\");\n        assert file != null;\n        String newText = \"  \" + StreamUtil.readText(file.getInputStream(), \"UTF-8\") + \"      \";\n        FileUtil.writeToFile(VfsUtilCore.virtualToIoFile(file), newText);\n        file.refresh(false, false);\n      }\n    }.execute();\n    stopListeningAndCheckEvents();\n  }","commit_id":"0e4c6e271457654b89124a00f0b2ebbec0415cc8","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void testAnnotateLibrary() throws Throwable {\n\n    addDefaultLibrary();\n    myFixture.configureByFiles(\"lib/p/TestPrimitive.java\", \"content/anno/p/annotations.xml\");\n    myFixture.configureByFiles(\"lib/p/Test.java\");\n    final PsiFile file = myFixture.getFile();\n    final Editor editor = myFixture.getEditor();\n\n    final IntentionAction fix = myFixture.findSingleIntention(\"Annotate method 'get' as @NotNull\");\n    assertTrue(fix.isAvailable(myProject, editor, file));\n\n    // expecting other @Nullable annotations to be removed, and default @NotNull to be added\n    List<Trinity<PsiModifierListOwner, String, Boolean>> expectedSequence\n      = new ArrayList<Trinity<PsiModifierListOwner, String, Boolean>>();\n    for (String notNull : NullableNotNullManager.getInstance(myProject).getNullables()) {\n      expectedSequence.add(Trinity.create(getOwner(), notNull, false));\n    }\n    expectedSequence.add(Trinity.create(getOwner(), AnnotationUtil.NOT_NULL, true));\n    startListening(expectedSequence);\n    new WriteCommandAction(myProject){\n      @Override\n      protected void run(@NotNull final Result result) throws Throwable {\n        fix.invoke(myProject, editor, file);\n      }\n    }.execute();\n\n    FileDocumentManager.getInstance().saveAllDocuments();\n\n    final PsiElement psiElement = file.findElementAt(editor.getCaretModel().getOffset());\n    assertNotNull(psiElement);\n    final PsiModifierListOwner listOwner = PsiTreeUtil.getParentOfType(psiElement, PsiModifierListOwner.class);\n    assertNotNull(listOwner);\n    assertNotNull(ExternalAnnotationsManager.getInstance(myProject).findExternalAnnotation(listOwner, AnnotationUtil.NOT_NULL));\n    stopListeningAndCheckEvents();\n\n    myFixture.checkResultByFile(\"content/anno/p/annotations.xml\", \"content/anno/p/annotationsAnnotateLibrary_after.xml\", false);\n  }","id":55181,"modified_method":"public void testAnnotateLibrary() throws Throwable {\n\n    addDefaultLibrary();\n    myFixture.configureByFiles(\"lib/p/TestPrimitive.java\", \"content/anno/p/annotations.xml\");\n    myFixture.configureByFiles(\"lib/p/Test.java\");\n    final PsiFile file = myFixture.getFile();\n    final Editor editor = myFixture.getEditor();\n\n    final IntentionAction fix = myFixture.findSingleIntention(\"Annotate method 'get' as @NotNull\");\n    assertTrue(fix.isAvailable(myProject, editor, file));\n\n    // expecting other @Nullable annotations to be removed, and default @NotNull to be added\n    List<Trinity<PsiModifierListOwner, String, Boolean>> expectedSequence = new ArrayList<>();\n    for (String notNull : NullableNotNullManager.getInstance(myProject).getNullables()) {\n      expectedSequence.add(Trinity.create(getOwner(), notNull, false));\n    }\n    expectedSequence.add(Trinity.create(getOwner(), AnnotationUtil.NOT_NULL, true));\n    startListening(expectedSequence);\n    new WriteCommandAction(myProject){\n      @Override\n      protected void run(@NotNull final Result result) throws Throwable {\n        fix.invoke(myProject, editor, file);\n      }\n    }.execute();\n\n    FileDocumentManager.getInstance().saveAllDocuments();\n\n    final PsiElement psiElement = file.findElementAt(editor.getCaretModel().getOffset());\n    assertNotNull(psiElement);\n    final PsiModifierListOwner listOwner = PsiTreeUtil.getParentOfType(psiElement, PsiModifierListOwner.class);\n    assertNotNull(listOwner);\n    assertNotNull(ExternalAnnotationsManager.getInstance(myProject).findExternalAnnotation(listOwner, AnnotationUtil.NOT_NULL));\n    stopListeningAndCheckEvents();\n\n    myFixture.checkResultByFile(\"content/anno/p/annotations.xml\", \"content/anno/p/annotationsAnnotateLibrary_after.xml\", false);\n  }","commit_id":"0e4c6e271457654b89124a00f0b2ebbec0415cc8","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private static void assertMethodAndParameterAnnotationsValues(ExternalAnnotationsManager manager,\n                                                         PsiMethod method,\n                                                         PsiParameter parameter,\n                                                         String expectedValue) {\n    PsiAnnotation methodAnnotation = manager.findExternalAnnotation(method, AnnotationUtil.NULLABLE);\n    assertNotNull(methodAnnotation);\n    assertEquals(expectedValue, methodAnnotation.findAttributeValue(\"value\").getText());\n\n    PsiAnnotation parameterAnnotation = manager.findExternalAnnotation(parameter, AnnotationUtil.NOT_NULL);\n    assertNotNull(parameterAnnotation);\n    assertEquals(expectedValue, parameterAnnotation.findAttributeValue(\"value\").getText());\n  }","id":55182,"modified_method":"private static void assertMethodAndParameterAnnotationsValues(ExternalAnnotationsManager manager,\n                                                         PsiMethod method,\n                                                         PsiParameter parameter,\n                                                         String expectedValue) {\n    PsiAnnotation methodAnnotation = manager.findExternalAnnotation(method, AnnotationUtil.NULLABLE);\n    assertNotNull(methodAnnotation);\n    PsiAnnotationMemberValue methodValue = methodAnnotation.findAttributeValue(\"value\");\n    assertNotNull(methodValue);\n    assertEquals(expectedValue, methodValue.getText());\n\n    PsiAnnotation parameterAnnotation = manager.findExternalAnnotation(parameter, AnnotationUtil.NOT_NULL);\n    assertNotNull(parameterAnnotation);\n    PsiAnnotationMemberValue parameterValue = parameterAnnotation.findAttributeValue(\"value\");\n    assertNotNull(parameterValue);\n    assertEquals(expectedValue, parameterValue.getText());\n  }","commit_id":"0e4c6e271457654b89124a00f0b2ebbec0415cc8","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private void doDeannotate(@NonNls final String testPath, String hint1, String hint2) throws Throwable {\n    myFixture.configureByFile(testPath);\n    final PsiFile file = myFixture.getFile();\n    final Editor editor = myFixture.getEditor();\n\n    assertNotAvailable(hint1);\n    assertNotAvailable(hint2);\n\n    final DeannotateIntentionAction deannotateFix = new DeannotateIntentionAction();\n    assertTrue(deannotateFix.isAvailable(myProject, editor, file));\n\n    final PsiModifierListOwner container = DeannotateIntentionAction.getContainer(editor, file);\n    startListening(container, AnnotationUtil.NOT_NULL, true);\n    new WriteCommandAction(myProject){\n      @Override\n      protected void run(@NotNull final Result result) throws Throwable {\n        ExternalAnnotationsManager.getInstance(myProject).deannotate(container, AnnotationUtil.NOT_NULL);\n      }\n    }.execute();\n    stopListeningAndCheckEvents();\n\n    FileDocumentManager.getInstance().saveAllDocuments();\n\n    IntentionAction fix = myFixture.findSingleIntention(hint1);\n    assertNotNull(fix);\n\n    fix = myFixture.findSingleIntention(hint2);\n    assertNotNull(fix);\n\n    assertFalse(deannotateFix.isAvailable(myProject, editor, file));\n  }","id":55183,"modified_method":"private void doDeannotate(@NonNls final String testPath, String hint1, String hint2) throws Throwable {\n    myFixture.configureByFile(testPath);\n    final PsiFile file = myFixture.getFile();\n    final Editor editor = myFixture.getEditor();\n\n    assertNotAvailable(hint1);\n    assertNotAvailable(hint2);\n\n    final DeannotateIntentionAction deannotateFix = new DeannotateIntentionAction();\n    assertTrue(deannotateFix.isAvailable(myProject, editor, file));\n\n    final PsiModifierListOwner container = DeannotateIntentionAction.getContainer(editor, file);\n    assertNotNull(container);\n    startListening(container, AnnotationUtil.NOT_NULL, true);\n    new WriteCommandAction(myProject){\n      @Override\n      protected void run(@NotNull final Result result) throws Throwable {\n        ExternalAnnotationsManager.getInstance(myProject).deannotate(container, AnnotationUtil.NOT_NULL);\n      }\n    }.execute();\n    stopListeningAndCheckEvents();\n\n    FileDocumentManager.getInstance().saveAllDocuments();\n\n    IntentionAction fix = myFixture.findSingleIntention(hint1);\n    assertNotNull(fix);\n\n    fix = myFixture.findSingleIntention(hint2);\n    assertNotNull(fix);\n\n    assertFalse(deannotateFix.isAvailable(myProject, editor, file));\n  }","commit_id":"0e4c6e271457654b89124a00f0b2ebbec0415cc8","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@NotNull\n  public static PsiAnnotation[] getAllAnnotations(@NotNull PsiModifierListOwner owner,\n                                                  boolean inHierarchy,\n                                                  @Nullable Set<PsiModifierListOwner> visited, boolean withInferred) {\n    final PsiModifierList list = owner.getModifierList();\n    PsiAnnotation[] annotations = PsiAnnotation.EMPTY_ARRAY;\n    if (list != null) {\n      annotations = list.getAnnotations();\n    }\n\n    final Project project = owner.getProject();\n    final PsiAnnotation[] externalAnnotations = ExternalAnnotationsManager.getInstance(project).findExternalAnnotations(owner);\n    if (externalAnnotations != null) {\n      annotations = ArrayUtil.mergeArrays(annotations, externalAnnotations, PsiAnnotation.ARRAY_FACTORY);\n    }\n    if (withInferred) {\n      final PsiAnnotation[] inferredAnnotations = InferredAnnotationsManager.getInstance(project).findInferredAnnotations(owner);\n      annotations = ArrayUtil.mergeArrays(annotations, inferredAnnotations, PsiAnnotation.ARRAY_FACTORY);\n    }\n\n    if (inHierarchy) {\n      if (owner instanceof PsiClass) {\n        for (PsiClass superClass : ((PsiClass)owner).getSupers()) {\n          if (visited == null) visited = new THashSet<PsiModifierListOwner>();\n          if (visited.add(superClass)) annotations = ArrayUtil.mergeArrays(annotations, getAllAnnotations(superClass, inHierarchy, visited));\n        }\n      }\n      else if (owner instanceof PsiMethod) {\n        PsiMethod method = (PsiMethod)owner;\n        PsiClass aClass = method.getContainingClass();\n        if (aClass != null) {\n          HierarchicalMethodSignature methodSignature = method.getHierarchicalMethodSignature();\n\n          final List<HierarchicalMethodSignature> superSignatures = methodSignature.getSuperSignatures();\n          PsiResolveHelper resolveHelper = PsiResolveHelper.SERVICE.getInstance(aClass.getProject());\n          for (final HierarchicalMethodSignature superSignature : superSignatures) {\n            final PsiMethod superMethod = superSignature.getMethod();\n            if (visited == null) visited = new THashSet<PsiModifierListOwner>();\n            if (!visited.add(superMethod)) continue;\n            if (!resolveHelper.isAccessible(superMethod, owner, null)) continue;\n            annotations = ArrayUtil.mergeArrays(annotations, getAllAnnotations(superMethod, inHierarchy, visited));\n          }\n        }\n      }\n      else if (owner instanceof PsiParameter) {\n        PsiParameter parameter = (PsiParameter)owner;\n        PsiElement scope = parameter.getDeclarationScope();\n        if (scope instanceof PsiMethod) {\n          PsiMethod method = (PsiMethod)scope;\n          PsiClass aClass = method.getContainingClass();\n          PsiElement parent = parameter.getParent();\n          if (aClass != null && parent instanceof PsiParameterList) {\n            int index = ((PsiParameterList)parent).getParameterIndex(parameter);\n            HierarchicalMethodSignature methodSignature = method.getHierarchicalMethodSignature();\n\n            final List<HierarchicalMethodSignature> superSignatures = methodSignature.getSuperSignatures();\n            PsiResolveHelper resolveHelper = PsiResolveHelper.SERVICE.getInstance(aClass.getProject());\n            for (final HierarchicalMethodSignature superSignature : superSignatures) {\n              final PsiMethod superMethod = superSignature.getMethod();\n              if (visited == null) visited = new THashSet<PsiModifierListOwner>();\n              if (!visited.add(superMethod)) continue;\n              if (!resolveHelper.isAccessible(superMethod, owner, null)) continue;\n              PsiParameter[] superParameters = superMethod.getParameterList().getParameters();\n              if (index < superParameters.length) {\n                annotations = ArrayUtil.mergeArrays(annotations, getAllAnnotations(superParameters[index], inHierarchy, visited));\n              }\n            }\n          }\n        }\n      }\n    }\n    return annotations;\n  }","id":55184,"modified_method":"@NotNull\n  public static PsiAnnotation[] getAllAnnotations(@NotNull PsiModifierListOwner owner,\n                                                  boolean inHierarchy,\n                                                  @Nullable Set<PsiModifierListOwner> visited, boolean withInferred) {\n    final PsiModifierList list = owner.getModifierList();\n    PsiAnnotation[] annotations = PsiAnnotation.EMPTY_ARRAY;\n    if (list != null) {\n      annotations = list.getAnnotations();\n    }\n\n    final Project project = owner.getProject();\n    final PsiAnnotation[] externalAnnotations = ExternalAnnotationsManager.getInstance(project).findExternalAnnotations(owner);\n    if (externalAnnotations != null) {\n      annotations = ArrayUtil.mergeArrays(annotations, externalAnnotations, PsiAnnotation.ARRAY_FACTORY);\n    }\n    if (withInferred) {\n      final PsiAnnotation[] inferredAnnotations = InferredAnnotationsManager.getInstance(project).findInferredAnnotations(owner);\n      annotations = ArrayUtil.mergeArrays(annotations, inferredAnnotations, PsiAnnotation.ARRAY_FACTORY);\n    }\n\n    if (inHierarchy) {\n      if (owner instanceof PsiClass) {\n        for (PsiClass superClass : ((PsiClass)owner).getSupers()) {\n          if (visited == null) visited = new THashSet<PsiModifierListOwner>();\n          if (visited.add(superClass)) annotations = ArrayUtil.mergeArrays(annotations, getAllAnnotations(superClass, true, visited));\n        }\n      }\n      else if (owner instanceof PsiMethod) {\n        PsiMethod method = (PsiMethod)owner;\n        PsiClass aClass = method.getContainingClass();\n        if (aClass != null) {\n          HierarchicalMethodSignature methodSignature = method.getHierarchicalMethodSignature();\n\n          final List<HierarchicalMethodSignature> superSignatures = methodSignature.getSuperSignatures();\n          PsiResolveHelper resolveHelper = PsiResolveHelper.SERVICE.getInstance(aClass.getProject());\n          for (final HierarchicalMethodSignature superSignature : superSignatures) {\n            final PsiMethod superMethod = superSignature.getMethod();\n            if (visited == null) visited = new THashSet<PsiModifierListOwner>();\n            if (!visited.add(superMethod)) continue;\n            if (!resolveHelper.isAccessible(superMethod, owner, null)) continue;\n            annotations = ArrayUtil.mergeArrays(annotations, getAllAnnotations(superMethod, true, visited));\n          }\n        }\n      }\n      else if (owner instanceof PsiParameter) {\n        PsiParameter parameter = (PsiParameter)owner;\n        PsiElement scope = parameter.getDeclarationScope();\n        if (scope instanceof PsiMethod) {\n          PsiMethod method = (PsiMethod)scope;\n          PsiClass aClass = method.getContainingClass();\n          PsiElement parent = parameter.getParent();\n          if (aClass != null && parent instanceof PsiParameterList) {\n            int index = ((PsiParameterList)parent).getParameterIndex(parameter);\n            HierarchicalMethodSignature methodSignature = method.getHierarchicalMethodSignature();\n\n            final List<HierarchicalMethodSignature> superSignatures = methodSignature.getSuperSignatures();\n            PsiResolveHelper resolveHelper = PsiResolveHelper.SERVICE.getInstance(aClass.getProject());\n            for (final HierarchicalMethodSignature superSignature : superSignatures) {\n              final PsiMethod superMethod = superSignature.getMethod();\n              if (visited == null) visited = new THashSet<PsiModifierListOwner>();\n              if (!visited.add(superMethod)) continue;\n              if (!resolveHelper.isAccessible(superMethod, owner, null)) continue;\n              PsiParameter[] superParameters = superMethod.getParameterList().getParameters();\n              if (index < superParameters.length) {\n                annotations = ArrayUtil.mergeArrays(annotations, getAllAnnotations(superParameters[index], true, visited));\n              }\n            }\n          }\n        }\n      }\n    }\n    return annotations;\n  }","commit_id":"0e4c6e271457654b89124a00f0b2ebbec0415cc8","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private static boolean isAnnotated(@NotNull PsiModifierListOwner listOwner,\n                                     @NonNls @NotNull String annotationFQN,\n                                     boolean checkHierarchy, final boolean skipExternal, @Nullable Set<PsiMember> processed) {\n    if (!listOwner.isValid()) return false;\n    final PsiModifierList modifierList = listOwner.getModifierList();\n    if (modifierList == null) return false;\n    PsiAnnotation annotation = modifierList.findAnnotation(annotationFQN);\n    if (annotation != null) return true;\n    if (!skipExternal) {\n      final Project project = listOwner.getProject();\n      if (ExternalAnnotationsManager.getInstance(project).findExternalAnnotation(listOwner, annotationFQN) != null ||\n          InferredAnnotationsManager.getInstance(project).findInferredAnnotation(listOwner, annotationFQN) != null) {\n        return true;\n      }\n    }\n    if (checkHierarchy) {\n      if (listOwner instanceof PsiMethod) {\n        PsiMethod method = (PsiMethod)listOwner;\n        if (processed == null) processed = new THashSet<PsiMember>();\n        if (!processed.add(method)) return false;\n        final PsiMethod[] superMethods = method.findSuperMethods();\n        for (PsiMethod superMethod : superMethods) {\n          if (isAnnotated(superMethod, annotationFQN, checkHierarchy, skipExternal, processed)) return true;\n        }\n      } else if (listOwner instanceof PsiClass) {\n        final PsiClass clazz = (PsiClass)listOwner;\n        if (processed == null) processed = new THashSet<PsiMember>();\n        if (!processed.add(clazz)) return false;\n        final PsiClass[] superClasses = clazz.getSupers();\n        for (PsiClass superClass : superClasses) {\n          if (isAnnotated(superClass, annotationFQN, checkHierarchy, skipExternal, processed)) return true;\n        }\n      }\n    }\n    return false;\n  }","id":55185,"modified_method":"private static boolean isAnnotated(@NotNull PsiModifierListOwner listOwner,\n                                     @NonNls @NotNull String annotationFQN,\n                                     boolean checkHierarchy, final boolean skipExternal, @Nullable Set<PsiMember> processed) {\n    if (!listOwner.isValid()) return false;\n    final PsiModifierList modifierList = listOwner.getModifierList();\n    if (modifierList == null) return false;\n    PsiAnnotation annotation = modifierList.findAnnotation(annotationFQN);\n    if (annotation != null) return true;\n    if (!skipExternal) {\n      final Project project = listOwner.getProject();\n      if (ExternalAnnotationsManager.getInstance(project).findExternalAnnotation(listOwner, annotationFQN) != null ||\n          InferredAnnotationsManager.getInstance(project).findInferredAnnotation(listOwner, annotationFQN) != null) {\n        return true;\n      }\n    }\n    if (checkHierarchy) {\n      if (listOwner instanceof PsiMethod) {\n        PsiMethod method = (PsiMethod)listOwner;\n        if (processed == null) processed = new THashSet<PsiMember>();\n        if (!processed.add(method)) return false;\n        final PsiMethod[] superMethods = method.findSuperMethods();\n        for (PsiMethod superMethod : superMethods) {\n          if (isAnnotated(superMethod, annotationFQN, true, skipExternal, processed)) return true;\n        }\n      } else if (listOwner instanceof PsiClass) {\n        final PsiClass clazz = (PsiClass)listOwner;\n        if (processed == null) processed = new THashSet<PsiMember>();\n        if (!processed.add(clazz)) return false;\n        final PsiClass[] superClasses = clazz.getSupers();\n        for (PsiClass superClass : superClasses) {\n          if (isAnnotated(superClass, annotationFQN, true, skipExternal, processed)) return true;\n        }\n      }\n    }\n    return false;\n  }","commit_id":"0e4c6e271457654b89124a00f0b2ebbec0415cc8","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"/**\n   * Works similar to #isAnnotated(PsiModifierListOwner, Collection<String>) but supports FQN patters\n   * like \"javax.ws.rs.*\". Supports ending \"*\" only.\n   *\n   * @param owner modifier list\n   * @param annotations annotations qualified names or patterns. Patterns can have '*' at the end\n   * @return <code>true<\/code> if annotated of at least one annotation from the annotations list\n   */\n  @Contract(\"null,_ -> false\")\n  public static boolean checkAnnotatedUsingPatterns(@Nullable PsiModifierListOwner owner, @NotNull Collection<String> annotations) {\n    final PsiModifierList modList;\n    if (owner == null || (modList = owner.getModifierList()) == null) return false;\n\n    List<String> fqns = null;\n    for (String fqn : annotations) {\n      boolean isPattern = fqn.endsWith(\"*\");\n      if (!isPattern && isAnnotated(owner, fqn, false)) {\n        return true;\n      } else if (isPattern) {\n        if (fqns == null) {\n          fqns = new ArrayList<String>();\n          final PsiAnnotation[] annos = modList.getAnnotations();\n          for (PsiAnnotation anno : annos) {\n            final String qName = anno.getQualifiedName();\n            if (qName != null) {\n              fqns.add(qName);\n            }\n          }\n          if (fqns.isEmpty()) return false;\n        }\n        fqn = fqn.substring(0, fqn.length() - 2);\n        for (String annoFQN : fqns) {\n          if (annoFQN.startsWith(fqn)) {\n            return true;\n          }\n        }\n      }\n    }\n    return false;\n  }","id":55186,"modified_method":"/**\n   * Works similar to #isAnnotated(PsiModifierListOwner, Collection<String>) but supports FQN patters\n   * like \"javax.ws.rs.*\". Supports ending \"*\" only.\n   *\n   * @param owner modifier list\n   * @param annotations annotations qualified names or patterns. Patterns can have '*' at the end\n   * @return <code>true<\/code> if annotated of at least one annotation from the annotations list\n   */\n  @Contract(\"null,_ -> false\")\n  public static boolean checkAnnotatedUsingPatterns(@Nullable PsiModifierListOwner owner, @NotNull Collection<String> annotations) {\n    final PsiModifierList modList;\n    if (owner == null || (modList = owner.getModifierList()) == null) return false;\n\n    List<String> fqns = null;\n    for (String fqn : annotations) {\n      boolean isPattern = fqn.endsWith(\"*\");\n      if (!isPattern && isAnnotated(owner, fqn, false)) {\n        return true;\n      }\n      else if (isPattern) {\n        if (fqns == null) {\n          fqns = new ArrayList<String>();\n          final PsiAnnotation[] ownAnnotations = modList.getAnnotations();\n          for (PsiAnnotation anno : ownAnnotations) {\n            final String qName = anno.getQualifiedName();\n            if (qName != null) {\n              fqns.add(qName);\n            }\n          }\n          if (fqns.isEmpty()) return false;\n        }\n        fqn = fqn.substring(0, fqn.length() - 2);\n        for (String annoFQN : fqns) {\n          if (annoFQN.startsWith(fqn)) {\n            return true;\n          }\n        }\n      }\n    }\n    return false;\n  }","commit_id":"0e4c6e271457654b89124a00f0b2ebbec0415cc8","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Nullable\n  public static <T extends Annotation> T findAnnotationInHierarchy(@NotNull PsiModifierListOwner listOwner, @NotNull Class<T> annotationClass) {\n    PsiAnnotation annotation = findAnnotationInHierarchy(listOwner, Collections.singleton(annotationClass.getName()));\n    if (annotation == null) return null;\n    return (T)Proxy.newProxyInstance(\n      annotationClass.getClassLoader(), new Class<?>[]{annotationClass}, new AnnotationInvocationHandler(annotationClass, annotation));\n  }","id":55187,"modified_method":"@Nullable\n  public static <T extends Annotation> T findAnnotationInHierarchy(@NotNull PsiModifierListOwner listOwner, @NotNull Class<T> annotationClass) {\n    PsiAnnotation annotation = findAnnotationInHierarchy(listOwner, Collections.singleton(annotationClass.getName()));\n    if (annotation == null) return null;\n    AnnotationInvocationHandler handler = new AnnotationInvocationHandler(annotationClass, annotation);\n    @SuppressWarnings(\"unchecked\") T t = (T)Proxy.newProxyInstance(annotationClass.getClassLoader(), new Class<?>[]{annotationClass}, handler);\n    return t;\n  }","commit_id":"0e4c6e271457654b89124a00f0b2ebbec0415cc8","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"protected void dropCache() {\n    myExternalAnnotations.clear();\n    annotationFileToDataAndModStamp.clear();\n    cache.clear();\n  }","id":55188,"modified_method":"protected void dropCache() {\n    myExternalAnnotations.clear();\n    myAnnotationFileToDataAndModStamp.clear();\n    cache.clear();\n  }","commit_id":"0e4c6e271457654b89124a00f0b2ebbec0415cc8","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public MostlySingularMultiMap<String, AnnotationData> getResult() {\n      if (data.isEmpty()) {\n        return MostlySingularMultiMap.emptyMap();\n      }\n      data.compact();\n      return data;\n    }","id":55189,"modified_method":"public MostlySingularMultiMap<String, AnnotationData> getResult() {\n      if (myData.isEmpty()) {\n        return MostlySingularMultiMap.emptyMap();\n      }\n      myData.compact();\n      return myData;\n    }","commit_id":"0e4c6e271457654b89124a00f0b2ebbec0415cc8","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Override\n    public boolean equals(Object o) {\n      if (this == o) return true;\n      if (o == null || getClass() != o.getClass()) return false;\n\n      AnnotationData data = (AnnotationData)o;\n\n      return annotationClassFqName.equals(data.annotationClassFqName) && annotationParameters.equals(data.annotationParameters);\n    }","id":55190,"modified_method":"@Override\n    public boolean equals(Object o) {\n      if (this == o) return true;\n      if (o == null || getClass() != o.getClass()) return false;\n\n      AnnotationData data = (AnnotationData)o;\n\n      return myFqName.equals(data.myFqName) && myParameters.equals(data.myParameters);\n    }","commit_id":"0e4c6e271457654b89124a00f0b2ebbec0415cc8","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Override\n    public String toString() {\n      return annotationClassFqName + \"(\"+annotationParameters+\")\";\n    }","id":55191,"modified_method":"@Override\n    public String toString() {\n      return myFqName + \"(\" + myParameters + \")\";\n    }","commit_id":"0e4c6e271457654b89124a00f0b2ebbec0415cc8","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@NotNull\n  private MostlySingularMultiMap<String, AnnotationData> getDataFromFile(@NotNull final PsiFile file) {\n    Pair<MostlySingularMultiMap<String, AnnotationData>, Long> cached = annotationFileToDataAndModStamp.get(file);\n    final long fileModificationStamp = file.getModificationStamp();\n    if (cached != null && cached.getSecond() == fileModificationStamp) {\n      return cached.getFirst();\n    }\n    DataParsingSaxHandler handler = new DataParsingSaxHandler(file);\n    try {\n      SAXParser saxParser = SAXParserFactory.newInstance().newSAXParser();\n      saxParser.parse(new InputSource(new CharSequenceReader(escapeAttributes(file.getViewProvider().getContents()))), handler);\n    }\n    catch (IOException e) {\n      LOG.error(e);\n    }\n    catch (ParserConfigurationException e) {\n      LOG.error(e);\n    }\n    catch (SAXException e) {\n      LOG.error(e);\n    }\n\n    Pair<MostlySingularMultiMap<String, AnnotationData>, Long> pair = Pair.create(handler.getResult(), file.getModificationStamp());\n    annotationFileToDataAndModStamp.put(file, pair);\n\n    return pair.first;\n  }","id":55192,"modified_method":"@NotNull\n  private MostlySingularMultiMap<String, AnnotationData> getDataFromFile(@NotNull PsiFile file) {\n    Pair<MostlySingularMultiMap<String, AnnotationData>, Long> cached = myAnnotationFileToDataAndModStamp.get(file);\n    long fileModificationStamp = file.getModificationStamp();\n    if (cached != null && cached.getSecond() == fileModificationStamp) {\n      return cached.getFirst();\n    }\n\n    DataParsingSaxHandler handler = new DataParsingSaxHandler(file);\n    try {\n      SAXParser saxParser = SAXParserFactory.newInstance().newSAXParser();\n      saxParser.parse(new InputSource(new CharSequenceReader(escapeAttributes(file.getViewProvider().getContents()))), handler);\n    }\n    catch (IOException e) {\n      LOG.error(e);\n    }\n    catch (ParserConfigurationException e) {\n      LOG.error(e);\n    }\n    catch (SAXException e) {\n      LOG.error(e);\n    }\n\n    MostlySingularMultiMap<String, AnnotationData> result = handler.getResult();\n    myAnnotationFileToDataAndModStamp.put(file, pair(result, fileModificationStamp));\n    return result;\n  }","commit_id":"0e4c6e271457654b89124a00f0b2ebbec0415cc8","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Override\n    public void startElement(String uri, String localName, String qName, Attributes attributes) throws SAXException {\n      if (\"item\".equals(qName)) {\n        externalName = attributes.getValue(\"name\");\n      } else if (\"annotation\".equals(qName)) {\n        annotationFQN = attributes.getValue(\"name\");\n        arguments = new StringBuilder();\n      } else if (\"val\".equals(qName)) {\n        if (arguments.length() != 0) {\n          arguments.append(\",\");\n        }\n        String name = attributes.getValue(\"name\");\n        if (name != null) {\n          arguments.append(name);\n          arguments.append(\"=\");\n        }\n        arguments.append(attributes.getValue(\"val\"));\n      }\n    }","id":55193,"modified_method":"@Override\n    public void startElement(String uri, String localName, String qName, Attributes attributes) throws SAXException {\n      if (\"item\".equals(qName)) {\n        myExternalName = attributes.getValue(\"name\");\n      }\n      else if (\"annotation\".equals(qName)) {\n        myAnnotationFqn = attributes.getValue(\"name\");\n        myArguments = new StringBuilder();\n      }\n      else if (\"val\".equals(qName)) {\n        if (myArguments.length() != 0) {\n          myArguments.append(\",\");\n        }\n        String name = attributes.getValue(\"name\");\n        if (name != null) {\n          myArguments.append(name);\n          myArguments.append(\"=\");\n        }\n        myArguments.append(attributes.getValue(\"val\"));\n      }\n    }","commit_id":"0e4c6e271457654b89124a00f0b2ebbec0415cc8","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@NotNull\n  private PsiAnnotation createAnnotationFromText(@NotNull final String text) throws IncorrectOperationException {\n    // synchronize during interning in charTable\n    synchronized (charTable) {\n      final DummyHolder holder = DummyHolderFactory.createHolder(myPsiManager, new JavaDummyElement(text, ANNOTATION, LanguageLevel.HIGHEST), null, charTable);\n      final PsiElement element = SourceTreeToPsiMap.treeElementToPsi(holder.getTreeElement().getFirstChildNode());\n      if (!(element instanceof PsiAnnotation)) {\n        throw new IncorrectOperationException(\"Incorrect annotation \\\"\" + text + \"\\\".\");\n      }\n      return markAsExternalAnnotation((PsiAnnotation)element);\n    }\n  }","id":55194,"modified_method":"@NotNull\n  private PsiAnnotation createAnnotationFromText(@NotNull final String text) throws IncorrectOperationException {\n    // synchronize during interning in charTable\n    synchronized (charTable) {\n      DummyHolder holder = DummyHolderFactory.createHolder(myPsiManager, new JavaDummyElement(text, ANNOTATION, LanguageLevel.HIGHEST), null, charTable);\n      PsiElement element = SourceTreeToPsiMap.treeElementToPsi(holder.getTreeElement().getFirstChildNode());\n      if (!(element instanceof PsiAnnotation)) {\n        throw new IncorrectOperationException(\"Incorrect annotation \\\"\" + text + \"\\\".\");\n      }\n      return markAsExternalAnnotation((PsiAnnotation)element);\n    }\n  }","commit_id":"0e4c6e271457654b89124a00f0b2ebbec0415cc8","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Override\n    public void endElement(String uri, String localName, String qName) throws SAXException {\n      if (\"item\".equals(qName)) {\n        externalName = null;\n      } else if (\"annotation\".equals(qName)) {\n        if (externalName != null && annotationFQN != null) {\n          String argumentsString = arguments.length() == 0 ? \"\" : intern(arguments.toString());\n          for (AnnotationData existingData : data.get(externalName)) {\n            if (existingData.annotationClassFqName.equals(annotationFQN)) {\n              duplicateError(file, externalName, \"Duplicate annotation '\" + annotationFQN + \"' \");\n            }\n          }\n          AnnotationData annData = internAnnotationData(new AnnotationData(annotationFQN, argumentsString));\n          data.add(externalName, annData);\n          annotationFQN = null;\n          arguments = null;\n        }\n      }\n    }","id":55195,"modified_method":"@Override\n    public void endElement(String uri, String localName, String qName) throws SAXException {\n      if (\"item\".equals(qName)) {\n        myExternalName = null;\n      }\n      else if (\"annotation\".equals(qName) && myExternalName != null && myAnnotationFqn != null) {\n        String argumentsString = myArguments.length() == 0 ? \"\" : intern(myArguments.toString());\n        for (AnnotationData existingData : myData.get(myExternalName)) {\n          if (existingData.myFqName.equals(myAnnotationFqn)) {\n            duplicateError(myFile, myExternalName, \"Duplicate annotation '\" + myAnnotationFqn + \"'\");\n          }\n        }\n\n        AnnotationData data = new AnnotationData(myAnnotationFqn, argumentsString);\n        myData.add(myExternalName, internAnnotationData(data));\n\n        myAnnotationFqn = null;\n        myArguments = null;\n      }\n    }","commit_id":"0e4c6e271457654b89124a00f0b2ebbec0415cc8","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@NotNull\n    private PsiAnnotation getAnnotation(@NotNull BaseExternalAnnotationsManager context) {\n      PsiAnnotation a = annotation;\n      if (a == null) {\n        a = context.createAnnotationFromText(\"@\" + annotationClassFqName + (annotationParameters.isEmpty() ? \"\" : \"(\"+annotationParameters+\")\"));\n        annotation = markAsExternalAnnotation(a);\n      }\n      return a;\n    }","id":55196,"modified_method":"@NotNull\n    private PsiAnnotation getAnnotation(@NotNull BaseExternalAnnotationsManager context) {\n      PsiAnnotation a = myAnnotation;\n      if (a == null) {\n        String text = \"@\" + myFqName + (myParameters.isEmpty() ? \"\" : \"(\" + myParameters + \")\");\n        myAnnotation = a = markAsExternalAnnotation(context.createAnnotationFromText(text));\n      }\n      return a;\n    }","commit_id":"0e4c6e271457654b89124a00f0b2ebbec0415cc8","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Override\n    public int hashCode() {\n      int result = annotationClassFqName.hashCode();\n      result = 31 * result + annotationParameters.hashCode();\n      return result;\n    }","id":55197,"modified_method":"@Override\n    public int hashCode() {\n      int result = myFqName.hashCode();\n      result = 31 * result + myParameters.hashCode();\n      return result;\n    }","commit_id":"0e4c6e271457654b89124a00f0b2ebbec0415cc8","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private DataParsingSaxHandler(PsiFile file) {\n      this.file = file;\n    }","id":55198,"modified_method":"private DataParsingSaxHandler(PsiFile file) {\n      myFile = file;\n    }","commit_id":"0e4c6e271457654b89124a00f0b2ebbec0415cc8","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@NotNull\n  private List<AnnotationData> doCollect(@NotNull PsiModifierListOwner listOwner, boolean onlyWritable) {\n    final List<PsiFile> files = findExternalAnnotationsFiles(listOwner);\n    if (files == null) {\n      return NO_DATA;\n    }\n    SmartList<AnnotationData> result = new SmartList<AnnotationData>();\n    String externalName = getExternalName(listOwner, false);\n    if (externalName == null) return NO_DATA;\n\n    for (PsiFile file : files) {\n      if (!file.isValid()) continue;\n      if (onlyWritable && !file.isWritable()) continue;\n\n      MostlySingularMultiMap<String, AnnotationData> fileData = getDataFromFile(file);\n\n      ContainerUtil.addAll(result, fileData.get(externalName));\n    }\n    if (result.isEmpty()) {\n      return NO_DATA;\n    }\n    result.trimToSize();\n    return result;\n  }","id":55199,"modified_method":"@NotNull\n  private List<AnnotationData> doCollect(@NotNull PsiModifierListOwner listOwner, boolean onlyWritable) {\n    String externalName = getExternalName(listOwner, false);\n    if (externalName == null) return NO_DATA;\n\n    List<PsiFile> files = findExternalAnnotationsFiles(listOwner);\n    if (files == null) return NO_DATA;\n\n    SmartList<AnnotationData> result = new SmartList<AnnotationData>();\n    for (PsiFile file : files) {\n      if (!file.isValid()) continue;\n      if (onlyWritable && !file.isWritable()) continue;\n\n      MostlySingularMultiMap<String, AnnotationData> fileData = getDataFromFile(file);\n      ContainerUtil.addAll(result, fileData.get(externalName));\n    }\n    if (result.isEmpty()) return NO_DATA;\n\n    result.trimToSize();\n    return result;\n  }","commit_id":"0e4c6e271457654b89124a00f0b2ebbec0415cc8","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Override\n  @Nullable\n  public List<PsiFile> findExternalAnnotationsFiles(@NotNull PsiModifierListOwner _listOwner) {\n    final PsiModifierListOwner listOwner = preferCompiledElement(_listOwner);\n    final PsiFile containingFile = listOwner.getContainingFile();\n    if (!(containingFile instanceof PsiJavaFile)) {\n      return null;\n    }\n    final PsiJavaFile javaFile = (PsiJavaFile)containingFile;\n    final String packageName = javaFile.getPackageName();\n    final VirtualFile virtualFile = containingFile.getVirtualFile();\n    if (virtualFile == null) return null;\n    \n    final List<PsiFile> files = myExternalAnnotations.get(virtualFile);\n    if (files == NULL_LIST) return null;\n    if (files != null) {\n      boolean allValid = true;\n      for (PsiFile file : files) {\n        allValid &= file.isValid();\n      }\n      if (allValid) {\n        return files;\n      }\n    }\n\n    Set<PsiFile> possibleAnnotationsXmls = new THashSet<PsiFile>();\n    for (VirtualFile root : getExternalAnnotationsRoots(virtualFile)) {\n      final VirtualFile ext = root.findFileByRelativePath(packageName.replace('.', '/') + \"/\" + ANNOTATIONS_XML);\n      if (ext == null) continue;\n      final PsiFile psiFile = myPsiManager.findFile(ext);\n      if (psiFile == null) continue;\n      possibleAnnotationsXmls.add(psiFile);\n    }\n    List<PsiFile> result;\n    if (possibleAnnotationsXmls.isEmpty()) {\n      myExternalAnnotations.put(virtualFile, NULL_LIST);\n      result = null;\n    }\n    else {\n      result = new SmartList<PsiFile>(possibleAnnotationsXmls);\n      // sorting by writability: writable go first\n      Collections.sort(result, new Comparator<PsiFile>() {\n        @Override\n        public int compare(PsiFile f1, PsiFile f2) {\n          boolean w1 = f1.isWritable();\n          boolean w2 = f2.isWritable();\n          if (w1 == w2) {\n            return 0;\n          }\n          return w1 ? -1 : 1;\n        }\n      });\n\n      myExternalAnnotations.put(virtualFile, result);\n    }\n    return result;\n  }","id":55200,"modified_method":"@Override\n  @Nullable\n  public List<PsiFile> findExternalAnnotationsFiles(@NotNull PsiModifierListOwner listOwner) {\n    final PsiFile containingFile = preferCompiledElement(listOwner).getContainingFile();\n    if (!(containingFile instanceof PsiJavaFile)) return null;\n\n    final VirtualFile virtualFile = containingFile.getVirtualFile();\n    if (virtualFile == null) return null;\n    \n    final List<PsiFile> files = myExternalAnnotations.get(virtualFile);\n    if (files == NULL_LIST) return null;\n\n    if (files != null) {\n      boolean allValid = true;\n      for (PsiFile file : files) {\n        if (!file.isValid()) {\n          allValid = false;\n          break;\n        }\n      }\n      if (allValid) {\n        return files;\n      }\n    }\n\n    Set<PsiFile> possibleAnnotations = new THashSet<PsiFile>();\n    String relativePath = ((PsiJavaFile)containingFile).getPackageName().replace('.', '/') + '/' + ANNOTATIONS_XML;\n    for (VirtualFile root : getExternalAnnotationsRoots(virtualFile)) {\n      VirtualFile ext = root.findFileByRelativePath(relativePath);\n      if (ext != null) {\n        PsiFile psiFile = myPsiManager.findFile(ext);\n        if (psiFile != null) {\n          possibleAnnotations.add(psiFile);\n        }\n      }\n    }\n\n    if (possibleAnnotations.isEmpty()) {\n      myExternalAnnotations.put(virtualFile, NULL_LIST);\n      return null;\n    }\n\n    List<PsiFile> result = new SmartList<PsiFile>(possibleAnnotations);\n    // writable go first\n    Collections.sort(result, new Comparator<PsiFile>() {\n      @Override\n      public int compare(PsiFile f1, PsiFile f2) {\n        boolean w1 = f1.isWritable();\n        boolean w2 = f2.isWritable();\n        return w1 == w2 ? 0 : w1 ? -1 : 1;\n      }\n    });\n    myExternalAnnotations.put(virtualFile, result);\n    return result;\n  }","commit_id":"0e4c6e271457654b89124a00f0b2ebbec0415cc8","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private AnnotationData(@NotNull String annotationClassFqName, @NotNull String annotationParameters) {\n      this.annotationClassFqName = annotationClassFqName;\n      this.annotationParameters = annotationParameters;\n    }","id":55201,"modified_method":"private AnnotationData(@NotNull String fqn, @NotNull String parameters) {\n      myFqName = fqn;\n      myParameters = parameters;\n    }","commit_id":"0e4c6e271457654b89124a00f0b2ebbec0415cc8","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@NotNull\n  private AnnotationData internAnnotationData(@NotNull AnnotationData data) {\n    synchronized (annotationDataCache) {\n      AnnotationData interned = annotationDataCache.get(data);\n      if (interned == null) {\n        annotationDataCache.put(data, data);\n        interned = data;\n      }\n      return interned;\n    }\n  }","id":55202,"modified_method":"@NotNull\n  private AnnotationData internAnnotationData(@NotNull AnnotationData data) {\n    synchronized (myAnnotationDataCache) {\n      AnnotationData interned = myAnnotationDataCache.get(data);\n      if (interned == null) {\n        myAnnotationDataCache.put(data, data);\n        interned = data;\n      }\n      return interned;\n    }\n  }","commit_id":"0e4c6e271457654b89124a00f0b2ebbec0415cc8","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private static AnnotationData findByFQN(@NotNull List<AnnotationData> map, @NotNull final String annotationFQN) {\n    return ContainerUtil.find(map, new Condition<AnnotationData>() {\n      @Override\n      public boolean value(AnnotationData data) {\n        return data.annotationClassFqName.equals(annotationFQN);\n      }\n    });\n  }","id":55203,"modified_method":"private static AnnotationData findByFQN(@NotNull List<AnnotationData> map, @NotNull final String annotationFQN) {\n    return ContainerUtil.find(map, new Condition<AnnotationData>() {\n      @Override\n      public boolean value(AnnotationData data) {\n        return data.myFqName.equals(annotationFQN);\n      }\n    });\n  }","commit_id":"0e4c6e271457654b89124a00f0b2ebbec0415cc8","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void setUpProject(@NotNull final Project project, @NotNull final SetupHandler handler) throws Exception {\n    ApplicationManager.getApplication().runWriteAction(new Runnable() {\n      @Override\n      public void run() {\n        Module module = createMainModule(project);\n        handler.moduleCreated(module);\n        VirtualFile sourceRoot = createSourcesRoot(module);\n        if (sourceRoot != null) {\n          handler.sourceRootCreated(sourceRoot);\n          createContentEntry(module, sourceRoot);\n        }\n      }\n    });\n  }","id":55204,"modified_method":"public void setUpProject(@NotNull final Project project, @NotNull final SetupHandler handler) throws Exception {\n    ApplicationManager.getApplication().runWriteAction(() -> {\n      Module module = createMainModule(project);\n      handler.moduleCreated(module);\n      VirtualFile sourceRoot = createSourcesRoot(module);\n      if (sourceRoot != null) {\n        handler.sourceRootCreated(sourceRoot);\n        createContentEntry(module, sourceRoot);\n      }\n    });\n  }","commit_id":"c60fa539e052cb454559739a822d7c4d85311365","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Nullable\n  public VirtualFile createSourcesRoot(@NotNull final Module module) {\n    VirtualFile dummyRoot = VirtualFileManager.getInstance().findFileByUrl(\"temp:///\");\n    assert dummyRoot != null;\n    dummyRoot.refresh(false, false);\n\n    final VirtualFile srcRoot;\n    try {\n      srcRoot = dummyRoot.createChildDirectory(this, \"src\");\n      cleanSourceRoot(srcRoot);\n    }\n    catch (IOException e) {\n      throw new RuntimeException(e);\n    }\n\n    final IndexableFileSet indexableFileSet = new IndexableFileSet() {\n      @Override\n      public boolean isInSet(@NotNull final VirtualFile file) {\n        return file.getFileSystem() == srcRoot.getFileSystem() &&\n               module.getProject().isOpen();\n      }\n\n      @Override\n      public void iterateIndexableFilesIn(@NotNull final VirtualFile file, @NotNull final ContentIterator iterator) {\n        VfsUtilCore.visitChildrenRecursively(file, new VirtualFileVisitor() {\n          @Override\n          public boolean visitFile(@NotNull VirtualFile file) {\n            iterator.processFile(file);\n            return true;\n          }\n        });\n      }\n    };\n    FileBasedIndex.getInstance().registerIndexableSet(indexableFileSet, null);\n    Disposer.register(module.getProject(), new Disposable() {\n      @Override\n      public void dispose() {\n        FileBasedIndex.getInstance().removeIndexableSet(indexableFileSet);\n      }\n    });\n\n    return srcRoot;\n  }","id":55205,"modified_method":"@Nullable\n  public VirtualFile createSourcesRoot(@NotNull final Module module) {\n    VirtualFile dummyRoot = VirtualFileManager.getInstance().findFileByUrl(\"temp:///\");\n    assert dummyRoot != null;\n    dummyRoot.refresh(false, false);\n\n    final VirtualFile srcRoot;\n    try {\n      srcRoot = dummyRoot.createChildDirectory(this, \"src\");\n      cleanSourceRoot(srcRoot);\n    }\n    catch (IOException e) {\n      throw new RuntimeException(e);\n    }\n\n    final IndexableFileSet indexableFileSet = new IndexableFileSet() {\n      @Override\n      public boolean isInSet(@NotNull final VirtualFile file) {\n        return file.getFileSystem() == srcRoot.getFileSystem() &&\n               module.getProject().isOpen();\n      }\n\n      @Override\n      public void iterateIndexableFilesIn(@NotNull final VirtualFile file, @NotNull final ContentIterator iterator) {\n        VfsUtilCore.visitChildrenRecursively(file, new VirtualFileVisitor() {\n          @Override\n          public boolean visitFile(@NotNull VirtualFile file) {\n            iterator.processFile(file);\n            return true;\n          }\n        });\n      }\n    };\n    FileBasedIndex.getInstance().registerIndexableSet(indexableFileSet, null);\n    Disposer.register(module.getProject(), () -> FileBasedIndex.getInstance().removeIndexableSet(indexableFileSet));\n\n    return srcRoot;\n  }","commit_id":"c60fa539e052cb454559739a822d7c4d85311365","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"protected void createContentEntry(@NotNull final Module module, @NotNull final VirtualFile srcRoot) {\n    updateModel(module, new Consumer<ModifiableRootModel>() {\n      @Override\n      public void consume(ModifiableRootModel model) {\n        Sdk sdk = getSdk();\n        if (sdk != null) {\n          model.setSdk(sdk);\n        }\n\n        ContentEntry contentEntry = model.addContentEntry(srcRoot);\n        contentEntry.addSourceFolder(srcRoot, false);\n\n        configureModule(module, model, contentEntry);\n      }\n    });\n  }","id":55206,"modified_method":"protected void createContentEntry(@NotNull final Module module, @NotNull final VirtualFile srcRoot) {\n    updateModel(module, model -> {\n      Sdk sdk = getSdk();\n      if (sdk != null) {\n        model.setSdk(sdk);\n      }\n\n      ContentEntry contentEntry = model.addContentEntry(srcRoot);\n      contentEntry.addSourceFolder(srcRoot, false);\n\n      configureModule(module, model, contentEntry);\n    });\n  }","commit_id":"c60fa539e052cb454559739a822d7c4d85311365","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@NotNull\n  public Module createMainModule(@NotNull final Project project) {\n    return ApplicationManager.getApplication().runWriteAction(new Computable<Module>() {\n      @Override\n      public Module compute() {\n        String moduleFilePath = \"light_idea_test_case.iml\";\n        File imlFile = new File(moduleFilePath);\n        if (imlFile.exists()) {\n          //temporary workaround for IDEA-147530: otherwise if someone saved module with this name before the created module will get its settings\n          FileUtil.delete(imlFile);\n        }\n        return ModuleManager.getInstance(project).newModule(moduleFilePath, getModuleType().getId());\n      }\n    });\n  }","id":55207,"modified_method":"@NotNull\n  public Module createMainModule(@NotNull final Project project) {\n    return ApplicationManager.getApplication().runWriteAction((Computable<Module>)() -> {\n      String moduleFilePath = \"light_idea_test_case.iml\";\n      File imlFile = new File(moduleFilePath);\n      if (imlFile.exists()) {\n        //temporary workaround for IDEA-147530: otherwise if someone saved module with this name before the created module will get its settings\n        FileUtil.delete(imlFile);\n      }\n      return ModuleManager.getInstance(project).newModule(moduleFilePath, getModuleType().getId());\n    });\n  }","commit_id":"c60fa539e052cb454559739a822d7c4d85311365","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private static void addAllPointersUnder(@NotNull FilePointerPartNode node, @NotNull List<FilePointerPartNode> out) {\n    if (node.leaf != null) out.add(node);\n    for (FilePointerPartNode child : node.children) {\n      addAllPointersUnder(child, out);\n    }\n  }","id":55208,"modified_method":"private static void addAllPointersUnder(@NotNull FilePointerPartNode node, @NotNull List<FilePointerPartNode> out) {\n    if (node.leaves != null) {\n      out.add(node);\n    }\n    for (FilePointerPartNode child : node.children) {\n      addAllPointersUnder(child, out);\n    }\n  }","commit_id":"098cee3bd7b9b97600e253f60a979deff2190ccf","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"int position(@Nullable VirtualFile parent,\n               @Nullable CharSequence parentName,\n               boolean separator,\n               @NotNull CharSequence childName,\n               @NotNull FilePointerPartNode[] outNode) {\n    checkConsistency();\n\n    int partStart;\n    if (parent == null) {\n      partStart = 0;\n      outNode[0] = this;\n    }\n    else {\n      VirtualFile gParent = parent.getParent();\n      CharSequence gParentName = gParent == null ? null : gParent.getNameSequence();\n      partStart = position(gParent, gParentName, gParentName != null && !StringUtil.equals(gParentName, \"/\"), parentName, outNode);\n      if (partStart == -1) return -1;\n    }\n\n    boolean childSeparator = false;\n    if (separator) {\n      if (partStart == outNode[0].part.length()) {\n        childSeparator = true;\n      }\n      else {\n        int sepIndex = indexOfFirstDifferentChar(\"/\", 0, outNode[0].part, partStart);\n        if (sepIndex != 1) return -1;\n        partStart++;\n      }\n    }\n    int index = indexOfFirstDifferentChar(childName, 0, outNode[0].part, partStart);\n\n    if (index == childName.length()) {\n      return partStart+index;\n    }\n\n    if (partStart + index == outNode[0].part.length()) {\n      // go to children\n      for (FilePointerPartNode child : outNode[0].children) {\n        int childPos = child.position(null, null, childSeparator, childName.subSequence(index, childName.length()), outNode);\n        if (childPos != -1) return childPos;\n      }\n    }\n    // else there is no match\n    return -1;\n  }","id":55209,"modified_method":"private int position(@Nullable VirtualFile parent,\n                       @Nullable CharSequence parentName,\n                       boolean separator,\n                       @NotNull CharSequence childName,\n                       @NotNull FilePointerPartNode[] outNode) {\n    checkConsistency();\n\n    int partStart;\n    if (parent == null) {\n      partStart = 0;\n      outNode[0] = this;\n    }\n    else {\n      VirtualFile gParent = parent.getParent();\n      CharSequence gParentName = gParent == null ? null : gParent.getNameSequence();\n      partStart = position(gParent, gParentName, gParentName != null && !StringUtil.equals(gParentName, \"/\"), parentName, outNode);\n      if (partStart == -1) return -1;\n    }\n\n    boolean childSeparator = false;\n    if (separator) {\n      if (partStart == outNode[0].part.length()) {\n        childSeparator = true;\n      }\n      else {\n        int sepIndex = indexOfFirstDifferentChar(\"/\", 0, outNode[0].part, partStart);\n        if (sepIndex != 1) return -1;\n        partStart++;\n      }\n    }\n    int index = indexOfFirstDifferentChar(childName, 0, outNode[0].part, partStart);\n\n    if (index == childName.length()) {\n      return partStart+index;\n    }\n\n    if (partStart + index == outNode[0].part.length()) {\n      // go to children\n      for (FilePointerPartNode child : outNode[0].children) {\n        int childPos = child.position(null, null, childSeparator, childName.subSequence(index, childName.length()), outNode);\n        if (childPos != -1) return childPos;\n      }\n    }\n    // else there is no match\n    return -1;\n  }","commit_id":"098cee3bd7b9b97600e253f60a979deff2190ccf","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"void getPointersUnder(@Nullable VirtualFile parent,\n                        boolean separator,\n                        @NotNull CharSequence childName,\n                        @NotNull List<FilePointerPartNode> out) {\n    FilePointerPartNode[] outNode = new FilePointerPartNode[1];\n    CharSequence parentName = parent == null ? null : parent.getNameSequence();\n    int position = position(parent, parentName, separator, childName, outNode);\n    if (position != -1) {\n      FilePointerPartNode node = outNode[0];\n      addAllPointersUnder(node, out);\n    }\n  }","id":55210,"modified_method":"void addPointersUnder(@Nullable VirtualFile parent,\n                        boolean separator,\n                        @NotNull CharSequence childName,\n                        @NotNull List<FilePointerPartNode> out) {\n    FilePointerPartNode[] outNode = new FilePointerPartNode[1];\n    CharSequence parentName = parent == null ? null : parent.getNameSequence();\n    int position = position(parent, parentName, separator, childName, outNode);\n    if (position != -1) {\n      FilePointerPartNode node = outNode[0];\n      addAllPointersUnder(node, out);\n    }\n  }","commit_id":"098cee3bd7b9b97600e253f60a979deff2190ccf","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"void associate(VirtualFilePointerImpl pointer, Pair<VirtualFile, String> fileAndUrl) {\n    if (pointer != null) {\n      pointer.myNode = this;\n    }\n    leaf = pointer;\n    myFileAndUrl = fileAndUrl;\n    myLastUpdated = -1;\n  }","id":55211,"modified_method":"void associate(Object leaves, Pair<VirtualFile, String> fileAndUrl) {\n    if (leaves != null) {\n      if (leaves instanceof VirtualFilePointerImpl) {\n        ((VirtualFilePointerImpl)leaves).myNode = this;\n      }\n      else {\n        for (VirtualFilePointerImpl pointer : (VirtualFilePointerImpl[])leaves) {\n          pointer.myNode = this;\n        }\n      }\n    }\n    this.leaves = leaves;\n    myFileAndUrl = fileAndUrl;\n    myLastUpdated = -1;\n  }","commit_id":"098cee3bd7b9b97600e253f60a979deff2190ccf","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"boolean remove() {\n    assert leaf != null : toString();\n    associate(null, null);\n    useCount = 0;\n    myLastUpdated = -1;\n    FilePointerPartNode node;\n    for (node = this; node.parent != null; node = node.parent) {\n      node.pointersUnder--;\n    }\n    if (--node.pointersUnder == 0) {\n      node.children = EMPTY_ARRAY; // clear root node, especially in tests\n      return true;\n    }\n    return false;\n  }","id":55212,"modified_method":"@NotNull\n  FilePointerPartNode remove() {\n    int pointersNumber = leavesNumber();\n    assert leaves != null : toString();\n    associate(null, null);\n    useCount = 0;\n    myLastUpdated = -1;\n    FilePointerPartNode node;\n    for (node = this; node.parent != null; node = node.parent) {\n      node.pointersUnder-=pointersNumber;\n    }\n    if ((node.pointersUnder-=pointersNumber) == 0) {\n      node.children = EMPTY_ARRAY; // clear root node, especially in tests\n    }\n    return node;\n  }","commit_id":"098cee3bd7b9b97600e253f60a979deff2190ccf","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@NotNull\n  FilePointerPartNode findPointerOrCreate(@NotNull String path, int start, @NotNull Pair<VirtualFile, String> fileAndUrl) {\n    // invariant: upper nodes are matched\n    int index = indexOfFirstDifferentChar(path, start);\n    if (index == path.length() // query matched entirely\n      && index - start == part.length()\n      )  {\n      if (leaf == null) pointersUnder++;\n      return this;\n    }\n    if (index - start == part.length() // part matched entirely, check children\n      ) {\n      for (FilePointerPartNode child : children) {\n        // find the right child (its part should start with ours)\n        int i = child.indexOfFirstDifferentChar(path, index);\n        if (i != index && (i > index+1 || path.charAt(index) != '/' || index == 0)) {\n          FilePointerPartNode node = child.findPointerOrCreate(path, index, fileAndUrl);\n          if (node.leaf == null) pointersUnder++; // the new node's been created\n          return node;\n        }\n      }\n      // cannot insert to children, create child node manually\n      String pathRest = path.substring(index);\n      FilePointerPartNode newNode = new FilePointerPartNode(pathRest, this, fileAndUrl);\n      children = ArrayUtil.append(children, newNode);\n      pointersUnder++;\n      return newNode;\n    }\n    // else there is no match\n    // split\n    // try to make \"/\" start the splitted part\n    if (index > start + 1 && index != path.length() && path.charAt(index - 1) == '/') index--;\n    String pathRest = path.substring(index);\n    FilePointerPartNode newNode = pathRest.isEmpty() ? this : new FilePointerPartNode(pathRest, this, fileAndUrl);\n    String commonPredecessor = StringUtil.first(part, index - start, false);\n    FilePointerPartNode splittedAway = new FilePointerPartNode(part.substring(index - start), this, myFileAndUrl);\n    splittedAway.children = children;\n    for (FilePointerPartNode child : children) {\n      child.parent = splittedAway;\n    }\n    splittedAway.pointersUnder = pointersUnder;\n    splittedAway.useCount = useCount;\n    splittedAway.associate(leaf, myFileAndUrl);\n    associate(null, null);\n    useCount = 0;\n    part = commonPredecessor;\n    children = newNode == this ? new FilePointerPartNode[]{splittedAway} : new FilePointerPartNode[]{splittedAway, newNode};\n    pointersUnder++;\n    return newNode;\n  }","id":55213,"modified_method":"@NotNull\n  FilePointerPartNode findPointerOrCreate(@NotNull String path,\n                                          int start,\n                                          @NotNull Pair<VirtualFile, String> fileAndUrl,\n                                          int pointersToStore) {\n    // invariant: upper nodes are matched\n    int index = indexOfFirstDifferentChar(path, start);\n    if (index == path.length() // query matched entirely\n      && index - start == part.length()) {\n      if (leaves == null) {\n        pointersUnder+=pointersToStore; // the pointer is going to be written here\n      }\n      return this;\n    }\n    if (index - start == part.length() // part matched entirely, check children\n      ) {\n      for (FilePointerPartNode child : children) {\n        // find the right child (its part should start with ours)\n        int i = child.indexOfFirstDifferentChar(path, index);\n        if (i != index && (i > index+1 || path.charAt(index) != '/' || index == 0)) {\n          FilePointerPartNode node = child.findPointerOrCreate(path, index, fileAndUrl, pointersToStore);\n          if (node.leaves == null) {\n            pointersUnder+=pointersToStore; // the new node's been created\n          }\n          return node;\n        }\n      }\n      // cannot insert to children, create child node manually\n      String pathRest = path.substring(index);\n      FilePointerPartNode newNode = new FilePointerPartNode(pathRest, this, fileAndUrl);\n      newNode.pointersUnder+=pointersToStore;\n      children = ArrayUtil.append(children, newNode);\n      pointersUnder+=pointersToStore;\n      return newNode;\n    }\n    // else there is no match\n    // split\n    // try to make \"/\" start the splitted part\n    if (index > start + 1 && index != path.length() && path.charAt(index - 1) == '/') index--;\n    String pathRest = path.substring(index);\n    FilePointerPartNode newNode = pathRest.isEmpty() ? this : new FilePointerPartNode(pathRest, this, fileAndUrl);\n    if (newNode != this) {\n      newNode.pointersUnder = pointersToStore;\n    }\n    String commonPredecessor = StringUtil.first(part, index - start, false);\n    FilePointerPartNode splittedAway = new FilePointerPartNode(part.substring(index - start), this, myFileAndUrl);\n    splittedAway.children = children;\n    for (FilePointerPartNode child : children) {\n      child.parent = splittedAway;\n    }\n    splittedAway.pointersUnder = pointersUnder;\n    splittedAway.useCount = useCount;\n    splittedAway.associate(leaves, myFileAndUrl);\n    associate(null, null);\n    useCount = 0;\n    part = commonPredecessor;\n    children = newNode == this ? new FilePointerPartNode[]{splittedAway} : new FilePointerPartNode[]{splittedAway, newNode};\n    pointersUnder+=pointersToStore;\n    return newNode;\n  }","commit_id":"098cee3bd7b9b97600e253f60a979deff2190ccf","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private void doCheckConsistency() {\n    int childSum = 0;\n    for (FilePointerPartNode child : children) {\n      childSum += child.pointersUnder;\n      child.doCheckConsistency();\n      assert child.parent == this;\n    }\n    if (leaf != null) childSum++;\n    assert (useCount == 0) == (leaf == null) : useCount + \" - \" +leaf;\n    assert pointersUnder == childSum : \"expected: \"+pointersUnder+\"; actual: \"+childSum;\n  }","id":55214,"modified_method":"private void doCheckConsistency() {\n    int childSum = 0;\n    for (FilePointerPartNode child : children) {\n      childSum += child.pointersUnder;\n      child.doCheckConsistency();\n      assert child.parent == this;\n    }\n    childSum += leavesNumber();\n    assert (useCount == 0) == (leaves == null) : useCount + \" - \" + (leaves instanceof VirtualFilePointerImpl ? leaves : Arrays.toString((VirtualFilePointerImpl[])leaves));\n    assert pointersUnder == childSum : \"expected: \"+pointersUnder+\"; actual: \"+childSum;\n  }","commit_id":"098cee3bd7b9b97600e253f60a979deff2190ccf","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"int getPointersUnder() {\n    return pointersUnder;\n  }","id":55215,"modified_method":"int numberOfPointersUnder() {\n    return pointersUnder;\n  }","commit_id":"098cee3bd7b9b97600e253f60a979deff2190ccf","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@TestOnly\n  int numberOfPointers() {\n    int number = 0;\n    for (FilePointerPartNode root : myPointers.values()) {\n      number = root.getPointersUnder();\n    }\n    return number;\n  }","id":55216,"modified_method":"@TestOnly\n  int numberOfPointers() {\n    int number = 0;\n    for (FilePointerPartNode root : myPointers.values()) {\n      number = root.numberOfPointersUnder();\n    }\n    return number;\n  }","commit_id":"098cee3bd7b9b97600e253f60a979deff2190ccf","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@NotNull\n  private static VirtualFilePointer[] toPointers(@NotNull List<FilePointerPartNode> pointers) {\n    if (pointers.isEmpty()) return VirtualFilePointer.EMPTY_ARRAY;\n    List<VirtualFilePointer> list = ContainerUtil\n      .mapNotNull(pointers, new Function<FilePointerPartNode, VirtualFilePointer>() {\n        @Override\n        public VirtualFilePointer fun(FilePointerPartNode pair) {\n          return pair.leaf;\n        }\n      });\n\n    return list.toArray(new VirtualFilePointer[list.size()]);\n  }","id":55217,"modified_method":"@NotNull\n  private static VirtualFilePointer[] toPointers(@NotNull List<FilePointerPartNode> nodes) {\n    if (nodes.isEmpty()) return VirtualFilePointer.EMPTY_ARRAY;\n    List<VirtualFilePointer> list = new ArrayList<VirtualFilePointer>(nodes.size());\n    for (FilePointerPartNode node : nodes) {\n      node.addAllPointersTo(list);\n    }\n    return list.toArray(new VirtualFilePointer[list.size()]);\n  }","commit_id":"098cee3bd7b9b97600e253f60a979deff2190ccf","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private void addAllPointers(@NotNull Collection<VirtualFilePointerImpl> pointers) {\n    List<FilePointerPartNode> out = new ArrayList<FilePointerPartNode>();\n    for (FilePointerPartNode root : myPointers.values()) {\n      root.getPointersUnder(null, false, \"\", out);\n    }\n    for (FilePointerPartNode node : out) {\n      pointers.add(node.leaf);\n    }\n  }","id":55218,"modified_method":"@TestOnly\n  private void addAllPointersTo(@NotNull Collection<VirtualFilePointerImpl> pointers) {\n    List<FilePointerPartNode> out = new ArrayList<FilePointerPartNode>();\n    for (FilePointerPartNode root : myPointers.values()) {\n      root.addPointersUnder(null, false, \"\", out);\n    }\n    for (FilePointerPartNode node : out) {\n      node.addAllPointersTo(pointers);\n    }\n  }","commit_id":"098cee3bd7b9b97600e253f60a979deff2190ccf","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Override\n  public void before(@NotNull final List<? extends VFileEvent> events) {\n    List<FilePointerPartNode> toFireEvents = new ArrayList<FilePointerPartNode>();\n    List<FilePointerPartNode> toUpdateUrl = new ArrayList<FilePointerPartNode>();\n    VirtualFilePointer[] toFirePointers;\n\n    synchronized (this) {\n      incModificationCount();\n      for (VFileEvent event : events) {\n        if (event instanceof VFileDeleteEvent) {\n          final VFileDeleteEvent deleteEvent = (VFileDeleteEvent)event;\n          addPointersUnder(deleteEvent.getFile(), false, \"\", toFireEvents);\n\n        }\n        else if (event instanceof VFileCreateEvent) {\n          final VFileCreateEvent createEvent = (VFileCreateEvent)event;\n          addPointersUnder(createEvent.getParent(), true, createEvent.getChildName(), toFireEvents);\n        }\n        else if (event instanceof VFileCopyEvent) {\n          final VFileCopyEvent copyEvent = (VFileCopyEvent)event;\n          addPointersUnder(copyEvent.getNewParent(), true, copyEvent.getFile().getName(), toFireEvents);\n        }\n        else if (event instanceof VFileMoveEvent) {\n          final VFileMoveEvent moveEvent = (VFileMoveEvent)event;\n          VirtualFile eventFile = moveEvent.getFile();\n          addPointersUnder(moveEvent.getNewParent(), true, eventFile.getName(), toFireEvents);\n\n          List<FilePointerPartNode> nodes = new ArrayList<FilePointerPartNode>();\n          addPointersUnder(eventFile, false, \"\", nodes);\n          for (FilePointerPartNode pair : nodes) {\n            VirtualFile file = pair.leaf.getFile();\n            if (file != null) {\n              toUpdateUrl.add(pair);\n            }\n          }\n        }\n        else if (event instanceof VFilePropertyChangeEvent) {\n          final VFilePropertyChangeEvent change = (VFilePropertyChangeEvent)event;\n          if (VirtualFile.PROP_NAME.equals(change.getPropertyName())) {\n            VirtualFile eventFile = change.getFile();\n            VirtualFile parent = eventFile.getParent(); // e.g. for LightVirtualFiles\n            addPointersUnder(parent, true, change.getNewValue().toString(), toFireEvents);\n\n            List<FilePointerPartNode> nodes = new ArrayList<FilePointerPartNode>();\n            addPointersUnder(eventFile, false, \"\", nodes);\n            for (FilePointerPartNode pair : nodes) {\n              VirtualFile file = pair.leaf.getFile();\n              if (file != null) {\n                toUpdateUrl.add(pair);\n              }\n            }\n          }\n        }\n      }\n\n      myEvents = new ArrayList<EventDescriptor>();\n      toFirePointers = toPointers(toFireEvents);\n      for (final VirtualFilePointerListener listener : myPointers.keySet()) {\n        if (listener == null) continue;\n        List<VirtualFilePointer> filtered = ContainerUtil.filter(toFirePointers, new Condition<VirtualFilePointer>() {\n          @Override\n          public boolean value(VirtualFilePointer pointer) {\n            return ((VirtualFilePointerImpl)pointer).getListener() == listener;\n          }\n        });\n        if (!filtered.isEmpty()) {\n          EventDescriptor event = new EventDescriptor(listener, filtered.toArray(new VirtualFilePointer[filtered.size()]));\n          myEvents.add(event);\n        }\n      }\n    }\n\n    for (EventDescriptor descriptor : myEvents) {\n      descriptor.fireBefore();\n    }\n\n    if (!toFireEvents.isEmpty()) {\n      myBus.syncPublisher(VirtualFilePointerListener.TOPIC).beforeValidityChanged(toFirePointers);\n    }\n\n    myPointersToFire = toFireEvents;\n    myPointersToUpdateUrl = toUpdateUrl;\n  }","id":55219,"modified_method":"@Override\n  public void before(@NotNull final List<? extends VFileEvent> events) {\n    List<FilePointerPartNode> toFireEvents = new ArrayList<FilePointerPartNode>();\n    List<FilePointerPartNode> toUpdateUrl = new ArrayList<FilePointerPartNode>();\n    VirtualFilePointer[] toFirePointers;\n\n    synchronized (this) {\n      incModificationCount();\n      for (VFileEvent event : events) {\n        if (event instanceof VFileDeleteEvent) {\n          final VFileDeleteEvent deleteEvent = (VFileDeleteEvent)event;\n          addPointersUnder(deleteEvent.getFile(), false, \"\", toFireEvents);\n\n        }\n        else if (event instanceof VFileCreateEvent) {\n          final VFileCreateEvent createEvent = (VFileCreateEvent)event;\n          addPointersUnder(createEvent.getParent(), true, createEvent.getChildName(), toFireEvents);\n        }\n        else if (event instanceof VFileCopyEvent) {\n          final VFileCopyEvent copyEvent = (VFileCopyEvent)event;\n          addPointersUnder(copyEvent.getNewParent(), true, copyEvent.getFile().getName(), toFireEvents);\n        }\n        else if (event instanceof VFileMoveEvent) {\n          final VFileMoveEvent moveEvent = (VFileMoveEvent)event;\n          VirtualFile eventFile = moveEvent.getFile();\n          addPointersUnder(moveEvent.getNewParent(), true, eventFile.getName(), toFireEvents);\n\n          List<FilePointerPartNode> nodes = new ArrayList<FilePointerPartNode>();\n          addPointersUnder(eventFile, false, \"\", nodes);\n          for (FilePointerPartNode node : nodes) {\n            VirtualFilePointerImpl pointer = node.getAnyPointer();\n            VirtualFile file = pointer == null ? null : pointer.getFile();\n            if (file != null) {\n              toUpdateUrl.add(node);\n            }\n          }\n        }\n        else if (event instanceof VFilePropertyChangeEvent) {\n          final VFilePropertyChangeEvent change = (VFilePropertyChangeEvent)event;\n          if (VirtualFile.PROP_NAME.equals(change.getPropertyName())) {\n            VirtualFile eventFile = change.getFile();\n            VirtualFile parent = eventFile.getParent(); // e.g. for LightVirtualFiles\n            addPointersUnder(parent, true, change.getNewValue().toString(), toFireEvents);\n\n            List<FilePointerPartNode> nodes = new ArrayList<FilePointerPartNode>();\n            addPointersUnder(eventFile, false, \"\", nodes);\n            for (FilePointerPartNode node : nodes) {\n              VirtualFilePointerImpl pointer = node.getAnyPointer();\n              VirtualFile file = pointer == null ? null : pointer.getFile();\n              if (file != null) {\n                toUpdateUrl.add(node);\n              }\n            }\n          }\n        }\n      }\n\n      myEvents = new ArrayList<EventDescriptor>();\n      toFirePointers = toPointers(toFireEvents);\n      for (final VirtualFilePointerListener listener : myPointers.keySet()) {\n        if (listener == null) continue;\n        List<VirtualFilePointer> filtered = ContainerUtil.filter(toFirePointers, new Condition<VirtualFilePointer>() {\n          @Override\n          public boolean value(VirtualFilePointer pointer) {\n            return ((VirtualFilePointerImpl)pointer).getListener() == listener;\n          }\n        });\n        if (!filtered.isEmpty()) {\n          EventDescriptor event = new EventDescriptor(listener, filtered.toArray(new VirtualFilePointer[filtered.size()]));\n          myEvents.add(event);\n        }\n      }\n    }\n\n    for (EventDescriptor descriptor : myEvents) {\n      descriptor.fireBefore();\n    }\n\n    if (!toFireEvents.isEmpty()) {\n      myBus.syncPublisher(VirtualFilePointerListener.TOPIC).beforeValidityChanged(toFirePointers);\n    }\n\n    myNodesToFire = toFireEvents;\n    myNodesToUpdateUrl = toUpdateUrl;\n  }","commit_id":"098cee3bd7b9b97600e253f60a979deff2190ccf","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@TestOnly\n  public VirtualFilePointer[] getPointersUnder(VirtualFile parent, String childName) {\n    List<FilePointerPartNode> nodes = new ArrayList<FilePointerPartNode>();\n    addPointersUnder(parent, true, childName, nodes);\n    return toPointers(nodes);\n  }","id":55220,"modified_method":"@TestOnly\n  VirtualFilePointer[] getPointersUnder(VirtualFile parent, String childName) {\n    List<FilePointerPartNode> nodes = new ArrayList<FilePointerPartNode>();\n    addPointersUnder(parent, true, childName, nodes);\n    return toPointers(nodes);\n  }","commit_id":"098cee3bd7b9b97600e253f60a979deff2190ccf","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@NotNull\n  private VirtualFilePointerImpl getOrCreate(@NotNull Disposable parentDisposable,\n                                             @Nullable VirtualFilePointerListener listener,\n                                             @NotNull String path,\n                                             @NotNull Pair<VirtualFile, String> fileAndUrl) {\n    FilePointerPartNode root = myPointers.get(listener);\n    FilePointerPartNode node;\n    if (root == null) {\n      root = new FilePointerPartNode(path, null, fileAndUrl);\n      myPointers.put(listener, root);\n      node = root;\n    }\n    else {\n      node = root.findPointerOrCreate(path, 0, fileAndUrl);\n    }\n\n    VirtualFilePointerImpl pointer;\n    if (node.leaf == null) {\n      pointer = new VirtualFilePointerImpl(listener, parentDisposable, fileAndUrl);\n      node.associate(pointer, fileAndUrl);\n    }\n    else {\n      pointer = node.leaf;\n    }\n    pointer.myNode.incrementUsageCount(1);\n\n    root.checkConsistency();\n    return pointer;\n  }","id":55221,"modified_method":"@NotNull\n  private VirtualFilePointerImpl getOrCreate(@NotNull Disposable parentDisposable,\n                                             @Nullable VirtualFilePointerListener listener,\n                                             @NotNull String path,\n                                             @NotNull Pair<VirtualFile, String> fileAndUrl) {\n    FilePointerPartNode root = myPointers.get(listener);\n    FilePointerPartNode node;\n    if (root == null) {\n      root = new FilePointerPartNode(path, null, fileAndUrl);\n      root.pointersUnder++;\n      myPointers.put(listener, root);\n      node = root;\n    }\n    else {\n      node = root.findPointerOrCreate(path, 0, fileAndUrl, 1);\n    }\n\n    VirtualFilePointerImpl pointer = node.getAnyPointer();\n    if (pointer == null) {\n      pointer = new VirtualFilePointerImpl(listener, parentDisposable, fileAndUrl);\n      node.associate(pointer, fileAndUrl);\n    }\n    pointer.myNode.incrementUsageCount(1);\n\n    root.checkConsistency();\n    return pointer;\n  }","commit_id":"098cee3bd7b9b97600e253f60a979deff2190ccf","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"void removeNode(@NotNull FilePointerPartNode node, VirtualFilePointerListener listener) {\n    boolean rootNodeEmpty = node.remove();\n    if (rootNodeEmpty) {\n      myPointers.remove(listener);\n    }\n    else {\n      myPointers.get(listener).checkConsistency();\n    }\n  }","id":55222,"modified_method":"void removeNode(@NotNull FilePointerPartNode node, VirtualFilePointerListener listener) {\n    FilePointerPartNode root = node.remove();\n    boolean rootNodeEmpty = root.children.length == 0 ;\n    if (rootNodeEmpty) {\n      myPointers.remove(listener);\n    }\n    else {\n      myPointers.get(listener).checkConsistency();\n    }\n  }","commit_id":"098cee3bd7b9b97600e253f60a979deff2190ccf","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private void addPointersUnder(VirtualFile parent,\n                                boolean separator,\n                                @NotNull CharSequence childName,\n                                @NotNull List<FilePointerPartNode> out) {\n    for (FilePointerPartNode root : myPointers.values()) {\n      root.getPointersUnder(parent, separator, childName, out);\n    }\n  }","id":55223,"modified_method":"private void addPointersUnder(VirtualFile parent,\n                                boolean separator,\n                                @NotNull CharSequence childName,\n                                @NotNull List<FilePointerPartNode> out) {\n    for (FilePointerPartNode root : myPointers.values()) {\n      root.addPointersUnder(parent, separator, childName, out);\n    }\n  }","commit_id":"098cee3bd7b9b97600e253f60a979deff2190ccf","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"static void registerDisposable(@NotNull Disposable parentDisposable, @NotNull VirtualFilePointerImpl pointer) {\n      DelegatingDisposable result = ourInstances.get(parentDisposable);\n      if (result == null) {\n        DelegatingDisposable newDisposable = new DelegatingDisposable(parentDisposable);\n        result = ConcurrencyUtil.cacheOrGet(ourInstances, parentDisposable, newDisposable);\n        if (result == newDisposable) {\n          Disposer.register(parentDisposable, result);\n        }\n      }\n\n      synchronized (result) {\n        result.myCounts.put(pointer, result.myCounts.get(pointer) + 1);\n      }\n    }","id":55224,"modified_method":"private static void registerDisposable(@NotNull Disposable parentDisposable, @NotNull VirtualFilePointerImpl pointer) {\n      DelegatingDisposable result = ourInstances.get(parentDisposable);\n      if (result == null) {\n        DelegatingDisposable newDisposable = new DelegatingDisposable(parentDisposable);\n        result = ConcurrencyUtil.cacheOrGet(ourInstances, parentDisposable, newDisposable);\n        if (result == newDisposable) {\n          Disposer.register(parentDisposable, result);\n        }\n      }\n\n      synchronized (result) {\n        result.myCounts.put(pointer, result.myCounts.get(pointer) + 1);\n      }\n    }","commit_id":"098cee3bd7b9b97600e253f60a979deff2190ccf","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@TestOnly\n  public void assertPointersAreDisposed() {\n    List<VirtualFilePointerImpl> pointers = new ArrayList<VirtualFilePointerImpl>();\n    addAllPointers(pointers);\n    try {\n      for (VirtualFilePointerImpl pointer : pointers) {\n        if (!myStoredPointers.contains(pointer)) {\n          pointer.throwDisposalError(\"Virtual pointer hasn't been disposed: \"+pointer);\n        }\n      }\n    }\n    finally {\n      myStoredPointers.clear();\n    }\n  }","id":55225,"modified_method":"@TestOnly\n  public void assertPointersAreDisposed() {\n    List<VirtualFilePointerImpl> pointers = new ArrayList<VirtualFilePointerImpl>();\n    addAllPointersTo(pointers);\n    try {\n      for (VirtualFilePointerImpl pointer : pointers) {\n        if (!myStoredPointers.contains(pointer)) {\n          pointer.throwDisposalError(\"Virtual pointer hasn't been disposed: \"+pointer);\n        }\n      }\n    }\n    finally {\n      myStoredPointers.clear();\n    }\n  }","commit_id":"098cee3bd7b9b97600e253f60a979deff2190ccf","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Override\n  public void after(@NotNull final List<? extends VFileEvent> events) {\n    incModificationCount();\n\n    for (FilePointerPartNode node : myPointersToUpdateUrl) {\n      synchronized (this) {\n        VirtualFilePointerImpl pointer = node.leaf;\n        String urlBefore = pointer.getUrlNoUpdate();\n        Pair<VirtualFile,String> after = node.update();\n        String urlAfter = after.second;\n        if (URL_COMPARATOR.compare(urlBefore, urlAfter) != 0) {\n          // url has changed, reinsert\n          FilePointerPartNode root = myPointers.get(pointer.getListener());\n          int useCount = node.useCount;\n          node.remove();\n          FilePointerPartNode newNode = root.findPointerOrCreate(VfsUtilCore.urlToPath(urlAfter), 0, after);\n          VirtualFilePointerImpl existingPointer = newNode.leaf;\n          if (existingPointer != null) {\n            // can happen when e.g. file renamed to the existing file\n            // merge two pointers\n            pointer.myNode = newNode;\n          }\n          else {\n            newNode.associate(pointer, after);\n          }\n          newNode.incrementUsageCount(useCount);\n        }\n      }\n    }\n\n    VirtualFilePointer[] pointersToFireArray = toPointers(myPointersToFire);\n    for (VirtualFilePointer pointer : pointersToFireArray) {\n      ((VirtualFilePointerImpl)pointer).myNode.update();\n    }\n\n    for (EventDescriptor event : myEvents) {\n      event.fireAfter();\n    }\n\n    if (pointersToFireArray.length != 0) {\n      myBus.syncPublisher(VirtualFilePointerListener.TOPIC).validityChanged(pointersToFireArray);\n    }\n\n    myPointersToUpdateUrl = Collections.emptyList();\n    myEvents = Collections.emptyList();\n    myPointersToFire = Collections.emptyList();\n    for (FilePointerPartNode root : myPointers.values()) {\n      root.checkConsistency();\n    }\n  }","id":55226,"modified_method":"@Override\n  public void after(@NotNull final List<? extends VFileEvent> events) {\n    incModificationCount();\n\n    for (FilePointerPartNode node : myNodesToUpdateUrl) {\n      synchronized (this) {\n        String urlBefore = node.myFileAndUrl.second;\n        Pair<VirtualFile,String> after = node.update();\n        String urlAfter = after.second;\n        if (URL_COMPARATOR.compare(urlBefore, urlAfter) != 0) {\n          List<VirtualFilePointerImpl> myPointers = new SmartList<VirtualFilePointerImpl>();\n          node.addAllPointersTo(myPointers);\n\n          // url has changed, reinsert\n          int useCount = node.useCount;\n          FilePointerPartNode root = node.remove();\n          FilePointerPartNode newNode = root.findPointerOrCreate(VfsUtilCore.urlToPath(urlAfter), 0, after, myPointers.size());\n          VirtualFilePointer existingPointer = newNode.getAnyPointer();\n          if (existingPointer != null) {\n            // can happen when e.g. file renamed to the existing file\n            // merge two pointers\n            for (FilePointerPartNode n = newNode; n != null; n = n.parent) {\n              n.pointersUnder += myPointers.size();\n            }\n          }\n          newNode.addAllPointersTo(myPointers);\n          VirtualFilePointerImpl[] newMyPointers = myPointers.toArray(new VirtualFilePointerImpl[myPointers.size()]);\n          newNode.associate(newMyPointers, after);\n          newNode.incrementUsageCount(useCount);\n        }\n      }\n    }\n\n    VirtualFilePointer[] pointersToFireArray = toPointers(myNodesToFire);\n    for (VirtualFilePointer pointer : pointersToFireArray) {\n      ((VirtualFilePointerImpl)pointer).myNode.update();\n    }\n\n    for (EventDescriptor event : myEvents) {\n      event.fireAfter();\n    }\n\n    if (pointersToFireArray.length != 0) {\n      myBus.syncPublisher(VirtualFilePointerListener.TOPIC).validityChanged(pointersToFireArray);\n    }\n\n    myNodesToUpdateUrl = Collections.emptyList();\n    myEvents = Collections.emptyList();\n    myNodesToFire = Collections.emptyList();\n    for (FilePointerPartNode root : myPointers.values()) {\n      root.checkConsistency();\n    }\n  }","commit_id":"098cee3bd7b9b97600e253f60a979deff2190ccf","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@TestOnly\n  public void storePointers() {\n    myStoredPointers.clear();\n    addAllPointers(myStoredPointers);\n  }","id":55227,"modified_method":"@TestOnly\n  public void storePointers() {\n    myStoredPointers.clear();\n    addAllPointersTo(myStoredPointers);\n  }","commit_id":"098cee3bd7b9b97600e253f60a979deff2190ccf","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private synchronized void assertAllPointersDisposed() {\n    for (Map.Entry<VirtualFilePointerListener, FilePointerPartNode> entry : myPointers.entrySet()) {\n      FilePointerPartNode root = entry.getValue();\n      ArrayList<FilePointerPartNode> left = new ArrayList<FilePointerPartNode>();\n      root.getPointersUnder(null, false, \"\", left);\n      if (!left.isEmpty()) {\n        VirtualFilePointerImpl p = left.get(0).leaf;\n        try {\n          p.throwDisposalError(\"Not disposed pointer: \"+p);\n        }\n        finally {\n          for (FilePointerPartNode pair : left) {\n            VirtualFilePointerImpl pointer = pair.leaf;\n            pointer.dispose();\n          }\n        }\n      }\n    }\n\n    synchronized (myContainers) {\n      if (!myContainers.isEmpty()) {\n        VirtualFilePointerContainerImpl container = myContainers.iterator().next();\n        container.throwDisposalError(\"Not disposed container\");\n      }\n    }\n  }","id":55228,"modified_method":"private synchronized void assertAllPointersDisposed() {\n    for (Map.Entry<VirtualFilePointerListener, FilePointerPartNode> entry : myPointers.entrySet()) {\n      FilePointerPartNode root = entry.getValue();\n      List<FilePointerPartNode> left = new ArrayList<FilePointerPartNode>();\n      List<VirtualFilePointerImpl> pointers = new ArrayList<VirtualFilePointerImpl>();\n      root.addPointersUnder(null, false, \"\", left);\n      for (FilePointerPartNode node : left) {\n        node.addAllPointersTo(pointers);\n      }\n      if (!pointers.isEmpty()) {\n        VirtualFilePointerImpl p = pointers.get(0);\n        try {\n          p.throwDisposalError(\"Not disposed pointer: \"+p);\n        }\n        finally {\n          for (VirtualFilePointerImpl pointer : pointers) {\n            pointer.dispose();\n          }\n        }\n      }\n    }\n\n    synchronized (myContainers) {\n      if (!myContainers.isEmpty()) {\n        VirtualFilePointerContainerImpl container = myContainers.iterator().next();\n        container.throwDisposalError(\"Not disposed container\");\n      }\n    }\n  }","commit_id":"098cee3bd7b9b97600e253f60a979deff2190ccf","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void testManyPointersUpdatePerformance() throws IOException {\n    LoggingListener listener = new LoggingListener();\n    final List<VFileEvent> events = new ArrayList<VFileEvent>();\n    final File ioTempDir = createTempDirectory();\n    final VirtualFile temp = LocalFileSystem.getInstance().refreshAndFindFileByIoFile(ioTempDir);\n    for (int i=0; i<100000; i++) {\n      myVirtualFilePointerManager.create(VfsUtilCore.pathToUrl(\"/a/b/c/d/\" + i), disposable, listener);\n      events.add(new VFileCreateEvent(this, temp, \"xxx\" + i, false, true));\n    }\n    PlatformTestUtil.startPerformanceTest(\"vfp update\", 10000, new ThrowableRunnable() {\n      @Override\n      public void run() throws Throwable {\n        for (int i=0; i<100; i++) {\n          // simulate VFS refresh events since launching the actual refresh is too slow\n          myVirtualFilePointerManager.before(events);\n          myVirtualFilePointerManager.after(events);\n        }\n      }\n    }).assertTiming();\n  }","id":55229,"modified_method":"public void testManyPointersUpdatePerformance() throws IOException {\n    LoggingListener listener = new LoggingListener();\n    final List<VFileEvent> events = new ArrayList<>();\n    final File ioTempDir = createTempDirectory();\n    final VirtualFile temp = LocalFileSystem.getInstance().refreshAndFindFileByIoFile(ioTempDir);\n    for (int i=0; i<100000; i++) {\n      myVirtualFilePointerManager.create(VfsUtilCore.pathToUrl(\"/a/b/c/d/\" + i), disposable, listener);\n      events.add(new VFileCreateEvent(this, temp, \"xxx\" + i, false, true));\n    }\n    PlatformTestUtil.startPerformanceTest(\"vfp update\", 10000, () -> {\n      for (int i=0; i<100; i++) {\n        // simulate VFS refresh events since launching the actual refresh is too slow\n        myVirtualFilePointerManager.before(events);\n        myVirtualFilePointerManager.after(events);\n      }\n    }).assertTiming();\n  }","commit_id":"098cee3bd7b9b97600e253f60a979deff2190ccf","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void testCreate1() throws Exception {\n    final File tempDirectory = createTempDirectory();\n    final File fileToCreate = new File(tempDirectory, \"toCreate1.txt\");\n    final LoggingListener fileToCreateListener = new LoggingListener();\n    final VirtualFilePointer fileToCreatePointer = createPointerByFile(fileToCreate, fileToCreateListener);\n    assertFalse(fileToCreatePointer.isValid());\n    fileToCreate.createNewFile();\n    final Runnable postRunnable = new Runnable() {\n      @Override\n      public void run() {\n        assertTrue(fileToCreatePointer.isValid());\n        assertEquals(\"[before:false, after:true]\", fileToCreateListener.getLog().toString());\n        try {\n          String expectedUrl = VirtualFileManager.constructUrl(LocalFileSystem.PROTOCOL, fileToCreate.getCanonicalPath().replace(File.separatorChar, '/'));\n          assertEquals(expectedUrl.toUpperCase(), fileToCreatePointer.getUrl().toUpperCase());\n        } catch (IOException e) {\n          fail();\n        }\n      }\n    };\n    ApplicationManager.getApplication().runWriteAction(new Runnable() {\n      @Override\n      public void run() {\n        VirtualFileManager.getInstance().syncRefresh();\n        final VirtualFile virtualFile = getVirtualFile(tempDirectory);\n        virtualFile.refresh(false, true);\n      }\n    });\n    postRunnable.run();\n  }","id":55230,"modified_method":"public void testCreate1() throws Exception {\n    final File tempDirectory = createTempDirectory();\n    final File fileToCreate = new File(tempDirectory, \"toCreate1.txt\");\n    final LoggingListener fileToCreateListener = new LoggingListener();\n    final VirtualFilePointer fileToCreatePointer = createPointerByFile(fileToCreate, fileToCreateListener);\n    assertFalse(fileToCreatePointer.isValid());\n    fileToCreate.createNewFile();\n    final Runnable postRunnable = () -> {\n      assertTrue(fileToCreatePointer.isValid());\n      assertEquals(\"[before:false, after:true]\", fileToCreateListener.getLog().toString());\n      try {\n        String expectedUrl = VirtualFileManager.constructUrl(LocalFileSystem.PROTOCOL, fileToCreate.getCanonicalPath().replace(File.separatorChar, '/'));\n        assertEquals(expectedUrl.toUpperCase(), fileToCreatePointer.getUrl().toUpperCase());\n      } catch (IOException e) {\n        fail();\n      }\n    };\n    ApplicationManager.getApplication().runWriteAction(() -> {\n      VirtualFileManager.getInstance().syncRefresh();\n      final VirtualFile virtualFile = getVirtualFile(tempDirectory);\n      virtualFile.refresh(false, true);\n    });\n    postRunnable.run();\n  }","commit_id":"098cee3bd7b9b97600e253f60a979deff2190ccf","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private static void stressRead(@NotNull final VirtualFilePointer pointer, @NotNull final Collection<Job<Void>> reads) {\n    for (int i = 0; i < 10; i++) {\n      final AtomicReference<Job<Void>> reference = new AtomicReference<Job<Void>>();\n      reference.set(JobLauncher.getInstance().submitToJobThread(new Runnable() {\n        @Override\n        public void run() {\n          ApplicationManager.getApplication().runReadAction(new Runnable() {\n            @Override\n            public void run() {\n              VirtualFile file = pointer.getFile();\n              if (file != null && !file.isValid()) {\n                throw new IncorrectOperationException(\"I've caught it. I am that good\");\n              }\n            }\n          });\n        }\n      }, new Consumer<Future>() {\n        @Override\n        public void consume(Future future) {\n          try {\n            future.get();\n          }\n          catch (Exception e) {\n            throw new RuntimeException(e);\n          }\n          finally {\n            reads.remove(reference.get());\n          }\n        }\n      }));\n      reads.add(reference.get());\n    }\n  }","id":55231,"modified_method":"private static void stressRead(@NotNull final VirtualFilePointer pointer, @NotNull final Collection<Job<Void>> reads) {\n    for (int i = 0; i < 10; i++) {\n      final AtomicReference<Job<Void>> reference = new AtomicReference<>();\n      reference.set(JobLauncher.getInstance().submitToJobThread(() -> ApplicationManager.getApplication().runReadAction(() -> {\n        VirtualFile file = pointer.getFile();\n        if (file != null && !file.isValid()) {\n          throw new IncorrectOperationException(\"I've caught it. I am that good\");\n        }\n      }), future -> {\n        try {\n          future.get();\n        }\n        catch (Exception e) {\n          throw new RuntimeException(e);\n        }\n        finally {\n          reads.remove(reference.get());\n        }\n      }));\n      reads.add(reference.get());\n    }\n  }","commit_id":"098cee3bd7b9b97600e253f60a979deff2190ccf","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void testMultipleCreationOfTheSamePointerPerformance() throws IOException {\n    final LoggingListener listener = new LoggingListener();\n    final String url = VfsUtilCore.pathToUrl(\"/a/b/c/d/e\");\n    final VirtualFilePointer thePointer = myVirtualFilePointerManager.create(url, disposable, listener);\n    TempFileSystem.getInstance();\n    PlatformTestUtil.startPerformanceTest(\"same url vfp create\", 5000, new ThrowableRunnable() {\n      @Override\n      public void run() throws Throwable {\n        for (int i=0; i<10000000; i++) {\n          VirtualFilePointer pointer = myVirtualFilePointerManager.create(url, disposable, listener);\n          assertSame(pointer, thePointer);\n        }\n      }\n    }).assertTiming();\n  }","id":55232,"modified_method":"public void testMultipleCreationOfTheSamePointerPerformance() throws IOException {\n    final LoggingListener listener = new LoggingListener();\n    final String url = VfsUtilCore.pathToUrl(\"/a/b/c/d/e\");\n    final VirtualFilePointer thePointer = myVirtualFilePointerManager.create(url, disposable, listener);\n    TempFileSystem.getInstance();\n    PlatformTestUtil.startPerformanceTest(\"same url vfp create\", 5000, () -> {\n      for (int i=0; i<10000000; i++) {\n        VirtualFilePointer pointer = myVirtualFilePointerManager.create(url, disposable, listener);\n        assertSame(pointer, thePointer);\n      }\n    }).assertTiming();\n  }","commit_id":"098cee3bd7b9b97600e253f60a979deff2190ccf","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void testContainerCreateDeletePerformance() throws Exception {\n    PlatformTestUtil.startPerformanceTest(\"VF container create/delete\",200, new ThrowableRunnable() {\n      @Override\n      public void run() throws Exception {\n        Disposable parent = Disposer.newDisposable();\n        for (int i = 0; i < 10000; i++) {\n          myVirtualFilePointerManager.createContainer(parent);\n        }\n        Disposer.dispose(parent);\n      }\n    }).cpuBound().assertTiming();\n  }","id":55233,"modified_method":"public void testContainerCreateDeletePerformance() throws Exception {\n    PlatformTestUtil.startPerformanceTest(\"VF container create/delete\", 200, () -> {\n      Disposable parent = Disposer.newDisposable();\n      for (int i = 0; i < 10000; i++) {\n        myVirtualFilePointerManager.createContainer(parent);\n      }\n      Disposer.dispose(parent);\n    }).cpuBound().assertTiming();\n  }","commit_id":"098cee3bd7b9b97600e253f60a979deff2190ccf","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void testCidrConfusions() throws IOException {\n    File tempDirectory = createTempDirectory();\n    final VirtualFile root = LocalFileSystem.getInstance().refreshAndFindFileByIoFile(tempDirectory);\n\n    VirtualFile dir1 = createChildDirectory(root, \"dir1\");\n    VirtualFile dir2 = createChildDirectory(root, \"dir2\");\n\n    PsiTestUtil.addSourceRoot(getModule(), dir1);\n    PsiTestUtil.addLibrary(getModule(), \"mylib\", \"\", new String[]{dir2.getPath()}, new String[0]);\n\n    assertSourceIs(dir1);\n    assertLibIs(dir2);\n\n    delete(dir1);\n    assertSourceIs(null); // srcDir deleted, no more sources\n    assertLibIs(dir2);    // libDir stays the same\n\n    rename(dir2, \"dir1\");\n    assertSourceIs(dir2); // srcDir re-appeared, sources are \"dir1\"\n    assertLibIs(dir2);    // libDir renamed, libs are \"dir1\" now\n\n    rename(dir2, \"dir2\");\n    assertSourceIs(dir2); // srcDir renamed, sources are \"dir2\" now\n    assertLibIs(dir2);    // libDir renamed, libs are \"dir2\" now\n\n    dir1 = createChildDirectory(root, \"dir1\");\n    assertSourceIs(dir2); // srcDir stays the same\n    assertLibIs(dir2);    // libDir stays the same\n\n    PsiTestUtil.removeAllRoots(getModule(), getTestProjectJdk());\n  }","id":55234,"modified_method":"public void testCidrConfusions() throws IOException {\n    File tempDirectory = createTempDirectory();\n    final VirtualFile root = LocalFileSystem.getInstance().refreshAndFindFileByIoFile(tempDirectory);\n\n    VirtualFile dir1 = createChildDirectory(root, \"dir1\");\n    VirtualFile dir2 = createChildDirectory(root, \"dir2\");\n\n    PsiTestUtil.addSourceRoot(getModule(), dir1);\n    PsiTestUtil.addLibrary(getModule(), \"mylib\", \"\", new String[]{dir2.getPath()}, ArrayUtil.EMPTY_STRING_ARRAY);\n\n    assertSourceIs(dir1);\n    assertLibIs(dir2);\n\n    delete(dir1);\n    assertSourceIs(null); // srcDir deleted, no more sources\n    assertLibIs(dir2);    // libDir stays the same\n\n    rename(dir2, \"dir1\");\n    assertSourceIs(dir2); // srcDir re-appeared, sources are \"dir1\"\n    assertLibIs(dir2);    // libDir renamed, libs are \"dir1\" now\n\n    rename(dir2, \"dir2\");\n    assertSourceIs(dir2); // srcDir renamed, sources are \"dir2\" now\n    assertLibIs(dir2);    // libDir renamed, libs are \"dir2\" now\n\n    dir1 = createChildDirectory(root, \"dir1\");\n    assertNotNull(dir1);\n    assertSourceIs(dir2); // srcDir stays the same\n    assertLibIs(dir2);    // libDir stays the same\n\n    PsiTestUtil.removeAllRoots(getModule(), getTestProjectJdk());\n  }","commit_id":"098cee3bd7b9b97600e253f60a979deff2190ccf","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void testMovePointedFile() throws Exception {\n    File tempDirectory = createTempDirectory();\n    final File moveTarget = new File(tempDirectory, \"moveTarget\");\n    moveTarget.mkdir();\n    final File fileToMove = new File(tempDirectory, \"toMove.txt\");\n    fileToMove.createNewFile();\n\n    final LoggingListener fileToMoveListener = new LoggingListener();\n    final VirtualFilePointer fileToMovePointer = createPointerByFile(fileToMove, fileToMoveListener);\n    assertTrue(fileToMovePointer.isValid());\n    ApplicationManager.getApplication().runWriteAction(new Runnable() {\n      @Override\n      public void run() {\n        final VirtualFile virtualFile = getVirtualFile(fileToMove);\n        assertTrue(virtualFile.isValid());\n        final VirtualFile target = getVirtualFile(moveTarget);\n        assertTrue(target.isValid());\n        try {\n          virtualFile.move(null, target);\n        }\n        catch (IOException e) {\n          fail();\n        }\n      }\n    });\n    assertTrue(fileToMovePointer.isValid());\n    assertEquals(\"[]\", fileToMoveListener.getLog().toString());\n  }","id":55235,"modified_method":"public void testMovePointedFile() throws Exception {\n    File tempDirectory = createTempDirectory();\n    final File moveTarget = new File(tempDirectory, \"moveTarget\");\n    moveTarget.mkdir();\n    final File fileToMove = new File(tempDirectory, \"toMove.txt\");\n    fileToMove.createNewFile();\n\n    final LoggingListener fileToMoveListener = new LoggingListener();\n    final VirtualFilePointer fileToMovePointer = createPointerByFile(fileToMove, fileToMoveListener);\n    assertTrue(fileToMovePointer.isValid());\n    ApplicationManager.getApplication().runWriteAction(() -> {\n      final VirtualFile virtualFile = getVirtualFile(fileToMove);\n      assertTrue(virtualFile.isValid());\n      final VirtualFile target = getVirtualFile(moveTarget);\n      assertTrue(target.isValid());\n      try {\n        virtualFile.move(null, target);\n      }\n      catch (IOException e) {\n        fail();\n      }\n    });\n    assertTrue(fileToMovePointer.isValid());\n    assertEquals(\"[]\", fileToMoveListener.getLog().toString());\n  }","commit_id":"098cee3bd7b9b97600e253f60a979deff2190ccf","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void testMultipleNotifications() throws Exception {\n    final File tempDir = createTempDirectory();\n    final File file_f1 = new File(tempDir, \"f1\");\n    final File file_f2 = new File(tempDir, \"f2\");\n    final LoggingListener listener = new LoggingListener();\n    final VirtualFilePointer pointer_f1 = createPointerByFile(file_f1, listener);\n    final VirtualFilePointer pointer_f2 = createPointerByFile(file_f2, listener);\n    assertFalse(pointer_f1.isValid());\n    assertFalse(pointer_f2.isValid());\n    file_f1.createNewFile();\n    file_f2.createNewFile();\n    ApplicationManager.getApplication().runWriteAction(new Runnable() {\n      @Override\n      public void run() {\n        LocalFileSystem.getInstance().refresh(false);\n      }\n    });\n    assertEquals(\"[before:false:false, after:true:true]\", listener.getLog().toString());\n  }","id":55236,"modified_method":"public void testMultipleNotifications() throws Exception {\n    final File tempDir = createTempDirectory();\n    final File file_f1 = new File(tempDir, \"f1\");\n    final File file_f2 = new File(tempDir, \"f2\");\n    final LoggingListener listener = new LoggingListener();\n    final VirtualFilePointer pointer_f1 = createPointerByFile(file_f1, listener);\n    final VirtualFilePointer pointer_f2 = createPointerByFile(file_f2, listener);\n    assertFalse(pointer_f1.isValid());\n    assertFalse(pointer_f2.isValid());\n    file_f1.createNewFile();\n    file_f2.createNewFile();\n    ApplicationManager.getApplication().runWriteAction(() -> {\n      LocalFileSystem.getInstance().refresh(false);\n    });\n    assertEquals(\"[before:false:false, after:true:true]\", listener.getLog().toString());\n  }","commit_id":"098cee3bd7b9b97600e253f60a979deff2190ccf","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private static void refreshVFS() {\n    ApplicationManager.getApplication().runWriteAction(new Runnable() {\n      @Override\n      public void run() {\n        VirtualFileManager.getInstance().syncRefresh();\n      }\n    });\n    UIUtil.dispatchAllInvocationEvents();\n  }","id":55237,"modified_method":"private static void refreshVFS() {\n    ApplicationManager.getApplication().runWriteAction(() -> {\n      VirtualFileManager.getInstance().syncRefresh();\n    });\n    UIUtil.dispatchAllInvocationEvents();\n  }","commit_id":"098cee3bd7b9b97600e253f60a979deff2190ccf","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void testCreate() throws Exception {\n    final File tempDirectory = createTempDirectory();\n    final File fileToCreate = new File(tempDirectory, \"toCreate.txt\");\n    final LoggingListener fileToCreateListener = new LoggingListener();\n    final VirtualFilePointer fileToCreatePointer = createPointerByFile(fileToCreate, fileToCreateListener);\n    assertFalse(fileToCreatePointer.isValid());\n    fileToCreate.createNewFile();\n    ApplicationManager.getApplication().runWriteAction(new Runnable() {\n      @Override\n      public void run() {\n        VirtualFileManager.getInstance().syncRefresh();\n        final VirtualFile virtualFile = getVirtualFile(tempDirectory);\n        virtualFile.refresh(false, true);\n      }\n    });\n    assertTrue(fileToCreatePointer.isValid());\n    assertEquals(\"[before:false, after:true]\", fileToCreateListener.getLog().toString());\n    try {\n      String expectedUrl = VirtualFileManager\n        .constructUrl(LocalFileSystem.PROTOCOL, fileToCreate.getCanonicalPath().replace(File.separatorChar, '/'));\n      assertEquals(expectedUrl.toUpperCase(), fileToCreatePointer.getUrl().toUpperCase());\n    }\n    catch (IOException e) {\n      fail();\n    }\n  }","id":55238,"modified_method":"public void testCreate() throws Exception {\n    final File tempDirectory = createTempDirectory();\n    final File fileToCreate = new File(tempDirectory, \"toCreate.txt\");\n    final LoggingListener fileToCreateListener = new LoggingListener();\n    final VirtualFilePointer fileToCreatePointer = createPointerByFile(fileToCreate, fileToCreateListener);\n    assertFalse(fileToCreatePointer.isValid());\n    fileToCreate.createNewFile();\n    ApplicationManager.getApplication().runWriteAction(() -> {\n      VirtualFileManager.getInstance().syncRefresh();\n      final VirtualFile virtualFile = getVirtualFile(tempDirectory);\n      virtualFile.refresh(false, true);\n    });\n    assertTrue(fileToCreatePointer.isValid());\n    assertEquals(\"[before:false, after:true]\", fileToCreateListener.getLog().toString());\n    try {\n      String expectedUrl = VirtualFileManager\n        .constructUrl(LocalFileSystem.PROTOCOL, fileToCreate.getCanonicalPath().replace(File.separatorChar, '/'));\n      assertEquals(expectedUrl.toUpperCase(), fileToCreatePointer.getUrl().toUpperCase());\n    }\n    catch (IOException e) {\n      fail();\n    }\n  }","commit_id":"098cee3bd7b9b97600e253f60a979deff2190ccf","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private static VirtualFile refreshAndFind(@NotNull final String url) {\n    return WriteCommandAction.runWriteCommandAction(null, new Computable<VirtualFile>() {\n      @Override\n      public VirtualFile compute() {\n        return VirtualFileManager.getInstance().refreshAndFindFileByUrl(url);\n      }\n    });\n  }","id":55239,"modified_method":"private static VirtualFile refreshAndFind(@NotNull final String url) {\n    return WriteCommandAction.runWriteCommandAction(null, (Computable<VirtualFile>)() -> VirtualFileManager.getInstance().refreshAndFindFileByUrl(url));\n  }","commit_id":"098cee3bd7b9b97600e253f60a979deff2190ccf","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void testMoveFileUnderExistingPointer() throws Exception {\n    File tempDirectory = createTempDirectory();\n    final File moveTarget = new File(tempDirectory, \"moveTarget\");\n    moveTarget.mkdir();\n    final File fileToMove = new File(tempDirectory, \"toMove.txt\");\n    fileToMove.createNewFile();\n\n    final LoggingListener listener = new LoggingListener();\n    final VirtualFilePointer fileToMoveTargetPointer = createPointerByFile(new File(moveTarget, fileToMove.getName()), listener);\n    assertFalse(fileToMoveTargetPointer.isValid());\n    ApplicationManager.getApplication().runWriteAction(new Runnable() {\n      @Override\n      public void run() {\n        final VirtualFile virtualFile = getVirtualFile(fileToMove);\n        assertTrue(virtualFile.isValid());\n        final VirtualFile target = getVirtualFile(moveTarget);\n        assertTrue(target.isValid());\n        try {\n          virtualFile.move(null, target);\n        }\n        catch (IOException e) {\n          fail();\n        }\n      }\n    });\n    assertTrue(fileToMoveTargetPointer.isValid());\n    assertEquals(\"[before:false, after:true]\", listener.getLog().toString());\n  }","id":55240,"modified_method":"public void testMoveFileUnderExistingPointer() throws Exception {\n    File tempDirectory = createTempDirectory();\n    final File moveTarget = new File(tempDirectory, \"moveTarget\");\n    moveTarget.mkdir();\n    final File fileToMove = new File(tempDirectory, \"toMove.txt\");\n    fileToMove.createNewFile();\n\n    final LoggingListener listener = new LoggingListener();\n    final VirtualFilePointer fileToMoveTargetPointer = createPointerByFile(new File(moveTarget, fileToMove.getName()), listener);\n    assertFalse(fileToMoveTargetPointer.isValid());\n    ApplicationManager.getApplication().runWriteAction(() -> {\n      final VirtualFile virtualFile = getVirtualFile(fileToMove);\n      assertTrue(virtualFile.isValid());\n      final VirtualFile target = getVirtualFile(moveTarget);\n      assertTrue(target.isValid());\n      try {\n        virtualFile.move(null, target);\n      }\n      catch (IOException e) {\n        fail();\n      }\n    });\n    assertTrue(fileToMoveTargetPointer.isValid());\n    assertEquals(\"[before:false, after:true]\", listener.getLog().toString());\n  }","commit_id":"098cee3bd7b9b97600e253f60a979deff2190ccf","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void testMovePointedFileUnderAnotherPointer() throws Exception {\n    File tempDirectory = createTempDirectory();\n    final File moveTarget = new File(tempDirectory, \"moveTarget\");\n    moveTarget.mkdir();\n    final File fileToMove = new File(tempDirectory, \"toMove.txt\");\n    fileToMove.createNewFile();\n\n    final LoggingListener listener = new LoggingListener();\n    final LoggingListener targetListener = new LoggingListener();\n\n    final VirtualFilePointer fileToMovePointer = createPointerByFile(fileToMove, listener);\n    final VirtualFilePointer fileToMoveTargetPointer = createPointerByFile(new File(moveTarget, fileToMove.getName()), targetListener);\n\n    assertFalse(fileToMoveTargetPointer.isValid());\n    ApplicationManager.getApplication().runWriteAction(new Runnable() {\n      @Override\n      public void run() {\n        final VirtualFile virtualFile = getVirtualFile(fileToMove);\n        assertTrue(virtualFile.isValid());\n        final VirtualFile target = getVirtualFile(moveTarget);\n        assertTrue(target.isValid());\n        try {\n          virtualFile.move(null, target);\n        }\n        catch (IOException e) {\n          fail();\n        }\n      }\n    });\n    assertTrue(fileToMovePointer.isValid());\n    assertTrue(fileToMoveTargetPointer.isValid());\n    assertEquals(\"[]\", listener.getLog().toString());\n    assertEquals(\"[before:false, after:true]\", targetListener.getLog().toString());\n  }","id":55241,"modified_method":"public void testMovePointedFileUnderAnotherPointer() throws Exception {\n    File tempDirectory = createTempDirectory();\n    final File moveTarget = new File(tempDirectory, \"moveTarget\");\n    moveTarget.mkdir();\n    final File fileToMove = new File(tempDirectory, \"toMove.txt\");\n    fileToMove.createNewFile();\n\n    final LoggingListener listener = new LoggingListener();\n    final LoggingListener targetListener = new LoggingListener();\n\n    final VirtualFilePointer fileToMovePointer = createPointerByFile(fileToMove, listener);\n    final VirtualFilePointer fileToMoveTargetPointer = createPointerByFile(new File(moveTarget, fileToMove.getName()), targetListener);\n\n    assertFalse(fileToMoveTargetPointer.isValid());\n    ApplicationManager.getApplication().runWriteAction(() -> {\n      final VirtualFile virtualFile = getVirtualFile(fileToMove);\n      assertTrue(virtualFile.isValid());\n      final VirtualFile target = getVirtualFile(moveTarget);\n      assertTrue(target.isValid());\n      try {\n        virtualFile.move(null, target);\n      }\n      catch (IOException e) {\n        fail();\n      }\n    });\n    assertTrue(fileToMovePointer.isValid());\n    assertTrue(fileToMoveTargetPointer.isValid());\n    assertEquals(\"[]\", listener.getLog().toString());\n    assertEquals(\"[before:false, after:true]\", targetListener.getLog().toString());\n  }","commit_id":"098cee3bd7b9b97600e253f60a979deff2190ccf","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"protected GlobalInspectionContextImpl runTool(final String testDir,\n                                                final String jdkName,\n                                                boolean runDeadCodeFirst,\n                                                @NotNull InspectionToolWrapper toolWrapper,\n                                                @NotNull InspectionToolWrapper... additional) {\n    final VirtualFile[] sourceDir = new VirtualFile[1];\n    ApplicationManager.getApplication().runWriteAction(new Runnable() {\n      @Override\n      public void run() {\n        try {\n          setupRootModel(testDir, sourceDir, jdkName);\n        }\n        catch (Exception e) {\n          LOG.error(e);\n        }\n      }\n    });\n    VirtualFile projectDir = LocalFileSystem.getInstance().refreshAndFindFileByIoFile(new File(testDir));\n    AnalysisScope scope = createAnalysisScope(sourceDir[0].equals(projectDir) ? projectDir : sourceDir[0].getParent());\n\n    InspectionManagerEx inspectionManager = (InspectionManagerEx)InspectionManager.getInstance(getProject());\n    InspectionToolWrapper[] toolWrappers = runDeadCodeFirst ? new InspectionToolWrapper []{getUnusedDeclarationWrapper(), toolWrapper} : new InspectionToolWrapper []{toolWrapper};\n    toolWrappers = ArrayUtil.mergeArrays(toolWrappers, additional);\n    final GlobalInspectionContextForTests globalContext =\n      CodeInsightTestFixtureImpl.createGlobalContextForTool(scope, getProject(), inspectionManager, toolWrappers);\n\n    InspectionTestUtil.runTool(toolWrapper, scope, globalContext);\n    return globalContext;\n  }","id":55242,"modified_method":"protected GlobalInspectionContextImpl runTool(@NotNull final String testDir,\n                                                final String jdkName,\n                                                boolean runDeadCodeFirst,\n                                                @NotNull InspectionToolWrapper toolWrapper,\n                                                @NotNull InspectionToolWrapper... additional) {\n    final VirtualFile[] sourceDir = new VirtualFile[1];\n    ApplicationManager.getApplication().runWriteAction(() -> {\n      try {\n        setupRootModel(testDir, sourceDir, jdkName);\n      }\n      catch (Exception e) {\n        LOG.error(e);\n      }\n    });\n    VirtualFile projectDir = LocalFileSystem.getInstance().refreshAndFindFileByIoFile(new File(testDir));\n    AnalysisScope scope = createAnalysisScope(sourceDir[0].equals(projectDir) ? projectDir : sourceDir[0].getParent());\n\n    InspectionManagerEx inspectionManager = (InspectionManagerEx)InspectionManager.getInstance(getProject());\n    InspectionToolWrapper[] toolWrappers = runDeadCodeFirst ? new InspectionToolWrapper []{getUnusedDeclarationWrapper(), toolWrapper} : new InspectionToolWrapper []{toolWrapper};\n    toolWrappers = ArrayUtil.mergeArrays(toolWrappers, additional);\n    final GlobalInspectionContextForTests globalContext =\n      CodeInsightTestFixtureImpl.createGlobalContextForTool(scope, getProject(), inspectionManager, toolWrappers);\n\n    InspectionTestUtil.runTool(toolWrapper, scope, globalContext);\n    return globalContext;\n  }","commit_id":"5f91021f83ff8e1164f726d45330896c856d0662","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"protected VirtualFile copyFileInCommand(final VirtualFile file, final String toName) {\n    final AtomicReference<VirtualFile> res = new AtomicReference<VirtualFile>();\n    new WriteCommandAction.Simple(myProject) {\n      @Override\n      protected void run() throws Throwable {\n        try {\n          res.set(file.copy(this, file.getParent(), toName));\n        }\n        catch (IOException e) {\n          throw new RuntimeException(e);\n        }\n      }\n    }.execute();\n    return res.get();\n  }","id":55243,"modified_method":"protected VirtualFile copyFileInCommand(final VirtualFile file, final String toName) {\n    final AtomicReference<VirtualFile> res = new AtomicReference<>();\n    new WriteCommandAction.Simple(myProject) {\n      @Override\n      protected void run() throws Throwable {\n        try {\n          res.set(file.copy(this, file.getParent(), toName));\n        }\n        catch (IOException e) {\n          throw new RuntimeException(e);\n        }\n      }\n    }.execute();\n    return res.get();\n  }","commit_id":"9cdf7b86904fb0ccbc5d4de38945bf80861803b7","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public FileAnnotation createTestAnnotation(@NotNull AnnotationProvider provider, VirtualFile file) throws VcsException {\n    final FileAnnotation annotation = provider.annotate(file);\n    Disposer.register(myProject, new Disposable() {\n      @Override\n      public void dispose() {\n        annotation.dispose();\n      }\n    });\n    return annotation;\n  }","id":55244,"modified_method":"public FileAnnotation createTestAnnotation(@NotNull AnnotationProvider provider, VirtualFile file) throws VcsException {\n    final FileAnnotation annotation = provider.annotate(file);\n    Disposer.register(myProject, annotation::dispose);\n    return annotation;\n  }","commit_id":"9cdf7b86904fb0ccbc5d4de38945bf80861803b7","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public static void sortChanges(final List<Change> changes) {\n    Collections.sort(changes, new Comparator<Change>() {\n      @Override\n      public int compare(final Change o1, final Change o2) {\n        final String p1 = FileUtil.toSystemIndependentName(ChangesUtil.getFilePath(o1).getPath());\n        final String p2 = FileUtil.toSystemIndependentName(ChangesUtil.getFilePath(o2).getPath());\n        return p1.compareTo(p2);\n      }\n    });\n  }","id":55245,"modified_method":"public static void sortChanges(final List<Change> changes) {\n    Collections.sort(changes, (o1, o2) -> {\n      final String p1 = FileUtil.toSystemIndependentName(ChangesUtil.getFilePath(o1).getPath());\n      final String p2 = FileUtil.toSystemIndependentName(ChangesUtil.getFilePath(o2).getPath());\n      return p1.compareTo(p2);\n    });\n  }","commit_id":"9cdf7b86904fb0ccbc5d4de38945bf80861803b7","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"protected void initProject(final File clientRoot, String testName) throws Exception {\n    final TestFixtureBuilder<IdeaProjectTestFixture> testFixtureBuilder = IdeaTestFixtureFactory.getFixtureFactory().createFixtureBuilder(testName);\n    myProjectFixture = testFixtureBuilder.getFixture();\n    testFixtureBuilder.addModule(EmptyModuleFixtureBuilder.class).addContentRoot(clientRoot.toString());\n    myProjectFixture.setUp();\n    myProject = myProjectFixture.getProject();\n\n    projectCreated();\n\n    ApplicationManager.getApplication().runWriteAction(new Runnable() {\n      @Override\n      public void run() {\n        myWorkingCopyDir = LocalFileSystem.getInstance().refreshAndFindFileByIoFile(clientRoot);\n        assert myWorkingCopyDir != null;\n      }\n    });\n    ((ProjectLevelVcsManagerImpl)ProjectLevelVcsManager.getInstance(myProject)).waitForInitialized();\n  }","id":55246,"modified_method":"protected void initProject(final File clientRoot, String testName) throws Exception {\n    final TestFixtureBuilder<IdeaProjectTestFixture> testFixtureBuilder = IdeaTestFixtureFactory.getFixtureFactory().createFixtureBuilder(testName);\n    myProjectFixture = testFixtureBuilder.getFixture();\n    testFixtureBuilder.addModule(EmptyModuleFixtureBuilder.class).addContentRoot(clientRoot.toString());\n    myProjectFixture.setUp();\n    myProject = myProjectFixture.getProject();\n\n    projectCreated();\n\n    ApplicationManager.getApplication().runWriteAction(() -> {\n      myWorkingCopyDir = LocalFileSystem.getInstance().refreshAndFindFileByIoFile(clientRoot);\n      assert myWorkingCopyDir != null;\n    });\n    ((ProjectLevelVcsManagerImpl)ProjectLevelVcsManager.getInstance(myProject)).waitForInitialized();\n  }","commit_id":"9cdf7b86904fb0ccbc5d4de38945bf80861803b7","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"protected void clearDirInCommand(final VirtualFile dir, final Processor<VirtualFile> filter) {\n    new WriteCommandAction.Simple(myProject) {\n      @Override\n      protected void run() throws Throwable {\n        int numOfRuns = 5;\n        for (int i = 0; i < numOfRuns; i++) {\n          try {\n            final VirtualFile[] children = dir.getChildren();\n            for (VirtualFile child : children) {\n              if (filter != null && filter.process(child)) {\n                child.delete(AbstractVcsTestCase.this);\n              }\n            }\n            return;\n          }\n          catch (IOException e) {\n            if (i == (numOfRuns - 1)) {\n              // last run\n              throw e;\n            }\n            Thread.sleep(50);\n            continue;\n          }\n        }\n      }\n    }.execute();\n  }","id":55247,"modified_method":"protected void clearDirInCommand(final VirtualFile dir, final Processor<VirtualFile> filter) {\n    new WriteCommandAction.Simple(myProject) {\n      @Override\n      protected void run() throws Throwable {\n        int numOfRuns = 5;\n        for (int i = 0; i < numOfRuns; i++) {\n          try {\n            final VirtualFile[] children = dir.getChildren();\n            for (VirtualFile child : children) {\n              if (filter != null && filter.process(child)) {\n                child.delete(AbstractVcsTestCase.this);\n              }\n            }\n            return;\n          }\n          catch (IOException e) {\n            if (i == numOfRuns - 1) {\n              // last run\n              throw e;\n            }\n            Thread.sleep(50);\n          }\n        }\n      }\n    }.execute();\n  }","commit_id":"9cdf7b86904fb0ccbc5d4de38945bf80861803b7","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"protected void refreshVfs() {\n    UsefulTestCase.edt(new Runnable() {\n      @Override\n      public void run() {\n        myWorkingCopyDir.refresh(false, true);\n      }\n    });\n  }","id":55248,"modified_method":"protected void refreshVfs() {\n    UsefulTestCase.edt(() -> myWorkingCopyDir.refresh(false, true));\n  }","commit_id":"9cdf7b86904fb0ccbc5d4de38945bf80861803b7","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private List<UsageInfo> findUsages(@NotNull FindModel findModel) {\n    PsiDirectory psiDirectory = FindInProjectUtil.getPsiDirectory(findModel, myProject);\n    List<UsageInfo> result = new ArrayList<UsageInfo>();\n    final CommonProcessors.CollectProcessor<UsageInfo> collector = new CommonProcessors.CollectProcessor<UsageInfo>(result);\n    FindInProjectUtil.findUsages(findModel, psiDirectory, myProject, collector, new FindUsagesProcessPresentation(FindInProjectUtil.setupViewPresentation(true, findModel)));\n    return result;\n  }","id":55249,"modified_method":"private List<UsageInfo> findUsages(@NotNull FindModel findModel) {\n    PsiDirectory psiDirectory = FindInProjectUtil.getPsiDirectory(findModel, myProject);\n    List<UsageInfo> result = new ArrayList<>();\n    final CommonProcessors.CollectProcessor<UsageInfo> collector = new CommonProcessors.CollectProcessor<>(result);\n    FindInProjectUtil.findUsages(findModel, psiDirectory, myProject, collector, new FindUsagesProcessPresentation(FindInProjectUtil.setupViewPresentation(true, findModel)));\n    return result;\n  }","commit_id":"01476c9d30eedf448b00ae7f785ff1562dbe7b1c","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void testLocalScopeSearchPerformance() throws Exception {\n    final int fileCount = 3000;\n    final int lineCount = 500;\n    TempDirTestFixture fixture = new LightTempDirTestFixtureImpl();\n    fixture.setUp();\n\n    try {\n      String sampleText = StringUtil.repeat(\"zoo TargetWord foo bar goo\\n\", lineCount);\n      for (int i = 0; i < fileCount; i++) {\n        fixture.createFile(\"a\" + i + \".txt\", sampleText);\n      }\n      PsiTestUtil.addSourceContentToRoots(myModule, fixture.getFile(\"\"));\n\n      VirtualFile file = fixture.createFile(\"target.txt\", sampleText);\n      PsiFile psiFile = PsiManager.getInstance(myProject).findFile(file);\n      assertNotNull(psiFile);\n      final FindModel findModel = new FindModel();\n      findModel.setStringToFind(\"TargetWord\");\n      findModel.setWholeWordsOnly(true);\n      findModel.setFromCursor(false);\n      findModel.setGlobal(true);\n      findModel.setMultipleFiles(true);\n      findModel.setCustomScope(true);\n\n      ThrowableRunnable test = new ThrowableRunnable() {\n        @Override\n        public void run() throws Throwable {\n          assertSize(lineCount, findUsages(findModel));\n        }\n      };\n\n      findModel.setCustomScope(GlobalSearchScope.fileScope(psiFile));\n      PlatformTestUtil.startPerformanceTest(\"slow\", 400, test).attempts(2).cpuBound().usesAllCPUCores().assertTiming();\n\n      findModel.setCustomScope(new LocalSearchScope(psiFile));\n      PlatformTestUtil.startPerformanceTest(\"slow\", 400, test).attempts(2).cpuBound().usesAllCPUCores().assertTiming();\n    }\n    finally {\n      fixture.tearDown();\n    }\n  }","id":55250,"modified_method":"public void testLocalScopeSearchPerformance() throws Exception {\n    final int fileCount = 3000;\n    final int lineCount = 500;\n    TempDirTestFixture fixture = new LightTempDirTestFixtureImpl();\n    fixture.setUp();\n\n    try {\n      String sampleText = StringUtil.repeat(\"zoo TargetWord foo bar goo\\n\", lineCount);\n      for (int i = 0; i < fileCount; i++) {\n        fixture.createFile(\"a\" + i + \".txt\", sampleText);\n      }\n      PsiTestUtil.addSourceContentToRoots(myModule, fixture.getFile(\"\"));\n\n      VirtualFile file = fixture.createFile(\"target.txt\", sampleText);\n      PsiFile psiFile = PsiManager.getInstance(myProject).findFile(file);\n      assertNotNull(psiFile);\n      final FindModel findModel = new FindModel();\n      findModel.setStringToFind(\"TargetWord\");\n      findModel.setWholeWordsOnly(true);\n      findModel.setFromCursor(false);\n      findModel.setGlobal(true);\n      findModel.setMultipleFiles(true);\n      findModel.setCustomScope(true);\n\n      ThrowableRunnable test = () -> assertSize(lineCount, findUsages(findModel));\n\n      findModel.setCustomScope(GlobalSearchScope.fileScope(psiFile));\n      PlatformTestUtil.startPerformanceTest(\"slow\", 400, test).attempts(2).cpuBound().usesAllCPUCores().assertTiming();\n\n      findModel.setCustomScope(new LocalSearchScope(psiFile));\n      PlatformTestUtil.startPerformanceTest(\"slow\", 400, test).attempts(2).cpuBound().usesAllCPUCores().assertTiming();\n    }\n    finally {\n      fixture.tearDown();\n    }\n  }","commit_id":"01476c9d30eedf448b00ae7f785ff1562dbe7b1c","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private  void initProject(String folderName, final String... sourceDirs) {\n    final String testDir = JavaTestUtil.getJavaTestDataPath() + \"/find/\" + folderName;\n    ApplicationManager.getApplication().runWriteAction(new Runnable(){\n      @Override\n      public void run(){\n        try{\n          mySourceDirs = new VirtualFile[sourceDirs.length];\n          for (int i = 0; i < sourceDirs.length; i++){\n            String sourcePath = testDir + \"/\" + sourceDirs[i];\n            mySourceDirs[i] = LocalFileSystem.getInstance().refreshAndFindFileByPath(FileUtil.toSystemIndependentName(sourcePath));\n          }\n\n          VirtualFile projectDir = LocalFileSystem.getInstance().refreshAndFindFileByPath(FileUtil.toSystemIndependentName(testDir));\n          Sdk jdk = IdeaTestUtil.getMockJdk17();\n          PsiTestUtil.removeAllRoots(myModule, jdk);\n          PsiTestUtil.addContentRoot(myModule, projectDir);\n          for (VirtualFile sourceDir : mySourceDirs) {\n            PsiTestUtil.addSourceRoot(myModule, sourceDir);\n          }\n        }\n        catch (Exception e){\n          throw new RuntimeException(e);\n        }\n      }\n    });\n  }","id":55251,"modified_method":"private  void initProject(String folderName, final String... sourceDirs) {\n    final String testDir = JavaTestUtil.getJavaTestDataPath() + \"/find/\" + folderName;\n    ApplicationManager.getApplication().runWriteAction(() -> {\n      try{\n        mySourceDirs = new VirtualFile[sourceDirs.length];\n        for (int i = 0; i < sourceDirs.length; i++){\n          String sourcePath = testDir + \"/\" + sourceDirs[i];\n          mySourceDirs[i] = LocalFileSystem.getInstance().refreshAndFindFileByPath(FileUtil.toSystemIndependentName(sourcePath));\n        }\n\n        VirtualFile projectDir = LocalFileSystem.getInstance().refreshAndFindFileByPath(FileUtil.toSystemIndependentName(testDir));\n        Sdk jdk = IdeaTestUtil.getMockJdk17();\n        PsiTestUtil.removeAllRoots(myModule, jdk);\n        PsiTestUtil.addContentRoot(myModule, projectDir);\n        for (VirtualFile sourceDir : mySourceDirs) {\n          PsiTestUtil.addSourceRoot(myModule, sourceDir);\n        }\n      }\n      catch (Exception e){\n        throw new RuntimeException(e);\n      }\n    });\n  }","commit_id":"01476c9d30eedf448b00ae7f785ff1562dbe7b1c","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void testReplaceAll() throws FindManager.MalformedReplacementStringException {\n    final FindModel findModel = new FindModel();\n    String toFind = \"xxx\";\n    @SuppressWarnings(\"SpellCheckingInspection\") String toReplace = \"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\";\n    findModel.setStringToFind(toFind);\n    findModel.setStringToReplace(toReplace);\n    findModel.setWholeWordsOnly(true);\n    findModel.setFromCursor(false);\n    findModel.setGlobal(true);\n    findModel.setMultipleFiles(false);\n    findModel.setProjectScope(true);\n    findModel.setRegularExpressions(false);\n    findModel.setPromptOnReplace(false);\n\n    myFindManager.setFindNextModel(null);\n    myFindManager.getFindInFileModel().copyFrom(findModel);\n\n    String text = StringUtil.repeat(toFind + \"\\n\",6);\n    configureByText(FileTypes.PLAIN_TEXT, text);\n\n    final List<Usage> usages = FindUtil.findAll(getProject(), myEditor, findModel);\n    assertNotNull(usages);\n    CommandProcessor.getInstance().executeCommand(getProject(), new Runnable() {\n      @Override\n      public void run() {\n        for (Usage usage : usages) {\n          try {\n            ReplaceInProjectManager.getInstance(getProject()).replaceUsage(usage, findModel, Collections.<Usage>emptySet(), false);\n          }\n          catch (FindManager.MalformedReplacementStringException e) {\n            throw new RuntimeException(e);\n          }\n        }\n      }\n    }, \"\", null);\n    String newText = StringUtil.repeat(toReplace + \"\\n\",6);\n    assertEquals(newText, getEditor().getDocument().getText());\n  }","id":55252,"modified_method":"public void testReplaceAll() throws FindManager.MalformedReplacementStringException {\n    final FindModel findModel = new FindModel();\n    String toFind = \"xxx\";\n    @SuppressWarnings(\"SpellCheckingInspection\") String toReplace = \"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\";\n    findModel.setStringToFind(toFind);\n    findModel.setStringToReplace(toReplace);\n    findModel.setWholeWordsOnly(true);\n    findModel.setFromCursor(false);\n    findModel.setGlobal(true);\n    findModel.setMultipleFiles(false);\n    findModel.setProjectScope(true);\n    findModel.setRegularExpressions(false);\n    findModel.setPromptOnReplace(false);\n\n    myFindManager.setFindNextModel(null);\n    myFindManager.getFindInFileModel().copyFrom(findModel);\n\n    String text = StringUtil.repeat(toFind + \"\\n\",6);\n    configureByText(FileTypes.PLAIN_TEXT, text);\n\n    final List<Usage> usages = FindUtil.findAll(getProject(), myEditor, findModel);\n    assertNotNull(usages);\n    CommandProcessor.getInstance().executeCommand(getProject(), () -> {\n      for (Usage usage : usages) {\n        try {\n          ReplaceInProjectManager.getInstance(getProject()).replaceUsage(usage, findModel, Collections.<Usage>emptySet(), false);\n        }\n        catch (FindManager.MalformedReplacementStringException e) {\n          throw new RuntimeException(e);\n        }\n      }\n    }, \"\", null);\n    String newText = StringUtil.repeat(toReplace + \"\\n\",6);\n    assertEquals(newText, getEditor().getDocument().getText());\n  }","commit_id":"01476c9d30eedf448b00ae7f785ff1562dbe7b1c","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Override\n  protected boolean doTest(String testName, boolean conversionShouldHappen) throws IOException, JDOMException {\n    String path = getHomePath() + getBasePath() + testName;\n\n    final File globalBefore = new File(path, \"global_before\");\n    ApplicationManager.getApplication().runWriteAction(new Runnable() {\n      @Override\n      public void run() {\n        try {\n          if (checkJdk()) {\n            Element d = JDOMUtil.load(new File(globalBefore, JDK_TABLE_XML));\n            ConversionHelper.expandPaths(d);\n            ((ProjectJdkTableImpl)ProjectJdkTable.getInstance()).loadState(d);\n          }\n\n          {\n            Document d = JDOMUtil.loadDocument(new File(globalBefore, GLOBAL_LIBS_XML));\n            ConversionHelper.expandPaths(d.getRootElement());\n            ApplicationLibraryTable.getApplicationTable().loadState(d.getRootElement());\n          }\n        }\n        catch (Exception e) {\n          throw new RuntimeException(e);\n        }\n      }\n    });\n\n    if (!super.doTest(testName, conversionShouldHappen)) {\n      return false;\n    }\n\n    File globalAfter = new File(path, \"global_after\");\n    if (checkJdk()) {\n      Document d = JDOMUtil.loadDocument(new File(globalAfter, JDK_TABLE_XML));\n      Element sdkState = ((ProjectJdkTableImpl)ProjectJdkTable.getInstance()).getState();\n      ConversionHelper.collapsePaths(sdkState);\n      PlatformTestUtil.assertElementsEqual(d.getRootElement(), sdkState);\n    }\n\n    {\n      Document d = JDOMUtil.loadDocument(new File(globalAfter, GLOBAL_LIBS_XML));\n      Element globalLibState = ApplicationLibraryTable.getApplicationTable().getState();\n      ConversionHelper.collapsePaths(globalLibState);\n      PlatformTestUtil.assertElementsEqual(d.getRootElement(), globalLibState);\n    }\n    return true;\n  }","id":55253,"modified_method":"@Override\n  protected boolean doTest(String testName, boolean conversionShouldHappen) throws IOException, JDOMException {\n    String path = getHomePath() + getBasePath() + testName;\n\n    final File globalBefore = new File(path, \"global_before\");\n    ApplicationManager.getApplication().runWriteAction(() -> {\n      try {\n        if (checkJdk()) {\n          Element d = JDOMUtil.load(new File(globalBefore, JDK_TABLE_XML));\n          ConversionHelper.expandPaths(d);\n          ((ProjectJdkTableImpl)ProjectJdkTable.getInstance()).loadState(d);\n        }\n\n        {\n          Element d = JDOMUtil.load(new File(globalBefore, GLOBAL_LIBS_XML));\n          ConversionHelper.expandPaths(d);\n          ApplicationLibraryTable.getApplicationTable().loadState(d);\n        }\n      }\n      catch (Exception e) {\n        throw new RuntimeException(e);\n      }\n    });\n\n    if (!super.doTest(testName, conversionShouldHappen)) {\n      return false;\n    }\n\n    File globalAfter = new File(path, \"global_after\");\n    if (checkJdk()) {\n      Element sdkState = ((ProjectJdkTableImpl)ProjectJdkTable.getInstance()).getState();\n      ConversionHelper.collapsePaths(sdkState);\n      PlatformTestUtil.assertElementsEqual(JDOMUtil.load(new File(globalAfter, JDK_TABLE_XML)), sdkState);\n    }\n\n    {\n      Element globalLibState = ApplicationLibraryTable.getApplicationTable().getState();\n      ConversionHelper.collapsePaths(globalLibState);\n      PlatformTestUtil.assertElementsEqual(JDOMUtil.load(new File(globalAfter, GLOBAL_LIBS_XML)), globalLibState);\n    }\n    return true;\n  }","commit_id":"7488073db94e839d81bcf802e139c897fc16f30d","url":"https://github.com/JetBrains/intellij-plugins"},{"original_method":"@Override\n  protected void tearDown() throws Exception {\n    try {\n      ApplicationManager.getApplication().runWriteAction(new Runnable() {\n        @Override\n        public void run() {\n          final Library[] libraries = ApplicationLibraryTable.getApplicationTable().getLibraries();\n          for (Library library : libraries) {\n            ApplicationLibraryTable.getApplicationTable().removeLibrary(library);\n          }\n\n          ApplicationLibraryTable.getApplicationTable().loadState(myOriginalGlobalLibraries);\n          if (checkJdk()) {\n            ((ProjectJdkTableImpl)ProjectJdkTable.getInstance()).loadState(myOriginalSkds);\n          }\n        }\n      });\n\n      if (checkJdk()) {\n        PathMacros.getInstance().removeMacro(SDK_HOME_VAR);\n        PathMacros.getInstance().removeMacro(SDK_HOME_VAR_2);\n      }\n      if (PathMacros.getInstance().getAllMacroNames().contains(PROJECT_VAR)) {\n        PathMacros.getInstance().removeMacro(PROJECT_VAR);\n      }\n    }\n    finally {\n      super.tearDown();\n    }\n  }","id":55254,"modified_method":"@Override\n  protected void tearDown() throws Exception {\n    try {\n      ApplicationManager.getApplication().runWriteAction(() -> {\n        final Library[] libraries = ApplicationLibraryTable.getApplicationTable().getLibraries();\n        for (Library library : libraries) {\n          ApplicationLibraryTable.getApplicationTable().removeLibrary(library);\n        }\n\n        ApplicationLibraryTable.getApplicationTable().loadState(myOriginalGlobalLibraries);\n        if (checkJdk()) {\n          ((ProjectJdkTableImpl)ProjectJdkTable.getInstance()).loadState(myOriginalSkds);\n        }\n      });\n\n      if (checkJdk()) {\n        PathMacros.getInstance().removeMacro(SDK_HOME_VAR);\n        PathMacros.getInstance().removeMacro(SDK_HOME_VAR_2);\n      }\n      if (PathMacros.getInstance().getAllMacroNames().contains(PROJECT_VAR)) {\n        PathMacros.getInstance().removeMacro(PROJECT_VAR);\n      }\n    }\n    finally {\n      super.tearDown();\n    }\n  }","commit_id":"7488073db94e839d81bcf802e139c897fc16f30d","url":"https://github.com/JetBrains/intellij-plugins"},{"original_method":"@Nullable\n  public static String parseAirVersionFromDescriptorFile(final String descriptorFilePath) {\n    if (StringUtil.isEmpty(descriptorFilePath)) return null;\n\n    try {\n      final Document document = JDOMUtil.loadDocument(new File(descriptorFilePath));\n      final Element rootElement = document.getRootElement();\n      if (rootElement != null) {\n        final String localName = rootElement.getName();\n        final Namespace namespace = rootElement.getNamespace();\n        if (\"application\".equals(localName) && namespace != null && namespace.getURI().startsWith(AIR_NAMESPACE_BASE)) {\n          return namespace.getURI().substring(AIR_NAMESPACE_BASE.length());\n        }\n      }\n    }\n    catch (JDOMException e) {/*unlucky*/}\n    catch (IOException e) {/*unlucky*/}\n\n    return null;\n  }","id":55255,"modified_method":"@Nullable\n  public static String parseAirVersionFromDescriptorFile(final String descriptorFilePath) {\n    if (StringUtil.isEmpty(descriptorFilePath)) return null;\n\n    try {\n      final Element rootElement = JDOMUtil.load(new File(descriptorFilePath));\n      final String localName = rootElement.getName();\n      final Namespace namespace = rootElement.getNamespace();\n      if (\"application\".equals(localName) && namespace != null && namespace.getURI().startsWith(AIR_NAMESPACE_BASE)) {\n        return namespace.getURI().substring(AIR_NAMESPACE_BASE.length());\n      }\n    }\n    catch (JDOMException e) {/*unlucky*/}\n    catch (IOException e) {/*unlucky*/}\n\n    return null;\n  }","commit_id":"7488073db94e839d81bcf802e139c897fc16f30d","url":"https://github.com/JetBrains/intellij-plugins"},{"original_method":"private static Collection<Element> findDuplicateElementsRecursively(final Element existingElement, final Element otherElement) {\n    final Collection<Element> result = new THashSet<Element>();\n\n    //noinspection unchecked\n    for (Element potentialChild : (Iterable<Element>)otherElement.getChildren()) {\n      final List existingChildren = existingElement.getChildren(potentialChild.getName(), existingElement.getNamespace());\n      //noinspection unchecked\n      for (Element existingChild : (Iterable<Element>)existingChildren) {\n        final String potentialChildContent = potentialChild.getTextTrim();\n        if (potentialChildContent.isEmpty()) {\n          result.addAll(findDuplicateElementsRecursively(existingChild, potentialChild));\n        }\n        else {\n          final String existingElementContent = existingChild.getTextTrim();\n          if (ArrayUtil.contains(existingChild.getName(), NON_REPEATABLE_OPTIONS_THAT_CAN_BE_IN_GENERATED_FILE)) {\n            result.add(potentialChild);\n          }\n          else if (areOptionValuesEqual(existingChild.getName(), potentialChildContent, existingElementContent)) {\n            // remove only similar repeatable values, do not remove equal values of <policy-file-url/> that are for different <runtime-shared-library-path/> elements.\n            if (existingElement.getChildren().size() == existingChildren.size()) {\n              result.add(potentialChild);\n            }\n          }\n        }\n      }\n    }\n\n    return result;\n  }","id":55256,"modified_method":"private static Collection<Element> findDuplicateElementsRecursively(final Element existingElement, final Element otherElement) {\n    final Collection<Element> result = new THashSet<Element>();\n\n    //noinspection unchecked\n    for (Element potentialChild : otherElement.getChildren()) {\n      final List existingChildren = existingElement.getChildren(potentialChild.getName(), existingElement.getNamespace());\n      //noinspection unchecked\n      for (Element existingChild : (Iterable<Element>)existingChildren) {\n        final String potentialChildContent = potentialChild.getTextTrim();\n        if (potentialChildContent.isEmpty()) {\n          result.addAll(findDuplicateElementsRecursively(existingChild, potentialChild));\n        }\n        else {\n          final String existingElementContent = existingChild.getTextTrim();\n          if (ArrayUtil.contains(existingChild.getName(), NON_REPEATABLE_OPTIONS_THAT_CAN_BE_IN_GENERATED_FILE)) {\n            result.add(potentialChild);\n          }\n          else if (areOptionValuesEqual(existingChild.getName(), potentialChildContent, existingElementContent)) {\n            // remove only similar repeatable values, do not remove equal values of <policy-file-url/> that are for different <runtime-shared-library-path/> elements.\n            if (existingElement.getChildren().size() == existingChildren.size()) {\n              result.add(potentialChild);\n            }\n          }\n        }\n      }\n    }\n\n    return result;\n  }","commit_id":"7488073db94e839d81bcf802e139c897fc16f30d","url":"https://github.com/JetBrains/intellij-plugins"},{"original_method":"private static Collection<String> removeLibs(final Element rootElement, final boolean removeExternal, final boolean removeIncluded) {\n    final Namespace namespace = rootElement.getNamespace();\n\n    final Collection<String> result = new ArrayList<String>();\n\n    //noinspection unchecked\n    for (Element compilerElement : ((Iterable<Element>)rootElement.getChildren(COMPILER, namespace))) {\n      if (removeExternal) {\n        //noinspection unchecked\n        for (Element externalLibraryPathElement : ((Iterable<Element>)compilerElement.getChildren(EXTERNAL_LIBRARY_PATH, namespace))) {\n          final Collection<Element> pathElementsToRemove = new ArrayList<Element>();\n          //noinspection unchecked\n          for (Element pathElement : ((Iterable<Element>)externalLibraryPathElement.getChildren(PATH_ELEMENT, namespace))) {\n            final String path = pathElement.getText();\n            final String fileName = path.substring(FileUtil.toSystemIndependentName(path).lastIndexOf(\"/\") + 1);\n            if (fileName.startsWith(\"playerglobal\") || fileName.startsWith(\"airglobal\")) {\n              continue;\n            }\n\n            result.add(path);\n            pathElementsToRemove.add(pathElement);\n          }\n\n          for (Element pathElement : pathElementsToRemove) {\n            externalLibraryPathElement.removeContent(pathElement);\n          }\n        }\n      }\n\n      if (removeIncluded) {\n        //noinspection unchecked\n        for (Element includeLibrariesElement : ((Iterable<Element>)compilerElement.getChildren(INCLUDE_LIBRARIES, namespace))) {\n          final Collection<Element> libraryElementsToRemove = new ArrayList<Element>();\n          //noinspection unchecked\n          for (Element libraryElement : ((Iterable<Element>)includeLibrariesElement.getChildren(LIBRARY, namespace))) {\n            result.add(libraryElement.getText());\n            libraryElementsToRemove.add(libraryElement);\n          }\n\n          for (Element pathElement : libraryElementsToRemove) {\n            includeLibrariesElement.removeContent(pathElement);\n          }\n        }\n      }\n    }\n    return result;\n  }","id":55257,"modified_method":"private static Collection<String> removeLibs(final Element rootElement, final boolean removeExternal, final boolean removeIncluded) {\n    final Namespace namespace = rootElement.getNamespace();\n\n    final Collection<String> result = new ArrayList<String>();\n\n    //noinspection unchecked\n    for (Element compilerElement : rootElement.getChildren(COMPILER, namespace)) {\n      if (removeExternal) {\n        //noinspection unchecked\n        for (Element externalLibraryPathElement : compilerElement.getChildren(EXTERNAL_LIBRARY_PATH, namespace)) {\n          final Collection<Element> pathElementsToRemove = new ArrayList<Element>();\n          //noinspection unchecked\n          for (Element pathElement : externalLibraryPathElement.getChildren(PATH_ELEMENT, namespace)) {\n            final String path = pathElement.getText();\n            final String fileName = path.substring(FileUtil.toSystemIndependentName(path).lastIndexOf(\"/\") + 1);\n            if (fileName.startsWith(\"playerglobal\") || fileName.startsWith(\"airglobal\")) {\n              continue;\n            }\n\n            result.add(path);\n            pathElementsToRemove.add(pathElement);\n          }\n\n          for (Element pathElement : pathElementsToRemove) {\n            externalLibraryPathElement.removeContent(pathElement);\n          }\n        }\n      }\n\n      if (removeIncluded) {\n        //noinspection unchecked\n        for (Element includeLibrariesElement : compilerElement.getChildren(INCLUDE_LIBRARIES, namespace)) {\n          final Collection<Element> libraryElementsToRemove = new ArrayList<Element>();\n          //noinspection unchecked\n          for (Element libraryElement : includeLibrariesElement.getChildren(LIBRARY, namespace)) {\n            result.add(libraryElement.getText());\n            libraryElementsToRemove.add(libraryElement);\n          }\n\n          for (Element pathElement : libraryElementsToRemove) {\n            includeLibrariesElement.removeContent(pathElement);\n          }\n        }\n      }\n    }\n    return result;\n  }","commit_id":"7488073db94e839d81bcf802e139c897fc16f30d","url":"https://github.com/JetBrains/intellij-plugins"},{"original_method":"public static String mergeWithCustomConfigFile(final String generatedConfigText,\n                                                 final String additionalConfigFilePath,\n                                                 final boolean makeExternalLibsMerged,\n                                                 final boolean makeIncludedLibsMerged) {\n    final File additionalConfigFile = new File(additionalConfigFilePath);\n    if (!additionalConfigFile.isFile()) {\n      return generatedConfigText;\n    }\n\n    final Document document;\n    try {\n      document = JDOMUtil.loadDocument(additionalConfigFile);\n    }\n    catch (JDOMException e) {\n      return generatedConfigText;\n    }\n    catch (IOException e) {\n      return generatedConfigText;\n    }\n\n    final Element rootElement = document.getRootElement();\n    if (!FLEX_CONFIG.equals(rootElement.getName())) {\n      return generatedConfigText;\n    }\n\n    removeSwcSpecificElementsRecursively(rootElement);\n    makeLibrariesMergedIntoCode(rootElement, makeExternalLibsMerged, makeIncludedLibsMerged);\n\n    try {\n      final Element otherRootElement = JDOMUtil.loadDocument(generatedConfigText).getRootElement();\n      assert otherRootElement != null && FLEX_CONFIG.equals(rootElement.getName()) : JDOMUtil.writeDocument(document, \"\\n\");\n\n      appendDocument(rootElement, otherRootElement);\n    }\n    catch (IOException e) {\n      assert false : e.getMessage() + \"\\n\" + generatedConfigText;\n    }\n    catch (JDOMException e) {\n      assert false : e.getMessage() + \"\\n\" + generatedConfigText;\n    }\n\n    return JDOMUtil.writeDocument(document, \"\\n\");\n  }","id":55258,"modified_method":"public static String mergeWithCustomConfigFile(final String generatedConfigText,\n                                                 final String additionalConfigFilePath,\n                                                 final boolean makeExternalLibsMerged,\n                                                 final boolean makeIncludedLibsMerged) {\n    final File additionalConfigFile = new File(additionalConfigFilePath);\n    if (!additionalConfigFile.isFile()) {\n      return generatedConfigText;\n    }\n\n    final Element rootElement;\n    try {\n      rootElement = JDOMUtil.load(additionalConfigFile);\n    }\n    catch (JDOMException e) {\n      return generatedConfigText;\n    }\n    catch (IOException e) {\n      return generatedConfigText;\n    }\n\n    if (!FLEX_CONFIG.equals(rootElement.getName())) {\n      return generatedConfigText;\n    }\n\n    removeSwcSpecificElementsRecursively(rootElement);\n    makeLibrariesMergedIntoCode(rootElement, makeExternalLibsMerged, makeIncludedLibsMerged);\n\n    try {\n      final Element otherRootElement = JDOMUtil.loadDocument(generatedConfigText).getRootElement();\n      assert FLEX_CONFIG.equals(rootElement.getName()) : JDOMUtil.writeElement(rootElement, \"\\n\");\n\n      appendDocument(rootElement, otherRootElement);\n    }\n    catch (IOException e) {\n      assert false : e.getMessage() + \"\\n\" + generatedConfigText;\n    }\n    catch (JDOMException e) {\n      assert false : e.getMessage() + \"\\n\" + generatedConfigText;\n    }\n\n    return JDOMUtil.writeElement(rootElement, \"\\n\");\n  }","commit_id":"7488073db94e839d81bcf802e139c897fc16f30d","url":"https://github.com/JetBrains/intellij-plugins"},{"original_method":"private static void appendDocument(final Element rootElement, final Element otherRootElement) {\n    final Collection<Element> toRemove = findDuplicateElementsRecursively(rootElement, otherRootElement);\n    for (Element duplicateElement : toRemove) {\n      final Element parentElement = duplicateElement.getParentElement();\n      parentElement.removeContent(duplicateElement);\n      if (parentElement.getChildren().isEmpty()) {\n        parentElement.getParentElement().removeContent(parentElement);\n      }\n    }\n\n    //noinspection unchecked\n    for (final Element otherElement : ((Iterable<Element>)otherRootElement.getChildren())) {\n      rootElement.addContent((Element)otherElement.clone());\n    }\n  }","id":55259,"modified_method":"private static void appendDocument(final Element rootElement, final Element otherRootElement) {\n    final Collection<Element> toRemove = findDuplicateElementsRecursively(rootElement, otherRootElement);\n    for (Element duplicateElement : toRemove) {\n      final Element parentElement = duplicateElement.getParentElement();\n      parentElement.removeContent(duplicateElement);\n      if (parentElement.getChildren().isEmpty()) {\n        parentElement.getParentElement().removeContent(parentElement);\n      }\n    }\n\n    //noinspection unchecked\n    for (final Element otherElement : otherRootElement.getChildren()) {\n      rootElement.addContent(otherElement.clone());\n    }\n  }","commit_id":"7488073db94e839d81bcf802e139c897fc16f30d","url":"https://github.com/JetBrains/intellij-plugins"},{"original_method":"private static void removeSwcSpecificElementsRecursively(final Element element) {\n    for (final String elementName : ELEMENTS_TO_REMOVE) {\n      element.removeChildren(elementName, element.getNamespace());\n    }\n\n    // noinspection unchecked\n    for (final Element child : (Iterable<Element>)element.getChildren()) {\n      removeSwcSpecificElementsRecursively(child);\n    }\n  }","id":55260,"modified_method":"private static void removeSwcSpecificElementsRecursively(final Element element) {\n    for (final String elementName : ELEMENTS_TO_REMOVE) {\n      element.removeChildren(elementName, element.getNamespace());\n    }\n\n    for (final Element child : element.getChildren()) {\n      removeSwcSpecificElementsRecursively(child);\n    }\n  }","commit_id":"7488073db94e839d81bcf802e139c897fc16f30d","url":"https://github.com/JetBrains/intellij-plugins"},{"original_method":"@NotNull\n  public static InfoFromConfigFile getInfoFromConfigFile(final String configFilePath) {\n    final File configFile = configFilePath.isEmpty() ? null : new File(configFilePath);\n    if (configFile == null || !configFile.isFile()) {\n      ourCache.remove(configFilePath);\n      return DEFAULT;\n    }\n\n    String canonicalPath;\n    try {\n      canonicalPath = configFile.getCanonicalPath();\n    }\n    catch (IOException e) {\n      canonicalPath = configFile.getPath();\n    }\n\n    Pair<Long, InfoFromConfigFile> data = ourCache.get(canonicalPath);\n\n    final Long currentTimestamp = configFile.lastModified();\n    final Long cachedTimestamp = data == null ? null : data.first;\n\n    if (cachedTimestamp == null || !cachedTimestamp.equals(currentTimestamp)) {\n      ourCache.remove(canonicalPath);\n\n      String mainClassPath = null;\n      String outputPath = null;\n      String targetPlayer = null;\n\n      try {\n        final Document document = JDOMUtil.loadDocument(configFile);\n        final Element rootElement = document.getRootElement();\n\n        if (rootElement != null) {\n          final Element fileSpecsElement = rootElement.getChild(\"file-specs\", rootElement.getNamespace());\n          mainClassPath = fileSpecsElement == null ? null\n                                                   : fileSpecsElement.getChildTextNormalize(\"path-element\", rootElement.getNamespace());\n          outputPath = rootElement.getChildTextNormalize(\"output\", rootElement.getNamespace());\n\n          if (outputPath != null && !FileUtil.isAbsolute(outputPath)) {\n            try {\n              outputPath = FileUtil.toSystemIndependentName(new File(configFile.getParent(), outputPath).getCanonicalPath());\n            }\n            catch (IOException e) {\n              outputPath = FileUtil.toSystemIndependentName(new File(configFile.getParent(), outputPath).getAbsolutePath());\n            }\n          }\n\n          targetPlayer = rootElement.getChildTextNormalize(\"target-player\", rootElement.getNamespace());\n        }\n      }\n      catch (IOException ignore) {/*ignore*/ }\n      catch (JDOMException ignore) {/*ignore*/}\n\n      final String outputFileName = outputPath == null ? null : PathUtilRt.getFileName(outputPath);\n      final String outputFolderPath = outputPath == null ? null : PathUtilRt.getParentPath(outputPath);\n\n      data = Pair.create(currentTimestamp,\n                         new InfoFromConfigFile(configFile, mainClassPath, outputFileName, outputFolderPath, targetPlayer));\n      ourCache.put(canonicalPath, data);\n    }\n\n    return data.second;\n  }","id":55261,"modified_method":"@NotNull\n  public static InfoFromConfigFile getInfoFromConfigFile(final String configFilePath) {\n    final File configFile = configFilePath.isEmpty() ? null : new File(configFilePath);\n    if (configFile == null || !configFile.isFile()) {\n      ourCache.remove(configFilePath);\n      return DEFAULT;\n    }\n\n    String canonicalPath;\n    try {\n      canonicalPath = configFile.getCanonicalPath();\n    }\n    catch (IOException e) {\n      canonicalPath = configFile.getPath();\n    }\n\n    Pair<Long, InfoFromConfigFile> data = ourCache.get(canonicalPath);\n\n    final Long currentTimestamp = configFile.lastModified();\n    final Long cachedTimestamp = data == null ? null : data.first;\n\n    if (cachedTimestamp == null || !cachedTimestamp.equals(currentTimestamp)) {\n      ourCache.remove(canonicalPath);\n\n      String mainClassPath = null;\n      String outputPath = null;\n      String targetPlayer = null;\n\n      try {\n        final Element rootElement = JDOMUtil.load(configFile);\n        final Element fileSpecsElement = rootElement.getChild(\"file-specs\", rootElement.getNamespace());\n        mainClassPath = fileSpecsElement == null ? null\n                                                 : fileSpecsElement.getChildTextNormalize(\"path-element\", rootElement.getNamespace());\n        outputPath = rootElement.getChildTextNormalize(\"output\", rootElement.getNamespace());\n\n        if (outputPath != null && !FileUtil.isAbsolute(outputPath)) {\n          try {\n            outputPath = FileUtil.toSystemIndependentName(new File(configFile.getParent(), outputPath).getCanonicalPath());\n          }\n          catch (IOException e) {\n            outputPath = FileUtil.toSystemIndependentName(new File(configFile.getParent(), outputPath).getAbsolutePath());\n          }\n        }\n\n        targetPlayer = rootElement.getChildTextNormalize(\"target-player\", rootElement.getNamespace());\n      }\n      catch (IOException ignore) {/*ignore*/ }\n      catch (JDOMException ignore) {/*ignore*/}\n\n      final String outputFileName = outputPath == null ? null : PathUtilRt.getFileName(outputPath);\n      final String outputFolderPath = outputPath == null ? null : PathUtilRt.getParentPath(outputPath);\n\n      data = Pair.create(currentTimestamp,\n                         new InfoFromConfigFile(configFile, mainClassPath, outputFileName, outputFolderPath, targetPlayer));\n      ourCache.put(canonicalPath, data);\n    }\n\n    return data.second;\n  }","commit_id":"7488073db94e839d81bcf802e139c897fc16f30d","url":"https://github.com/JetBrains/intellij-plugins"},{"original_method":"private synchronized static Map<String, List<String>> getSwcPathToRslUrlsMap(final String sdkHome) {\n    final String configFilePath = sdkHome + \"/frameworks/flex-config.xml\";\n    final File configFile = new File(configFilePath);\n    if (!configFile.isFile()) {\n      LOG.warn(\"File not found: \" + configFilePath);\n      ourConfigFilePathToTimestampAndSwcPathToRslUrls.remove(configFilePath);\n      return Collections.emptyMap();\n    }\n\n    Pair<Long, Map<String, List<String>>> data = ourConfigFilePathToTimestampAndSwcPathToRslUrls.get(configFilePath);\n\n    final Long currentTimestamp = configFile.lastModified();\n    final Long cachedTimestamp = data == null ? null : data.first;\n\n    if (cachedTimestamp == null || !cachedTimestamp.equals(currentTimestamp)) {\n      ourConfigFilePathToTimestampAndSwcPathToRslUrls.remove(configFilePath);\n\n      final Map<String, List<String>> swcPathToRslMap = new THashMap<String, List<String>>();\n      try {\n        final Document document = JDOMUtil.loadDocument(configFile);\n        final Element rootElement = document.getRootElement();\n        if (rootElement != null) {\n          //noinspection unchecked\n          for (Element rslElement : ((Iterable<Element>)rootElement.getChildren(\"runtime-shared-library-path\",\n                                                                                rootElement.getNamespace()))) {\n            final Element swcPathElement = rslElement.getChild(\"path-element\", rslElement.getNamespace());\n            if (swcPathElement != null) {\n              final List<String> rslUrls = new ArrayList<String>(2);\n              //noinspection unchecked\n              for (Element rslUrlElement : ((Iterable<Element>)rslElement.getChildren(\"rsl-url\", rootElement.getNamespace()))) {\n                final String rslUrl = rslUrlElement.getTextNormalize();\n                rslUrls.add(rslUrl);\n              }\n              final String swcPath = PathUtilRt.getParentPath(configFilePath) + \"/\" + swcPathElement.getTextNormalize();\n              swcPathToRslMap.put(SystemInfo.isFileSystemCaseSensitive ? swcPath : swcPath.toLowerCase(), rslUrls);\n            }\n          }\n        }\n      }\n      catch (IOException e) {\n        LOG.warn(configFilePath, e);\n      }\n      catch (JDOMException e) {\n        LOG.warn(configFilePath, e);\n      }\n\n      data = Pair.create(currentTimestamp, swcPathToRslMap);\n      ourConfigFilePathToTimestampAndSwcPathToRslUrls.put(configFilePath, data);\n    }\n\n    return data.second;\n  }","id":55262,"modified_method":"private synchronized static Map<String, List<String>> getSwcPathToRslUrlsMap(final String sdkHome) {\n    final String configFilePath = sdkHome + \"/frameworks/flex-config.xml\";\n    final File configFile = new File(configFilePath);\n    if (!configFile.isFile()) {\n      LOG.warn(\"File not found: \" + configFilePath);\n      ourConfigFilePathToTimestampAndSwcPathToRslUrls.remove(configFilePath);\n      return Collections.emptyMap();\n    }\n\n    Pair<Long, Map<String, List<String>>> data = ourConfigFilePathToTimestampAndSwcPathToRslUrls.get(configFilePath);\n\n    final Long currentTimestamp = configFile.lastModified();\n    final Long cachedTimestamp = data == null ? null : data.first;\n\n    if (cachedTimestamp == null || !cachedTimestamp.equals(currentTimestamp)) {\n      ourConfigFilePathToTimestampAndSwcPathToRslUrls.remove(configFilePath);\n\n      final Map<String, List<String>> swcPathToRslMap = new THashMap<String, List<String>>();\n      try {\n        final Element rootElement = JDOMUtil.load(configFile);\n        for (Element rslElement : rootElement.getChildren(\"runtime-shared-library-path\",\n                                                          rootElement.getNamespace())) {\n          final Element swcPathElement = rslElement.getChild(\"path-element\", rslElement.getNamespace());\n          if (swcPathElement != null) {\n            final List<String> rslUrls = new ArrayList<String>(2);\n            for (Element rslUrlElement : rslElement.getChildren(\"rsl-url\", rootElement.getNamespace())) {\n              final String rslUrl = rslUrlElement.getTextNormalize();\n              rslUrls.add(rslUrl);\n            }\n            final String swcPath = PathUtilRt.getParentPath(configFilePath) + \"/\" + swcPathElement.getTextNormalize();\n            swcPathToRslMap.put(SystemInfo.isFileSystemCaseSensitive ? swcPath : swcPath.toLowerCase(), rslUrls);\n          }\n        }\n      }\n      catch (IOException e) {\n        LOG.warn(configFilePath, e);\n      }\n      catch (JDOMException e) {\n        LOG.warn(configFilePath, e);\n      }\n\n      data = Pair.create(currentTimestamp, swcPathToRslMap);\n      ourConfigFilePathToTimestampAndSwcPathToRslUrls.put(configFilePath, data);\n    }\n\n    return data.second;\n  }","commit_id":"7488073db94e839d81bcf802e139c897fc16f30d","url":"https://github.com/JetBrains/intellij-plugins"},{"original_method":"public void testModuleJdkEditing() throws Exception {\n    final File tempDirectory = createTempDirectory();\n    ApplicationManager.getApplication().runWriteAction(new Runnable() {\n      @Override\n      public void run() {\n        final Module moduleA = createModule(\"a.iml\");\n        final Module moduleB = createModule(\"b.iml\");\n        assertEventsCount(2);\n\n        final Sdk jdk = IdeaTestUtil.getMockJdk17();\n        ProjectJdkTable.getInstance().addJdk(jdk);\n        assertEventsCount(0);\n\n        final ModifiableRootModel rootModelA = ModuleRootManager.getInstance(moduleA).getModifiableModel();\n        final ModifiableRootModel rootModelB = ModuleRootManager.getInstance(moduleB).getModifiableModel();\n        rootModelA.setSdk(jdk);\n        rootModelB.setSdk(jdk);\n        ModifiableRootModel[] rootModels = new ModifiableRootModel[]{rootModelA, rootModelB};\n        ModifiableModelCommitter.multiCommit(rootModels, ModuleManager.getInstance(rootModels[0].getProject()).getModifiableModel());\n        assertEventsCount(1);\n\n        final SdkModificator sdkModificator = jdk.getSdkModificator();\n        sdkModificator.addRoot(getVirtualFile(tempDirectory), OrderRootType.CLASSES);\n        sdkModificator.commitChanges();\n        assertEventsCount(1);\n\n        ProjectJdkTable.getInstance().removeJdk(jdk);\n        assertEventsCount(1);\n      }\n    });\n  }","id":55263,"modified_method":"public void testModuleJdkEditing() throws Exception {\n    final File tempDirectory = createTempDirectory();\n    ApplicationManager.getApplication().runWriteAction(() -> {\n      final Module moduleA = createModule(\"a.iml\");\n      final Module moduleB = createModule(\"b.iml\");\n      assertEventsCount(2);\n\n      final Sdk jdk = IdeaTestUtil.getMockJdk17();\n      ProjectJdkTable.getInstance().addJdk(jdk);\n      assertEventsCount(0);\n\n      final ModifiableRootModel rootModelA = ModuleRootManager.getInstance(moduleA).getModifiableModel();\n      final ModifiableRootModel rootModelB = ModuleRootManager.getInstance(moduleB).getModifiableModel();\n      rootModelA.setSdk(jdk);\n      rootModelB.setSdk(jdk);\n      ModifiableRootModel[] rootModels = new ModifiableRootModel[]{rootModelA, rootModelB};\n      ModifiableModelCommitter.multiCommit(rootModels, ModuleManager.getInstance(rootModels[0].getProject()).getModifiableModel());\n      assertEventsCount(1);\n\n      final SdkModificator sdkModificator = jdk.getSdkModificator();\n      sdkModificator.addRoot(getVirtualFile(tempDirectory), OrderRootType.CLASSES);\n      sdkModificator.commitChanges();\n      assertEventsCount(1);\n\n      ProjectJdkTable.getInstance().removeJdk(jdk);\n      assertEventsCount(1);\n    });\n  }","commit_id":"8ce42c3ea96060b5f23ce4a4eebc9b0db3479a97","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void testEditLibraryForModuleLoadFromXml() throws IOException {\n    final File tempDirectory = createTempDirectory();\n    ApplicationManager.getApplication().runWriteAction(new Runnable() {\n      @Override\n      public void run() {\n        File moduleFile =\n          PathManagerEx.findFileUnderProjectHome(\"java/java-tests/testData/moduleRootManager/rootsChanged/emptyModule/a.iml\", RootsChangedTest.this.getClass());\n        Module a = loadModule(moduleFile, true);\n        assertEventsCount(1);\n\n        final Sdk jdk = IdeaTestUtil.getMockJdk17();\n        ProjectJdkTable.getInstance().addJdk(jdk);\n        assertEventsCount(0);\n\n        ModuleRootModificationUtil.setModuleSdk(a, jdk);\n        assertEventsCount(1);\n\n        final SdkModificator sdkModificator = jdk.getSdkModificator();\n        sdkModificator.addRoot(getVirtualFile(tempDirectory), OrderRootType.CLASSES);\n        sdkModificator.commitChanges();\n      }\n    });\n\n    assertEventsCount(1);\n  }","id":55264,"modified_method":"public void testEditLibraryForModuleLoadFromXml() throws IOException {\n    final File tempDirectory = createTempDirectory();\n    ApplicationManager.getApplication().runWriteAction(() -> {\n      File moduleFile =\n        PathManagerEx.findFileUnderProjectHome(\"java/java-tests/testData/moduleRootManager/rootsChanged/emptyModule/a.iml\", RootsChangedTest.this.getClass());\n      Module a = loadModule(moduleFile, true);\n      assertEventsCount(1);\n\n      final Sdk jdk = IdeaTestUtil.getMockJdk17();\n      ProjectJdkTable.getInstance().addJdk(jdk);\n      assertEventsCount(0);\n\n      ModuleRootModificationUtil.setModuleSdk(a, jdk);\n      assertEventsCount(1);\n\n      final SdkModificator sdkModificator = jdk.getSdkModificator();\n      sdkModificator.addRoot(getVirtualFile(tempDirectory), OrderRootType.CLASSES);\n      sdkModificator.commitChanges();\n    });\n\n    assertEventsCount(1);\n  }","commit_id":"8ce42c3ea96060b5f23ce4a4eebc9b0db3479a97","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void testInheritedJdkEditing() throws Exception {\n    final File tempDirectory = createTempDirectory();\n    ApplicationManager.getApplication().runWriteAction(new Runnable() {\n      @Override\n      public void run() {\n        final Module moduleA = createModule(\"a.iml\");\n        final Module moduleB = createModule(\"b.iml\");\n        assertEventsCount(2);\n\n        final Sdk jdk = IdeaTestUtil.getMockJdk17(\"AAA\");\n        ProjectJdkTable.getInstance().addJdk(jdk);\n        assertEventsCount(0);\n\n        final Sdk jdkBBB = IdeaTestUtil.getMockJdk17(\"BBB\");\n        ProjectJdkTable.getInstance().addJdk(jdk);\n        assertEventsCount(0);\n\n        ProjectRootManager.getInstance(myProject).setProjectSdk(jdkBBB);\n        assertEventsCount(0);\n\n        final ModifiableRootModel rootModelA = ModuleRootManager.getInstance(moduleA).getModifiableModel();\n        final ModifiableRootModel rootModelB = ModuleRootManager.getInstance(moduleB).getModifiableModel();\n        rootModelA.inheritSdk();\n        rootModelB.inheritSdk();\n        ModifiableRootModel[] rootModels = new ModifiableRootModel[]{rootModelA, rootModelB};\n        if (rootModels.length > 0) {\n          ModifiableModelCommitter.multiCommit(rootModels, ModuleManager.getInstance(rootModels[0].getProject()).getModifiableModel());\n        }\n        assertEventsCount(1);\n\n        ProjectRootManager.getInstance(myProject).setProjectSdk(jdk);\n        assertEventsCount(1);\n\n        final SdkModificator sdkModificator = jdk.getSdkModificator();\n        sdkModificator.addRoot(getVirtualFile(tempDirectory), OrderRootType.CLASSES);\n        sdkModificator.commitChanges();\n        assertEventsCount(1);\n\n        ProjectJdkTable.getInstance().removeJdk(jdk);\n        assertEventsCount(1);\n      }\n    });\n  }","id":55265,"modified_method":"public void testInheritedJdkEditing() throws Exception {\n    final File tempDirectory = createTempDirectory();\n    ApplicationManager.getApplication().runWriteAction(() -> {\n      final Module moduleA = createModule(\"a.iml\");\n      final Module moduleB = createModule(\"b.iml\");\n      assertEventsCount(2);\n\n      final Sdk jdk = IdeaTestUtil.getMockJdk17(\"AAA\");\n      ProjectJdkTable.getInstance().addJdk(jdk);\n      assertEventsCount(0);\n\n      final Sdk jdkBBB = IdeaTestUtil.getMockJdk17(\"BBB\");\n      ProjectJdkTable.getInstance().addJdk(jdk);\n      assertEventsCount(0);\n\n      ProjectRootManager.getInstance(myProject).setProjectSdk(jdkBBB);\n      assertEventsCount(0);\n\n      final ModifiableRootModel rootModelA = ModuleRootManager.getInstance(moduleA).getModifiableModel();\n      final ModifiableRootModel rootModelB = ModuleRootManager.getInstance(moduleB).getModifiableModel();\n      rootModelA.inheritSdk();\n      rootModelB.inheritSdk();\n      ModifiableRootModel[] rootModels = new ModifiableRootModel[]{rootModelA, rootModelB};\n      if (rootModels.length > 0) {\n        ModifiableModelCommitter.multiCommit(rootModels, ModuleManager.getInstance(rootModels[0].getProject()).getModifiableModel());\n      }\n      assertEventsCount(1);\n\n      ProjectRootManager.getInstance(myProject).setProjectSdk(jdk);\n      assertEventsCount(1);\n\n      final SdkModificator sdkModificator = jdk.getSdkModificator();\n      sdkModificator.addRoot(getVirtualFile(tempDirectory), OrderRootType.CLASSES);\n      sdkModificator.commitChanges();\n      assertEventsCount(1);\n\n      ProjectJdkTable.getInstance().removeJdk(jdk);\n      assertEventsCount(1);\n    });\n  }","commit_id":"8ce42c3ea96060b5f23ce4a4eebc9b0db3479a97","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private void verifyLibraryTableEditing(final LibraryTable libraryTable) throws IOException {\n    final Module moduleA = createModule(\"a.iml\");\n    final Module moduleB = createModule(\"b.iml\");\n    assertEventsCount(2);\n\n    ApplicationManager.getApplication().runWriteAction(new Runnable() {\n      @Override\n      public void run() {\n        final Library libraryA = libraryTable.createLibrary(\"A\");\n        final Library.ModifiableModel libraryModifiableModel = libraryA.getModifiableModel();\n        libraryModifiableModel.addRoot(\"file:///a\", OrderRootType.CLASSES);\n        libraryModifiableModel.commit();\n        assertEventsCount(0);\n\n        final ModifiableRootModel rootModelA = ModuleRootManager.getInstance(moduleA).getModifiableModel();\n        final ModifiableRootModel rootModelB = ModuleRootManager.getInstance(moduleB).getModifiableModel();\n        rootModelA.addLibraryEntry(libraryA);\n        rootModelB.addLibraryEntry(libraryA);\n        rootModelA.addInvalidLibrary(\"Q\", libraryTable.getTableLevel());\n        rootModelB.addInvalidLibrary(\"Q\", libraryTable.getTableLevel());\n        ModifiableRootModel[] rootModels = new ModifiableRootModel[]{rootModelA, rootModelB};\n        if (rootModels.length > 0) {\n          ModifiableModelCommitter.multiCommit(rootModels, ModuleManager.getInstance(rootModels[0].getProject()).getModifiableModel());\n        }\n        assertEventsCount(1);\n\n        final Library.ModifiableModel libraryModifiableModel2 = libraryA.getModifiableModel();\n        final File tmpDir;\n        try {\n          tmpDir = FileUtil.createTempDirectory(getTestName(true), \"\");\n        }\n        catch (IOException e) {\n          throw new RuntimeException(e);\n        }\n\n        try {\n          final VirtualFile file = LocalFileSystem.getInstance().refreshAndFindFileByIoFile(tmpDir);\n          assertNotNull(file);\n\n          libraryModifiableModel2.addRoot(file.getUrl(), OrderRootType.CLASSES);\n          libraryModifiableModel2.commit();\n          assertEventsCount(1);\n        }\n        finally {\n          FileUtil.delete(tmpDir);\n        }\n\n        libraryTable.removeLibrary(libraryA);\n        assertEventsCount(1);\n\n        final Library libraryQ = libraryTable.createLibrary(\"Q\");\n        assertEventsCount(1);\n\n        libraryTable.removeLibrary(libraryQ);\n        assertEventsCount(1);\n      }\n    });\n  }","id":55266,"modified_method":"private void verifyLibraryTableEditing(final LibraryTable libraryTable) throws IOException {\n    final Module moduleA = createModule(\"a.iml\");\n    final Module moduleB = createModule(\"b.iml\");\n    assertEventsCount(2);\n\n    ApplicationManager.getApplication().runWriteAction(() -> {\n      final Library libraryA = libraryTable.createLibrary(\"A\");\n      final Library.ModifiableModel libraryModifiableModel = libraryA.getModifiableModel();\n      libraryModifiableModel.addRoot(\"file:///a\", OrderRootType.CLASSES);\n      libraryModifiableModel.commit();\n      assertEventsCount(0);\n\n      final ModifiableRootModel rootModelA = ModuleRootManager.getInstance(moduleA).getModifiableModel();\n      final ModifiableRootModel rootModelB = ModuleRootManager.getInstance(moduleB).getModifiableModel();\n      rootModelA.addLibraryEntry(libraryA);\n      rootModelB.addLibraryEntry(libraryA);\n      rootModelA.addInvalidLibrary(\"Q\", libraryTable.getTableLevel());\n      rootModelB.addInvalidLibrary(\"Q\", libraryTable.getTableLevel());\n      ModifiableRootModel[] rootModels = new ModifiableRootModel[]{rootModelA, rootModelB};\n      if (rootModels.length > 0) {\n        ModifiableModelCommitter.multiCommit(rootModels, ModuleManager.getInstance(rootModels[0].getProject()).getModifiableModel());\n      }\n      assertEventsCount(1);\n\n      final Library.ModifiableModel libraryModifiableModel2 = libraryA.getModifiableModel();\n      final File tmpDir;\n      try {\n        tmpDir = FileUtil.createTempDirectory(getTestName(true), \"\");\n      }\n      catch (IOException e) {\n        throw new RuntimeException(e);\n      }\n\n      try {\n        final VirtualFile file = LocalFileSystem.getInstance().refreshAndFindFileByIoFile(tmpDir);\n        assertNotNull(file);\n\n        libraryModifiableModel2.addRoot(file.getUrl(), OrderRootType.CLASSES);\n        libraryModifiableModel2.commit();\n        assertEventsCount(1);\n      }\n      finally {\n        FileUtil.delete(tmpDir);\n      }\n\n      libraryTable.removeLibrary(libraryA);\n      assertEventsCount(1);\n\n      final Library libraryQ = libraryTable.createLibrary(\"Q\");\n      assertEventsCount(1);\n\n      libraryTable.removeLibrary(libraryQ);\n      assertEventsCount(1);\n    });\n  }","commit_id":"8ce42c3ea96060b5f23ce4a4eebc9b0db3479a97","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private void verifyLibraryTableEditingInUncommittedModel(final LibraryTable libraryTable) {\n    ApplicationManager.getApplication().runWriteAction(new Runnable() {\n      @Override\n      public void run() {\n        final Module moduleA = createModule(\"a.iml\");\n        final Module moduleB = createModule(\"b.iml\");\n        assertEventsCount(2);\n\n        final Library libraryA = libraryTable.createLibrary(\"A\");\n        final Library.ModifiableModel libraryModifiableModel = libraryA.getModifiableModel();\n        libraryModifiableModel.addRoot(\"file:///a\", OrderRootType.CLASSES);\n        libraryModifiableModel.commit();\n        assertEventsCount(0);\n\n        final ModifiableRootModel rootModelA = ModuleRootManager.getInstance(moduleA).getModifiableModel();\n        final ModifiableRootModel rootModelB = ModuleRootManager.getInstance(moduleB).getModifiableModel();\n        rootModelA.addLibraryEntry(libraryA);\n        rootModelB.addLibraryEntry(libraryA);\n        final Library.ModifiableModel libraryModifiableModel2 = libraryA.getModifiableModel();\n        libraryModifiableModel2.addRoot(\"file:///b\", OrderRootType.CLASSES);\n        libraryModifiableModel2.commit();\n        assertEventsCount(0);\n\n        libraryTable.removeLibrary(libraryA);\n        assertEventsCount(0);\n\n        rootModelA.addInvalidLibrary(\"Q\", libraryTable.getTableLevel());\n        rootModelB.addInvalidLibrary(\"Q\", libraryTable.getTableLevel());\n        assertEventsCount(0);\n\n        final Library libraryQ = libraryTable.createLibrary(\"Q\");\n        assertEventsCount(0);\n\n        ModifiableRootModel[] rootModels = new ModifiableRootModel[]{rootModelA, rootModelB};\n        if (rootModels.length > 0) {\n          ModifiableModelCommitter.multiCommit(rootModels, ModuleManager.getInstance(rootModels[0].getProject()).getModifiableModel());\n        }\n        assertEventsCount(1);\n\n        libraryTable.removeLibrary(libraryQ);\n        assertEventsCount(1);\n      }\n    });\n  }","id":55267,"modified_method":"private void verifyLibraryTableEditingInUncommittedModel(final LibraryTable libraryTable) {\n    ApplicationManager.getApplication().runWriteAction(() -> {\n      final Module moduleA = createModule(\"a.iml\");\n      final Module moduleB = createModule(\"b.iml\");\n      assertEventsCount(2);\n\n      final Library libraryA = libraryTable.createLibrary(\"A\");\n      final Library.ModifiableModel libraryModifiableModel = libraryA.getModifiableModel();\n      libraryModifiableModel.addRoot(\"file:///a\", OrderRootType.CLASSES);\n      libraryModifiableModel.commit();\n      assertEventsCount(0);\n\n      final ModifiableRootModel rootModelA = ModuleRootManager.getInstance(moduleA).getModifiableModel();\n      final ModifiableRootModel rootModelB = ModuleRootManager.getInstance(moduleB).getModifiableModel();\n      rootModelA.addLibraryEntry(libraryA);\n      rootModelB.addLibraryEntry(libraryA);\n      final Library.ModifiableModel libraryModifiableModel2 = libraryA.getModifiableModel();\n      libraryModifiableModel2.addRoot(\"file:///b\", OrderRootType.CLASSES);\n      libraryModifiableModel2.commit();\n      assertEventsCount(0);\n\n      libraryTable.removeLibrary(libraryA);\n      assertEventsCount(0);\n\n      rootModelA.addInvalidLibrary(\"Q\", libraryTable.getTableLevel());\n      rootModelB.addInvalidLibrary(\"Q\", libraryTable.getTableLevel());\n      assertEventsCount(0);\n\n      final Library libraryQ = libraryTable.createLibrary(\"Q\");\n      assertEventsCount(0);\n\n      ModifiableRootModel[] rootModels = new ModifiableRootModel[]{rootModelA, rootModelB};\n      if (rootModels.length > 0) {\n        ModifiableModelCommitter.multiCommit(rootModels, ModuleManager.getInstance(rootModels[0].getProject()).getModifiableModel());\n      }\n      assertEventsCount(1);\n\n      libraryTable.removeLibrary(libraryQ);\n      assertEventsCount(1);\n    });\n  }","commit_id":"8ce42c3ea96060b5f23ce4a4eebc9b0db3479a97","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void testFetchDtd() throws Exception {\n\n    final String url = \"http://helpserver.labs.intellij.net/help/images.dtd\";\n    assertEquals(url, ExternalResourceManager.getInstance().getResourceLocation(url, getProject()));\n    myFixture.configureByText(XmlFileType.INSTANCE, \"<!DOCTYPE images SYSTEM \\\"http://helpserver.labs.intellij.net/help/ima<caret>ges.dtd\\\">\");\n    IntentionAction intention = myFixture.getAvailableIntention(XmlBundle.message(\"fetch.external.resource\"));\n    assertNotNull(intention);\n    intention.invoke(getProject(), myFixture.getEditor(), myFixture.getFile());\n    assertNotSame(url, ExternalResourceManager.getInstance().getResourceLocation(url, getProject()));\n    ApplicationManager.getApplication().runWriteAction(new Runnable() {\n      public void run() {\n        ExternalResourceManager.getInstance().removeResource(url);\n      }\n    });\n  }","id":55268,"modified_method":"public void testFetchDtd() throws Exception {\n\n    final String url = \"http://helpserver.labs.intellij.net/help/images.dtd\";\n    assertEquals(url, ExternalResourceManager.getInstance().getResourceLocation(url, getProject()));\n    myFixture.configureByText(XmlFileType.INSTANCE, \"<!DOCTYPE images SYSTEM \\\"http://helpserver.labs.intellij.net/help/ima<caret>ges.dtd\\\">\");\n    IntentionAction intention = myFixture.getAvailableIntention(XmlBundle.message(\"fetch.external.resource\"));\n    assertNotNull(intention);\n    intention.invoke(getProject(), myFixture.getEditor(), myFixture.getFile());\n    assertNotSame(url, ExternalResourceManager.getInstance().getResourceLocation(url, getProject()));\n    ApplicationManager.getApplication().runWriteAction(() -> {\n      ExternalResourceManager.getInstance().removeResource(url);\n    });\n  }","commit_id":"195b2dd048f25d53572e121f6c70e5f37850a1fc","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@After\n  public void closeProject() {\n    waitForInvocations();\n    myProject.dispose();\n    waitForInvocations();\n  }","id":55269,"modified_method":"@After\n  public void closeProject() {\n    myProject.dispose();\n  }","commit_id":"c88912961f4022a1d5d3827acb7f2f68ec5afb4f","url":"https://github.com/JetBrains/MPS"},{"original_method":"@Before\n  public void openProject() {\n    myProject = ourEnv.openProject(new File(myProjectDir));\n    make(myProject);\n    waitForInvocations();\n  }","id":55270,"modified_method":"@Before\n  public void openProject() {\n    myProject = ourEnv.openProject(new File(myProjectDir));\n    make(myProject);\n  }","commit_id":"c88912961f4022a1d5d3827acb7f2f68ec5afb4f","url":"https://github.com/JetBrains/MPS"},{"original_method":"@Override\n  public void flushAllEvents() {\n    checkInitialized();\n    ApplicationManager.getApplication().invokeAndWait(new Runnable() {\n      public void run() {\n      }\n    }, ModalityState.NON_MODAL);\n    ThreadUtils.runInUIThreadAndWait(new Runnable() {\n      public void run() {\n      }\n    });\n    ModelAccess.instance().flushEventQueue();\n  }","id":55271,"modified_method":"@Override\n  public void flushAllEvents() {\n    checkInitialized();\n    ApplicationManager.getApplication().invokeAndWait(new Runnable() {\n      public void run() {\n      }\n    }, ModalityState.NON_MODAL);\n    ModelAccess.instance().flushEventQueue();\n  }","commit_id":"c88912961f4022a1d5d3827acb7f2f68ec5afb4f","url":"https://github.com/JetBrains/MPS"},{"original_method":"@NotNull\n  private Project openProjectInIdeaEnvironment(File projectFile) {\n    if (!(projectFile.exists())) {\n      throw new RuntimeException(\"Can't find project file \" + projectFile.getAbsolutePath());\n    }\n    final ProjectManagerEx projectManager = ProjectManagerEx.getInstanceEx();\n    final String filePath = projectFile.getAbsolutePath();\n    // this is a workaround for MPS-8840 \n    final com.intellij.openapi.project.Project[] project = new com.intellij.openapi.project.Project[1];\n    final Exception[] exc = new Exception[]{null};\n    ApplicationManager.getApplication().invokeAndWait(new Runnable() {\n      public void run() {\n        try {\n          if (LOG.isInfoEnabled()) {\n            LOG.info(\"Load and open the project with path '\" + filePath + \"'\");\n          }\n          project[0] = projectManager.loadAndOpenProject(filePath);\n          // calling sync refresh for FS in order to update all modules/models loaded from the project \n          // if unit-test is executed with the \"reuse caches\" option. \n          VirtualFileManager.getInstance().syncRefresh();\n        } catch (Exception e) {\n          exc[0] = e;\n        }\n      }\n    }, ModalityState.NON_MODAL);\n    if (exc[0] != null) {\n      // this actually happens \n      throw new RuntimeException(\"ProjectManager could not load project from \" + projectFile.getAbsolutePath(), exc[0]);\n    }\n    return project[0].getComponent(MPSProject.class);\n  }","id":55272,"modified_method":"@NotNull\n  private Project openProjectInIdeaEnvironment(File projectFile) {\n    if (!(projectFile.exists())) {\n      throw new RuntimeException(\"Can't find project file \" + projectFile.getAbsolutePath());\n    }\n    final ProjectManagerEx projectManager = ProjectManagerEx.getInstanceEx();\n    final String filePath = projectFile.getAbsolutePath();\n    // this is a workaround for MPS-8840 \n    final com.intellij.openapi.project.Project[] project = new com.intellij.openapi.project.Project[1];\n    final Exception[] exc = new Exception[]{null};\n    ApplicationManager.getApplication().invokeAndWait(new Runnable() {\n      public void run() {\n        try {\n          if (LOG.isInfoEnabled()) {\n            LOG.info(\"Load and open the project with path '\" + filePath + \"'\");\n          }\n          project[0] = projectManager.loadAndOpenProject(filePath);\n          // calling sync refresh for FS in order to update all modules/models loaded from the project \n          // if unit-test is executed with the \"reuse caches\" option. \n          VirtualFileManager.getInstance().syncRefresh();\n        } catch (Exception e) {\n          exc[0] = e;\n        }\n      }\n    }, ModalityState.NON_MODAL);\n    if (exc[0] != null) {\n      throw new RuntimeException(\"ProjectManager could not load project from \" + projectFile.getAbsolutePath(), exc[0]);\n    }\n    waitForPostStartupActivities(project);\n\n    return project[0].getComponent(MPSProject.class);\n  }","commit_id":"c88912961f4022a1d5d3827acb7f2f68ec5afb4f","url":"https://github.com/JetBrains/MPS"},{"original_method":"@Override\n  public void doDispose() {\n    ThreadUtils.runInUIThreadAndWait(new Runnable() {\n      @Override\n      public void run() {\n        ApplicationManager.getApplication().runWriteAction(new Runnable() {\n          public void run() {\n            Disposer.dispose(myIdeaApplication);\n          }\n        });\n      }\n    });\n  }","id":55273,"modified_method":"@Override\n  public void doDispose() {\n    ApplicationManager.getApplication().invokeAndWait(new Runnable() {\n      @Override\n      public void run() {\n        ApplicationManager.getApplication().runWriteAction(new Runnable() {\n          public void run() {\n            Disposer.dispose(myIdeaApplication);\n          }\n        });\n      }\n    }, ModalityState.NON_MODAL);\n  }","commit_id":"c88912961f4022a1d5d3827acb7f2f68ec5afb4f","url":"https://github.com/JetBrains/MPS"},{"original_method":"/**\n   * closing the project if it has not already been closed\n   */\n  @Override\n  public void dispose() {\n    List<Project> openProjects = jetbrains.mps.project.ProjectManager.getInstance().getOpenedProjects();\n    if (openProjects.contains(this)) {\n      ApplicationManager.getApplication().invokeAndWait(() -> ProjectUtil.closeAndDispose(getProject()), ModalityState.current());\n    }\n    super.dispose();\n  }","id":55274,"modified_method":"/**\n   * closing the project if it has not already been closed\n   */\n  @Override\n  public void dispose() {\n    List<Project> openProjects = jetbrains.mps.project.ProjectManager.getInstance().getOpenedProjects();\n    if (openProjects.contains(this)) {\n      ApplicationManager.getApplication().invokeAndWait(() -> ProjectUtil.closeAndDispose(getProject()), ModalityState.NON_MODAL);\n    }\n    super.dispose();\n  }","commit_id":"c88912961f4022a1d5d3827acb7f2f68ec5afb4f","url":"https://github.com/JetBrains/MPS"},{"original_method":"public void projectClosed() {\n    checkNotDisposed();\n    myProjectManager.projectClosed(this);\n    getModelAccess().runWriteAction(new Runnable() {\n      @Override\n      public void run() {\n        new ModuleRepositoryFacade(ProjectBase.this).unregisterModules(ProjectBase.this);\n      }\n    });\n  }","id":55275,"modified_method":"public void projectClosed() {\n    checkNotDisposed();\n    myProjectManager.projectClosed(this);\n    getModelAccess().runWriteAction(() -> new ModuleRepositoryFacade(ProjectBase.this).unregisterModules(ProjectBase.this));\n  }","commit_id":"c88912961f4022a1d5d3827acb7f2f68ec5afb4f","url":"https://github.com/JetBrains/MPS"},{"original_method":"public void testMaskExclude() {\n    final String pattern1 = \"a*b.c?d\";\n    final String pattern2 = \"xxx\";\n    ApplicationManager.getApplication().runWriteAction(new Runnable() {\n      @Override\n      public void run() {\n        myFileTypeManager.setIgnoredFilesList(pattern1 + \";\" + pattern2);\n      }\n    });\n    checkIgnored(\"ab.cxd\");\n    checkIgnored(\"axb.cxd\");\n    checkIgnored(\"xxx\");\n    checkNotIgnored(\"ax.cxx\");\n    checkNotIgnored(\"ab.cd\");\n    checkNotIgnored(\"ab.c__d\");\n    checkNotIgnored(\"xxxx\");\n    checkNotIgnored(\"xx\");\n    assertTrue(myFileTypeManager.isIgnoredFilesListEqualToCurrent(pattern2 + \";\" + pattern1));\n    assertFalse(myFileTypeManager.isIgnoredFilesListEqualToCurrent(pattern2 + \";\" + \"ab.c*d\"));\n  }","id":55276,"modified_method":"public void testMaskExclude() {\n    final String pattern1 = \"a*b.c?d\";\n    final String pattern2 = \"xxx\";\n    ApplicationManager.getApplication().runWriteAction(() -> {\n      myFileTypeManager.setIgnoredFilesList(pattern1 + \";\" + pattern2);\n    });\n    checkIgnored(\"ab.cxd\");\n    checkIgnored(\"axb.cxd\");\n    checkIgnored(\"xxx\");\n    checkNotIgnored(\"ax.cxx\");\n    checkNotIgnored(\"ab.cd\");\n    checkNotIgnored(\"ab.c__d\");\n    checkNotIgnored(\"xxxx\");\n    checkNotIgnored(\"xx\");\n    assertTrue(myFileTypeManager.isIgnoredFilesListEqualToCurrent(pattern2 + \";\" + pattern1));\n    assertFalse(myFileTypeManager.isIgnoredFilesListEqualToCurrent(pattern2 + \";\" + \"ab.c*d\"));\n  }","commit_id":"5fa860a632cc0d3b03edcc185417930da7787914","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void testReassignedPredefinedFileType() throws Exception {\n    final FileType perlFileType = myFileTypeManager.getFileTypeByFileName(\"foo.pl\");\n    assertEquals(\"Perl\", perlFileType.getName());\n    assertEquals(PlainTextFileType.INSTANCE, myFileTypeManager.getFileTypeByFileName(\"foo.cgi\"));\n    ApplicationManager.getApplication().runWriteAction(new Runnable() {\n      @Override\n      public void run() {\n        myFileTypeManager.associatePattern(perlFileType, \"*.cgi\");\n      }\n    });\n\n    assertEquals(perlFileType, myFileTypeManager.getFileTypeByFileName(\"foo.cgi\"));\n\n    Element element = myFileTypeManager.getState();\n    myFileTypeManager.loadState(element);\n    myFileTypeManager.initComponent();\n    assertEquals(perlFileType, myFileTypeManager.getFileTypeByFileName(\"foo.cgi\"));\n\n    ApplicationManager.getApplication().runWriteAction(new Runnable() {\n      @Override\n      public void run() {\n        myFileTypeManager.removeAssociatedExtension(perlFileType, \"*.cgi\");\n      }\n    });\n\n    myFileTypeManager.clearForTests();\n    myFileTypeManager.initStandardFileTypes();\n    myFileTypeManager.initComponent();\n  }","id":55277,"modified_method":"public void testReassignedPredefinedFileType() throws Exception {\n    final FileType perlFileType = myFileTypeManager.getFileTypeByFileName(\"foo.pl\");\n    assertEquals(\"Perl\", perlFileType.getName());\n    assertEquals(PlainTextFileType.INSTANCE, myFileTypeManager.getFileTypeByFileName(\"foo.cgi\"));\n    ApplicationManager.getApplication().runWriteAction(() -> {\n      myFileTypeManager.associatePattern(perlFileType, \"*.cgi\");\n    });\n\n    assertEquals(perlFileType, myFileTypeManager.getFileTypeByFileName(\"foo.cgi\"));\n\n    Element element = myFileTypeManager.getState();\n    myFileTypeManager.loadState(element);\n    myFileTypeManager.initComponent();\n    assertEquals(perlFileType, myFileTypeManager.getFileTypeByFileName(\"foo.cgi\"));\n\n    ApplicationManager.getApplication().runWriteAction(() -> {\n      myFileTypeManager.removeAssociatedExtension(perlFileType, \"*.cgi\");\n    });\n\n    myFileTypeManager.clearForTests();\n    myFileTypeManager.initStandardFileTypes();\n    myFileTypeManager.initComponent();\n  }","commit_id":"5fa860a632cc0d3b03edcc185417930da7787914","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void testRemappingToInstalledPluginExtension() throws WriteExternalException, InvalidDataException {\n    ApplicationManager.getApplication().runWriteAction(new Runnable() {\n      @Override\n      public void run() {\n        myFileTypeManager.associatePattern(PlainTextFileType.INSTANCE, \"*.fromPlugin\");\n      }\n    });\n\n    Element element = myFileTypeManager.getState();\n    String s = JDOMUtil.writeElement(element);\n\n    final AbstractFileType typeFromPlugin = new AbstractFileType(new SyntaxTable());\n    PlatformTestUtil.registerExtension(FileTypeFactory.FILE_TYPE_FACTORY_EP, new FileTypeFactory() {\n      @Override\n      public void createFileTypes(@NotNull FileTypeConsumer consumer) {\n        consumer.consume(typeFromPlugin, \"fromPlugin\");\n      }\n    }, getTestRootDisposable());\n    myFileTypeManager.initStandardFileTypes();\n    myFileTypeManager.loadState(element);\n\n    myFileTypeManager.initComponent();\n    Map<FileNameMatcher, Pair<FileType, Boolean>> mappings = myFileTypeManager.getRemovedMappings();\n    assertEquals(1, mappings.size());\n    assertEquals(typeFromPlugin, mappings.values().iterator().next().first);\n  }","id":55278,"modified_method":"public void testRemappingToInstalledPluginExtension() throws WriteExternalException, InvalidDataException {\n    ApplicationManager.getApplication().runWriteAction(() -> {\n      myFileTypeManager.associatePattern(PlainTextFileType.INSTANCE, \"*.fromPlugin\");\n    });\n\n    Element element = myFileTypeManager.getState();\n    //String s = JDOMUtil.writeElement(element);\n\n    final AbstractFileType typeFromPlugin = new AbstractFileType(new SyntaxTable());\n    PlatformTestUtil.registerExtension(FileTypeFactory.FILE_TYPE_FACTORY_EP, new FileTypeFactory() {\n      @Override\n      public void createFileTypes(@NotNull FileTypeConsumer consumer) {\n        consumer.consume(typeFromPlugin, \"fromPlugin\");\n      }\n    }, getTestRootDisposable());\n    myFileTypeManager.initStandardFileTypes();\n    myFileTypeManager.loadState(element);\n\n    myFileTypeManager.initComponent();\n    Map<FileNameMatcher, Pair<FileType, Boolean>> mappings = myFileTypeManager.getRemovedMappings();\n    assertEquals(1, mappings.size());\n    assertEquals(typeFromPlugin, mappings.values().iterator().next().first);\n  }","commit_id":"5fa860a632cc0d3b03edcc185417930da7787914","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void testReassign() throws Exception {\n    myFileTypeManager.clearForTests();\n    myFileTypeManager.initStandardFileTypes();\n    myFileTypeManager.initComponent();\n\n    Element element = JDOMUtil.loadDocument(\n      \"<component name=\\\"FileTypeManager\\\" version=\\\"13\\\">\\n\" +\n      \"   <extensionMap>\\n\" +\n      \"      <mapping ext=\\\"zip\\\" type=\\\"Velocity Template files\\\" />\\n\" +\n      \"   <\/extensionMap>\\n\" +\n      \"<\/component>\").getRootElement();\n\n    myFileTypeManager.loadState(element);\n    myFileTypeManager.initComponent();\n    Map<FileNameMatcher, Pair<FileType, Boolean>> mappings = myFileTypeManager.getRemovedMappings();\n    assertEquals(1, mappings.size());\n    assertEquals(ArchiveFileType.INSTANCE, mappings.values().iterator().next().first);\n    mappings.clear();\n    assertEquals(ArchiveFileType.INSTANCE, myFileTypeManager.getFileTypeByExtension(\"zip\"));\n    Element map = myFileTypeManager.getState().getChild(\"extensionMap\");\n    if (map != null) {\n      List<Element> mapping = map.getChildren(\"mapping\");\n      assertNull(ContainerUtil.find(mapping, new Condition<Element>() {\n        @Override\n        public boolean value(Element o) {\n          return \"zip\".equals(o.getAttributeValue(\"ext\"));\n        }\n      }));\n    }\n  }","id":55279,"modified_method":"public void testReassign() throws Exception {\n    myFileTypeManager.clearForTests();\n    myFileTypeManager.initStandardFileTypes();\n    myFileTypeManager.initComponent();\n\n    Element element = JDOMUtil.loadDocument(\n      \"<component name=\\\"FileTypeManager\\\" version=\\\"13\\\">\\n\" +\n      \"   <extensionMap>\\n\" +\n      \"      <mapping ext=\\\"zip\\\" type=\\\"Velocity Template files\\\" />\\n\" +\n      \"   <\/extensionMap>\\n\" +\n      \"<\/component>\").getRootElement();\n\n    myFileTypeManager.loadState(element);\n    myFileTypeManager.initComponent();\n    Map<FileNameMatcher, Pair<FileType, Boolean>> mappings = myFileTypeManager.getRemovedMappings();\n    assertEquals(1, mappings.size());\n    assertEquals(ArchiveFileType.INSTANCE, mappings.values().iterator().next().first);\n    mappings.clear();\n    assertEquals(ArchiveFileType.INSTANCE, myFileTypeManager.getFileTypeByExtension(\"zip\"));\n    Element map = myFileTypeManager.getState().getChild(\"extensionMap\");\n    if (map != null) {\n      List<Element> mapping = map.getChildren(\"mapping\");\n      assertNull(ContainerUtil.find(mapping, o -> {\n        return \"zip\".equals(o.getAttributeValue(\"ext\"));\n      }));\n    }\n  }","commit_id":"5fa860a632cc0d3b03edcc185417930da7787914","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void testAddNewExtension() throws Exception {\n    FileTypeAssocTable<FileType> associations = new FileTypeAssocTable<FileType>();\n    associations.addAssociation(FileTypeManager.parseFromString(\"*.java\"), FileTypes.ARCHIVE);\n    associations.addAssociation(FileTypeManager.parseFromString(\"*.xyz\"), StdFileTypes.XML);\n    associations.addAssociation(FileTypeManager.parseFromString(\"SomeSpecial*.java\"), StdFileTypes.XML); // patterns should have precedence over extensions\n    assertEquals(StdFileTypes.XML, associations.findAssociatedFileType(\"sample.xyz\"));\n    assertEquals(StdFileTypes.XML, associations.findAssociatedFileType(\"SomeSpecialFile.java\"));\n    checkNotAssociated(StdFileTypes.XML, \"java\", associations);\n    checkNotAssociated(StdFileTypes.XML, \"iws\", associations);\n  }","id":55280,"modified_method":"public void testAddNewExtension() throws Exception {\n    FileTypeAssocTable<FileType> associations = new FileTypeAssocTable<>();\n    associations.addAssociation(FileTypeManager.parseFromString(\"*.java\"), FileTypes.ARCHIVE);\n    associations.addAssociation(FileTypeManager.parseFromString(\"*.xyz\"), StdFileTypes.XML);\n    associations.addAssociation(FileTypeManager.parseFromString(\"SomeSpecial*.java\"), StdFileTypes.XML); // patterns should have precedence over extensions\n    assertEquals(StdFileTypes.XML, associations.findAssociatedFileType(\"sample.xyz\"));\n    assertEquals(StdFileTypes.XML, associations.findAssociatedFileType(\"SomeSpecialFile.java\"));\n    checkNotAssociated(StdFileTypes.XML, \"java\", associations);\n    checkNotAssociated(StdFileTypes.XML, \"iws\", associations);\n  }","commit_id":"5fa860a632cc0d3b03edcc185417930da7787914","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void testPreserveUninstalledPluginAssociations() throws Exception {\n    final FileType typeFromPlugin = new FileType() {\n      @NotNull\n      @Override\n      public String getName() {\n        return \"Foo files\";\n      }\n\n      @NotNull\n      @Override\n      public String getDescription() {\n        return \"\";\n      }\n\n      @NotNull\n      @Override\n      public String getDefaultExtension() {\n        return \"fromPlugin\";\n      }\n\n      @Nullable\n      @Override\n      public Icon getIcon() {\n        return null;\n      }\n\n      @Override\n      public boolean isBinary() {\n        return false;\n      }\n\n      @Override\n      public boolean isReadOnly() {\n        return false;\n      }\n\n      @Nullable\n      @Override\n      public String getCharset(@NotNull VirtualFile file, @NotNull byte[] content) {\n        return null;\n      }\n    };\n    FileTypeFactory factory = new FileTypeFactory() {\n      @Override\n      public void createFileTypes(@NotNull FileTypeConsumer consumer) {\n        consumer.consume(typeFromPlugin);\n      }\n    };\n    Element element = myFileTypeManager.getState();\n    try {\n      myFileTypeManager.clearForTests();\n      Extensions.getRootArea().getExtensionPoint(FileTypeFactory.FILE_TYPE_FACTORY_EP).registerExtension(factory);\n      myFileTypeManager.initStandardFileTypes();\n      myFileTypeManager.loadState(element);\n      myFileTypeManager.initComponent();\n\n      ApplicationManager.getApplication().runWriteAction(new Runnable() {\n        @Override\n        public void run() {\n          myFileTypeManager.associatePattern(typeFromPlugin, \"*.foo\");\n        }\n      });\n\n\n      element = myFileTypeManager.getState();\n      //log(JDOMUtil.writeElement(element));\n\n      Extensions.getRootArea().getExtensionPoint(FileTypeFactory.FILE_TYPE_FACTORY_EP).unregisterExtension(factory);\n      myFileTypeManager.clearForTests();\n      myFileTypeManager.initStandardFileTypes();\n      myFileTypeManager.loadState(element);\n      myFileTypeManager.initComponent();\n\n      element = myFileTypeManager.getState();\n      //log(JDOMUtil.writeElement(element));\n\n      Extensions.getRootArea().getExtensionPoint(FileTypeFactory.FILE_TYPE_FACTORY_EP).registerExtension(factory);\n      myFileTypeManager.clearForTests();\n      myFileTypeManager.initStandardFileTypes();\n      myFileTypeManager.loadState(element);\n      myFileTypeManager.initComponent();\n\n      element = myFileTypeManager.getState();\n      //log(JDOMUtil.writeElement(element));\n\n      assertEquals(typeFromPlugin, myFileTypeManager.getFileTypeByFileName(\"foo.foo\"));\n    }\n    finally {\n      Extensions.getRootArea().getExtensionPoint(FileTypeFactory.FILE_TYPE_FACTORY_EP).unregisterExtension(factory);\n    }\n  }","id":55281,"modified_method":"public void testPreserveUninstalledPluginAssociations() throws Exception {\n    final FileType typeFromPlugin = new FileType() {\n      @NotNull\n      @Override\n      public String getName() {\n        return \"Foo files\";\n      }\n\n      @NotNull\n      @Override\n      public String getDescription() {\n        return \"\";\n      }\n\n      @NotNull\n      @Override\n      public String getDefaultExtension() {\n        return \"fromPlugin\";\n      }\n\n      @Nullable\n      @Override\n      public Icon getIcon() {\n        return null;\n      }\n\n      @Override\n      public boolean isBinary() {\n        return false;\n      }\n\n      @Override\n      public boolean isReadOnly() {\n        return false;\n      }\n\n      @Nullable\n      @Override\n      public String getCharset(@NotNull VirtualFile file, @NotNull byte[] content) {\n        return null;\n      }\n    };\n    FileTypeFactory factory = new FileTypeFactory() {\n      @Override\n      public void createFileTypes(@NotNull FileTypeConsumer consumer) {\n        consumer.consume(typeFromPlugin);\n      }\n    };\n    Element element = myFileTypeManager.getState();\n    try {\n      myFileTypeManager.clearForTests();\n      Extensions.getRootArea().getExtensionPoint(FileTypeFactory.FILE_TYPE_FACTORY_EP).registerExtension(factory);\n      myFileTypeManager.initStandardFileTypes();\n      myFileTypeManager.loadState(element);\n      myFileTypeManager.initComponent();\n\n      ApplicationManager.getApplication().runWriteAction(() -> {\n        myFileTypeManager.associatePattern(typeFromPlugin, \"*.foo\");\n      });\n\n\n      element = myFileTypeManager.getState();\n      //log(JDOMUtil.writeElement(element));\n\n      Extensions.getRootArea().getExtensionPoint(FileTypeFactory.FILE_TYPE_FACTORY_EP).unregisterExtension(factory);\n      myFileTypeManager.clearForTests();\n      myFileTypeManager.initStandardFileTypes();\n      myFileTypeManager.loadState(element);\n      myFileTypeManager.initComponent();\n\n      element = myFileTypeManager.getState();\n      //log(JDOMUtil.writeElement(element));\n\n      Extensions.getRootArea().getExtensionPoint(FileTypeFactory.FILE_TYPE_FACTORY_EP).registerExtension(factory);\n      myFileTypeManager.clearForTests();\n      myFileTypeManager.initStandardFileTypes();\n      myFileTypeManager.loadState(element);\n      myFileTypeManager.initComponent();\n\n      //element = myFileTypeManager.getState();\n      //log(JDOMUtil.writeElement(element));\n\n      assertEquals(typeFromPlugin, myFileTypeManager.getFileTypeByFileName(\"foo.foo\"));\n    }\n    finally {\n      Extensions.getRootArea().getExtensionPoint(FileTypeFactory.FILE_TYPE_FACTORY_EP).unregisterExtension(factory);\n    }\n  }","commit_id":"5fa860a632cc0d3b03edcc185417930da7787914","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void testExcludePerformance() {\n    ApplicationManager.getApplication().runWriteAction(new Runnable() {\n      @Override\n      public void run() {\n        myFileTypeManager.setIgnoredFilesList(\"1*2;3*4;5*6;7*8;9*0;*1;*3;*5;*6;7*;*8*\");\n      }\n    });\n    final String[] names = new String[100];\n    for (int i = 0; i < names.length; i++) {\n      String name = String.valueOf(i % 10 * 10 + i * 100 + i + 1);\n      names[i] = name + name + name + name;\n    }\n    PlatformTestUtil.startPerformanceTest(\"ignore perf\", 700, new ThrowableRunnable() {\n      @Override\n      public void run() throws Throwable {\n        for (int i=0;i<1000;i++) {\n          for (String name : names) {\n            myFileTypeManager.isFileIgnored(name);\n          }\n        }\n      }\n    }).useLegacyScaling().assertTiming();\n  }","id":55282,"modified_method":"public void testExcludePerformance() {\n    ApplicationManager.getApplication().runWriteAction(() -> {\n      myFileTypeManager.setIgnoredFilesList(\"1*2;3*4;5*6;7*8;9*0;*1;*3;*5;*6;7*;*8*\");\n    });\n    final String[] names = new String[100];\n    for (int i = 0; i < names.length; i++) {\n      String name = String.valueOf(i % 10 * 10 + i * 100 + i + 1);\n      names[i] = name + name + name + name;\n    }\n    PlatformTestUtil.startPerformanceTest(\"ignore perf\", 700, () -> {\n      for (int i=0;i<1000;i++) {\n        for (String name : names) {\n          myFileTypeManager.isFileIgnored(name);\n        }\n      }\n    }).assertTiming();\n  }","commit_id":"5fa860a632cc0d3b03edcc185417930da7787914","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void testDefaultFileType() throws Exception {\n    final String extension = \"veryRareExtension\";\n    final FileType idl = myFileTypeManager.findFileTypeByName(\"IDL\");\n    ApplicationManager.getApplication().runWriteAction(new Runnable() {\n      @Override\n      public void run() {\n        myFileTypeManager.associatePattern(idl, \"*.\" + extension);\n      }\n    });\n\n    Element element = myFileTypeManager.getState();\n    //log(JDOMUtil.writeElement(element));\n    ApplicationManager.getApplication().runWriteAction(new Runnable() {\n      @Override\n      public void run() {\n        myFileTypeManager.removeAssociatedExtension(idl, extension);\n      }\n    });\n\n    myFileTypeManager.clearForTests();\n    myFileTypeManager.initStandardFileTypes();\n    myFileTypeManager.loadState(element);\n    myFileTypeManager.initComponent();\n    FileType extensions = myFileTypeManager.getFileTypeByExtension(extension);\n    assertEquals(\"IDL\", extensions.getName());\n    ApplicationManager.getApplication().runWriteAction(new Runnable() {\n      @Override\n      public void run() {\n        myFileTypeManager.removeAssociatedExtension(idl, extension);\n        myFileTypeManager.clearForTests();\n        myFileTypeManager.initStandardFileTypes();\n        myFileTypeManager.initComponent();\n      }\n    });\n  }","id":55283,"modified_method":"public void testDefaultFileType() throws Exception {\n    final String extension = \"veryRareExtension\";\n    final FileType idl = myFileTypeManager.findFileTypeByName(\"IDL\");\n    ApplicationManager.getApplication().runWriteAction(() -> {\n      myFileTypeManager.associatePattern(idl, \"*.\" + extension);\n    });\n\n    Element element = myFileTypeManager.getState();\n    //log(JDOMUtil.writeElement(element));\n    ApplicationManager.getApplication().runWriteAction(() -> {\n      myFileTypeManager.removeAssociatedExtension(idl, extension);\n    });\n\n    myFileTypeManager.clearForTests();\n    myFileTypeManager.initStandardFileTypes();\n    myFileTypeManager.loadState(element);\n    myFileTypeManager.initComponent();\n    FileType extensions = myFileTypeManager.getFileTypeByExtension(extension);\n    assertEquals(\"IDL\", extensions.getName());\n    ApplicationManager.getApplication().runWriteAction(() -> {\n      myFileTypeManager.removeAssociatedExtension(idl, extension);\n      myFileTypeManager.clearForTests();\n      myFileTypeManager.initStandardFileTypes();\n      myFileTypeManager.initComponent();\n    });\n  }","commit_id":"5fa860a632cc0d3b03edcc185417930da7787914","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Override\n  protected void tearDown() throws Exception {\n    FileTypeManagerImpl.reDetectAsync(false);\n    ApplicationManager.getApplication().runWriteAction(new Runnable() {\n      @Override\n      public void run() {\n        myFileTypeManager.setIgnoredFilesList(myOldIgnoredFilesList);\n      }\n    });\n    super.tearDown();\n  }","id":55284,"modified_method":"@Override\n  protected void tearDown() throws Exception {\n    FileTypeManagerImpl.reDetectAsync(false);\n    ApplicationManager.getApplication().runWriteAction(() -> {\n      myFileTypeManager.setIgnoredFilesList(myOldIgnoredFilesList);\n    });\n    super.tearDown();\n  }","commit_id":"5fa860a632cc0d3b03edcc185417930da7787914","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void testIgnoreOrder() {\n    final FileTypeManagerEx manager = FileTypeManagerEx.getInstanceEx();\n    ApplicationManager.getApplication().runWriteAction(new Runnable() {\n      @Override\n      public void run() {\n        manager.setIgnoredFilesList(\"a;b;\");\n      }\n    });\n    assertEquals(\"a;b;\", manager.getIgnoredFilesList());\n    ApplicationManager.getApplication().runWriteAction(new Runnable() {\n      @Override\n      public void run() {\n        manager.setIgnoredFilesList(\"b;a;\");\n      }\n    });\n    assertEquals(\"b;a;\", manager.getIgnoredFilesList());\n  }","id":55285,"modified_method":"public void testIgnoreOrder() {\n    final FileTypeManagerEx manager = FileTypeManagerEx.getInstanceEx();\n    ApplicationManager.getApplication().runWriteAction(() -> {\n      manager.setIgnoredFilesList(\"a;b;\");\n    });\n    assertEquals(\"a;b;\", manager.getIgnoredFilesList());\n    ApplicationManager.getApplication().runWriteAction(() -> {\n      manager.setIgnoredFilesList(\"b;a;\");\n    });\n    assertEquals(\"b;a;\", manager.getIgnoredFilesList());\n  }","commit_id":"5fa860a632cc0d3b03edcc185417930da7787914","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void testGetUncommittedDocuments_documentNotRegistered() throws Exception {\n    final Document document = new MockDocument();\n\n    WriteCommandAction.runWriteCommandAction(null, new Runnable() {\n      @Override\n      public void run() {\n        changeDocument(document, PsiDocumentManagerImplTest.this.getPsiDocumentManager());\n      }\n    });\n\n\n    assertEquals(0, getPsiDocumentManager().getUncommittedDocuments().length);\n  }","id":55286,"modified_method":"public void testGetUncommittedDocuments_documentNotRegistered() throws Exception {\n    final Document document = new MockDocument();\n\n    WriteCommandAction.runWriteCommandAction(null, () -> {\n      changeDocument(document, PsiDocumentManagerImplTest.this.getPsiDocumentManager());\n    });\n\n\n    assertEquals(0, getPsiDocumentManager().getUncommittedDocuments().length);\n  }","commit_id":"e9f877a04143a82c1c465fc887e5761d36a182b7","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void testCommitAllDocument_RemovesFromUncommittedList() throws Exception {\n    PsiFile file = getPsiManager().findFile(createFile());\n\n    final Document document = getPsiDocumentManager().getDocument(file);\n\n    WriteCommandAction.runWriteCommandAction(null, new Runnable() {\n      @Override\n      public void run() {\n        changeDocument(document, getPsiDocumentManager());\n      }\n    });\n\n\n    getPsiDocumentManager().commitAllDocuments();\n    assertEquals(0, getPsiDocumentManager().getUncommittedDocuments().length);\n  }","id":55287,"modified_method":"public void testCommitAllDocument_RemovesFromUncommittedList() throws Exception {\n    PsiFile file = getPsiManager().findFile(createFile());\n\n    final Document document = getPsiDocumentManager().getDocument(file);\n\n    WriteCommandAction.runWriteCommandAction(null, () -> {\n      changeDocument(document, getPsiDocumentManager());\n    });\n\n\n    getPsiDocumentManager().commitAllDocuments();\n    assertEquals(0, getPsiDocumentManager().getUncommittedDocuments().length);\n  }","commit_id":"e9f877a04143a82c1c465fc887e5761d36a182b7","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void testReparseDoesNotModifyDocument() throws Exception {\n    VirtualFile file = createTempFile(\"txt\", null, \"1\\n2\\n3\\n\", Charset.forName(\"UTF-8\"));\n    file.putUserData(TrailingSpacesStripper.OVERRIDE_STRIP_TRAILING_SPACES_KEY, EditorSettingsExternalizable.STRIP_TRAILING_SPACES_CHANGED);\n    final Document document = FileDocumentManager.getInstance().getDocument(file);\n    assertNotNull(document);\n    WriteCommandAction.runWriteCommandAction(myProject, new Runnable() {\n      @Override\n      public void run() {\n        document.insertString(document.getTextLength(), \" \");\n      }\n    });\n    \n    PsiDocumentManager.getInstance(myProject).reparseFiles(Collections.singleton(file), false);\n    assertEquals(\"1\\n2\\n3\\n \", VfsUtilCore.loadText(file));\n\n    WriteCommandAction.runWriteCommandAction(myProject, new Runnable() {\n      @Override\n      public void run() {\n        document.insertString(0, \"-\");\n      }\n    });\n    FileDocumentManager.getInstance().saveDocument(document);\n    assertEquals(\"-1\\n2\\n3\\n\", VfsUtilCore.loadText(file));\n  }","id":55288,"modified_method":"public void testReparseDoesNotModifyDocument() throws Exception {\n    VirtualFile file = createTempFile(\"txt\", null, \"1\\n2\\n3\\n\", Charset.forName(\"UTF-8\"));\n    file.putUserData(TrailingSpacesStripper.OVERRIDE_STRIP_TRAILING_SPACES_KEY, EditorSettingsExternalizable.STRIP_TRAILING_SPACES_CHANGED);\n    final Document document = FileDocumentManager.getInstance().getDocument(file);\n    assertNotNull(document);\n    WriteCommandAction.runWriteCommandAction(myProject, () -> {\n      document.insertString(document.getTextLength(), \" \");\n    });\n    \n    PsiDocumentManager.getInstance(myProject).reparseFiles(Collections.singleton(file), false);\n    assertEquals(\"1\\n2\\n3\\n \", VfsUtilCore.loadText(file));\n\n    WriteCommandAction.runWriteCommandAction(myProject, () -> {\n      document.insertString(0, \"-\");\n    });\n    FileDocumentManager.getInstance().saveDocument(document);\n    assertEquals(\"-1\\n2\\n3\\n\", VfsUtilCore.loadText(file));\n  }","commit_id":"e9f877a04143a82c1c465fc887e5761d36a182b7","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void testCommitDocumentInModalDialog() throws IOException {\n    VirtualFile vFile = getVirtualFile(createTempFile(\"a.txt\", \"abc\"));\n    PsiFile psiFile = getPsiManager().findFile(vFile);\n    final Document document = getPsiDocumentManager().getDocument(psiFile);\n\n    final DialogWrapper dialog = new DialogWrapper(getProject()) {\n      @Nullable\n      @Override\n      protected JComponent createCenterPanel() {\n        return null;\n      }\n    };\n\n    disposeOnTearDown(new Disposable() {\n      @Override\n      public void dispose() {\n        dialog.close(DialogWrapper.OK_EXIT_CODE);\n      }\n    });\n    ApplicationManager.getApplication().runWriteAction(new Runnable() {\n      @Override\n      public void run() {\n        // commit thread is paused\n        document.setText(\"xx\");\n\n        LaterInvocator.enterModal(dialog);\n      }\n    });\n    assertNotSame(ModalityState.NON_MODAL, ApplicationManager.getApplication().getCurrentModalityState());\n\n    long start = System.currentTimeMillis();\n    while (System.currentTimeMillis() - start < 10000) {\n      UIUtil.dispatchAllInvocationEvents();\n      // must not be committed until exit modal dialog\n      assertFalse(getPsiDocumentManager().isCommitted(document));\n    }\n    LaterInvocator.leaveModal(dialog);\n    assertEquals(ModalityState.NON_MODAL, ApplicationManager.getApplication().getCurrentModalityState());\n\n    start = System.currentTimeMillis();\n\n    // must committ\n    while (System.currentTimeMillis() - start < 10000 && !getPsiDocumentManager().isCommitted(document)) {\n      UIUtil.dispatchAllInvocationEvents();\n    }\n\n    assertTrue(getPsiDocumentManager().isCommitted(document));\n\n\n\n    // check that inside modal dialog commit is possible\n    ApplicationManager.getApplication().runWriteAction(new Runnable() {\n      @Override\n      public void run() {\n        // commit thread is paused\n\n        LaterInvocator.enterModal(dialog);\n        document.setText(\"yyy\");\n      }\n    });\n    assertNotSame(ModalityState.NON_MODAL, ApplicationManager.getApplication().getCurrentModalityState());\n\n    // must committ\n    while (System.currentTimeMillis() - start < 10000 && !getPsiDocumentManager().isCommitted(document)) {\n      UIUtil.dispatchAllInvocationEvents();\n    }\n\n    assertTrue(getPsiDocumentManager().isCommitted(document));\n    LaterInvocator.leaveModal(dialog);\n  }","id":55289,"modified_method":"public void testCommitDocumentInModalDialog() throws IOException {\n    VirtualFile vFile = getVirtualFile(createTempFile(\"a.txt\", \"abc\"));\n    PsiFile psiFile = getPsiManager().findFile(vFile);\n    final Document document = getPsiDocumentManager().getDocument(psiFile);\n\n    final DialogWrapper dialog = new DialogWrapper(getProject()) {\n      @Nullable\n      @Override\n      protected JComponent createCenterPanel() {\n        return null;\n      }\n    };\n\n    disposeOnTearDown(() -> dialog.close(DialogWrapper.OK_EXIT_CODE));\n    ApplicationManager.getApplication().runWriteAction(() -> {\n      // commit thread is paused\n      document.setText(\"xx\");\n\n      LaterInvocator.enterModal(dialog);\n    });\n    assertNotSame(ModalityState.NON_MODAL, ApplicationManager.getApplication().getCurrentModalityState());\n\n    long start = System.currentTimeMillis();\n    while (System.currentTimeMillis() - start < 10000) {\n      UIUtil.dispatchAllInvocationEvents();\n      // must not be committed until exit modal dialog\n      assertFalse(getPsiDocumentManager().isCommitted(document));\n    }\n    LaterInvocator.leaveModal(dialog);\n    assertEquals(ModalityState.NON_MODAL, ApplicationManager.getApplication().getCurrentModalityState());\n\n    start = System.currentTimeMillis();\n\n    // must committ\n    while (System.currentTimeMillis() - start < 10000 && !getPsiDocumentManager().isCommitted(document)) {\n      UIUtil.dispatchAllInvocationEvents();\n    }\n\n    assertTrue(getPsiDocumentManager().isCommitted(document));\n\n\n\n    // check that inside modal dialog commit is possible\n    ApplicationManager.getApplication().runWriteAction(() -> {\n      // commit thread is paused\n\n      LaterInvocator.enterModal(dialog);\n      document.setText(\"yyy\");\n    });\n    assertNotSame(ModalityState.NON_MODAL, ApplicationManager.getApplication().getCurrentModalityState());\n\n    // must committ\n    while (System.currentTimeMillis() - start < 10000 && !getPsiDocumentManager().isCommitted(document)) {\n      UIUtil.dispatchAllInvocationEvents();\n    }\n\n    assertTrue(getPsiDocumentManager().isCommitted(document));\n    LaterInvocator.leaveModal(dialog);\n  }","commit_id":"e9f877a04143a82c1c465fc887e5761d36a182b7","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void testCommitInBackground() {\n    PsiFile file = getPsiManager().findFile(createFile());\n    assertNotNull(file);\n    assertTrue(file.isPhysical());\n    final Document document = getPsiDocumentManager().getDocument(file);\n    assertNotNull(document);\n\n    final Semaphore semaphore = new Semaphore();\n    semaphore.down();\n    getPsiDocumentManager().performWhenAllCommitted(new Runnable() {\n      @Override\n      public void run() {\n        assertTrue(getPsiDocumentManager().isCommitted(document));\n        semaphore.up();\n      }\n    });\n    waitAndPump(semaphore, TIMEOUT);\n    assertTrue(getPsiDocumentManager().isCommitted(document));\n\n    WriteCommandAction.runWriteCommandAction(null, new Runnable() {\n      @Override\n      public void run() {\n        document.insertString(0, \"class X {}\");\n      }\n    });\n\n    semaphore.down();\n    getPsiDocumentManager().performWhenAllCommitted(new Runnable() {\n      @Override\n      public void run() {\n        assertTrue(getPsiDocumentManager().isCommitted(document));\n        semaphore.up();\n      }\n    });\n    waitAndPump(semaphore, TIMEOUT);\n    assertTrue(getPsiDocumentManager().isCommitted(document));\n\n    final AtomicInteger count = new AtomicInteger();\n    final Runnable action = new Runnable() {\n      @Override\n      public void run() {\n        count.incrementAndGet();\n      }\n    };\n\n    WriteCommandAction.runWriteCommandAction(null, new Runnable() {\n      @Override\n      public void run() {\n        document.insertString(0, \"/**/\");\n        boolean executed = getPsiDocumentManager().cancelAndRunWhenAllCommitted(\"xxx\", action);\n        assertFalse(executed);\n        executed = getPsiDocumentManager().cancelAndRunWhenAllCommitted(\"xxx\", action);\n        assertFalse(executed);\n        assertEquals(0, count.get());\n      }\n    });\n\n    while (!getPsiDocumentManager().isCommitted(document)) {\n      UIUtil.dispatchAllInvocationEvents();\n    }\n    assertTrue(getPsiDocumentManager().isCommitted(document));\n    assertEquals(1, count.get());\n\n    count.set(0);\n    WriteCommandAction.runWriteCommandAction(null, new Runnable() {\n      @Override\n      public void run() {\n        document.insertString(0, \"/**/\");\n        boolean executed = getPsiDocumentManager().performWhenAllCommitted(action);\n        assertFalse(executed);\n        executed = getPsiDocumentManager().performWhenAllCommitted(action);\n        assertFalse(executed);\n        assertEquals(0, count.get());\n      }\n    });\n\n    while (!getPsiDocumentManager().isCommitted(document)) {\n      UIUtil.dispatchAllInvocationEvents();\n    }\n    assertTrue(getPsiDocumentManager().isCommitted(document));\n    assertEquals(2, count.get());\n  }","id":55290,"modified_method":"public void testCommitInBackground() {\n    PsiFile file = getPsiManager().findFile(createFile());\n    assertNotNull(file);\n    assertTrue(file.isPhysical());\n    final Document document = getPsiDocumentManager().getDocument(file);\n    assertNotNull(document);\n\n    final Semaphore semaphore = new Semaphore();\n    semaphore.down();\n    getPsiDocumentManager().performWhenAllCommitted(() -> {\n      assertTrue(getPsiDocumentManager().isCommitted(document));\n      semaphore.up();\n    });\n    waitAndPump(semaphore, TIMEOUT);\n    assertTrue(getPsiDocumentManager().isCommitted(document));\n\n    WriteCommandAction.runWriteCommandAction(null, () -> {\n      document.insertString(0, \"class X {}\");\n    });\n\n    semaphore.down();\n    getPsiDocumentManager().performWhenAllCommitted(() -> {\n      assertTrue(getPsiDocumentManager().isCommitted(document));\n      semaphore.up();\n    });\n    waitAndPump(semaphore, TIMEOUT);\n    assertTrue(getPsiDocumentManager().isCommitted(document));\n\n    final AtomicInteger count = new AtomicInteger();\n\n    WriteCommandAction.runWriteCommandAction(null, () -> {\n      document.insertString(0, \"/**/\");\n      boolean executed = getPsiDocumentManager().cancelAndRunWhenAllCommitted(\"xxx\", count::incrementAndGet);\n      assertFalse(executed);\n      executed = getPsiDocumentManager().cancelAndRunWhenAllCommitted(\"xxx\", count::incrementAndGet);\n      assertFalse(executed);\n      assertEquals(0, count.get());\n    });\n\n    while (!getPsiDocumentManager().isCommitted(document)) {\n      UIUtil.dispatchAllInvocationEvents();\n    }\n    assertTrue(getPsiDocumentManager().isCommitted(document));\n    assertEquals(1, count.get());\n\n    count.set(0);\n    WriteCommandAction.runWriteCommandAction(null, () -> {\n      document.insertString(0, \"/**/\");\n      boolean executed = getPsiDocumentManager().performWhenAllCommitted(count::incrementAndGet);\n      assertFalse(executed);\n      executed = getPsiDocumentManager().performWhenAllCommitted(count::incrementAndGet);\n      assertFalse(executed);\n      assertEquals(0, count.get());\n    });\n\n    while (!getPsiDocumentManager().isCommitted(document)) {\n      UIUtil.dispatchAllInvocationEvents();\n    }\n    assertTrue(getPsiDocumentManager().isCommitted(document));\n    assertEquals(2, count.get());\n  }","commit_id":"e9f877a04143a82c1c465fc887e5761d36a182b7","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void testCommitDocument_RemovesFromUncommittedList() throws Exception {\n    PsiFile file = getPsiManager().findFile(createFile());\n\n    final Document document = getPsiDocumentManager().getDocument(file);\n\n    WriteCommandAction.runWriteCommandAction(null, new Runnable() {\n      @Override\n      public void run() {\n        changeDocument(document, PsiDocumentManagerImplTest.this.getPsiDocumentManager());\n      }\n    });\n\n\n    getPsiDocumentManager().commitDocument(document);\n    assertEquals(0, getPsiDocumentManager().getUncommittedDocuments().length);\n  }","id":55291,"modified_method":"public void testCommitDocument_RemovesFromUncommittedList() throws Exception {\n    PsiFile file = getPsiManager().findFile(createFile());\n\n    final Document document = getPsiDocumentManager().getDocument(file);\n\n    WriteCommandAction.runWriteCommandAction(null, () -> {\n      changeDocument(document, PsiDocumentManagerImplTest.this.getPsiDocumentManager());\n    });\n\n\n    getPsiDocumentManager().commitDocument(document);\n    assertEquals(0, getPsiDocumentManager().getUncommittedDocuments().length);\n  }","commit_id":"e9f877a04143a82c1c465fc887e5761d36a182b7","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void testDocumentFromAlienProjectDoesNotEndUpInMyUncommittedList() throws Exception {\n    PsiFile file = getPsiManager().findFile(createFile());\n\n    final Document document = getPsiDocumentManager().getDocument(file);\n\n    File temp = createTempDirectory();\n    final Project alienProject = createProject(temp + \"/alien.ipr\", DebugUtil.currentStackTrace());\n    boolean succ2 = ProjectManagerEx.getInstanceEx().openProject(alienProject);\n    assertTrue(succ2);\n    UIUtil.dispatchAllInvocationEvents(); // startup activities\n\n    try {\n      PsiManager alienManager = PsiManager.getInstance(alienProject);\n      final String alienText = \"alien\";\n\n      LightVirtualFile alienVirt = new LightVirtualFile(\"foo.txt\", alienText);\n      final PsiFile alienFile = alienManager.findFile(alienVirt);\n      final PsiDocumentManagerImpl alienDocManager = (PsiDocumentManagerImpl)PsiDocumentManager.getInstance(alienProject);\n      final Document alienDocument = alienDocManager.getDocument(alienFile);\n      //alienDocument.putUserData(CACHED_VIEW_PROVIDER, new MockFileViewProvider(alienFile));\n      assertEquals(0, alienDocManager.getUncommittedDocuments().length);\n      assertEquals(0, getPsiDocumentManager().getUncommittedDocuments().length);\n\n      WriteCommandAction.runWriteCommandAction(null, new Runnable() {\n        @Override\n        public void run() {\n          changeDocument(alienDocument, PsiDocumentManagerImplTest.this.getPsiDocumentManager());\n          assertEquals(0, getPsiDocumentManager().getUncommittedDocuments().length);\n          assertEquals(0, alienDocManager.getUncommittedDocuments().length);\n\n          changeDocument(alienDocument, alienDocManager);\n          assertEquals(0, getPsiDocumentManager().getUncommittedDocuments().length);\n          assertEquals(1, alienDocManager.getUncommittedDocuments().length);\n\n          changeDocument(document, PsiDocumentManagerImplTest.this.getPsiDocumentManager());\n          assertEquals(1, getPsiDocumentManager().getUncommittedDocuments().length);\n          assertEquals(1, alienDocManager.getUncommittedDocuments().length);\n\n          changeDocument(document, alienDocManager);\n          assertEquals(1, getPsiDocumentManager().getUncommittedDocuments().length);\n          assertEquals(1, alienDocManager.getUncommittedDocuments().length);\n        }\n      });\n    }\n    finally {\n      ProjectUtil.closeAndDispose(alienProject);\n    }\n  }","id":55292,"modified_method":"public void testDocumentFromAlienProjectDoesNotEndUpInMyUncommittedList() throws Exception {\n    PsiFile file = getPsiManager().findFile(createFile());\n\n    final Document document = getPsiDocumentManager().getDocument(file);\n\n    File temp = createTempDirectory();\n    final Project alienProject = createProject(temp + \"/alien.ipr\", DebugUtil.currentStackTrace());\n    boolean succ2 = ProjectManagerEx.getInstanceEx().openProject(alienProject);\n    assertTrue(succ2);\n    UIUtil.dispatchAllInvocationEvents(); // startup activities\n\n    try {\n      PsiManager alienManager = PsiManager.getInstance(alienProject);\n      final String alienText = \"alien\";\n\n      LightVirtualFile alienVirt = new LightVirtualFile(\"foo.txt\", alienText);\n      final PsiFile alienFile = alienManager.findFile(alienVirt);\n      final PsiDocumentManagerImpl alienDocManager = (PsiDocumentManagerImpl)PsiDocumentManager.getInstance(alienProject);\n      final Document alienDocument = alienDocManager.getDocument(alienFile);\n      //alienDocument.putUserData(CACHED_VIEW_PROVIDER, new MockFileViewProvider(alienFile));\n      assertEquals(0, alienDocManager.getUncommittedDocuments().length);\n      assertEquals(0, getPsiDocumentManager().getUncommittedDocuments().length);\n\n      WriteCommandAction.runWriteCommandAction(null, () -> {\n        changeDocument(alienDocument, PsiDocumentManagerImplTest.this.getPsiDocumentManager());\n        assertEquals(0, getPsiDocumentManager().getUncommittedDocuments().length);\n        assertEquals(0, alienDocManager.getUncommittedDocuments().length);\n\n        changeDocument(alienDocument, alienDocManager);\n        assertEquals(0, getPsiDocumentManager().getUncommittedDocuments().length);\n        assertEquals(1, alienDocManager.getUncommittedDocuments().length);\n\n        changeDocument(document, PsiDocumentManagerImplTest.this.getPsiDocumentManager());\n        assertEquals(1, getPsiDocumentManager().getUncommittedDocuments().length);\n        assertEquals(1, alienDocManager.getUncommittedDocuments().length);\n\n        changeDocument(document, alienDocManager);\n        assertEquals(1, getPsiDocumentManager().getUncommittedDocuments().length);\n        assertEquals(1, alienDocManager.getUncommittedDocuments().length);\n      });\n    }\n    finally {\n      ProjectUtil.closeAndDispose(alienProject);\n    }\n  }","commit_id":"e9f877a04143a82c1c465fc887e5761d36a182b7","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void testCommitThreadGetSuspendedDuringWriteActions() {\n    final DocumentCommitThread commitThread = DocumentCommitThread.getInstance();\n    assertTrue(commitThread.isEnabled());\n    WriteCommandAction.runWriteCommandAction(null, new Runnable() {\n      @Override\n      public void run() {\n        if (commitThread.isEnabled()) {\n          System.err.println(\"commitThread: \"+commitThread + \";\\n\"+commitThread.log+\";\\n\"+ThreadDumper.dumpThreadsToString());\n        }\n        assertFalse(commitThread.isEnabled());\n        WriteCommandAction.runWriteCommandAction(null, new Runnable() {\n          @Override\n          public void run() {\n            assertFalse(commitThread.isEnabled());\n          }\n        });\n        assertFalse(commitThread.isEnabled());\n      }\n    });\n    assertTrue(commitThread.isEnabled());\n  }","id":55293,"modified_method":"public void testCommitThreadGetSuspendedDuringWriteActions() {\n    final DocumentCommitThread commitThread = DocumentCommitThread.getInstance();\n    assertTrue(commitThread.isEnabled());\n    WriteCommandAction.runWriteCommandAction(null, () -> {\n      if (commitThread.isEnabled()) {\n        System.err.println(\"commitThread: \"+commitThread + \";\\n\"+commitThread.log+\";\\n\"+ThreadDumper.dumpThreadsToString());\n      }\n      assertFalse(commitThread.isEnabled());\n      WriteCommandAction.runWriteCommandAction(null, () -> {\n        assertFalse(commitThread.isEnabled());\n      });\n      assertFalse(commitThread.isEnabled());\n    });\n    assertTrue(commitThread.isEnabled());\n  }","commit_id":"e9f877a04143a82c1c465fc887e5761d36a182b7","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void testGetUncommittedDocuments_documentChanged_DontProcessEvents() throws Exception {\n    final PsiFile file = getPsiManager().findFile(createFile());\n\n    final Document document = getPsiDocumentManager().getDocument(file);\n\n    WriteCommandAction.runWriteCommandAction(null, new Runnable() {\n      @Override\n      public void run() {\n        getPsiDocumentManager().getSynchronizer().performAtomically(file, new Runnable() {\n          @Override\n          public void run() {\n            changeDocument(document, PsiDocumentManagerImplTest.this.getPsiDocumentManager());\n          }\n        });\n      }\n    });\n\n\n    assertEquals(0, getPsiDocumentManager().getUncommittedDocuments().length);\n  }","id":55294,"modified_method":"public void testGetUncommittedDocuments_documentChanged_DontProcessEvents() throws Exception {\n    final PsiFile file = getPsiManager().findFile(createFile());\n\n    final Document document = getPsiDocumentManager().getDocument(file);\n\n    WriteCommandAction.runWriteCommandAction(null, () -> {\n      getPsiDocumentManager().getSynchronizer().performAtomically(file, () -> changeDocument(document, PsiDocumentManagerImplTest.this.getPsiDocumentManager()));\n    });\n\n\n    assertEquals(0, getPsiDocumentManager().getUncommittedDocuments().length);\n  }","commit_id":"e9f877a04143a82c1c465fc887e5761d36a182b7","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private void makeFileTooLarge(final VirtualFile vFile) throws Exception {\n    WriteCommandAction.runWriteCommandAction(myProject, new ThrowableComputable<Object, Exception>() {\n      @Override\n      public Object compute() throws Exception {\n        VfsUtil.saveText(vFile, StringUtil.repeat(\"a\", FileUtilRt.LARGE_FOR_CONTENT_LOADING + 1));\n        PsiDocumentManager.getInstance(getProject()).commitAllDocuments();\n        return null;\n      }\n    });\n  }","id":55295,"modified_method":"private void makeFileTooLarge(final VirtualFile vFile) throws Exception {\n    WriteCommandAction.runWriteCommandAction(myProject, (ThrowableComputable<Object, Exception>)() -> {\n      VfsUtil.saveText(vFile, StringUtil.repeat(\"a\", FileUtilRt.LARGE_FOR_CONTENT_LOADING + 1));\n      PsiDocumentManager.getInstance(getProject()).commitAllDocuments();\n      return null;\n    });\n  }","commit_id":"e9f877a04143a82c1c465fc887e5761d36a182b7","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void testDocumentFromAlienProjectGetsCommittedInBackground() throws Exception {\n    LightVirtualFile virtualFile = createFile();\n    PsiFile file = getPsiManager().findFile(virtualFile);\n\n    final Document document = getPsiDocumentManager().getDocument(file);\n\n    File temp = createTempDirectory();\n    final Project alienProject = createProject(temp + \"/alien.ipr\", DebugUtil.currentStackTrace());\n    boolean succ2 = ProjectManagerEx.getInstanceEx().openProject(alienProject);\n    assertTrue(succ2);\n    UIUtil.dispatchAllInvocationEvents(); // startup activities\n\n    try {\n      PsiManager alienManager = PsiManager.getInstance(alienProject);\n\n      final PsiFile alienFile = alienManager.findFile(virtualFile);\n      assertNotNull(alienFile);\n      final PsiDocumentManagerImpl alienDocManager = (PsiDocumentManagerImpl)PsiDocumentManager.getInstance(alienProject);\n      final Document alienDocument = alienDocManager.getDocument(alienFile);\n      assertSame(document, alienDocument);\n      assertEquals(0, alienDocManager.getUncommittedDocuments().length);\n      assertEquals(0, getPsiDocumentManager().getUncommittedDocuments().length);\n\n      WriteCommandAction.runWriteCommandAction(null, new Runnable() {\n        @Override\n        public void run() {\n          document.setText(\"xxx\");\n          assertOrderedEquals(getPsiDocumentManager().getUncommittedDocuments(), document);\n          assertOrderedEquals(alienDocManager.getUncommittedDocuments(), alienDocument);\n        }\n      });\n      assertEquals(\"xxx\", document.getText());\n      assertEquals(\"xxx\", alienDocument.getText());\n\n      long t1 = System.currentTimeMillis() + TIMEOUT;\n      while (!getPsiDocumentManager().isCommitted(document) && System.currentTimeMillis() < t1) {\n        UIUtil.dispatchAllInvocationEvents();\n      }\n      assertTrue(\"Still not committed: \" + document, getPsiDocumentManager().isCommitted(document));\n\n      long t2 = System.currentTimeMillis() + TIMEOUT;\n      while (!alienDocManager.isCommitted(alienDocument) && System.currentTimeMillis() < t2) {\n        UIUtil.dispatchAllInvocationEvents();\n      }\n      assertTrue(\"Still not committed: \" + alienDocument, alienDocManager.isCommitted(alienDocument));\n    }\n    finally {\n      ProjectUtil.closeAndDispose(alienProject);\n    }\n  }","id":55296,"modified_method":"public void testDocumentFromAlienProjectGetsCommittedInBackground() throws Exception {\n    LightVirtualFile virtualFile = createFile();\n    PsiFile file = getPsiManager().findFile(virtualFile);\n\n    final Document document = getPsiDocumentManager().getDocument(file);\n\n    File temp = createTempDirectory();\n    final Project alienProject = createProject(temp + \"/alien.ipr\", DebugUtil.currentStackTrace());\n    boolean succ2 = ProjectManagerEx.getInstanceEx().openProject(alienProject);\n    assertTrue(succ2);\n    UIUtil.dispatchAllInvocationEvents(); // startup activities\n\n    try {\n      PsiManager alienManager = PsiManager.getInstance(alienProject);\n\n      final PsiFile alienFile = alienManager.findFile(virtualFile);\n      assertNotNull(alienFile);\n      final PsiDocumentManagerImpl alienDocManager = (PsiDocumentManagerImpl)PsiDocumentManager.getInstance(alienProject);\n      final Document alienDocument = alienDocManager.getDocument(alienFile);\n      assertSame(document, alienDocument);\n      assertEquals(0, alienDocManager.getUncommittedDocuments().length);\n      assertEquals(0, getPsiDocumentManager().getUncommittedDocuments().length);\n\n      WriteCommandAction.runWriteCommandAction(null, () -> {\n        document.setText(\"xxx\");\n        assertOrderedEquals(getPsiDocumentManager().getUncommittedDocuments(), document);\n        assertOrderedEquals(alienDocManager.getUncommittedDocuments(), alienDocument);\n      });\n      assertEquals(\"xxx\", document.getText());\n      assertEquals(\"xxx\", alienDocument.getText());\n\n      long t1 = System.currentTimeMillis() + TIMEOUT;\n      while (!getPsiDocumentManager().isCommitted(document) && System.currentTimeMillis() < t1) {\n        UIUtil.dispatchAllInvocationEvents();\n      }\n      assertTrue(\"Still not committed: \" + document, getPsiDocumentManager().isCommitted(document));\n\n      long t2 = System.currentTimeMillis() + TIMEOUT;\n      while (!alienDocManager.isCommitted(alienDocument) && System.currentTimeMillis() < t2) {\n        UIUtil.dispatchAllInvocationEvents();\n      }\n      assertTrue(\"Still not committed: \" + alienDocument, alienDocManager.isCommitted(alienDocument));\n    }\n    finally {\n      ProjectUtil.closeAndDispose(alienProject);\n    }\n  }","commit_id":"e9f877a04143a82c1c465fc887e5761d36a182b7","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void testDocumentGced() throws Exception {\n    VirtualFile vFile = getVirtualFile(createTempFile(\"txt\", \"abc\"));\n    PsiDocumentManagerImpl documentManager = getPsiDocumentManager();\n    long id = System.identityHashCode(documentManager.getDocument(getPsiManager().findFile(vFile)));\n\n    documentManager.commitAllDocuments();\n    UIUtil.dispatchAllInvocationEvents();\n    UIUtil.dispatchAllInvocationEvents();\n    assertEmpty(documentManager.getUncommittedDocuments());\n\n    LeakHunter.checkLeak(documentManager, DocumentImpl.class);\n    LeakHunter.checkLeak(documentManager, PsiFileImpl.class, new Processor<PsiFileImpl>() {\n      @Override\n      public boolean process(PsiFileImpl psiFile) {\n        return psiFile.getViewProvider().getVirtualFile().getFileSystem() instanceof LocalFileSystem;\n      }\n    });\n    //Class.forName(\"com.intellij.util.ProfilingUtil\").getDeclaredMethod(\"forceCaptureMemorySnapshot\").invoke(null);\n\n    for (int i = 0; i < 1000; i++) {\n      PlatformTestUtil.tryGcSoftlyReachableObjects();\n      UIUtil.dispatchAllInvocationEvents();\n      if (documentManager.getCachedDocument(getPsiManager().findFile(vFile)) == null) break;\n      System.gc();\n    }\n    assertNull(documentManager.getCachedDocument(getPsiManager().findFile(vFile)));\n\n    Document newDoc = documentManager.getDocument(getPsiManager().findFile(vFile));\n    assertTrue(id != System.identityHashCode(newDoc));\n  }","id":55297,"modified_method":"public void testDocumentGced() throws Exception {\n    VirtualFile vFile = getVirtualFile(createTempFile(\"txt\", \"abc\"));\n    PsiDocumentManagerImpl documentManager = getPsiDocumentManager();\n    long id = System.identityHashCode(documentManager.getDocument(getPsiManager().findFile(vFile)));\n\n    documentManager.commitAllDocuments();\n    UIUtil.dispatchAllInvocationEvents();\n    UIUtil.dispatchAllInvocationEvents();\n    assertEmpty(documentManager.getUncommittedDocuments());\n\n    LeakHunter.checkLeak(documentManager, DocumentImpl.class);\n    LeakHunter.checkLeak(documentManager, PsiFileImpl.class,\n                         psiFile -> psiFile.getViewProvider().getVirtualFile().getFileSystem() instanceof LocalFileSystem);\n    //Class.forName(\"com.intellij.util.ProfilingUtil\").getDeclaredMethod(\"forceCaptureMemorySnapshot\").invoke(null);\n\n    for (int i = 0; i < 1000; i++) {\n      PlatformTestUtil.tryGcSoftlyReachableObjects();\n      UIUtil.dispatchAllInvocationEvents();\n      if (documentManager.getCachedDocument(getPsiManager().findFile(vFile)) == null) break;\n      System.gc();\n    }\n    assertNull(documentManager.getCachedDocument(getPsiManager().findFile(vFile)));\n\n    Document newDoc = documentManager.getDocument(getPsiManager().findFile(vFile));\n    assertTrue(id != System.identityHashCode(newDoc));\n  }","commit_id":"e9f877a04143a82c1c465fc887e5761d36a182b7","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"boolean completeTaskWhichFailToAcquireReadAction() {\n    final boolean[] result = {true};\n    // these tasks could not be executed in the other thread; do them here\n    for (final ApplierCompleter<T> task : failedSubTasks) {\n      task.wrapInReadActionAndIndicator(() -> {\n        for (int i = task.lo; i < task.hi; ++i) {\n          if (!task.processor.process(task.array.get(i))) {\n            result[0] = false;\n            break;\n          }\n        }\n      });\n    }\n    return result[0];\n  }","id":55298,"modified_method":"boolean completeTaskWhichFailToAcquireReadAction() {\n    final boolean[] result = {true};\n    // these tasks could not be executed in the other thread; do them here\n    for (final ApplierCompleter<T> task : failedSubTasks) {\n      ApplicationManager.getApplication().runReadAction(() -> {\n        task.wrapInReadActionAndIndicator(() -> {\n          for (int i = task.lo; i < task.hi; ++i) {\n            if (!task.processor.process(task.array.get(i))) {\n              result[0] = false;\n              break;\n            }\n          }\n        });\n      });\n    }\n    return result[0];\n  }","commit_id":"50f9085b2a09b29aec558432e59116aa493480e1","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void testNotNormalCompletion() throws Throwable {\n    final List<Object> objects = Collections.nCopies(100000000, null);\n    COUNT.set(0);\n    boolean success = JobLauncher.getInstance().invokeConcurrentlyUnderProgress(objects, null, true, new Processor<Object>() {\n      @Override\n      public boolean process(Object o) {\n        if (COUNT.incrementAndGet() == 100000) {\n          System.out.println(\"PCE\");\n          return false;\n        }\n        return true;\n      }\n    });\n    assertFalse(success);\n  }","id":55299,"modified_method":"public void testNotNormalCompletion() throws Throwable {\n    final List<Object> objects = Collections.nCopies(100000000, null);\n    COUNT.set(0);\n    boolean success = JobLauncher.getInstance().invokeConcurrentlyUnderProgress(objects, null, true, o -> {\n      if (COUNT.incrementAndGet() == 100000) {\n        System.out.println(\"PCE\");\n        return false;\n      }\n      return true;\n    });\n    assertFalse(success);\n  }","commit_id":"50f9085b2a09b29aec558432e59116aa493480e1","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void testTasksRunEvenWhenReadActionIsHardToGet_Performance() throws ExecutionException, InterruptedException {\n    final Processor<String> processor = new Processor<String>() {\n      @Override\n      public boolean process(String s) {\n        busySleep(1);\n        return true;\n      }\n    };\n    for (int i=0; i<10/*0*/; i++) {\n      System.out.println(\"i = \" + i);\n      final ProgressIndicator indicator = new EmptyProgressIndicator();\n      Future<?> future = ApplicationManager.getApplication().executeOnPooledThread(new Runnable() {\n        @Override\n        public void run() {\n          JobLauncher.getInstance().invokeConcurrentlyUnderProgress(Collections.nCopies(10000, \"\"), indicator, true, false, processor);\n          assertFalse(indicator.isCanceled());\n        }\n      });\n      for (int k=0; k<10000; k++) {\n        ApplicationManager.getApplication().runWriteAction(new Runnable() {\n          @Override\n          public void run() {\n            busySleep(1);\n          }\n        });\n      }\n      future.get();\n    }\n  }","id":55300,"modified_method":"public void testTasksRunEvenWhenReadActionIsHardToGet_Performance() throws ExecutionException, InterruptedException {\n    AtomicInteger processorCalled = new AtomicInteger();\n    final Processor<String> processor = s -> {\n      busySleep(1);\n      processorCalled.incrementAndGet();\n      return true;\n    };\n    for (int i=0; i<10/*0*/; i++) {\n      System.out.println(\"i = \" + i);\n      processorCalled.set(0);\n      final ProgressIndicator indicator = new EmptyProgressIndicator();\n      int N = 10000;\n      Future<?> future = ApplicationManager.getApplication().executeOnPooledThread(() -> {\n        JobLauncher.getInstance().invokeConcurrentlyUnderProgress(Collections.nCopies(N, \"\"), indicator, true, false, processor);\n        assertFalse(indicator.isCanceled());\n      });\n      for (int k=0; k<10000; k++) {\n        ApplicationManager.getApplication().runWriteAction(() -> {\n          busySleep(1);\n        });\n      }\n      future.get();\n      assertEquals(N, processorCalled.get());\n    }\n  }","commit_id":"50f9085b2a09b29aec558432e59116aa493480e1","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void testJobUtilRecursiveCancel() throws Exception {\n    final List<String> list = Collections.nCopies(100, \"\");\n    final List<Integer> ilist = Collections.nCopies(100, 0);\n    for (int i=0; i<10; i++) {\n      COUNT.set(0);\n      long start = System.currentTimeMillis();\n      boolean success = false;\n      try {\n        success = JobLauncher.getInstance().invokeConcurrentlyUnderProgress(list, null, false, new Processor<String>() {\n          @Override\n          public boolean process(String name) {\n            boolean nestedSuccess = JobLauncher.getInstance().invokeConcurrentlyUnderProgress(ilist, null, false, new Processor<Integer>() {\n              @Override\n              public boolean process(Integer integer) {\n                if (busySleep(1) == 1000) {\n                  System.out.println(\"PCE\");\n                  throw new MyException();\n                }\n                return true;\n              }\n            });\n            //System.out.println(\"nestedSuccess = \" + nestedSuccess);\n            return true;\n          }\n        });\n        fail(\"exception must have been thrown\");\n      }\n      catch (MyException ignored) {\n      }\n      long finish = System.currentTimeMillis();\n      System.out.println(\"Elapsed: \"+(finish-start)+\"ms\");\n      //assertEquals(list.size()*list.size(), COUNT.get());\n      assertFalse(success);\n    }\n  }","id":55301,"modified_method":"public void testJobUtilRecursiveCancel() throws Exception {\n    final List<String> list = Collections.nCopies(100, \"\");\n    final List<Integer> ilist = Collections.nCopies(100, 0);\n    for (int i=0; i<10; i++) {\n      COUNT.set(0);\n      long start = System.currentTimeMillis();\n      boolean success = false;\n      try {\n        success = JobLauncher.getInstance().invokeConcurrentlyUnderProgress(list, null, false, name -> {\n          boolean nestedSuccess = JobLauncher.getInstance().invokeConcurrentlyUnderProgress(ilist, null, false, integer -> {\n            if (busySleep(1) == 1000) {\n              System.out.println(\"PCE\");\n              throw new MyException();\n            }\n            return true;\n          });\n          //System.out.println(\"nestedSuccess = \" + nestedSuccess);\n          return true;\n        });\n        fail(\"exception must have been thrown\");\n      }\n      catch (MyException ignored) {\n      }\n      long finish = System.currentTimeMillis();\n      System.out.println(\"Elapsed: \"+(finish-start)+\"ms\");\n      //assertEquals(list.size()*list.size(), COUNT.get());\n      assertFalse(success);\n    }\n  }","commit_id":"50f9085b2a09b29aec558432e59116aa493480e1","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void testExceptionalCompletion() throws Throwable {\n    final List<Object> objects = Collections.nCopies(100000000, null);\n    COUNT.set(0);\n    try {\n      JobLauncher.getInstance().invokeConcurrentlyUnderProgress(objects, null, true, new Processor<Object>() {\n        @Override\n        public boolean process(Object o) {\n          if (COUNT.incrementAndGet() == 100000) {\n            System.out.println(\"PCE\");\n            throw new MyException();\n          }\n          return true;\n        }\n      });\n      fail(\"exception must have been thrown\");\n    }\n    catch (MyException e) {\n      // caught OK\n    }\n  }","id":55302,"modified_method":"public void testExceptionalCompletion() throws Throwable {\n    final List<Object> objects = Collections.nCopies(100000000, null);\n    COUNT.set(0);\n    try {\n      JobLauncher.getInstance().invokeConcurrentlyUnderProgress(objects, null, true, o -> {\n        if (COUNT.incrementAndGet() == 100000) {\n          System.out.println(\"PCE\");\n          throw new MyException();\n        }\n        return true;\n      });\n      fail(\"exception must have been thrown\");\n    }\n    catch (MyException e) {\n      // caught OK\n    }\n  }","commit_id":"50f9085b2a09b29aec558432e59116aa493480e1","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void testSaturation() throws InterruptedException {\n    final CountDownLatch latch = new CountDownLatch(1);\n    for (int i=0; i<100; i++) {\n      JobLauncher.getInstance().submitToJobThread(new Runnable() {\n        @Override\n        public void run() {\n          try {\n            latch.await();\n          }\n          catch (InterruptedException e) {\n            throw new RuntimeException(e);\n          }\n        }\n      }, null);\n    }\n    JobLauncher.getInstance().submitToJobThread(new Runnable() {\n      @Override\n      public void run() {\n        latch.countDown();\n      }\n    }, null);\n\n    try {\n      boolean scheduled = latch.await(3, TimeUnit.SECONDS);\n      assertFalse(scheduled); // pool saturated, no thread can be scheduled\n    }\n    finally {\n      latch.countDown();\n    }\n  }","id":55303,"modified_method":"public void testSaturation() throws InterruptedException {\n    final CountDownLatch latch = new CountDownLatch(1);\n    for (int i=0; i<100; i++) {\n      JobLauncher.getInstance().submitToJobThread(() -> {\n        try {\n          latch.await();\n        }\n        catch (InterruptedException e) {\n          throw new RuntimeException(e);\n        }\n      }, null);\n    }\n    JobLauncher.getInstance().submitToJobThread(latch::countDown, null);\n\n    try {\n      boolean scheduled = latch.await(3, TimeUnit.SECONDS);\n      assertFalse(scheduled); // pool saturated, no thread can be scheduled\n    }\n    finally {\n      latch.countDown();\n    }\n  }","commit_id":"50f9085b2a09b29aec558432e59116aa493480e1","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void testJobUtilRecursive_Performance() throws Exception {\n    final List<String> list = Collections.nCopies(100, null);\n    for (int i=0; i<10; i++) {\n      COUNT.set(0);\n      long start = System.currentTimeMillis();\n      JobLauncher.getInstance().invokeConcurrentlyUnderProgress(list, null, false, new Processor<String>() {\n        @Override\n        public boolean process(String name) {\n          JobLauncher.getInstance().invokeConcurrentlyUnderProgress(list, null, false, new Processor<String>() {\n            @Override\n            public boolean process(String name) {\n              busySleep(1);\n              return true;\n            }\n          });\n          return true;\n        }\n      });\n      long finish = System.currentTimeMillis();\n      System.out.println(\"Elapsed: \"+(finish-start)+\"ms\");\n      assertEquals(list.size()*list.size(), COUNT.get());\n    }\n  }","id":55304,"modified_method":"public void testJobUtilRecursive_Performance() throws Exception {\n    final List<String> list = Collections.nCopies(100, null);\n    for (int i=0; i<10; i++) {\n      COUNT.set(0);\n      long start = System.currentTimeMillis();\n      JobLauncher.getInstance().invokeConcurrentlyUnderProgress(list, null, false, name -> {\n        JobLauncher.getInstance().invokeConcurrentlyUnderProgress(list, null, false, name1 -> {\n          busySleep(1);\n          return true;\n        });\n        return true;\n      });\n      long finish = System.currentTimeMillis();\n      System.out.println(\"Elapsed: \"+(finish-start)+\"ms\");\n      assertEquals(list.size()*list.size(), COUNT.get());\n    }\n  }","commit_id":"50f9085b2a09b29aec558432e59116aa493480e1","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void testJobUtilCorrectlySplitsUpHugeWorkAndFinishes_Performance() throws Exception {\n    COUNT.set(0);\n    int N = 100000;\n    List<String> list = Collections.nCopies(N, null);\n    final AtomicReference<Exception> exception = new AtomicReference<Exception>();\n    final AtomicBoolean finished = new AtomicBoolean();\n\n    JobLauncher.getInstance().invokeConcurrentlyUnderProgress(list, null, false, new Processor<String>() {\n      @Override\n      public boolean process(String name) {\n        try {\n          if (finished.get()) {\n            throw new RuntimeException();\n          }\n          for (int i = 0; i < 1000; i++) {\n            new BigDecimal(i).multiply(new BigDecimal(1));\n          }\n          busySleep(1);\n          if (finished.get()) {\n            throw new RuntimeException();\n          }\n        }\n        catch (Exception e) {\n          exception.set(e);\n        }\n        return true;\n      }\n    });\n    finished.set(true);\n    Thread.sleep(1000);\n    if (exception.get() != null) throw exception.get();\n    assertEquals(N, COUNT.get());\n  }","id":55305,"modified_method":"public void testJobUtilCorrectlySplitsUpHugeWorkAndFinishes_Performance() throws Exception {\n    COUNT.set(0);\n    int N = 100000;\n    List<String> list = Collections.nCopies(N, null);\n    final AtomicReference<Exception> exception = new AtomicReference<>();\n    final AtomicBoolean finished = new AtomicBoolean();\n\n    JobLauncher.getInstance().invokeConcurrentlyUnderProgress(list, null, false, name -> {\n      try {\n        if (finished.get()) {\n          throw new RuntimeException();\n        }\n        for (int i = 0; i < 1000; i++) {\n          new BigDecimal(i).multiply(new BigDecimal(1));\n        }\n        busySleep(1);\n        if (finished.get()) {\n          throw new RuntimeException();\n        }\n      }\n      catch (Exception e) {\n        exception.set(e);\n      }\n      return true;\n    });\n    finished.set(true);\n    Thread.sleep(1000);\n    if (exception.get() != null) throw exception.get();\n    assertEquals(N, COUNT.get());\n  }","commit_id":"50f9085b2a09b29aec558432e59116aa493480e1","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void testProcessorReturningFalseDoesNotCrashTheOtherThread() {\n    final AtomicInteger delay = new AtomicInteger(0);\n    final Runnable checkCanceled = new Runnable() {\n      @Override\n      public void run() {\n        ProgressManager.checkCanceled();\n      }\n    };\n    Processor<String> processor = new Processor<String>() {\n      @Override\n      public boolean process(String s) {\n        busySleep(delay.incrementAndGet() % 10 + 10, checkCanceled);\n        return delay.get() % 100 != 0;\n      }\n    };\n    for (int i=0; i<100; i++) {\n      ProgressIndicator indicator = new EmptyProgressIndicator();\n      boolean result = JobLauncher.getInstance()\n        .invokeConcurrentlyUnderProgress(Collections.nCopies(10000, \"\"), indicator, false, false, processor);\n      assertFalse(indicator.isCanceled());\n      assertFalse(result);\n    }\n  }","id":55306,"modified_method":"public void testProcessorReturningFalseDoesNotCrashTheOtherThread() {\n    final AtomicInteger delay = new AtomicInteger(0);\n    final Runnable checkCanceled = ProgressManager::checkCanceled;\n    Processor<String> processor = s -> {\n      busySleep(delay.incrementAndGet() % 10 + 10, checkCanceled);\n      return delay.get() % 100 != 0;\n    };\n    for (int i=0; i<100; i++) {\n      ProgressIndicator indicator = new EmptyProgressIndicator();\n      boolean result = JobLauncher.getInstance()\n        .invokeConcurrentlyUnderProgress(Collections.nCopies(10000, \"\"), indicator, false, false, processor);\n      assertFalse(indicator.isCanceled());\n      assertFalse(result);\n    }\n  }","commit_id":"50f9085b2a09b29aec558432e59116aa493480e1","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void testJobUtilCompletesEvenIfCannotGrabReadAction() throws Throwable {\n    final List<Object> objects = Collections.nCopies(1000000, null);\n    COUNT.set(0);\n    ApplicationManager.getApplication().runWriteAction(new Runnable() {\n      @Override\n      public void run() {\n        boolean success = JobLauncher.getInstance().invokeConcurrentlyUnderProgress(objects, null, true, false, new Processor<Object>() {\n          @Override\n          public boolean process(Object o) {\n            COUNT.incrementAndGet();\n            return true;\n          }\n        });\n        assertTrue(success);\n        assertEquals(objects.size(), COUNT.get());\n      }\n    });\n  }","id":55307,"modified_method":"public void testJobUtilCompletesEvenIfCannotGrabReadAction() throws Throwable {\n    final List<Object> objects = Collections.nCopies(1000000, null);\n    COUNT.set(0);\n    ApplicationManager.getApplication().runWriteAction(() -> {\n      boolean success = JobLauncher.getInstance().invokeConcurrentlyUnderProgress(objects, null, true, false, o -> {\n        COUNT.incrementAndGet();\n        return true;\n      });\n      assertTrue(success);\n      assertEquals(objects.size(), COUNT.get());\n    });\n  }","commit_id":"50f9085b2a09b29aec558432e59116aa493480e1","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void testAfterCancelInTheMiddleOfTheExecutionTaskIsDoneReturnsFalseUntilFinished() throws ExecutionException, InterruptedException {\n    Random random = new Random();\n    for (int i=0; i<100; i++) {\n      final AtomicBoolean finished = new AtomicBoolean();\n      final AtomicBoolean started = new AtomicBoolean();\n      Job<Void> job = JobLauncher.getInstance().submitToJobThread(new Runnable() {\n        @Override\n        public void run() {\n          started.set(true);\n          TimeoutUtil.sleep(100);\n          finished.set(true);\n        }\n      }, null);\n      assertFalse(job.isDone());\n      TimeoutUtil.sleep(random.nextInt(100));\n      job.cancel();\n      long start = System.currentTimeMillis();\n      while (!job.isDone() && (started.get() || System.currentTimeMillis() < start + 2000)) {\n        boolean wasDone = job.isDone();\n        boolean wasStarted = started.get();\n        boolean wasFinished = finished.get();\n        if (wasStarted && !wasFinished) {\n          assertFalse(wasDone);\n        }\n        // else no guarantees\n\n        // but can be finished=true but done=false still\n        if (wasDone) {\n          assertTrue(wasFinished);\n        }\n\n      }\n    }\n  }","id":55308,"modified_method":"public void testAfterCancelInTheMiddleOfTheExecutionTaskIsDoneReturnsFalseUntilFinished() throws ExecutionException, InterruptedException {\n    Random random = new Random();\n    for (int i=0; i<100; i++) {\n      final AtomicBoolean finished = new AtomicBoolean();\n      final AtomicBoolean started = new AtomicBoolean();\n      Job<Void> job = JobLauncher.getInstance().submitToJobThread(() -> {\n        started.set(true);\n        TimeoutUtil.sleep(100);\n        finished.set(true);\n      }, null);\n      assertFalse(job.isDone());\n      TimeoutUtil.sleep(random.nextInt(100));\n      job.cancel();\n      long start = System.currentTimeMillis();\n      while (!job.isDone() && (started.get() || System.currentTimeMillis() < start + 2000)) {\n        boolean wasDone = job.isDone();\n        boolean wasStarted = started.get();\n        boolean wasFinished = finished.get();\n        if (wasStarted && !wasFinished) {\n          assertFalse(wasDone);\n        }\n        // else no guarantees\n\n        // but can be finished=true but done=false still\n        if (wasDone) {\n          assertTrue(wasFinished);\n        }\n\n      }\n    }\n  }","commit_id":"50f9085b2a09b29aec558432e59116aa493480e1","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void testUnbalancedTaskJobUtilPerformance() {\n    List<Integer> things = new ArrayList<Integer>(Collections.<Integer>nCopies(10000, null));\n    int sum = 0;\n    for (int i = 0; i < things.size(); i++) {\n      int v = i < 9950 ? 1 : 1000;\n      things.set(i, v);\n      sum += things.get(i);\n    }\n    assertEquals(59950, sum);\n\n    long start = System.currentTimeMillis();\n    boolean b = JobLauncher.getInstance().invokeConcurrentlyUnderProgress(things, new ProgressIndicatorBase(), false, false, new Processor<Integer>() {\n      @Override\n      public boolean process(Integer o) {\n        busySleep(o);\n        return true;\n      }\n    });\n    assertTrue(b);\n    long elapsed = System.currentTimeMillis() - start;\n    int expected = 2 * (9950 + 50 * 1000) / JobSchedulerImpl.CORES_COUNT;\n    String message = \"Elapsed: \" + elapsed + \"; expected: \" + expected;\n    System.out.println(message);\n    assertTrue(message, elapsed < expected);\n  }","id":55309,"modified_method":"public void testUnbalancedTaskJobUtilPerformance() {\n    List<Integer> things = new ArrayList<>(Collections.nCopies(10000, null));\n    int sum = 0;\n    for (int i = 0; i < things.size(); i++) {\n      int v = i < 9950 ? 1 : 1000;\n      things.set(i, v);\n      sum += things.get(i);\n    }\n    assertEquals(59950, sum);\n\n    long start = System.currentTimeMillis();\n    boolean b = JobLauncher.getInstance().invokeConcurrentlyUnderProgress(things, new ProgressIndicatorBase(), false, false, o -> {\n      busySleep(o);\n      return true;\n    });\n    assertTrue(b);\n    long elapsed = System.currentTimeMillis() - start;\n    int expected = 2 * (9950 + 50 * 1000) / JobSchedulerImpl.CORES_COUNT;\n    String message = \"Elapsed: \" + elapsed + \"; expected: \" + expected;\n    System.out.println(message);\n    assertTrue(message, elapsed < expected);\n  }","commit_id":"50f9085b2a09b29aec558432e59116aa493480e1","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private static void checkProgressAndReadAction(final List<Object> objects,\n                                                 final DaemonProgressIndicator progress,\n                                                 final boolean runInReadAction) throws Throwable {\n    final AtomicReference<Throwable> exception = new AtomicReference<Throwable>();\n    JobLauncher.getInstance().invokeConcurrentlyUnderProgress(objects, progress, runInReadAction, new Processor<Object>() {\n      @Override\n      public boolean process(Object o) {\n        try {\n          if (objects.size() <= 1 || JobSchedulerImpl.CORES_COUNT <= JobLauncherImpl.CORES_FORK_THRESHOLD) {\n            assertTrue(ApplicationManager.getApplication().isDispatchThread());\n          }\n          else {\n            // generally we know nothing about current thread since FJP can help others task to execute while in current context\n          }\n          ProgressIndicator actualIndicator = ProgressManager.getInstance().getProgressIndicator();\n          if (progress == null) {\n            assertNotNull(actualIndicator);\n            assertTrue(actualIndicator instanceof AbstractProgressIndicatorBase);\n          }\n          else {\n            assertTrue(actualIndicator instanceof SensitiveProgressWrapper);\n            ProgressIndicator original = ((SensitiveProgressWrapper)actualIndicator).getOriginalProgressIndicator();\n            assertSame(progress, original);\n          }\n          // there can be read access even if we didn't ask for it (e.g. when task under read action steals others work)\n          assertTrue(!runInReadAction || ApplicationManager.getApplication().isReadAccessAllowed());\n        }\n        catch (Throwable e) {\n          exception.set(e);\n        }\n        return true;\n      }\n    });\n    if (exception.get() != null) throw exception.get();\n  }","id":55310,"modified_method":"private static void checkProgressAndReadAction(final List<Object> objects,\n                                                 final DaemonProgressIndicator progress,\n                                                 final boolean runInReadAction) throws Throwable {\n    final AtomicReference<Throwable> exception = new AtomicReference<>();\n    JobLauncher.getInstance().invokeConcurrentlyUnderProgress(objects, progress, runInReadAction, o -> {\n      try {\n        if (objects.size() <= 1 || JobSchedulerImpl.CORES_COUNT <= JobLauncherImpl.CORES_FORK_THRESHOLD) {\n          assertTrue(ApplicationManager.getApplication().isDispatchThread());\n        }\n        else {\n          // generally we know nothing about current thread since FJP can help others task to execute while in current context\n        }\n        ProgressIndicator actualIndicator = ProgressManager.getInstance().getProgressIndicator();\n        if (progress == null) {\n          assertNotNull(actualIndicator);\n          assertTrue(actualIndicator instanceof AbstractProgressIndicatorBase);\n        }\n        else {\n          assertTrue(actualIndicator instanceof SensitiveProgressWrapper);\n          ProgressIndicator original = ((SensitiveProgressWrapper)actualIndicator).getOriginalProgressIndicator();\n          assertSame(progress, original);\n        }\n        // there can be read access even if we didn't ask for it (e.g. when task under read action steals others work)\n        assertTrue(!runInReadAction || ApplicationManager.getApplication().isReadAccessAllowed());\n      }\n      catch (Throwable e) {\n        exception.set(e);\n      }\n      return true;\n    });\n    if (exception.get() != null) throw exception.get();\n  }","commit_id":"50f9085b2a09b29aec558432e59116aa493480e1","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void testJobUtilProcessesAllItems_Performance() throws Exception {\n    List<String> list = Collections.nCopies(10000, null);\n    final AtomicReference<Exception> exception = new AtomicReference<Exception>();\n    for (int i=0; i<10; i++) {\n      long start = System.currentTimeMillis();\n      COUNT.set(0);\n      JobLauncher.getInstance().invokeConcurrentlyUnderProgress(list, null, false, new Processor<String>() {\n        @Override\n        public boolean process(String name) {\n          busySleep(1);\n          return true;\n        }\n      });\n      if (exception.get() != null) throw exception.get();\n      long finish = System.currentTimeMillis();\n      System.out.println(\"Elapsed: \"+(finish-start)+\"ms\");\n      assertEquals(list.size(), COUNT.get());\n    }\n  }","id":55311,"modified_method":"public void testJobUtilProcessesAllItems_Performance() throws Exception {\n    List<String> list = Collections.nCopies(10000, null);\n    final AtomicReference<Exception> exception = new AtomicReference<>();\n    for (int i=0; i<10; i++) {\n      long start = System.currentTimeMillis();\n      COUNT.set(0);\n      JobLauncher.getInstance().invokeConcurrentlyUnderProgress(list, null, false, name -> {\n        busySleep(1);\n        return true;\n      });\n      if (exception.get() != null) throw exception.get();\n      long finish = System.currentTimeMillis();\n      System.out.println(\"Elapsed: \"+(finish-start)+\"ms\");\n      assertEquals(list.size(), COUNT.get());\n    }\n  }","commit_id":"50f9085b2a09b29aec558432e59116aa493480e1","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void testJobWaitForTerminationAfterCancelInTheMiddleOfTheExecutionWaitsUntilFinished() throws Exception {\n    for (int i=0; i<100; i++) {\n      final AtomicBoolean finished = new AtomicBoolean();\n      final AtomicBoolean started = new AtomicBoolean();\n      Job<Void> job = JobLauncher.getInstance().submitToJobThread(new Runnable() {\n        @Override\n        public void run() {\n          started.set(true);\n          TimeoutUtil.sleep(100);\n          finished.set(true);\n        }\n      }, null);\n      assertFalse(job.isDone());\n      while (!started.get());\n      job.cancel();\n      job.waitForCompletion(100000);\n      assertTrue(finished.get());\n    }\n  }","id":55312,"modified_method":"public void testJobWaitForTerminationAfterCancelInTheMiddleOfTheExecutionWaitsUntilFinished() throws Exception {\n    for (int i=0; i<100; i++) {\n      final AtomicBoolean finished = new AtomicBoolean();\n      final AtomicBoolean started = new AtomicBoolean();\n      Job<Void> job = JobLauncher.getInstance().submitToJobThread(() -> {\n        started.set(true);\n        TimeoutUtil.sleep(100);\n        finished.set(true);\n      }, null);\n      assertFalse(job.isDone());\n      while (!started.get());\n      job.cancel();\n      job.waitForCompletion(100000);\n      assertTrue(finished.get());\n    }\n  }","commit_id":"50f9085b2a09b29aec558432e59116aa493480e1","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@NotNull\n  @Override\n  public DefaultActionGroup getActionGroup(Project project) {\n    Course course = StudyTaskManager.getInstance(project).getCourse();\n    final DefaultActionGroup group = new DefaultActionGroup();\n    group.add(StudyCheckAction.createCheckAction(course));\n    group.add(new StudyPreviousStudyTaskAction());\n    group.add(new StudyNextStudyTaskAction());\n    group.add(new StudyRefreshTaskFileAction());\n    group.add(new StudyShowHintAction());\n\n    group.add(new StudyRunAction());\n    group.add(new StudyEditInputAction());\n    return group;\n  }","id":55313,"modified_method":"@NotNull\n  @Override\n  public DefaultActionGroup getActionGroup(Project project) {\n    final DefaultActionGroup group = new DefaultActionGroup();\n    group.add(new StudyCheckAction());\n    group.add(new StudyPreviousStudyTaskAction());\n    group.add(new StudyNextStudyTaskAction());\n    group.add(new StudyRefreshTaskFileAction());\n    group.add(new StudyShowHintAction());\n\n    group.add(new StudyRunAction());\n    group.add(new StudyEditInputAction());\n    return group;\n  }","commit_id":"6314e9b3f7ea026bd252d221ed6c9a7eeda31d35","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"protected static void flushWindows(@NotNull final Task task, @NotNull final VirtualFile taskDir) {\n    for (Map.Entry<String, TaskFile> entry : task.getTaskFiles().entrySet()) {\n      String name = entry.getKey();\n      TaskFile taskFile = entry.getValue();\n      VirtualFile virtualFile = taskDir.findChild(name);\n      if (virtualFile == null) {\n        continue;\n      }\n      EduUtils.flushWindows(taskFile, virtualFile, true);\n    }\n  }","id":55314,"modified_method":"private static void flushWindows(@NotNull final Task task, @NotNull final VirtualFile taskDir) {\n    for (Map.Entry<String, TaskFile> entry : task.getTaskFiles().entrySet()) {\n      String name = entry.getKey();\n      TaskFile taskFile = entry.getValue();\n      VirtualFile virtualFile = taskDir.findChild(name);\n      if (virtualFile == null) {\n        continue;\n      }\n      EduUtils.flushWindows(taskFile, virtualFile, true);\n    }\n  }","commit_id":"6314e9b3f7ea026bd252d221ed6c9a7eeda31d35","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"protected void check(@NotNull final Project project) {\n    if (DumbService.isDumb(project)) {\n      DumbService.getInstance(project).showDumbModeNotification(\"Check Action is not available while indexing is in progress\");\n      return;\n    }\n    ApplicationManager.getApplication().runWriteAction(new Runnable() {\n      @Override\n      public void run() {\n        CommandProcessor.getInstance().runUndoTransparentAction(new Runnable() {\n          @Override\n          public void run() {\n            final StudyEditor selectedEditor = StudyUtils.getSelectedStudyEditor(project);\n            if (selectedEditor == null) return;\n            final StudyState studyState = new StudyState(selectedEditor);\n            if (!studyState.isValid()) {\n              LOG.error(\"StudyCheckAction was invoked outside study editor\");\n              return;\n            }\n            final IdeFrame frame = ((WindowManagerEx)WindowManager.getInstance()).findFrameFor(project);\n            final StatusBarEx statusBar = frame == null ? null : (StatusBarEx)frame.getStatusBar();\n            if (statusBar != null) {\n              final List<Pair<TaskInfo, ProgressIndicator>> processes = statusBar.getBackgroundProcesses();\n              if (!processes.isEmpty()) return;\n            }\n\n            final Task task = studyState.getTask();\n            final VirtualFile taskDir = studyState.getTaskDir();\n            flushWindows(task, taskDir);\n            final StudyRunAction runAction = (StudyRunAction)ActionManager.getInstance().getAction(StudyRunAction.ACTION_ID);\n            if (runAction == null) {\n              return;\n            }\n            runAction.run(project);\n            ApplicationManager.getApplication().invokeLater(new Runnable() {\n              @Override\n              public void run() {\n                IdeFocusManager.getInstance(project).requestFocus(studyState.getEditor().getComponent(), true);\n              }\n            });\n\n            final StudyTestRunner testRunner = StudyUtils.getTestRunner(task, taskDir);\n            Process testProcess = null;\n            String commandLine = \"\";\n            try {\n              final VirtualFile executablePath = getTaskVirtualFile(studyState, task, taskDir);\n              if (executablePath != null) {\n                commandLine = executablePath.getPath();\n                testProcess = testRunner.createCheckProcess(project, commandLine);\n              }\n            }\n            catch (ExecutionException e) {\n              LOG.error(e);\n            }\n            if (testProcess == null) {\n              return;\n            }\n            checkInProgress = true;\n            ProgressManager.getInstance().run(getCheckTask(studyState, testRunner, testProcess, commandLine, project, selectedEditor));\n          }\n        });\n      }\n\n      @Nullable\n      private VirtualFile getTaskVirtualFile(@NotNull final StudyState studyState,\n                                             @NotNull final Task task,\n                                             @NotNull final VirtualFile taskDir) {\n        VirtualFile taskVirtualFile = studyState.getVirtualFile();\n        for (Map.Entry<String, TaskFile> entry : task.getTaskFiles().entrySet()) {\n          String name = entry.getKey();\n          TaskFile taskFile = entry.getValue();\n          VirtualFile virtualFile = taskDir.findChild(name);\n          if (virtualFile != null) {\n            if (!taskFile.getAnswerPlaceholders().isEmpty()) {\n              taskVirtualFile = virtualFile;\n            }\n          }\n        }\n        return taskVirtualFile;\n      }\n    });\n  }","id":55315,"modified_method":"protected void check(@NotNull final Project project) {\n    if (DumbService.isDumb(project)) {\n      DumbService.getInstance(project).showDumbModeNotification(\"Check Action is not available while indexing is in progress\");\n      return;\n    }\n    ApplicationManager.getApplication().runWriteAction(new Runnable() {\n      @Override\n      public void run() {\n        CommandProcessor.getInstance().runUndoTransparentAction(() -> {\n          final StudyEditor selectedEditor = StudyUtils.getSelectedStudyEditor(project);\n          if (selectedEditor == null) return;\n          final StudyState studyState = new StudyState(selectedEditor);\n          if (!studyState.isValid()) {\n            LOG.error(\"StudyCheckAction was invoked outside study editor\");\n            return;\n          }\n          final IdeFrame frame = ((WindowManagerEx)WindowManager.getInstance()).findFrameFor(project);\n          final StatusBarEx statusBar = frame == null ? null : (StatusBarEx)frame.getStatusBar();\n          if (statusBar != null) {\n            final List<Pair<TaskInfo, ProgressIndicator>> processes = statusBar.getBackgroundProcesses();\n            if (!processes.isEmpty()) return;\n          }\n\n          final Task task = studyState.getTask();\n          final VirtualFile taskDir = studyState.getTaskDir();\n          flushWindows(task, taskDir);\n          final StudyRunAction runAction = (StudyRunAction)ActionManager.getInstance().getAction(StudyRunAction.ACTION_ID);\n          if (runAction == null) {\n            return;\n          }\n          runAction.run(project);\n          ApplicationManager.getApplication().invokeLater(\n            () -> IdeFocusManager.getInstance(project).requestFocus(studyState.getEditor().getComponent(), true));\n\n          final StudyTestRunner testRunner = StudyUtils.getTestRunner(task, taskDir);\n          Process testProcess = null;\n          String commandLine = \"\";\n          try {\n            final VirtualFile executablePath = getTaskVirtualFile(studyState, task, taskDir);\n            if (executablePath != null) {\n              commandLine = executablePath.getPath();\n              testProcess = testRunner.createCheckProcess(project, commandLine);\n            }\n          }\n          catch (ExecutionException e) {\n            LOG.error(e);\n          }\n          if (testProcess == null) {\n            return;\n          }\n          checkInProgress = true;\n          ProgressManager.getInstance().run(getCheckTask(studyState, testRunner, testProcess, commandLine, project, selectedEditor));\n        });\n      }\n\n      @Nullable\n      private VirtualFile getTaskVirtualFile(@NotNull final StudyState studyState,\n                                             @NotNull final Task task,\n                                             @NotNull final VirtualFile taskDir) {\n        VirtualFile taskVirtualFile = studyState.getVirtualFile();\n        for (Map.Entry<String, TaskFile> entry : task.getTaskFiles().entrySet()) {\n          String name = entry.getKey();\n          TaskFile taskFile = entry.getValue();\n          VirtualFile virtualFile = taskDir.findChild(name);\n          if (virtualFile != null) {\n            if (!taskFile.getAnswerPlaceholders().isEmpty()) {\n              taskVirtualFile = virtualFile;\n            }\n          }\n        }\n        return taskVirtualFile;\n      }\n    });\n  }","commit_id":"6314e9b3f7ea026bd252d221ed6c9a7eeda31d35","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private VirtualFile getCopyWithAnswers(@NotNull final VirtualFile taskDir,\n                                         @NotNull final VirtualFile file,\n                                         @NotNull final TaskFile source,\n                                         @NotNull final TaskFile target) {\n    VirtualFile copy = null;\n    try {\n\n      copy = file.copy(this, taskDir, file.getNameWithoutExtension() + ANSWERS_POSTFIX + \".\" + file.getExtension());\n      final FileDocumentManager documentManager = FileDocumentManager.getInstance();\n      final Document document = documentManager.getDocument(copy);\n      if (document != null) {\n        TaskFile.copy(source, target);\n        EduDocumentListener listener = new EduDocumentListener(target);\n        document.addDocumentListener(listener);\n        for (AnswerPlaceholder answerPlaceholder : target.getAnswerPlaceholders()) {\n          if (!answerPlaceholder.isValid(document)) {\n            continue;\n          }\n          final int start = answerPlaceholder.getRealStartOffset(document);\n          final int end = start + answerPlaceholder.getLength();\n          final String text = answerPlaceholder.getPossibleAnswer();\n          document.replaceString(start, end, text);\n        }\n        ApplicationManager.getApplication().runWriteAction(new Runnable() {\n          @Override\n          public void run() {\n            documentManager.saveDocument(document);\n          }\n        });\n      }\n    }\n    catch (IOException e) {\n      LOG.error(e);\n    }\n    return copy;\n  }","id":55316,"modified_method":"private VirtualFile getCopyWithAnswers(@NotNull final VirtualFile taskDir,\n                                         @NotNull final VirtualFile file,\n                                         @NotNull final TaskFile source,\n                                         @NotNull final TaskFile target) {\n    VirtualFile copy = null;\n    try {\n\n      copy = file.copy(this, taskDir, file.getNameWithoutExtension() + ANSWERS_POSTFIX + \".\" + file.getExtension());\n      final FileDocumentManager documentManager = FileDocumentManager.getInstance();\n      final Document document = documentManager.getDocument(copy);\n      if (document != null) {\n        TaskFile.copy(source, target);\n        EduDocumentListener listener = new EduDocumentListener(target);\n        document.addDocumentListener(listener);\n        for (AnswerPlaceholder answerPlaceholder : target.getAnswerPlaceholders()) {\n          if (!answerPlaceholder.isValid(document)) {\n            continue;\n          }\n          final int start = answerPlaceholder.getRealStartOffset(document);\n          final int end = start + answerPlaceholder.getLength();\n          final String text = answerPlaceholder.getPossibleAnswer();\n          document.replaceString(start, end, text);\n        }\n        ApplicationManager.getApplication().runWriteAction(() -> {\n          documentManager.saveDocument(document);\n        });\n      }\n    }\n    catch (IOException e) {\n      LOG.error(e);\n    }\n    return copy;\n  }","commit_id":"6314e9b3f7ea026bd252d221ed6c9a7eeda31d35","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@NotNull\n  protected com.intellij.openapi.progress.Task.Backgroundable getCheckTask(final StudyState studyState,\n                                                                         final StudyTestRunner testRunner,\n                                                                         final Process testProcess,\n                                                                         @NotNull final String commandLine, @NotNull final Project project,\n                                                                         final StudyEditor selectedEditor) {\n    final Task task = studyState.getTask();\n    final VirtualFile taskDir = studyState.getTaskDir();\n\n    final StudyTaskManager taskManager = StudyTaskManager.getInstance(project);\n    final StudyStatus statusBeforeCheck = taskManager.getStatus(task);\n    return new com.intellij.openapi.progress.Task.Backgroundable(project, \"Checking Task\", true) {\n      @Override\n      public void onSuccess() {\n        StudyUtils.updateToolWindows(project);\n        drawAllPlaceholders(project, task, taskDir);\n        ProjectView.getInstance(project).refresh();\n        EduUtils.deleteWindowDescriptions(task, taskDir);\n        checkInProgress = false;\n      }\n\n      @Override\n      public void onCancel() {\n        taskManager.setStatus(task, statusBeforeCheck);\n        EduUtils.deleteWindowDescriptions(task, taskDir);\n        checkInProgress = false;\n      }\n\n      @Override\n      public void run(@NotNull ProgressIndicator indicator) {\n        final Map<String, TaskFile> taskFiles = task.getTaskFiles();\n        final CapturingProcessHandler handler = new CapturingProcessHandler(testProcess, null, commandLine);\n        final ProcessOutput output = handler.runProcessWithProgressIndicator(indicator);\n        if (indicator.isCanceled()) {\n          ApplicationManager.getApplication().invokeLater(new Runnable() {\n            @Override\n            public void run() {\n              showTestResultPopUp(\"Tests check cancelled.\", MessageType.WARNING.getPopupBackground(), project);\n            }\n          });\n          return;\n        }\n        final StudyTestRunner.TestsOutput testsOutput = testRunner.getTestsOutput(output);\n        String stderr = output.getStderr();\n        if (!stderr.isEmpty()) {\n          LOG.info(\"#educational \" + stderr);\n        }\n        final StudySettings studySettings = StudySettings.getInstance();\n\n        final String login = studySettings.getLogin();\n        final String password = StringUtil.isEmptyOrSpaces(login) ? \"\" : studySettings.getPassword();\n        if (testsOutput.isSuccess()) {\n          taskManager.setStatus(task, StudyStatus.Solved);\n          EduStepicConnector.postAttempt(task, true, login, password);\n          ApplicationManager.getApplication().invokeLater(new Runnable() {\n            @Override\n            public void run() {\n              showTestResultPopUp(testsOutput.getMessage(), MessageType.INFO.getPopupBackground(), project);\n            }\n          });\n        }\n        else {\n          ApplicationManager.getApplication().invokeLater(new Runnable() {\n            @Override\n            public void run() {\n              if (taskDir == null) return;\n              EduStepicConnector.postAttempt(task, false, login, password);\n              taskManager.setStatus(task, StudyStatus.Failed);\n              for (Map.Entry<String, TaskFile> entry : taskFiles.entrySet()) {\n                final String name = entry.getKey();\n                final TaskFile taskFile = entry.getValue();\n                if (taskFile.getAnswerPlaceholders().size() < 2) {\n                  taskManager.setStatus(taskFile, StudyStatus.Failed);\n                  continue;\n                }\n                CommandProcessor.getInstance().runUndoTransparentAction(new Runnable() {\n                  @Override\n                  public void run() {\n                    ApplicationManager.getApplication().runWriteAction(new Runnable() {\n                      @Override\n                      public void run() {\n                        runSmartTestProcess(taskDir, testRunner, name, taskFile, project);\n                      }\n                    });\n                  }\n                });\n              }\n              showTestResultPopUp(testsOutput.getMessage(), MessageType.ERROR.getPopupBackground(), project);\n              navigateToFailedPlaceholder(studyState, task, taskDir, project);\n            }\n          });\n        }\n      }\n    };\n  }","id":55317,"modified_method":"@NotNull\n  protected com.intellij.openapi.progress.Task.Backgroundable getCheckTask(final StudyState studyState,\n                                                                         final StudyTestRunner testRunner,\n                                                                         final Process testProcess,\n                                                                         @NotNull final String commandLine, @NotNull final Project project,\n                                                                         final StudyEditor selectedEditor) {\n    final Task task = studyState.getTask();\n    final VirtualFile taskDir = studyState.getTaskDir();\n\n    final StudyTaskManager taskManager = StudyTaskManager.getInstance(project);\n    final StudyStatus statusBeforeCheck = taskManager.getStatus(task);\n    return new com.intellij.openapi.progress.Task.Backgroundable(project, \"Checking Task\", true) {\n      @Override\n      public void onSuccess() {\n        StudyUtils.updateToolWindows(project);\n        drawAllPlaceholders(project, task, taskDir);\n        ProjectView.getInstance(project).refresh();\n        EduUtils.deleteWindowDescriptions(task, taskDir);\n        checkInProgress = false;\n      }\n\n      @Override\n      public void onCancel() {\n        taskManager.setStatus(task, statusBeforeCheck);\n        EduUtils.deleteWindowDescriptions(task, taskDir);\n        checkInProgress = false;\n      }\n\n      @Override\n      public void run(@NotNull ProgressIndicator indicator) {\n        final Map<String, TaskFile> taskFiles = task.getTaskFiles();\n        final CapturingProcessHandler handler = new CapturingProcessHandler(testProcess, null, commandLine);\n        final ProcessOutput output = handler.runProcessWithProgressIndicator(indicator);\n        if (indicator.isCanceled()) {\n          ApplicationManager.getApplication().invokeLater(\n            () -> showTestResultPopUp(\"Tests check cancelled.\", MessageType.WARNING.getPopupBackground(), project));\n          return;\n        }\n        final StudyTestRunner.TestsOutput testsOutput = testRunner.getTestsOutput(output);\n        String stderr = output.getStderr();\n        if (!stderr.isEmpty()) {\n          LOG.info(\"#educational \" + stderr);\n        }\n        final StudySettings studySettings = StudySettings.getInstance();\n\n        final String login = studySettings.getLogin();\n        final String password = StringUtil.isEmptyOrSpaces(login) ? \"\" : studySettings.getPassword();\n        if (testsOutput.isSuccess()) {\n          taskManager.setStatus(task, StudyStatus.Solved);\n          EduStepicConnector.postAttempt(task, true, login, password);\n          ApplicationManager.getApplication().invokeLater(\n            () -> showTestResultPopUp(testsOutput.getMessage(), MessageType.INFO.getPopupBackground(), project));\n        }\n        else {\n          ApplicationManager.getApplication().invokeLater(() -> {\n            if (taskDir == null) return;\n            EduStepicConnector.postAttempt(task, false, login, password);\n            taskManager.setStatus(task, StudyStatus.Failed);\n            for (Map.Entry<String, TaskFile> entry : taskFiles.entrySet()) {\n              final String name = entry.getKey();\n              final TaskFile taskFile = entry.getValue();\n              if (taskFile.getAnswerPlaceholders().size() < 2) {\n                taskManager.setStatus(taskFile, StudyStatus.Failed);\n                continue;\n              }\n              CommandProcessor.getInstance().runUndoTransparentAction(() -> ApplicationManager.getApplication().runWriteAction(() -> {\n                runSmartTestProcess(taskDir, testRunner, name, taskFile, project);\n              }));\n            }\n            showTestResultPopUp(testsOutput.getMessage(), MessageType.ERROR.getPopupBackground(), project);\n            navigateToFailedPlaceholder(studyState, task, taskDir, project);\n          });\n        }\n      }\n    };\n  }","commit_id":"6314e9b3f7ea026bd252d221ed6c9a7eeda31d35","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private static void navigateToFailedPlaceholder(@NotNull final StudyState studyState,\n                                                  @NotNull final Task task,\n                                                  @NotNull final VirtualFile taskDir,\n                                                  @NotNull final Project project) {\n    TaskFile selectedTaskFile = studyState.getTaskFile();\n    Editor editor = studyState.getEditor();\n    TaskFile taskFileToNavigate = selectedTaskFile;\n    VirtualFile fileToNavigate = studyState.getVirtualFile();\n    final StudyTaskManager taskManager = StudyTaskManager.getInstance(project);\n    if (!taskManager.hasFailedAnswerPlaceholders(selectedTaskFile)) {\n      for (Map.Entry<String, TaskFile> entry : task.getTaskFiles().entrySet()) {\n        String name = entry.getKey();\n        TaskFile taskFile = entry.getValue();\n        if (taskManager.hasFailedAnswerPlaceholders(taskFile)) {\n          taskFileToNavigate = taskFile;\n          VirtualFile virtualFile = taskDir.findChild(name);\n          if (virtualFile == null) {\n            continue;\n          }\n          FileEditor fileEditor = FileEditorManager.getInstance(project).getSelectedEditor(virtualFile);\n          if (fileEditor instanceof StudyEditor) {\n            StudyEditor studyEditor = (StudyEditor)fileEditor;\n            editor = studyEditor.getEditor();\n          }\n          fileToNavigate = virtualFile;\n          break;\n        }\n      }\n    }\n    if (fileToNavigate != null) {\n      FileEditorManager.getInstance(project).openFile(fileToNavigate, true);\n    }\n    final Editor editorToNavigate = editor;\n    ApplicationManager.getApplication().invokeLater(new Runnable() {\n      @Override\n      public void run() {\n        IdeFocusManager.getInstance(project).requestFocus(editorToNavigate.getContentComponent(), true);\n      }\n    });\n\n    StudyNavigator.navigateToFirstFailedAnswerPlaceholder(editor, taskFileToNavigate);\n  }","id":55318,"modified_method":"private static void navigateToFailedPlaceholder(@NotNull final StudyState studyState,\n                                                  @NotNull final Task task,\n                                                  @NotNull final VirtualFile taskDir,\n                                                  @NotNull final Project project) {\n    TaskFile selectedTaskFile = studyState.getTaskFile();\n    Editor editor = studyState.getEditor();\n    TaskFile taskFileToNavigate = selectedTaskFile;\n    VirtualFile fileToNavigate = studyState.getVirtualFile();\n    final StudyTaskManager taskManager = StudyTaskManager.getInstance(project);\n    if (!taskManager.hasFailedAnswerPlaceholders(selectedTaskFile)) {\n      for (Map.Entry<String, TaskFile> entry : task.getTaskFiles().entrySet()) {\n        String name = entry.getKey();\n        TaskFile taskFile = entry.getValue();\n        if (taskManager.hasFailedAnswerPlaceholders(taskFile)) {\n          taskFileToNavigate = taskFile;\n          VirtualFile virtualFile = taskDir.findChild(name);\n          if (virtualFile == null) {\n            continue;\n          }\n          FileEditor fileEditor = FileEditorManager.getInstance(project).getSelectedEditor(virtualFile);\n          if (fileEditor instanceof StudyEditor) {\n            StudyEditor studyEditor = (StudyEditor)fileEditor;\n            editor = studyEditor.getEditor();\n          }\n          fileToNavigate = virtualFile;\n          break;\n        }\n      }\n    }\n    if (fileToNavigate != null) {\n      FileEditorManager.getInstance(project).openFile(fileToNavigate, true);\n    }\n    final Editor editorToNavigate = editor;\n    ApplicationManager.getApplication().invokeLater(\n      () -> IdeFocusManager.getInstance(project).requestFocus(editorToNavigate.getContentComponent(), true));\n\n    StudyNavigator.navigateToFirstFailedAnswerPlaceholder(editor, taskFileToNavigate);\n  }","commit_id":"6314e9b3f7ea026bd252d221ed6c9a7eeda31d35","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"protected StudyCheckAction() {\n    super(\"Check Task (\" + KeymapUtil.getShortcutText(new KeyboardShortcut(KeyStroke.getKeyStroke(SHORTCUT), null)) + \")\", \"Check current task\", InteractiveLearningIcons.Resolve);\n  }","id":55319,"modified_method":"public StudyCheckAction() {\n    super(\"Check Task (\" + KeymapUtil.getShortcutText(new KeyboardShortcut(KeyStroke.getKeyStroke(SHORTCUT), null)) + \")\", \"Check current task\", InteractiveLearningIcons.Resolve);\n  }","commit_id":"6314e9b3f7ea026bd252d221ed6c9a7eeda31d35","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private static DefaultActionGroup getActionGroup(@NotNull final Project project) {\n    Course course = StudyTaskManager.getInstance(project).getCourse();\n    if (course == null) {\n      return createDefaultActionGroup(project);\n    }\n    StudyToolWindowConfigurator configurator = getStudyToolWindowConfigurator(project);\n    assert configurator != null;\n\n    return configurator.getActionGroup(project);\n  }","id":55320,"modified_method":"private static DefaultActionGroup getActionGroup(@NotNull final Project project) {\n    Course course = StudyTaskManager.getInstance(project).getCourse();\n    if (course == null) {\n      LOG.warn(\"Course is null\");\n      return new DefaultActionGroup();\n    }\n    StudyToolWindowConfigurator configurator = getStudyToolWindowConfigurator(project);\n    assert configurator != null;\n\n    return configurator.getActionGroup(project);\n  }","commit_id":"6314e9b3f7ea026bd252d221ed6c9a7eeda31d35","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void setButtomComponent(JComponent component) {\n    mySplitPane.setSecondComponent(component);\n  }","id":55321,"modified_method":"@SuppressWarnings(\"unused\")\n  public void setBottomComponent(JComponent component) {\n    mySplitPane.setSecondComponent(component);\n  }","commit_id":"6314e9b3f7ea026bd252d221ed6c9a7eeda31d35","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public static void deleteGuardedBlocks(@NotNull final Document document) {\n    if (document instanceof DocumentImpl) {\n      final DocumentImpl documentImpl = (DocumentImpl)document;\n      List<RangeMarker> blocks = documentImpl.getGuardedBlocks();\n      for (final RangeMarker block : blocks) {\n        ApplicationManager.getApplication().invokeLater(new Runnable() {\n          @Override\n          public void run() {\n            ApplicationManager.getApplication().runWriteAction(new Runnable() {\n              @Override\n              public void run() {\n                document.removeGuardedBlock(block);\n              }\n            });\n          }\n        });\n      }\n    }\n  }","id":55322,"modified_method":"public static void deleteGuardedBlocks(@NotNull final Document document) {\n    if (document instanceof DocumentImpl) {\n      final DocumentImpl documentImpl = (DocumentImpl)document;\n      List<RangeMarker> blocks = documentImpl.getGuardedBlocks();\n      for (final RangeMarker block : blocks) {\n        ApplicationManager.getApplication().invokeLater(() -> ApplicationManager.getApplication().runWriteAction(() -> {\n          document.removeGuardedBlock(block);\n        }));\n      }\n    }\n  }","commit_id":"6314e9b3f7ea026bd252d221ed6c9a7eeda31d35","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private Collection<SModuleReference> findInvalidModules() {\n    return findInvalidModules0(false);\n  }","id":55323,"modified_method":"private Collection<SModuleReference> findInvalidModules() {\n    return findInvalidModules0(false).keySet();\n  }","commit_id":"c1ee46ed0a326ec9bc5ab4d1c0bc06b47619c766","url":"https://github.com/JetBrains/MPS"},{"original_method":"@NotNull\n  private Collection<SModuleReference> findInvalidModules0(boolean errorLevel) {\n    myRepository.getModelAccess().checkReadAccess();\n\n    Map<ReloadableModule, AbsentDependencyException> modulesWithAbsentDeps = myModuleUpdater.getModulesWithAbsentDeps();\n    Collection<SModuleReference> result = new HashSet<SModuleReference>();\n    Collection<? extends SModuleReference> allModuleRefs = getAllModules();\n    for (SModuleReference mRef : allModuleRefs) {\n      if (!result.contains(mRef)) {\n        String msg = getModuleProblemMessage(mRef, modulesWithAbsentDeps);\n        if (msg == null) {\n          continue;\n        }\n        if (errorLevel) LOG.error(msg); else LOG.debug(msg);\n        result.add(mRef);\n      }\n    }\n    return result;\n  }","id":55324,"modified_method":"@NotNull\n  private Map<SModuleReference, String> findInvalidModules0(boolean errorLevel) {\n    myRepository.getModelAccess().checkReadAccess();\n\n    Map<ReloadableModule, AbsentDependencyException> modulesWithAbsentDeps = myModuleUpdater.getModulesWithAbsentDeps();\n    Map<SModuleReference, String> mRefToProblem = new HashMap<>();\n    Collection<? extends SModuleReference> allModuleRefs = getAllModules();\n    for (SModuleReference mRef : allModuleRefs) {\n      if (!mRefToProblem.containsKey(mRef)) {\n        String msg = getModuleProblemMessage(mRef, modulesWithAbsentDeps);\n        if (msg == null) {\n          continue;\n        }\n        if (errorLevel) LOG.error(msg); else LOG.debug(msg);\n        mRefToProblem.put(mRef, msg);\n      }\n    }\n    return mRefToProblem;\n  }","commit_id":"c1ee46ed0a326ec9bc5ab4d1c0bc06b47619c766","url":"https://github.com/JetBrains/MPS"},{"original_method":"@TestOnly\n  Collection<SModuleReference> findInvalidModulesAndReport() {\n    return findInvalidModules0(true);\n  }","id":55325,"modified_method":"@TestOnly\n  Map<SModuleReference, String> findInvalidModulesProblems() {\n    return findInvalidModules0(true);\n  }","commit_id":"c1ee46ed0a326ec9bc5ab4d1c0bc06b47619c766","url":"https://github.com/JetBrains/MPS"},{"original_method":"@Override\n  public final void addModule(@NotNull SModule module) {\n    if (myModuleToPathMap.containsKey(module)) {\n      throw new IllegalArgumentException(module + \" is already in the \" + this);\n    }\n    IFile descriptorFile = getDescriptorFileChecked(module);\n    if (descriptorFile != null) {\n      ModulePath path = new ModulePath(descriptorFile.toPath().toString());\n      myModuleToPathMap.put(module, path);\n      myProjectDescriptor.addModulePath(path);\n      addRenameListener(module);\n    }\n  }","id":55326,"modified_method":"@Override\n  public final void addModule(@NotNull SModule module) {\n    if (myModuleToPathMap.containsKey(module)) {\n//      throw new IllegalArgumentException(module + \" is already in the \" + this); todo enable after MPS-24400\n      LOG.warn(module + \" is already in \" + this);\n      return;\n    }\n    IFile descriptorFile = getDescriptorFileChecked(module);\n    if (descriptorFile != null) {\n      ModulePath path = new ModulePath(descriptorFile.toPath().toString());\n      myModuleToPathMap.put(module, path);\n      myProjectDescriptor.addModulePath(path);\n      addRenameListener(module);\n    }\n  }","commit_id":"c1ee46ed0a326ec9bc5ab4d1c0bc06b47619c766","url":"https://github.com/JetBrains/MPS"},{"original_method":"private void checkDeps(final String levelIndicator) {\n    final ModulesWatcher modulesWatcher = getModulesWatcher();\n    final SRepository repository = getRepository();\n    repository.getModelAccess().runWriteAction(new Runnable() {\n      @Override\n      public void run() {\n        Collection<SModuleReference> invalidModules = modulesWatcher.findInvalidModulesAndReport();\n\n        for (SModuleReference mRef : invalidModules) {\n          final String msg = String.format(\"Invalid dependencies (%s) for module %s\", levelIndicator, mRef.getModuleName());\n          myErrors.addError(new AssertionError(msg));\n        }\n      }\n    });\n  }","id":55327,"modified_method":"private void checkDeps(final String levelIndicator) {\n    final ModulesWatcher modulesWatcher = getModulesWatcher();\n    final SRepository repository = getRepository();\n    repository.getModelAccess().runWriteAction(() -> {\n      Map<SModuleReference, String> invalidModules2Problems = modulesWatcher.findInvalidModulesProblems();\n\n      for (SModuleReference mRef : invalidModules2Problems.keySet()) {\n        final String msg = String.format(\"Invalid dependencies (%s) for module %s: \", levelIndicator, mRef.getModuleName() + invalidModules2Problems.get(mRef));\n        myErrors.addError(new AssertionError(msg));\n      }\n    });\n  }","commit_id":"c1ee46ed0a326ec9bc5ab4d1c0bc06b47619c766","url":"https://github.com/JetBrains/MPS"},{"original_method":"private int getModulesCount() {\n    final SRepository repository = getRepository();\n    return new ModelAccessHelper(repository).runReadAction(new Computable<Integer>() {\n      @Override\n      public Integer compute() {\n        return IterableUtil.asCollection(repository.getModules()).size();\n      }\n    });\n  }","id":55328,"modified_method":"private int getModulesCount() {\n    final SRepository repository = getRepository();\n    return new ModelAccessHelper(repository).runReadAction(() -> IterableUtil.asCollection(repository.getModules()).size());\n  }","commit_id":"c1ee46ed0a326ec9bc5ab4d1c0bc06b47619c766","url":"https://github.com/JetBrains/MPS"},{"original_method":"private void showMergeDialog() {\n    DiffRequestFactory requestFactory = DiffRequestFactory.getInstance();\n    Collection<VirtualFile> files = myTable.getSelection();\n    if (!beforeResolve(files)) {\n      return;\n    }\n    \n    for (final VirtualFile file : files) {\n      final MergeData mergeData;\n      try {\n        mergeData = myProvider.loadRevisions(file);\n      }\n      catch (VcsException ex) {\n        Messages.showErrorDialog(myRootPanel, \"Error loading revisions to merge: \" + ex.getMessage());\n        break;\n      }\n\n      if (mergeData.CURRENT == null || mergeData.LAST == null || mergeData.ORIGINAL == null) {\n        Messages.showErrorDialog(myRootPanel, \"Error loading revisions to merge\");\n        break;\n      }\n\n      String leftTitle = myMergeDialogCustomizer.getLeftPanelTitle(file);\n      String baseTitle = myMergeDialogCustomizer.getCenterPanelTitle(file);\n      String rightTitle = myMergeDialogCustomizer.getRightPanelTitle(file, mergeData.LAST_REVISION_NUMBER);\n      String title = myMergeDialogCustomizer.getMergeWindowTitle(file);\n\n      final List<byte[]> byteContents = ContainerUtil.list(mergeData.CURRENT, mergeData.ORIGINAL, mergeData.LAST);\n      List<String> contentTitles = ContainerUtil.list(leftTitle, baseTitle, rightTitle);\n\n      Consumer<MergeResult> callback = new Consumer<MergeResult>() {\n        @Override\n        public void consume(final MergeResult result) {\n          Document document = FileDocumentManager.getInstance().getCachedDocument(file);\n          if (document != null) FileDocumentManager.getInstance().saveDocument(document);\n          checkMarkModifiedProject(file);\n\n          if (result != MergeResult.CANCEL) {\n            ApplicationManager.getApplication().runWriteAction(new Runnable() {\n              @Override\n              public void run() {\n                markFileProcessed(file, getSessionResolution(result));\n              }\n            });\n          }\n        }\n      };\n\n      MergeRequest request;\n      try {\n        if (myProvider.isBinary(file)) { // respect MIME-types in svn\n          request = requestFactory.createBinaryMergeRequest(myProject, file, byteContents, title, contentTitles, callback);\n        }\n        else {\n          request = requestFactory.createMergeRequest(myProject, file, byteContents, title, contentTitles, callback);\n        }\n      }\n      catch (InvalidDiffRequestException e) {\n        LOG.error(e);\n        Messages.showErrorDialog(myRootPanel, \"Can't show merge dialog\");\n        break;\n      }\n\n      DiffManager.getInstance().showMerge(myProject, request);\n    }\n    updateModelFromFiles();\n  }","id":55329,"modified_method":"private void showMergeDialog() {\n    DiffRequestFactory requestFactory = DiffRequestFactory.getInstance();\n    Collection<VirtualFile> files = myTable.getSelection();\n    if (!beforeResolve(files)) {\n      return;\n    }\n    \n    for (final VirtualFile file : files) {\n      final MergeData mergeData;\n      try {\n        mergeData = myProvider.loadRevisions(file);\n      }\n      catch (VcsException ex) {\n        Messages.showErrorDialog(myRootPanel, \"Error loading revisions to merge: \" + ex.getMessage());\n        break;\n      }\n\n      if (mergeData.CURRENT == null || mergeData.LAST == null || mergeData.ORIGINAL == null) {\n        Messages.showErrorDialog(myRootPanel, \"Error loading revisions to merge\");\n        break;\n      }\n\n      String leftTitle = myMergeDialogCustomizer.getLeftPanelTitle(file);\n      String baseTitle = myMergeDialogCustomizer.getCenterPanelTitle(file);\n      String rightTitle = myMergeDialogCustomizer.getRightPanelTitle(file, mergeData.LAST_REVISION_NUMBER);\n      String title = myMergeDialogCustomizer.getMergeWindowTitle(file);\n\n      final List<byte[]> byteContents = ContainerUtil.list(mergeData.CURRENT, mergeData.ORIGINAL, mergeData.LAST);\n      List<String> contentTitles = ContainerUtil.list(leftTitle, baseTitle, rightTitle);\n\n      Consumer<MergeResult> callback = result -> {\n        Document document = FileDocumentManager.getInstance().getCachedDocument(file);\n        if (document != null) FileDocumentManager.getInstance().saveDocument(document);\n        checkMarkModifiedProject(file);\n\n        if (result != MergeResult.CANCEL) {\n          ApplicationManager.getApplication().runWriteAction(() -> {\n            markFileProcessed(file, getSessionResolution(result));\n          });\n        }\n      };\n\n      MergeRequest request;\n      try {\n        if (myProvider.isBinary(file)) { // respect MIME-types in svn\n          request = requestFactory.createBinaryMergeRequest(myProject, file, byteContents, title, contentTitles, callback);\n        }\n        else {\n          request = requestFactory.createMergeRequest(myProject, file, byteContents, title, contentTitles, callback);\n        }\n      }\n      catch (InvalidDiffRequestException e) {\n        LOG.error(e);\n        Messages.showErrorDialog(myRootPanel, \"Can't show merge dialog\");\n        break;\n      }\n\n      DiffManager.getInstance().showMerge(myProject, request);\n    }\n    updateModelFromFiles();\n  }","commit_id":"3064cdf4f06f957b4d3bc5a6d73ac9507295a704","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Override\n  public void show() {\n    DumbService.allowStartingDumbModeInside(DumbModePermission.MAY_START_BACKGROUND, new Runnable() {\n      @Override\n      public void run() {\n        MultipleFileMergeDialog.super.show();\n      }\n    });\n  }","id":55330,"modified_method":"@Override\n  public void show() {\n    DumbService.allowStartingDumbModeInside(DumbModePermission.MAY_START_BACKGROUND, () -> super.show());\n  }","commit_id":"3064cdf4f06f957b4d3bc5a6d73ac9507295a704","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private void acceptRevision(final boolean isCurrent) {\n    FileDocumentManager.getInstance().saveAllDocuments();\n    final Collection<VirtualFile> files = myTable.getSelection();\n    if (!beforeResolve(files)) {\n      return;\n    }\n    \n    for (final VirtualFile file : files) {\n      final Ref<Exception> ex = new Ref<Exception>();\n      ApplicationManager.getApplication().runWriteAction(new Runnable() {\n        @Override\n        public void run() {\n          CommandProcessor.getInstance().executeCommand(myProject, new Runnable() {\n            @Override\n            public void run() {\n              try {\n                if (!(myProvider instanceof MergeProvider2) || myMergeSession.canMerge(file)) {\n                  if (!DiffUtil.makeWritable(myProject, file)) {\n                    throw new IOException(\"File is read-only: \" + file.getPresentableName());\n                  }\n                  MergeData data = myProvider.loadRevisions(file);\n                  if (isCurrent) {\n                    file.setBinaryContent(data.CURRENT);\n                  }\n                  else {\n                    file.setBinaryContent(data.LAST);\n                    checkMarkModifiedProject(file);\n                  }\n                }\n                markFileProcessed(file, isCurrent ? MergeSession.Resolution.AcceptedYours : MergeSession.Resolution.AcceptedTheirs);\n              }\n              catch (Exception e) {\n                ex.set(e);\n              }\n            }\n          }, \"Accept \" + (isCurrent ? \"Yours\" : \"Theirs\"), null);\n        }\n      });\n      if (!ex.isNull()) {\n        //noinspection ThrowableResultOfMethodCallIgnored\n        Messages.showErrorDialog(myRootPanel, \"Error saving merged data: \" + ex.get().getMessage());\n        break;\n      }\n    }\n    updateModelFromFiles();\n  }","id":55331,"modified_method":"private void acceptRevision(final boolean isCurrent) {\n    FileDocumentManager.getInstance().saveAllDocuments();\n    final Collection<VirtualFile> files = myTable.getSelection();\n    if (!beforeResolve(files)) {\n      return;\n    }\n    \n    for (final VirtualFile file : files) {\n      final Ref<Exception> ex = new Ref<Exception>();\n      ApplicationManager.getApplication().runWriteAction(() -> {\n        CommandProcessor.getInstance().executeCommand(myProject, () -> {\n          try {\n            if (!(myProvider instanceof MergeProvider2) || myMergeSession.canMerge(file)) {\n              if (!DiffUtil.makeWritable(myProject, file)) {\n                throw new IOException(\"File is read-only: \" + file.getPresentableName());\n              }\n              MergeData data = myProvider.loadRevisions(file);\n              if (isCurrent) {\n                file.setBinaryContent(data.CURRENT);\n              }\n              else {\n                file.setBinaryContent(data.LAST);\n                checkMarkModifiedProject(file);\n              }\n            }\n            markFileProcessed(file, isCurrent ? MergeSession.Resolution.AcceptedYours : MergeSession.Resolution.AcceptedTheirs);\n          }\n          catch (Exception e) {\n            ex.set(e);\n          }\n        }, \"Accept \" + (isCurrent ? \"Yours\" : \"Theirs\"), null);\n      });\n      if (!ex.isNull()) {\n        //noinspection ThrowableResultOfMethodCallIgnored\n        Messages.showErrorDialog(myRootPanel, \"Error saving merged data: \" + ex.get().getMessage());\n        break;\n      }\n    }\n    updateModelFromFiles();\n  }","commit_id":"3064cdf4f06f957b4d3bc5a6d73ac9507295a704","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void testImagesInsideJavadocJar() throws Exception {\n    final VirtualFile libClasses = getJarFile(\"library.jar\");\n    final VirtualFile libJavadocJar = getJarFile(\"library-javadoc.jar\");\n\n    ApplicationManager.getApplication().runWriteAction(new Runnable() {\n      @Override\n      public void run() {\n        final Library library = LibraryTablesRegistrar.getInstance().getLibraryTable(myProject).createLibrary(\"myLib\");\n        final Library.ModifiableModel model = library.getModifiableModel();\n        model.addRoot(libClasses, OrderRootType.CLASSES);\n        model.addRoot(libJavadocJar, JavadocOrderRootType.getInstance());\n        model.commit();\n\n        Module[] modules = ModuleManager.getInstance(myProject).getModules();\n        assertSize(1, modules);\n        ModuleRootModificationUtil.addDependency(modules[0], library);\n      }\n    });\n\n    PsiFile psiFile =\n      PsiFileFactory.getInstance(myProject).createFileFromText(JavaLanguage.INSTANCE, \"class Foo { com.jetbrains.Test field; }\");\n    Document document = PsiDocumentManager.getInstance(myProject).getDocument(psiFile);\n    assertNotNull(document);\n    Editor editor = EditorFactory.getInstance().createEditor(document, myProject);\n    try {\n      editor.getCaretModel().moveToOffset(document.getText().indexOf(\"Test\"));\n      DocumentationManager documentationManager = DocumentationManager.getInstance(myProject);\n      documentationManager.showJavaDocInfo(editor, psiFile, false);\n      waitTillDone(documentationManager.getLastAction());\n      JBPopup popup = documentationManager.getDocInfoHint();\n      assertNotNull(popup);\n      DocumentationComponent documentationComponent = (DocumentationComponent)popup.getContent().getComponent(0);\n      try {\n        byte[] imageData = getImageDataFromDocumentationComponent(documentationComponent);\n        assertEquals(228, imageData.length);\n      }\n      finally {\n        Disposer.dispose(documentationComponent);\n      }\n    }\n    finally {\n      EditorFactory.getInstance().releaseEditor(editor);\n    }\n  }","id":55332,"modified_method":"public void testImagesInsideJavadocJar() throws Exception {\n    final VirtualFile libClasses = getJarFile(\"library.jar\");\n    final VirtualFile libJavadocJar = getJarFile(\"library-javadoc.jar\");\n\n    ApplicationManager.getApplication().runWriteAction(() -> {\n      final Library library = LibraryTablesRegistrar.getInstance().getLibraryTable(myProject).createLibrary(\"myLib\");\n      final Library.ModifiableModel model = library.getModifiableModel();\n      model.addRoot(libClasses, OrderRootType.CLASSES);\n      model.addRoot(libJavadocJar, JavadocOrderRootType.getInstance());\n      model.commit();\n\n      Module[] modules = ModuleManager.getInstance(myProject).getModules();\n      assertSize(1, modules);\n      ModuleRootModificationUtil.addDependency(modules[0], library);\n    });\n\n    PsiFile psiFile =\n      PsiFileFactory.getInstance(myProject).createFileFromText(JavaLanguage.INSTANCE, \"class Foo { com.jetbrains.Test field; }\");\n    Document document = PsiDocumentManager.getInstance(myProject).getDocument(psiFile);\n    assertNotNull(document);\n    Editor editor = EditorFactory.getInstance().createEditor(document, myProject);\n    try {\n      editor.getCaretModel().moveToOffset(document.getText().indexOf(\"Test\"));\n      DocumentationManager documentationManager = DocumentationManager.getInstance(myProject);\n      documentationManager.showJavaDocInfo(editor, psiFile, false);\n      waitTillDone(documentationManager.getLastAction());\n      JBPopup popup = documentationManager.getDocInfoHint();\n      assertNotNull(popup);\n      DocumentationComponent documentationComponent = (DocumentationComponent)popup.getContent().getComponent(0);\n      try {\n        byte[] imageData = getImageDataFromDocumentationComponent(documentationComponent);\n        assertEquals(228, imageData.length);\n      }\n      finally {\n        Disposer.dispose(documentationComponent);\n      }\n    }\n    finally {\n      EditorFactory.getInstance().releaseEditor(editor);\n    }\n  }","commit_id":"ac779201db6f65d4f62febf005aecf0928c5c760","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private static byte[] getImageDataFromDocumentationComponent(DocumentationComponent documentationComponent) throws Exception {\n    JEditorPane editorPane = (JEditorPane)documentationComponent.getComponent();\n    final HTMLDocument document = (HTMLDocument)editorPane.getDocument();\n    final Ref<byte[]> result = new Ref<byte[]>();\n    document.render(new Runnable() {\n      @Override\n      public void run() {\n        try {\n          HTMLDocument.Iterator it = document.getIterator(HTML.Tag.IMG);\n          assertTrue(it.isValid());\n          String relativeUrl = (String)it.getAttributes().getAttribute(HTML.Attribute.SRC);\n          it.next();\n          assertFalse(it.isValid());\n          URL imageUrl = new URL(document.getBase(), relativeUrl);\n          InputStream stream = imageUrl.openStream();\n          try {\n            result.set(FileUtil.loadBytes(stream));\n          }\n          finally {\n            stream.close();\n          }\n        }\n        catch (IOException e) {\n          throw new RuntimeException(e);\n        }\n      }\n    });\n    return result.get();\n  }","id":55333,"modified_method":"private static byte[] getImageDataFromDocumentationComponent(DocumentationComponent documentationComponent) throws Exception {\n    JEditorPane editorPane = (JEditorPane)documentationComponent.getComponent();\n    final HTMLDocument document = (HTMLDocument)editorPane.getDocument();\n    final Ref<byte[]> result = new Ref<>();\n    document.render(() -> {\n      try {\n        HTMLDocument.Iterator it = document.getIterator(HTML.Tag.IMG);\n        assertTrue(it.isValid());\n        String relativeUrl = (String)it.getAttributes().getAttribute(HTML.Attribute.SRC);\n        it.next();\n        assertFalse(it.isValid());\n        URL imageUrl = new URL(document.getBase(), relativeUrl);\n        try (InputStream stream = imageUrl.openStream()) {\n          result.set(FileUtil.loadBytes(stream));\n        }\n      }\n      catch (IOException e) {\n        throw new RuntimeException(e);\n      }\n    });\n    return result.get();\n  }","commit_id":"ac779201db6f65d4f62febf005aecf0928c5c760","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@NotNull\n  @Override\n  public PsiFile preCheck(final @NotNull PsiFile copyFile, final @NotNull Editor realEditor, final int currentOffset) {\n    return ApplicationManager.getApplication().runReadAction(new Computable<PsiFile>() {\n      @Override\n      public PsiFile compute() {\n        Document document = copyFile.getViewProvider().getDocument();\n        assert document != null;\n        CharSequence sequence = document.getCharsSequence();\n        StringBuilder fileContentWithSemicolon = new StringBuilder(sequence);\n        if (isSemicolonNeeded(copyFile, realEditor)) {\n          fileContentWithSemicolon.insert(currentOffset, ';');\n          return PostfixLiveTemplate.copyFile(copyFile, fileContentWithSemicolon);\n        }\n\n        return copyFile;\n      }\n    });\n  }","id":55334,"modified_method":"@NotNull\n  @Override\n  public PsiFile preCheck(final @NotNull PsiFile copyFile, final @NotNull Editor realEditor, final int currentOffset) {\n    Document document = copyFile.getViewProvider().getDocument();\n    assert document != null;\n    CharSequence sequence = document.getCharsSequence();\n    StringBuilder fileContentWithSemicolon = new StringBuilder(sequence);\n    if (isSemicolonNeeded(copyFile, realEditor)) {\n      fileContentWithSemicolon.insert(currentOffset, ';');\n      return PostfixLiveTemplate.copyFile(copyFile, fileContentWithSemicolon);\n    }\n\n    return copyFile;\n  }","commit_id":"a8ba819ac0b2b5c5c002f69a116c9641fb2dc6b2","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Override\n  public void preExpand(@NotNull final PsiFile file, @NotNull final Editor editor) {\n    ApplicationManager.getApplication().assertIsDispatchThread();\n\n    file.putUserData(ADDED_SEMICOLON, null);\n    if (isSemicolonNeeded(file, editor)) {\n      ApplicationManager.getApplication().runWriteAction(new Runnable() {\n        @Override\n        public void run() {\n          CommandProcessor.getInstance().runUndoTransparentAction(new Runnable() {\n            public void run() {\n              Document document = file.getViewProvider().getDocument();\n              assert document != null;\n              EditorModificationUtil.insertStringAtCaret(editor, \";\", false, false);\n              PsiDocumentManager.getInstance(file.getProject()).commitDocument(document);\n              PsiElement at = file.findElementAt(editor.getCaretModel().getOffset());\n              if (at != null && at.getNode().getElementType() == JavaTokenType.SEMICOLON) {\n                file.putUserData(ADDED_SEMICOLON, SmartPointerManager.getInstance(file.getProject()).createSmartPsiElementPointer(at));\n              }\n            }\n          });\n        }\n      });\n    }\n  }","id":55335,"modified_method":"@Override\n  public void preExpand(@NotNull final PsiFile file, @NotNull final Editor editor) {\n    ApplicationManager.getApplication().assertIsDispatchThread();\n\n    if (isSemicolonNeeded(file, editor)) {\n      ApplicationManager.getApplication().runWriteAction(() -> {\n        CommandProcessor.getInstance().runUndoTransparentAction(\n          () -> {\n            EditorModificationUtil.insertStringAtCaret(editor, \";\", false, false);\n            PsiDocumentManager.getInstance(file.getProject()).commitDocument(editor.getDocument());\n          });\n      });\n    }\n  }","commit_id":"a8ba819ac0b2b5c5c002f69a116c9641fb2dc6b2","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Override\n  public void afterExpand(@NotNull final PsiFile file, @NotNull final Editor editor) {\n    final SmartPsiElementPointer<PsiElement> pointer = file.getUserData(ADDED_SEMICOLON);\n    if (pointer != null) {\n      final PsiElement addedSemicolon = pointer.getElement();\n      file.putUserData(ADDED_SEMICOLON, null);\n      if (addedSemicolon != null && addedSemicolon.isValid() && addedSemicolon.getNode().getElementType() == JavaTokenType.SEMICOLON) {\n        CommandProcessor.getInstance().runUndoTransparentAction(new Runnable() {\n          @Override\n          public void run() {\n            ApplicationManager.getApplication().runWriteAction(new Runnable() {\n              public void run() {\n                  addedSemicolon.delete();\n              }\n            });\n          }\n        });\n      }\n    }\n  }","id":55336,"modified_method":"@Override\n  public void afterExpand(@NotNull final PsiFile file, @NotNull final Editor editor) {\n  }","commit_id":"a8ba819ac0b2b5c5c002f69a116c9641fb2dc6b2","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void editBreakpoint(final Breakpoint breakpoint, final Editor editor) {\n    DebuggerInvocationUtil.swingInvokeLater(myProject, new Runnable() {\n      @Override\n      public void run() {\n        XBreakpoint xBreakpoint = breakpoint.myXBreakpoint;\n        if (xBreakpoint instanceof XLineBreakpointImpl) {\n          RangeHighlighter highlighter = ((XLineBreakpointImpl)xBreakpoint).getHighlighter();\n          if (highlighter != null) {\n            GutterIconRenderer renderer = highlighter.getGutterIconRenderer();\n            if (renderer != null) {\n              DebuggerSupport.getDebuggerSupport(JavaDebuggerSupport.class).getEditBreakpointAction().editBreakpoint(\n                myProject, editor, breakpoint.myXBreakpoint, renderer\n              );\n            }\n          }\n        }\n      }\n    });\n  }","id":55337,"modified_method":"public void editBreakpoint(final Breakpoint breakpoint, final Editor editor) {\n    DebuggerInvocationUtil.swingInvokeLater(myProject, () -> {\n      XBreakpoint xBreakpoint = breakpoint.myXBreakpoint;\n      if (xBreakpoint instanceof XLineBreakpointImpl) {\n        RangeHighlighter highlighter = ((XLineBreakpointImpl)xBreakpoint).getHighlighter();\n        if (highlighter != null) {\n          GutterIconRenderer renderer = highlighter.getGutterIconRenderer();\n          if (renderer != null) {\n            DebuggerSupport.getDebuggerSupport(JavaDebuggerSupport.class).getEditBreakpointAction().editBreakpoint(\n              myProject, editor, breakpoint.myXBreakpoint, renderer\n            );\n          }\n        }\n      }\n    });\n  }","commit_id":"792d40fc9f3126402d09643c03619fe07ebf527c","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void removeBreakpoint(@Nullable final Breakpoint breakpoint) {\n    if (breakpoint == null) {\n      return;\n    }\n    ApplicationManager.getApplication().runWriteAction(new Runnable() {\n      @Override\n      public void run() {\n        getXBreakpointManager().removeBreakpoint(breakpoint.myXBreakpoint);\n      }\n    });\n  }","id":55338,"modified_method":"public void removeBreakpoint(@Nullable final Breakpoint breakpoint) {\n    if (breakpoint == null) {\n      return;\n    }\n    ApplicationManager.getApplication().runWriteAction(() -> {\n      getXBreakpointManager().removeBreakpoint(breakpoint.myXBreakpoint);\n    });\n  }","commit_id":"792d40fc9f3126402d09643c03619fe07ebf527c","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@NotNull\n  public ExceptionBreakpoint addExceptionBreakpoint(@NotNull final String exceptionClassName, final String packageName) {\n    ApplicationManager.getApplication().assertIsDispatchThread();\n    final JavaExceptionBreakpointType type = XDebuggerUtil.getInstance().findBreakpointType(JavaExceptionBreakpointType.class);\n    return ApplicationManager.getApplication().runWriteAction(new Computable<ExceptionBreakpoint>() {\n      @Override\n      public ExceptionBreakpoint compute() {\n        XBreakpoint<JavaExceptionBreakpointProperties> xBreakpoint = XDebuggerManager.getInstance(myProject).getBreakpointManager()\n          .addBreakpoint(type, new JavaExceptionBreakpointProperties(exceptionClassName, packageName));\n        Breakpoint javaBreakpoint = getJavaBreakpoint(xBreakpoint);\n        if (javaBreakpoint instanceof ExceptionBreakpoint) {\n          ExceptionBreakpoint exceptionBreakpoint = (ExceptionBreakpoint)javaBreakpoint;\n          exceptionBreakpoint.setQualifiedName(exceptionClassName);\n          exceptionBreakpoint.setPackageName(packageName);\n          addBreakpoint(exceptionBreakpoint);\n          if (LOG.isDebugEnabled()) {\n            LOG.debug(\"ExceptionBreakpoint Added\");\n          }\n          return exceptionBreakpoint;\n        }\n        return null;\n      }\n    });\n  }","id":55339,"modified_method":"@NotNull\n  public ExceptionBreakpoint addExceptionBreakpoint(@NotNull final String exceptionClassName, final String packageName) {\n    ApplicationManager.getApplication().assertIsDispatchThread();\n    final JavaExceptionBreakpointType type = XDebuggerUtil.getInstance().findBreakpointType(JavaExceptionBreakpointType.class);\n    return ApplicationManager.getApplication().runWriteAction((Computable<ExceptionBreakpoint>)() -> {\n      XBreakpoint<JavaExceptionBreakpointProperties> xBreakpoint = XDebuggerManager.getInstance(myProject).getBreakpointManager()\n        .addBreakpoint(type, new JavaExceptionBreakpointProperties(exceptionClassName, packageName));\n      Breakpoint javaBreakpoint = getJavaBreakpoint(xBreakpoint);\n      if (javaBreakpoint instanceof ExceptionBreakpoint) {\n        ExceptionBreakpoint exceptionBreakpoint = (ExceptionBreakpoint)javaBreakpoint;\n        exceptionBreakpoint.setQualifiedName(exceptionClassName);\n        exceptionBreakpoint.setPackageName(packageName);\n        addBreakpoint(exceptionBreakpoint);\n        if (LOG.isDebugEnabled()) {\n          LOG.debug(\"ExceptionBreakpoint Added\");\n        }\n        return exceptionBreakpoint;\n      }\n      return null;\n    });\n  }","commit_id":"792d40fc9f3126402d09643c03619fe07ebf527c","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@NotNull\n  public List<Breakpoint> getBreakpoints() {\n    return ApplicationManager.getApplication().runReadAction(new Computable<List<Breakpoint>>() {\n      @Override\n      public List<Breakpoint> compute() {\n        return ContainerUtil.mapNotNull(getXBreakpointManager().getAllBreakpoints(), new Function<XBreakpoint<?>, Breakpoint>() {\n          @Override\n          public Breakpoint fun(XBreakpoint<?> xBreakpoint) {\n            return getJavaBreakpoint(xBreakpoint);\n          }\n        });\n      }\n    });\n  }","id":55340,"modified_method":"@NotNull\n  public List<Breakpoint> getBreakpoints() {\n    return ApplicationManager.getApplication().runReadAction((Computable<List<Breakpoint>>)() -> ContainerUtil.mapNotNull(getXBreakpointManager().getAllBreakpoints(), new Function<XBreakpoint<?>, Breakpoint>() {\n      @Override\n      public Breakpoint fun(XBreakpoint<?> xBreakpoint) {\n        return getJavaBreakpoint(xBreakpoint);\n      }\n    }));\n  }","commit_id":"792d40fc9f3126402d09643c03619fe07ebf527c","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private <B extends XBreakpoint<?>> XBreakpoint createXBreakpoint(Class<? extends XBreakpointType<B, ?>> typeCls) {\n    final XBreakpointType<B, ?> type = XDebuggerUtil.getInstance().findBreakpointType(typeCls);\n    return ApplicationManager.getApplication().runWriteAction(new Computable<XBreakpoint>() {\n      @Override\n      public XBreakpoint compute() {\n        return XDebuggerManager.getInstance(myProject).getBreakpointManager().addBreakpoint((XBreakpointType)type, type.createProperties());\n      }\n    });\n  }","id":55341,"modified_method":"private <B extends XBreakpoint<?>> XBreakpoint createXBreakpoint(Class<? extends XBreakpointType<B, ?>> typeCls) {\n    final XBreakpointType<B, ?> type = XDebuggerUtil.getInstance().findBreakpointType(typeCls);\n    return ApplicationManager.getApplication().runWriteAction((Computable<XBreakpoint>)() -> XDebuggerManager.getInstance(myProject).getBreakpointManager().addBreakpoint((XBreakpointType)type, type.createProperties()));\n  }","commit_id":"792d40fc9f3126402d09643c03619fe07ebf527c","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private void doRead(@NotNull final Element parentNode) {\n    ApplicationManager.getApplication().runReadAction(new Runnable() {\n      @Override\n      @SuppressWarnings({\"HardCodedStringLiteral\"})\n      public void run() {\n        final Map<String, Breakpoint> nameToBreakpointMap = new THashMap<>();\n        try {\n          final List groups = parentNode.getChildren();\n          for (final Object group1 : groups) {\n            final Element group = (Element)group1;\n            if (group.getName().equals(RULES_GROUP_NAME)) {\n              continue;\n            }\n            // skip already converted\n            if (group.getAttribute(CONVERTED_PARAM) != null) {\n              continue;\n            }\n            final String categoryName = group.getName();\n            final Key<Breakpoint> breakpointCategory = BreakpointCategory.lookup(categoryName);\n            final String defaultPolicy = group.getAttributeValue(DEFAULT_SUSPEND_POLICY_ATTRIBUTE_NAME);\n            final boolean conditionEnabled = Boolean.parseBoolean(group.getAttributeValue(DEFAULT_CONDITION_STATE_ATTRIBUTE_NAME, \"true\"));\n            setBreakpointDefaults(breakpointCategory, new BreakpointDefaults(defaultPolicy, conditionEnabled));\n            Element anyExceptionBreakpointGroup;\n            if (!AnyExceptionBreakpoint.ANY_EXCEPTION_BREAKPOINT.equals(breakpointCategory)) {\n              // for compatibility with previous format\n              anyExceptionBreakpointGroup = group.getChild(AnyExceptionBreakpoint.ANY_EXCEPTION_BREAKPOINT.toString());\n              //final BreakpointFactory factory = BreakpointFactory.getInstance(breakpointCategory);\n              //if (factory != null) {\n                for (Element breakpointNode : group.getChildren(\"breakpoint\")) {\n                  //Breakpoint breakpoint = factory.createBreakpoint(myProject, breakpointNode);\n                  Breakpoint breakpoint = createBreakpoint(categoryName, breakpointNode);\n                  breakpoint.readExternal(breakpointNode);\n                  nameToBreakpointMap.put(breakpoint.getDisplayName(), breakpoint);\n                }\n              //}\n            }\n            else {\n              anyExceptionBreakpointGroup = group;\n            }\n\n            if (anyExceptionBreakpointGroup != null) {\n              final Element breakpointElement = group.getChild(\"breakpoint\");\n              if (breakpointElement != null) {\n                XBreakpointManager manager = XDebuggerManager.getInstance(myProject).getBreakpointManager();\n                JavaExceptionBreakpointType type = XDebuggerUtil.getInstance().findBreakpointType(JavaExceptionBreakpointType.class);\n                XBreakpoint<JavaExceptionBreakpointProperties> xBreakpoint = manager.getDefaultBreakpoint(type);\n                Breakpoint breakpoint = getJavaBreakpoint(xBreakpoint);\n                if (breakpoint != null) {\n                  breakpoint.readExternal(breakpointElement);\n                  addBreakpoint(breakpoint);\n                }\n              }\n            }\n          }\n        }\n        catch (InvalidDataException ignored) {\n        }\n\n        final Element rulesGroup = parentNode.getChild(RULES_GROUP_NAME);\n        if (rulesGroup != null) {\n          final List<Element> rules = rulesGroup.getChildren(\"rule\");\n          for (Element rule : rules) {\n            // skip already converted\n            if (rule.getAttribute(CONVERTED_PARAM) != null) {\n              continue;\n            }\n            final Element master = rule.getChild(MASTER_BREAKPOINT_TAGNAME);\n            if (master == null) {\n              continue;\n            }\n            final Element slave = rule.getChild(SLAVE_BREAKPOINT_TAGNAME);\n            if (slave == null) {\n              continue;\n            }\n            final Breakpoint masterBreakpoint = nameToBreakpointMap.get(master.getAttributeValue(\"name\"));\n            if (masterBreakpoint == null) {\n              continue;\n            }\n            final Breakpoint slaveBreakpoint = nameToBreakpointMap.get(slave.getAttributeValue(\"name\"));\n            if (slaveBreakpoint == null) {\n              continue;\n            }\n\n            boolean leaveEnabled = \"true\".equalsIgnoreCase(rule.getAttributeValue(\"leaveEnabled\"));\n            XDependentBreakpointManager dependentBreakpointManager = ((XBreakpointManagerImpl)getXBreakpointManager()).getDependentBreakpointManager();\n            dependentBreakpointManager.setMasterBreakpoint(slaveBreakpoint.myXBreakpoint, masterBreakpoint.myXBreakpoint, leaveEnabled);\n            //addBreakpointRule(new EnableBreakpointRule(BreakpointManager.this, masterBreakpoint, slaveBreakpoint, leaveEnabled));\n          }\n        }\n\n        DebuggerInvocationUtil.invokeLater(myProject, BreakpointManager.this::updateBreakpointsUI);\n      }\n    });\n\n    myUIProperties.clear();\n    final Element props = parentNode.getChild(\"ui_properties\");\n    if (props != null) {\n      final List children = props.getChildren(\"property\");\n      for (Object child : children) {\n        Element property = (Element)child;\n        final String name = property.getAttributeValue(\"name\");\n        final String value = property.getAttributeValue(\"value\");\n        if (name != null && value != null) {\n          myUIProperties.put(name, value);\n        }\n      }\n    }\n  }","id":55342,"modified_method":"private void doRead(@NotNull final Element parentNode) {\n    ApplicationManager.getApplication().runReadAction(() -> {\n      final Map<String, Breakpoint> nameToBreakpointMap = new THashMap<>();\n      try {\n        final List groups = parentNode.getChildren();\n        for (final Object group1 : groups) {\n          final Element group = (Element)group1;\n          if (group.getName().equals(RULES_GROUP_NAME)) {\n            continue;\n          }\n          // skip already converted\n          if (group.getAttribute(CONVERTED_PARAM) != null) {\n            continue;\n          }\n          final String categoryName = group.getName();\n          final Key<Breakpoint> breakpointCategory = BreakpointCategory.lookup(categoryName);\n          final String defaultPolicy = group.getAttributeValue(DEFAULT_SUSPEND_POLICY_ATTRIBUTE_NAME);\n          final boolean conditionEnabled = Boolean.parseBoolean(group.getAttributeValue(DEFAULT_CONDITION_STATE_ATTRIBUTE_NAME, \"true\"));\n          setBreakpointDefaults(breakpointCategory, new BreakpointDefaults(defaultPolicy, conditionEnabled));\n          Element anyExceptionBreakpointGroup;\n          if (!AnyExceptionBreakpoint.ANY_EXCEPTION_BREAKPOINT.equals(breakpointCategory)) {\n            // for compatibility with previous format\n            anyExceptionBreakpointGroup = group.getChild(AnyExceptionBreakpoint.ANY_EXCEPTION_BREAKPOINT.toString());\n            //final BreakpointFactory factory = BreakpointFactory.getInstance(breakpointCategory);\n            //if (factory != null) {\n              for (Element breakpointNode : group.getChildren(\"breakpoint\")) {\n                //Breakpoint breakpoint = factory.createBreakpoint(myProject, breakpointNode);\n                Breakpoint breakpoint = createBreakpoint(categoryName, breakpointNode);\n                breakpoint.readExternal(breakpointNode);\n                nameToBreakpointMap.put(breakpoint.getDisplayName(), breakpoint);\n              }\n            //}\n          }\n          else {\n            anyExceptionBreakpointGroup = group;\n          }\n\n          if (anyExceptionBreakpointGroup != null) {\n            final Element breakpointElement = group.getChild(\"breakpoint\");\n            if (breakpointElement != null) {\n              XBreakpointManager manager = XDebuggerManager.getInstance(myProject).getBreakpointManager();\n              JavaExceptionBreakpointType type = XDebuggerUtil.getInstance().findBreakpointType(JavaExceptionBreakpointType.class);\n              XBreakpoint<JavaExceptionBreakpointProperties> xBreakpoint = manager.getDefaultBreakpoint(type);\n              Breakpoint breakpoint = getJavaBreakpoint(xBreakpoint);\n              if (breakpoint != null) {\n                breakpoint.readExternal(breakpointElement);\n                addBreakpoint(breakpoint);\n              }\n            }\n          }\n        }\n      }\n      catch (InvalidDataException ignored) {\n      }\n\n      final Element rulesGroup = parentNode.getChild(RULES_GROUP_NAME);\n      if (rulesGroup != null) {\n        final List<Element> rules = rulesGroup.getChildren(\"rule\");\n        for (Element rule : rules) {\n          // skip already converted\n          if (rule.getAttribute(CONVERTED_PARAM) != null) {\n            continue;\n          }\n          final Element master = rule.getChild(MASTER_BREAKPOINT_TAG_NAME);\n          if (master == null) {\n            continue;\n          }\n          final Element slave = rule.getChild(SLAVE_BREAKPOINT_TAG_NAME);\n          if (slave == null) {\n            continue;\n          }\n          final Breakpoint masterBreakpoint = nameToBreakpointMap.get(master.getAttributeValue(\"name\"));\n          if (masterBreakpoint == null) {\n            continue;\n          }\n          final Breakpoint slaveBreakpoint = nameToBreakpointMap.get(slave.getAttributeValue(\"name\"));\n          if (slaveBreakpoint == null) {\n            continue;\n          }\n\n          boolean leaveEnabled = \"true\".equalsIgnoreCase(rule.getAttributeValue(\"leaveEnabled\"));\n          XDependentBreakpointManager dependentBreakpointManager = ((XBreakpointManagerImpl)getXBreakpointManager()).getDependentBreakpointManager();\n          dependentBreakpointManager.setMasterBreakpoint(slaveBreakpoint.myXBreakpoint, masterBreakpoint.myXBreakpoint, leaveEnabled);\n          //addBreakpointRule(new EnableBreakpointRule(BreakpointManager.this, masterBreakpoint, slaveBreakpoint, leaveEnabled));\n        }\n      }\n\n      DebuggerInvocationUtil.invokeLater(myProject, this::updateBreakpointsUI);\n    });\n\n    myUIProperties.clear();\n    final Element props = parentNode.getChild(\"ui_properties\");\n    if (props != null) {\n      final List children = props.getChildren(\"property\");\n      for (Object child : children) {\n        Element property = (Element)child;\n        final String name = property.getAttributeValue(\"name\");\n        final String value = property.getAttributeValue(\"value\");\n        if (name != null && value != null) {\n          myUIProperties.put(name, value);\n        }\n      }\n    }\n  }","commit_id":"792d40fc9f3126402d09643c03619fe07ebf527c","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private <B extends XBreakpoint<?>> XLineBreakpoint addXLineBreakpoint(Class<? extends XBreakpointType<B,?>> typeCls, Document document, final int lineIndex) {\n    final XBreakpointType<B, ?> type = XDebuggerUtil.getInstance().findBreakpointType(typeCls);\n    final VirtualFile file = FileDocumentManager.getInstance().getFile(document);\n    return ApplicationManager.getApplication().runWriteAction(new Computable<XLineBreakpoint>() {\n      @Override\n      public XLineBreakpoint compute() {\n        return XDebuggerManager.getInstance(myProject).getBreakpointManager()\n          .addLineBreakpoint((XLineBreakpointType)type, file.getUrl(), lineIndex,\n                             ((XLineBreakpointType)type).createBreakpointProperties(file, lineIndex));\n      }\n    });\n  }","id":55343,"modified_method":"private <B extends XBreakpoint<?>> XLineBreakpoint addXLineBreakpoint(Class<? extends XBreakpointType<B,?>> typeCls, Document document, final int lineIndex) {\n    final XBreakpointType<B, ?> type = XDebuggerUtil.getInstance().findBreakpointType(typeCls);\n    final VirtualFile file = FileDocumentManager.getInstance().getFile(document);\n    return ApplicationManager.getApplication().runWriteAction((Computable<XLineBreakpoint>)() -> XDebuggerManager.getInstance(myProject).getBreakpointManager()\n      .addLineBreakpoint((XLineBreakpointType)type, file.getUrl(), lineIndex,\n                         ((XLineBreakpointType)type).createBreakpointProperties(file, lineIndex)));\n  }","commit_id":"792d40fc9f3126402d09643c03619fe07ebf527c","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void readExternal(@NotNull final Element parentNode) {\n    myOriginalBreakpointsNodes.clear();\n    // save old breakpoints\n    for (Element element : parentNode.getChildren()) {\n      myOriginalBreakpointsNodes.put(element.getName(), element.clone());\n    }\n    if (myProject.isOpen()) {\n      doRead(parentNode);\n    }\n    else {\n      myStartupManager.registerPostStartupActivity(new Runnable() {\n        @Override\n        public void run() {\n          doRead(parentNode);\n        }\n      });\n    }\n  }","id":55344,"modified_method":"public void readExternal(@NotNull final Element parentNode) {\n    myOriginalBreakpointsNodes.clear();\n    // save old breakpoints\n    for (Element element : parentNode.getChildren()) {\n      myOriginalBreakpointsNodes.put(element.getName(), element.clone());\n    }\n    if (myProject.isOpen()) {\n      doRead(parentNode);\n    }\n    else {\n      myStartupManager.registerPostStartupActivity(() -> doRead(parentNode));\n    }\n  }","commit_id":"792d40fc9f3126402d09643c03619fe07ebf527c","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Nullable\n  public static SourcePosition getPlace(AnActionEvent event) {\n    final DataContext dataContext = event.getDataContext();\n    final Project project = event.getData(CommonDataKeys.PROJECT);\n    if(project == null) {\n      return null;\n    }\n    if (ActionPlaces.PROJECT_VIEW_POPUP.equals(event.getPlace()) ||\n        ActionPlaces.STRUCTURE_VIEW_POPUP.equals(event.getPlace()) ||\n        ActionPlaces.FAVORITES_VIEW_POPUP.equals(event.getPlace())) {\n      final PsiElement psiElement = event.getData(CommonDataKeys.PSI_ELEMENT);\n      if(psiElement instanceof PsiField) {\n        return SourcePosition.createFromElement(psiElement);\n      }\n      return null;\n    }\n\n    final DebuggerTreeNodeImpl selectedNode = DebuggerAction.getSelectedNode(dataContext);\n    if(selectedNode != null && selectedNode.getDescriptor() instanceof FieldDescriptorImpl) {\n      final DebuggerContextImpl debuggerContext = DebuggerAction.getDebuggerContext(dataContext);\n      final DebugProcessImpl debugProcess = debuggerContext.getDebugProcess();\n      if (debugProcess != null) { // if there is an active debugsession\n        final Ref<SourcePosition> positionRef = new Ref<>(null);\n        debugProcess.getManagerThread().invokeAndWait(new DebuggerContextCommandImpl(debuggerContext) {\n          public Priority getPriority() {\n            return Priority.HIGH;\n          }\n          public void threadAction() {\n            ApplicationManager.getApplication().runReadAction(new Runnable() {\n              public void run() {\n                positionRef.set(SourcePositionProvider.getSourcePosition(selectedNode.getDescriptor(), project, debuggerContext));\n              }\n            });\n          }\n        });\n        final SourcePosition sourcePosition = positionRef.get();\n        if (sourcePosition != null) {\n          return sourcePosition;\n        }\n      }\n    }\n\n    if(DebuggerAction.isContextView(event)) {\n      DebuggerTree tree = DebuggerTree.DATA_KEY.getData(dataContext);\n      if(tree != null && tree.getSelectionPath() != null) {\n        DebuggerTreeNodeImpl node = ((DebuggerTreeNodeImpl)tree.getSelectionPath().getLastPathComponent());\n        if(node != null && node.getDescriptor() instanceof FieldDescriptorImpl) {\n          Field field = ((FieldDescriptorImpl)node.getDescriptor()).getField();\n          DebuggerSession session = tree.getDebuggerContext().getDebuggerSession();\n          PsiClass psiClass = DebuggerUtils.findClass(field.declaringType().name(), project, (session != null) ? session.getSearchScope() : GlobalSearchScope.allScope(project));\n          if(psiClass != null) {\n            psiClass = (PsiClass) psiClass.getNavigationElement();\n            final PsiField psiField = psiClass.findFieldByName(field.name(), true);\n            if (psiField != null) {\n              return SourcePosition.createFromElement(psiField);\n            }\n          }\n        }\n      }\n      return null;\n    }\n\n    Editor editor = event.getData(CommonDataKeys.EDITOR);\n    if(editor == null) {\n      editor = FileEditorManager.getInstance(project).getSelectedTextEditor();\n    }\n    if (editor != null) {\n      final Document document = editor.getDocument();\n      PsiFile file = PsiDocumentManager.getInstance(project).getPsiFile(document);\n      if (file != null) {\n        final VirtualFile virtualFile = file.getVirtualFile();\n        FileType fileType = virtualFile != null ? virtualFile.getFileType() : null;\n        if (StdFileTypes.JAVA == fileType || StdFileTypes.CLASS  == fileType) {\n          final PsiField field = FieldBreakpoint.findField(project, document, editor.getCaretModel().getOffset());\n          if(field != null){\n            return SourcePosition.createFromElement(field);\n          }\n        }\n      }\n    }\n    return null;\n  }","id":55345,"modified_method":"@Nullable\n  public static SourcePosition getPlace(AnActionEvent event) {\n    final DataContext dataContext = event.getDataContext();\n    final Project project = event.getData(CommonDataKeys.PROJECT);\n    if(project == null) {\n      return null;\n    }\n    if (ActionPlaces.PROJECT_VIEW_POPUP.equals(event.getPlace()) ||\n        ActionPlaces.STRUCTURE_VIEW_POPUP.equals(event.getPlace()) ||\n        ActionPlaces.FAVORITES_VIEW_POPUP.equals(event.getPlace())) {\n      final PsiElement psiElement = event.getData(CommonDataKeys.PSI_ELEMENT);\n      if(psiElement instanceof PsiField) {\n        return SourcePosition.createFromElement(psiElement);\n      }\n      return null;\n    }\n\n    final DebuggerTreeNodeImpl selectedNode = DebuggerAction.getSelectedNode(dataContext);\n    if(selectedNode != null && selectedNode.getDescriptor() instanceof FieldDescriptorImpl) {\n      final DebuggerContextImpl debuggerContext = DebuggerAction.getDebuggerContext(dataContext);\n      final DebugProcessImpl debugProcess = debuggerContext.getDebugProcess();\n      if (debugProcess != null) { // if there is an active debug session\n        final Ref<SourcePosition> positionRef = new Ref<>(null);\n        debugProcess.getManagerThread().invokeAndWait(new DebuggerContextCommandImpl(debuggerContext) {\n          @Override\n          public Priority getPriority() {\n            return Priority.HIGH;\n          }\n\n          @Override\n          public void threadAction() {\n            ApplicationManager.getApplication().runReadAction(() -> {\n              positionRef.set(SourcePositionProvider.getSourcePosition(selectedNode.getDescriptor(), project, debuggerContext));\n            });\n          }\n        });\n        final SourcePosition sourcePosition = positionRef.get();\n        if (sourcePosition != null) {\n          return sourcePosition;\n        }\n      }\n    }\n\n    if(DebuggerAction.isContextView(event)) {\n      DebuggerTree tree = DebuggerTree.DATA_KEY.getData(dataContext);\n      if(tree != null && tree.getSelectionPath() != null) {\n        DebuggerTreeNodeImpl node = ((DebuggerTreeNodeImpl)tree.getSelectionPath().getLastPathComponent());\n        if(node != null && node.getDescriptor() instanceof FieldDescriptorImpl) {\n          Field field = ((FieldDescriptorImpl)node.getDescriptor()).getField();\n          DebuggerSession session = tree.getDebuggerContext().getDebuggerSession();\n          PsiClass psiClass = DebuggerUtils.findClass(field.declaringType().name(), project, (session != null) ? session.getSearchScope() : GlobalSearchScope.allScope(project));\n          if(psiClass != null) {\n            psiClass = (PsiClass) psiClass.getNavigationElement();\n            final PsiField psiField = psiClass.findFieldByName(field.name(), true);\n            if (psiField != null) {\n              return SourcePosition.createFromElement(psiField);\n            }\n          }\n        }\n      }\n      return null;\n    }\n\n    Editor editor = event.getData(CommonDataKeys.EDITOR);\n    if(editor == null) {\n      editor = FileEditorManager.getInstance(project).getSelectedTextEditor();\n    }\n    if (editor != null) {\n      final Document document = editor.getDocument();\n      PsiFile file = PsiDocumentManager.getInstance(project).getPsiFile(document);\n      if (file != null) {\n        final VirtualFile virtualFile = file.getVirtualFile();\n        FileType fileType = virtualFile != null ? virtualFile.getFileType() : null;\n        if (StdFileTypes.JAVA == fileType || StdFileTypes.CLASS  == fileType) {\n          final PsiField field = FieldBreakpoint.findField(project, document, editor.getCaretModel().getOffset());\n          if(field != null){\n            return SourcePosition.createFromElement(field);\n          }\n        }\n      }\n    }\n    return null;\n  }","commit_id":"792d40fc9f3126402d09643c03619fe07ebf527c","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void test1() throws Exception {\n    final String rootPath = PathManagerEx.getTestDataPath().replace(File.separatorChar, '/') + \"/moduleRootManager/exportedModules/\";\n    final VirtualFile testRoot = LocalFileSystem.getInstance().refreshAndFindFileByPath(rootPath);\n    assertNotNull(testRoot);\n\n    ApplicationManager.getApplication().runWriteAction(new Runnable() {\n      @Override\n      public void run() {\n        final ModifiableModuleModel moduleModel = ModuleManager.getInstance(myProject).getModifiableModel();\n        final Module moduleA = moduleModel.newModule(\"A.iml\", StdModuleTypes.JAVA.getId());\n        final Module moduleB = moduleModel.newModule(\"B.iml\", StdModuleTypes.JAVA.getId());\n        final Module moduleC = moduleModel.newModule(\"C.iml\", StdModuleTypes.JAVA.getId());\n        moduleModel.commit();\n\n        configureModule(moduleA, testRoot, \"A\");\n        configureModule(moduleB, testRoot, \"B\");\n        configureModule(moduleC, testRoot, \"C\");\n\n        ModuleRootModificationUtil.addDependency(moduleB, moduleA, DependencyScope.COMPILE, true);\n\n        ModuleRootModificationUtil.addDependency(moduleC, moduleB);\n\n        final PsiClass pCClass =\n          JavaPsiFacade.getInstance(myProject).findClass(\"p.C\", GlobalSearchScope.moduleWithDependenciesAndLibrariesScope(moduleC));\n        assertNotNull(pCClass);\n\n        final PsiClass pAClass =\n          JavaPsiFacade.getInstance(myProject).findClass(\"p.A\", GlobalSearchScope.moduleWithDependenciesAndLibrariesScope(moduleB));\n        assertNotNull(pAClass);\n\n        final PsiClass pAClass2 =\n          JavaPsiFacade.getInstance(myProject).findClass(\"p.A\", GlobalSearchScope.moduleWithDependenciesAndLibrariesScope(moduleC));\n        assertNotNull(pAClass2);\n      }\n    });\n  }","id":55346,"modified_method":"public void test1() throws Exception {\n    final String rootPath = PathManagerEx.getTestDataPath().replace(File.separatorChar, '/') + \"/moduleRootManager/exportedModules/\";\n    final VirtualFile testRoot = LocalFileSystem.getInstance().refreshAndFindFileByPath(rootPath);\n    assertNotNull(testRoot);\n\n    ApplicationManager.getApplication().runWriteAction(() -> {\n      final ModifiableModuleModel moduleModel = ModuleManager.getInstance(myProject).getModifiableModel();\n      final Module moduleA = moduleModel.newModule(\"A.iml\", StdModuleTypes.JAVA.getId());\n      final Module moduleB = moduleModel.newModule(\"B.iml\", StdModuleTypes.JAVA.getId());\n      final Module moduleC = moduleModel.newModule(\"C.iml\", StdModuleTypes.JAVA.getId());\n      moduleModel.commit();\n\n      configureModule(moduleA, testRoot, \"A\");\n      configureModule(moduleB, testRoot, \"B\");\n      configureModule(moduleC, testRoot, \"C\");\n\n      ModuleRootModificationUtil.addDependency(moduleB, moduleA, DependencyScope.COMPILE, true);\n\n      ModuleRootModificationUtil.addDependency(moduleC, moduleB);\n\n      final PsiClass pCClass =\n        JavaPsiFacade.getInstance(myProject).findClass(\"p.C\", GlobalSearchScope.moduleWithDependenciesAndLibrariesScope(moduleC));\n      assertNotNull(pCClass);\n\n      final PsiClass pAClass =\n        JavaPsiFacade.getInstance(myProject).findClass(\"p.A\", GlobalSearchScope.moduleWithDependenciesAndLibrariesScope(moduleB));\n      assertNotNull(pAClass);\n\n      final PsiClass pAClass2 =\n        JavaPsiFacade.getInstance(myProject).findClass(\"p.A\", GlobalSearchScope.moduleWithDependenciesAndLibrariesScope(moduleC));\n      assertNotNull(pAClass2);\n    });\n  }","commit_id":"d8671c3fe8104a93e42c318589f5f2c8445803f1","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void test1() throws Exception {\n    final Sdk jdk = IdeaTestUtil.getMockJdk17(\"java 1.4\");\n    ApplicationManager.getApplication().runWriteAction(new Runnable() {\n      @Override\n      public void run() {\n        ProjectJdkTable.getInstance().addJdk(jdk);\n      }\n    });\n    final ModuleRootManager rootManager = ModuleRootManager.getInstance(myModule);\n\n    ApplicationManager.getApplication().runWriteAction(new Runnable() {\n      @Override\n      public void run() {\n        final ProjectRootManagerEx rootManagerEx = ProjectRootManagerEx.getInstanceEx(myProject);\n        rootManagerEx.setProjectSdkName(jdk.getName());\n        ModuleRootModificationUtil.setSdkInherited(myModule);\n      }\n    });\n\n    assertTrue(\"JDK is inherited after explicit inheritSdk()\", rootManager.isSdkInherited());\n    assertEquals(\"Correct jdk inherited\", jdk, rootManager.getSdk());\n\n    ModuleRootModificationUtil.setModuleSdk(myModule, null);\n\n    assertFalse(\"JDK is not inherited after setJdk(null)\", rootManager.isSdkInherited());\n    assertNull(\"No JDK assigned\", rootManager.getSdk());\n\n    final Sdk jdk1 = IdeaTestUtil.getMockJdk17(\"jjj\");\n    ApplicationManager.getApplication().runWriteAction(new Runnable() {\n      @Override\n      public void run() {\n        ProjectJdkTable.getInstance().addJdk(jdk1);\n      }\n    });\n    ModuleRootModificationUtil.setModuleSdk(myModule, jdk1);\n\n    assertFalse(\"JDK is not inherited after setJdk(jdk1)\", rootManager.isSdkInherited());\n    assertEquals(\"jdk1 is assigned\", jdk1, rootManager.getSdk());\n  }","id":55347,"modified_method":"public void test1() throws Exception {\n    final Sdk jdk = IdeaTestUtil.getMockJdk17(\"java 1.4\");\n    ApplicationManager.getApplication().runWriteAction(() -> {\n      ProjectJdkTable.getInstance().addJdk(jdk);\n    });\n    final ModuleRootManager rootManager = ModuleRootManager.getInstance(myModule);\n\n    ApplicationManager.getApplication().runWriteAction(() -> {\n      final ProjectRootManagerEx rootManagerEx = ProjectRootManagerEx.getInstanceEx(myProject);\n      rootManagerEx.setProjectSdkName(jdk.getName());\n      ModuleRootModificationUtil.setSdkInherited(myModule);\n    });\n\n    assertTrue(\"JDK is inherited after explicit inheritSdk()\", rootManager.isSdkInherited());\n    assertEquals(\"Correct jdk inherited\", jdk, rootManager.getSdk());\n\n    ModuleRootModificationUtil.setModuleSdk(myModule, null);\n\n    assertFalse(\"JDK is not inherited after setJdk(null)\", rootManager.isSdkInherited());\n    assertNull(\"No JDK assigned\", rootManager.getSdk());\n\n    final Sdk jdk1 = IdeaTestUtil.getMockJdk17(\"jjj\");\n    ApplicationManager.getApplication().runWriteAction(() -> {\n      ProjectJdkTable.getInstance().addJdk(jdk1);\n    });\n    ModuleRootModificationUtil.setModuleSdk(myModule, jdk1);\n\n    assertFalse(\"JDK is not inherited after setJdk(jdk1)\", rootManager.isSdkInherited());\n    assertEquals(\"jdk1 is assigned\", jdk1, rootManager.getSdk());\n  }","commit_id":"d8671c3fe8104a93e42c318589f5f2c8445803f1","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void test2() throws Exception {\n    final ModuleRootManager rootManager = ModuleRootManager.getInstance(myModule);\n    ModuleRootModificationUtil.setSdkInherited(myModule);\n\n    assertTrue(\"JDK is inherited after inheritSdk()\", rootManager.isSdkInherited());\n    assertNull(\"No JDK assigned\", rootManager.getSdk());\n\n    final Sdk mockJdk = IdeaTestUtil.getMockJdk17(\"mock 1.4\");\n    ApplicationManager.getApplication().runWriteAction(new Runnable() {\n      @Override\n      public void run() {\n        ProjectJdkTable.getInstance().addJdk(mockJdk);\n      }\n    });\n    final ProjectRootManagerEx projectRootManager = ProjectRootManagerEx.getInstanceEx(myProject);\n\n    ApplicationManager.getApplication().runWriteAction(new Runnable() {\n      @Override\n      public void run() {\n        projectRootManager.setProjectSdk(mockJdk);\n      }\n    });\n\n    assertTrue(rootManager.isSdkInherited());\n    assertEquals(\"mockJdk inherited\", mockJdk, rootManager.getSdk());\n\n    ApplicationManager.getApplication().runWriteAction(new Runnable() {\n      @Override\n      public void run() {\n        projectRootManager.setProjectSdkName(\"jdk1\");\n      }\n    });\n\n    assertTrue(rootManager.isSdkInherited());\n    Assert.assertEquals(\"Correct non-existing JDK inherited\", \"jdk1\",\n                        rootManager.orderEntries().process(new RootPolicy<String>() {\n                          @Override\n                          public String visitInheritedJdkOrderEntry(InheritedJdkOrderEntry inheritedJdkOrderEntry, String s) {\n                            return inheritedJdkOrderEntry.getJdkName();\n                          }\n                        }, null));\n    assertNull(\"Non-existing JDK\", rootManager.getSdk());\n\n    final Sdk jdk1 = IdeaTestUtil.getMockJdk17(\"jdk1\");\n    ApplicationManager.getApplication().runWriteAction(new Runnable() {\n      @Override\n      public void run() {\n        ProjectJdkTable.getInstance().addJdk(jdk1);\n      }\n    });\n\n    assertTrue(rootManager.isSdkInherited());\n    assertNotNull(\"JDK appeared\", rootManager.getSdk());\n    assertEquals(\"jdk1 found\", jdk1, rootManager.getSdk());\n  }","id":55348,"modified_method":"public void test2() throws Exception {\n    final ModuleRootManager rootManager = ModuleRootManager.getInstance(myModule);\n    ModuleRootModificationUtil.setSdkInherited(myModule);\n\n    assertTrue(\"JDK is inherited after inheritSdk()\", rootManager.isSdkInherited());\n    assertNull(\"No JDK assigned\", rootManager.getSdk());\n\n    final Sdk mockJdk = IdeaTestUtil.getMockJdk17(\"mock 1.4\");\n    ApplicationManager.getApplication().runWriteAction(() -> {\n      ProjectJdkTable.getInstance().addJdk(mockJdk);\n    });\n    final ProjectRootManagerEx projectRootManager = ProjectRootManagerEx.getInstanceEx(myProject);\n\n    ApplicationManager.getApplication().runWriteAction(() -> {\n      projectRootManager.setProjectSdk(mockJdk);\n    });\n\n    assertTrue(rootManager.isSdkInherited());\n    assertEquals(\"mockJdk inherited\", mockJdk, rootManager.getSdk());\n\n    ApplicationManager.getApplication().runWriteAction(() -> {\n      projectRootManager.setProjectSdkName(\"jdk1\");\n    });\n\n    assertTrue(rootManager.isSdkInherited());\n    Assert.assertEquals(\"Correct non-existing JDK inherited\", \"jdk1\",\n                        rootManager.orderEntries().process(new RootPolicy<String>() {\n                          @Override\n                          public String visitInheritedJdkOrderEntry(InheritedJdkOrderEntry inheritedJdkOrderEntry, String s) {\n                            return inheritedJdkOrderEntry.getJdkName();\n                          }\n                        }, null));\n    assertNull(\"Non-existing JDK\", rootManager.getSdk());\n\n    final Sdk jdk1 = IdeaTestUtil.getMockJdk17(\"jdk1\");\n    ApplicationManager.getApplication().runWriteAction(() -> {\n      ProjectJdkTable.getInstance().addJdk(jdk1);\n    });\n\n    assertTrue(rootManager.isSdkInherited());\n    assertNotNull(\"JDK appeared\", rootManager.getSdk());\n    assertEquals(\"jdk1 found\", jdk1, rootManager.getSdk());\n  }","commit_id":"d8671c3fe8104a93e42c318589f5f2c8445803f1","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void testModification() throws Exception {\n    final LibraryTable libraryTable = LibraryTablesRegistrar.getInstance().getLibraryTable();\n    final Library library = libraryTable.createLibrary(\"NewLibrary\");\n    final boolean[] listenerNotifiedOnChange = new boolean[1];\n    library.getRootProvider().addRootSetChangedListener(new RootProvider.RootSetChangedListener() {\n      @Override\n      public void rootSetChanged(RootProvider wrapper) {\n        listenerNotifiedOnChange[0] = true;\n      }\n\n    });\n    final Library.ModifiableModel model1 = library.getModifiableModel();\n    model1.addRoot(\"file://x.jar\", OrderRootType.CLASSES);\n    model1.addRoot(\"file://x-src.jar\", OrderRootType.SOURCES);\n    commit(model1);\n    assertTrue(listenerNotifiedOnChange[0]);\n\n    listenerNotifiedOnChange[0] = false;\n\n    final Library.ModifiableModel model2 = library.getModifiableModel();\n    model2.setName(\"library\");\n    commit(model2);\n    assertFalse(listenerNotifiedOnChange[0]);\n\n    ApplicationManager.getApplication().runWriteAction(new Runnable() {\n      @Override\n      public void run() {\n        libraryTable.removeLibrary(library);\n      }\n    });\n  }","id":55349,"modified_method":"public void testModification() throws Exception {\n    final LibraryTable libraryTable = LibraryTablesRegistrar.getInstance().getLibraryTable();\n    final Library library = libraryTable.createLibrary(\"NewLibrary\");\n    final boolean[] listenerNotifiedOnChange = new boolean[1];\n    library.getRootProvider().addRootSetChangedListener(wrapper -> listenerNotifiedOnChange[0] = true);\n    final Library.ModifiableModel model1 = library.getModifiableModel();\n    model1.addRoot(\"file://x.jar\", OrderRootType.CLASSES);\n    model1.addRoot(\"file://x-src.jar\", OrderRootType.SOURCES);\n    commit(model1);\n    assertTrue(listenerNotifiedOnChange[0]);\n\n    listenerNotifiedOnChange[0] = false;\n\n    final Library.ModifiableModel model2 = library.getModifiableModel();\n    model2.setName(\"library\");\n    commit(model2);\n    assertFalse(listenerNotifiedOnChange[0]);\n\n    ApplicationManager.getApplication().runWriteAction(() -> {\n      libraryTable.removeLibrary(library);\n    });\n  }","commit_id":"d8671c3fe8104a93e42c318589f5f2c8445803f1","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private Collection<Library> getLibraries() {\n    CommonProcessors.CollectProcessor<Library> processor = new CommonProcessors.CollectProcessor<Library>();\n    ModuleRootManager.getInstance(myModule).orderEntries().forEachLibrary(processor);\n    return processor.getResults();\n  }","id":55350,"modified_method":"private Collection<Library> getLibraries() {\n    CommonProcessors.CollectProcessor<Library> processor = new CommonProcessors.CollectProcessor<>();\n    ModuleRootManager.getInstance(myModule).orderEntries().forEachLibrary(processor);\n    return processor.getResults();\n  }","commit_id":"d8671c3fe8104a93e42c318589f5f2c8445803f1","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private static void commit(final Library.ModifiableModel modifyableModel1) {\n    ApplicationManager.getApplication().runWriteAction(new Runnable() {\n      @Override\n      public void run() {\n        modifyableModel1.commit();\n      }\n    });\n  }","id":55351,"modified_method":"private static void commit(final Library.ModifiableModel modifiableModel) {\n    ApplicationManager.getApplication().runWriteAction(modifiableModel::commit);\n  }","commit_id":"d8671c3fe8104a93e42c318589f5f2c8445803f1","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Override\n  protected void setUp() throws Exception {\n    super.setUp();\n    ApplicationManager.getApplication().runWriteAction(new Runnable() {\n      @Override\n      public void run() {\n        initContentRoot();\n        initModifiableModel();\n      }\n    });\n  }","id":55352,"modified_method":"@Override\n  protected void setUp() throws Exception {\n    super.setUp();\n    ApplicationManager.getApplication().runWriteAction(() -> {\n      initContentRoot();\n      initModifiableModel();\n    });\n  }","commit_id":"d8671c3fe8104a93e42c318589f5f2c8445803f1","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Override\n  protected void setUp() throws Exception {\n    super.setUp();\n    ApplicationManager.getApplication().runWriteAction(new Runnable() {\n      @Override\n      public void run() {\n        try {\n          LocalFileSystem fs = LocalFileSystem.getInstance();\n          dir = fs.refreshAndFindFileByIoFile(createTempDirectory());\n        }\n        catch (IOException e) {\n          throw new RuntimeException(e);\n        }\n      }\n    });\n  }","id":55353,"modified_method":"@Override\n  protected void setUp() throws Exception {\n    super.setUp();\n    ApplicationManager.getApplication().runWriteAction(() -> {\n      try {\n        LocalFileSystem fs = LocalFileSystem.getInstance();\n        dir = fs.refreshAndFindFileByIoFile(createTempDirectory());\n      }\n      catch (IOException e) {\n        throw new RuntimeException(e);\n      }\n    });\n  }","commit_id":"d8671c3fe8104a93e42c318589f5f2c8445803f1","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void testGettingModifiableModelCorrectlySetsRootModelForContentEntries() {\n    ApplicationManager.getApplication().runWriteAction(new Runnable() {\n      @Override\n      public void run() {\n        PsiTestUtil.addContentRoot(myModule, dir);\n\n        ModifiableRootModel m = getRootManager().getModifiableModel();\n        ContentEntry e = findContentEntry(dir.getUrl(), m);\n\n        assertSame(m, ((ContentEntryImpl)e).getRootModel());\n        m.dispose();\n      }\n    });\n  }","id":55354,"modified_method":"public void testGettingModifiableModelCorrectlySetsRootModelForContentEntries() {\n    ApplicationManager.getApplication().runWriteAction(() -> {\n      PsiTestUtil.addContentRoot(myModule, dir);\n\n      ModifiableRootModel m = getRootManager().getModifiableModel();\n      ContentEntry e = findContentEntry(dir.getUrl(), m);\n\n      assertSame(m, ((ContentEntryImpl)e).getRootModel());\n      m.dispose();\n    });\n  }","commit_id":"d8671c3fe8104a93e42c318589f5f2c8445803f1","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private void addContentRoot(final String path) {\n    ApplicationManager.getApplication().runWriteAction(new Runnable() {\n      @Override\n      public void run() {\n        ModuleRootModificationUtil.addContentRoot(getModule(), path);\n      }\n    });\n  }","id":55355,"modified_method":"private void addContentRoot(final String path) {\n    ApplicationManager.getApplication().runWriteAction(() -> {\n      ModuleRootModificationUtil.addContentRoot(getModule(), path);\n    });\n  }","commit_id":"d8671c3fe8104a93e42c318589f5f2c8445803f1","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private File getTestRoot() {\n    File testRoot = new File(PathManagerEx.getTestDataPath());\n    File moduleRootManagerRoot = new File(testRoot, \"moduleRootManager\");\n    File thisTestRoot = new File(moduleRootManagerRoot, getTestName(true));\n    return thisTestRoot;\n  }","id":55356,"modified_method":"private File getTestRoot() {\n    File testRoot = new File(PathManagerEx.getTestDataPath());\n    File moduleRootManagerRoot = new File(testRoot, \"moduleRootManager\");\n    return new File(moduleRootManagerRoot, getTestName(true));\n  }","commit_id":"d8671c3fe8104a93e42c318589f5f2c8445803f1","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void testModuleLibraries() throws Exception {\n    File moduleFile = new File(getTestRoot(), \"test.iml\");\n    Module module = createModule(moduleFile);\n    final ModuleRootManagerImpl moduleRootManager =\n      (ModuleRootManagerImpl)ModuleRootManager.getInstance(module);\n    final ModifiableRootModel rootModel = moduleRootManager.getModifiableModel();\n    final LibraryTable moduleLibraryTable = rootModel.getModuleLibraryTable();\n\n    final Library unnamedLibrary = moduleLibraryTable.createLibrary();\n    final File unnamedLibClasses = new File(getTestRoot(), \"unnamedLibClasses\");\n    final VirtualFile unnamedLibClassesRoot = LocalFileSystem.getInstance().findFileByIoFile(unnamedLibClasses);\n    final Library.ModifiableModel libraryModifyableModel = unnamedLibrary.getModifiableModel();\n    libraryModifyableModel.addRoot(unnamedLibClassesRoot.getUrl(), OrderRootType.CLASSES);\n\n    final Library namedLibrary = moduleLibraryTable.createLibrary(\"namedLibrary\");\n    final File namedLibClasses = new File(getTestRoot(), \"namedLibClasses\");\n    final VirtualFile namedLibClassesRoot = LocalFileSystem.getInstance().findFileByIoFile(namedLibClasses);\n    final Library.ModifiableModel namedLibraryModel = namedLibrary.getModifiableModel();\n    namedLibraryModel.addRoot(namedLibClassesRoot.getUrl(), OrderRootType.CLASSES);\n\n    ApplicationManager.getApplication().runWriteAction(new Runnable() {\n      @Override\n      public void run() {\n        libraryModifyableModel.commit();\n        namedLibraryModel.commit();\n      }\n    });\n\n    final Iterator libraryIterator = moduleLibraryTable.getLibraryIterator();\n    assertEquals(libraryIterator.next(), unnamedLibrary);\n    assertEquals(libraryIterator.next(), namedLibrary);\n\n    ApplicationManager.getApplication().runWriteAction(new Runnable() {\n      @Override\n      public void run() {\n        rootModel.commit();\n      }\n    });\n    final Element element = new Element(\"root\");\n    moduleRootManager.getState().writeExternal(element);\n    assertElementEquals(element,\n                        \"<root inherit-compiler-output=\\\"true\\\">\" +\n                        \"<exclude-output />\" +\n                        \"<orderEntry type=\\\"sourceFolder\\\" forTests=\\\"false\\\" />\" +\n                        \"<orderEntry type=\\\"module-library\\\">\" +\n                        \"<library>\" +\n                        \"<CLASSES><root url=\\\"file://$MODULE_DIR$/unnamedLibClasses\\\" /><\/CLASSES>\" +\n                        \"<JAVADOC />\" +\n                        \"<SOURCES />\" +\n                        \"<\/library>\" +\n                        \"<\/orderEntry>\" +\n                        \"<orderEntry type=\\\"module-library\\\">\" +\n                        \"<library name=\\\"namedLibrary\\\">\" +\n                        \"<CLASSES><root url=\\\"file://$MODULE_DIR$/namedLibClasses\\\" /><\/CLASSES>\" +\n                        \"<JAVADOC />\" +\n                        \"<SOURCES />\" +\n                        \"<\/library>\" +\n                        \"<\/orderEntry>\" +\n                        \"<\/root>\", module);\n  }","id":55357,"modified_method":"public void testModuleLibraries() throws Exception {\n    File moduleFile = new File(getTestRoot(), \"test.iml\");\n    Module module = createModule(moduleFile);\n    final ModuleRootManagerImpl moduleRootManager =\n      (ModuleRootManagerImpl)ModuleRootManager.getInstance(module);\n    final ModifiableRootModel rootModel = moduleRootManager.getModifiableModel();\n    final LibraryTable moduleLibraryTable = rootModel.getModuleLibraryTable();\n\n    final Library unnamedLibrary = moduleLibraryTable.createLibrary();\n    final File unnamedLibClasses = new File(getTestRoot(), \"unnamedLibClasses\");\n    final VirtualFile unnamedLibClassesRoot = LocalFileSystem.getInstance().findFileByIoFile(unnamedLibClasses);\n    final Library.ModifiableModel libraryModifyableModel = unnamedLibrary.getModifiableModel();\n    libraryModifyableModel.addRoot(unnamedLibClassesRoot.getUrl(), OrderRootType.CLASSES);\n\n    final Library namedLibrary = moduleLibraryTable.createLibrary(\"namedLibrary\");\n    final File namedLibClasses = new File(getTestRoot(), \"namedLibClasses\");\n    final VirtualFile namedLibClassesRoot = LocalFileSystem.getInstance().findFileByIoFile(namedLibClasses);\n    final Library.ModifiableModel namedLibraryModel = namedLibrary.getModifiableModel();\n    namedLibraryModel.addRoot(namedLibClassesRoot.getUrl(), OrderRootType.CLASSES);\n\n    ApplicationManager.getApplication().runWriteAction(() -> {\n      libraryModifyableModel.commit();\n      namedLibraryModel.commit();\n    });\n\n    final Iterator libraryIterator = moduleLibraryTable.getLibraryIterator();\n    assertEquals(libraryIterator.next(), unnamedLibrary);\n    assertEquals(libraryIterator.next(), namedLibrary);\n\n    ApplicationManager.getApplication().runWriteAction(rootModel::commit);\n    final Element element = new Element(\"root\");\n    moduleRootManager.getState().writeExternal(element);\n    assertElementEquals(element,\n                        \"<root inherit-compiler-output=\\\"true\\\">\" +\n                        \"<exclude-output />\" +\n                        \"<orderEntry type=\\\"sourceFolder\\\" forTests=\\\"false\\\" />\" +\n                        \"<orderEntry type=\\\"module-library\\\">\" +\n                        \"<library>\" +\n                        \"<CLASSES><root url=\\\"file://$MODULE_DIR$/unnamedLibClasses\\\" /><\/CLASSES>\" +\n                        \"<JAVADOC />\" +\n                        \"<SOURCES />\" +\n                        \"<\/library>\" +\n                        \"<\/orderEntry>\" +\n                        \"<orderEntry type=\\\"module-library\\\">\" +\n                        \"<library name=\\\"namedLibrary\\\">\" +\n                        \"<CLASSES><root url=\\\"file://$MODULE_DIR$/namedLibClasses\\\" /><\/CLASSES>\" +\n                        \"<JAVADOC />\" +\n                        \"<SOURCES />\" +\n                        \"<\/library>\" +\n                        \"<\/orderEntry>\" +\n                        \"<\/root>\", module);\n  }","commit_id":"d8671c3fe8104a93e42c318589f5f2c8445803f1","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private ModuleRootManagerImpl createTempModuleRootManager() throws IOException {\n    File tmpModule = FileUtil.createTempFile(\"tst\", ModuleFileType.DOT_DEFAULT_EXTENSION);\n    myFilesToDelete.add(tmpModule);\n    final Module module = createModule(tmpModule);\n    final ModuleRootManagerImpl moduleRootManager =\n      (ModuleRootManagerImpl)ModuleRootManager.getInstance(module);\n    return moduleRootManager;\n  }","id":55358,"modified_method":"private ModuleRootManagerImpl createTempModuleRootManager() throws IOException {\n    File tmpModule = FileUtil.createTempFile(\"tst\", ModuleFileType.DOT_DEFAULT_EXTENSION);\n    myFilesToDelete.add(tmpModule);\n    final Module module = createModule(tmpModule);\n    return (ModuleRootManagerImpl)ModuleRootManager.getInstance(module);\n  }","commit_id":"d8671c3fe8104a93e42c318589f5f2c8445803f1","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void testCompilerOutputInheritance() throws Exception {\n    File moduleFile = new File(getTestRoot(), \"test.iml\");\n    Module module = createModule(moduleFile);\n    final ModuleRootManagerImpl moduleRootManager =\n      (ModuleRootManagerImpl)ModuleRootManager.getInstance(module);\n    final ModifiableRootModel rootModel = moduleRootManager.getModifiableModel();\n    rootModel.getModuleExtension(CompilerModuleExtension.class).inheritCompilerOutputPath(true);\n    ApplicationManager.getApplication().runWriteAction(new Runnable() {\n      @Override\n      public void run() {\n        rootModel.commit();\n      }\n    });\n    Element element = new Element(\"root\");\n    moduleRootManager.getState().writeExternal(element);\n    assertElementEquals(element,\n                        \"<root inherit-compiler-output=\\\"true\\\">\" +\n                        \"<exclude-output />\" +\n                        \"<orderEntry type=\\\"sourceFolder\\\" forTests=\\\"false\\\" />\" +\n                        \"<\/root>\", module);\n  }","id":55359,"modified_method":"public void testCompilerOutputInheritance() throws Exception {\n    File moduleFile = new File(getTestRoot(), \"test.iml\");\n    Module module = createModule(moduleFile);\n    final ModuleRootManagerImpl moduleRootManager =\n      (ModuleRootManagerImpl)ModuleRootManager.getInstance(module);\n    final ModifiableRootModel rootModel = moduleRootManager.getModifiableModel();\n    rootModel.getModuleExtension(CompilerModuleExtension.class).inheritCompilerOutputPath(true);\n    ApplicationManager.getApplication().runWriteAction(rootModel::commit);\n    Element element = new Element(\"root\");\n    moduleRootManager.getState().writeExternal(element);\n    assertElementEquals(element,\n                        \"<root inherit-compiler-output=\\\"true\\\">\" +\n                        \"<exclude-output />\" +\n                        \"<orderEntry type=\\\"sourceFolder\\\" forTests=\\\"false\\\" />\" +\n                        \"<\/root>\", module);\n  }","commit_id":"d8671c3fe8104a93e42c318589f5f2c8445803f1","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private Module addDependentModule(final String name, final Module moduleA,\n                                    final DependencyScope scope,\n                                    final boolean exported) {\n    final Module moduleB = createModule(name + \".iml\", StdModuleTypes.JAVA);\n\n    ApplicationManager.getApplication().runWriteAction(new Runnable() {\n      @Override\n      public void run() {\n        VirtualFile rootB = myFixture.findOrCreateDir(name);\n        VirtualFile outB = myFixture.findOrCreateDir(\"out\");\n\n        ModuleRootModificationUtil.addDependency(moduleA, moduleB, scope, exported);\n\n        PsiTestUtil.addSourceRoot(moduleB, rootB);\n        PsiTestUtil.setCompilerOutputPath(moduleB, outB.getUrl(), false);\n      }\n    });\n\n    return moduleB;\n  }","id":55360,"modified_method":"private Module addDependentModule(final String name, final Module moduleA,\n                                    final DependencyScope scope,\n                                    final boolean exported) {\n    final Module moduleB = createModule(name + \".iml\", StdModuleTypes.JAVA);\n\n    ApplicationManager.getApplication().runWriteAction(() -> {\n      VirtualFile rootB = myFixture.findOrCreateDir(name);\n      VirtualFile outB = myFixture.findOrCreateDir(\"out\");\n\n      ModuleRootModificationUtil.addDependency(moduleA, moduleB, scope, exported);\n\n      PsiTestUtil.addSourceRoot(moduleB, rootB);\n      PsiTestUtil.setCompilerOutputPath(moduleB, outB.getUrl(), false);\n    });\n\n    return moduleB;\n  }","commit_id":"d8671c3fe8104a93e42c318589f5f2c8445803f1","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void testAddTwoModules() throws Exception {\n    final MessageBusConnection connection = myProject.getMessageBus().connect();\n    final MyModuleListener moduleListener = new MyModuleListener();\n    connection.subscribe(ProjectTopics.MODULES, moduleListener);\n    final ModuleManager moduleManager = ModuleManager.getInstance(myProject);\n\n    final Module moduleA;\n    final Module moduleB;\n\n    {\n      final ModifiableModuleModel modifiableModel = moduleManager.getModifiableModel();\n      moduleA = modifiableModel.newModule(\"a.iml\", StdModuleTypes.JAVA.getId());\n      moduleB = modifiableModel.newModule(\"b.iml\", StdModuleTypes.JAVA.getId());\n      assertEquals(\"Changes are not applied until commit\", 0, moduleManager.getModules().length);\n      //noinspection SSBasedInspection\n      moduleListener.assertCorrectEvents(new String[0][]);\n      ApplicationManager.getApplication().runWriteAction(new Runnable() {\n        @Override\n        public void run() {\n          modifiableModel.commit();\n        }\n      });\n    }\n\n    assertEquals(2, moduleManager.getModules().length);\n    assertTrue(moduleManager.findModuleByName(\"a\").equals(moduleA));\n    assertTrue(moduleManager.findModuleByName(\"b\").equals(moduleB));\n    moduleListener.assertCorrectEvents(new String[][]{{\"+a\", \"+b\"}});\n\n    {\n      final ModifiableModuleModel modifiableModel = moduleManager.getModifiableModel();\n      modifiableModel.disposeModule(moduleA);\n      modifiableModel.disposeModule(moduleB);\n      assertEquals(\"Changes are not applied until commit\", 2, moduleManager.getModules().length);\n      moduleListener.assertCorrectEvents(new String[][]{{\"+a\", \"+b\"}});\n      ApplicationManager.getApplication().runWriteAction(new Runnable() {\n        @Override\n        public void run() {\n          modifiableModel.commit();\n        }\n      });\n    }\n\n    assertEquals(0, moduleManager.getModules().length);\n    moduleListener.assertCorrectEvents(new String[][]{{\"+a\", \"+b\"}, {\"-a\", \"-b\"}});\n    connection.disconnect();\n  }","id":55361,"modified_method":"public void testAddTwoModules() throws Exception {\n    final MessageBusConnection connection = myProject.getMessageBus().connect();\n    final MyModuleListener moduleListener = new MyModuleListener();\n    connection.subscribe(ProjectTopics.MODULES, moduleListener);\n    final ModuleManager moduleManager = ModuleManager.getInstance(myProject);\n\n    final Module moduleA;\n    final Module moduleB;\n\n    {\n      final ModifiableModuleModel modifiableModel = moduleManager.getModifiableModel();\n      moduleA = modifiableModel.newModule(\"a.iml\", StdModuleTypes.JAVA.getId());\n      moduleB = modifiableModel.newModule(\"b.iml\", StdModuleTypes.JAVA.getId());\n      assertEquals(\"Changes are not applied until commit\", 0, moduleManager.getModules().length);\n      //noinspection SSBasedInspection\n      moduleListener.assertCorrectEvents(new String[0][]);\n      ApplicationManager.getApplication().runWriteAction(modifiableModel::commit);\n    }\n\n    assertEquals(2, moduleManager.getModules().length);\n    assertTrue(moduleManager.findModuleByName(\"a\").equals(moduleA));\n    assertTrue(moduleManager.findModuleByName(\"b\").equals(moduleB));\n    moduleListener.assertCorrectEvents(new String[][]{{\"+a\", \"+b\"}});\n\n    {\n      final ModifiableModuleModel modifiableModel = moduleManager.getModifiableModel();\n      modifiableModel.disposeModule(moduleA);\n      modifiableModel.disposeModule(moduleB);\n      assertEquals(\"Changes are not applied until commit\", 2, moduleManager.getModules().length);\n      moduleListener.assertCorrectEvents(new String[][]{{\"+a\", \"+b\"}});\n      ApplicationManager.getApplication().runWriteAction(modifiableModel::commit);\n    }\n\n    assertEquals(0, moduleManager.getModules().length);\n    moduleListener.assertCorrectEvents(new String[][]{{\"+a\", \"+b\"}, {\"-a\", \"-b\"}});\n    connection.disconnect();\n  }","commit_id":"d8671c3fe8104a93e42c318589f5f2c8445803f1","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void assertCorrectEvents(String[][] expected) {\n      int runningIndex = 0;\n      for (int chunkIndex = 0; chunkIndex < expected.length; chunkIndex++) {\n        String[] chunk = expected[chunkIndex];\n        final List<String> expectedChunkList = new ArrayList<String>(Arrays.asList(chunk));\n        int nextIndex = runningIndex + chunk.length;\n        assertTrue(\"Expected chunk \" + expectedChunkList.toString(), nextIndex <= myLog.size());\n        final List<String> actualChunkList = new ArrayList<String>(myLog.subList(runningIndex, nextIndex));\n        Collections.sort(expectedChunkList);\n        Collections.sort(actualChunkList);\n        assertEquals(\"Chunk \" + chunkIndex, expectedChunkList.toString(), actualChunkList.toString());\n        runningIndex = nextIndex;\n      }\n      assertEquals(\"More events than needed\", runningIndex, myLog.size());\n    }","id":55362,"modified_method":"public void assertCorrectEvents(String[][] expected) {\n      int runningIndex = 0;\n      for (int chunkIndex = 0; chunkIndex < expected.length; chunkIndex++) {\n        String[] chunk = expected[chunkIndex];\n        final List<String> expectedChunkList = new ArrayList<>(Arrays.asList(chunk));\n        int nextIndex = runningIndex + chunk.length;\n        assertTrue(\"Expected chunk \" + expectedChunkList.toString(), nextIndex <= myLog.size());\n        final List<String> actualChunkList = new ArrayList<>(myLog.subList(runningIndex, nextIndex));\n        Collections.sort(expectedChunkList);\n        Collections.sort(actualChunkList);\n        assertEquals(\"Chunk \" + chunkIndex, expectedChunkList.toString(), actualChunkList.toString());\n        runningIndex = nextIndex;\n      }\n      assertEquals(\"More events than needed\", runningIndex, myLog.size());\n    }","commit_id":"d8671c3fe8104a93e42c318589f5f2c8445803f1","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private VirtualFile getVirtualFileInTestData(final String relativeVfsPath) {\n    return WriteCommandAction.runWriteCommandAction(null, new Computable<VirtualFile>() {\n      @Override\n      public VirtualFile compute() {\n        final String path =\n          TEST_PATH + File.separatorChar + getTestName(true) + File.separatorChar + relativeVfsPath.replace('/', File.separatorChar);\n        final VirtualFile result = LocalFileSystem.getInstance().refreshAndFindFileByIoFile(new File(path));\n        assertNotNull(\"File \" + path + \" doen\\'t exist\", result);\n        return result;\n      }\n    });\n  }","id":55363,"modified_method":"private VirtualFile getVirtualFileInTestData(final String relativeVfsPath) {\n    return WriteCommandAction.runWriteCommandAction(null, (Computable<VirtualFile>)() -> {\n      final String path =\n        TEST_PATH + File.separatorChar + getTestName(true) + File.separatorChar + relativeVfsPath.replace('/', File.separatorChar);\n      final VirtualFile result = LocalFileSystem.getInstance().refreshAndFindFileByIoFile(new File(path));\n      assertNotNull(\"File \" + path + \" doen\\'t exist\", result);\n      return result;\n    });\n  }","commit_id":"d8671c3fe8104a93e42c318589f5f2c8445803f1","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void testRenaming() throws Exception{\n    final ModuleManager moduleManager = ModuleManager.getInstance(myProject);\n    final Module moduleA;\n    final Module moduleB;\n\n    {\n      final ModifiableModuleModel moduleModel = moduleManager.getModifiableModel();\n      moduleA = moduleModel.newModule(\"a.iml\", StdModuleTypes.JAVA.getId());\n      moduleB = moduleModel.newModule(\"b.iml\", StdModuleTypes.JAVA.getId());\n      final Module moduleC = moduleModel.newModule(\"c.iml\", StdModuleTypes.JAVA.getId());\n      final ModifiableRootModel rootModelB = ModuleRootManager.getInstance(moduleB).getModifiableModel();\n      rootModelB.addModuleOrderEntry(moduleC);\n      moduleModel.disposeModule(moduleC);\n      ApplicationManager.getApplication().runWriteAction(new Runnable() {\n        @Override\n        public void run() {\n          ModifiableModelCommitter.multiCommit(new ModifiableRootModel[]{rootModelB}, moduleModel);\n        }\n      });\n    }\n\n    final ModuleRootManager rootManagerB = ModuleRootManager.getInstance(moduleB);\n    assertEquals(0, rootManagerB.getDependencies().length);\n    final String[] dependencyModuleNames = rootManagerB.getDependencyModuleNames();\n    assertEquals(1, dependencyModuleNames.length);\n    assertEquals(\"c\", dependencyModuleNames[0]);\n\n    {\n      final ModifiableModuleModel moduleModel = moduleManager.getModifiableModel();\n      moduleModel.renameModule(moduleA, \"c\");\n      moduleModel.commit();\n    }\n\n    assertEquals(1, rootManagerB.getDependencies().length);\n    assertEquals(moduleA, rootManagerB.getDependencies()[0]);\n    assertEquals(\"c\", moduleA.getName());\n    moduleManager.disposeModule(moduleA);\n    moduleManager.disposeModule(moduleB);\n  }","id":55364,"modified_method":"public void testRenaming() throws Exception{\n    final ModuleManager moduleManager = ModuleManager.getInstance(myProject);\n    final Module moduleA;\n    final Module moduleB;\n\n    {\n      final ModifiableModuleModel moduleModel = moduleManager.getModifiableModel();\n      moduleA = moduleModel.newModule(\"a.iml\", StdModuleTypes.JAVA.getId());\n      moduleB = moduleModel.newModule(\"b.iml\", StdModuleTypes.JAVA.getId());\n      final Module moduleC = moduleModel.newModule(\"c.iml\", StdModuleTypes.JAVA.getId());\n      final ModifiableRootModel rootModelB = ModuleRootManager.getInstance(moduleB).getModifiableModel();\n      rootModelB.addModuleOrderEntry(moduleC);\n      moduleModel.disposeModule(moduleC);\n      ApplicationManager.getApplication().runWriteAction(() -> {\n        ModifiableModelCommitter.multiCommit(new ModifiableRootModel[]{rootModelB}, moduleModel);\n      });\n    }\n\n    final ModuleRootManager rootManagerB = ModuleRootManager.getInstance(moduleB);\n    assertEquals(0, rootManagerB.getDependencies().length);\n    final String[] dependencyModuleNames = rootManagerB.getDependencyModuleNames();\n    assertEquals(1, dependencyModuleNames.length);\n    assertEquals(\"c\", dependencyModuleNames[0]);\n\n    {\n      final ModifiableModuleModel moduleModel = moduleManager.getModifiableModel();\n      moduleModel.renameModule(moduleA, \"c\");\n      moduleModel.commit();\n    }\n\n    assertEquals(1, rootManagerB.getDependencies().length);\n    assertEquals(moduleA, rootManagerB.getDependencies()[0]);\n    assertEquals(\"c\", moduleA.getName());\n    moduleManager.disposeModule(moduleA);\n    moduleManager.disposeModule(moduleB);\n  }","commit_id":"d8671c3fe8104a93e42c318589f5f2c8445803f1","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void testRootsEditing() {\n    final MessageBusConnection connection = myProject.getMessageBus().connect();\n    final ModuleManager moduleManager = ModuleManager.getInstance(myProject);\n    final MyModuleListener moduleListener = new MyModuleListener();\n    connection.subscribe(ProjectTopics.MODULES, moduleListener);\n\n    final Module moduleA;\n    final Module moduleB;\n    {\n      final ModifiableModuleModel moduleModel = moduleManager.getModifiableModel();\n      moduleA = moduleModel.newModule(\"a.iml\", StdModuleTypes.JAVA.getId());\n      moduleB = moduleModel.newModule(\"b.iml\", StdModuleTypes.JAVA.getId());\n      final ModifiableRootModel rootModelA = ModuleRootManager.getInstance(moduleA).getModifiableModel();\n      final ModifiableRootModel rootModelB = ModuleRootManager.getInstance(moduleB).getModifiableModel();\n      rootModelB.addModuleOrderEntry(moduleA);\n\n      final ContentEntry contentEntryA = rootModelA.addContentEntry(getVirtualFileInTestData(\"a\"));\n      contentEntryA.addSourceFolder(getVirtualFileInTestData(\"a/src\"), false);\n      final ContentEntry contentEntryB = rootModelB.addContentEntry(getVirtualFileInTestData(\"b\"));\n      contentEntryB.addSourceFolder(getVirtualFileInTestData(\"b/src\"), false);\n\n      ApplicationManager.getApplication().runWriteAction(new Runnable() {\n        @Override\n        public void run() {\n          ModifiableModelCommitter.multiCommit(new ModifiableRootModel[]{rootModelB, rootModelA}, moduleModel);\n        }\n      });\n    }\n\n    final JavaPsiFacade psiManager = getJavaFacade();\n    assertNull(psiManager.findClass(\"j.B\", GlobalSearchScope.moduleWithDependenciesScope(moduleA)));\n    assertNull(psiManager.findClass(\"q.A\", GlobalSearchScope.moduleScope(moduleB)));\n\n    assertNotNull(psiManager.findClass(\"q.A\", GlobalSearchScope.moduleScope(moduleA)));\n    assertNotNull(psiManager.findClass(\"q.A\", GlobalSearchScope.moduleWithDependenciesScope(moduleB)));\n    assertNotNull(psiManager.findClass(\"j.B\", GlobalSearchScope.moduleScope(moduleB)));\n    assertNotNull(psiManager.findClass(\"j.B\", GlobalSearchScope.moduleWithDependenciesScope(moduleB)));\n\n    moduleManager.disposeModule(moduleB);\n    moduleManager.disposeModule(moduleA);\n    moduleListener.assertCorrectEvents(new String[][]{{\"+b\", \"+a\"}, {\"-b\"}, {\"-a\"}});\n\n    connection.disconnect();\n  }","id":55365,"modified_method":"public void testRootsEditing() {\n    final MessageBusConnection connection = myProject.getMessageBus().connect();\n    final ModuleManager moduleManager = ModuleManager.getInstance(myProject);\n    final MyModuleListener moduleListener = new MyModuleListener();\n    connection.subscribe(ProjectTopics.MODULES, moduleListener);\n\n    final Module moduleA;\n    final Module moduleB;\n    {\n      final ModifiableModuleModel moduleModel = moduleManager.getModifiableModel();\n      moduleA = moduleModel.newModule(\"a.iml\", StdModuleTypes.JAVA.getId());\n      moduleB = moduleModel.newModule(\"b.iml\", StdModuleTypes.JAVA.getId());\n      final ModifiableRootModel rootModelA = ModuleRootManager.getInstance(moduleA).getModifiableModel();\n      final ModifiableRootModel rootModelB = ModuleRootManager.getInstance(moduleB).getModifiableModel();\n      rootModelB.addModuleOrderEntry(moduleA);\n\n      final ContentEntry contentEntryA = rootModelA.addContentEntry(getVirtualFileInTestData(\"a\"));\n      contentEntryA.addSourceFolder(getVirtualFileInTestData(\"a/src\"), false);\n      final ContentEntry contentEntryB = rootModelB.addContentEntry(getVirtualFileInTestData(\"b\"));\n      contentEntryB.addSourceFolder(getVirtualFileInTestData(\"b/src\"), false);\n\n      ApplicationManager.getApplication().runWriteAction(() -> {\n        ModifiableModelCommitter.multiCommit(new ModifiableRootModel[]{rootModelB, rootModelA}, moduleModel);\n      });\n    }\n\n    final JavaPsiFacade psiManager = getJavaFacade();\n    assertNull(psiManager.findClass(\"j.B\", GlobalSearchScope.moduleWithDependenciesScope(moduleA)));\n    assertNull(psiManager.findClass(\"q.A\", GlobalSearchScope.moduleScope(moduleB)));\n\n    assertNotNull(psiManager.findClass(\"q.A\", GlobalSearchScope.moduleScope(moduleA)));\n    assertNotNull(psiManager.findClass(\"q.A\", GlobalSearchScope.moduleWithDependenciesScope(moduleB)));\n    assertNotNull(psiManager.findClass(\"j.B\", GlobalSearchScope.moduleScope(moduleB)));\n    assertNotNull(psiManager.findClass(\"j.B\", GlobalSearchScope.moduleWithDependenciesScope(moduleB)));\n\n    moduleManager.disposeModule(moduleB);\n    moduleManager.disposeModule(moduleA);\n    moduleListener.assertCorrectEvents(new String[][]{{\"+b\", \"+a\"}, {\"-b\"}, {\"-a\"}});\n\n    connection.disconnect();\n  }","commit_id":"d8671c3fe8104a93e42c318589f5f2c8445803f1","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void testModules() throws Exception {\n    ModuleRootModificationUtil.addDependency(myModule, createJDomLibrary());\n\n    final VirtualFile srcRoot = addSourceRoot(myModule, false);\n    final VirtualFile testRoot = addSourceRoot(myModule, true);\n    final VirtualFile output = setModuleOutput(myModule, false);\n    final VirtualFile testOutput = setModuleOutput(myModule, true);\n\n    assertClassRoots(ProjectRootManager.getInstance(myProject).orderEntries(Arrays.asList(myModule)).withoutSdk(),\n                     testOutput, output, getJDomJar());\n    assertSourceRoots(ProjectRootManager.getInstance(myProject).orderEntries(Arrays.asList(myModule)).withoutSdk(),\n                      srcRoot, testRoot, getJDomSources());\n  }","id":55366,"modified_method":"public void testModules() throws Exception {\n    ModuleRootModificationUtil.addDependency(myModule, createJDomLibrary());\n\n    final VirtualFile srcRoot = addSourceRoot(myModule, false);\n    final VirtualFile testRoot = addSourceRoot(myModule, true);\n    final VirtualFile output = setModuleOutput(myModule, false);\n    final VirtualFile testOutput = setModuleOutput(myModule, true);\n\n    assertClassRoots(ProjectRootManager.getInstance(myProject).orderEntries(Collections.singletonList(myModule)).withoutSdk(),\n                     testOutput, output, getJDomJar());\n    assertSourceRoots(ProjectRootManager.getInstance(myProject).orderEntries(Collections.singletonList(myModule)).withoutSdk(),\n                      srcRoot, testRoot, getJDomSources());\n  }","commit_id":"d8671c3fe8104a93e42c318589f5f2c8445803f1","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private static void assertEnumeratorRoots(OrderRootsEnumerator rootsEnumerator, VirtualFile... files) {\n    assertOrderedEquals(rootsEnumerator.getRoots(), files);\n    List<String> expectedUrls = new ArrayList<String>();\n    for (VirtualFile file : files) {\n      expectedUrls.add(file.getUrl());\n    }\n    assertOrderedEquals(rootsEnumerator.getUrls(), ArrayUtil.toStringArray(expectedUrls));\n  }","id":55367,"modified_method":"private static void assertEnumeratorRoots(OrderRootsEnumerator rootsEnumerator, VirtualFile... files) {\n    assertOrderedEquals(rootsEnumerator.getRoots(), files);\n    List<String> expectedUrls = new ArrayList<>();\n    for (VirtualFile file : files) {\n      expectedUrls.add(file.getUrl());\n    }\n    assertOrderedEquals(rootsEnumerator.getUrls(), ArrayUtil.toStringArray(expectedUrls));\n  }","commit_id":"d8671c3fe8104a93e42c318589f5f2c8445803f1","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void testTest1() {\n    final String rootPath = PathManagerEx.getTestDataPath() + \"/moduleRootManager/roots/\" + \"test1\";\n    final VirtualFile[] rootFileBox = new VirtualFile[1];\n    ApplicationManager.getApplication().runWriteAction(new Runnable() {\n      @Override\n      public void run() {\n        rootFileBox[0] =\n        LocalFileSystem.getInstance().refreshAndFindFileByPath(rootPath.replace(File.separatorChar, '/'));\n      }\n    });\n    final VirtualFile rootFile = rootFileBox[0];\n    final VirtualFile classesFile = rootFile.findChild(\"classes\");\n    assertNotNull(classesFile);\n    final VirtualFile childOfContent = rootFile.findChild(\"x.txt\");\n    assertNotNull(childOfContent);\n    final VirtualFile childOfClasses = classesFile.findChild(\"y.txt\");\n    assertNotNull(childOfClasses);\n\n    final ModuleRootManager rootManager = ModuleRootManager.getInstance(myModule);\n\n\n    PsiTestUtil.addContentRoot(myModule, rootFile);\n    PsiTestUtil.setCompilerOutputPath(myModule, classesFile.getUrl(), false);\n    PsiTestUtil.setExcludeCompileOutput(myModule, false);\n    assertTrue(rootManager.getFileIndex().isInContent(childOfContent));\n    assertTrue(rootManager.getFileIndex().isInContent(childOfClasses));\n\n    PsiTestUtil.setExcludeCompileOutput(myModule, true);\n    assertTrue(rootManager.getFileIndex().isInContent(childOfContent));\n    assertFalse(rootManager.getFileIndex().isInContent(childOfClasses));\n  }","id":55368,"modified_method":"public void testTest1() {\n    final String rootPath = PathManagerEx.getTestDataPath() + \"/moduleRootManager/roots/\" + \"test1\";\n    final VirtualFile[] rootFileBox = new VirtualFile[1];\n    ApplicationManager.getApplication().runWriteAction(() -> {\n      rootFileBox[0] =\n      LocalFileSystem.getInstance().refreshAndFindFileByPath(rootPath.replace(File.separatorChar, '/'));\n    });\n    final VirtualFile rootFile = rootFileBox[0];\n    final VirtualFile classesFile = rootFile.findChild(\"classes\");\n    assertNotNull(classesFile);\n    final VirtualFile childOfContent = rootFile.findChild(\"x.txt\");\n    assertNotNull(childOfContent);\n    final VirtualFile childOfClasses = classesFile.findChild(\"y.txt\");\n    assertNotNull(childOfClasses);\n\n    final ModuleRootManager rootManager = ModuleRootManager.getInstance(myModule);\n\n\n    PsiTestUtil.addContentRoot(myModule, rootFile);\n    PsiTestUtil.setCompilerOutputPath(myModule, classesFile.getUrl(), false);\n    PsiTestUtil.setExcludeCompileOutput(myModule, false);\n    assertTrue(rootManager.getFileIndex().isInContent(childOfContent));\n    assertTrue(rootManager.getFileIndex().isInContent(childOfClasses));\n\n    PsiTestUtil.setExcludeCompileOutput(myModule, true);\n    assertTrue(rootManager.getFileIndex().isInContent(childOfContent));\n    assertFalse(rootManager.getFileIndex().isInContent(childOfClasses));\n  }","commit_id":"d8671c3fe8104a93e42c318589f5f2c8445803f1","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"/**\n   * Set language-specific options according to flags.\n   * This routine should process the option starting in args[i] (which\n   * might potentially be several arguments long if it takes arguments).\n   * It should return the index after the last index it consumed in\n   * processing.  In particular, if it cannot process the current option,\n   * the return value should be i.\n   */\n  @Override\n  public int setOptionFlag(String[] args, int i) {\n    // [CDM 2008: there are no generic options!] first, see if it's a generic option\n    // int j = super.setOptionFlag(args, i);\n    // if(i != j) return j;\n\n    //lang. specific options\n    if (args[i].equalsIgnoreCase(\"-splitIN\")) {\n      englishTrain.splitIN = Integer.parseInt(args[i + 1]);\n      i += 2;\n    } else if (args[i].equalsIgnoreCase(\"-splitPercent\")) {\n      englishTrain.splitPercent = true;\n      i += 1;\n    } else if (args[i].equalsIgnoreCase(\"-splitQuotes\")) {\n      englishTrain.splitQuotes = true;\n      i += 1;\n    } else if (args[i].equalsIgnoreCase(\"-splitSFP\")) {\n      englishTrain.splitSFP = true;\n      i += 1;\n    } else if (args[i].equalsIgnoreCase(\"-splitNNP\")) {\n      englishTrain.splitNNP = Integer.parseInt(args[i+1]);\n      i += 2;\n    } else if (args[i].equalsIgnoreCase(\"-rbGPA\")) {\n      englishTrain.tagRBGPA = true;\n      i += 1;\n    } else if (args[i].equalsIgnoreCase(\"-splitTRJJ\")) {\n      englishTrain.splitTRJJ = true;\n      i += 1;\n    } else if (args[i].equalsIgnoreCase(\"-splitJJCOMP\")) {\n      englishTrain.splitJJCOMP = true;\n      i += 1;\n    } else if (args[i].equalsIgnoreCase(\"-splitMoreLess\")) {\n      englishTrain.splitMoreLess = true;\n      i += 1;\n    } else if (args[i].equalsIgnoreCase(\"-unaryDT\")) {\n      englishTrain.unaryDT = true;\n      i += 1;\n    } else if (args[i].equalsIgnoreCase(\"-unaryRB\")) {\n      englishTrain.unaryRB = true;\n      i += 1;\n    } else if (args[i].equalsIgnoreCase(\"-unaryIN\")) {\n      englishTrain.unaryIN = true;\n      i += 1;\n    } else if (args[i].equalsIgnoreCase(\"-markReflexivePRP\")) {\n      englishTrain.markReflexivePRP = true;\n      i += 1;\n    } else if (args[i].equalsIgnoreCase(\"-splitCC\") && i + 1 < args.length) {\n      englishTrain.splitCC = Integer.parseInt(args[i+1]);\n      i += 2;\n    } else if (args[i].equalsIgnoreCase(\"-splitRB\")) {\n      englishTrain.splitRB = true;\n      i += 1;\n    } else if (args[i].equalsIgnoreCase(\"-splitAux\") && i+1 < args.length) {\n      englishTrain.splitAux = Integer.parseInt(args[i+1]);\n      i += 2;\n    } else if (args[i].equalsIgnoreCase(\"-splitSbar\") && i+1 < args.length) {\n      englishTrain.splitSbar = Integer.parseInt(args[i+1]);\n      i += 2;\n    } else if (args[i].equalsIgnoreCase(\"-splitVP\") && i + 1 < args.length) {\n      englishTrain.splitVP = Integer.parseInt(args[i + 1]);\n      i += 2;\n    } else if (args[i].equalsIgnoreCase(\"-splitVPNPAgr\")) {\n      englishTrain.splitVPNPAgr = true;\n      i += 1;\n    } else if (args[i].equalsIgnoreCase(\"-gpaRootVP\")) {\n      englishTrain.gpaRootVP = true;\n      i += 1;\n    } else if (args[i].equalsIgnoreCase(\"-makePPTOintoIN\")) {\n      englishTrain.makePPTOintoIN = Integer.parseInt(args[i + 1]);\n      i += 2;\n    } else if (args[i].equalsIgnoreCase(\"-collapseWhCategories\") && i + 1 < args.length) {\n      englishTrain.collapseWhCategories = Integer.parseInt(args[i + 1]);\n      i += 2;\n    } else if (args[i].equalsIgnoreCase(\"-splitSTag\")) {\n      englishTrain.splitSTag = Integer.parseInt(args[i+1]);\n      i += 2;\n    } else if (args[i].equalsIgnoreCase(\"-splitSGapped\") && (i + 1 < args.length)) {\n      englishTrain.splitSGapped = Integer.parseInt(args[i+1]);\n      i += 2;\n    } else if (args[i].equalsIgnoreCase(\"-splitNPpercent\") && (i+1 < args.length)) {\n      englishTrain.splitNPpercent = Integer.parseInt(args[i+1]);\n      i += 2;\n    } else if (args[i].equalsIgnoreCase(\"-splitNPPRP\")) {\n      englishTrain.splitNPPRP = true;\n      i += 1;\n    } else if (args[i].equalsIgnoreCase(\"-dominatesV\") && (i+1 < args.length)) {\n      englishTrain.dominatesV = Integer.parseInt(args[i + 1]);\n      i += 2;\n    } else if (args[i].equalsIgnoreCase(\"-dominatesI\")) {\n      englishTrain.dominatesI = true;\n      i += 1;\n    } else if (args[i].equalsIgnoreCase(\"-dominatesC\")) {\n      englishTrain.dominatesC = true;\n      i += 1;\n    } else if (args[i].equalsIgnoreCase(\"-splitNPNNP\") && (i+1 < args.length)) {\n      englishTrain.splitNPNNP = Integer.parseInt(args[i + 1]);\n      i += 2;\n    } else if (args[i].equalsIgnoreCase(\"-splitTMP\") && (i + 1 < args.length)) {\n      englishTrain.splitTMP = Integer.parseInt(args[i + 1]);\n      i += 2;\n    } else if (args[i].equalsIgnoreCase(\"-splitNPADV\") && (i+1 < args.length)) {\n      englishTrain.splitNPADV = Integer.parseInt(args[i+1]);\n      i += 2;\n    } else if (args[i].equalsIgnoreCase(\"-markContainedVP\")) {\n      englishTrain.markContainedVP = true;\n      i += 1;\n    } else if (args[i].equalsIgnoreCase(\"-markDitransV\") && (i+1 < args.length)) {\n      englishTrain.markDitransV = Integer.parseInt(args[i+1]);\n      i += 2;\n    } else if (args[i].equalsIgnoreCase(\"-splitPoss\") && (i+1 < args.length)) {\n      englishTrain.splitPoss = Integer.parseInt(args[i+1]);\n      i += 2;\n    } else if (args[i].equalsIgnoreCase(\"-baseNP\") && (i+1 < args.length)) {\n      englishTrain.splitBaseNP = Integer.parseInt(args[i+1]);\n      i += 2;\n    } else if (args[i].equalsIgnoreCase(\"-joinNounTags\")) {\n      englishTrain.joinNounTags = true;\n      i += 1;\n    } else if (args[i].equalsIgnoreCase(\"-correctTags\")) {\n      englishTrain.correctTags = true;\n      i += 1;\n    } else if (args[i].equalsIgnoreCase(\"-noCorrectTags\")) {\n      englishTrain.correctTags = false;\n      i += 1;\n    } else if (args[i].equalsIgnoreCase(\"-markCC\") && (i + 1 < args.length)) {\n      englishTrain.markCC = Integer.parseInt(args[i+1]);\n      i += 2;\n    } else if (args[i].equalsIgnoreCase(\"-noAnnotations\")) {\n      englishTrain.splitVP = 0;\n      englishTrain.splitTMP = NPTmpRetainingTreeNormalizer.TEMPORAL_NONE;\n      englishTrain.splitSGapped = 0;\n      i += 1;\n    } else if (args[i].equalsIgnoreCase(\"-retainNPTMPSubcategories\")) {\n      englishTest.retainNPTMPSubcategories = true;\n      i += 1;\n    } else if (args[i].equalsIgnoreCase(\"-retainTMPSubcategories\")) {\n      englishTest.retainTMPSubcategories = true;\n      i += 1;\n    } else if (args[i].equalsIgnoreCase(\"-retainADVSubcategories\")) {\n      englishTest.retainADVSubcategories = true;\n      i += 1;\n    } else if (args[i].equalsIgnoreCase(\"-leaveItAll\") && (i + 1 < args.length)) {\n      englishTrain.leaveItAll = Integer.parseInt(args[i + 1]);\n      i += 2;\n    } else if (args[i].equalsIgnoreCase(\"-headFinder\") && (i + 1 < args.length)) {\n      try {\n        headFinder = (HeadFinder) Class.forName(args[i + 1]).newInstance();\n      } catch (Exception e) {\n        System.err.println(e);\n        System.err.println(\"Warning: Default HeadFinder will be used.\");\n      }\n      i += 2;\n    } else if (args[i].equalsIgnoreCase(\"-makeCopulaHead\")) {\n      englishTest.makeCopulaHead = true;\n      i += 1;\n    } else if (args[i].equalsIgnoreCase(\"-acl03pcfg\")) {\n      englishTrain.splitIN = 3;\n      englishTrain.splitPercent = true;\n      englishTrain.splitPoss = 1;\n      englishTrain.splitCC = 2;\n      englishTrain.unaryDT = true;\n      englishTrain.unaryRB = true;\n      englishTrain.splitAux = 1;\n      englishTrain.splitVP = 2;\n      englishTrain.splitSGapped = 3;\n      englishTrain.dominatesV = 1;\n      englishTrain.splitTMP = NPTmpRetainingTreeNormalizer.TEMPORAL_ACL03PCFG;\n      englishTrain.splitBaseNP = 1;\n      i += 1;\n    } else if (args[i].equalsIgnoreCase(\"-jenny\")) {\n      englishTrain.splitIN = 3;\n      englishTrain.splitPercent = true;\n      englishTrain.splitPoss = 1;\n      englishTrain.splitCC = 2;\n      englishTrain.unaryDT = true;\n      englishTrain.unaryRB = true;\n      englishTrain.splitAux = 1;\n      englishTrain.splitVP = 2;\n      englishTrain.splitSGapped = 3;\n      englishTrain.dominatesV = 1;\n      englishTrain.splitTMP = NPTmpRetainingTreeNormalizer.TEMPORAL_ACL03PCFG;\n      englishTrain.splitBaseNP = 1;\n      i += 1;\n    } else if (args[i].equalsIgnoreCase(\"-linguisticPCFG\")) {\n      englishTrain.splitIN = 3;\n      englishTrain.splitPercent = true;\n      englishTrain.splitPoss = 1;\n      englishTrain.splitCC = 2;\n      englishTrain.unaryDT = true;\n      englishTrain.unaryRB = true;\n      englishTrain.splitAux = 2;\n      englishTrain.splitVP = 3;\n      englishTrain.splitSGapped = 4;\n      englishTrain.dominatesV = 0;  // not for linguistic\n      englishTrain.splitTMP = NPTmpRetainingTreeNormalizer.TEMPORAL_ACL03PCFG;\n      englishTrain.splitBaseNP = 1;\n      englishTrain.splitMoreLess = true;\n      englishTrain.correctTags = true;  // different from acl03pcfg\n      i += 1;\n    } else if (args[i].equalsIgnoreCase(\"-goodPCFG\")) {\n      englishTrain.splitIN = 4;  // different from acl03pcfg\n      englishTrain.splitPercent = true;\n      englishTrain.splitNPpercent = 0;  // no longer different from acl03pcfg\n      englishTrain.splitPoss = 1;\n      englishTrain.splitCC = 1;\n      englishTrain.unaryDT = true;\n      englishTrain.unaryRB = true;\n      englishTrain.splitAux = 2;   // different from acl03pcfg\n      englishTrain.splitVP = 3;   // different from acl03pcfg\n      englishTrain.splitSGapped = 4;\n      englishTrain.dominatesV = 1;\n      englishTrain.splitTMP = NPTmpRetainingTreeNormalizer.TEMPORAL_ACL03PCFG;\n      englishTrain.splitNPADV = 1; // different from acl03pcfg\n      englishTrain.splitBaseNP = 1;\n      // englishTrain.splitMoreLess = true;   // different from acl03pcfg\n      englishTrain.correctTags = true;  // different from acl03pcfg\n      englishTrain.markDitransV = 2; // different from acl03pcfg\n      i += 1;\n    } else if (args[i].equalsIgnoreCase(\"-ijcai03\")) {\n      englishTrain.splitIN = 3;\n      englishTrain.splitPercent = true;\n      englishTrain.splitPoss = 1;\n      englishTrain.splitCC = 2;\n      englishTrain.unaryDT = false;\n      englishTrain.unaryRB = false;\n      englishTrain.splitAux = 0;\n      englishTrain.splitVP = 2;\n      englishTrain.splitSGapped = 4;\n      englishTrain.dominatesV = 0;\n      englishTrain.splitTMP = NPTmpRetainingTreeNormalizer.TEMPORAL_ACL03PCFG;\n      englishTrain.splitBaseNP = 1;\n      i += 1;\n    } else if (args[i].equalsIgnoreCase(\"-goodFactored\")) {\n      englishTrain.splitIN = 3;\n      englishTrain.splitPercent = true;\n      englishTrain.splitPoss = 1;\n      englishTrain.splitCC = 2;\n      englishTrain.unaryDT = false;\n      englishTrain.unaryRB = false;\n      englishTrain.splitAux = 0;\n      englishTrain.splitVP = 3;  // different from ijcai03\n      englishTrain.splitSGapped = 4;\n      englishTrain.dominatesV = 0;\n      englishTrain.splitTMP = NPTmpRetainingTreeNormalizer.TEMPORAL_ACL03PCFG;\n      englishTrain.splitBaseNP = 1;\n      // BAD!! englishTrain.markCC = 1;  // different from ijcai03\n      englishTrain.correctTags = true;  // different from ijcai03\n      i += 1;\n    }\n    return i;\n  }","id":55369,"modified_method":"/**\n   * Set language-specific options according to flags.\n   * This routine should process the option starting in args[i] (which\n   * might potentially be several arguments long if it takes arguments).\n   * It should return the index after the last index it consumed in\n   * processing.  In particular, if it cannot process the current option,\n   * the return value should be i.\n   */\n  @Override\n  public int setOptionFlag(String[] args, int i) {\n    // [CDM 2008: there are no generic options!] first, see if it's a generic option\n    // int j = super.setOptionFlag(args, i);\n    // if(i != j) return j;\n\n    //lang. specific options\n    if (args[i].equalsIgnoreCase(\"-splitIN\")) {\n      englishTrain.splitIN = Integer.parseInt(args[i + 1]);\n      i += 2;\n    } else if (args[i].equalsIgnoreCase(\"-splitPercent\")) {\n      englishTrain.splitPercent = true;\n      i += 1;\n    } else if (args[i].equalsIgnoreCase(\"-splitQuotes\")) {\n      englishTrain.splitQuotes = true;\n      i += 1;\n    } else if (args[i].equalsIgnoreCase(\"-splitSFP\")) {\n      englishTrain.splitSFP = true;\n      i += 1;\n    } else if (args[i].equalsIgnoreCase(\"-splitNNP\")) {\n      englishTrain.splitNNP = Integer.parseInt(args[i+1]);\n      i += 2;\n    } else if (args[i].equalsIgnoreCase(\"-rbGPA\")) {\n      englishTrain.tagRBGPA = true;\n      i += 1;\n    } else if (args[i].equalsIgnoreCase(\"-splitTRJJ\")) {\n      englishTrain.splitTRJJ = true;\n      i += 1;\n    } else if (args[i].equalsIgnoreCase(\"-splitJJCOMP\")) {\n      englishTrain.splitJJCOMP = true;\n      i += 1;\n    } else if (args[i].equalsIgnoreCase(\"-splitMoreLess\")) {\n      englishTrain.splitMoreLess = true;\n      i += 1;\n    } else if (args[i].equalsIgnoreCase(\"-unaryDT\")) {\n      englishTrain.unaryDT = true;\n      i += 1;\n    } else if (args[i].equalsIgnoreCase(\"-unaryRB\")) {\n      englishTrain.unaryRB = true;\n      i += 1;\n    } else if (args[i].equalsIgnoreCase(\"-unaryIN\")) {\n      englishTrain.unaryIN = true;\n      i += 1;\n    } else if (args[i].equalsIgnoreCase(\"-markReflexivePRP\")) {\n      englishTrain.markReflexivePRP = true;\n      i += 1;\n    } else if (args[i].equalsIgnoreCase(\"-splitCC\") && i + 1 < args.length) {\n      englishTrain.splitCC = Integer.parseInt(args[i+1]);\n      i += 2;\n    } else if (args[i].equalsIgnoreCase(\"-splitRB\")) {\n      englishTrain.splitRB = true;\n      i += 1;\n    } else if (args[i].equalsIgnoreCase(\"-splitAux\") && i+1 < args.length) {\n      englishTrain.splitAux = Integer.parseInt(args[i+1]);\n      i += 2;\n    } else if (args[i].equalsIgnoreCase(\"-splitSbar\") && i+1 < args.length) {\n      englishTrain.splitSbar = Integer.parseInt(args[i+1]);\n      i += 2;\n    } else if (args[i].equalsIgnoreCase(\"-splitVP\") && i + 1 < args.length) {\n      englishTrain.splitVP = Integer.parseInt(args[i + 1]);\n      i += 2;\n    } else if (args[i].equalsIgnoreCase(\"-splitVPNPAgr\")) {\n      englishTrain.splitVPNPAgr = true;\n      i += 1;\n    } else if (args[i].equalsIgnoreCase(\"-gpaRootVP\")) {\n      englishTrain.gpaRootVP = true;\n      i += 1;\n    } else if (args[i].equalsIgnoreCase(\"-makePPTOintoIN\")) {\n      englishTrain.makePPTOintoIN = Integer.parseInt(args[i + 1]);\n      i += 2;\n    } else if (args[i].equalsIgnoreCase(\"-collapseWhCategories\") && i + 1 < args.length) {\n      englishTrain.collapseWhCategories = Integer.parseInt(args[i + 1]);\n      i += 2;\n    } else if (args[i].equalsIgnoreCase(\"-splitSTag\")) {\n      englishTrain.splitSTag = Integer.parseInt(args[i+1]);\n      i += 2;\n    } else if (args[i].equalsIgnoreCase(\"-splitSGapped\") && (i + 1 < args.length)) {\n      englishTrain.splitSGapped = Integer.parseInt(args[i+1]);\n      i += 2;\n    } else if (args[i].equalsIgnoreCase(\"-splitNPpercent\") && (i+1 < args.length)) {\n      englishTrain.splitNPpercent = Integer.parseInt(args[i+1]);\n      i += 2;\n    } else if (args[i].equalsIgnoreCase(\"-splitNPPRP\")) {\n      englishTrain.splitNPPRP = true;\n      i += 1;\n    } else if (args[i].equalsIgnoreCase(\"-dominatesV\") && (i+1 < args.length)) {\n      englishTrain.dominatesV = Integer.parseInt(args[i + 1]);\n      i += 2;\n    } else if (args[i].equalsIgnoreCase(\"-dominatesI\")) {\n      englishTrain.dominatesI = true;\n      i += 1;\n    } else if (args[i].equalsIgnoreCase(\"-dominatesC\")) {\n      englishTrain.dominatesC = true;\n      i += 1;\n    } else if (args[i].equalsIgnoreCase(\"-splitNPNNP\") && (i+1 < args.length)) {\n      englishTrain.splitNPNNP = Integer.parseInt(args[i + 1]);\n      i += 2;\n    } else if (args[i].equalsIgnoreCase(\"-splitTMP\") && (i + 1 < args.length)) {\n      englishTrain.splitTMP = Integer.parseInt(args[i + 1]);\n      i += 2;\n    } else if (args[i].equalsIgnoreCase(\"-splitNPADV\") && (i+1 < args.length)) {\n      englishTrain.splitNPADV = Integer.parseInt(args[i+1]);\n      i += 2;\n    } else if (args[i].equalsIgnoreCase(\"-markContainedVP\")) {\n      englishTrain.markContainedVP = true;\n      i += 1;\n    } else if (args[i].equalsIgnoreCase(\"-markDitransV\") && (i+1 < args.length)) {\n      englishTrain.markDitransV = Integer.parseInt(args[i+1]);\n      i += 2;\n    } else if (args[i].equalsIgnoreCase(\"-splitPoss\") && (i+1 < args.length)) {\n      englishTrain.splitPoss = Integer.parseInt(args[i+1]);\n      i += 2;\n    } else if (args[i].equalsIgnoreCase(\"-baseNP\") && (i+1 < args.length)) {\n      englishTrain.splitBaseNP = Integer.parseInt(args[i+1]);\n      i += 2;\n    } else if (args[i].equalsIgnoreCase(\"-joinNounTags\")) {\n      englishTrain.joinNounTags = true;\n      i += 1;\n    } else if (args[i].equalsIgnoreCase(\"-correctTags\")) {\n      englishTrain.correctTags = true;\n      i += 1;\n    } else if (args[i].equalsIgnoreCase(\"-noCorrectTags\")) {\n      englishTrain.correctTags = false;\n      i += 1;\n    } else if (args[i].equalsIgnoreCase(\"-markCC\") && (i + 1 < args.length)) {\n      englishTrain.markCC = Integer.parseInt(args[i+1]);\n      i += 2;\n    } else if (args[i].equalsIgnoreCase(\"-noAnnotations\")) {\n      englishTrain.splitVP = 0;\n      englishTrain.splitTMP = NPTmpRetainingTreeNormalizer.TEMPORAL_NONE;\n      englishTrain.splitSGapped = 0;\n      i += 1;\n    } else if (args[i].equalsIgnoreCase(\"-retainNPTMPSubcategories\")) {\n      englishTest.retainNPTMPSubcategories = true;\n      i += 1;\n    } else if (args[i].equalsIgnoreCase(\"-retainTMPSubcategories\")) {\n      englishTest.retainTMPSubcategories = true;\n      i += 1;\n    } else if (args[i].equalsIgnoreCase(\"-retainADVSubcategories\")) {\n      englishTest.retainADVSubcategories = true;\n      i += 1;\n    } else if (args[i].equalsIgnoreCase(\"-leaveItAll\") && (i + 1 < args.length)) {\n      englishTrain.leaveItAll = Integer.parseInt(args[i + 1]);\n      i += 2;\n    } else if (args[i].equalsIgnoreCase(\"-headFinder\") && (i + 1 < args.length)) {\n      try {\n        headFinder = (HeadFinder) Class.forName(args[i + 1]).newInstance();\n      } catch (Exception e) {\n        System.err.println(e);\n        System.err.println(\"Warning: Default HeadFinder will be used.\");\n      }\n      i += 2;\n    } else if (args[i].equalsIgnoreCase(\"-makeCopulaHead\")) {\n      englishTest.makeCopulaHead = true;\n      i += 1;\n    } else if(args[i].equalsIgnoreCase(\"-originalDependencies\")) {\n      setGenerateOriginalDependencies(true);\n      i += 1;\n    } else if (args[i].equalsIgnoreCase(\"-acl03pcfg\")) {\n      englishTrain.splitIN = 3;\n      englishTrain.splitPercent = true;\n      englishTrain.splitPoss = 1;\n      englishTrain.splitCC = 2;\n      englishTrain.unaryDT = true;\n      englishTrain.unaryRB = true;\n      englishTrain.splitAux = 1;\n      englishTrain.splitVP = 2;\n      englishTrain.splitSGapped = 3;\n      englishTrain.dominatesV = 1;\n      englishTrain.splitTMP = NPTmpRetainingTreeNormalizer.TEMPORAL_ACL03PCFG;\n      englishTrain.splitBaseNP = 1;\n      i += 1;\n    } else if (args[i].equalsIgnoreCase(\"-jenny\")) {\n      englishTrain.splitIN = 3;\n      englishTrain.splitPercent = true;\n      englishTrain.splitPoss = 1;\n      englishTrain.splitCC = 2;\n      englishTrain.unaryDT = true;\n      englishTrain.unaryRB = true;\n      englishTrain.splitAux = 1;\n      englishTrain.splitVP = 2;\n      englishTrain.splitSGapped = 3;\n      englishTrain.dominatesV = 1;\n      englishTrain.splitTMP = NPTmpRetainingTreeNormalizer.TEMPORAL_ACL03PCFG;\n      englishTrain.splitBaseNP = 1;\n      i += 1;\n    } else if (args[i].equalsIgnoreCase(\"-linguisticPCFG\")) {\n      englishTrain.splitIN = 3;\n      englishTrain.splitPercent = true;\n      englishTrain.splitPoss = 1;\n      englishTrain.splitCC = 2;\n      englishTrain.unaryDT = true;\n      englishTrain.unaryRB = true;\n      englishTrain.splitAux = 2;\n      englishTrain.splitVP = 3;\n      englishTrain.splitSGapped = 4;\n      englishTrain.dominatesV = 0;  // not for linguistic\n      englishTrain.splitTMP = NPTmpRetainingTreeNormalizer.TEMPORAL_ACL03PCFG;\n      englishTrain.splitBaseNP = 1;\n      englishTrain.splitMoreLess = true;\n      englishTrain.correctTags = true;  // different from acl03pcfg\n      i += 1;\n    } else if (args[i].equalsIgnoreCase(\"-goodPCFG\")) {\n      englishTrain.splitIN = 4;  // different from acl03pcfg\n      englishTrain.splitPercent = true;\n      englishTrain.splitNPpercent = 0;  // no longer different from acl03pcfg\n      englishTrain.splitPoss = 1;\n      englishTrain.splitCC = 1;\n      englishTrain.unaryDT = true;\n      englishTrain.unaryRB = true;\n      englishTrain.splitAux = 2;   // different from acl03pcfg\n      englishTrain.splitVP = 3;   // different from acl03pcfg\n      englishTrain.splitSGapped = 4;\n      englishTrain.dominatesV = 1;\n      englishTrain.splitTMP = NPTmpRetainingTreeNormalizer.TEMPORAL_ACL03PCFG;\n      englishTrain.splitNPADV = 1; // different from acl03pcfg\n      englishTrain.splitBaseNP = 1;\n      // englishTrain.splitMoreLess = true;   // different from acl03pcfg\n      englishTrain.correctTags = true;  // different from acl03pcfg\n      englishTrain.markDitransV = 2; // different from acl03pcfg\n      i += 1;\n    } else if (args[i].equalsIgnoreCase(\"-ijcai03\")) {\n      englishTrain.splitIN = 3;\n      englishTrain.splitPercent = true;\n      englishTrain.splitPoss = 1;\n      englishTrain.splitCC = 2;\n      englishTrain.unaryDT = false;\n      englishTrain.unaryRB = false;\n      englishTrain.splitAux = 0;\n      englishTrain.splitVP = 2;\n      englishTrain.splitSGapped = 4;\n      englishTrain.dominatesV = 0;\n      englishTrain.splitTMP = NPTmpRetainingTreeNormalizer.TEMPORAL_ACL03PCFG;\n      englishTrain.splitBaseNP = 1;\n      i += 1;\n    } else if (args[i].equalsIgnoreCase(\"-goodFactored\")) {\n      englishTrain.splitIN = 3;\n      englishTrain.splitPercent = true;\n      englishTrain.splitPoss = 1;\n      englishTrain.splitCC = 2;\n      englishTrain.unaryDT = false;\n      englishTrain.unaryRB = false;\n      englishTrain.splitAux = 0;\n      englishTrain.splitVP = 3;  // different from ijcai03\n      englishTrain.splitSGapped = 4;\n      englishTrain.dominatesV = 0;\n      englishTrain.splitTMP = NPTmpRetainingTreeNormalizer.TEMPORAL_ACL03PCFG;\n      englishTrain.splitBaseNP = 1;\n      // BAD!! englishTrain.markCC = 1;  // different from ijcai03\n      englishTrain.correctTags = true;  // different from ijcai03\n      i += 1;\n    }\n    return i;\n  }","commit_id":"9fcf478e49f5b85fe6811d8197539cfb149a2cc1","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"/**\n   * Make a TreePrint instance.\n   *\n   * @param formatString A comma separated list of ways to print each Tree.\n   *                For instance, \"penn\" or \"words,typedDependencies\".\n   *                Known formats are: oneline, penn, latexTree, xmlTree, words,\n   *                wordsAndTags, rootSymbolOnly, dependencies,\n   *                typedDependencies, typedDependenciesCollapsed,\n   *                collocations, semanticGraph, conllStyleDependencies,\n   *                conll2007.  The last two are both tab-separated values\n   *                formats.  The latter has a lot more columns filled with\n   *                underscores. All of them print a blank line after\n   *                the output except for oneline.  oneline is also not\n   *                meaningful in XML output (it is ignored: use penn instead).\n   *                (Use of typedDependenciesCollapsed is deprecated.  It\n   *                works but we recommend instead selecting a type of\n   *                dependencies using the optionsString argument.  Note in\n   *                particular that typedDependenciesCollapsed does not do\n   *                CC propagation, which we generally recommend.)\n   * @param optionsString Options that additionally specify how trees are to\n   *                be printed (for instance, whether stemming should be done).\n   *                Known options are: <code>stem, lexicalize, markHeadNodes,\n   *                xml, removeTopBracket, transChinese,\n   *                includePunctuationDependencies, basicDependencies, treeDependencies,\n   *                CCPropagatedDependencies, collapsedDependencies, nonCollapsedDependencies,\n   *                nonCollapsedDependenciesSeparated, includeTags\n   *                <\/code>.\n   * @param tlp     The TreebankLanguagePack used to do things like delete\n   *                or ignore punctuation in output\n   * @param hf      The HeadFinder used in printing output\n   */\n  public TreePrint(String formatString, String optionsString, TreebankLanguagePack tlp, HeadFinder hf, HeadFinder typedDependencyHF) {\n    formats = StringUtils.stringToProperties(formatString);\n    options = StringUtils.stringToProperties(optionsString);\n    List<String> okOutputs = Arrays.asList(outputTreeFormats);\n    for (Object formObj : formats.keySet()) {\n      String format = (String) formObj;\n      if ( ! okOutputs.contains(format)) {\n        throw new RuntimeException(\"Error: output tree format \" + format + \" not supported. Known formats are: \" + okOutputs);\n      }\n    }\n\n    this.hf = hf;\n    this.tlp = tlp;\n    boolean includePunctuationDependencies;\n    includePunctuationDependencies = propertyToBoolean(this.options,\n                                                       \"includePunctuationDependencies\");\n    Predicate<String> puncWordFilter;\n    if (includePunctuationDependencies) {\n      dependencyFilter = Filters.acceptFilter();\n      dependencyWordFilter = Filters.acceptFilter();\n      puncWordFilter = Filters.acceptFilter();\n    } else {\n      dependencyFilter = new Dependencies.DependentPuncTagRejectFilter<Label, Label, Object>(tlp.punctuationTagRejectFilter());\n      dependencyWordFilter = new Dependencies.DependentPuncWordRejectFilter<Label, Label, Object>(tlp.punctuationWordRejectFilter());\n      puncWordFilter = tlp.punctuationWordRejectFilter();\n    }\n    if (propertyToBoolean(this.options, \"stem\")) {\n      stemmer = new WordStemmer();\n    } else {\n      stemmer = null;\n    }\n    if (formats.containsKey(\"typedDependenciesCollapsed\") ||\n        formats.containsKey(\"typedDependencies\") ||\n        (formats.containsKey(\"conll2007\") && tlp.supportsGrammaticalStructures())) {\n      gsf = tlp.grammaticalStructureFactory(puncWordFilter, typedDependencyHF);\n    } else {\n      gsf = null;\n    }\n\n    lexicalize = propertyToBoolean(this.options, \"lexicalize\");\n    markHeadNodes = propertyToBoolean(this.options, \"markHeadNodes\");\n    transChinese = propertyToBoolean(this.options, \"transChinese\");\n    ptb2text = propertyToBoolean(this.options, \"ptb2text\");\n    removeEmpty = propertyToBoolean(this.options, \"noempty\") || ptb2text;\n\n    basicDependencies =  propertyToBoolean(this.options, \"basicDependencies\");\n    collapsedDependencies = propertyToBoolean(this.options, \"collapsedDependencies\");\n    nonCollapsedDependencies = propertyToBoolean(this.options, \"nonCollapsedDependencies\");\n    nonCollapsedDependenciesSeparated = propertyToBoolean(this.options, \"nonCollapsedDependenciesSeparated\");\n    treeDependencies = propertyToBoolean(this.options, \"treeDependencies\");\n\n    includeTags = propertyToBoolean(this.options, \"includeTags\");\n\n    // if no option format for the dependencies is specified, CCPropagated is the default\n    if ( ! basicDependencies && ! collapsedDependencies && ! nonCollapsedDependencies && ! nonCollapsedDependenciesSeparated && ! treeDependencies) {\n      CCPropagatedDependencies = true;\n    } else {\n      CCPropagatedDependencies = propertyToBoolean(this.options, \"CCPropagatedDependencies\");\n    }\n  }","id":55370,"modified_method":"/**\n   * Make a TreePrint instance.\n   *\n   * @param formatString A comma separated list of ways to print each Tree.\n   *                For instance, \"penn\" or \"words,typedDependencies\".\n   *                Known formats are: oneline, penn, latexTree, xmlTree, words,\n   *                wordsAndTags, rootSymbolOnly, dependencies,\n   *                typedDependencies, typedDependenciesCollapsed,\n   *                collocations, semanticGraph, conllStyleDependencies,\n   *                conll2007.  The last two are both tab-separated values\n   *                formats.  The latter has a lot more columns filled with\n   *                underscores. All of them print a blank line after\n   *                the output except for oneline.  oneline is also not\n   *                meaningful in XML output (it is ignored: use penn instead).\n   *                (Use of typedDependenciesCollapsed is deprecated.  It\n   *                works but we recommend instead selecting a type of\n   *                dependencies using the optionsString argument.  Note in\n   *                particular that typedDependenciesCollapsed does not do\n   *                CC propagation, which we generally recommend.)\n   * @param optionsString Options that additionally specify how trees are to\n   *                be printed (for instance, whether stemming should be done).\n   *                Known options are: <code>stem, lexicalize, markHeadNodes,\n   *                xml, removeTopBracket, transChinese,\n   *                includePunctuationDependencies, basicDependencies, treeDependencies,\n   *                CCPropagatedDependencies, collapsedDependencies, nonCollapsedDependencies,\n   *                nonCollapsedDependenciesSeparated, includeTags\n   *                <\/code>.\n   * @param tlp     The TreebankLanguagePack used to do things like delete\n   *                or ignore punctuation in output\n   * @param hf      The HeadFinder used in printing output\n   */\n  public TreePrint(String formatString, String optionsString, TreebankLanguagePack tlp, HeadFinder hf, HeadFinder typedDependencyHF) {\n    formats = StringUtils.stringToProperties(formatString);\n    options = StringUtils.stringToProperties(optionsString);\n    List<String> okOutputs = Arrays.asList(outputTreeFormats);\n    for (Object formObj : formats.keySet()) {\n      String format = (String) formObj;\n      if ( ! okOutputs.contains(format)) {\n        throw new RuntimeException(\"Error: output tree format \" + format + \" not supported. Known formats are: \" + okOutputs);\n      }\n    }\n\n    this.hf = hf;\n    this.tlp = tlp;\n    boolean includePunctuationDependencies;\n    includePunctuationDependencies = propertyToBoolean(this.options,\n                                                       \"includePunctuationDependencies\");\n\n    boolean generateOriginalDependencies = tlp.generateOriginalDependencies();\n\n    Predicate<String> puncFilter;\n    if (includePunctuationDependencies) {\n      dependencyFilter = Filters.acceptFilter();\n      dependencyWordFilter = Filters.acceptFilter();\n      puncFilter = Filters.acceptFilter();\n    } else {\n      dependencyFilter = new Dependencies.DependentPuncTagRejectFilter<Label, Label, Object>(tlp.punctuationTagRejectFilter());\n      dependencyWordFilter = new Dependencies.DependentPuncWordRejectFilter<Label, Label, Object>(tlp.punctuationWordRejectFilter());\n      //Universal dependencies filter punction by tags\n      puncFilter = generateOriginalDependencies ? tlp.punctuationWordRejectFilter() : tlp.punctuationTagRejectFilter();\n    }\n    if (propertyToBoolean(this.options, \"stem\")) {\n      stemmer = new WordStemmer();\n    } else {\n      stemmer = null;\n    }\n    if (formats.containsKey(\"typedDependenciesCollapsed\") ||\n        formats.containsKey(\"typedDependencies\") ||\n        (formats.containsKey(\"conll2007\") && tlp.supportsGrammaticalStructures())) {\n      gsf = tlp.grammaticalStructureFactory(puncFilter, typedDependencyHF);\n    } else {\n      gsf = null;\n    }\n\n    lexicalize = propertyToBoolean(this.options, \"lexicalize\");\n    markHeadNodes = propertyToBoolean(this.options, \"markHeadNodes\");\n    transChinese = propertyToBoolean(this.options, \"transChinese\");\n    ptb2text = propertyToBoolean(this.options, \"ptb2text\");\n    removeEmpty = propertyToBoolean(this.options, \"noempty\") || ptb2text;\n\n    basicDependencies =  propertyToBoolean(this.options, \"basicDependencies\");\n    collapsedDependencies = propertyToBoolean(this.options, \"collapsedDependencies\");\n    nonCollapsedDependencies = propertyToBoolean(this.options, \"nonCollapsedDependencies\");\n    nonCollapsedDependenciesSeparated = propertyToBoolean(this.options, \"nonCollapsedDependenciesSeparated\");\n    treeDependencies = propertyToBoolean(this.options, \"treeDependencies\");\n\n    includeTags = propertyToBoolean(this.options, \"includeTags\");\n\n    // if no option format for the dependencies is specified, CCPropagated is the default\n    if ( ! basicDependencies && ! collapsedDependencies && ! nonCollapsedDependencies && ! nonCollapsedDependenciesSeparated && ! treeDependencies) {\n      CCPropagatedDependencies = true;\n    } else {\n      CCPropagatedDependencies = propertyToBoolean(this.options, \"CCPropagatedDependencies\");\n    }\n  }","commit_id":"9fcf478e49f5b85fe6811d8197539cfb149a2cc1","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"/**\n   * Set language-specific options according to flags.\n   * This routine should process the option starting in args[i] (which\n   * might potentially be several arguments long if it takes arguments).\n   * It should return the index after the last index it consumed in\n   * processing.  In particular, if it cannot process the current option,\n   * the return value should be i.\n   */\n  @Override\n  public int setOptionFlag(String[] args, int i) {\n    // [CDM 2008: there are no generic options!] first, see if it's a generic option\n    // int j = super.setOptionFlag(args, i);\n    // if(i != j) return j;\n\n    //lang. specific options\n    if (args[i].equalsIgnoreCase(\"-splitIN\")) {\n      englishTrain.splitIN = Integer.parseInt(args[i + 1]);\n      i += 2;\n    } else if (args[i].equalsIgnoreCase(\"-splitPercent\")) {\n      englishTrain.splitPercent = true;\n      i += 1;\n    } else if (args[i].equalsIgnoreCase(\"-splitQuotes\")) {\n      englishTrain.splitQuotes = true;\n      i += 1;\n    } else if (args[i].equalsIgnoreCase(\"-splitSFP\")) {\n      englishTrain.splitSFP = true;\n      i += 1;\n    } else if (args[i].equalsIgnoreCase(\"-splitNNP\")) {\n      englishTrain.splitNNP = Integer.parseInt(args[i+1]);\n      i += 2;\n    } else if (args[i].equalsIgnoreCase(\"-rbGPA\")) {\n      englishTrain.tagRBGPA = true;\n      i += 1;\n    } else if (args[i].equalsIgnoreCase(\"-splitTRJJ\")) {\n      englishTrain.splitTRJJ = true;\n      i += 1;\n    } else if (args[i].equalsIgnoreCase(\"-splitJJCOMP\")) {\n      englishTrain.splitJJCOMP = true;\n      i += 1;\n    } else if (args[i].equalsIgnoreCase(\"-splitMoreLess\")) {\n      englishTrain.splitMoreLess = true;\n      i += 1;\n    } else if (args[i].equalsIgnoreCase(\"-unaryDT\")) {\n      englishTrain.unaryDT = true;\n      i += 1;\n    } else if (args[i].equalsIgnoreCase(\"-unaryRB\")) {\n      englishTrain.unaryRB = true;\n      i += 1;\n    } else if (args[i].equalsIgnoreCase(\"-unaryIN\")) {\n      englishTrain.unaryIN = true;\n      i += 1;\n    } else if (args[i].equalsIgnoreCase(\"-markReflexivePRP\")) {\n      englishTrain.markReflexivePRP = true;\n      i += 1;\n    } else if (args[i].equalsIgnoreCase(\"-splitCC\") && i + 1 < args.length) {\n      englishTrain.splitCC = Integer.parseInt(args[i+1]);\n      i += 2;\n    } else if (args[i].equalsIgnoreCase(\"-splitRB\")) {\n      englishTrain.splitRB = true;\n      i += 1;\n    } else if (args[i].equalsIgnoreCase(\"-splitAux\") && i+1 < args.length) {\n      englishTrain.splitAux = Integer.parseInt(args[i+1]);\n      i += 2;\n    } else if (args[i].equalsIgnoreCase(\"-splitSbar\") && i+1 < args.length) {\n      englishTrain.splitSbar = Integer.parseInt(args[i+1]);\n      i += 2;\n    } else if (args[i].equalsIgnoreCase(\"-splitVP\") && i + 1 < args.length) {\n      englishTrain.splitVP = Integer.parseInt(args[i + 1]);\n      i += 2;\n    } else if (args[i].equalsIgnoreCase(\"-splitVPNPAgr\")) {\n      englishTrain.splitVPNPAgr = true;\n      i += 1;\n    } else if (args[i].equalsIgnoreCase(\"-gpaRootVP\")) {\n      englishTrain.gpaRootVP = true;\n      i += 1;\n    } else if (args[i].equalsIgnoreCase(\"-makePPTOintoIN\")) {\n      englishTrain.makePPTOintoIN = Integer.parseInt(args[i + 1]);\n      i += 2;\n    } else if (args[i].equalsIgnoreCase(\"-collapseWhCategories\") && i + 1 < args.length) {\n      englishTrain.collapseWhCategories = Integer.parseInt(args[i + 1]);\n      i += 2;\n    } else if (args[i].equalsIgnoreCase(\"-splitSTag\")) {\n      englishTrain.splitSTag = Integer.parseInt(args[i+1]);\n      i += 2;\n    } else if (args[i].equalsIgnoreCase(\"-splitSGapped\") && (i + 1 < args.length)) {\n      englishTrain.splitSGapped = Integer.parseInt(args[i+1]);\n      i += 2;\n    } else if (args[i].equalsIgnoreCase(\"-splitNPpercent\") && (i+1 < args.length)) {\n      englishTrain.splitNPpercent = Integer.parseInt(args[i+1]);\n      i += 2;\n    } else if (args[i].equalsIgnoreCase(\"-splitNPPRP\")) {\n      englishTrain.splitNPPRP = true;\n      i += 1;\n    } else if (args[i].equalsIgnoreCase(\"-dominatesV\") && (i+1 < args.length)) {\n      englishTrain.dominatesV = Integer.parseInt(args[i + 1]);\n      i += 2;\n    } else if (args[i].equalsIgnoreCase(\"-dominatesI\")) {\n      englishTrain.dominatesI = true;\n      i += 1;\n    } else if (args[i].equalsIgnoreCase(\"-dominatesC\")) {\n      englishTrain.dominatesC = true;\n      i += 1;\n    } else if (args[i].equalsIgnoreCase(\"-splitNPNNP\") && (i+1 < args.length)) {\n      englishTrain.splitNPNNP = Integer.parseInt(args[i + 1]);\n      i += 2;\n    } else if (args[i].equalsIgnoreCase(\"-splitTMP\") && (i + 1 < args.length)) {\n      englishTrain.splitTMP = Integer.parseInt(args[i + 1]);\n      i += 2;\n    } else if (args[i].equalsIgnoreCase(\"-splitNPADV\") && (i+1 < args.length)) {\n      englishTrain.splitNPADV = Integer.parseInt(args[i+1]);\n      i += 2;\n    } else if (args[i].equalsIgnoreCase(\"-markContainedVP\")) {\n      englishTrain.markContainedVP = true;\n      i += 1;\n    } else if (args[i].equalsIgnoreCase(\"-markDitransV\") && (i+1 < args.length)) {\n      englishTrain.markDitransV = Integer.parseInt(args[i+1]);\n      i += 2;\n    } else if (args[i].equalsIgnoreCase(\"-splitPoss\") && (i+1 < args.length)) {\n      englishTrain.splitPoss = Integer.parseInt(args[i+1]);\n      i += 2;\n    } else if (args[i].equalsIgnoreCase(\"-baseNP\") && (i+1 < args.length)) {\n      englishTrain.splitBaseNP = Integer.parseInt(args[i+1]);\n      i += 2;\n    } else if (args[i].equalsIgnoreCase(\"-joinNounTags\")) {\n      englishTrain.joinNounTags = true;\n      i += 1;\n    } else if (args[i].equalsIgnoreCase(\"-correctTags\")) {\n      englishTrain.correctTags = true;\n      i += 1;\n    } else if (args[i].equalsIgnoreCase(\"-noCorrectTags\")) {\n      englishTrain.correctTags = false;\n      i += 1;\n    } else if (args[i].equalsIgnoreCase(\"-markCC\") && (i + 1 < args.length)) {\n      englishTrain.markCC = Integer.parseInt(args[i+1]);\n      i += 2;\n    } else if (args[i].equalsIgnoreCase(\"-noAnnotations\")) {\n      englishTrain.splitVP = 0;\n      englishTrain.splitTMP = NPTmpRetainingTreeNormalizer.TEMPORAL_NONE;\n      englishTrain.splitSGapped = 0;\n      i += 1;\n    } else if (args[i].equalsIgnoreCase(\"-retainNPTMPSubcategories\")) {\n      englishTest.retainNPTMPSubcategories = true;\n      i += 1;\n    } else if (args[i].equalsIgnoreCase(\"-retainTMPSubcategories\")) {\n      englishTest.retainTMPSubcategories = true;\n      i += 1;\n    } else if (args[i].equalsIgnoreCase(\"-retainADVSubcategories\")) {\n      englishTest.retainADVSubcategories = true;\n      i += 1;\n    } else if (args[i].equalsIgnoreCase(\"-leaveItAll\") && (i + 1 < args.length)) {\n      englishTrain.leaveItAll = Integer.parseInt(args[i + 1]);\n      i += 2;\n    } else if (args[i].equalsIgnoreCase(\"-headFinder\") && (i + 1 < args.length)) {\n      try {\n        headFinder = (HeadFinder) Class.forName(args[i + 1]).newInstance();\n      } catch (Exception e) {\n        System.err.println(e);\n        System.err.println(\"Warning: Default HeadFinder will be used.\");\n      }\n      i += 2;\n    } else if (args[i].equalsIgnoreCase(\"-makeCopulaHead\")) {\n      englishTest.makeCopulaHead = true;\n      i += 1;\n    } else if (args[i].equalsIgnoreCase(\"-acl03pcfg\")) {\n      englishTrain.splitIN = 3;\n      englishTrain.splitPercent = true;\n      englishTrain.splitPoss = 1;\n      englishTrain.splitCC = 2;\n      englishTrain.unaryDT = true;\n      englishTrain.unaryRB = true;\n      englishTrain.splitAux = 1;\n      englishTrain.splitVP = 2;\n      englishTrain.splitSGapped = 3;\n      englishTrain.dominatesV = 1;\n      englishTrain.splitTMP = NPTmpRetainingTreeNormalizer.TEMPORAL_ACL03PCFG;\n      englishTrain.splitBaseNP = 1;\n      i += 1;\n    } else if (args[i].equalsIgnoreCase(\"-jenny\")) {\n      englishTrain.splitIN = 3;\n      englishTrain.splitPercent = true;\n      englishTrain.splitPoss = 1;\n      englishTrain.splitCC = 2;\n      englishTrain.unaryDT = true;\n      englishTrain.unaryRB = true;\n      englishTrain.splitAux = 1;\n      englishTrain.splitVP = 2;\n      englishTrain.splitSGapped = 3;\n      englishTrain.dominatesV = 1;\n      englishTrain.splitTMP = NPTmpRetainingTreeNormalizer.TEMPORAL_ACL03PCFG;\n      englishTrain.splitBaseNP = 1;\n      i += 1;\n    } else if (args[i].equalsIgnoreCase(\"-linguisticPCFG\")) {\n      englishTrain.splitIN = 3;\n      englishTrain.splitPercent = true;\n      englishTrain.splitPoss = 1;\n      englishTrain.splitCC = 2;\n      englishTrain.unaryDT = true;\n      englishTrain.unaryRB = true;\n      englishTrain.splitAux = 2;\n      englishTrain.splitVP = 3;\n      englishTrain.splitSGapped = 4;\n      englishTrain.dominatesV = 0;  // not for linguistic\n      englishTrain.splitTMP = NPTmpRetainingTreeNormalizer.TEMPORAL_ACL03PCFG;\n      englishTrain.splitBaseNP = 1;\n      englishTrain.splitMoreLess = true;\n      englishTrain.correctTags = true;  // different from acl03pcfg\n      i += 1;\n    } else if (args[i].equalsIgnoreCase(\"-goodPCFG\")) {\n      englishTrain.splitIN = 4;  // different from acl03pcfg\n      englishTrain.splitPercent = true;\n      englishTrain.splitNPpercent = 0;  // no longer different from acl03pcfg\n      englishTrain.splitPoss = 1;\n      englishTrain.splitCC = 1;\n      englishTrain.unaryDT = true;\n      englishTrain.unaryRB = true;\n      englishTrain.splitAux = 2;   // different from acl03pcfg\n      englishTrain.splitVP = 3;   // different from acl03pcfg\n      englishTrain.splitSGapped = 4;\n      englishTrain.dominatesV = 1;\n      englishTrain.splitTMP = NPTmpRetainingTreeNormalizer.TEMPORAL_ACL03PCFG;\n      englishTrain.splitNPADV = 1; // different from acl03pcfg\n      englishTrain.splitBaseNP = 1;\n      // englishTrain.splitMoreLess = true;   // different from acl03pcfg\n      englishTrain.correctTags = true;  // different from acl03pcfg\n      englishTrain.markDitransV = 2; // different from acl03pcfg\n      i += 1;\n    } else if (args[i].equalsIgnoreCase(\"-ijcai03\")) {\n      englishTrain.splitIN = 3;\n      englishTrain.splitPercent = true;\n      englishTrain.splitPoss = 1;\n      englishTrain.splitCC = 2;\n      englishTrain.unaryDT = false;\n      englishTrain.unaryRB = false;\n      englishTrain.splitAux = 0;\n      englishTrain.splitVP = 2;\n      englishTrain.splitSGapped = 4;\n      englishTrain.dominatesV = 0;\n      englishTrain.splitTMP = NPTmpRetainingTreeNormalizer.TEMPORAL_ACL03PCFG;\n      englishTrain.splitBaseNP = 1;\n      i += 1;\n    } else if (args[i].equalsIgnoreCase(\"-goodFactored\")) {\n      englishTrain.splitIN = 3;\n      englishTrain.splitPercent = true;\n      englishTrain.splitPoss = 1;\n      englishTrain.splitCC = 2;\n      englishTrain.unaryDT = false;\n      englishTrain.unaryRB = false;\n      englishTrain.splitAux = 0;\n      englishTrain.splitVP = 3;  // different from ijcai03\n      englishTrain.splitSGapped = 4;\n      englishTrain.dominatesV = 0;\n      englishTrain.splitTMP = NPTmpRetainingTreeNormalizer.TEMPORAL_ACL03PCFG;\n      englishTrain.splitBaseNP = 1;\n      // BAD!! englishTrain.markCC = 1;  // different from ijcai03\n      englishTrain.correctTags = true;  // different from ijcai03\n      i += 1;\n    }\n    return i;\n  }","id":55371,"modified_method":"/**\n   * Set language-specific options according to flags.\n   * This routine should process the option starting in args[i] (which\n   * might potentially be several arguments long if it takes arguments).\n   * It should return the index after the last index it consumed in\n   * processing.  In particular, if it cannot process the current option,\n   * the return value should be i.\n   */\n  @Override\n  public int setOptionFlag(String[] args, int i) {\n    // [CDM 2008: there are no generic options!] first, see if it's a generic option\n    // int j = super.setOptionFlag(args, i);\n    // if(i != j) return j;\n\n    //lang. specific options\n    if (args[i].equalsIgnoreCase(\"-splitIN\")) {\n      englishTrain.splitIN = Integer.parseInt(args[i + 1]);\n      i += 2;\n    } else if (args[i].equalsIgnoreCase(\"-splitPercent\")) {\n      englishTrain.splitPercent = true;\n      i += 1;\n    } else if (args[i].equalsIgnoreCase(\"-splitQuotes\")) {\n      englishTrain.splitQuotes = true;\n      i += 1;\n    } else if (args[i].equalsIgnoreCase(\"-splitSFP\")) {\n      englishTrain.splitSFP = true;\n      i += 1;\n    } else if (args[i].equalsIgnoreCase(\"-splitNNP\")) {\n      englishTrain.splitNNP = Integer.parseInt(args[i+1]);\n      i += 2;\n    } else if (args[i].equalsIgnoreCase(\"-rbGPA\")) {\n      englishTrain.tagRBGPA = true;\n      i += 1;\n    } else if (args[i].equalsIgnoreCase(\"-splitTRJJ\")) {\n      englishTrain.splitTRJJ = true;\n      i += 1;\n    } else if (args[i].equalsIgnoreCase(\"-splitJJCOMP\")) {\n      englishTrain.splitJJCOMP = true;\n      i += 1;\n    } else if (args[i].equalsIgnoreCase(\"-splitMoreLess\")) {\n      englishTrain.splitMoreLess = true;\n      i += 1;\n    } else if (args[i].equalsIgnoreCase(\"-unaryDT\")) {\n      englishTrain.unaryDT = true;\n      i += 1;\n    } else if (args[i].equalsIgnoreCase(\"-unaryRB\")) {\n      englishTrain.unaryRB = true;\n      i += 1;\n    } else if (args[i].equalsIgnoreCase(\"-unaryIN\")) {\n      englishTrain.unaryIN = true;\n      i += 1;\n    } else if (args[i].equalsIgnoreCase(\"-markReflexivePRP\")) {\n      englishTrain.markReflexivePRP = true;\n      i += 1;\n    } else if (args[i].equalsIgnoreCase(\"-splitCC\") && i + 1 < args.length) {\n      englishTrain.splitCC = Integer.parseInt(args[i+1]);\n      i += 2;\n    } else if (args[i].equalsIgnoreCase(\"-splitRB\")) {\n      englishTrain.splitRB = true;\n      i += 1;\n    } else if (args[i].equalsIgnoreCase(\"-splitAux\") && i+1 < args.length) {\n      englishTrain.splitAux = Integer.parseInt(args[i+1]);\n      i += 2;\n    } else if (args[i].equalsIgnoreCase(\"-splitSbar\") && i+1 < args.length) {\n      englishTrain.splitSbar = Integer.parseInt(args[i+1]);\n      i += 2;\n    } else if (args[i].equalsIgnoreCase(\"-splitVP\") && i + 1 < args.length) {\n      englishTrain.splitVP = Integer.parseInt(args[i + 1]);\n      i += 2;\n    } else if (args[i].equalsIgnoreCase(\"-splitVPNPAgr\")) {\n      englishTrain.splitVPNPAgr = true;\n      i += 1;\n    } else if (args[i].equalsIgnoreCase(\"-gpaRootVP\")) {\n      englishTrain.gpaRootVP = true;\n      i += 1;\n    } else if (args[i].equalsIgnoreCase(\"-makePPTOintoIN\")) {\n      englishTrain.makePPTOintoIN = Integer.parseInt(args[i + 1]);\n      i += 2;\n    } else if (args[i].equalsIgnoreCase(\"-collapseWhCategories\") && i + 1 < args.length) {\n      englishTrain.collapseWhCategories = Integer.parseInt(args[i + 1]);\n      i += 2;\n    } else if (args[i].equalsIgnoreCase(\"-splitSTag\")) {\n      englishTrain.splitSTag = Integer.parseInt(args[i+1]);\n      i += 2;\n    } else if (args[i].equalsIgnoreCase(\"-splitSGapped\") && (i + 1 < args.length)) {\n      englishTrain.splitSGapped = Integer.parseInt(args[i+1]);\n      i += 2;\n    } else if (args[i].equalsIgnoreCase(\"-splitNPpercent\") && (i+1 < args.length)) {\n      englishTrain.splitNPpercent = Integer.parseInt(args[i+1]);\n      i += 2;\n    } else if (args[i].equalsIgnoreCase(\"-splitNPPRP\")) {\n      englishTrain.splitNPPRP = true;\n      i += 1;\n    } else if (args[i].equalsIgnoreCase(\"-dominatesV\") && (i+1 < args.length)) {\n      englishTrain.dominatesV = Integer.parseInt(args[i + 1]);\n      i += 2;\n    } else if (args[i].equalsIgnoreCase(\"-dominatesI\")) {\n      englishTrain.dominatesI = true;\n      i += 1;\n    } else if (args[i].equalsIgnoreCase(\"-dominatesC\")) {\n      englishTrain.dominatesC = true;\n      i += 1;\n    } else if (args[i].equalsIgnoreCase(\"-splitNPNNP\") && (i+1 < args.length)) {\n      englishTrain.splitNPNNP = Integer.parseInt(args[i + 1]);\n      i += 2;\n    } else if (args[i].equalsIgnoreCase(\"-splitTMP\") && (i + 1 < args.length)) {\n      englishTrain.splitTMP = Integer.parseInt(args[i + 1]);\n      i += 2;\n    } else if (args[i].equalsIgnoreCase(\"-splitNPADV\") && (i+1 < args.length)) {\n      englishTrain.splitNPADV = Integer.parseInt(args[i+1]);\n      i += 2;\n    } else if (args[i].equalsIgnoreCase(\"-markContainedVP\")) {\n      englishTrain.markContainedVP = true;\n      i += 1;\n    } else if (args[i].equalsIgnoreCase(\"-markDitransV\") && (i+1 < args.length)) {\n      englishTrain.markDitransV = Integer.parseInt(args[i+1]);\n      i += 2;\n    } else if (args[i].equalsIgnoreCase(\"-splitPoss\") && (i+1 < args.length)) {\n      englishTrain.splitPoss = Integer.parseInt(args[i+1]);\n      i += 2;\n    } else if (args[i].equalsIgnoreCase(\"-baseNP\") && (i+1 < args.length)) {\n      englishTrain.splitBaseNP = Integer.parseInt(args[i+1]);\n      i += 2;\n    } else if (args[i].equalsIgnoreCase(\"-joinNounTags\")) {\n      englishTrain.joinNounTags = true;\n      i += 1;\n    } else if (args[i].equalsIgnoreCase(\"-correctTags\")) {\n      englishTrain.correctTags = true;\n      i += 1;\n    } else if (args[i].equalsIgnoreCase(\"-noCorrectTags\")) {\n      englishTrain.correctTags = false;\n      i += 1;\n    } else if (args[i].equalsIgnoreCase(\"-markCC\") && (i + 1 < args.length)) {\n      englishTrain.markCC = Integer.parseInt(args[i+1]);\n      i += 2;\n    } else if (args[i].equalsIgnoreCase(\"-noAnnotations\")) {\n      englishTrain.splitVP = 0;\n      englishTrain.splitTMP = NPTmpRetainingTreeNormalizer.TEMPORAL_NONE;\n      englishTrain.splitSGapped = 0;\n      i += 1;\n    } else if (args[i].equalsIgnoreCase(\"-retainNPTMPSubcategories\")) {\n      englishTest.retainNPTMPSubcategories = true;\n      i += 1;\n    } else if (args[i].equalsIgnoreCase(\"-retainTMPSubcategories\")) {\n      englishTest.retainTMPSubcategories = true;\n      i += 1;\n    } else if (args[i].equalsIgnoreCase(\"-retainADVSubcategories\")) {\n      englishTest.retainADVSubcategories = true;\n      i += 1;\n    } else if (args[i].equalsIgnoreCase(\"-leaveItAll\") && (i + 1 < args.length)) {\n      englishTrain.leaveItAll = Integer.parseInt(args[i + 1]);\n      i += 2;\n    } else if (args[i].equalsIgnoreCase(\"-headFinder\") && (i + 1 < args.length)) {\n      try {\n        headFinder = (HeadFinder) Class.forName(args[i + 1]).newInstance();\n      } catch (Exception e) {\n        System.err.println(e);\n        System.err.println(\"Warning: Default HeadFinder will be used.\");\n      }\n      i += 2;\n    } else if (args[i].equalsIgnoreCase(\"-makeCopulaHead\")) {\n      englishTest.makeCopulaHead = true;\n      i += 1;\n    } else if(args[i].equalsIgnoreCase(\"-originalDependencies\")) {\n      setGenerateOriginalDependencies(true);\n      i += 1;\n    } else if (args[i].equalsIgnoreCase(\"-acl03pcfg\")) {\n      englishTrain.splitIN = 3;\n      englishTrain.splitPercent = true;\n      englishTrain.splitPoss = 1;\n      englishTrain.splitCC = 2;\n      englishTrain.unaryDT = true;\n      englishTrain.unaryRB = true;\n      englishTrain.splitAux = 1;\n      englishTrain.splitVP = 2;\n      englishTrain.splitSGapped = 3;\n      englishTrain.dominatesV = 1;\n      englishTrain.splitTMP = NPTmpRetainingTreeNormalizer.TEMPORAL_ACL03PCFG;\n      englishTrain.splitBaseNP = 1;\n      i += 1;\n    } else if (args[i].equalsIgnoreCase(\"-jenny\")) {\n      englishTrain.splitIN = 3;\n      englishTrain.splitPercent = true;\n      englishTrain.splitPoss = 1;\n      englishTrain.splitCC = 2;\n      englishTrain.unaryDT = true;\n      englishTrain.unaryRB = true;\n      englishTrain.splitAux = 1;\n      englishTrain.splitVP = 2;\n      englishTrain.splitSGapped = 3;\n      englishTrain.dominatesV = 1;\n      englishTrain.splitTMP = NPTmpRetainingTreeNormalizer.TEMPORAL_ACL03PCFG;\n      englishTrain.splitBaseNP = 1;\n      i += 1;\n    } else if (args[i].equalsIgnoreCase(\"-linguisticPCFG\")) {\n      englishTrain.splitIN = 3;\n      englishTrain.splitPercent = true;\n      englishTrain.splitPoss = 1;\n      englishTrain.splitCC = 2;\n      englishTrain.unaryDT = true;\n      englishTrain.unaryRB = true;\n      englishTrain.splitAux = 2;\n      englishTrain.splitVP = 3;\n      englishTrain.splitSGapped = 4;\n      englishTrain.dominatesV = 0;  // not for linguistic\n      englishTrain.splitTMP = NPTmpRetainingTreeNormalizer.TEMPORAL_ACL03PCFG;\n      englishTrain.splitBaseNP = 1;\n      englishTrain.splitMoreLess = true;\n      englishTrain.correctTags = true;  // different from acl03pcfg\n      i += 1;\n    } else if (args[i].equalsIgnoreCase(\"-goodPCFG\")) {\n      englishTrain.splitIN = 4;  // different from acl03pcfg\n      englishTrain.splitPercent = true;\n      englishTrain.splitNPpercent = 0;  // no longer different from acl03pcfg\n      englishTrain.splitPoss = 1;\n      englishTrain.splitCC = 1;\n      englishTrain.unaryDT = true;\n      englishTrain.unaryRB = true;\n      englishTrain.splitAux = 2;   // different from acl03pcfg\n      englishTrain.splitVP = 3;   // different from acl03pcfg\n      englishTrain.splitSGapped = 4;\n      englishTrain.dominatesV = 1;\n      englishTrain.splitTMP = NPTmpRetainingTreeNormalizer.TEMPORAL_ACL03PCFG;\n      englishTrain.splitNPADV = 1; // different from acl03pcfg\n      englishTrain.splitBaseNP = 1;\n      // englishTrain.splitMoreLess = true;   // different from acl03pcfg\n      englishTrain.correctTags = true;  // different from acl03pcfg\n      englishTrain.markDitransV = 2; // different from acl03pcfg\n      i += 1;\n    } else if (args[i].equalsIgnoreCase(\"-ijcai03\")) {\n      englishTrain.splitIN = 3;\n      englishTrain.splitPercent = true;\n      englishTrain.splitPoss = 1;\n      englishTrain.splitCC = 2;\n      englishTrain.unaryDT = false;\n      englishTrain.unaryRB = false;\n      englishTrain.splitAux = 0;\n      englishTrain.splitVP = 2;\n      englishTrain.splitSGapped = 4;\n      englishTrain.dominatesV = 0;\n      englishTrain.splitTMP = NPTmpRetainingTreeNormalizer.TEMPORAL_ACL03PCFG;\n      englishTrain.splitBaseNP = 1;\n      i += 1;\n    } else if (args[i].equalsIgnoreCase(\"-goodFactored\")) {\n      englishTrain.splitIN = 3;\n      englishTrain.splitPercent = true;\n      englishTrain.splitPoss = 1;\n      englishTrain.splitCC = 2;\n      englishTrain.unaryDT = false;\n      englishTrain.unaryRB = false;\n      englishTrain.splitAux = 0;\n      englishTrain.splitVP = 3;  // different from ijcai03\n      englishTrain.splitSGapped = 4;\n      englishTrain.dominatesV = 0;\n      englishTrain.splitTMP = NPTmpRetainingTreeNormalizer.TEMPORAL_ACL03PCFG;\n      englishTrain.splitBaseNP = 1;\n      // BAD!! englishTrain.markCC = 1;  // different from ijcai03\n      englishTrain.correctTags = true;  // different from ijcai03\n      i += 1;\n    }\n    return i;\n  }","commit_id":"b8e74d39cf2a65579587222348c8cc49abc6888b","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"@Test\n  public void testSaveSize() throws IOException {\n    // Annotate\n    ByteArrayOutputStream os = new ByteArrayOutputStream();\n    ByteArrayOutputStream compressedImpl = new ByteArrayOutputStream();\n    GZIPOutputStream compressed = new GZIPOutputStream(compressedImpl);\n    new ProtobufAnnotationSerializer().write(mkLargeAnnotation(), os).close();\n    new ProtobufAnnotationSerializer().write(mkLargeAnnotation(), compressed).close();\n    byte[] uncompressedProto = os.toByteArray();\n    byte[] compressedProto = compressedImpl.toByteArray();\n    assertNotNull(uncompressedProto);\n    assertNotNull(compressedProto);\n\n    // Check size\n    assertTrue(\"\" + compressedProto.length, compressedProto.length < 310000);\n    assertTrue(\"\" + uncompressedProto.length, uncompressedProto.length < 1300000);\n  }","id":55372,"modified_method":"@Test\n  public void testSaveSize() throws IOException {\n    // Annotate\n    ByteArrayOutputStream os = new ByteArrayOutputStream();\n    ByteArrayOutputStream compressedImpl = new ByteArrayOutputStream();\n    GZIPOutputStream compressed = new GZIPOutputStream(compressedImpl);\n    new ProtobufAnnotationSerializer().write(mkLargeAnnotation(), os).close();\n    new ProtobufAnnotationSerializer().write(mkLargeAnnotation(), compressed).close();\n    byte[] uncompressedProto = os.toByteArray();\n    byte[] compressedProto = compressedImpl.toByteArray();\n    assertNotNull(uncompressedProto);\n    assertNotNull(compressedProto);\n\n    // Check size\n    assertTrue(\"\" + compressedProto.length, compressedProto.length < 290000);\n    assertTrue(\"\" + uncompressedProto.length, uncompressedProto.length < 1100000);\n  }","commit_id":"b8e74d39cf2a65579587222348c8cc49abc6888b","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"/**\n   * Make a TreePrint instance.\n   *\n   * @param formatString A comma separated list of ways to print each Tree.\n   *                For instance, \"penn\" or \"words,typedDependencies\".\n   *                Known formats are: oneline, penn, latexTree, xmlTree, words,\n   *                wordsAndTags, rootSymbolOnly, dependencies,\n   *                typedDependencies, typedDependenciesCollapsed,\n   *                collocations, semanticGraph, conllStyleDependencies,\n   *                conll2007.  The last two are both tab-separated values\n   *                formats.  The latter has a lot more columns filled with\n   *                underscores. All of them print a blank line after\n   *                the output except for oneline.  oneline is also not\n   *                meaningful in XML output (it is ignored: use penn instead).\n   *                (Use of typedDependenciesCollapsed is deprecated.  It\n   *                works but we recommend instead selecting a type of\n   *                dependencies using the optionsString argument.  Note in\n   *                particular that typedDependenciesCollapsed does not do\n   *                CC propagation, which we generally recommend.)\n   * @param optionsString Options that additionally specify how trees are to\n   *                be printed (for instance, whether stemming should be done).\n   *                Known options are: <code>stem, lexicalize, markHeadNodes,\n   *                xml, removeTopBracket, transChinese,\n   *                includePunctuationDependencies, basicDependencies, treeDependencies,\n   *                CCPropagatedDependencies, collapsedDependencies, nonCollapsedDependencies,\n   *                nonCollapsedDependenciesSeparated, includeTags\n   *                <\/code>.\n   * @param tlp     The TreebankLanguagePack used to do things like delete\n   *                or ignore punctuation in output\n   * @param hf      The HeadFinder used in printing output\n   */\n  public TreePrint(String formatString, String optionsString, TreebankLanguagePack tlp, HeadFinder hf, HeadFinder typedDependencyHF) {\n    formats = StringUtils.stringToProperties(formatString);\n    options = StringUtils.stringToProperties(optionsString);\n    List<String> okOutputs = Arrays.asList(outputTreeFormats);\n    for (Object formObj : formats.keySet()) {\n      String format = (String) formObj;\n      if ( ! okOutputs.contains(format)) {\n        throw new RuntimeException(\"Error: output tree format \" + format + \" not supported. Known formats are: \" + okOutputs);\n      }\n    }\n\n    this.hf = hf;\n    this.tlp = tlp;\n    boolean includePunctuationDependencies;\n    includePunctuationDependencies = propertyToBoolean(this.options,\n                                                       \"includePunctuationDependencies\");\n    Predicate<String> puncWordFilter;\n    if (includePunctuationDependencies) {\n      dependencyFilter = Filters.acceptFilter();\n      dependencyWordFilter = Filters.acceptFilter();\n      puncWordFilter = Filters.acceptFilter();\n    } else {\n      dependencyFilter = new Dependencies.DependentPuncTagRejectFilter<Label, Label, Object>(tlp.punctuationTagRejectFilter());\n      dependencyWordFilter = new Dependencies.DependentPuncWordRejectFilter<Label, Label, Object>(tlp.punctuationWordRejectFilter());\n      puncWordFilter = tlp.punctuationWordRejectFilter();\n    }\n    if (propertyToBoolean(this.options, \"stem\")) {\n      stemmer = new WordStemmer();\n    } else {\n      stemmer = null;\n    }\n    if (formats.containsKey(\"typedDependenciesCollapsed\") ||\n        formats.containsKey(\"typedDependencies\") ||\n        (formats.containsKey(\"conll2007\") && tlp.supportsGrammaticalStructures())) {\n      gsf = tlp.grammaticalStructureFactory(puncWordFilter, typedDependencyHF);\n    } else {\n      gsf = null;\n    }\n\n    lexicalize = propertyToBoolean(this.options, \"lexicalize\");\n    markHeadNodes = propertyToBoolean(this.options, \"markHeadNodes\");\n    transChinese = propertyToBoolean(this.options, \"transChinese\");\n    ptb2text = propertyToBoolean(this.options, \"ptb2text\");\n    removeEmpty = propertyToBoolean(this.options, \"noempty\") || ptb2text;\n\n    basicDependencies =  propertyToBoolean(this.options, \"basicDependencies\");\n    collapsedDependencies = propertyToBoolean(this.options, \"collapsedDependencies\");\n    nonCollapsedDependencies = propertyToBoolean(this.options, \"nonCollapsedDependencies\");\n    nonCollapsedDependenciesSeparated = propertyToBoolean(this.options, \"nonCollapsedDependenciesSeparated\");\n    treeDependencies = propertyToBoolean(this.options, \"treeDependencies\");\n\n    includeTags = propertyToBoolean(this.options, \"includeTags\");\n\n    // if no option format for the dependencies is specified, CCPropagated is the default\n    if ( ! basicDependencies && ! collapsedDependencies && ! nonCollapsedDependencies && ! nonCollapsedDependenciesSeparated && ! treeDependencies) {\n      CCPropagatedDependencies = true;\n    } else {\n      CCPropagatedDependencies = propertyToBoolean(this.options, \"CCPropagatedDependencies\");\n    }\n  }","id":55373,"modified_method":"/**\n   * Make a TreePrint instance.\n   *\n   * @param formatString A comma separated list of ways to print each Tree.\n   *                For instance, \"penn\" or \"words,typedDependencies\".\n   *                Known formats are: oneline, penn, latexTree, xmlTree, words,\n   *                wordsAndTags, rootSymbolOnly, dependencies,\n   *                typedDependencies, typedDependenciesCollapsed,\n   *                collocations, semanticGraph, conllStyleDependencies,\n   *                conll2007.  The last two are both tab-separated values\n   *                formats.  The latter has a lot more columns filled with\n   *                underscores. All of them print a blank line after\n   *                the output except for oneline.  oneline is also not\n   *                meaningful in XML output (it is ignored: use penn instead).\n   *                (Use of typedDependenciesCollapsed is deprecated.  It\n   *                works but we recommend instead selecting a type of\n   *                dependencies using the optionsString argument.  Note in\n   *                particular that typedDependenciesCollapsed does not do\n   *                CC propagation, which we generally recommend.)\n   * @param optionsString Options that additionally specify how trees are to\n   *                be printed (for instance, whether stemming should be done).\n   *                Known options are: <code>stem, lexicalize, markHeadNodes,\n   *                xml, removeTopBracket, transChinese,\n   *                includePunctuationDependencies, basicDependencies, treeDependencies,\n   *                CCPropagatedDependencies, collapsedDependencies, nonCollapsedDependencies,\n   *                nonCollapsedDependenciesSeparated, includeTags\n   *                <\/code>.\n   * @param tlp     The TreebankLanguagePack used to do things like delete\n   *                or ignore punctuation in output\n   * @param hf      The HeadFinder used in printing output\n   */\n  public TreePrint(String formatString, String optionsString, TreebankLanguagePack tlp, HeadFinder hf, HeadFinder typedDependencyHF) {\n    formats = StringUtils.stringToProperties(formatString);\n    options = StringUtils.stringToProperties(optionsString);\n    List<String> okOutputs = Arrays.asList(outputTreeFormats);\n    for (Object formObj : formats.keySet()) {\n      String format = (String) formObj;\n      if ( ! okOutputs.contains(format)) {\n        throw new RuntimeException(\"Error: output tree format \" + format + \" not supported. Known formats are: \" + okOutputs);\n      }\n    }\n\n    this.hf = hf;\n    this.tlp = tlp;\n    boolean includePunctuationDependencies;\n    includePunctuationDependencies = propertyToBoolean(this.options,\n                                                       \"includePunctuationDependencies\");\n\n    boolean generateOriginalDependencies = tlp.generateOriginalDependencies();\n\n    Predicate<String> puncFilter;\n    if (includePunctuationDependencies) {\n      dependencyFilter = Filters.acceptFilter();\n      dependencyWordFilter = Filters.acceptFilter();\n      puncFilter = Filters.acceptFilter();\n    } else {\n      dependencyFilter = new Dependencies.DependentPuncTagRejectFilter<Label, Label, Object>(tlp.punctuationTagRejectFilter());\n      dependencyWordFilter = new Dependencies.DependentPuncWordRejectFilter<Label, Label, Object>(tlp.punctuationWordRejectFilter());\n      //Universal dependencies filter punction by tags\n      puncFilter = generateOriginalDependencies ? tlp.punctuationWordRejectFilter() : tlp.punctuationTagRejectFilter();\n    }\n    if (propertyToBoolean(this.options, \"stem\")) {\n      stemmer = new WordStemmer();\n    } else {\n      stemmer = null;\n    }\n    if (formats.containsKey(\"typedDependenciesCollapsed\") ||\n        formats.containsKey(\"typedDependencies\") ||\n        (formats.containsKey(\"conll2007\") && tlp.supportsGrammaticalStructures())) {\n      gsf = tlp.grammaticalStructureFactory(puncFilter, typedDependencyHF);\n    } else {\n      gsf = null;\n    }\n\n    lexicalize = propertyToBoolean(this.options, \"lexicalize\");\n    markHeadNodes = propertyToBoolean(this.options, \"markHeadNodes\");\n    transChinese = propertyToBoolean(this.options, \"transChinese\");\n    ptb2text = propertyToBoolean(this.options, \"ptb2text\");\n    removeEmpty = propertyToBoolean(this.options, \"noempty\") || ptb2text;\n\n    basicDependencies =  propertyToBoolean(this.options, \"basicDependencies\");\n    collapsedDependencies = propertyToBoolean(this.options, \"collapsedDependencies\");\n    nonCollapsedDependencies = propertyToBoolean(this.options, \"nonCollapsedDependencies\");\n    nonCollapsedDependenciesSeparated = propertyToBoolean(this.options, \"nonCollapsedDependenciesSeparated\");\n    treeDependencies = propertyToBoolean(this.options, \"treeDependencies\");\n\n    includeTags = propertyToBoolean(this.options, \"includeTags\");\n\n    // if no option format for the dependencies is specified, CCPropagated is the default\n    if ( ! basicDependencies && ! collapsedDependencies && ! nonCollapsedDependencies && ! nonCollapsedDependenciesSeparated && ! treeDependencies) {\n      CCPropagatedDependencies = true;\n    } else {\n      CCPropagatedDependencies = propertyToBoolean(this.options, \"CCPropagatedDependencies\");\n    }\n  }","commit_id":"b8e74d39cf2a65579587222348c8cc49abc6888b","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"/**\n     * Converts a feature HashMap to a feature string to be used\n     * in a CoNLL-U file.\n     *\n     * @return The feature string.\n     */\n    public static String toFeatureString(HashMap<String,String> features) {\n        StringBuffer sb = new StringBuffer();\n        boolean first = true;\n        List<String> sortedKeys = new ArrayList<String>(features.keySet());\n        Collections.sort(sortedKeys, new FeatureNameComparator());\n        for (String key : sortedKeys) {\n            if ( ! first) {\n                sb.append(\"|\");\n            } else {\n                first = false;\n            }\n\n            sb.append(key)\n                    .append(\"=\")\n                    .append(features.get(key));\n\n        }\n\n    /* Empty feature list. */\n        if (first) {\n            sb.append(\"_\");\n        }\n\n        return sb.toString();\n    }","id":55374,"modified_method":"/**\n     * Converts a feature HashMap to a feature string to be used\n     * in a CoNLL-U file.\n     *\n     * @return The feature string.\n     */\n    public static String toFeatureString(HashMap<String,String> features) {\n        StringBuffer sb = new StringBuffer();\n        boolean first = true;\n        if (features != null) {\n            List<String> sortedKeys = new ArrayList<String>(features.keySet());\n            Collections.sort(sortedKeys, new FeatureNameComparator());\n            for (String key : sortedKeys) {\n                if (!first) {\n                    sb.append(\"|\");\n                } else {\n                    first = false;\n                }\n\n                sb.append(key)\n                        .append(\"=\")\n                        .append(features.get(key));\n\n            }\n        }\n\n    /* Empty feature list. */\n        if (first) {\n            sb.append(\"_\");\n        }\n\n        return sb.toString();\n    }","commit_id":"10a7dbe0a37784053e5dc29f1d6893539e0aed12","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"/**\n     * Converts an extra dependencies hash map to a string to be used\n     * in a CoNLL-U file.\n     *\n     * @param extraDeps\n     * @return The extra dependencies string.\n     */\n    public static String toExtraDepsString(HashMap<Integer,String> extraDeps) {\n        StringBuffer sb = new StringBuffer();\n        boolean first = true;\n        List<Integer> sortedKeys = new ArrayList<>(extraDeps.keySet());\n        Collections.sort(sortedKeys);\n        for (Integer key : sortedKeys) {\n            if ( ! first) {\n                sb.append(\"|\");\n            } else {\n                first = false;\n            }\n\n            sb.append(key)\n                    .append(\":\")\n                    .append(extraDeps.get(key));\n        }\n\n    /* Empty feature list. */\n        if (first) {\n            sb.append(\"_\");\n        }\n        return sb.toString();\n    }","id":55375,"modified_method":"/**\n     * Converts an extra dependencies hash map to a string to be used\n     * in a CoNLL-U file.\n     *\n     * @param extraDeps\n     * @return The extra dependencies string.\n     */\n    public static String toExtraDepsString(HashMap<Integer,String> extraDeps) {\n        StringBuffer sb = new StringBuffer();\n        boolean first = true;\n        if (extraDeps != null) {\n            List<Integer> sortedKeys = new ArrayList<>(extraDeps.keySet());\n            Collections.sort(sortedKeys);\n            for (Integer key : sortedKeys) {\n                if (!first) {\n                    sb.append(\"|\");\n                } else {\n                    first = false;\n                }\n\n                sb.append(key)\n                        .append(\":\")\n                        .append(extraDeps.get(key));\n            }\n        }\n    /* Empty feature list. */\n        if (first) {\n            sb.append(\"_\");\n        }\n        return sb.toString();\n    }","commit_id":"10a7dbe0a37784053e5dc29f1d6893539e0aed12","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"public ParserAnnotator(String annotatorName, Properties props) {\n    String model = props.getProperty(annotatorName + \".model\", LexicalizedParser.DEFAULT_PARSER_LOC);\n    if (model == null) {\n      throw new IllegalArgumentException(\"No model specified for Parser annotator \" + annotatorName);\n    }\n    this.VERBOSE = PropertiesUtils.getBool(props, annotatorName + \".debug\", false);\n\n    String[] flags = convertFlagsToArray(props.getProperty(annotatorName + \".flags\"));\n    this.parser = loadModel(model, VERBOSE, flags);\n    this.maxSentenceLength = PropertiesUtils.getInt(props, annotatorName + \".maxlen\", -1);\n\n    String treeMapClass = props.getProperty(annotatorName + \".treemap\");\n    if (treeMapClass == null) {\n      this.treeMap = null;\n    } else {\n      this.treeMap = ReflectionLoading.loadByReflection(treeMapClass, props);\n    }\n\n    this.maxParseTime = PropertiesUtils.getLong(props, annotatorName + \".maxtime\", -1);\n\n    this.kBest = PropertiesUtils.getInt(props, annotatorName + \".kbest\", 1);\n\n    String buildGraphsProperty = annotatorName + \".buildgraphs\";\n    if (!this.parser.getTLPParams().supportsBasicDependencies()) {\n      if (props.getProperty(buildGraphsProperty) != null && PropertiesUtils.getBool(props, buildGraphsProperty)) {\n        System.err.println(\"WARNING: \" + buildGraphsProperty + \" set to true, but \" + this.parser.getTLPParams().getClass() + \" does not support dependencies\");\n      }\n      this.BUILD_GRAPHS = false;\n    } else {\n      this.BUILD_GRAPHS = PropertiesUtils.getBool(props, buildGraphsProperty, true);\n    }\n\n    if (this.BUILD_GRAPHS) {\n      boolean generateOriginalDependencies = PropertiesUtils.getBool(props, annotatorName + \".originalDependencies\", false);\n      parser.getTLPParams().setGenerateOriginalDependencies(generateOriginalDependencies);\n      TreebankLanguagePack tlp = parser.getTLPParams().treebankLanguagePack();\n      // TODO: expose keeping punctuation as an option to the user?\n      this.gsf = tlp.grammaticalStructureFactory(tlp.punctuationWordRejectFilter(), parser.getTLPParams().typedDependencyHeadFinder());\n      if (this.gsf instanceof UniversalEnglishGrammaticalStructureFactory) {\n        try {\n          this.featureAnnotator = new UniversalDependenciesFeatureAnnotator();\n        } catch (IOException e) {\n          //do nothing\n        }\n      }\n    } else {\n      this.gsf = null;\n    }\n\n    this.nThreads = PropertiesUtils.getInt(props, annotatorName + \".nthreads\", PropertiesUtils.getInt(props, \"nthreads\", 1));\n    boolean usesBinary = StanfordCoreNLP.usesBinaryTrees(props);\n    this.saveBinaryTrees = PropertiesUtils.getBool(props, annotatorName + \".binaryTrees\", usesBinary);\n    this.noSquash = PropertiesUtils.getBool(props, annotatorName + \".nosquash\", false);\n    this.extraDependencies = MetaClass.cast(props.getProperty(annotatorName + \".extradependencies\", \"NONE\"), GrammaticalStructure.Extras.class);\n  }","id":55376,"modified_method":"public ParserAnnotator(String annotatorName, Properties props) {\n    String model = props.getProperty(annotatorName + \".model\", LexicalizedParser.DEFAULT_PARSER_LOC);\n    if (model == null) {\n      throw new IllegalArgumentException(\"No model specified for Parser annotator \" + annotatorName);\n    }\n    this.VERBOSE = PropertiesUtils.getBool(props, annotatorName + \".debug\", false);\n\n    String[] flags = convertFlagsToArray(props.getProperty(annotatorName + \".flags\"));\n    this.parser = loadModel(model, VERBOSE, flags);\n    this.maxSentenceLength = PropertiesUtils.getInt(props, annotatorName + \".maxlen\", -1);\n\n    String treeMapClass = props.getProperty(annotatorName + \".treemap\");\n    if (treeMapClass == null) {\n      this.treeMap = null;\n    } else {\n      this.treeMap = ReflectionLoading.loadByReflection(treeMapClass, props);\n    }\n\n    this.maxParseTime = PropertiesUtils.getLong(props, annotatorName + \".maxtime\", -1);\n\n    this.kBest = PropertiesUtils.getInt(props, annotatorName + \".kbest\", 1);\n\n    this.keepPunct = PropertiesUtils.getBool(props, annotatorName + \".keepPunct\", false);\n\n\n    String buildGraphsProperty = annotatorName + \".buildgraphs\";\n    if (!this.parser.getTLPParams().supportsBasicDependencies()) {\n      if (props.getProperty(buildGraphsProperty) != null && PropertiesUtils.getBool(props, buildGraphsProperty)) {\n        System.err.println(\"WARNING: \" + buildGraphsProperty + \" set to true, but \" + this.parser.getTLPParams().getClass() + \" does not support dependencies\");\n      }\n      this.BUILD_GRAPHS = false;\n    } else {\n      this.BUILD_GRAPHS = PropertiesUtils.getBool(props, buildGraphsProperty, true);\n    }\n\n    if (this.BUILD_GRAPHS) {\n      boolean generateOriginalDependencies = PropertiesUtils.getBool(props, annotatorName + \".originalDependencies\", false);\n      parser.getTLPParams().setGenerateOriginalDependencies(generateOriginalDependencies);\n      TreebankLanguagePack tlp = parser.getTLPParams().treebankLanguagePack();\n      Predicate<String> punctFilter = this.keepPunct ? Filters.acceptFilter() : tlp.punctuationWordRejectFilter();\n      this.gsf = tlp.grammaticalStructureFactory(punctFilter, parser.getTLPParams().typedDependencyHeadFinder());\n      if (this.gsf instanceof UniversalEnglishGrammaticalStructureFactory) {\n        try {\n          this.featureAnnotator = new UniversalDependenciesFeatureAnnotator();\n        } catch (IOException e) {\n          //do nothing\n        }\n      }\n    } else {\n      this.gsf = null;\n    }\n\n    this.nThreads = PropertiesUtils.getInt(props, annotatorName + \".nthreads\", PropertiesUtils.getInt(props, \"nthreads\", 1));\n    boolean usesBinary = StanfordCoreNLP.usesBinaryTrees(props);\n    this.saveBinaryTrees = PropertiesUtils.getBool(props, annotatorName + \".binaryTrees\", usesBinary);\n    this.noSquash = PropertiesUtils.getBool(props, annotatorName + \".nosquash\", false);\n    this.extraDependencies = MetaClass.cast(props.getProperty(annotatorName + \".extradependencies\", \"NONE\"), GrammaticalStructure.Extras.class);\n  }","commit_id":"10a7dbe0a37784053e5dc29f1d6893539e0aed12","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"public ParserAnnotator(ParserGrammar parser, boolean verbose, int maxSent, Function<Tree, Tree> treeMap) {\n    VERBOSE = verbose;\n    this.BUILD_GRAPHS = parser.getTLPParams().supportsBasicDependencies();\n    this.parser = parser;\n    this.maxSentenceLength = maxSent;\n    this.treeMap = treeMap;\n    this.maxParseTime = 0;\n    this.kBest = 1;\n    if (this.BUILD_GRAPHS) {\n      TreebankLanguagePack tlp = parser.getTLPParams().treebankLanguagePack();\n      this.gsf = tlp.grammaticalStructureFactory(tlp.punctuationWordRejectFilter(), parser.getTLPParams().typedDependencyHeadFinder());\n      if (this.gsf instanceof UniversalEnglishGrammaticalStructureFactory) {\n        try {\n          this.featureAnnotator = new UniversalDependenciesFeatureAnnotator();\n        } catch (IOException e) {\n          //do nothing\n        }\n      }\n    } else {\n      this.gsf = null;\n    }\n    \n    this.nThreads = 1;\n    this.saveBinaryTrees = false;\n    this.noSquash = false;\n    this.extraDependencies = GrammaticalStructure.Extras.NONE;\n  }","id":55377,"modified_method":"public ParserAnnotator(ParserGrammar parser, boolean verbose, int maxSent, Function<Tree, Tree> treeMap) {\n    VERBOSE = verbose;\n    this.BUILD_GRAPHS = parser.getTLPParams().supportsBasicDependencies();\n    this.parser = parser;\n    this.maxSentenceLength = maxSent;\n    this.treeMap = treeMap;\n    this.maxParseTime = 0;\n    this.kBest = 1;\n    this.keepPunct = false;\n    if (this.BUILD_GRAPHS) {\n      TreebankLanguagePack tlp = parser.getTLPParams().treebankLanguagePack();\n      this.gsf = tlp.grammaticalStructureFactory(tlp.punctuationWordRejectFilter(), parser.getTLPParams().typedDependencyHeadFinder());\n      if (this.gsf instanceof UniversalEnglishGrammaticalStructureFactory) {\n        try {\n          this.featureAnnotator = new UniversalDependenciesFeatureAnnotator();\n        } catch (IOException e) {\n          //do nothing\n        }\n      }\n    } else {\n      this.gsf = null;\n    }\n    \n    this.nThreads = 1;\n    this.saveBinaryTrees = false;\n    this.noSquash = false;\n    this.extraDependencies = GrammaticalStructure.Extras.NONE;\n  }","commit_id":"10a7dbe0a37784053e5dc29f1d6893539e0aed12","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"/** Put the tree in the CoreMap for the sentence, also add any\n   *  dependency graphs to the sentence, and fill in missing tag annotations.\n   *\n   *  Thread safety note: nothing special is done to ensure the thread\n   *  safety of the GrammaticalStructureFactory.  However, both the\n   *  EnglishGrammaticalStructureFactory and the\n   *  ChineseGrammaticalStructureFactory are thread safe.\n   */\n  public static void fillInParseAnnotations(boolean verbose, boolean buildGraphs,\n                                            GrammaticalStructureFactory gsf, CoreMap sentence,\n                                            List<Tree> trees, GrammaticalStructure.Extras extras,\n                                            UniversalDependenciesFeatureAnnotator featureAnnotator) {\n\n    boolean first = true;\n    for (Tree tree : trees) {\n\n      // make sure all tree nodes are CoreLabels\n      // TODO: why isn't this always true? something fishy is going on\n      Trees.convertToCoreLabels(tree);\n\n      // index nodes, i.e., add start and end token positions to all nodes\n      // this is needed by other annotators down stream, e.g., the NFLAnnotator\n      tree.indexSpans(0);\n\n      if (first) {\n        sentence.set(TreeCoreAnnotations.TreeAnnotation.class, tree);\n        if (verbose) {\n          System.err.println(\"Tree is:\");\n          tree.pennPrint(System.err);\n        }\n\n        setMissingTags(sentence, tree);\n\n        if (buildGraphs) {\n          // generate the dependency graph\n          // unfortunately, it is necessary to make the\n          // GrammaticalStructure three times, as the dependency\n          // conversion changes the given data structure\n          SemanticGraph deps = SemanticGraphFactory.generateCollapsedDependencies(gsf.newGrammaticalStructure(tree), extras);\n          SemanticGraph uncollapsedDeps = SemanticGraphFactory.generateUncollapsedDependencies(gsf.newGrammaticalStructure(tree), extras);\n          SemanticGraph ccDeps = SemanticGraphFactory.generateCCProcessedDependencies(gsf.newGrammaticalStructure(tree), extras);\n\n          // add features to graphs if we are converting to English UD\n          if (featureAnnotator != null) {\n            featureAnnotator.addFeatures(deps, tree, false, true);\n            featureAnnotator.addFeatures(uncollapsedDeps, tree, false, true);\n            featureAnnotator.addFeatures(ccDeps, tree, false, true);\n          }\n\n          if (verbose) {\n            System.err.println(\"SDs:\");\n            System.err.println(deps.toString(SemanticGraph.OutputFormat.LIST));\n          }\n          sentence.set(SemanticGraphCoreAnnotations.CollapsedDependenciesAnnotation.class, deps);\n          sentence.set(SemanticGraphCoreAnnotations.BasicDependenciesAnnotation.class, uncollapsedDeps);\n          sentence.set(SemanticGraphCoreAnnotations.CollapsedCCProcessedDependenciesAnnotation.class, ccDeps);\n        }\n\n\n        first = false;\n      }\n    }\n    if (trees.size() > 1) {\n      sentence.set(TreeCoreAnnotations.KBestTreesAnnotation.class, trees);\n    }\n  }","id":55378,"modified_method":"/** Put the tree in the CoreMap for the sentence, also add any\n   *  dependency graphs to the sentence, and fill in missing tag annotations.\n   *\n   *  Thread safety note: nothing special is done to ensure the thread\n   *  safety of the GrammaticalStructureFactory.  However, both the\n   *  EnglishGrammaticalStructureFactory and the\n   *  ChineseGrammaticalStructureFactory are thread safe.\n   */\n  public static void fillInParseAnnotations(boolean verbose, boolean buildGraphs,\n                                            GrammaticalStructureFactory gsf, CoreMap sentence,\n                                            List<Tree> trees, GrammaticalStructure.Extras extras,\n                                            UniversalDependenciesFeatureAnnotator featureAnnotator) {\n\n    boolean first = true;\n    for (Tree tree : trees) {\n\n      // make sure all tree nodes are CoreLabels\n      // TODO: why isn't this always true? something fishy is going on\n      Trees.convertToCoreLabels(tree);\n\n      // index nodes, i.e., add start and end token positions to all nodes\n      // this is needed by other annotators down stream, e.g., the NFLAnnotator\n      tree.indexSpans(0);\n\n      if (first) {\n        sentence.set(TreeCoreAnnotations.TreeAnnotation.class, tree);\n        if (verbose) {\n          System.err.println(\"Tree is:\");\n          tree.pennPrint(System.err);\n        }\n\n        setMissingTags(sentence, tree);\n\n        if (buildGraphs) {\n          // generate the dependency graph\n          // unfortunately, it is necessary to make the\n          // GrammaticalStructure three times, as the dependency\n          // conversion changes the given data structure\n          SemanticGraph deps = SemanticGraphFactory.generateCollapsedDependencies(gsf.newGrammaticalStructure(tree), extras);\n          SemanticGraph uncollapsedDeps = SemanticGraphFactory.generateUncollapsedDependencies(gsf.newGrammaticalStructure(tree), extras);\n          SemanticGraph ccDeps = SemanticGraphFactory.generateCCProcessedDependencies(gsf.newGrammaticalStructure(tree), extras);\n\n          // add features to graphs if we are converting to English UD\n          if (featureAnnotator != null) {\n            featureAnnotator.addFeatures(deps, tree, false, true);\n          }\n\n          if (verbose) {\n            System.err.println(\"SDs:\");\n            System.err.println(deps.toString(SemanticGraph.OutputFormat.LIST));\n          }\n          sentence.set(SemanticGraphCoreAnnotations.CollapsedDependenciesAnnotation.class, deps);\n          sentence.set(SemanticGraphCoreAnnotations.BasicDependenciesAnnotation.class, uncollapsedDeps);\n          sentence.set(SemanticGraphCoreAnnotations.CollapsedCCProcessedDependenciesAnnotation.class, ccDeps);\n        }\n\n\n        first = false;\n      }\n    }\n    if (trees.size() > 1) {\n      sentence.set(TreeCoreAnnotations.KBestTreesAnnotation.class, trees);\n    }\n  }","commit_id":"10a7dbe0a37784053e5dc29f1d6893539e0aed12","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"public void addFeatures(SemanticGraph sg, Tree t, boolean addLemma, boolean addUPOS) {\n\n\n    Set<Integer> imperatives = t != null ? getImperatives(t) : new HashSet<>();\n\n    for (IndexedWord word : sg.vertexListSorted()) {\n      String posTag = word.get(CoreAnnotations.PartOfSpeechAnnotation.class);\n      String token = word.get(CoreAnnotations.TextAnnotation.class);\n      Integer index = word.get(CoreAnnotations.IndexAnnotation.class);\n      HashMap<String, String> wordFeatures = word.get(CoreAnnotations.CoNLLUFeats.class);\n\n      if (wordFeatures == null) {\n        wordFeatures = new HashMap<>();\n        word.set(CoreAnnotations.CoNLLUFeats.class, wordFeatures);\n      }\n\n        /* Features that only depend on the word and the PTB POS tag. */\n      wordFeatures.putAll(getPOSFeatures(token, posTag));\n\n        /* Semantic graph features. */\n      wordFeatures.putAll(getGraphFeatures(sg, word));\n\n        /* Handle VBs. */\n      if (imperatives.contains(index)) {\n          /* Imperative */\n        wordFeatures.put(\"VerbForm\", \"Fin\");\n        wordFeatures.put(\"Mood\", \"Imp\");\n      } else if (posTag.equals(\"VB\")) {\n             /* Infinitive */\n        wordFeatures.put(\"VerbForm\", \"Inf\");\n\n          /* Subjunctive detection too unreliable. */\n        //} else {\n        //  /* Present subjunctive */\n        //  wordFeatures.put(\"VerbForm\", \"Fin\");\n        //  wordFeatures.put(\"Tense\", \"Pres\");\n        //  wordFeatures.put(\"Mood\", \"Subj\");\n        //}\n      }\n\n\n\n      String lemma = word.get(CoreAnnotations.LemmaAnnotation.class);\n      if (addLemma && (lemma == null || lemma.equals(\"_\"))) {\n        word.set(CoreAnnotations.LemmaAnnotation.class, morphology.lemma(token, posTag));\n      }\n    }\n\n    if (addUPOS && t != null) {\n      t = UniversalPOSMapper.mapTree(t);\n      Iterator<Label> uPOSTagIt = t.preTerminalYield().iterator();\n      for (IndexedWord word : sg.vertexListSorted()) {\n        Label uPOSTag = uPOSTagIt.next();\n        word.set(CoreAnnotations.CoarseTagAnnotation.class, uPOSTag.value());\n      }\n    }\n  }","id":55379,"modified_method":"public void addFeatures(SemanticGraph sg, Tree t, boolean addLemma, boolean addUPOS) {\n\n\n    Set<Integer> imperatives = t != null ? getImperatives(t) : new HashSet<>();\n\n    for (IndexedWord word : sg.vertexListSorted()) {\n      String posTag = word.get(CoreAnnotations.PartOfSpeechAnnotation.class);\n      String token = word.get(CoreAnnotations.TextAnnotation.class);\n      Integer index = word.get(CoreAnnotations.IndexAnnotation.class);\n      HashMap<String, String> wordFeatures = word.get(CoreAnnotations.CoNLLUFeats.class);\n\n      if (wordFeatures == null) {\n        wordFeatures = new HashMap<>();\n        word.set(CoreAnnotations.CoNLLUFeats.class, wordFeatures);\n      }\n\n        /* Features that only depend on the word and the PTB POS tag. */\n      wordFeatures.putAll(getPOSFeatures(token, posTag));\n\n        /* Semantic graph features. */\n      wordFeatures.putAll(getGraphFeatures(sg, word));\n\n        /* Handle VBs. */\n      if (imperatives.contains(index)) {\n          /* Imperative */\n        wordFeatures.put(\"VerbForm\", \"Fin\");\n        wordFeatures.put(\"Mood\", \"Imp\");\n      } else if (posTag.equals(\"VB\")) {\n             /* Infinitive */\n        wordFeatures.put(\"VerbForm\", \"Inf\");\n\n          /* Subjunctive detection too unreliable. */\n        //} else {\n        //  /* Present subjunctive */\n        //  wordFeatures.put(\"VerbForm\", \"Fin\");\n        //  wordFeatures.put(\"Tense\", \"Pres\");\n        //  wordFeatures.put(\"Mood\", \"Subj\");\n        //}\n      }\n\n\n\n      String lemma = word.get(CoreAnnotations.LemmaAnnotation.class);\n      if (addLemma && (lemma == null || lemma.equals(\"_\"))) {\n        word.set(CoreAnnotations.LemmaAnnotation.class, morphology.lemma(token, posTag));\n      }\n    }\n\n    if (addUPOS && t != null) {\n      t = UniversalPOSMapper.mapTree(t);\n      List<Label> uPOSTags = t.preTerminalYield();\n      List<IndexedWord> yield = sg.vertexListSorted();\n      int len = yield.size();\n      for (int i = 0; i < len; i++) {\n        IndexedWord word = yield.get(i);\n        Label uPOSTag = uPOSTags.get(word.index() - 1);\n        word.set(CoreAnnotations.CoarseTagAnnotation.class, uPOSTag.value());\n      }\n    }\n  }","commit_id":"10a7dbe0a37784053e5dc29f1d6893539e0aed12","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"protected File createArtifactJarFile(Class<?> cls, String name,\n                                       String version, Manifest manifest) throws IOException {\n\n    File tmpJarFolder = TMP_FOLDER.newFolder();\n    LocationFactory locationFactory = new LocalLocationFactory(tmpJarFolder);\n    Location deploymentJar = AppJarHelper.createDeploymentJar(locationFactory, cls, manifest);\n\n    File appJarFile = new File(tmpJarFolder, String.format(\"%s-%s.jar\", name, version));\n    try {\n      Files.createLink(appJarFile.toPath(), Paths.get(deploymentJar.toURI()));\n    } catch (Exception e) {\n      Files.copy(appJarFile.toPath(), Paths.get(deploymentJar.toURI()));\n    }\n    return appJarFile;\n  }","id":55380,"modified_method":"protected File createArtifactJarFile(Class<?> cls, String name,\n                                       String version, Manifest manifest) throws IOException {\n    Location deploymentJar = ARTIFACT_CACHE.getUnchecked(new ArtifactJarInfo(cls, manifest));\n\n    File appJarFile = new File(TMP_FOLDER.newFolder(), String.format(\"%s-%s.jar\", name, version));\n    try {\n      Files.createLink(appJarFile.toPath(), Paths.get(deploymentJar.toURI()));\n    } catch (Exception e) {\n      Files.copy(appJarFile.toPath(), Paths.get(deploymentJar.toURI()));\n    }\n    return appJarFile;\n  }","commit_id":"492e8f32e62c675874864aa87570e860988f80db","url":"https://github.com/caskdata/cdap"},{"original_method":"@Test\n  public void testArtifacts() throws Exception {\n    // add 2 versions of an artifact with an application\n    Id.Artifact myapp1Id = Id.Artifact.from(Id.Namespace.DEFAULT, \"myapp\", \"1.0.0\");\n    Id.Artifact myapp2Id = Id.Artifact.from(Id.Namespace.DEFAULT, \"myapp\", \"2.0.0\");\n    LocalLocationFactory locationFactory = new LocalLocationFactory(tmpFolder.newFolder());\n    Manifest manifest = new Manifest();\n    manifest.getMainAttributes().put(ManifestFields.BUNDLE_VERSION, \"2.0.0\");\n    final Location appJarLoc = AppJarHelper.createDeploymentJar(locationFactory, MyApp.class, manifest);\n\n    InputSupplier<InputStream> inputSupplier = new InputSupplier<InputStream>() {\n      @Override\n      public InputStream getInput() throws IOException {\n        return appJarLoc.getInputStream();\n      }\n    };\n    artifactClient.add(myapp1Id.getNamespace(), myapp1Id.getName(),\n                       inputSupplier, myapp1Id.getVersion().getVersion());\n    // add some properties\n    Map<String, String> myapp1Properties = ImmutableMap.of(\"k1\", \"v1\");\n    artifactClient.writeProperties(myapp1Id, myapp1Properties);\n\n    // let it derive version from jar manifest, which has bundle-version at 2.0.0\n    artifactClient.add(myapp2Id.getNamespace(), myapp2Id.getName(), inputSupplier, null, null);\n    // add some properties\n    Map<String, String> myapp2Properties = ImmutableMap.of(\"k1\", \"v1\", \"k2\", \"v2\");\n    artifactClient.writeProperties(myapp2Id, myapp2Properties);\n\n    // add an artifact that contains a plugin, but only extends myapp-2.0.0\n    Id.Artifact pluginId = Id.Artifact.from(Id.Namespace.DEFAULT, \"myapp-plugins\", \"2.0.0\");\n    manifest = new Manifest();\n    manifest.getMainAttributes().put(ManifestFields.EXPORT_PACKAGE, Plugin1.class.getPackage().getName());\n    final Location pluginJarLoc = PluginJarHelper.createPluginJar(locationFactory, manifest, Plugin1.class);\n    inputSupplier = new InputSupplier<InputStream>() {\n      @Override\n      public InputStream getInput() throws IOException {\n        return pluginJarLoc.getInputStream();\n      }\n    };\n    Set<ArtifactRange> parents = Sets.newHashSet(new ArtifactRange(\n      myapp2Id.getNamespace(), myapp2Id.getName(), myapp2Id.getVersion(), new ArtifactVersion(\"3.0.0\")));\n    Set<PluginClass> additionalPlugins = Sets.newHashSet(new PluginClass(\n      \"jdbc\", \"mysql\", \"\", \"com.mysql.jdbc.Driver\", null, Collections.<String, PluginPropertyField>emptyMap()));\n    artifactClient.add(pluginId.getNamespace(), pluginId.getName(), inputSupplier,\n                       pluginId.getVersion().getVersion(), parents, additionalPlugins);\n\n    ArtifactSummary myapp1Summary = new ArtifactSummary(myapp1Id.getName(), myapp1Id.getVersion().getVersion());\n    ArtifactSummary myapp2Summary = new ArtifactSummary(myapp2Id.getName(), myapp2Id.getVersion().getVersion());\n    ArtifactSummary pluginArtifactSummary = new ArtifactSummary(pluginId.getName(), pluginId.getVersion().getVersion());\n\n    Set<ArtifactSummary> artifacts = Sets.newHashSet(artifactClient.list(Id.Namespace.DEFAULT));\n    Assert.assertEquals(Sets.newHashSet(myapp1Summary, myapp2Summary, pluginArtifactSummary), artifacts);\n\n    // list all artifacts named 'myapp'\n    Assert.assertEquals(Sets.newHashSet(myapp1Summary, myapp2Summary),\n                        Sets.newHashSet(artifactClient.listVersions(Id.Namespace.DEFAULT, myapp1Id.getName())));\n    // list all artifacts named 'myapp-plugins'\n    Assert.assertEquals(Sets.newHashSet(pluginArtifactSummary),\n                        Sets.newHashSet(artifactClient.listVersions(Id.Namespace.DEFAULT, pluginId.getName())));\n    // artifacts should be in user scope\n    try {\n      artifactClient.listVersions(Id.Namespace.DEFAULT, pluginId.getName(), ArtifactScope.SYSTEM);\n      Assert.fail();\n    } catch (ArtifactNotFoundException e) {\n      // expected\n    }\n\n    // get info about specific artifacts\n    Schema myAppConfigSchema = new ReflectionSchemaGenerator(false).generate(MyApp.Conf.class);\n    ArtifactClasses myAppClasses = ArtifactClasses.builder()\n      .addApp(new ApplicationClass(MyApp.class.getName(), \"\", myAppConfigSchema))\n      .build();\n\n    // test get myapp-1.0.0\n    ArtifactInfo myapp1Info =\n      new ArtifactInfo(myapp1Id.getName(), myapp1Id.getVersion().getVersion(), ArtifactScope.USER,\n                       myAppClasses, myapp1Properties);\n    Assert.assertEquals(myapp1Info, artifactClient.getArtifactInfo(myapp1Id));\n\n    // test get myapp-2.0.0\n    ArtifactInfo myapp2Info =\n      new ArtifactInfo(myapp2Id.getName(), myapp2Id.getVersion().getVersion(), ArtifactScope.USER,\n                       myAppClasses, myapp2Properties);\n    Assert.assertEquals(myapp2Info, artifactClient.getArtifactInfo(myapp2Id));\n    // test overwriting properties\n    myapp2Properties = ImmutableMap.of(\"k1\", \"v3\", \"k5\", \"v5\");\n    artifactClient.writeProperties(myapp2Id, myapp2Properties);\n    Assert.assertEquals(myapp2Properties, artifactClient.getArtifactInfo(myapp2Id).getProperties());\n    // test deleting property\n    artifactClient.deleteProperty(myapp2Id, \"k1\");\n    Assert.assertEquals(ImmutableMap.of(\"k5\", \"v5\"),\n                        artifactClient.getArtifactInfo(myapp2Id).getProperties());\n    // test writing property\n    artifactClient.writeProperty(myapp2Id, \"k5\", \"v4\");\n    Assert.assertEquals(ImmutableMap.of(\"k5\", \"v4\"),\n                        artifactClient.getArtifactInfo(myapp2Id).getProperties());\n    // test deleting properties\n    artifactClient.deleteProperties(myapp2Id);\n    Assert.assertTrue(artifactClient.getArtifactInfo(myapp2Id).getProperties().isEmpty());\n\n\n    // test get myapp-plugins-2.0.0\n    Map<String, PluginPropertyField> props = ImmutableMap.of(\n      \"x\", new PluginPropertyField(\"x\", \"\", \"int\", true, false));\n    ArtifactClasses pluginClasses = ArtifactClasses.builder()\n      .addPlugin(new PluginClass(\"callable\", \"plugin1\", \"p1 description\", Plugin1.class.getName(), \"conf\", props))\n      .addPlugins(additionalPlugins)\n      .build();\n    ArtifactInfo pluginArtifactInfo =\n      new ArtifactInfo(pluginId.getName(), pluginId.getVersion().getVersion(), ArtifactScope.USER,\n                       pluginClasses, ImmutableMap.<String, String>of());\n    Assert.assertEquals(pluginArtifactInfo, artifactClient.getArtifactInfo(pluginId));\n\n    // test get all app classes in namespace\n    Set<ApplicationClassSummary> expectedSummaries = ImmutableSet.of(\n      new ApplicationClassSummary(myapp1Summary, MyApp.class.getName()),\n      new ApplicationClassSummary(myapp2Summary, MyApp.class.getName())\n    );\n    Set<ApplicationClassSummary> appClassSummaries = Sets.newHashSet(\n      artifactClient.getApplicationClasses(Id.Namespace.DEFAULT));\n    Assert.assertEquals(expectedSummaries, appClassSummaries);\n\n    // test get all app classes in namespace with name MyApp.class.getName()\n    Set<ApplicationClassInfo> appClassInfos = Sets.newHashSet(\n      artifactClient.getApplicationClasses(Id.Namespace.DEFAULT, MyApp.class.getName()));\n    Set<ApplicationClassInfo> expectedInfos = ImmutableSet.of(\n      new ApplicationClassInfo(myapp1Summary, MyApp.class.getName(), myAppConfigSchema),\n      new ApplicationClassInfo(myapp2Summary, MyApp.class.getName(), myAppConfigSchema)\n    );\n    Assert.assertEquals(expectedInfos, appClassInfos);\n\n    // test get plugin types for myapp-1.0.0. should be empty, since plugins only extends versions [2.0.0 - 3.0.0)\n    Assert.assertTrue(artifactClient.getPluginTypes(myapp1Id).isEmpty());\n\n    // test get plugin types for myapp-2.0.0\n    Assert.assertEquals(Lists.newArrayList(\"callable\", \"jdbc\"), artifactClient.getPluginTypes(myapp2Id));\n\n    // test get plugins of type callable for myapp-2.0.0\n    PluginSummary pluginSummary =\n      new PluginSummary(\"plugin1\", \"callable\", \"p1 description\", Plugin1.class.getName(), pluginArtifactSummary);\n    Assert.assertEquals(Sets.newHashSet(pluginSummary),\n                        Sets.newHashSet(artifactClient.getPluginSummaries(myapp2Id, \"callable\")));\n    // no plugins of type \"runnable\"\n    Assert.assertTrue(artifactClient.getPluginSummaries(myapp2Id, \"runnable\").isEmpty());\n\n    // test get plugin details for plugin1 for myapp-2.0.0\n    PluginInfo pluginInfo = new PluginInfo(\"plugin1\", \"callable\", \"p1 description\", Plugin1.class.getName(),\n      pluginArtifactSummary, props, new HashSet<String>());\n    Assert.assertEquals(Sets.newHashSet(pluginInfo),\n                        Sets.newHashSet(artifactClient.getPluginInfo(myapp2Id, \"callable\", \"plugin1\")));\n  }","id":55381,"modified_method":"@Test\n  public void testArtifacts() throws Exception {\n    // add 2 versions of an artifact with an application\n    Id.Artifact myapp1Id = Id.Artifact.from(Id.Namespace.DEFAULT, \"myapp\", \"1.0.0\");\n    Id.Artifact myapp2Id = Id.Artifact.from(Id.Namespace.DEFAULT, \"myapp\", \"2.0.0\");\n    LocalLocationFactory locationFactory = new LocalLocationFactory(TMP_FOLDER.newFolder());\n    Manifest manifest = new Manifest();\n    manifest.getMainAttributes().put(ManifestFields.BUNDLE_VERSION, \"2.0.0\");\n    final Location appJarLoc = AppJarHelper.createDeploymentJar(locationFactory, MyApp.class, manifest);\n\n    InputSupplier<InputStream> inputSupplier = new InputSupplier<InputStream>() {\n      @Override\n      public InputStream getInput() throws IOException {\n        return appJarLoc.getInputStream();\n      }\n    };\n    artifactClient.add(myapp1Id.getNamespace(), myapp1Id.getName(),\n                       inputSupplier, myapp1Id.getVersion().getVersion());\n    // add some properties\n    Map<String, String> myapp1Properties = ImmutableMap.of(\"k1\", \"v1\");\n    artifactClient.writeProperties(myapp1Id, myapp1Properties);\n\n    // let it derive version from jar manifest, which has bundle-version at 2.0.0\n    artifactClient.add(myapp2Id.getNamespace(), myapp2Id.getName(), inputSupplier, null, null);\n    // add some properties\n    Map<String, String> myapp2Properties = ImmutableMap.of(\"k1\", \"v1\", \"k2\", \"v2\");\n    artifactClient.writeProperties(myapp2Id, myapp2Properties);\n\n    // add an artifact that contains a plugin, but only extends myapp-2.0.0\n    Id.Artifact pluginId = Id.Artifact.from(Id.Namespace.DEFAULT, \"myapp-plugins\", \"2.0.0\");\n    manifest = new Manifest();\n    manifest.getMainAttributes().put(ManifestFields.EXPORT_PACKAGE, Plugin1.class.getPackage().getName());\n    final Location pluginJarLoc = PluginJarHelper.createPluginJar(locationFactory, manifest, Plugin1.class);\n    inputSupplier = new InputSupplier<InputStream>() {\n      @Override\n      public InputStream getInput() throws IOException {\n        return pluginJarLoc.getInputStream();\n      }\n    };\n    Set<ArtifactRange> parents = Sets.newHashSet(new ArtifactRange(\n      myapp2Id.getNamespace(), myapp2Id.getName(), myapp2Id.getVersion(), new ArtifactVersion(\"3.0.0\")));\n    Set<PluginClass> additionalPlugins = Sets.newHashSet(new PluginClass(\n      \"jdbc\", \"mysql\", \"\", \"com.mysql.jdbc.Driver\", null, Collections.<String, PluginPropertyField>emptyMap()));\n    artifactClient.add(pluginId.getNamespace(), pluginId.getName(), inputSupplier,\n                       pluginId.getVersion().getVersion(), parents, additionalPlugins);\n\n    ArtifactSummary myapp1Summary = new ArtifactSummary(myapp1Id.getName(), myapp1Id.getVersion().getVersion());\n    ArtifactSummary myapp2Summary = new ArtifactSummary(myapp2Id.getName(), myapp2Id.getVersion().getVersion());\n    ArtifactSummary pluginArtifactSummary = new ArtifactSummary(pluginId.getName(), pluginId.getVersion().getVersion());\n\n    Set<ArtifactSummary> artifacts = Sets.newHashSet(artifactClient.list(Id.Namespace.DEFAULT));\n    Assert.assertEquals(Sets.newHashSet(myapp1Summary, myapp2Summary, pluginArtifactSummary), artifacts);\n\n    // list all artifacts named 'myapp'\n    Assert.assertEquals(Sets.newHashSet(myapp1Summary, myapp2Summary),\n                        Sets.newHashSet(artifactClient.listVersions(Id.Namespace.DEFAULT, myapp1Id.getName())));\n    // list all artifacts named 'myapp-plugins'\n    Assert.assertEquals(Sets.newHashSet(pluginArtifactSummary),\n                        Sets.newHashSet(artifactClient.listVersions(Id.Namespace.DEFAULT, pluginId.getName())));\n    // artifacts should be in user scope\n    try {\n      artifactClient.listVersions(Id.Namespace.DEFAULT, pluginId.getName(), ArtifactScope.SYSTEM);\n      Assert.fail();\n    } catch (ArtifactNotFoundException e) {\n      // expected\n    }\n\n    // get info about specific artifacts\n    Schema myAppConfigSchema = new ReflectionSchemaGenerator(false).generate(MyApp.Conf.class);\n    ArtifactClasses myAppClasses = ArtifactClasses.builder()\n      .addApp(new ApplicationClass(MyApp.class.getName(), \"\", myAppConfigSchema))\n      .build();\n\n    // test get myapp-1.0.0\n    ArtifactInfo myapp1Info =\n      new ArtifactInfo(myapp1Id.getName(), myapp1Id.getVersion().getVersion(), ArtifactScope.USER,\n                       myAppClasses, myapp1Properties);\n    Assert.assertEquals(myapp1Info, artifactClient.getArtifactInfo(myapp1Id));\n\n    // test get myapp-2.0.0\n    ArtifactInfo myapp2Info =\n      new ArtifactInfo(myapp2Id.getName(), myapp2Id.getVersion().getVersion(), ArtifactScope.USER,\n                       myAppClasses, myapp2Properties);\n    Assert.assertEquals(myapp2Info, artifactClient.getArtifactInfo(myapp2Id));\n    // test overwriting properties\n    myapp2Properties = ImmutableMap.of(\"k1\", \"v3\", \"k5\", \"v5\");\n    artifactClient.writeProperties(myapp2Id, myapp2Properties);\n    Assert.assertEquals(myapp2Properties, artifactClient.getArtifactInfo(myapp2Id).getProperties());\n    // test deleting property\n    artifactClient.deleteProperty(myapp2Id, \"k1\");\n    Assert.assertEquals(ImmutableMap.of(\"k5\", \"v5\"),\n                        artifactClient.getArtifactInfo(myapp2Id).getProperties());\n    // test writing property\n    artifactClient.writeProperty(myapp2Id, \"k5\", \"v4\");\n    Assert.assertEquals(ImmutableMap.of(\"k5\", \"v4\"),\n                        artifactClient.getArtifactInfo(myapp2Id).getProperties());\n    // test deleting properties\n    artifactClient.deleteProperties(myapp2Id);\n    Assert.assertTrue(artifactClient.getArtifactInfo(myapp2Id).getProperties().isEmpty());\n\n\n    // test get myapp-plugins-2.0.0\n    Map<String, PluginPropertyField> props = ImmutableMap.of(\n      \"x\", new PluginPropertyField(\"x\", \"\", \"int\", true, false));\n    ArtifactClasses pluginClasses = ArtifactClasses.builder()\n      .addPlugin(new PluginClass(\"callable\", \"plugin1\", \"p1 description\", Plugin1.class.getName(), \"conf\", props))\n      .addPlugins(additionalPlugins)\n      .build();\n    ArtifactInfo pluginArtifactInfo =\n      new ArtifactInfo(pluginId.getName(), pluginId.getVersion().getVersion(), ArtifactScope.USER,\n                       pluginClasses, ImmutableMap.<String, String>of());\n    Assert.assertEquals(pluginArtifactInfo, artifactClient.getArtifactInfo(pluginId));\n\n    // test get all app classes in namespace\n    Set<ApplicationClassSummary> expectedSummaries = ImmutableSet.of(\n      new ApplicationClassSummary(myapp1Summary, MyApp.class.getName()),\n      new ApplicationClassSummary(myapp2Summary, MyApp.class.getName())\n    );\n    Set<ApplicationClassSummary> appClassSummaries = Sets.newHashSet(\n      artifactClient.getApplicationClasses(Id.Namespace.DEFAULT));\n    Assert.assertEquals(expectedSummaries, appClassSummaries);\n\n    // test get all app classes in namespace with name MyApp.class.getName()\n    Set<ApplicationClassInfo> appClassInfos = Sets.newHashSet(\n      artifactClient.getApplicationClasses(Id.Namespace.DEFAULT, MyApp.class.getName()));\n    Set<ApplicationClassInfo> expectedInfos = ImmutableSet.of(\n      new ApplicationClassInfo(myapp1Summary, MyApp.class.getName(), myAppConfigSchema),\n      new ApplicationClassInfo(myapp2Summary, MyApp.class.getName(), myAppConfigSchema)\n    );\n    Assert.assertEquals(expectedInfos, appClassInfos);\n\n    // test get plugin types for myapp-1.0.0. should be empty, since plugins only extends versions [2.0.0 - 3.0.0)\n    Assert.assertTrue(artifactClient.getPluginTypes(myapp1Id).isEmpty());\n\n    // test get plugin types for myapp-2.0.0\n    Assert.assertEquals(Lists.newArrayList(\"callable\", \"jdbc\"), artifactClient.getPluginTypes(myapp2Id));\n\n    // test get plugins of type callable for myapp-2.0.0\n    PluginSummary pluginSummary =\n      new PluginSummary(\"plugin1\", \"callable\", \"p1 description\", Plugin1.class.getName(), pluginArtifactSummary);\n    Assert.assertEquals(Sets.newHashSet(pluginSummary),\n                        Sets.newHashSet(artifactClient.getPluginSummaries(myapp2Id, \"callable\")));\n    // no plugins of type \"runnable\"\n    Assert.assertTrue(artifactClient.getPluginSummaries(myapp2Id, \"runnable\").isEmpty());\n\n    // test get plugin details for plugin1 for myapp-2.0.0\n    PluginInfo pluginInfo = new PluginInfo(\"plugin1\", \"callable\", \"p1 description\", Plugin1.class.getName(),\n      pluginArtifactSummary, props, new HashSet<String>());\n    Assert.assertEquals(Sets.newHashSet(pluginInfo),\n                        Sets.newHashSet(artifactClient.getPluginInfo(myapp2Id, \"callable\", \"plugin1\")));\n  }","commit_id":"492e8f32e62c675874864aa87570e860988f80db","url":"https://github.com/caskdata/cdap"},{"original_method":"private HttpResponse execute(HttpRequest request, int... allowedErrorCodes)\n    throws IOException, UnauthenticatedException, DisconnectedException {\n\n    int currentTry = 0;\n    HttpResponse response;\n    do {\n      onRequest(request, currentTry);\n      response = HttpRequests.execute(request, clientConfig.getDefaultRequestConfig());\n\n      if (response.getResponseCode() != HttpURLConnection.HTTP_UNAVAILABLE) {\n        // only retry if unavailable\n        break;\n      }\n\n      currentTry++;\n      try {\n        TimeUnit.MILLISECONDS.sleep(1000);\n      } catch (InterruptedException e) {\n        break;\n      }\n    } while (currentTry <= clientConfig.getUnavailableRetryLimit());\n\n    onResponse(request, response, currentTry);\n\n    int responseCode = response.getResponseCode();\n    if (responseCode == HttpURLConnection.HTTP_UNAUTHORIZED) {\n      throw new UnauthenticatedException(\"Unauthorized status code received from the server.\");\n    }\n    if (!isSuccessful(responseCode) && !ArrayUtils.contains(allowedErrorCodes, responseCode)) {\n      throw new IOException(responseCode + \": \" + response.getResponseBodyAsString());\n    }\n    return response;\n  }","id":55382,"modified_method":"private HttpResponse execute(HttpRequest request, int... allowedErrorCodes)\n    throws IOException, UnauthenticatedException, DisconnectedException {\n\n    int currentTry = 0;\n    HttpResponse response;\n    int responseCode;\n    boolean allowUnavailable = ArrayUtils.contains(allowedErrorCodes, HttpURLConnection.HTTP_UNAVAILABLE);\n\n    do {\n      onRequest(request, currentTry);\n      response = HttpRequests.execute(request, clientConfig.getDefaultRequestConfig());\n      responseCode = response.getResponseCode();\n\n      if (responseCode != HttpURLConnection.HTTP_UNAVAILABLE || allowUnavailable) {\n        // only retry if unavailable\n        break;\n      }\n\n      currentTry++;\n      try {\n        TimeUnit.MILLISECONDS.sleep(1000);\n      } catch (InterruptedException e) {\n        break;\n      }\n    } while (currentTry <= clientConfig.getUnavailableRetryLimit());\n\n    onResponse(request, response, currentTry);\n\n    if (responseCode == HttpURLConnection.HTTP_UNAUTHORIZED) {\n      throw new UnauthenticatedException(\"Unauthorized status code received from the server.\");\n    }\n    if (!isSuccessful(responseCode) && !ArrayUtils.contains(allowedErrorCodes, responseCode)) {\n      throw new IOException(responseCode + \": \" + response.getResponseBodyAsString());\n    }\n    return response;\n  }","commit_id":"492e8f32e62c675874864aa87570e860988f80db","url":"https://github.com/caskdata/cdap"},{"original_method":"@Override\n  public ArtifactManager addAppArtifact(ArtifactId artifactId, Class<?> appClass,\n                                        String... exportPackages) throws Exception {\n    Manifest manifest = new Manifest();\n    if (exportPackages.length > 0) {\n      manifest.getMainAttributes().put(ManifestFields.EXPORT_PACKAGE, Joiner.on(',').join(exportPackages));\n    }\n    Location appJar = AppJarHelper.createDeploymentJar(locationFactory, appClass, manifest, CLASS_ACCEPTOR);\n    addArtifact(artifactId, appJar);\n    return artifactManagerFactory.create(artifactId);\n  }","id":55383,"modified_method":"@Override\n  public ArtifactManager addAppArtifact(ArtifactId artifactId, Class<?> appClass,\n                                        String... exportPackages) throws Exception {\n    Manifest manifest = new Manifest();\n    if (exportPackages.length > 0) {\n      manifest.getMainAttributes().put(ManifestFields.EXPORT_PACKAGE, Joiner.on(',').join(exportPackages));\n    }\n    return addAppArtifact(artifactId, appClass, manifest);\n  }","commit_id":"492e8f32e62c675874864aa87570e860988f80db","url":"https://github.com/caskdata/cdap"},{"original_method":"private String createInput(String folderName) throws IOException {\n    File inputDir = tmpFolder.newFolder(folderName);\n\n    File inputFile = new File(inputDir.getPath() + \"/words.txt\");\n    try (BufferedWriter writer = Files.newBufferedWriter(inputFile.toPath(), Charsets.UTF_8)) {\n      writer.write(\"this text has\");\n      writer.newLine();\n      writer.write(\"two words text inside\");\n    }\n    return inputDir.getAbsolutePath();\n  }","id":55384,"modified_method":"private String createInput(String folderName) throws IOException {\n    File inputDir = TMP_FOLDER.newFolder(folderName);\n\n    File inputFile = new File(inputDir.getPath() + \"/words.txt\");\n    try (BufferedWriter writer = Files.newBufferedWriter(inputFile.toPath(), Charsets.UTF_8)) {\n      writer.write(\"this text has\");\n      writer.newLine();\n      writer.write(\"two words text inside\");\n    }\n    return inputDir.getAbsolutePath();\n  }","commit_id":"492e8f32e62c675874864aa87570e860988f80db","url":"https://github.com/caskdata/cdap"},{"original_method":"@Test\n  public void testWorkflowClient() throws Exception {\n    String keyValueTableType = \"co.cask.cdap.api.dataset.lib.KeyValueTable\";\n    String filesetType = \"co.cask.cdap.api.dataset.lib.FileSet\";\n\n    String outputPath = new File(tmpFolder.newFolder(), \"output\").getAbsolutePath();\n    Map<String, String> runtimeArgs = ImmutableMap.of(\"inputPath\", createInput(\"input\"),\n                                                      \"outputPath\", outputPath, \"dataset.*.keep.local\", \"true\");\n    final ProgramId workflowId = new ProgramId(NamespaceId.DEFAULT.getNamespace(), AppWithWorkflow.NAME,\n                                               ProgramType.WORKFLOW, AppWithWorkflow.SampleWorkflow.NAME);\n\n    programClient.start(workflowId.toId(), false, runtimeArgs);\n    programClient.waitForStatus(workflowId.toId(), \"STOPPED\", 60, TimeUnit.SECONDS);\n\n    Tasks.waitFor(1, new Callable<Integer>() {\n      @Override\n      public Integer call() throws Exception {\n        return programClient.getProgramRuns(workflowId.toId(),\n                                            ProgramRunStatus.COMPLETED.name(), 0, Long.MAX_VALUE, 10).size();\n      }\n    }, 10, TimeUnit.SECONDS, 100, TimeUnit.MILLISECONDS);\n\n    List<RunRecord> workflowRuns = programClient.getProgramRuns(workflowId.toId(), ProgramRunStatus.COMPLETED.name(), 0,\n                                                                Long.MAX_VALUE, 10);\n    Assert.assertEquals(1, workflowRuns.size());\n\n    String runId = workflowRuns.get(0).getPid();\n    ProgramRunId workflowRunId = workflowId.run(runId);\n\n    // Invalid test scenarios\n    try {\n      ProgramId nonExistentWorkflowId = new ProgramId(Id.Namespace.DEFAULT.getId(), AppWithWorkflow.NAME,\n                                                      ProgramType.WORKFLOW, \"NonExistentWorkflow\");\n      ProgramRunId nonExistentWorkflowRun = nonExistentWorkflowId.run(runId);\n      workflowClient.getWorkflowToken(nonExistentWorkflowRun.toId());\n      Assert.fail(\"Should not find a workflow token for a non-existing workflow\");\n    } catch (NotFoundException expected) {\n      // expected\n    }\n    try {\n      ProgramRunId invalidRunId = workflowId.run(RunIds.generate().getId());\n      workflowClient.getWorkflowToken(invalidRunId.toId());\n      Assert.fail(\"Should not find a workflow token for a random run id\");\n    } catch (NotFoundException expected) {\n      // expected\n    }\n\n    // Valid test scenarios\n    WorkflowTokenDetail workflowToken = workflowClient.getWorkflowToken(workflowRunId.toId());\n    Assert.assertEquals(5, workflowToken.getTokenData().size());\n    workflowToken = workflowClient.getWorkflowToken(workflowRunId.toId(), WorkflowToken.Scope.SYSTEM);\n    Assert.assertTrue(workflowToken.getTokenData().size() > 0);\n    workflowToken = workflowClient.getWorkflowToken(workflowRunId.toId(), \"start_time\");\n    Map<String, List<WorkflowTokenDetail.NodeValueDetail>> tokenData = workflowToken.getTokenData();\n    Assert.assertEquals(AppWithWorkflow.WordCountMapReduce.NAME, tokenData.get(\"start_time\").get(0).getNode());\n    Assert.assertTrue(Long.parseLong(tokenData.get(\"start_time\").get(0).getValue()) < System.currentTimeMillis());\n    workflowToken = workflowClient.getWorkflowToken(workflowRunId.toId(), WorkflowToken.Scope.USER, \"action_type\");\n    tokenData = workflowToken.getTokenData();\n    Assert.assertEquals(AppWithWorkflow.WordCountMapReduce.NAME, tokenData.get(\"action_type\").get(0).getNode());\n    Assert.assertEquals(\"MapReduce\", tokenData.get(\"action_type\").get(0).getValue());\n    String nodeName = AppWithWorkflow.SampleWorkflow.FIRST_ACTION;\n    WorkflowTokenNodeDetail workflowTokenAtNode =\n      workflowClient.getWorkflowTokenAtNode(workflowRunId.toId(), nodeName);\n    Assert.assertEquals(AppWithWorkflow.DummyAction.TOKEN_VALUE,\n                        workflowTokenAtNode.getTokenDataAtNode().get(AppWithWorkflow.DummyAction.TOKEN_KEY));\n    workflowTokenAtNode = workflowClient.getWorkflowTokenAtNode(workflowRunId.toId(), nodeName,\n                                                                WorkflowToken.Scope.SYSTEM);\n    Assert.assertEquals(0, workflowTokenAtNode.getTokenDataAtNode().size());\n    workflowTokenAtNode = workflowClient.getWorkflowTokenAtNode(workflowRunId.toId(), nodeName,\n                                                                AppWithWorkflow.DummyAction.TOKEN_KEY);\n    Assert.assertEquals(AppWithWorkflow.DummyAction.TOKEN_VALUE,\n                        workflowTokenAtNode.getTokenDataAtNode().get(AppWithWorkflow.DummyAction.TOKEN_KEY));\n    String reduceOutputRecordsCounter = \"org.apache.hadoop.mapreduce.TaskCounter.REDUCE_OUTPUT_RECORDS\";\n    workflowTokenAtNode = workflowClient.getWorkflowTokenAtNode(workflowRunId.toId(),\n                                                                AppWithWorkflow.WordCountMapReduce.NAME,\n                                                                WorkflowToken.Scope.SYSTEM, reduceOutputRecordsCounter);\n    Assert.assertEquals(6, Integer.parseInt(workflowTokenAtNode.getTokenDataAtNode().get(reduceOutputRecordsCounter)));\n\n    Map<String, DatasetSpecificationSummary> localDatasetSummaries\n      = workflowClient.getWorkflowLocalDatasets(workflowRunId);\n    Assert.assertEquals(2, localDatasetSummaries.size());\n    DatasetSpecificationSummary keyValueTableSummary = new DatasetSpecificationSummary(\"MyTable.\" + runId,\n                                                                                       keyValueTableType,\n                                                                                       ImmutableMap.of(\"foo\", \"bar\"));\n    Assert.assertEquals(keyValueTableSummary, localDatasetSummaries.get(\"MyTable\"));\n    DatasetSpecificationSummary filesetSummary = new DatasetSpecificationSummary(\"MyFile.\" + runId, filesetType,\n                                                                                 ImmutableMap.of(\"anotherFoo\",\n                                                                                                 \"anotherBar\"));\n    Assert.assertEquals(filesetSummary, localDatasetSummaries.get(\"MyFile\"));\n\n    workflowClient.deleteWorkflowLocalDatasets(workflowRunId);\n\n    localDatasetSummaries = workflowClient.getWorkflowLocalDatasets(workflowRunId);\n    Assert.assertEquals(0, localDatasetSummaries.size());\n\n    Map<String, WorkflowNodeStateDetail> nodeStates = workflowClient.getWorkflowNodeStates(workflowRunId);\n    Assert.assertEquals(3, nodeStates.size());\n\n    WorkflowNodeStateDetail nodeState = nodeStates.get(AppWithWorkflow.SampleWorkflow.FIRST_ACTION);\n    Assert.assertTrue(AppWithWorkflow.SampleWorkflow.FIRST_ACTION.equals(nodeState.getNodeId()));\n    Assert.assertTrue(NodeStatus.COMPLETED == nodeState.getNodeStatus());\n\n    nodeState = nodeStates.get(AppWithWorkflow.SampleWorkflow.SECOND_ACTION);\n    Assert.assertTrue(AppWithWorkflow.SampleWorkflow.SECOND_ACTION.equals(nodeState.getNodeId()));\n    Assert.assertTrue(NodeStatus.COMPLETED == nodeState.getNodeStatus());\n\n    nodeState = nodeStates.get(AppWithWorkflow.SampleWorkflow.WORD_COUNT_MR);\n    Assert.assertTrue(AppWithWorkflow.SampleWorkflow.WORD_COUNT_MR.equals(nodeState.getNodeId()));\n    Assert.assertTrue(NodeStatus.COMPLETED == nodeState.getNodeStatus());\n  }","id":55385,"modified_method":"@Test\n  public void testWorkflowClient() throws Exception {\n    String keyValueTableType = \"co.cask.cdap.api.dataset.lib.KeyValueTable\";\n    String filesetType = \"co.cask.cdap.api.dataset.lib.FileSet\";\n\n    String outputPath = new File(TMP_FOLDER.newFolder(), \"output\").getAbsolutePath();\n    Map<String, String> runtimeArgs = ImmutableMap.of(\"inputPath\", createInput(\"input\"),\n                                                      \"outputPath\", outputPath, \"dataset.*.keep.local\", \"true\");\n    final ProgramId workflowId = new ProgramId(NamespaceId.DEFAULT.getNamespace(), AppWithWorkflow.NAME,\n                                               ProgramType.WORKFLOW, AppWithWorkflow.SampleWorkflow.NAME);\n\n    programClient.start(workflowId.toId(), false, runtimeArgs);\n    programClient.waitForStatus(workflowId.toId(), \"STOPPED\", 60, TimeUnit.SECONDS);\n\n    Tasks.waitFor(1, new Callable<Integer>() {\n      @Override\n      public Integer call() throws Exception {\n        return programClient.getProgramRuns(workflowId.toId(),\n                                            ProgramRunStatus.COMPLETED.name(), 0, Long.MAX_VALUE, 10).size();\n      }\n    }, 10, TimeUnit.SECONDS, 100, TimeUnit.MILLISECONDS);\n\n    List<RunRecord> workflowRuns = programClient.getProgramRuns(workflowId.toId(), ProgramRunStatus.COMPLETED.name(), 0,\n                                                                Long.MAX_VALUE, 10);\n    Assert.assertEquals(1, workflowRuns.size());\n\n    String runId = workflowRuns.get(0).getPid();\n    ProgramRunId workflowRunId = workflowId.run(runId);\n\n    // Invalid test scenarios\n    try {\n      ProgramId nonExistentWorkflowId = new ProgramId(Id.Namespace.DEFAULT.getId(), AppWithWorkflow.NAME,\n                                                      ProgramType.WORKFLOW, \"NonExistentWorkflow\");\n      ProgramRunId nonExistentWorkflowRun = nonExistentWorkflowId.run(runId);\n      workflowClient.getWorkflowToken(nonExistentWorkflowRun.toId());\n      Assert.fail(\"Should not find a workflow token for a non-existing workflow\");\n    } catch (NotFoundException expected) {\n      // expected\n    }\n    try {\n      ProgramRunId invalidRunId = workflowId.run(RunIds.generate().getId());\n      workflowClient.getWorkflowToken(invalidRunId.toId());\n      Assert.fail(\"Should not find a workflow token for a random run id\");\n    } catch (NotFoundException expected) {\n      // expected\n    }\n\n    // Valid test scenarios\n    WorkflowTokenDetail workflowToken = workflowClient.getWorkflowToken(workflowRunId.toId());\n    Assert.assertEquals(5, workflowToken.getTokenData().size());\n    workflowToken = workflowClient.getWorkflowToken(workflowRunId.toId(), WorkflowToken.Scope.SYSTEM);\n    Assert.assertTrue(workflowToken.getTokenData().size() > 0);\n    workflowToken = workflowClient.getWorkflowToken(workflowRunId.toId(), \"start_time\");\n    Map<String, List<WorkflowTokenDetail.NodeValueDetail>> tokenData = workflowToken.getTokenData();\n    Assert.assertEquals(AppWithWorkflow.WordCountMapReduce.NAME, tokenData.get(\"start_time\").get(0).getNode());\n    Assert.assertTrue(Long.parseLong(tokenData.get(\"start_time\").get(0).getValue()) < System.currentTimeMillis());\n    workflowToken = workflowClient.getWorkflowToken(workflowRunId.toId(), WorkflowToken.Scope.USER, \"action_type\");\n    tokenData = workflowToken.getTokenData();\n    Assert.assertEquals(AppWithWorkflow.WordCountMapReduce.NAME, tokenData.get(\"action_type\").get(0).getNode());\n    Assert.assertEquals(\"MapReduce\", tokenData.get(\"action_type\").get(0).getValue());\n    String nodeName = AppWithWorkflow.SampleWorkflow.FIRST_ACTION;\n    WorkflowTokenNodeDetail workflowTokenAtNode =\n      workflowClient.getWorkflowTokenAtNode(workflowRunId.toId(), nodeName);\n    Assert.assertEquals(AppWithWorkflow.DummyAction.TOKEN_VALUE,\n                        workflowTokenAtNode.getTokenDataAtNode().get(AppWithWorkflow.DummyAction.TOKEN_KEY));\n    workflowTokenAtNode = workflowClient.getWorkflowTokenAtNode(workflowRunId.toId(), nodeName,\n                                                                WorkflowToken.Scope.SYSTEM);\n    Assert.assertEquals(0, workflowTokenAtNode.getTokenDataAtNode().size());\n    workflowTokenAtNode = workflowClient.getWorkflowTokenAtNode(workflowRunId.toId(), nodeName,\n                                                                AppWithWorkflow.DummyAction.TOKEN_KEY);\n    Assert.assertEquals(AppWithWorkflow.DummyAction.TOKEN_VALUE,\n                        workflowTokenAtNode.getTokenDataAtNode().get(AppWithWorkflow.DummyAction.TOKEN_KEY));\n    String reduceOutputRecordsCounter = \"org.apache.hadoop.mapreduce.TaskCounter.REDUCE_OUTPUT_RECORDS\";\n    workflowTokenAtNode = workflowClient.getWorkflowTokenAtNode(workflowRunId.toId(),\n                                                                AppWithWorkflow.WordCountMapReduce.NAME,\n                                                                WorkflowToken.Scope.SYSTEM, reduceOutputRecordsCounter);\n    Assert.assertEquals(6, Integer.parseInt(workflowTokenAtNode.getTokenDataAtNode().get(reduceOutputRecordsCounter)));\n\n    Map<String, DatasetSpecificationSummary> localDatasetSummaries\n      = workflowClient.getWorkflowLocalDatasets(workflowRunId);\n    Assert.assertEquals(2, localDatasetSummaries.size());\n    DatasetSpecificationSummary keyValueTableSummary = new DatasetSpecificationSummary(\"MyTable.\" + runId,\n                                                                                       keyValueTableType,\n                                                                                       ImmutableMap.of(\"foo\", \"bar\"));\n    Assert.assertEquals(keyValueTableSummary, localDatasetSummaries.get(\"MyTable\"));\n    DatasetSpecificationSummary filesetSummary = new DatasetSpecificationSummary(\"MyFile.\" + runId, filesetType,\n                                                                                 ImmutableMap.of(\"anotherFoo\",\n                                                                                                 \"anotherBar\"));\n    Assert.assertEquals(filesetSummary, localDatasetSummaries.get(\"MyFile\"));\n\n    workflowClient.deleteWorkflowLocalDatasets(workflowRunId);\n\n    localDatasetSummaries = workflowClient.getWorkflowLocalDatasets(workflowRunId);\n    Assert.assertEquals(0, localDatasetSummaries.size());\n\n    Map<String, WorkflowNodeStateDetail> nodeStates = workflowClient.getWorkflowNodeStates(workflowRunId);\n    Assert.assertEquals(3, nodeStates.size());\n\n    WorkflowNodeStateDetail nodeState = nodeStates.get(AppWithWorkflow.SampleWorkflow.FIRST_ACTION);\n    Assert.assertTrue(AppWithWorkflow.SampleWorkflow.FIRST_ACTION.equals(nodeState.getNodeId()));\n    Assert.assertTrue(NodeStatus.COMPLETED == nodeState.getNodeStatus());\n\n    nodeState = nodeStates.get(AppWithWorkflow.SampleWorkflow.SECOND_ACTION);\n    Assert.assertTrue(AppWithWorkflow.SampleWorkflow.SECOND_ACTION.equals(nodeState.getNodeId()));\n    Assert.assertTrue(NodeStatus.COMPLETED == nodeState.getNodeStatus());\n\n    nodeState = nodeStates.get(AppWithWorkflow.SampleWorkflow.WORD_COUNT_MR);\n    Assert.assertTrue(AppWithWorkflow.SampleWorkflow.WORD_COUNT_MR.equals(nodeState.getNodeId()));\n    Assert.assertTrue(NodeStatus.COMPLETED == nodeState.getNodeStatus());\n  }","commit_id":"492e8f32e62c675874864aa87570e860988f80db","url":"https://github.com/caskdata/cdap"},{"original_method":"void doStart(List<RemotePlugin> remotePlugins) {\n    Set<String> whiteList = initWhiteList();\n    Set<String> blackList = initBlackList();\n\n    PluginInstaller extractor = new PluginInstaller();\n    metadataByKey = Maps.newHashMap();\n    for (RemotePlugin remote : remotePlugins) {\n      if (isAccepted(remote.getKey(), whiteList, blackList)) {\n        List<File> pluginFiles = pluginDownloader.downloadPlugin(remote);\n        List<File> extensionFiles = pluginFiles.subList(1, pluginFiles.size());\n        PluginMetadata metadata = extractor.installInSameLocation(pluginFiles.get(0), remote.isCore(), extensionFiles);\n        if (StringUtils.isBlank(metadata.getBasePlugin()) || isAccepted(metadata.getBasePlugin(), whiteList, blackList)) {\n          LOG.debug(\"Excluded plugin: \" + metadata.getKey());\n          metadataByKey.put(metadata.getKey(), metadata);\n        }\n      }\n    }\n    classLoaders = new PluginClassloaders(Thread.currentThread().getContextClassLoader());\n    pluginsByKey = classLoaders.init(metadataByKey.values());\n  }","id":55386,"modified_method":"void doStart(List<RemotePlugin> remotePlugins) {\n    PluginFilter filter = new PluginFilter(settings);\n    PluginInstaller extractor = new PluginInstaller();\n    metadataByKey = Maps.newHashMap();\n    for (RemotePlugin remote : remotePlugins) {\n      if (filter.accepts(remote.getKey())) {\n        List<File> pluginFiles = pluginDownloader.downloadPlugin(remote);\n        List<File> extensionFiles = pluginFiles.subList(1, pluginFiles.size());\n        PluginMetadata metadata = extractor.installInSameLocation(pluginFiles.get(0), remote.isCore(), extensionFiles);\n        if (StringUtils.isBlank(metadata.getBasePlugin()) || filter.accepts(metadata.getBasePlugin())) {\n          LOG.debug(\"Excluded plugin: \" + metadata.getKey());\n          metadataByKey.put(metadata.getKey(), metadata);\n        }\n      }\n    }\n    classLoaders = new PluginClassloaders(Thread.currentThread().getContextClassLoader());\n    pluginsByKey = classLoaders.init(metadataByKey.values());\n  }","commit_id":"61dcae545b51dba75728c0460d3aab541d0595e9","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"@Test\n  public void englishPackPluginShouldNeverBeInBlackList() {\n    Set<String> whiteList = null;\n    Set<String> blackList = Sets.newHashSet(\"l10nen\", \"findbugs\");\n    assertThat(BatchPluginRepository.isAccepted(\"l10nen\", whiteList, blackList), Matchers.is(true));\n  }","id":55387,"modified_method":"@Test\n  public void englishPackPluginShouldNeverBeInBlackList() {\n    Settings settings = new Settings()\n      .setProperty(CoreProperties.BATCH_EXCLUDE_PLUGINS, \"l10nen,findbugs\");\n    BatchPluginRepository.PluginFilter filter = new BatchPluginRepository.PluginFilter(settings);\n    assertThat(filter.accepts(\"l10nen\")).isTrue();\n  }","commit_id":"61dcae545b51dba75728c0460d3aab541d0595e9","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"@Test\n  public void shouldAlwaysAcceptIfNoWhiteListAndBlackList() {\n    repository = new BatchPluginRepository(mock(PluginDownloader.class), new Settings());\n    assertThat(repository.isAccepted(\"pmd\", null, null), Matchers.is(true));\n  }","id":55388,"modified_method":"@Test\n  public void shouldAlwaysAcceptIfNoWhiteListAndBlackList() {\n    BatchPluginRepository.PluginFilter filter = new BatchPluginRepository.PluginFilter(new Settings());\n    assertThat(filter.accepts(\"pmd\")).isTrue();\n  }","commit_id":"61dcae545b51dba75728c0460d3aab541d0595e9","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"@Test\n  public void shouldLoadPluginDeprecatedExtensions() throws IOException {\n    RemotePlugin checkstyle = new RemotePlugin(\"checkstyle\", true)\n      .addFilename(\"checkstyle-ext.xml\");\n\n    PluginDownloader downloader = mock(PluginDownloader.class);\n    when(downloader.downloadPlugin(checkstyle)).thenReturn(copyFiles(\"sonar-checkstyle-plugin-2.8.jar\", \"checkstyle-ext.xml\"));\n\n    repository = new BatchPluginRepository(downloader, new Settings());\n\n    repository.doStart(Arrays.asList(checkstyle));\n\n    assertThat(repository.getPlugin(\"checkstyle\"), not(nullValue()));\n    assertThat(repository.getMetadata().size(), Matchers.is(1));\n    assertThat(repository.getMetadata(\"checkstyle\").getName(), Matchers.is(\"Checkstyle\"));\n    assertThat(repository.getMetadata(\"checkstyle\").getDeployedFiles().size(), Matchers.is(5)); // plugin + 3 dependencies + 1 deprecated\n    // extension\n  }","id":55389,"modified_method":"@Test\n  public void shouldLoadPluginDeprecatedExtensions() throws IOException {\n    RemotePlugin checkstyle = new RemotePlugin(\"checkstyle\", true)\n      .addFilename(\"checkstyle-ext.xml\");\n\n    PluginDownloader downloader = mock(PluginDownloader.class);\n    when(downloader.downloadPlugin(checkstyle)).thenReturn(copyFiles(\"sonar-checkstyle-plugin-2.8.jar\", \"checkstyle-ext.xml\"));\n\n    repository = new BatchPluginRepository(downloader, new Settings());\n\n    repository.doStart(Arrays.asList(checkstyle));\n\n    assertThat(repository.getPlugin(\"checkstyle\")).isNotNull();\n    assertThat(repository.getMetadata()).hasSize(1);\n    assertThat(repository.getMetadata(\"checkstyle\").getName()).isEqualTo(\"Checkstyle\");\n    assertThat(repository.getMetadata(\"checkstyle\").getDeployedFiles()).hasSize(5); // plugin + 3 dependencies + 1 deprecated\n    // extension\n  }","commit_id":"61dcae545b51dba75728c0460d3aab541d0595e9","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"@Test\n  public void shouldCheckBlackListIfNoWhiteList() {\n    Set<String> whiteList = null;\n    Set<String> blackList = Sets.newHashSet(\"checkstyle\", \"pmd\", \"findbugs\");\n    assertThat(BatchPluginRepository.isAccepted(\"checkstyle\", whiteList, blackList), Matchers.is(false));\n    assertThat(BatchPluginRepository.isAccepted(\"pmd\", whiteList, blackList), Matchers.is(false));\n    assertThat(BatchPluginRepository.isAccepted(\"cobertura\", whiteList, blackList), Matchers.is(true));\n  }","id":55390,"modified_method":"@Test\n  public void shouldCheckBlackListIfNoWhiteList() {\n    Settings settings = new Settings()\n      .setProperty(CoreProperties.BATCH_EXCLUDE_PLUGINS, \"checkstyle,pmd,findbugs\");\n    BatchPluginRepository.PluginFilter filter = new BatchPluginRepository.PluginFilter(settings);\n    assertThat(filter.accepts(\"checkstyle\")).isFalse();\n    assertThat(filter.accepts(\"pmd\")).isFalse();\n    assertThat(filter.accepts(\"cobertura\")).isTrue();\n  }","commit_id":"61dcae545b51dba75728c0460d3aab541d0595e9","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"@Test\n  public void shouldLoadPluginExtension() throws IOException {\n    RemotePlugin checkstyle = new RemotePlugin(\"checkstyle\", true);\n    RemotePlugin checkstyleExt = new RemotePlugin(\"checkstyleextensions\", false);\n\n    PluginDownloader downloader = mock(PluginDownloader.class);\n    when(downloader.downloadPlugin(checkstyle)).thenReturn(copyFiles(\"sonar-checkstyle-plugin-2.8.jar\"));\n    when(downloader.downloadPlugin(checkstyleExt)).thenReturn(copyFiles(\"sonar-checkstyle-extensions-plugin-0.1-SNAPSHOT.jar\"));\n\n    repository = new BatchPluginRepository(downloader, new Settings());\n\n    repository.doStart(Arrays.asList(checkstyle, checkstyleExt));\n\n    assertThat(repository.getPlugin(\"checkstyle\"), not(nullValue()));\n    assertThat(repository.getPlugin(\"checkstyleextensions\"), not(nullValue()));\n    assertThat(repository.getMetadata().size(), Matchers.is(2));\n    assertThat(repository.getMetadata(\"checkstyle\").getName(), Matchers.is(\"Checkstyle\"));\n    assertThat(repository.getMetadata(\"checkstyleextensions\").getVersion(), Matchers.is(\"0.1-SNAPSHOT\"));\n  }","id":55391,"modified_method":"@Test\n  public void shouldLoadPluginExtension() throws IOException {\n    RemotePlugin checkstyle = new RemotePlugin(\"checkstyle\", true);\n    RemotePlugin checkstyleExt = new RemotePlugin(\"checkstyleextensions\", false);\n\n    PluginDownloader downloader = mock(PluginDownloader.class);\n    when(downloader.downloadPlugin(checkstyle)).thenReturn(copyFiles(\"sonar-checkstyle-plugin-2.8.jar\"));\n    when(downloader.downloadPlugin(checkstyleExt)).thenReturn(copyFiles(\"sonar-checkstyle-extensions-plugin-0.1-SNAPSHOT.jar\"));\n\n    repository = new BatchPluginRepository(downloader, new Settings());\n\n    repository.doStart(Arrays.asList(checkstyle, checkstyleExt));\n\n    assertThat(repository.getPlugin(\"checkstyle\")).isNotNull();\n    assertThat(repository.getPlugin(\"checkstyleextensions\")).isNotNull();\n    assertThat(repository.getMetadata()).hasSize(2);\n    assertThat(repository.getMetadata(\"checkstyle\").getName()).isEqualTo(\"Checkstyle\");\n    assertThat(repository.getMetadata(\"checkstyleextensions\").getVersion()).isEqualTo(\"0.1-SNAPSHOT\");\n  }","commit_id":"61dcae545b51dba75728c0460d3aab541d0595e9","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"@Test\n  public void corePluginShouldNeverBeInBlackList() {\n    Set<String> whiteList = null;\n    Set<String> blackList = Sets.newHashSet(\"core\", \"findbugs\");\n\n    assertThat(BatchPluginRepository.isAccepted(\"core\", whiteList, blackList), Matchers.is(true));\n  }","id":55392,"modified_method":"@Test\n  public void corePluginShouldNeverBeInBlackList() {\n    Settings settings = new Settings()\n      .setProperty(CoreProperties.BATCH_EXCLUDE_PLUGINS, \"core,findbugs\");\n    BatchPluginRepository.PluginFilter filter = new BatchPluginRepository.PluginFilter(settings);\n    assertThat(filter.accepts(\"core\")).isTrue();\n  }","commit_id":"61dcae545b51dba75728c0460d3aab541d0595e9","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"@Test\n  public void shouldCheckWhitelist() {\n    Set<String> whiteList = Sets.newHashSet(\"checkstyle\", \"pmd\", \"findbugs\");\n    Set<String> blackList = null;\n\n    assertThat(BatchPluginRepository.isAccepted(\"checkstyle\", whiteList, blackList), Matchers.is(true));\n    assertThat(BatchPluginRepository.isAccepted(\"pmd\", whiteList, blackList), Matchers.is(true));\n    assertThat(BatchPluginRepository.isAccepted(\"cobertura\", whiteList, blackList), Matchers.is(false));\n  }","id":55393,"modified_method":"@Test\n  public void shouldCheckWhitelist() {\n    Settings settings = new Settings()\n      .setProperty(CoreProperties.BATCH_INCLUDE_PLUGINS, \"checkstyle,pmd,findbugs\");\n    BatchPluginRepository.PluginFilter filter = new BatchPluginRepository.PluginFilter(settings);\n    assertThat(filter.accepts(\"checkstyle\")).isTrue();\n    assertThat(filter.accepts(\"pmd\")).isTrue();\n    assertThat(filter.accepts(\"cobertura\")).isFalse();\n  }","commit_id":"61dcae545b51dba75728c0460d3aab541d0595e9","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"@Test\n  public void corePluginShouldAlwaysBeInWhiteList() {\n    Set<String> whiteList = Sets.newHashSet(\"checkstyle\", \"pmd\", \"findbugs\");\n    Set<String> blackList = null;\n\n    assertThat(BatchPluginRepository.isAccepted(\"core\", whiteList, blackList), Matchers.is(true));\n  }","id":55394,"modified_method":"@Test\n  public void corePluginShouldAlwaysBeInWhiteList() {\n    Settings settings = new Settings()\n      .setProperty(CoreProperties.BATCH_INCLUDE_PLUGINS, \"checkstyle,pmd,findbugs\");\n    BatchPluginRepository.PluginFilter filter = new BatchPluginRepository.PluginFilter(settings);\n    assertThat(filter.accepts(\"core\")).isTrue();\n  }","commit_id":"61dcae545b51dba75728c0460d3aab541d0595e9","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"@Test\n  public void whiteListShouldTakePrecedenceOverBlackList() {\n    Set<String> whiteList = Sets.newHashSet(\"checkstyle\", \"pmd\", \"findbugs\");\n    Set<String> blackList = Sets.newHashSet(\"cobertura\", \"pmd\");\n    assertThat(BatchPluginRepository.isAccepted(\"pmd\", whiteList, blackList), Matchers.is(true));\n  }","id":55395,"modified_method":"@Test\n  public void whiteListShouldTakePrecedenceOverBlackList() {\n    Settings settings = new Settings()\n      .setProperty(CoreProperties.BATCH_INCLUDE_PLUGINS, \"checkstyle,pmd,findbugs\")\n      .setProperty(CoreProperties.BATCH_EXCLUDE_PLUGINS, \"cobertura,pmd\");\n    BatchPluginRepository.PluginFilter filter = new BatchPluginRepository.PluginFilter(settings);\n    assertThat(filter.accepts(\"pmd\")).isTrue();\n  }","commit_id":"61dcae545b51dba75728c0460d3aab541d0595e9","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"@Test\n  public void shouldExcludePluginAndItsExtensions() throws IOException {\n    RemotePlugin checkstyle = new RemotePlugin(\"checkstyle\", true);\n    RemotePlugin checkstyleExt = new RemotePlugin(\"checkstyleextensions\", false);\n\n    PluginDownloader downloader = mock(PluginDownloader.class);\n    when(downloader.downloadPlugin(checkstyle)).thenReturn(copyFiles(\"sonar-checkstyle-plugin-2.8.jar\"));\n    when(downloader.downloadPlugin(checkstyleExt)).thenReturn(copyFiles(\"sonar-checkstyle-extensions-plugin-0.1-SNAPSHOT.jar\"));\n\n    Settings settings = new Settings();\n    settings.setProperty(CoreProperties.BATCH_EXCLUDE_PLUGINS, \"checkstyle\");\n    repository = new BatchPluginRepository(downloader, settings);\n\n    repository.doStart(Arrays.asList(checkstyle, checkstyleExt));\n\n    assertThat(repository.getMetadata().size(), Matchers.is(0));\n  }","id":55396,"modified_method":"@Test\n  public void shouldExcludePluginAndItsExtensions() throws IOException {\n    RemotePlugin checkstyle = new RemotePlugin(\"checkstyle\", true);\n    RemotePlugin checkstyleExt = new RemotePlugin(\"checkstyleextensions\", false);\n\n    PluginDownloader downloader = mock(PluginDownloader.class);\n    when(downloader.downloadPlugin(checkstyle)).thenReturn(copyFiles(\"sonar-checkstyle-plugin-2.8.jar\"));\n    when(downloader.downloadPlugin(checkstyleExt)).thenReturn(copyFiles(\"sonar-checkstyle-extensions-plugin-0.1-SNAPSHOT.jar\"));\n\n    Settings settings = new Settings();\n    settings.setProperty(CoreProperties.BATCH_EXCLUDE_PLUGINS, \"checkstyle\");\n    repository = new BatchPluginRepository(downloader, settings);\n\n    repository.doStart(Arrays.asList(checkstyle, checkstyleExt));\n\n    assertThat(repository.getMetadata()).isEmpty();\n  }","commit_id":"61dcae545b51dba75728c0460d3aab541d0595e9","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"@Test\n  public void shouldLoadPlugin() throws IOException {\n    RemotePlugin checkstyle = new RemotePlugin(\"checkstyle\", true);\n\n    PluginDownloader downloader = mock(PluginDownloader.class);\n    when(downloader.downloadPlugin(checkstyle)).thenReturn(copyFiles(\"sonar-checkstyle-plugin-2.8.jar\"));\n\n    repository = new BatchPluginRepository(downloader, new Settings());\n\n    repository.doStart(Arrays.asList(checkstyle));\n\n    assertThat(repository.getPlugin(\"checkstyle\"), not(nullValue()));\n    assertThat(repository.getMetadata().size(), Matchers.is(1));\n    assertThat(repository.getMetadata(\"checkstyle\").getName(), Matchers.is(\"Checkstyle\"));\n    assertThat(repository.getMetadata(\"checkstyle\").getDeployedFiles().size(), Matchers.is(4)); // plugin + 3 dependencies\n  }","id":55397,"modified_method":"@Test\n  public void shouldLoadPlugin() throws IOException {\n    RemotePlugin checkstyle = new RemotePlugin(\"checkstyle\", true);\n\n    PluginDownloader downloader = mock(PluginDownloader.class);\n    when(downloader.downloadPlugin(checkstyle)).thenReturn(copyFiles(\"sonar-checkstyle-plugin-2.8.jar\"));\n\n    repository = new BatchPluginRepository(downloader, new Settings());\n\n    repository.doStart(Arrays.asList(checkstyle));\n\n    assertThat(repository.getPlugin(\"checkstyle\")).isNotNull();\n    assertThat(repository.getMetadata()).hasSize(1);\n    assertThat(repository.getMetadata(\"checkstyle\").getName()).isEqualTo(\"Checkstyle\");\n    assertThat(repository.getMetadata(\"checkstyle\").getDeployedFiles()).hasSize(4); // plugin + 3 dependencies\n  }","commit_id":"61dcae545b51dba75728c0460d3aab541d0595e9","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"public void start() {\n    if (!settings.getBoolean(\"sonar.dryRun\")) {\n      checkCorrectServerId();\n      checkDatabaseStatus();\n    }\n  }","id":55398,"modified_method":"public void start() {\n    if (!settings.getBoolean(CoreProperties.DRY_RUN)) {\n      checkCorrectServerId();\n      checkDatabaseStatus();\n    }\n  }","commit_id":"61dcae545b51dba75728c0460d3aab541d0595e9","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"@Before\n  public void init() {\n    server = mock(ServerMetadata.class);\n    when(server.getURL()).thenReturn(\"http://localhost:9000\");\n    when(server.getServerId()).thenReturn(\"123456\");\n\n    settings = new Settings();\n    settings.setProperty(DatabaseProperties.PROP_URL, \"jdbc:postgresql://localhost/foo\");\n    settings.setProperty(DatabaseProperties.PROP_USER, \"bar\");\n    settings.setProperty(CoreProperties.SERVER_ID, \"123456\");\n    settings.setProperty(\"sonar.dryRun\", false);\n\n    databaseVersion = mock(DatabaseVersion.class);\n  }","id":55399,"modified_method":"@Before\n  public void init() {\n    server = mock(ServerMetadata.class);\n    when(server.getURL()).thenReturn(\"http://localhost:9000\");\n    when(server.getServerId()).thenReturn(\"123456\");\n\n    settings = new Settings();\n    settings.setProperty(DatabaseProperties.PROP_URL, \"jdbc:postgresql://localhost/foo\");\n    settings.setProperty(DatabaseProperties.PROP_USER, \"bar\");\n    settings.setProperty(CoreProperties.SERVER_ID, \"123456\");\n    settings.setProperty(CoreProperties.DRY_RUN, false);\n\n    databaseVersion = mock(DatabaseVersion.class);\n  }","commit_id":"61dcae545b51dba75728c0460d3aab541d0595e9","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"@Test\n  public void should_not_verify_compatibility_if_dry_run() {\n    settings.setProperty(CoreProperties.SERVER_ID, \"11111111\");\n    settings.setProperty(\"sonar.dryRun\", true);\n\n    new DatabaseCompatibility(databaseVersion, server, settings).start();\n\n    // no failure\n  }","id":55400,"modified_method":"@Test\n  public void should_not_verify_compatibility_if_dry_run() {\n    settings.setProperty(CoreProperties.SERVER_ID, \"11111111\");\n    settings.setProperty(CoreProperties.DRY_RUN, true);\n\n    new DatabaseCompatibility(databaseVersion, server, settings).start();\n\n    // no failure\n  }","commit_id":"61dcae545b51dba75728c0460d3aab541d0595e9","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"private void initDialect() {\n    dialect = DialectUtils.find(properties.getProperty(\"sonar.jdbc.dialect\"), properties.getProperty(\"sonar.jdbc.url\"));\n    if (dialect == null) {\n      throw new IllegalStateException(\"Can not guess the JDBC dialect. Please check the property sonar.jdbc.url.\");\n    }\n    if (H2.ID.equals(dialect.getId()) && !settings.getBoolean(\"sonar.dryRun\")) {\n      LoggerFactory.getLogger(DefaultDatabase.class).warn(\"H2 database should be used for evaluation purpose only\");\n    }\n    if (!properties.containsKey(\"sonar.jdbc.driverClassName\")) {\n      properties.setProperty(\"sonar.jdbc.driverClassName\", dialect.getDefaultDriverClassName());\n    }\n  }","id":55401,"modified_method":"private void initDialect() {\n    dialect = DialectUtils.find(properties.getProperty(\"sonar.jdbc.dialect\"), properties.getProperty(\"sonar.jdbc.url\"));\n    if (dialect == null) {\n      throw new IllegalStateException(\"Can not guess the JDBC dialect. Please check the property sonar.jdbc.url.\");\n    }\n    if (H2.ID.equals(dialect.getId()) && !settings.getBoolean(CoreProperties.DRY_RUN)) {\n      LoggerFactory.getLogger(DefaultDatabase.class).warn(\"H2 database should be used for evaluation purpose only\");\n    }\n    if (!properties.containsKey(\"sonar.jdbc.driverClassName\")) {\n      properties.setProperty(\"sonar.jdbc.driverClassName\", dialect.getDefaultDriverClassName());\n    }\n  }","commit_id":"61dcae545b51dba75728c0460d3aab541d0595e9","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"public void start() {\n    if (settings.getBoolean(\"sonar.dryRun\")) {\n      LOG.info(\"Dry run\");\n      File databaseFile = tempDirectories.getFile(\"\", \"dryrun.h2.db\");\n      downloadDatabase(reactor.getRoot().getKey(), databaseFile);\n\n      String databasePath = StringUtils.removeEnd(databaseFile.getAbsolutePath(), \".h2.db\");\n      replaceSettings(databasePath);\n    }\n  }","id":55402,"modified_method":"public void start() {\n    if (settings.getBoolean(CoreProperties.DRY_RUN)) {\n      LOG.info(\"Dry run\");\n      File databaseFile = tempDirectories.getFile(\"\", \"dryrun.h2.db\");\n      downloadDatabase(reactor.getRoot().getKey(), databaseFile);\n\n      String databasePath = StringUtils.removeEnd(databaseFile.getAbsolutePath(), \".h2.db\");\n      replaceSettings(databasePath);\n    }\n  }","commit_id":"61dcae545b51dba75728c0460d3aab541d0595e9","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"@Before\n  public void setUp() {\n    databaseFile = new File(\"/tmp/dryrun.h2.db\");\n    when(tempDirectories.getFile(\"\", \"dryrun.h2.db\")).thenReturn(databaseFile);\n    settings.setProperty(\"sonar.dryRun\", true);\n    dryRunDatabase = new DryRunDatabase(settings, server, tempDirectories, projectReactor, mock(ProjectReactorReady.class));\n  }","id":55403,"modified_method":"@Before\n  public void setUp() {\n    databaseFile = new File(\"/tmp/dryrun.h2.db\");\n    when(tempDirectories.getFile(\"\", \"dryrun.h2.db\")).thenReturn(databaseFile);\n    settings.setProperty(CoreProperties.DRY_RUN, true);\n    dryRunDatabase = new DryRunDatabase(settings, server, tempDirectories, projectReactor, mock(ProjectReactorReady.class));\n  }","commit_id":"61dcae545b51dba75728c0460d3aab541d0595e9","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"@Test\n  public void should_be_disabled_if_not_dry_run() {\n    settings.setProperty(\"sonar.dryRun\", false);\n    dryRunDatabase.start();\n\n    verifyZeroInteractions(tempDirectories, server);\n  }","id":55404,"modified_method":"@Test\n  public void should_be_disabled_if_not_dry_run() {\n    settings.setProperty(CoreProperties.DRY_RUN, false);\n    dryRunDatabase.start();\n\n    verifyZeroInteractions(tempDirectories, server);\n  }","commit_id":"61dcae545b51dba75728c0460d3aab541d0595e9","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"public void install(ComponentContainer container, String instantiationStrategy) {\n    boolean dryRun = settings.getBoolean(\"sonar.dryRun\");\n    for (Map.Entry<PluginMetadata, Plugin> entry : pluginRepository.getPluginsByMetadata().entrySet()) {\n      PluginMetadata metadata = entry.getKey();\n      Plugin plugin = entry.getValue();\n\n      container.addExtension(metadata, plugin);\n      for (Object extension : plugin.getExtensions()) {\n        installExtension(container, metadata, extension, dryRun, instantiationStrategy);\n      }\n    }\n\n    List<ExtensionProvider> providers = container.getComponentsByType(ExtensionProvider.class);\n    for (ExtensionProvider provider : providers) {\n      executeProvider(container, instantiationStrategy, dryRun, provider);\n    }\n  }","id":55405,"modified_method":"public void install(ComponentContainer container, String instantiationStrategy) {\n    boolean dryRun = settings.getBoolean(CoreProperties.DRY_RUN);\n    for (Map.Entry<PluginMetadata, Plugin> entry : pluginRepository.getPluginsByMetadata().entrySet()) {\n      PluginMetadata metadata = entry.getKey();\n      Plugin plugin = entry.getValue();\n\n      container.addExtension(metadata, plugin);\n      for (Object extension : plugin.getExtensions()) {\n        installExtension(container, metadata, extension, dryRun, instantiationStrategy);\n      }\n    }\n\n    List<ExtensionProvider> providers = container.getComponentsByType(ExtensionProvider.class);\n    for (ExtensionProvider provider : providers) {\n      executeProvider(container, instantiationStrategy, dryRun, provider);\n    }\n  }","commit_id":"61dcae545b51dba75728c0460d3aab541d0595e9","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"@VisibleForTesting\n  boolean verifyCrossProject(Project project, Logger logger) {\n    boolean crossProject = false;\n\n    if (settings.getBoolean(CoreProperties.CPD_CROSS_RPOJECT)) {\n      if (settings.getBoolean(\"sonar.dryRun\")) {\n        logger.info(\"Cross-project analysis disabled. Not supported on dry runs.\");\n      } else if (StringUtils.isNotBlank(project.getBranch())) {\n        logger.info(\"Cross-project analysis disabled. Not supported on project branches.\");\n      } else {\n        logger.info(\"Cross-project analysis enabled\");\n        crossProject = true;\n      }\n    } else {\n      logger.info(\"Cross-project analysis disabled\");\n    }\n    return crossProject;\n  }","id":55406,"modified_method":"@VisibleForTesting\n  boolean verifyCrossProject(Project project, Logger logger) {\n    boolean crossProject = false;\n\n    if (settings.getBoolean(CoreProperties.CPD_CROSS_RPOJECT)) {\n      if (settings.getBoolean(CoreProperties.DRY_RUN)) {\n        logger.info(\"Cross-project analysis disabled. Not supported on dry runs.\");\n      } else if (StringUtils.isNotBlank(project.getBranch())) {\n        logger.info(\"Cross-project analysis disabled. Not supported on project branches.\");\n      } else {\n        logger.info(\"Cross-project analysis enabled\");\n        crossProject = true;\n      }\n    } else {\n      logger.info(\"Cross-project analysis disabled\");\n    }\n    return crossProject;\n  }","commit_id":"61dcae545b51dba75728c0460d3aab541d0595e9","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"@Test\n  public void cross_project_should_be_disabled_on_dry_run() {\n    settings.setProperty(CoreProperties.CPD_CROSS_RPOJECT, \"true\");\n    settings.setProperty(\"sonar.dryRun\", \"true\");\n    assertThat(factory.verifyCrossProject(project, logger)).isFalse();\n    verify(logger).info(\"Cross-project analysis disabled. Not supported on dry runs.\");\n  }","id":55407,"modified_method":"@Test\n  public void cross_project_should_be_disabled_on_dry_run() {\n    settings.setProperty(CoreProperties.CPD_CROSS_RPOJECT, \"true\");\n    settings.setProperty(CoreProperties.DRY_RUN, \"true\");\n    assertThat(factory.verifyCrossProject(project, logger)).isFalse();\n    verify(logger).info(\"Cross-project analysis disabled. Not supported on dry runs.\");\n  }","commit_id":"61dcae545b51dba75728c0460d3aab541d0595e9","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"public void start() {\n    if (!settings.getBoolean(\"sonar.dryRun\")) {\n      LOG.info(\"Install JDBC driver\");\n      File jdbcDriver = new File(tempDirectories.getRoot(), \"jdbc-driver.jar\");\n      serverClient.download(\"/deploy/jdbc-driver.jar\", jdbcDriver);\n      classLoader = initClassloader(jdbcDriver);\n    }\n  }","id":55408,"modified_method":"public void start() {\n    if (!settings.getBoolean(CoreProperties.DRY_RUN)) {\n      LOG.info(\"Install JDBC driver\");\n      File jdbcDriver = new File(tempDirectories.getRoot(), \"jdbc-driver.jar\");\n      serverClient.download(\"/deploy/jdbc-driver.jar\", jdbcDriver);\n      classLoader = initClassloader(jdbcDriver);\n    }\n  }","commit_id":"61dcae545b51dba75728c0460d3aab541d0595e9","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"@Test\n  public void should_accept_empty_dirname() {\n    assertThat(tempDirectories.getDir(\"\")).isEqualTo(tempDirectories.getRoot());\n  }","id":55409,"modified_method":"@Test\n  public void should_accept_empty_dirname() throws IOException {\n    tempDirectories = new TempDirectories(reactor);\n    assertThat(tempDirectories.getDir(\"\")).isEqualTo(tempDirectories.getRoot());\n  }","commit_id":"61dcae545b51dba75728c0460d3aab541d0595e9","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"@Test\n  public void should_create_sub_directory() {\n    File findbugsDir = tempDirectories.getDir(\"findbugs\");\n    assertThat(findbugsDir).isNotNull();\n    assertThat(findbugsDir).exists();\n    assertThat(findbugsDir.getParentFile()).isEqualTo(tempDirectories.getRoot());\n    assertThat(findbugsDir.getName()).isEqualTo(\"findbugs\");\n  }","id":55410,"modified_method":"@Test\n  public void should_create_sub_directory() throws IOException {\n    tempDirectories = new TempDirectories(reactor);\n    File findbugsDir = tempDirectories.getDir(\"findbugs\");\n    assertThat(findbugsDir).isNotNull();\n    assertThat(findbugsDir).exists();\n    assertThat(findbugsDir.getParentFile()).isEqualTo(tempDirectories.getRoot());\n    assertThat(findbugsDir.getName()).isEqualTo(\"findbugs\");\n  }","commit_id":"61dcae545b51dba75728c0460d3aab541d0595e9","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"@Test\n  public void should_create_parent_directory() {\n    File file = tempDirectories.getFile(\"findbugs\", \"bcel.jar\");\n    assertThat(file).isNotNull();\n    assertThat(file.getParentFile().getName()).isEqualTo(\"findbugs\");\n  }","id":55411,"modified_method":"@Test\n  public void should_create_parent_directory() throws IOException {\n    tempDirectories = new TempDirectories(reactor);\n    File file = tempDirectories.getFile(\"findbugs\", \"bcel.jar\");\n    assertThat(file).isNotNull();\n    assertThat(file.getParentFile().getName()).isEqualTo(\"findbugs\");\n  }","commit_id":"61dcae545b51dba75728c0460d3aab541d0595e9","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"@Test\n  public void should_delete_temp_dir_on_shutdown() {\n    File root = tempDirectories.getRoot();\n    File findbugsDir = tempDirectories.getDir(\"findbugs\");\n    assertThat(findbugsDir).exists();\n\n    tempDirectories.stop();\n\n    assertThat(root).doesNotExist();\n    assertThat(findbugsDir).doesNotExist();\n  }","id":55412,"modified_method":"@Test\n  public void should_delete_temp_dir_on_shutdown() throws IOException {\n    tempDirectories = new TempDirectories(reactor);\n    File root = tempDirectories.getRoot();\n    File findbugsDir = tempDirectories.getDir(\"findbugs\");\n    assertThat(findbugsDir).exists();\n\n    tempDirectories.stop();\n\n    assertThat(root).doesNotExist();\n    assertThat(findbugsDir).doesNotExist();\n  }","commit_id":"61dcae545b51dba75728c0460d3aab541d0595e9","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"@Test\n  public void should_create_root_temp_dir() {\n    assertThat(tempDirectories.getRoot()).isNotNull();\n    assertThat(tempDirectories.getRoot()).exists();\n    assertThat(tempDirectories.getRoot()).isDirectory();\n    assertThat(tempDirectories.getRoot().getName()).isEqualTo(\"_tmp\");\n  }","id":55413,"modified_method":"@Test\n  public void should_create_root_temp_dir() throws IOException {\n    tempDirectories = new TempDirectories(reactor);\n    assertThat(tempDirectories.getRoot()).isNotNull();\n    assertThat(tempDirectories.getRoot()).exists();\n    assertThat(tempDirectories.getRoot()).isDirectory();\n    assertThat(tempDirectories.getRoot().getName()).isEqualTo(\"_tmp\");\n  }","commit_id":"61dcae545b51dba75728c0460d3aab541d0595e9","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"@Before\n  public void before() throws IOException {\n    ProjectDefinition project = ProjectDefinition.create().setKey(\"foo\").setWorkDir(folder.newFolder());\n    ProjectReactor reactor = new ProjectReactor(project);\n    tempDirectories = new TempDirectories(reactor);\n  }","id":55414,"modified_method":"@Before\n  public void before() throws IOException {\n    workDir = folder.newFolder();\n    ProjectDefinition project = ProjectDefinition.create().setKey(\"foo\").setWorkDir(workDir);\n    reactor = new ProjectReactor(project);\n  }","commit_id":"61dcae545b51dba75728c0460d3aab541d0595e9","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"public static synchronized Injector getInjector(CConfiguration conf) {\n    if (injector == null) {\n      configuration = conf;\n      configuration.set(Constants.CFG_LOCAL_DATA_DIR, TEMP_FOLDER.newFolder(\"data\").getAbsolutePath());\n      configuration.set(Constants.AppFabric.OUTPUT_DIR, TEMP_FOLDER.newFolder(\"app\").getAbsolutePath());\n      configuration.set(Constants.AppFabric.TEMP_DIR, TEMP_FOLDER.newFolder(\"temp\").getAbsolutePath());\n      configuration.set(Constants.AppFabric.REST_PORT, Integer.toString(Networks.getRandomPort()));\n      configuration.setBoolean(Constants.Dangerous.UNRECOVERABLE_RESET, true);\n      injector = Guice.createInjector(new AppFabricTestModule(configuration));\n      injector.getInstance(InMemoryTransactionManager.class).startAndWait();\n      injector.getInstance(SchedulerService.class).startAndWait();\n\n      LogAppenderInitializer logAppenderInitializer = injector.getInstance(LogAppenderInitializer.class);\n      logAppenderInitializer.initialize();\n    }\n    return injector;\n  }","id":55415,"modified_method":"public static synchronized Injector getInjector(CConfiguration conf) {\n    if (injector == null) {\n      configuration = conf;\n      configuration.set(Constants.CFG_LOCAL_DATA_DIR, TEMP_FOLDER.newFolder(\"data\").getAbsolutePath());\n      configuration.set(Constants.AppFabric.REST_PORT, Integer.toString(Networks.getRandomPort()));\n      configuration.setBoolean(Constants.Dangerous.UNRECOVERABLE_RESET, true);\n      injector = Guice.createInjector(new AppFabricTestModule(configuration));\n      injector.getInstance(InMemoryTransactionManager.class).startAndWait();\n      injector.getInstance(SchedulerService.class).startAndWait();\n\n      LogAppenderInitializer logAppenderInitializer = injector.getInstance(LogAppenderInitializer.class);\n      logAppenderInitializer.initialize();\n    }\n    return injector;\n  }","commit_id":"932c9d42b9d45372116daa0078113f7505c61189","url":"https://github.com/caskdata/cdap"},{"original_method":"public AppFabricTestModule(CConfiguration configuration) {\n    this.cConf = configuration;\n    hConf = new Configuration();\n    hConf.addResource(\"mapred-site-local.xml\");\n    hConf.reloadConfiguration();\n  }","id":55416,"modified_method":"public AppFabricTestModule(CConfiguration configuration) {\n    this.cConf = configuration;\n\n    File localDataDir = new File(cConf.get(Constants.CFG_LOCAL_DATA_DIR));\n\n    hConf = new Configuration();\n    hConf.addResource(\"mapred-site-local.xml\");\n    hConf.reloadConfiguration();\n    hConf.set(\"hadoop.tmp.dir\", new File(localDataDir, cConf.get(Constants.AppFabric.TEMP_DIR)).getAbsolutePath());\n    hConf.set(Constants.CFG_LOCAL_DATA_DIR, localDataDir.getAbsolutePath());\n    hConf.set(Constants.AppFabric.OUTPUT_DIR, cConf.get(Constants.AppFabric.OUTPUT_DIR));\n  }","commit_id":"932c9d42b9d45372116daa0078113f7505c61189","url":"https://github.com/caskdata/cdap"},{"original_method":"@Override\n  public synchronized RuntimeInfo run(Program program, ProgramOptions options) {\n    try {\n      // TODO: fix possible issue where two run() calls use the same unpackedLocation\n      File destinationUnpackedJarDir = new File(\n        configuration.get(Constants.AppFabric.TEMP_DIR) + \"/\" + program.getName() + \"-\" + System.currentTimeMillis());\n      Preconditions.checkState(!destinationUnpackedJarDir.exists());\n      destinationUnpackedJarDir.mkdirs();\n\n      Program bundleJarProgram = Programs.createWithUnpack(program.getJarLocation(), destinationUnpackedJarDir);\n      return super.run(bundleJarProgram, options);\n    } catch (IOException e) {\n      throw new RuntimeException(\"Error unpackaging program \" + program.getName());\n    }\n  }","id":55417,"modified_method":"@Override\n  public synchronized RuntimeInfo run(Program program, ProgramOptions options) {\n    try {\n      File tmpDir = new File(cConf.get(Constants.CFG_LOCAL_DATA_DIR), cConf.get(Constants.AppFabric.TEMP_DIR));\n      final File destinationUnpackedJarDir = new File(tmpDir, String.format(\"%s.%s\",\n                                                                      program.getName(), UUID.randomUUID().toString()));\n      Preconditions.checkState(!destinationUnpackedJarDir.exists());\n      destinationUnpackedJarDir.mkdirs();\n\n      Program bundleJarProgram = Programs.createWithUnpack(program.getJarLocation(), destinationUnpackedJarDir);\n      RuntimeInfo info = super.run(bundleJarProgram, options);\n      info.getController().addListener(new AbstractListener() {\n        @Override\n        public void stopped() {\n          try {\n            FileUtils.deleteDirectory(destinationUnpackedJarDir);\n          } catch (IOException e) {\n            LOG.warn(\"Failed to cleanup temporary program directory {}.\", destinationUnpackedJarDir, e);\n          }\n        }\n\n        @Override\n        public void error(Throwable cause) {\n          try {\n            FileUtils.deleteDirectory(destinationUnpackedJarDir);\n          } catch (IOException e) {\n            LOG.warn(\"Failed to cleanup temporary program directory {}.\", destinationUnpackedJarDir, e);\n          }\n        }\n      }, ExecutorUtils.newThreadExecutor(Threads.createDaemonThreadFactory(\"program-clean-up-%d\")));\n\n      return info;\n\n    } catch (IOException e) {\n      throw new RuntimeException(\"Error unpackaging program \" + program.getName());\n    }\n  }","commit_id":"932c9d42b9d45372116daa0078113f7505c61189","url":"https://github.com/caskdata/cdap"},{"original_method":"@Inject\n  public InMemoryProgramRuntimeService(ProgramRunnerFactory programRunnerFactory,\n                                       CConfiguration configuration) {\n    super(programRunnerFactory);\n    this.configuration = configuration;\n  }","id":55418,"modified_method":"@Inject\n  public InMemoryProgramRuntimeService(ProgramRunnerFactory programRunnerFactory, CConfiguration cConf) {\n    super(programRunnerFactory);\n    this.cConf = cConf;\n  }","commit_id":"932c9d42b9d45372116daa0078113f7505c61189","url":"https://github.com/caskdata/cdap"},{"original_method":"/**\n   * Set up the distributed cache by localizing the resources, and updating\n   * the configuration with references to the localized resources.\n   * @param conf\n   * @throws IOException\n   */\n  public void setup(JobConf conf) throws IOException {\n\n    String dir = String.format(\"%s/%s/%s\", System.getProperty(\"user.dir\"),\n                                           conf.get(Constants.CFG_LOCAL_DATA_DIR),\n                                           conf.get(Constants.AppFabric.OUTPUT_DIR));\n    File workDir = new File(dir);\n\n    // Generate YARN local resources objects corresponding to the distributed\n    // cache configuration\n    Map<String, LocalResource> localResources =\n      new LinkedHashMap<String, LocalResource>();\n    MRApps.setupDistributedCache(conf, localResources);\n    // Generating unique numbers for FSDownload.\n    AtomicLong uniqueNumberGenerator =\n      new AtomicLong(System.currentTimeMillis());\n\n    // Find which resources are to be put on the local classpath\n    Map<String, Path> classpaths = new HashMap<String, Path>();\n    Path[] archiveClassPaths = DistributedCache.getArchiveClassPaths(conf);\n    if (archiveClassPaths != null) {\n      for (Path p : archiveClassPaths) {\n        FileSystem remoteFS = p.getFileSystem(conf);\n        p = remoteFS.resolvePath(p.makeQualified(remoteFS.getUri(),\n                                                 remoteFS.getWorkingDirectory()));\n        classpaths.put(p.toUri().getPath().toString(), p);\n      }\n    }\n    Path[] fileClassPaths = DistributedCache.getFileClassPaths(conf);\n    if (fileClassPaths != null) {\n      for (Path p : fileClassPaths) {\n        FileSystem remoteFS = p.getFileSystem(conf);\n        p = remoteFS.resolvePath(p.makeQualified(remoteFS.getUri(),\n                                                 remoteFS.getWorkingDirectory()));\n        classpaths.put(p.toUri().getPath().toString(), p);\n      }\n    }\n\n    // Localize the resources\n    LocalDirAllocator localDirAllocator =\n      new LocalDirAllocator(MRConfig.LOCAL_DIR);\n    FileContext localFSFileContext = FileContext.getLocalFSFileContext();\n    UserGroupInformation ugi = UserGroupInformation.getCurrentUser();\n\n    ExecutorService exec = null;\n    try {\n      ThreadFactory tf = new ThreadFactoryBuilder()\n        .setNameFormat(\"LocalDistributedCacheManagerWithFix Downloader #%d\")\n        .build();\n      exec = Executors.newCachedThreadPool(tf);\n      Path destPath = localDirAllocator.getLocalPathForWrite(\".\", conf);\n      Map<LocalResource, Future<Path>> resourcesToPaths = Maps.newHashMap();\n      for (LocalResource resource : localResources.values()) {\n        Callable<Path> download =\n          new FSDownload(localFSFileContext, ugi, conf,\n                         new Path(destPath, Long.toString(uniqueNumberGenerator.incrementAndGet())),\n                         resource);\n        Future<Path> future = exec.submit(download);\n        resourcesToPaths.put(resource, future);\n      }\n      for (Entry<String, LocalResource> entry : localResources.entrySet()) {\n        LocalResource resource = entry.getValue();\n        Path path;\n        try {\n          path = resourcesToPaths.get(resource).get();\n        } catch (InterruptedException e) {\n          throw new IOException(e);\n        } catch (ExecutionException e) {\n          throw new IOException(e);\n        }\n        String pathString = path.toUri().toString();\n        String link = entry.getKey();\n        String target = new File(path.toUri()).getPath();\n        symlink(workDir, target, link);\n\n        if (resource.getType() == LocalResourceType.ARCHIVE) {\n          localArchives.add(pathString);\n        } else if (resource.getType() == LocalResourceType.FILE) {\n          localFiles.add(pathString);\n        } else if (resource.getType() == LocalResourceType.PATTERN) {\n          //PATTERN is not currently used in local mode\n          throw new IllegalArgumentException(\"Resource type PATTERN is not \" +\n                                               \"implemented yet. \" + resource.getResource());\n        }\n        Path resourcePath;\n        try {\n          resourcePath = ConverterUtils.getPathFromYarnURL(resource.getResource());\n        } catch (URISyntaxException e) {\n          throw new IOException(e);\n        }\n        LOG.info(String.format(\"Localized %s as %s\", resourcePath, path));\n        String cp = resourcePath.toUri().getPath();\n        if (classpaths.keySet().contains(cp)) {\n          localClasspaths.add(path.toUri().getPath().toString());\n        }\n      }\n    } finally {\n      if (exec != null) {\n        exec.shutdown();\n      }\n    }\n    // Update the configuration object with localized data.\n    if (!localArchives.isEmpty()) {\n      conf.set(MRJobConfig.CACHE_LOCALARCHIVES, StringUtils\n        .arrayToString(localArchives.toArray(new String[localArchives.size()])));\n    }\n    if (!localFiles.isEmpty()) {\n      conf.set(MRJobConfig.CACHE_LOCALFILES, StringUtils\n        .arrayToString(localFiles.toArray(new String[localArchives.size()])));\n    }\n    setupCalled = true;\n  }","id":55419,"modified_method":"/**\n   * Set up the distributed cache by localizing the resources, and updating\n   * the configuration with references to the localized resources.\n   * @param conf\n   * @throws IOException\n   */\n  public void setup(JobConf conf) throws IOException {\n\n    File workDir = new File(new File(conf.get(Constants.CFG_LOCAL_DATA_DIR)), conf.get(Constants.AppFabric.OUTPUT_DIR));\n\n    // Generate YARN local resources objects corresponding to the distributed\n    // cache configuration\n    Map<String, LocalResource> localResources =\n      new LinkedHashMap<String, LocalResource>();\n    MRApps.setupDistributedCache(conf, localResources);\n    // Generating unique numbers for FSDownload.\n    AtomicLong uniqueNumberGenerator =\n      new AtomicLong(System.currentTimeMillis());\n\n    // Find which resources are to be put on the local classpath\n    Map<String, Path> classpaths = new HashMap<String, Path>();\n    Path[] archiveClassPaths = DistributedCache.getArchiveClassPaths(conf);\n    if (archiveClassPaths != null) {\n      for (Path p : archiveClassPaths) {\n        FileSystem remoteFS = p.getFileSystem(conf);\n        p = remoteFS.resolvePath(p.makeQualified(remoteFS.getUri(),\n                                                 remoteFS.getWorkingDirectory()));\n        classpaths.put(p.toUri().getPath().toString(), p);\n      }\n    }\n    Path[] fileClassPaths = DistributedCache.getFileClassPaths(conf);\n    if (fileClassPaths != null) {\n      for (Path p : fileClassPaths) {\n        FileSystem remoteFS = p.getFileSystem(conf);\n        p = remoteFS.resolvePath(p.makeQualified(remoteFS.getUri(),\n                                                 remoteFS.getWorkingDirectory()));\n        classpaths.put(p.toUri().getPath().toString(), p);\n      }\n    }\n\n    // Localize the resources\n    LocalDirAllocator localDirAllocator =\n      new LocalDirAllocator(MRConfig.LOCAL_DIR);\n    FileContext localFSFileContext = FileContext.getLocalFSFileContext();\n    UserGroupInformation ugi = UserGroupInformation.getCurrentUser();\n\n    ExecutorService exec = null;\n    try {\n      ThreadFactory tf = new ThreadFactoryBuilder()\n        .setNameFormat(\"LocalDistributedCacheManagerWithFix Downloader #%d\")\n        .build();\n      exec = Executors.newCachedThreadPool(tf);\n      Path destPath = localDirAllocator.getLocalPathForWrite(\".\", conf);\n      Map<LocalResource, Future<Path>> resourcesToPaths = Maps.newHashMap();\n      for (LocalResource resource : localResources.values()) {\n        Callable<Path> download =\n          new FSDownload(localFSFileContext, ugi, conf,\n                         new Path(destPath, Long.toString(uniqueNumberGenerator.incrementAndGet())),\n                         resource);\n        Future<Path> future = exec.submit(download);\n        resourcesToPaths.put(resource, future);\n      }\n      for (Entry<String, LocalResource> entry : localResources.entrySet()) {\n        LocalResource resource = entry.getValue();\n        Path path;\n        try {\n          path = resourcesToPaths.get(resource).get();\n        } catch (InterruptedException e) {\n          throw new IOException(e);\n        } catch (ExecutionException e) {\n          throw new IOException(e);\n        }\n        String pathString = path.toUri().toString();\n        String link = entry.getKey();\n        String target = new File(path.toUri()).getPath();\n        symlink(workDir, target, link);\n\n        if (resource.getType() == LocalResourceType.ARCHIVE) {\n          localArchives.add(pathString);\n        } else if (resource.getType() == LocalResourceType.FILE) {\n          localFiles.add(pathString);\n        } else if (resource.getType() == LocalResourceType.PATTERN) {\n          //PATTERN is not currently used in local mode\n          throw new IllegalArgumentException(\"Resource type PATTERN is not \" +\n                                               \"implemented yet. \" + resource.getResource());\n        }\n        Path resourcePath;\n        try {\n          resourcePath = ConverterUtils.getPathFromYarnURL(resource.getResource());\n        } catch (URISyntaxException e) {\n          throw new IOException(e);\n        }\n        LOG.info(String.format(\"Localized %s as %s\", resourcePath, path));\n        String cp = resourcePath.toUri().getPath();\n        if (classpaths.keySet().contains(cp)) {\n          localClasspaths.add(path.toUri().getPath().toString());\n        }\n      }\n    } finally {\n      if (exec != null) {\n        exec.shutdown();\n      }\n    }\n    // Update the configuration object with localized data.\n    if (!localArchives.isEmpty()) {\n      conf.set(MRJobConfig.CACHE_LOCALARCHIVES, StringUtils\n        .arrayToString(localArchives.toArray(new String[localArchives.size()])));\n    }\n    if (!localFiles.isEmpty()) {\n      conf.set(MRJobConfig.CACHE_LOCALFILES, StringUtils\n        .arrayToString(localFiles.toArray(new String[localArchives.size()])));\n    }\n    setupCalled = true;\n  }","commit_id":"932c9d42b9d45372116daa0078113f7505c61189","url":"https://github.com/caskdata/cdap"},{"original_method":"@AfterClass\n  public static final void finish() {\n    metricsQueryService.stopAndWait();\n    metricsCollectionService.startAndWait();\n    datasetService.stopAndWait();\n    schedulerService.stopAndWait();\n    exploreExecutorService.stopAndWait();\n    logAppenderInitializer.close();\n    cleanDir(testAppDir);\n  }","id":55420,"modified_method":"@AfterClass\n  public static final void finish() {\n    metricsQueryService.stopAndWait();\n    metricsCollectionService.startAndWait();\n    datasetService.stopAndWait();\n    schedulerService.stopAndWait();\n    exploreExecutorService.stopAndWait();\n    logAppenderInitializer.close();\n  }","commit_id":"932c9d42b9d45372116daa0078113f7505c61189","url":"https://github.com/caskdata/cdap"},{"original_method":"@BeforeClass\n  public static void init() throws Exception {\n    testAppDir = tmpFolder.newFolder();\n\n    File appDir = new File(testAppDir, \"app\");\n    File datasetDir = new File(testAppDir, \"dataset\");\n    File tmpDir = new File(testAppDir, \"tmp\");\n\n    appDir.mkdirs();\n    datasetDir.mkdirs();\n    tmpDir.mkdirs();\n\n    CConfiguration configuration = CConfiguration.create();\n\n    configuration.set(Constants.AppFabric.OUTPUT_DIR, appDir.getAbsolutePath());\n    configuration.set(Constants.AppFabric.TEMP_DIR, tmpDir.getAbsolutePath());\n    configuration.set(Constants.Dataset.Manager.OUTPUT_DIR, datasetDir.getAbsolutePath());\n    configuration.set(Constants.Dataset.Manager.ADDRESS, \"localhost\");\n    configuration.set(MetricsConstants.ConfigKeys.SERVER_PORT, Integer.toString(Networks.getRandomPort()));\n    configuration.set(Constants.CFG_LOCAL_DATA_DIR, tmpFolder.newFolder(\"data\").getAbsolutePath());\n    configuration.setBoolean(Constants.Dangerous.UNRECOVERABLE_RESET, true);\n    configuration.setBoolean(Constants.Explore.CFG_EXPLORE_ENABLED, true);\n    configuration.set(Constants.Explore.CFG_LOCAL_DATA_DIR,\n                      tmpFolder.newFolder(\"hive\").getAbsolutePath());\n\n    // Windows specific requirements\n    if (OSDetector.isWindows()) {\n\n      File binDir = new File(tmpDir, \"bin\");\n      binDir.mkdir();\n\n      copyTempFile(\"hadoop.dll\", tmpDir);\n      copyTempFile(\"winutils.exe\", binDir);\n      System.setProperty(\"hadoop.home.dir\", tmpDir.getAbsolutePath());\n      System.load(new File(tmpDir, \"hadoop.dll\").getAbsolutePath());\n    }\n\n    injector = Guice.createInjector(\n      createDataFabricModule(configuration),\n      new DataSetsModules().getInMemoryModule(),\n      new DataSetServiceModules().getInMemoryModule(),\n      new ConfigModule(configuration),\n      new IOModule(),\n      new AuthModule(),\n      new LocationRuntimeModule().getInMemoryModules(),\n      new DiscoveryRuntimeModule().getInMemoryModules(),\n      new AppFabricServiceRuntimeModule().getInMemoryModules(),\n      new ServiceStoreModules().getInMemoryModule(),\n      new ProgramRunnerRuntimeModule().getInMemoryModules(),\n      new StreamServiceModule() {\n        @Override\n        protected void configure() {\n          super.configure();\n          bind(StreamHandler.class).in(Scopes.SINGLETON);\n          bind(StreamFileJanitorService.class).to(LocalStreamFileJanitorService.class).in(Scopes.SINGLETON);\n          expose(StreamHandler.class);\n        }\n      },\n      new TestMetricsClientModule(),\n      new MetricsHandlerModule(),\n      new LoggingModules().getInMemoryModules(),\n      new ExploreRuntimeModule().getInMemoryModules(),\n      new AbstractModule() {\n        @Override\n        protected void configure() {\n          install(new FactoryModuleBuilder()\n                    .implement(ApplicationManager.class, DefaultApplicationManager.class)\n                    .build(ApplicationManagerFactory.class));\n          install(new FactoryModuleBuilder()\n                    .implement(StreamWriter.class, DefaultStreamWriter.class)\n                    .build(StreamWriterFactory.class));\n          install(new FactoryModuleBuilder()\n                    .implement(ProcedureClient.class, DefaultProcedureClient.class)\n                    .build(ProcedureClientFactory.class));\n        }\n      }\n    );\n    injector.getInstance(InMemoryTransactionManager.class).startAndWait();\n    locationFactory = injector.getInstance(LocationFactory.class);\n    metricsQueryService = injector.getInstance(MetricsQueryService.class);\n    metricsQueryService.startAndWait();\n    metricsCollectionService = injector.getInstance(MetricsCollectionService.class);\n    metricsCollectionService.startAndWait();\n    logAppenderInitializer = injector.getInstance(LogAppenderInitializer.class);\n    logAppenderInitializer.initialize();\n    httpHandler = injector.getInstance(AppFabricHttpHandler.class);\n    datasetService = injector.getInstance(DatasetService.class);\n    datasetService.startAndWait();\n    DatasetFramework dsFramework = injector.getInstance(DatasetFramework.class);\n    datasetFramework =\n      new NamespacedDatasetFramework(dsFramework,\n                                     new ReactorDatasetNamespace(configuration,  DataSetAccessor.Namespace.USER));\n    schedulerService = injector.getInstance(SchedulerService.class);\n    schedulerService.startAndWait();\n    discoveryClient = injector.getInstance(DiscoveryServiceClient.class);\n    exploreExecutorService = injector.getInstance(ExploreExecutorService.class);\n    exploreExecutorService.startAndWait();\n  }","id":55421,"modified_method":"@BeforeClass\n  public static void init() throws Exception {\n    File localDataDir = tmpFolder.newFolder();\n    CConfiguration cConf = CConfiguration.create();\n\n    cConf.set(Constants.Dataset.Manager.ADDRESS, \"localhost\");\n    cConf.set(MetricsConstants.ConfigKeys.SERVER_PORT, Integer.toString(Networks.getRandomPort()));\n\n    cConf.set(Constants.CFG_LOCAL_DATA_DIR, localDataDir.getAbsolutePath());\n    cConf.setBoolean(Constants.Dangerous.UNRECOVERABLE_RESET, true);\n    cConf.setBoolean(Constants.Explore.CFG_EXPLORE_ENABLED, true);\n    cConf.set(Constants.Explore.CFG_LOCAL_DATA_DIR,\n                      tmpFolder.newFolder(\"hive\").getAbsolutePath());\n\n    Configuration hConf = new Configuration();\n    hConf.addResource(\"mapred-site-local.xml\");\n    hConf.reloadConfiguration();\n    hConf.set(Constants.CFG_LOCAL_DATA_DIR, localDataDir.getAbsolutePath());\n    hConf.set(Constants.AppFabric.OUTPUT_DIR, cConf.get(Constants.AppFabric.OUTPUT_DIR));\n    hConf.set(\"hadoop.tmp.dir\", new File(localDataDir, cConf.get(Constants.AppFabric.TEMP_DIR)).getAbsolutePath());\n\n    // Windows specific requirements\n    if (OSDetector.isWindows()) {\n      File tmpDir = tmpFolder.newFolder();\n      File binDir = new File(tmpDir, \"bin\");\n      binDir.mkdir();\n\n      copyTempFile(\"hadoop.dll\", tmpDir);\n      copyTempFile(\"winutils.exe\", binDir);\n      System.setProperty(\"hadoop.home.dir\", tmpDir.getAbsolutePath());\n      System.load(new File(tmpDir, \"hadoop.dll\").getAbsolutePath());\n    }\n\n    injector = Guice.createInjector(\n      createDataFabricModule(cConf),\n      new DataSetsModules().getInMemoryModule(),\n      new DataSetServiceModules().getInMemoryModule(),\n      new ConfigModule(cConf, hConf),\n      new IOModule(),\n      new AuthModule(),\n      new LocationRuntimeModule().getInMemoryModules(),\n      new DiscoveryRuntimeModule().getInMemoryModules(),\n      new AppFabricServiceRuntimeModule().getInMemoryModules(),\n      new ServiceStoreModules().getInMemoryModule(),\n      new ProgramRunnerRuntimeModule().getInMemoryModules(),\n      new StreamServiceModule() {\n        @Override\n        protected void configure() {\n          super.configure();\n          bind(StreamHandler.class).in(Scopes.SINGLETON);\n          bind(StreamFileJanitorService.class).to(LocalStreamFileJanitorService.class).in(Scopes.SINGLETON);\n          expose(StreamHandler.class);\n        }\n      },\n      new TestMetricsClientModule(),\n      new MetricsHandlerModule(),\n      new LoggingModules().getInMemoryModules(),\n      new ExploreRuntimeModule().getInMemoryModules(),\n      new AbstractModule() {\n        @Override\n        protected void configure() {\n          install(new FactoryModuleBuilder()\n                    .implement(ApplicationManager.class, DefaultApplicationManager.class)\n                    .build(ApplicationManagerFactory.class));\n          install(new FactoryModuleBuilder()\n                    .implement(StreamWriter.class, DefaultStreamWriter.class)\n                    .build(StreamWriterFactory.class));\n          install(new FactoryModuleBuilder()\n                    .implement(ProcedureClient.class, DefaultProcedureClient.class)\n                    .build(ProcedureClientFactory.class));\n        }\n      }\n    );\n    injector.getInstance(InMemoryTransactionManager.class).startAndWait();\n    locationFactory = injector.getInstance(LocationFactory.class);\n    metricsQueryService = injector.getInstance(MetricsQueryService.class);\n    metricsQueryService.startAndWait();\n    metricsCollectionService = injector.getInstance(MetricsCollectionService.class);\n    metricsCollectionService.startAndWait();\n    logAppenderInitializer = injector.getInstance(LogAppenderInitializer.class);\n    logAppenderInitializer.initialize();\n    httpHandler = injector.getInstance(AppFabricHttpHandler.class);\n    datasetService = injector.getInstance(DatasetService.class);\n    datasetService.startAndWait();\n    DatasetFramework dsFramework = injector.getInstance(DatasetFramework.class);\n    datasetFramework =\n      new NamespacedDatasetFramework(dsFramework,\n                                     new ReactorDatasetNamespace(cConf,  DataSetAccessor.Namespace.USER));\n    schedulerService = injector.getInstance(SchedulerService.class);\n    schedulerService.startAndWait();\n    discoveryClient = injector.getInstance(DiscoveryServiceClient.class);\n    exploreExecutorService = injector.getInstance(ExploreExecutorService.class);\n    exploreExecutorService.startAndWait();\n  }","commit_id":"932c9d42b9d45372116daa0078113f7505c61189","url":"https://github.com/caskdata/cdap"},{"original_method":"/**\n   * The root of all goodness!\n   *\n   * @param args Our cmdline arguments\n   */\n  public static void main(String[] args) {\n    CConfiguration configuration = CConfiguration.create();\n\n    // Single node use persistent data fabric by default\n    boolean inMemory = false;\n    String webAppPath = WebCloudAppService.WEB_APP;\n\n    if (args.length > 0) {\n      if (\"--help\".equals(args[0]) || \"-h\".equals(args[0])) {\n        usage(false);\n        return;\n      } else if (\"--in-memory\".equals(args[0])) {\n        inMemory = true;\n      } else if (\"--web-app-path\".equals(args[0])) {\n        webAppPath = args[1];\n      } else {\n        usage(true);\n      }\n    }\n\n\n    // This is needed to use LocalJobRunner with fixes (we have it in app-fabric).\n    // For the modified local job runner\n    Configuration hConf = new Configuration();\n    hConf.addResource(\"mapred-site-local.xml\");\n    hConf.reloadConfiguration();\n    // Due to incredibly stupid design of Limits class, once it is initialized, it keeps its settings. We\n    // want to make sure it uses our settings in this hConf, so we have to force it initialize here before\n    // someone else initializes it.\n    Limits.init(hConf);\n\n    String localDataDir = configuration.get(Constants.CFG_LOCAL_DATA_DIR);\n    hConf.set(Constants.CFG_LOCAL_DATA_DIR, localDataDir);\n    hConf.set(Constants.AppFabric.OUTPUT_DIR, configuration.get(Constants.AppFabric.OUTPUT_DIR));\n\n    // Windows specific requirements\n    if (OSDetector.isWindows()) {\n      String userDir = System.getProperty(\"user.dir\");\n      System.load(userDir + \"/lib/native/hadoop.dll\");\n      hConf.set(\"hadoop.tmp.dir\", userDir + \"/\" + localDataDir + \"/temp\");\n    }\n\n    //Run gateway on random port and forward using router.\n    configuration.setInt(Constants.Gateway.PORT, 0);\n\n    //Run dataset service on random port\n    List<Module> modules = inMemory ? createInMemoryModules(configuration, hConf)\n                                    : createPersistentModules(configuration, hConf);\n\n    SingleNodeMain main = null;\n    try {\n      main = new SingleNodeMain(modules, configuration, webAppPath);\n      main.startUp(args);\n    } catch (Throwable e) {\n      System.err.println(\"Failed to start server. \" + e.getMessage());\n      LOG.error(\"Failed to start server\", e);\n      if (main != null) {\n        main.shutDown();\n      }\n      System.exit(-2);\n    }\n  }","id":55422,"modified_method":"/**\n   * The root of all goodness!\n   *\n   * @param args Our cmdline arguments\n   */\n  public static void main(String[] args) {\n    CConfiguration cConf = CConfiguration.create();\n\n    // Single node use persistent data fabric by default\n    boolean inMemory = false;\n    String webAppPath = WebCloudAppService.WEB_APP;\n\n    if (args.length > 0) {\n      if (\"--help\".equals(args[0]) || \"-h\".equals(args[0])) {\n        usage(false);\n        return;\n      } else if (\"--in-memory\".equals(args[0])) {\n        inMemory = true;\n      } else if (\"--web-app-path\".equals(args[0])) {\n        webAppPath = args[1];\n      } else {\n        usage(true);\n      }\n    }\n\n\n    // This is needed to use LocalJobRunner with fixes (we have it in app-fabric).\n    // For the modified local job runner\n    Configuration hConf = new Configuration();\n    hConf.addResource(\"mapred-site-local.xml\");\n    hConf.reloadConfiguration();\n    // Due to incredibly stupid design of Limits class, once it is initialized, it keeps its settings. We\n    // want to make sure it uses our settings in this hConf, so we have to force it initialize here before\n    // someone else initializes it.\n    Limits.init(hConf);\n\n    File localDataDir = new File(cConf.get(Constants.CFG_LOCAL_DATA_DIR));\n    hConf.set(Constants.CFG_LOCAL_DATA_DIR, localDataDir.getAbsolutePath());\n    hConf.set(Constants.AppFabric.OUTPUT_DIR, cConf.get(Constants.AppFabric.OUTPUT_DIR));\n    hConf.set(\"hadoop.tmp.dir\", new File(localDataDir, cConf.get(Constants.AppFabric.TEMP_DIR)).getAbsolutePath());\n\n    // Windows specific requirements\n    if (OSDetector.isWindows()) {\n      String userDir = System.getProperty(\"user.dir\");\n      System.load(userDir + \"/lib/native/hadoop.dll\");\n    }\n\n    //Run gateway on random port and forward using router.\n    cConf.setInt(Constants.Gateway.PORT, 0);\n\n    //Run dataset service on random port\n    List<Module> modules = inMemory ? createInMemoryModules(cConf, hConf)\n                                    : createPersistentModules(cConf, hConf);\n\n    SingleNodeMain main = null;\n    try {\n      main = new SingleNodeMain(modules, cConf, webAppPath);\n      main.startUp(args);\n    } catch (Throwable e) {\n      System.err.println(\"Failed to start server. \" + e.getMessage());\n      LOG.error(\"Failed to start server\", e);\n      if (main != null) {\n        main.shutDown();\n      }\n      System.exit(-2);\n    }\n  }","commit_id":"932c9d42b9d45372116daa0078113f7505c61189","url":"https://github.com/caskdata/cdap"},{"original_method":"private void testApp(Class<?> app, boolean datasetV2, String streamName)\n    throws IOException, TimeoutException, InterruptedException {\n\n    ApplicationManager applicationManager = deployApplication(app);\n\n    try {\n      applicationManager.startFlow(\"WordCountFlow\");\n\n      // Send some inputs to streams\n      StreamWriter streamWriter = applicationManager.getStreamWriter(streamName);\n      for (int i = 0; i < 100; i++) {\n        streamWriter.send(ImmutableMap.of(\"title\", \"title \" + i), \"testing message \" + i);\n      }\n\n      // Check the flowlet metrics\n      RuntimeMetrics flowletMetrics = RuntimeStats.getFlowletMetrics(\"WordCountApp\",\n                                                                     \"WordCountFlow\",\n                                                                     \"CountByField\");\n      flowletMetrics.waitForProcessed(500, 10, TimeUnit.SECONDS);\n      Assert.assertEquals(0L, flowletMetrics.getException());\n\n      // Query the result\n      ProcedureManager procedureManager = applicationManager.startProcedure(\"WordFrequency\");\n      ProcedureClient procedureClient = procedureManager.getClient();\n\n      // Verify the query result\n      Type resultType = new TypeToken<Map<String, Long>>() { }.getType();\n      Gson gson = new Gson();\n      Map<String, Long> result = gson.fromJson(procedureClient.query(\"wordfreq\",\n                                                                     ImmutableMap.of(\"word\", streamName + \":testing\")),\n                                               resultType);\n\n      Assert.assertEquals(100L, result.get(streamName + \":testing\").longValue());\n\n      // check the metrics\n      RuntimeMetrics procedureMetrics = RuntimeStats.getProcedureMetrics(\"WordCountApp\", \"WordFrequency\");\n      procedureMetrics.waitForProcessed(1, 5, TimeUnit.SECONDS);\n      Assert.assertEquals(0L, procedureMetrics.getException());\n\n      // Run mapreduce job\n      MapReduceManager mrManager = applicationManager.startMapReduce(\"countTotal\");\n      mrManager.waitForFinish(180L, TimeUnit.SECONDS);\n\n      long totalCount = Long.valueOf(procedureClient.query(\"total\", Collections.<String, String>emptyMap()));\n      // every event has 5 tokens\n      Assert.assertEquals(5 * 100L, totalCount);\n\n      // Run mapreduce from stream\n      mrManager = applicationManager.startMapReduce(\"countFromStream\");\n      mrManager.waitForFinish(120L, TimeUnit.SECONDS);\n\n      totalCount = Long.valueOf(procedureClient.query(\"stream_total\", Collections.<String, String>emptyMap()));\n\n      // The stream MR only consume the body, not the header.\n      Assert.assertEquals(3 * 100L, totalCount);\n\n      // Verify by looking into dataset\n      // todo: ugly workaround, refactor when datasets v1 gone\n      if (!datasetV2) {\n        DataSetManager<MyKeyValueTable> mydatasetManager = applicationManager.getDataSet(\"mydataset\");\n        Assert.assertEquals(100L,\n                            Longs.fromByteArray(mydatasetManager.get().read(\"title:title\".getBytes(Charsets.UTF_8))));\n      } else {\n        DataSetManager<MyKeyValueTableDefinition.KeyValueTable> mydatasetManager =\n          applicationManager.getDataSet(\"mydataset\");\n        Assert.assertEquals(100L, Long.valueOf(mydatasetManager.get().get(\"title:title\")).longValue());\n      }\n\n\n    } finally {\n      applicationManager.stopAll();\n    }\n  }","id":55423,"modified_method":"private void testApp(Class<?> app, boolean datasetV2, String streamName)\n    throws IOException, TimeoutException, InterruptedException {\n\n    ApplicationManager applicationManager = deployApplication(app);\n\n    try {\n      applicationManager.startFlow(\"WordCountFlow\");\n\n      // Send some inputs to streams\n      StreamWriter streamWriter = applicationManager.getStreamWriter(streamName);\n      for (int i = 0; i < 100; i++) {\n        streamWriter.send(ImmutableMap.of(\"title\", \"title \" + i), \"testing message \" + i);\n      }\n\n      // Check the flowlet metrics\n      RuntimeMetrics flowletMetrics = RuntimeStats.getFlowletMetrics(\"WordCountApp\",\n                                                                     \"WordCountFlow\",\n                                                                     \"CountByField\");\n      flowletMetrics.waitForProcessed(500, 10, TimeUnit.SECONDS);\n      Assert.assertEquals(0L, flowletMetrics.getException());\n\n      // Query the result\n      ProcedureManager procedureManager = applicationManager.startProcedure(\"WordFrequency\");\n      ProcedureClient procedureClient = procedureManager.getClient();\n\n      // Verify the query result\n      Type resultType = new TypeToken<Map<String, Long>>() { }.getType();\n      Gson gson = new Gson();\n      Map<String, Long> result = gson.fromJson(procedureClient.query(\"wordfreq\",\n                                                                     ImmutableMap.of(\"word\", streamName + \":testing\")),\n                                               resultType);\n\n      Assert.assertEquals(100L, result.get(streamName + \":testing\").longValue());\n\n      // check the metrics\n      RuntimeMetrics procedureMetrics = RuntimeStats.getProcedureMetrics(\"WordCountApp\", \"WordFrequency\");\n      procedureMetrics.waitForProcessed(1, 5, TimeUnit.SECONDS);\n      Assert.assertEquals(0L, procedureMetrics.getException());\n\n      // Run mapreduce job\n      MapReduceManager mrManager = applicationManager.startMapReduce(\"countTotal\");\n      mrManager.waitForFinish(1800L, TimeUnit.SECONDS);\n\n      long totalCount = Long.valueOf(procedureClient.query(\"total\", Collections.<String, String>emptyMap()));\n      // every event has 5 tokens\n      Assert.assertEquals(5 * 100L, totalCount);\n\n      // Run mapreduce from stream\n      mrManager = applicationManager.startMapReduce(\"countFromStream\");\n      mrManager.waitForFinish(120L, TimeUnit.SECONDS);\n\n      totalCount = Long.valueOf(procedureClient.query(\"stream_total\", Collections.<String, String>emptyMap()));\n\n      // The stream MR only consume the body, not the header.\n      Assert.assertEquals(3 * 100L, totalCount);\n\n      // Verify by looking into dataset\n      // todo: ugly workaround, refactor when datasets v1 gone\n      if (!datasetV2) {\n        DataSetManager<MyKeyValueTable> mydatasetManager = applicationManager.getDataSet(\"mydataset\");\n        Assert.assertEquals(100L,\n                            Longs.fromByteArray(mydatasetManager.get().read(\"title:title\".getBytes(Charsets.UTF_8))));\n      } else {\n        DataSetManager<MyKeyValueTableDefinition.KeyValueTable> mydatasetManager =\n          applicationManager.getDataSet(\"mydataset\");\n        Assert.assertEquals(100L, Long.valueOf(mydatasetManager.get().get(\"title:title\")).longValue());\n      }\n\n\n    } finally {\n      applicationManager.stopAll();\n    }\n  }","commit_id":"932c9d42b9d45372116daa0078113f7505c61189","url":"https://github.com/caskdata/cdap"},{"original_method":"@Test\n  public void shouldNotAllocateTest() throws Exception {\n    TachyonConf conf = createTestTachyonConf();\n    for (String strategyName : mStrategies) {\n      conf.set(Constants.WORKER_ALLOCATE_STRATEGY_CLASS, strategyName);\n      resetManagerView();\n      Allocator allocator = Allocator.Factory.createAllocator(conf, mManagerView);\n      assertTempBlockMeta(allocator, mAnyDirInTierLoc1, DEFAULT_RAM_SIZE + 1, false);\n      assertTempBlockMeta(allocator, mAnyDirInTierLoc2, DEFAULT_SSD_SIZE + 1, false);\n      assertTempBlockMeta(allocator, mAnyDirInTierLoc3, DEFAULT_HDD_SIZE + 1, false);\n      assertTempBlockMeta(allocator, mAnyTierLoc, DEFAULT_HDD_SIZE + 1, false);\n      assertTempBlockMeta(allocator, mAnyTierLoc, DEFAULT_SSD_SIZE + 1, true);\n    }\n  }","id":55424,"modified_method":"@Test\n  public void shouldNotAllocateTest() throws Exception {\n    TachyonConf conf = WorkerContext.getConf();\n    for (String strategyName : mStrategies) {\n      conf.set(Constants.WORKER_ALLOCATE_STRATEGY_CLASS, strategyName);\n      resetManagerView();\n      Allocator allocator = Allocator.Factory.createAllocator(conf, mManagerView);\n      assertTempBlockMeta(allocator, mAnyDirInTierLoc1, DEFAULT_RAM_SIZE + 1, false);\n      assertTempBlockMeta(allocator, mAnyDirInTierLoc2, DEFAULT_SSD_SIZE + 1, false);\n      assertTempBlockMeta(allocator, mAnyDirInTierLoc3, DEFAULT_HDD_SIZE + 1, false);\n      assertTempBlockMeta(allocator, mAnyTierLoc, DEFAULT_HDD_SIZE + 1, false);\n      assertTempBlockMeta(allocator, mAnyTierLoc, DEFAULT_SSD_SIZE + 1, true);\n    }\n  }","commit_id":"e62fecd6a1b193f567574e4b3f71b45d50cf1beb","url":"https://github.com/amplab/tachyon"},{"original_method":"@Test\n  public void shouldAllocateTest() throws Exception {\n    TachyonConf conf = createTestTachyonConf();\n    for (String strategyName : mStrategies) {\n      conf.set(Constants.WORKER_ALLOCATE_STRATEGY_CLASS, strategyName);\n      resetManagerView();\n      Allocator tierAllocator = Allocator.Factory.createAllocator(conf, mManagerView);\n      for (int i = 0; i < DEFAULT_RAM_NUM; i ++) {\n        assertTempBlockMeta(tierAllocator, mAnyDirInTierLoc1, DEFAULT_RAM_SIZE - 1, true);\n      }\n      for (int i = 0; i < DEFAULT_SSD_NUM; i ++) {\n        assertTempBlockMeta(tierAllocator, mAnyDirInTierLoc2, DEFAULT_SSD_SIZE - 1, true);\n      }\n      for (int i = 0; i < DEFAULT_HDD_NUM; i ++) {\n        assertTempBlockMeta(tierAllocator, mAnyDirInTierLoc3, DEFAULT_HDD_SIZE - 1, true);\n      }\n\n      resetManagerView();\n      Allocator anyAllocator = Allocator.Factory.createAllocator(conf, mManagerView);\n      for (int i = 0; i < DEFAULT_RAM_NUM; i ++) {\n        assertTempBlockMeta(anyAllocator, mAnyTierLoc, DEFAULT_RAM_SIZE - 1, true);\n      }\n      for (int i = 0; i < DEFAULT_SSD_NUM; i ++) {\n        assertTempBlockMeta(anyAllocator, mAnyTierLoc, DEFAULT_SSD_SIZE - 1, true);\n      }\n      for (int i = 0; i < DEFAULT_HDD_NUM; i ++) {\n        assertTempBlockMeta(anyAllocator, mAnyTierLoc, DEFAULT_HDD_SIZE - 1, true);\n      }\n    }\n  }","id":55425,"modified_method":"@Test\n  public void shouldAllocateTest() throws Exception {\n    TachyonConf conf = WorkerContext.getConf();\n    for (String strategyName : mStrategies) {\n      conf.set(Constants.WORKER_ALLOCATE_STRATEGY_CLASS, strategyName);\n      resetManagerView();\n      Allocator tierAllocator = Allocator.Factory.createAllocator(conf, mManagerView);\n      for (int i = 0; i < DEFAULT_RAM_NUM; i ++) {\n        assertTempBlockMeta(tierAllocator, mAnyDirInTierLoc1, DEFAULT_RAM_SIZE - 1, true);\n      }\n      for (int i = 0; i < DEFAULT_SSD_NUM; i ++) {\n        assertTempBlockMeta(tierAllocator, mAnyDirInTierLoc2, DEFAULT_SSD_SIZE - 1, true);\n      }\n      for (int i = 0; i < DEFAULT_HDD_NUM; i ++) {\n        assertTempBlockMeta(tierAllocator, mAnyDirInTierLoc3, DEFAULT_HDD_SIZE - 1, true);\n      }\n\n      resetManagerView();\n      Allocator anyAllocator = Allocator.Factory.createAllocator(conf, mManagerView);\n      for (int i = 0; i < DEFAULT_RAM_NUM; i ++) {\n        assertTempBlockMeta(anyAllocator, mAnyTierLoc, DEFAULT_RAM_SIZE - 1, true);\n      }\n      for (int i = 0; i < DEFAULT_SSD_NUM; i ++) {\n        assertTempBlockMeta(anyAllocator, mAnyTierLoc, DEFAULT_SSD_SIZE - 1, true);\n      }\n      for (int i = 0; i < DEFAULT_HDD_NUM; i ++) {\n        assertTempBlockMeta(anyAllocator, mAnyTierLoc, DEFAULT_HDD_SIZE - 1, true);\n      }\n    }\n  }","commit_id":"e62fecd6a1b193f567574e4b3f71b45d50cf1beb","url":"https://github.com/amplab/tachyon"},{"original_method":"@Before\n  public void before() throws Exception {\n    File tempFolder = mTestFolder.newFolder();\n    mTachyonConf = new TachyonConf();\n    mMetaManager = TieredBlockStoreTestUtils.defaultMetadataManager(tempFolder.getAbsolutePath());\n    mManagerView = new BlockMetadataManagerView(mMetaManager, Collections.<Integer>emptySet(),\n        Collections.<Long>emptySet());\n  }","id":55426,"modified_method":"@Before\n  public void before() throws Exception {\n    String baseDir = mTestFolder.newFolder().getAbsolutePath();\n    mManagerView = TieredBlockStoreTestUtils.defaultMetadataManagerView(baseDir);\n    mTachyonConf = WorkerContext.getConf();\n  }","commit_id":"e62fecd6a1b193f567574e4b3f71b45d50cf1beb","url":"https://github.com/amplab/tachyon"},{"original_method":"protected void resetManagerView() throws Exception {\n    //TODO: we will probably want to set WorkerContext.tachyonConf\n    TachyonConf tachyonConf = WorkerContext.getConf();\n    tachyonConf.merge(createTestTachyonConf());\n    mManagerView = new BlockMetadataManagerView(\n        BlockMetadataManager.newBlockMetadataManager(),\n        new HashSet<Integer>(), new HashSet<Long>());\n  }","id":55427,"modified_method":"protected void resetManagerView() throws Exception {\n    String tachyonHome =\n        File.createTempFile(\"Tachyon\", \"\").getAbsoluteFile() + \"U\" + System.currentTimeMillis();\n    TieredBlockStoreTestUtils\n     .setTachyonConf(tachyonHome, TIER_LEVEL, TIER_ALIAS, TIER_PATH, TIER_CAPACITY_BYTES, null);\n    BlockMetadataManager metaManager = BlockMetadataManager.newBlockMetadataManager();\n    mManagerView = new BlockMetadataManagerView(metaManager, new HashSet<Long>(),\n        new HashSet<Long>());\n  }","commit_id":"e62fecd6a1b193f567574e4b3f71b45d50cf1beb","url":"https://github.com/amplab/tachyon"},{"original_method":"/**\n   * Given an allocator with the location and blockSize,\n   * we assert whether the block can be allocated\n   */\n  protected void assertTempBlockMeta(Allocator allocator, BlockStoreLocation location,\n      int blockSize, boolean avail) throws IOException {\n\n    mTestBlockId ++;\n\n    StorageDirView dirView =\n        allocator.allocateBlockWithView(USER_ID, blockSize, location, mManagerView);\n    TempBlockMeta tempBlockMeta =\n        dirView == null ? null : dirView.createTempBlockMeta(USER_ID, mTestBlockId, blockSize);\n\n    if (avail == false) {\n      Assert.assertTrue(tempBlockMeta == null);\n    } else {\n      Assert.assertTrue(tempBlockMeta != null);\n    }\n  }","id":55428,"modified_method":"/**\n   * Given an allocator with the location and blockSize,\n   * we assert whether the block can be allocated\n   */\n  protected void assertTempBlockMeta(Allocator allocator, BlockStoreLocation location,\n      long blockSize, boolean avail) throws IOException {\n\n    mTestBlockId ++;\n\n    StorageDirView dirView =\n        allocator.allocateBlockWithView(USER_ID, blockSize, location, mManagerView);\n    TempBlockMeta tempBlockMeta =\n        dirView == null ? null : dirView.createTempBlockMeta(USER_ID, mTestBlockId, blockSize);\n\n    if (avail == false) {\n      Assert.assertTrue(tempBlockMeta == null);\n    } else {\n      Assert.assertTrue(tempBlockMeta != null);\n    }\n  }","commit_id":"e62fecd6a1b193f567574e4b3f71b45d50cf1beb","url":"https://github.com/amplab/tachyon"},{"original_method":"@Before\n  public void before() throws Exception {\n    TachyonConf tachyonConf = WorkerContext.getConf();\n    // Setup a two-tier storage\n    mTachyonHome = mFolder.newFolder().getAbsolutePath();;\n    tachyonConf.set(Constants.TACHYON_HOME, mTachyonHome);\n    tachyonConf.set(Constants.WORKER_MAX_TIERED_STORAGE_LEVEL, \"2\");\n    // TODO improve the code using String.format\n    tachyonConf.set(String.format(Constants.WORKER_TIERED_STORAGE_LEVEL_ALIAS_FORMAT, 0), \"MEM\");\n    tachyonConf.set(String.format(Constants.WORKER_TIERED_STORAGE_LEVEL_DIRS_PATH_FORMAT, 0),\n        mTachyonHome + \"/ramdisk\");\n    tachyonConf.set(String.format(Constants.WORKER_TIERED_STORAGE_LEVEL_DIRS_QUOTA_FORMAT, 0),\n        1000 + \"\");\n    tachyonConf.set(String.format(Constants.WORKER_TIERED_STORAGE_LEVEL_ALIAS_FORMAT, 1), \"HDD\");\n    tachyonConf.set(String.format(Constants.WORKER_TIERED_STORAGE_LEVEL_DIRS_PATH_FORMAT, 1),\n        mTachyonHome + \"/disk1,\" + mTachyonHome + \"/disk2\");\n    tachyonConf.set(String.format(Constants.WORKER_TIERED_STORAGE_LEVEL_DIRS_QUOTA_FORMAT, 1),\n        3000 + \",\" + 5000);\n    mMetaManager = BlockMetadataManager.newBlockMetadataManager();\n  }","id":55429,"modified_method":"@Before\n  public void before() throws Exception {\n    String baseDir = mFolder.newFolder().getAbsolutePath();\n    TieredBlockStoreTestUtils\n        .setTachyonConf(baseDir, mTierLevel, mTierAlias, mTierPath, mTierCapacityBytes, null);\n\n    mMetaManager = BlockMetadataManager.newBlockMetadataManager();\n  }","commit_id":"e62fecd6a1b193f567574e4b3f71b45d50cf1beb","url":"https://github.com/amplab/tachyon"},{"original_method":"@Test\n  public void setLocalDirStickyBitTest() throws IOException {\n    File tempFolder = mTestFolder.newFolder(\"dirToModify\");\n    // Only test this functionality of the absolute path of the temporary directory starts with \"/\",\n    // which implies the host should support \"chmod\".\n    if (tempFolder.getAbsolutePath().startsWith(TachyonURI.SEPARATOR)) {\n      FileUtils.setLocalDirStickyBit(tempFolder.getAbsolutePath());\n      List<String> commands = new ArrayList<String>();\n      commands.add(\"/bin/ls\");\n      commands.add(\"-ld\");\n      commands.add(tempFolder.getAbsolutePath());\n      try {\n        ProcessBuilder builder = new ProcessBuilder(commands);\n        Process process = builder.start();\n        process.waitFor();\n        BufferedReader stdInput = new BufferedReader(new\n            InputStreamReader(process.getInputStream()));\n        String line = stdInput.readLine();\n        Assert.assertTrue(line.startsWith(\"drwxr-xr-t\"));\n      } catch (InterruptedException e) {\n        e.printStackTrace();\n      }\n    }\n  }","id":55430,"modified_method":"@Test\n  public void setLocalDirStickyBitTest() throws IOException {\n    File tempFolder = mTestFolder.newFolder(\"dirToModify\");\n    // Only test this functionality of the absolute path of the temporary directory starts with \"/\",\n    // which implies the host should support \"chmod\".\n    if (tempFolder.getAbsolutePath().startsWith(TachyonURI.SEPARATOR)) {\n      FileUtils.setLocalDirStickyBit(tempFolder.getAbsolutePath());\n      List<String> commands = new ArrayList<String>();\n      commands.add(\"/bin/ls\");\n      commands.add(\"-ld\");\n      commands.add(tempFolder.getAbsolutePath());\n      try {\n        ProcessBuilder builder = new ProcessBuilder(commands);\n        Process process = builder.start();\n        process.waitFor();\n        BufferedReader stdInput = new BufferedReader(new\n            InputStreamReader(process.getInputStream()));\n        String line = stdInput.readLine();\n        // we are just concerned about the first and the last permission bits\n        Assert.assertTrue(line.matches(\"^d[rwx-]{8}t.*$\"));\n      } catch (InterruptedException e) {\n        e.printStackTrace();\n      }\n    }\n  }","commit_id":"e62fecd6a1b193f567574e4b3f71b45d50cf1beb","url":"https://github.com/amplab/tachyon"},{"original_method":"@Test\n  public void evictInBottomTierTest() throws Exception {\n    int bottomTierLevel = TieredBlockStoreTestUtils\n        .TIER_LEVEL[TieredBlockStoreTestUtils.TIER_LEVEL.length - 1];\n    Map<Long, Double> blockIdToCRF = new HashMap<Long, Double>();\n    // capacity increases with index\n    long[] bottomTierDirCapacity = TieredBlockStoreTestUtils.TIER_CAPACITY[bottomTierLevel];\n    int nDir = bottomTierDirCapacity.length;\n    // fill in dirs from larger to smaller capacity with blockId equal to BLOCK_ID plus dir index\n    for (int i = 0; i < nDir; i ++) {\n      cache(USER_ID, BLOCK_ID + i, bottomTierDirCapacity[i], bottomTierLevel, i);\n      // update CRF of blocks when blocks are committed\n      blockIdToCRF.put(BLOCK_ID + i, calculateAccessWeight(nDir - 1 - i));\n    }\n    // access blocks in the order: 10, 10, 11, 10, 11, 12. Update CRF of all blocks\n    // during each access\n    for (int i = 0; i < nDir; i ++) {\n      for (int j = 0; j <= i; j ++) {\n        access(BLOCK_ID + j);\n        for (int k = 0; k < nDir; k ++) {\n          if (k == j) {\n            blockIdToCRF.put(BLOCK_ID + k,\n                blockIdToCRF.get(BLOCK_ID + k) * calculateAccessWeight(1L) + 1.0);\n          } else {\n            blockIdToCRF.put(BLOCK_ID + k,\n                blockIdToCRF.get(BLOCK_ID + k) * calculateAccessWeight(1L));\n          }\n        }\n      }\n    }\n    // sort blocks in ascending order of CRF\n    List<Map.Entry<Long, Double>> blockCRF = getSortedCRF(blockIdToCRF);\n    BlockStoreLocation anyDirInBottomTier = BlockStoreLocation.anyDirInTier(bottomTierLevel + 1);\n    // request smallest capacity and update access time on the evicted block for nDir times, the dir\n    // to evict blocks from should be in the same order as sorted blockCRF\n    for (int i = 0; i < nDir; i ++) {\n      EvictionPlan plan =\n          mEvictor.freeSpaceWithView(bottomTierDirCapacity[0], anyDirInBottomTier, mManagerView);\n      Assert.assertNotNull(plan);\n      Assert.assertTrue(plan.toMove().isEmpty());\n      Assert.assertEquals(1, plan.toEvict().size());\n      long toEvictBlockId = plan.toEvict().get(0);\n      long objectBlockId = blockCRF.get(i).getKey();\n      Assert.assertEquals(objectBlockId + \" \" + toEvictBlockId, objectBlockId, toEvictBlockId);\n      // update CRF of the chosen block in case that it is chosen again\n      for (int j = 0; j < nDir; j ++) {\n        access(toEvictBlockId);\n      }\n    }\n  }","id":55431,"modified_method":"@Test\n  public void evictInBottomTierTest() throws Exception {\n    int bottomTierLevel = TieredBlockStoreTestUtils\n        .TIER_LEVEL[TieredBlockStoreTestUtils.TIER_LEVEL.length - 1];\n    Map<Long, Double> blockIdToCRF = new HashMap<Long, Double>();\n    // capacity increases with index\n    long[] bottomTierDirCapacity = TieredBlockStoreTestUtils.TIER_CAPACITY_BYTES[bottomTierLevel];\n    int nDir = bottomTierDirCapacity.length;\n    // fill in dirs from larger to smaller capacity with blockId equal to BLOCK_ID plus dir index\n    for (int i = 0; i < nDir; i ++) {\n      cache(USER_ID, BLOCK_ID + i, bottomTierDirCapacity[i], bottomTierLevel, i);\n      // update CRF of blocks when blocks are committed\n      blockIdToCRF.put(BLOCK_ID + i, calculateAccessWeight(nDir - 1 - i));\n    }\n    // access blocks in the order: 10, 10, 11, 10, 11, 12. Update CRF of all blocks\n    // during each access\n    for (int i = 0; i < nDir; i ++) {\n      for (int j = 0; j <= i; j ++) {\n        access(BLOCK_ID + j);\n        for (int k = 0; k < nDir; k ++) {\n          if (k == j) {\n            blockIdToCRF.put(BLOCK_ID + k,\n                blockIdToCRF.get(BLOCK_ID + k) * calculateAccessWeight(1L) + 1.0);\n          } else {\n            blockIdToCRF.put(BLOCK_ID + k,\n                blockIdToCRF.get(BLOCK_ID + k) * calculateAccessWeight(1L));\n          }\n        }\n      }\n    }\n    // sort blocks in ascending order of CRF\n    List<Map.Entry<Long, Double>> blockCRF = getSortedCRF(blockIdToCRF);\n    BlockStoreLocation anyDirInBottomTier = BlockStoreLocation.anyDirInTier(bottomTierLevel + 1);\n    // request smallest capacity and update access time on the evicted block for nDir times, the dir\n    // to evict blocks from should be in the same order as sorted blockCRF\n    for (int i = 0; i < nDir; i ++) {\n      EvictionPlan plan =\n          mEvictor.freeSpaceWithView(bottomTierDirCapacity[0], anyDirInBottomTier, mManagerView);\n      Assert.assertNotNull(plan);\n      Assert.assertTrue(plan.toMove().isEmpty());\n      Assert.assertEquals(1, plan.toEvict().size());\n      long toEvictBlockId = plan.toEvict().get(0);\n      long objectBlockId = blockCRF.get(i).getKey();\n      Assert.assertEquals(objectBlockId + \" \" + toEvictBlockId, objectBlockId, toEvictBlockId);\n      // update CRF of the chosen block in case that it is chosen again\n      for (int j = 0; j < nDir; j ++) {\n        access(toEvictBlockId);\n      }\n    }\n  }","commit_id":"e62fecd6a1b193f567574e4b3f71b45d50cf1beb","url":"https://github.com/amplab/tachyon"},{"original_method":"@Before\n  public final void before() throws Exception {\n    File tempFolder = mTestFolder.newFolder();\n    mMetaManager = TieredBlockStoreTestUtils.defaultMetadataManager(tempFolder.getAbsolutePath());\n    mManagerView =\n        new BlockMetadataManagerView(mMetaManager, Collections.<Integer>emptySet(),\n            Collections.<Long>emptySet());\n    TachyonConf conf = new TachyonConf();\n    conf.set(Constants.WORKER_EVICT_STRATEGY_CLASS, LRFUEvictor.class.getName());\n    conf.set(Constants.WORKER_ALLOCATE_STRATEGY_CLASS, MaxFreeAllocator.class.getName());\n    mAllocator = Allocator.Factory.createAllocator(conf, mManagerView);\n    mStepFactor = conf.getDouble(Constants.WORKER_EVICT_STRATEGY_LRFU_STEP_FACTOR);\n    mAttenuationFactor =\n        conf.getDouble(Constants.WORKER_EVICT_STRATEGY_LRFU_ATTENUATION_FACTOR);\n    mEvictor = Evictor.Factory.createEvictor(conf, mManagerView, mAllocator);\n  }","id":55432,"modified_method":"@Before\n  public final void before() throws Exception {\n    File tempFolder = mTestFolder.newFolder();\n    mMetaManager = TieredBlockStoreTestUtils.defaultMetadataManager(tempFolder.getAbsolutePath());\n    mManagerView =\n        new BlockMetadataManagerView(mMetaManager, Collections.<Long>emptySet(),\n            Collections.<Long>emptySet());\n    TachyonConf conf = WorkerContext.getConf();\n    conf.set(Constants.WORKER_EVICT_STRATEGY_CLASS, LRFUEvictor.class.getName());\n    conf.set(Constants.WORKER_ALLOCATE_STRATEGY_CLASS, MaxFreeAllocator.class.getName());\n    mAllocator = Allocator.Factory.createAllocator(conf, mManagerView);\n    mStepFactor = conf.getDouble(Constants.WORKER_EVICT_STRATEGY_LRFU_STEP_FACTOR);\n    mAttenuationFactor =\n        conf.getDouble(Constants.WORKER_EVICT_STRATEGY_LRFU_ATTENUATION_FACTOR);\n    mEvictor = Evictor.Factory.createEvictor(conf, mManagerView, mAllocator);\n  }","commit_id":"e62fecd6a1b193f567574e4b3f71b45d50cf1beb","url":"https://github.com/amplab/tachyon"},{"original_method":"@Test\n  public void cascadingEvictionTest2() throws Exception {\n    // Two tiers, the second tier has more dirs than the first tier and each dir in the second tier\n    // has more space than any dir in the first tier. Fill in all dirs and request space from the\n    // first tier, blocks should be moved from the first to the second tier, and some blocks in the\n    // second tier should be evicted to hold blocks moved from the first tier.\n    long blockId = BLOCK_ID;\n    long totalBlocks = 0;\n    for (int tierLevel : TieredBlockStoreTestUtils.TIER_LEVEL) {\n      totalBlocks += TieredBlockStoreTestUtils.TIER_CAPACITY[tierLevel].length;\n    }\n    Map<Long, Double> blockIdToCRF = new HashMap<Long, Double>();\n    for (int tierLevel : TieredBlockStoreTestUtils.TIER_LEVEL) {\n      long[] tierCapacity = TieredBlockStoreTestUtils.TIER_CAPACITY[tierLevel];\n      for (int dirIdx = 0; dirIdx < tierCapacity.length; dirIdx ++) {\n        cache(USER_ID, blockId, tierCapacity[dirIdx], tierLevel, dirIdx);\n        // update CRF of blocks when blocks are committed\n        blockIdToCRF.put(blockId, calculateAccessWeight(totalBlocks - 1 - (blockId - BLOCK_ID)));\n        blockId ++;\n      }\n    }\n\n    // access blocks in the order: 10, 10, 11, 10, 11, 12, 10, 11, 12, 13, 10, 11, 12, 13, 14\n    // Update CRF of all blocks during each access\n    for (int i = 0; i < totalBlocks; i ++) {\n      for (int j = 0; j <= i; j ++) {\n        access(BLOCK_ID + j);\n        for (int k = 0; k < totalBlocks; k ++) {\n          if (k == j) {\n            blockIdToCRF.put(BLOCK_ID + k,\n                blockIdToCRF.get(BLOCK_ID + k) * calculateAccessWeight(1L) + 1.0);\n          } else {\n            blockIdToCRF.put(BLOCK_ID + k,\n                blockIdToCRF.get(BLOCK_ID + k) * calculateAccessWeight(1L));\n          }\n        }\n      }\n    }\n\n    List<Map.Entry<Long, Double>> blockCRF = getSortedCRF(blockIdToCRF);\n    // sorted blocks in the first tier\n    List<Long> blocksInFirstTier = new ArrayList<Long>();\n    // sorted blocks in the second tier\n    List<Long> blocksInSecondTier = new ArrayList<Long>();\n    for (int i = 0; i < blockCRF.size(); i ++) {\n      long block = blockCRF.get(i).getKey();\n      if (block - BLOCK_ID < TieredBlockStoreTestUtils.TIER_CAPACITY[0].length) {\n        blocksInFirstTier.add(block);\n      } else if (block - BLOCK_ID < TieredBlockStoreTestUtils.TIER_CAPACITY[0].length\n          + TieredBlockStoreTestUtils.TIER_CAPACITY[1].length) {\n        blocksInSecondTier.add(block);\n      }\n    }\n    BlockStoreLocation anyDirInFirstTier =\n        BlockStoreLocation.anyDirInTier(TieredBlockStoreTestUtils.TIER_LEVEL[0] + 1);\n    int nDirInFirstTier = TieredBlockStoreTestUtils.TIER_CAPACITY[0].length;\n    long smallestCapacity = TieredBlockStoreTestUtils.TIER_CAPACITY[0][0];\n    for (int i = 0; i < nDirInFirstTier; i ++) {\n      EvictionPlan plan =\n          mEvictor.freeSpaceWithView(smallestCapacity, anyDirInFirstTier, mManagerView);\n      Assert.assertTrue(EvictorTestUtils.validCascadingPlan(smallestCapacity, plan, mMetaManager));\n      // block with minimum CRF in the first tier needs to be moved to the second tier\n      Assert.assertEquals(1, plan.toMove().size());\n      long blockIdMovedInFirstTier = plan.toMove().get(0).getFirst();\n      long objectBlockIdInFirstTier = blocksInFirstTier.get(i);\n      Assert.assertEquals(objectBlockIdInFirstTier, blockIdMovedInFirstTier);\n      // cached block with minimum CRF in the second tier will be evicted to hold blocks moved\n      // from first tier\n      Assert.assertEquals(1, plan.toEvict().size());\n      long blockIdEvictedInSecondTier = plan.toEvict().get(0);\n      long objectBlockIdInSecondTier = blocksInSecondTier.get(i);\n      Assert.assertEquals(objectBlockIdInSecondTier, blockIdEvictedInSecondTier);\n      // update CRF of the chosen blocks in case that they are chosen again\n      for (int j = 0; j < totalBlocks; j ++) {\n        access(blockIdMovedInFirstTier);\n      }\n      for (int j = 0; j < totalBlocks; j ++) {\n        access(blockIdEvictedInSecondTier);\n      }\n    }\n  }","id":55433,"modified_method":"@Test\n  public void cascadingEvictionTest2() throws Exception {\n    // Two tiers, the second tier has more dirs than the first tier and each dir in the second tier\n    // has more space than any dir in the first tier. Fill in all dirs and request space from the\n    // first tier, blocks should be moved from the first to the second tier, and some blocks in the\n    // second tier should be evicted to hold blocks moved from the first tier.\n    long blockId = BLOCK_ID;\n    long totalBlocks = 0;\n    for (int tierLevel : TieredBlockStoreTestUtils.TIER_LEVEL) {\n      totalBlocks += TieredBlockStoreTestUtils.TIER_CAPACITY_BYTES[tierLevel].length;\n    }\n    Map<Long, Double> blockIdToCRF = new HashMap<Long, Double>();\n    for (int tierLevel : TieredBlockStoreTestUtils.TIER_LEVEL) {\n      long[] tierCapacity = TieredBlockStoreTestUtils.TIER_CAPACITY_BYTES[tierLevel];\n      for (int dirIdx = 0; dirIdx < tierCapacity.length; dirIdx ++) {\n        cache(USER_ID, blockId, tierCapacity[dirIdx], tierLevel, dirIdx);\n        // update CRF of blocks when blocks are committed\n        blockIdToCRF.put(blockId, calculateAccessWeight(totalBlocks - 1 - (blockId - BLOCK_ID)));\n        blockId ++;\n      }\n    }\n\n    // access blocks in the order: 10, 10, 11, 10, 11, 12, 10, 11, 12, 13, 10, 11, 12, 13, 14\n    // Update CRF of all blocks during each access\n    for (int i = 0; i < totalBlocks; i ++) {\n      for (int j = 0; j <= i; j ++) {\n        access(BLOCK_ID + j);\n        for (int k = 0; k < totalBlocks; k ++) {\n          if (k == j) {\n            blockIdToCRF.put(BLOCK_ID + k,\n                blockIdToCRF.get(BLOCK_ID + k) * calculateAccessWeight(1L) + 1.0);\n          } else {\n            blockIdToCRF.put(BLOCK_ID + k,\n                blockIdToCRF.get(BLOCK_ID + k) * calculateAccessWeight(1L));\n          }\n        }\n      }\n    }\n\n    List<Map.Entry<Long, Double>> blockCRF = getSortedCRF(blockIdToCRF);\n    // sorted blocks in the first tier\n    List<Long> blocksInFirstTier = new ArrayList<Long>();\n    // sorted blocks in the second tier\n    List<Long> blocksInSecondTier = new ArrayList<Long>();\n    for (int i = 0; i < blockCRF.size(); i ++) {\n      long block = blockCRF.get(i).getKey();\n      if (block - BLOCK_ID < TieredBlockStoreTestUtils.TIER_CAPACITY_BYTES[0].length) {\n        blocksInFirstTier.add(block);\n      } else if (block - BLOCK_ID < TieredBlockStoreTestUtils.TIER_CAPACITY_BYTES[0].length\n          + TieredBlockStoreTestUtils.TIER_CAPACITY_BYTES[1].length) {\n        blocksInSecondTier.add(block);\n      }\n    }\n    BlockStoreLocation anyDirInFirstTier =\n        BlockStoreLocation.anyDirInTier(TieredBlockStoreTestUtils.TIER_LEVEL[0] + 1);\n    int nDirInFirstTier = TieredBlockStoreTestUtils.TIER_CAPACITY_BYTES[0].length;\n    long smallestCapacity = TieredBlockStoreTestUtils.TIER_CAPACITY_BYTES[0][0];\n    for (int i = 0; i < nDirInFirstTier; i ++) {\n      EvictionPlan plan =\n          mEvictor.freeSpaceWithView(smallestCapacity, anyDirInFirstTier, mManagerView);\n      Assert.assertTrue(EvictorTestUtils.validCascadingPlan(smallestCapacity, plan, mMetaManager));\n      // block with minimum CRF in the first tier needs to be moved to the second tier\n      Assert.assertEquals(1, plan.toMove().size());\n      long blockIdMovedInFirstTier = plan.toMove().get(0).getFirst();\n      long objectBlockIdInFirstTier = blocksInFirstTier.get(i);\n      Assert.assertEquals(objectBlockIdInFirstTier, blockIdMovedInFirstTier);\n      // cached block with minimum CRF in the second tier will be evicted to hold blocks moved\n      // from first tier\n      Assert.assertEquals(1, plan.toEvict().size());\n      long blockIdEvictedInSecondTier = plan.toEvict().get(0);\n      long objectBlockIdInSecondTier = blocksInSecondTier.get(i);\n      Assert.assertEquals(objectBlockIdInSecondTier, blockIdEvictedInSecondTier);\n      // update CRF of the chosen blocks in case that they are chosen again\n      for (int j = 0; j < totalBlocks; j ++) {\n        access(blockIdMovedInFirstTier);\n      }\n      for (int j = 0; j < totalBlocks; j ++) {\n        access(blockIdEvictedInSecondTier);\n      }\n    }\n  }","commit_id":"e62fecd6a1b193f567574e4b3f71b45d50cf1beb","url":"https://github.com/amplab/tachyon"},{"original_method":"@Test\n  public void cascadingEvictionTest1() throws Exception {\n    // Two tiers, each dir in the second tier has more space than any dir in the first tier. Fill in\n    // the first tier, leave the second tier empty. Request space from the first tier, blocks should\n    // be moved from the first to the second tier without eviction.\n    int firstTierLevel = TieredBlockStoreTestUtils.TIER_LEVEL[0];\n    long[] firstTierDirCapacity = TieredBlockStoreTestUtils.TIER_CAPACITY[0];\n    int nDir = firstTierDirCapacity.length;\n    Map<Long, Double> blockIdToCRF = new HashMap<Long, Double>();\n    for (int i = 0; i < nDir; i ++) {\n      cache(USER_ID, BLOCK_ID + i, firstTierDirCapacity[i], firstTierLevel, i);\n      // update CRF of blocks when blocks are committed\n      blockIdToCRF.put(BLOCK_ID + i, calculateAccessWeight(nDir - 1 - i));\n    }\n    // access blocks in the order: 10, 10, 11. Update CRF of all blocks\n    // during each access\n    for (int i = 0; i < nDir; i ++) {\n      for (int j = 0; j <= i; j ++) {\n        access(BLOCK_ID + j);\n        for (int k = 0; k < nDir; k ++) {\n          if (k == j) {\n            blockIdToCRF.put(BLOCK_ID + k,\n                blockIdToCRF.get(BLOCK_ID + k) * calculateAccessWeight(1L) + 1.0);\n          } else {\n            blockIdToCRF.put(BLOCK_ID + k,\n                blockIdToCRF.get(BLOCK_ID + k) * calculateAccessWeight(1L));\n          }\n        }\n      }\n    }\n    List<Map.Entry<Long, Double>> blockCRF = getSortedCRF(blockIdToCRF);\n    BlockStoreLocation anyDirInFirstTier = BlockStoreLocation.anyDirInTier(firstTierLevel + 1);\n    long smallestCapacity = firstTierDirCapacity[0];\n    // request smallest capacity and update access time on the moved block for nDir times, the dir\n    // to move blocks from should be in the same order as sorted blockCRF\n    for (int i = 0; i < nDir; i ++) {\n      EvictionPlan plan =\n          mEvictor.freeSpaceWithView(smallestCapacity, anyDirInFirstTier, mManagerView);\n      Assert.assertTrue(EvictorTestUtils.validCascadingPlan(smallestCapacity, plan, mMetaManager));\n      Assert.assertEquals(0, plan.toEvict().size());\n      Assert.assertEquals(1, plan.toMove().size());\n      long blockId = plan.toMove().get(0).getFirst();\n      long objectBlockId = blockCRF.get(i).getKey();\n      Assert.assertEquals(objectBlockId, blockId);\n      // update CRF of the chosen block in case that it is chosen again\n      for (int j = 0; j < nDir; j ++) {\n        access(objectBlockId);\n      }\n    }\n  }","id":55434,"modified_method":"@Test\n  public void cascadingEvictionTest1() throws Exception {\n    // Two tiers, each dir in the second tier has more space than any dir in the first tier. Fill in\n    // the first tier, leave the second tier empty. Request space from the first tier, blocks should\n    // be moved from the first to the second tier without eviction.\n    int firstTierLevel = TieredBlockStoreTestUtils.TIER_LEVEL[0];\n    long[] firstTierDirCapacity = TieredBlockStoreTestUtils.TIER_CAPACITY_BYTES[0];\n    int nDir = firstTierDirCapacity.length;\n    Map<Long, Double> blockIdToCRF = new HashMap<Long, Double>();\n    for (int i = 0; i < nDir; i ++) {\n      cache(USER_ID, BLOCK_ID + i, firstTierDirCapacity[i], firstTierLevel, i);\n      // update CRF of blocks when blocks are committed\n      blockIdToCRF.put(BLOCK_ID + i, calculateAccessWeight(nDir - 1 - i));\n    }\n    // access blocks in the order: 10, 10, 11. Update CRF of all blocks\n    // during each access\n    for (int i = 0; i < nDir; i ++) {\n      for (int j = 0; j <= i; j ++) {\n        access(BLOCK_ID + j);\n        for (int k = 0; k < nDir; k ++) {\n          if (k == j) {\n            blockIdToCRF.put(BLOCK_ID + k,\n                blockIdToCRF.get(BLOCK_ID + k) * calculateAccessWeight(1L) + 1.0);\n          } else {\n            blockIdToCRF.put(BLOCK_ID + k,\n                blockIdToCRF.get(BLOCK_ID + k) * calculateAccessWeight(1L));\n          }\n        }\n      }\n    }\n    List<Map.Entry<Long, Double>> blockCRF = getSortedCRF(blockIdToCRF);\n    BlockStoreLocation anyDirInFirstTier = BlockStoreLocation.anyDirInTier(firstTierLevel + 1);\n    long smallestCapacity = firstTierDirCapacity[0];\n    // request smallest capacity and update access time on the moved block for nDir times, the dir\n    // to move blocks from should be in the same order as sorted blockCRF\n    for (int i = 0; i < nDir; i ++) {\n      EvictionPlan plan =\n          mEvictor.freeSpaceWithView(smallestCapacity, anyDirInFirstTier, mManagerView);\n      Assert.assertTrue(EvictorTestUtils.validCascadingPlan(smallestCapacity, plan, mMetaManager));\n      Assert.assertEquals(0, plan.toEvict().size());\n      Assert.assertEquals(1, plan.toMove().size());\n      long blockId = plan.toMove().get(0).getFirst();\n      long objectBlockId = blockCRF.get(i).getKey();\n      Assert.assertEquals(objectBlockId, blockId);\n      // update CRF of the chosen block in case that it is chosen again\n      for (int j = 0; j < nDir; j ++) {\n        access(objectBlockId);\n      }\n    }\n  }","commit_id":"e62fecd6a1b193f567574e4b3f71b45d50cf1beb","url":"https://github.com/amplab/tachyon"},{"original_method":"@Test\n  public void evictInBottomTierTest() throws Exception {\n    int bottomTierLevel =\n        TieredBlockStoreTestUtils.TIER_LEVEL[TieredBlockStoreTestUtils.TIER_LEVEL.length - 1];\n    // capacity increases with index\n    long[] bottomTierDirCapacity = TieredBlockStoreTestUtils.TIER_CAPACITY[bottomTierLevel];\n    int nDir = bottomTierDirCapacity.length;\n    // fill in dirs from larger to smaller capacity with blockId equal to BLOCK_ID plus dir index\n    for (int i = nDir - 1; i >= 0; i --) {\n      cache(USER_ID, BLOCK_ID + i, bottomTierDirCapacity[i], bottomTierLevel, i);\n    }\n    BlockStoreLocation anyDirInBottomTier = BlockStoreLocation.anyDirInTier(bottomTierLevel + 1);\n    // request smallest capacity and update access time on the evicted block for nDir times, the dir\n    // to evict blocks from should be in the same order as caching\n    for (int i = nDir - 1; i >= 0; i --) {\n      EvictionPlan plan =\n          mEvictor.freeSpaceWithView(bottomTierDirCapacity[0], anyDirInBottomTier, mManagerView);\n      Assert.assertNotNull(plan);\n      Assert.assertTrue(plan.toMove().isEmpty());\n      Assert.assertEquals(1, plan.toEvict().size());\n      long toEvictBlockId = plan.toEvict().get(0);\n      Assert.assertEquals(BLOCK_ID + i, toEvictBlockId);\n\n      access(toEvictBlockId);\n    }\n  }","id":55435,"modified_method":"@Test\n  public void evictInBottomTierTest() throws Exception {\n    int bottomTierLevel =\n        TieredBlockStoreTestUtils.TIER_LEVEL[TieredBlockStoreTestUtils.TIER_LEVEL.length - 1];\n    // capacity increases with index\n    long[] bottomTierDirCapacity = TieredBlockStoreTestUtils.TIER_CAPACITY_BYTES[bottomTierLevel];\n    int nDir = bottomTierDirCapacity.length;\n    // fill in dirs from larger to smaller capacity with blockId equal to BLOCK_ID plus dir index\n    for (int i = nDir - 1; i >= 0; i --) {\n      cache(USER_ID, BLOCK_ID + i, bottomTierDirCapacity[i], bottomTierLevel, i);\n    }\n    BlockStoreLocation anyDirInBottomTier = BlockStoreLocation.anyDirInTier(bottomTierLevel + 1);\n    // request smallest capacity and update access time on the evicted block for nDir times, the dir\n    // to evict blocks from should be in the same order as caching\n    for (int i = nDir - 1; i >= 0; i --) {\n      EvictionPlan plan =\n          mEvictor.freeSpaceWithView(bottomTierDirCapacity[0], anyDirInBottomTier, mManagerView);\n      Assert.assertNotNull(plan);\n      Assert.assertTrue(plan.toMove().isEmpty());\n      Assert.assertEquals(1, plan.toEvict().size());\n      long toEvictBlockId = plan.toEvict().get(0);\n      Assert.assertEquals(BLOCK_ID + i, toEvictBlockId);\n\n      access(toEvictBlockId);\n    }\n  }","commit_id":"e62fecd6a1b193f567574e4b3f71b45d50cf1beb","url":"https://github.com/amplab/tachyon"},{"original_method":"@Test\n  public void cascadingEvictionTest1() throws Exception {\n    // Two tiers, each dir in the second tier has more space than any dir in the first tier. Fill in\n    // the first tier, leave the second tier empty. Request space from the first tier, blocks should\n    // be moved from the first to the second tier without eviction.\n    int firstTierLevel = TieredBlockStoreTestUtils.TIER_LEVEL[0];\n    long[] firstTierDirCapacity = TieredBlockStoreTestUtils.TIER_CAPACITY[0];\n    int nDir = firstTierDirCapacity.length;\n    for (int i = 0; i < nDir; i ++) {\n      cache(USER_ID, BLOCK_ID + i, firstTierDirCapacity[i], firstTierLevel, i);\n    }\n    BlockStoreLocation anyDirInFirstTier = BlockStoreLocation.anyDirInTier(firstTierLevel + 1);\n    long smallestCapacity = firstTierDirCapacity[0];\n    for (int i = 0; i < nDir; i ++) {\n      EvictionPlan plan =\n          mEvictor.freeSpaceWithView(smallestCapacity, anyDirInFirstTier, mManagerView);\n      Assert.assertTrue(EvictorTestUtils.validCascadingPlan(smallestCapacity, plan, mMetaManager));\n      Assert.assertEquals(0, plan.toEvict().size());\n      Assert.assertEquals(1, plan.toMove().size());\n      long blockId = plan.toMove().get(0).getFirst();\n      Assert.assertEquals(BLOCK_ID + i, blockId);\n\n      access(blockId);\n    }\n  }","id":55436,"modified_method":"@Test\n  public void cascadingEvictionTest1() throws Exception {\n    // Two tiers, each dir in the second tier has more space than any dir in the first tier. Fill in\n    // the first tier, leave the second tier empty. Request space from the first tier, blocks should\n    // be moved from the first to the second tier without eviction.\n    int firstTierLevel = TieredBlockStoreTestUtils.TIER_LEVEL[0];\n    long[] firstTierDirCapacity = TieredBlockStoreTestUtils.TIER_CAPACITY_BYTES[0];\n    int nDir = firstTierDirCapacity.length;\n    for (int i = 0; i < nDir; i ++) {\n      cache(USER_ID, BLOCK_ID + i, firstTierDirCapacity[i], firstTierLevel, i);\n    }\n    BlockStoreLocation anyDirInFirstTier = BlockStoreLocation.anyDirInTier(firstTierLevel + 1);\n    long smallestCapacity = firstTierDirCapacity[0];\n    for (int i = 0; i < nDir; i ++) {\n      EvictionPlan plan =\n          mEvictor.freeSpaceWithView(smallestCapacity, anyDirInFirstTier, mManagerView);\n      Assert.assertTrue(EvictorTestUtils.validCascadingPlan(smallestCapacity, plan, mMetaManager));\n      Assert.assertEquals(0, plan.toEvict().size());\n      Assert.assertEquals(1, plan.toMove().size());\n      long blockId = plan.toMove().get(0).getFirst();\n      Assert.assertEquals(BLOCK_ID + i, blockId);\n\n      access(blockId);\n    }\n  }","commit_id":"e62fecd6a1b193f567574e4b3f71b45d50cf1beb","url":"https://github.com/amplab/tachyon"},{"original_method":"@Test\n  public void cascadingEvictionTest2() throws Exception {\n    // Two tiers, the second tier has more dirs than the first tier and each dir in the second tier\n    // has more space than any dir in the first tier. Fill in all dirs and request space from the\n    // first tier, blocks should be moved from the first to the second tier, and some blocks in the\n    // second tier should be evicted to hold blocks moved from the first tier.\n    long blockId = BLOCK_ID;\n    for (int tierLevel : TieredBlockStoreTestUtils.TIER_LEVEL) {\n      long[] tierCapacity = TieredBlockStoreTestUtils.TIER_CAPACITY[tierLevel];\n      for (int dirIdx = 0; dirIdx < tierCapacity.length; dirIdx ++) {\n        cache(USER_ID, blockId, tierCapacity[dirIdx], tierLevel, dirIdx);\n        blockId ++;\n      }\n    }\n\n    BlockStoreLocation anyDirInFirstTier =\n        BlockStoreLocation.anyDirInTier(TieredBlockStoreTestUtils.TIER_LEVEL[0] + 1);\n    int nDirInFirstTier = TieredBlockStoreTestUtils.TIER_CAPACITY[0].length;\n    long smallestCapacity = TieredBlockStoreTestUtils.TIER_CAPACITY[0][0];\n    for (int i = 0; i < nDirInFirstTier; i ++) {\n      EvictionPlan plan =\n          mEvictor.freeSpaceWithView(smallestCapacity, anyDirInFirstTier, mManagerView);\n      Assert.assertTrue(EvictorTestUtils.validCascadingPlan(smallestCapacity, plan, mMetaManager));\n      // least recently used block in the first tier needs to be moved to the second tier\n      Assert.assertEquals(1, plan.toMove().size());\n      long blockIdMovedInFirstTier = plan.toMove().get(0).getFirst();\n      Assert.assertEquals(BLOCK_ID + i, blockIdMovedInFirstTier);\n      // least recently used cached block in the second tier will be evicted to hold blocks moved\n      // from first tier\n      Assert.assertEquals(1, plan.toEvict().size());\n      long blockIdEvictedInSecondTier = plan.toEvict().get(0);\n      Assert.assertEquals(BLOCK_ID + nDirInFirstTier + i, blockIdEvictedInSecondTier);\n\n      access(blockIdMovedInFirstTier);\n      access(blockIdEvictedInSecondTier);\n    }\n  }","id":55437,"modified_method":"@Test\n  public void cascadingEvictionTest2() throws Exception {\n    // Two tiers, the second tier has more dirs than the first tier and each dir in the second tier\n    // has more space than any dir in the first tier. Fill in all dirs and request space from the\n    // first tier, blocks should be moved from the first to the second tier, and some blocks in the\n    // second tier should be evicted to hold blocks moved from the first tier.\n    long blockId = BLOCK_ID;\n    for (int tierLevel : TieredBlockStoreTestUtils.TIER_LEVEL) {\n      long[] tierCapacity = TieredBlockStoreTestUtils.TIER_CAPACITY_BYTES[tierLevel];\n      for (int dirIdx = 0; dirIdx < tierCapacity.length; dirIdx ++) {\n        cache(USER_ID, blockId, tierCapacity[dirIdx], tierLevel, dirIdx);\n        blockId ++;\n      }\n    }\n\n    BlockStoreLocation anyDirInFirstTier =\n        BlockStoreLocation.anyDirInTier(TieredBlockStoreTestUtils.TIER_LEVEL[0] + 1);\n    int nDirInFirstTier = TieredBlockStoreTestUtils.TIER_CAPACITY_BYTES[0].length;\n    long smallestCapacity = TieredBlockStoreTestUtils.TIER_CAPACITY_BYTES[0][0];\n    for (int i = 0; i < nDirInFirstTier; i ++) {\n      EvictionPlan plan =\n          mEvictor.freeSpaceWithView(smallestCapacity, anyDirInFirstTier, mManagerView);\n      Assert.assertTrue(EvictorTestUtils.validCascadingPlan(smallestCapacity, plan, mMetaManager));\n      // least recently used block in the first tier needs to be moved to the second tier\n      Assert.assertEquals(1, plan.toMove().size());\n      long blockIdMovedInFirstTier = plan.toMove().get(0).getFirst();\n      Assert.assertEquals(BLOCK_ID + i, blockIdMovedInFirstTier);\n      // least recently used cached block in the second tier will be evicted to hold blocks moved\n      // from first tier\n      Assert.assertEquals(1, plan.toEvict().size());\n      long blockIdEvictedInSecondTier = plan.toEvict().get(0);\n      Assert.assertEquals(BLOCK_ID + nDirInFirstTier + i, blockIdEvictedInSecondTier);\n\n      access(blockIdMovedInFirstTier);\n      access(blockIdEvictedInSecondTier);\n    }\n  }","commit_id":"e62fecd6a1b193f567574e4b3f71b45d50cf1beb","url":"https://github.com/amplab/tachyon"},{"original_method":"@Test\n  public void cascadingEvictionTest2() throws Exception {\n    // Two tiers, the second tier has more dirs than the first tier and each dir in the second tier\n    // has more space than any dir in the first tier. Fill in all dirs and request space from the\n    // first tier, blocks should be moved from the first to the second tier, and some blocks in the\n    // second tier should be evicted to hold blocks moved from the first tier.\n    BlockStoreLocation anyDirInFirstTier =\n        BlockStoreLocation.anyDirInTier(TieredBlockStoreTestUtils.TIER_LEVEL[0] + 1);\n    int nDirInFirstTier = TieredBlockStoreTestUtils.TIER_CAPACITY[0].length;\n    int nDirInSecondTier = TieredBlockStoreTestUtils.TIER_CAPACITY[1].length;\n    long smallestCapacity = TieredBlockStoreTestUtils.TIER_CAPACITY[0][0];\n    long delta = smallestCapacity / 10;\n    long blockId = BLOCK_ID;\n\n    for (int tierLevel : TieredBlockStoreTestUtils.TIER_LEVEL) {\n      long[] tierCapacity = TieredBlockStoreTestUtils.TIER_CAPACITY[tierLevel];\n      for (int dirIdx = 0; dirIdx < tierCapacity.length; dirIdx ++) {\n        cache(USER_ID, blockId, tierCapacity[dirIdx] - dirIdx * delta, tierLevel, dirIdx);\n        blockId ++;\n      }\n    }\n\n    EvictionPlan plan =\n        mEvictor.freeSpaceWithView(smallestCapacity, anyDirInFirstTier, mManagerView);\n    Assert.assertTrue(EvictorTestUtils.validCascadingPlan(smallestCapacity, plan, mMetaManager));\n    // block in StorageDir with max free space in the first tier needs to be moved to the second\n    // tier\n    Assert.assertEquals(1, plan.toMove().size());\n    long blockIdMovedInFirstTier = plan.toMove().get(0).getFirst();\n    Assert.assertEquals(BLOCK_ID + nDirInFirstTier - 1, blockIdMovedInFirstTier);\n    // block in StorageDir with max free space in the second tier will be evicted to hold blocks\n    // moved from first tier\n    Assert.assertEquals(1, plan.toEvict().size());\n    long blockIdEvictedInSecondTier = plan.toEvict().get(0);\n    Assert.assertEquals(BLOCK_ID + nDirInFirstTier + nDirInSecondTier - 1,\n        blockIdEvictedInSecondTier);\n  }","id":55438,"modified_method":"@Test\n  public void cascadingEvictionTest2() throws Exception {\n    // Two tiers, the second tier has more dirs than the first tier and each dir in the second tier\n    // has more space than any dir in the first tier. Fill in all dirs and request space from the\n    // first tier, blocks should be moved from the first to the second tier, and some blocks in the\n    // second tier should be evicted to hold blocks moved from the first tier.\n    BlockStoreLocation anyDirInFirstTier =\n        BlockStoreLocation.anyDirInTier(TieredBlockStoreTestUtils.TIER_LEVEL[0] + 1);\n    int nDirInFirstTier = TieredBlockStoreTestUtils.TIER_CAPACITY_BYTES[0].length;\n    int nDirInSecondTier = TieredBlockStoreTestUtils.TIER_CAPACITY_BYTES[1].length;\n    long smallestCapacity = TieredBlockStoreTestUtils.TIER_CAPACITY_BYTES[0][0];\n    long delta = smallestCapacity / 10;\n    long blockId = BLOCK_ID;\n\n    for (int tierLevel : TieredBlockStoreTestUtils.TIER_LEVEL) {\n      long[] tierCapacity = TieredBlockStoreTestUtils.TIER_CAPACITY_BYTES[tierLevel];\n      for (int dirIdx = 0; dirIdx < tierCapacity.length; dirIdx ++) {\n        cache(USER_ID, blockId, tierCapacity[dirIdx] - dirIdx * delta, tierLevel, dirIdx);\n        blockId ++;\n      }\n    }\n\n    EvictionPlan plan =\n        mEvictor.freeSpaceWithView(smallestCapacity, anyDirInFirstTier, mManagerView);\n    Assert.assertTrue(EvictorTestUtils.validCascadingPlan(smallestCapacity, plan, mMetaManager));\n    // block in StorageDir with max free space in the first tier needs to be moved to the second\n    // tier\n    Assert.assertEquals(1, plan.toMove().size());\n    long blockIdMovedInFirstTier = plan.toMove().get(0).getFirst();\n    Assert.assertEquals(BLOCK_ID + nDirInFirstTier - 1, blockIdMovedInFirstTier);\n    // block in StorageDir with max free space in the second tier will be evicted to hold blocks\n    // moved from first tier\n    Assert.assertEquals(1, plan.toEvict().size());\n    long blockIdEvictedInSecondTier = plan.toEvict().get(0);\n    Assert.assertEquals(BLOCK_ID + nDirInFirstTier + nDirInSecondTier - 1,\n        blockIdEvictedInSecondTier);\n  }","commit_id":"e62fecd6a1b193f567574e4b3f71b45d50cf1beb","url":"https://github.com/amplab/tachyon"},{"original_method":"@Test\n  public void evictInBottomTierTest() throws Exception {\n    int bottomTierLevel =\n        TieredBlockStoreTestUtils.TIER_LEVEL[TieredBlockStoreTestUtils.TIER_LEVEL.length - 1];\n    // capacity increases with index\n    long[] bottomTierDirCapacity = TieredBlockStoreTestUtils.TIER_CAPACITY[bottomTierLevel];\n    long smallestCapacity = bottomTierDirCapacity[0];\n    long delta = smallestCapacity / 10;\n    int nDir = bottomTierDirCapacity.length;\n    // free space of StorageDir increases with Dir index\n    for (int i = 0; i < nDir; i ++) {\n      cache(USER_ID, BLOCK_ID + i, bottomTierDirCapacity[i] - i * delta, bottomTierLevel, i);\n    }\n\n    BlockStoreLocation anyDirInBottomTier = BlockStoreLocation.anyDirInTier(bottomTierLevel + 1);\n    // free the StorageDir with max free space\n    EvictionPlan plan =\n        mEvictor.freeSpaceWithView(smallestCapacity, anyDirInBottomTier, mManagerView);\n    Assert.assertNotNull(plan);\n    Assert.assertTrue(plan.toMove().isEmpty());\n    Assert.assertEquals(1, plan.toEvict().size());\n    long toEvictBlockId = plan.toEvict().get(0);\n    Assert.assertEquals(BLOCK_ID + nDir - 1, toEvictBlockId);\n  }","id":55439,"modified_method":"@Test\n  public void evictInBottomTierTest() throws Exception {\n    int bottomTierLevel =\n        TieredBlockStoreTestUtils.TIER_LEVEL[TieredBlockStoreTestUtils.TIER_LEVEL.length - 1];\n    // capacity increases with index\n    long[] bottomTierDirCapacity = TieredBlockStoreTestUtils.TIER_CAPACITY_BYTES[bottomTierLevel];\n    long smallestCapacity = bottomTierDirCapacity[0];\n    long delta = smallestCapacity / 10;\n    int nDir = bottomTierDirCapacity.length;\n    // free space of StorageDir increases with Dir index\n    for (int i = 0; i < nDir; i ++) {\n      cache(USER_ID, BLOCK_ID + i, bottomTierDirCapacity[i] - i * delta, bottomTierLevel, i);\n    }\n\n    BlockStoreLocation anyDirInBottomTier = BlockStoreLocation.anyDirInTier(bottomTierLevel + 1);\n    // free the StorageDir with max free space\n    EvictionPlan plan =\n        mEvictor.freeSpaceWithView(smallestCapacity, anyDirInBottomTier, mManagerView);\n    Assert.assertNotNull(plan);\n    Assert.assertTrue(plan.toMove().isEmpty());\n    Assert.assertEquals(1, plan.toEvict().size());\n    long toEvictBlockId = plan.toEvict().get(0);\n    Assert.assertEquals(BLOCK_ID + nDir - 1, toEvictBlockId);\n  }","commit_id":"e62fecd6a1b193f567574e4b3f71b45d50cf1beb","url":"https://github.com/amplab/tachyon"},{"original_method":"@Test\n  public void cascadingEvictionTest1() throws Exception {\n    // Two tiers, each dir in the second tier has more space than any dir in the first tier. Fill in\n    // the first tier, leave the second tier empty. Request space from the first tier, blocks should\n    // be moved from the first to the second tier without eviction.\n    int firstTierLevel = TieredBlockStoreTestUtils.TIER_LEVEL[0];\n    long[] firstTierDirCapacity = TieredBlockStoreTestUtils.TIER_CAPACITY[0];\n    long smallestCapacity = firstTierDirCapacity[0];\n    long delta = smallestCapacity / 10;\n    int nDir = firstTierDirCapacity.length;\n    for (int i = 0; i < nDir; i ++) {\n      cache(USER_ID, BLOCK_ID + i, firstTierDirCapacity[i] - delta * i, firstTierLevel, i);\n    }\n    BlockStoreLocation anyDirInFirstTier = BlockStoreLocation.anyDirInTier(firstTierLevel + 1);\n    EvictionPlan plan =\n        mEvictor.freeSpaceWithView(smallestCapacity, anyDirInFirstTier, mManagerView);\n    Assert.assertTrue(EvictorTestUtils.validCascadingPlan(smallestCapacity, plan, mMetaManager));\n    Assert.assertEquals(0, plan.toEvict().size());\n    Assert.assertEquals(1, plan.toMove().size());\n    long blockId = plan.toMove().get(0).getFirst();\n    Assert.assertEquals(BLOCK_ID + nDir - 1, blockId);\n  }","id":55440,"modified_method":"@Test\n  public void cascadingEvictionTest1() throws Exception {\n    // Two tiers, each dir in the second tier has more space than any dir in the first tier. Fill in\n    // the first tier, leave the second tier empty. Request space from the first tier, blocks should\n    // be moved from the first to the second tier without eviction.\n    int firstTierLevel = TieredBlockStoreTestUtils.TIER_LEVEL[0];\n    long[] firstTierDirCapacity = TieredBlockStoreTestUtils.TIER_CAPACITY_BYTES[0];\n    long smallestCapacity = firstTierDirCapacity[0];\n    long delta = smallestCapacity / 10;\n    int nDir = firstTierDirCapacity.length;\n    for (int i = 0; i < nDir; i ++) {\n      cache(USER_ID, BLOCK_ID + i, firstTierDirCapacity[i] - delta * i, firstTierLevel, i);\n    }\n    BlockStoreLocation anyDirInFirstTier = BlockStoreLocation.anyDirInTier(firstTierLevel + 1);\n    EvictionPlan plan =\n        mEvictor.freeSpaceWithView(smallestCapacity, anyDirInFirstTier, mManagerView);\n    Assert.assertTrue(EvictorTestUtils.validCascadingPlan(smallestCapacity, plan, mMetaManager));\n    Assert.assertEquals(0, plan.toEvict().size());\n    Assert.assertEquals(1, plan.toMove().size());\n    long blockId = plan.toMove().get(0).getFirst();\n    Assert.assertEquals(BLOCK_ID + nDir - 1, blockId);\n  }","commit_id":"e62fecd6a1b193f567574e4b3f71b45d50cf1beb","url":"https://github.com/amplab/tachyon"},{"original_method":"@Before\n  public void before() throws Exception {\n    // Creates a dummy test dir under mTestDirPath with 1 byte space so initialization can occur\n    mTestDirPath = mFolder.newFolder().getAbsolutePath();\n    TachyonConf tachyonConf = WorkerContext.getConf();\n    tachyonConf.set(String.format(Constants.WORKER_TIERED_STORAGE_LEVEL_DIRS_PATH_FORMAT, 0),\n        mFolder.newFolder().getAbsolutePath());\n    tachyonConf.set(String.format(Constants.WORKER_TIERED_STORAGE_LEVEL_DIRS_QUOTA_FORMAT, 0),\n        \"1b\");\n    tachyonConf.set(Constants.WORKER_DATA_FOLDER, \"\");\n\n    mTier = StorageTier.newStorageTier(0 /* level */);\n    mDir = StorageDir.newStorageDir(mTier, TEST_DIR_INDEX, TEST_DIR_CAPACITY, mTestDirPath);\n    mBlockMeta = new BlockMeta(TEST_BLOCK_ID, TEST_BLOCK_SIZE, mDir);\n    mTempBlockMeta =\n        new TempBlockMeta(TEST_USER_ID, TEST_TEMP_BLOCK_ID, TEST_TEMP_BLOCK_SIZE, mDir);\n  }","id":55441,"modified_method":"@Before\n  public void before() throws Exception {\n    // Creates a dummy test dir under mTestDirPath with 1 byte space so initialization can occur\n    mTestDirPath = mFolder.newFolder().getAbsolutePath();\n    String[] testDirPaths = { mTestDirPath };\n    long[] testDirCapacity = { 1};\n\n    TieredBlockStoreTestUtils.setTachyonConf(null, TEST_TIER_LEVEL, StorageLevelAlias.MEM,\n        testDirPaths, testDirCapacity, \"\");\n\n    mTier = StorageTier.newStorageTier(TEST_TIER_LEVEL);\n    mDir = StorageDir.newStorageDir(mTier, TEST_DIR_INDEX, TEST_DIR_CAPACITY, mTestDirPath);\n    mBlockMeta = new BlockMeta(TEST_BLOCK_ID, TEST_BLOCK_SIZE, mDir);\n    mTempBlockMeta =\n        new TempBlockMeta(TEST_USER_ID, TEST_TEMP_BLOCK_ID, TEST_TEMP_BLOCK_SIZE, mDir);\n  }","commit_id":"e62fecd6a1b193f567574e4b3f71b45d50cf1beb","url":"https://github.com/amplab/tachyon"},{"original_method":"@Test\n  public void getDirTest() {\n    mThrown.expect(IndexOutOfBoundsException.class);\n    StorageDir dir1 = mTier.getDir(0);\n    Assert.assertEquals(mTestDirPath1, dir1.getDirPath());\n    StorageDir dir2 = mTier.getDir(1);\n    Assert.assertEquals(mTestDirPath2, dir2.getDirPath());\n    // Get dir by a non-existing index, expect getDir to fail and throw IndexOutOfBoundsException\n    mTier.getDir(2);\n  }","id":55442,"modified_method":"@Test\n  public void getDirTest() {\n    mThrown.expect(IndexOutOfBoundsException.class);\n    StorageDir dir1 = mTier.getDir(0);\n    System.out.println(dir1.getDirPath());\n    Assert.assertEquals(mTestDirPath1, dir1.getDirPath());\n    StorageDir dir2 = mTier.getDir(1);\n    Assert.assertEquals(mTestDirPath2, dir2.getDirPath());\n    // Get dir by a non-existing index, expect getDir to fail and throw IndexOutOfBoundsException\n    mTier.getDir(2);\n  }","commit_id":"e62fecd6a1b193f567574e4b3f71b45d50cf1beb","url":"https://github.com/amplab/tachyon"},{"original_method":"@Test\n  public void getTierAliasTest() {\n    Assert.assertEquals(TEST_TIER_ALIAS, mTier.getTierAlias());\n  }","id":55443,"modified_method":"@Test\n  public void getTierAliasTest() {\n    Assert.assertEquals(TEST_TIER_ALIAS.getValue(), mTier.getTierAlias());\n  }","commit_id":"e62fecd6a1b193f567574e4b3f71b45d50cf1beb","url":"https://github.com/amplab/tachyon"},{"original_method":"@Before\n  public final void before() throws Exception {\n    mTestDirPath1 = mFolder.newFolder().getAbsolutePath();\n    mTestDirPath2 = mFolder.newFolder().getAbsolutePath();\n\n    TachyonConf tachyonConf = WorkerContext.getConf();\n    tachyonConf.set(Constants.WORKER_DATA_FOLDER, \"\");\n    tachyonConf.set(\n        String.format(Constants.WORKER_TIERED_STORAGE_LEVEL_ALIAS_FORMAT, TEST_TIER_LEVEL), \"MEM\");\n    tachyonConf.set(\n        String.format(Constants.WORKER_TIERED_STORAGE_LEVEL_DIRS_PATH_FORMAT, TEST_TIER_LEVEL),\n        mTestDirPath1 + \",\" + mTestDirPath2);\n    tachyonConf.set(\n        String.format(Constants.WORKER_TIERED_STORAGE_LEVEL_DIRS_QUOTA_FORMAT, TEST_TIER_LEVEL),\n        TEST_DIR1_CAPACITY + \",\" + TEST_DIR2_CAPACITY);\n\n    mTier = StorageTier.newStorageTier(TEST_TIER_LEVEL);\n    mDir1 = mTier.getDir(0);\n    mTempBlockMeta = new TempBlockMeta(TEST_USER_ID, TEST_TEMP_BLOCK_ID, TEST_BLOCK_SIZE, mDir1);\n\n  }","id":55444,"modified_method":"@Before\n  public final void before() throws Exception {\n    mTestDirPath1 = mFolder.newFolder().getAbsolutePath();\n    mTestDirPath2 = mFolder.newFolder().getAbsolutePath();\n    String[] tierPath = {mTestDirPath1, mTestDirPath2};\n\n    TieredBlockStoreTestUtils.setTachyonConf(null, TEST_TIER_LEVEL, TEST_TIER_ALIAS, tierPath, \n        mTierCapacityBytes, \"\");\n\n    mTier = StorageTier.newStorageTier(TEST_TIER_LEVEL);\n    mDir1 = mTier.getDir(0);\n    mTempBlockMeta = new TempBlockMeta(TEST_USER_ID, TEST_TEMP_BLOCK_ID, TEST_BLOCK_SIZE, mDir1);\n  }","commit_id":"e62fecd6a1b193f567574e4b3f71b45d50cf1beb","url":"https://github.com/amplab/tachyon"},{"original_method":"@Before\n  public void before() throws Exception {\n    mTestDirPath = mFolder.newFolder().getAbsolutePath();\n    // Set up tier with one storage dir under mTestDirPath with 100 bytes capacity.\n    TachyonConf tachyonConf = WorkerContext.getConf();\n    tachyonConf.set(String.format(Constants.WORKER_TIERED_STORAGE_LEVEL_DIRS_PATH_FORMAT, 0),\n        mTestDirPath);\n    tachyonConf.set(String.format(Constants.WORKER_TIERED_STORAGE_LEVEL_DIRS_QUOTA_FORMAT, 0),\n        \"100b\");\n    tachyonConf.set(Constants.WORKER_DATA_FOLDER, \"\");\n\n    StorageTier tier = StorageTier.newStorageTier(0 /* level */);\n    StorageDir dir = tier.getDir(0);\n    mTempBlockMeta = new TempBlockMeta(TEST_USER_ID, TEST_BLOCK_ID, TEST_BLOCK_SIZE, dir);\n  }","id":55445,"modified_method":"@Before\n  public void before() throws Exception {\n    mTestDirPath = mFolder.newFolder().getAbsolutePath();\n    // Set up tier with one storage dir under mTestDirPath with 100 bytes capacity.\n    TieredBlockStoreTestUtils.setTachyonConf(null, TEST_TIER_LEVEL, TEST_TIER_ALIAS,\n        new String[] { mTestDirPath }, TEST_TIER_CAPACITY_BYTES, \"\");\n\n    StorageTier tier = StorageTier.newStorageTier(TEST_TIER_LEVEL /* level */);\n    StorageDir dir = tier.getDir(0);\n    mTempBlockMeta = new TempBlockMeta(TEST_USER_ID, TEST_BLOCK_ID, TEST_BLOCK_SIZE, dir);\n  }","commit_id":"e62fecd6a1b193f567574e4b3f71b45d50cf1beb","url":"https://github.com/amplab/tachyon"},{"original_method":"public void testJobClient() throws Exception {\n    Configuration conf = createJobConf();\n    String jobId = runJob();\n    testGetCounter(jobId, conf);\n    testJobList(jobId, conf);\n    testChangingJobPriority(jobId, conf);\n  }","id":55446,"modified_method":"public void testJobClient() throws Exception {\n    Configuration conf = createJobConf();\n    String jobId = runJob();\n    testGetCounter(jobId, conf);\n    testAllJobList(jobId, conf);\n    testChangingJobPriority(jobId, conf);\n  }","commit_id":"fb48b6cdc9d9314bc8af388a42a4a22755c72651","url":"https://github.com/apache/hadoop"},{"original_method":"/**\n   * main test method\n   */\n\n  public void testJobClient() throws Exception {\n    Configuration conf = createJobConf();\n    Job job = runJob(conf);\n\n    String jobId = job.getJobID().toString();\n    // test jobs list\n    testJobList(jobId, conf);\n    // test job counter\n    testGetCounter(jobId, conf);\n    // status\n    testJobStatus(jobId, conf);\n    // test list of events\n    testJobEvents(jobId, conf);\n    // test job history\n    testJobHistory(conf);\n    // test tracker list\n    testListTrackers(conf);\n    // attempts list\n    testListAttemptIds(jobId, conf);\n    // black list\n    testListBlackList(conf);\n    // test method main and help screen\n    startStop();\n    // test a change job priority .\n    testChangingJobPriority(jobId, conf);\n    // submit job from file\n    testSubmit(conf);\n    // kill a task\n    testKillTask(job, conf);\n    // fail a task\n    testfailTask(job, conf);\n    // kill job\n    testKillJob(jobId, conf);\n\n  }","id":55447,"modified_method":"/**\n   * main test method\n   */\n\n  public void testJobClient() throws Exception {\n    Configuration conf = createJobConf();\n    Job job = runJob(conf);\n\n    String jobId = job.getJobID().toString();\n    // test all jobs list\n    testAllJobList(jobId, conf);\n    // test only submitted jobs list\n    testSubmittedJobList(conf);\n    // test job counter\n    testGetCounter(jobId, conf);\n    // status\n    testJobStatus(jobId, conf);\n    // test list of events\n    testJobEvents(jobId, conf);\n    // test job history\n    testJobHistory(conf);\n    // test tracker list\n    testListTrackers(conf);\n    // attempts list\n    testListAttemptIds(jobId, conf);\n    // black list\n    testListBlackList(conf);\n    // test method main and help screen\n    startStop();\n    // test a change job priority .\n    testChangingJobPriority(jobId, conf);\n    // submit job from file\n    testSubmit(conf);\n    // kill a task\n    testKillTask(conf);\n    // fail a task\n    testfailTask(conf);\n    // kill job\n    testKillJob(conf);\n  }","commit_id":"fb48b6cdc9d9314bc8af388a42a4a22755c72651","url":"https://github.com/apache/hadoop"},{"original_method":"/**\n   * test a kill job\n   */\n  private void testKillJob(String jobId, Configuration conf) throws Exception {\n    CLI jc = createJobClient();\n\n    ByteArrayOutputStream out = new ByteArrayOutputStream();\n    // without jobId\n    int exitCode = runTool(conf, jc, new String[] { \"-kill\" }, out);\n    assertEquals(\"Exit code\", -1, exitCode);\n    // good parameters\n    exitCode = runTool(conf, jc, new String[] { \"-kill\", jobId }, out);\n    assertEquals(\"Exit code\", 0, exitCode);\n    \n    String answer = new String(out.toByteArray(), \"UTF-8\");\n    assertTrue(answer.contains(\"Killed job \" + jobId));\n  }","id":55448,"modified_method":"/**\n   * test a kill job\n   */\n  private void testKillJob(Configuration conf) throws Exception {\n    Job job = runJobInBackGround(conf);\n    String jobId = job.getJobID().toString();\n    CLI jc = createJobClient();\n\n    ByteArrayOutputStream out = new ByteArrayOutputStream();\n    // without jobId\n    int exitCode = runTool(conf, jc, new String[] { \"-kill\" }, out);\n    assertEquals(\"Exit code\", -1, exitCode);\n    // good parameters\n    exitCode = runTool(conf, jc, new String[] { \"-kill\", jobId }, out);\n    assertEquals(\"Exit code\", 0, exitCode);\n    \n    String answer = new String(out.toByteArray(), \"UTF-8\");\n    assertTrue(answer.contains(\"Killed job \" + jobId));\n  }","commit_id":"fb48b6cdc9d9314bc8af388a42a4a22755c72651","url":"https://github.com/apache/hadoop"},{"original_method":"/**\n   * test a kill task\n   */ \n  private void testKillTask(Job job, Configuration conf) throws Exception {\n    CLI jc = createJobClient();\n    TaskID tid = new TaskID(job.getJobID(), TaskType.MAP, 0);\n    TaskAttemptID taid = new TaskAttemptID(tid, 1);\n    ByteArrayOutputStream out = new ByteArrayOutputStream();\n    // bad parameters\n    int exitCode = runTool(conf, jc, new String[] { \"-kill-task\" }, out);\n    assertEquals(\"Exit code\", -1, exitCode);\n\n    try {\n      runTool(conf, jc, new String[] { \"-kill-task\", taid.toString() }, out);\n      fail(\" this task should be killed\");\n    } catch (IOException e) {\n      System.out.println(e);\n      // task completed\n      assertTrue(e.getMessage().contains(\"_0001_m_000000_1\"));\n    }\n  }","id":55449,"modified_method":"/**\n   * test a kill task\n   */ \n  private void testKillTask(Configuration conf) throws Exception {\n    Job job = runJobInBackGround(conf);\n    CLI jc = createJobClient();\n    TaskID tid = new TaskID(job.getJobID(), TaskType.MAP, 0);\n    TaskAttemptID taid = new TaskAttemptID(tid, 1);\n    ByteArrayOutputStream out = new ByteArrayOutputStream();\n    // bad parameters\n    int exitCode = runTool(conf, jc, new String[] { \"-kill-task\" }, out);\n    assertEquals(\"Exit code\", -1, exitCode);\n\n    runTool(conf, jc, new String[] { \"-kill-task\", taid.toString() }, out);\n    String answer = new String(out.toByteArray(), \"UTF-8\");\n    Assert.assertTrue(answer.contains(\"Killed task \" + taid));\n  }","commit_id":"fb48b6cdc9d9314bc8af388a42a4a22755c72651","url":"https://github.com/apache/hadoop"},{"original_method":"/**\n   * print a job list \n   */\n  protected void testJobList(String jobId, Configuration conf) throws Exception {\n    ByteArrayOutputStream out = new ByteArrayOutputStream();\n    // bad options\n\n    int exitCode = runTool(conf, createJobClient(), new String[] { \"-list\",\n        \"alldata\" }, out);\n    assertEquals(\"Exit code\", -1, exitCode);\n    exitCode = runTool(conf, createJobClient(),\n        // all jobs\n        new String[] { \"-list\", \"all\" }, out);\n    assertEquals(\"Exit code\", 0, exitCode);\n    BufferedReader br = new BufferedReader(new InputStreamReader(\n        new ByteArrayInputStream(out.toByteArray())));\n    String line;\n    int counter = 0;\n    while ((line = br.readLine()) != null) {\n      LOG.info(\"line = \" + line);\n      if (line.contains(jobId)) {\n        counter++;\n      }\n    }\n    assertEquals(1, counter);\n    out.reset();\n    // only submitted \n    exitCode = runTool(conf, createJobClient(), new String[] { \"-list\" }, out);\n    assertEquals(\"Exit code\", 0, exitCode);\n    br = new BufferedReader(new InputStreamReader(new ByteArrayInputStream(\n        out.toByteArray())));\n    counter = 0;\n    while ((line = br.readLine()) != null) {\n      LOG.info(\"line = \" + line);\n      if (line.contains(jobId)) {\n        counter++;\n      }\n    }\n    // all jobs submitted! no current\n    assertEquals(1, counter);\n\n  }","id":55450,"modified_method":"/**\n   * print a job list \n   */\n  protected void testAllJobList(String jobId, Configuration conf)\n      throws Exception {\n    ByteArrayOutputStream out = new ByteArrayOutputStream();\n    // bad options\n\n    int exitCode = runTool(conf, createJobClient(), new String[] { \"-list\",\n        \"alldata\" }, out);\n    assertEquals(\"Exit code\", -1, exitCode);\n    exitCode = runTool(conf, createJobClient(),\n        // all jobs\n        new String[] { \"-list\", \"all\" }, out);\n    assertEquals(\"Exit code\", 0, exitCode);\n    BufferedReader br = new BufferedReader(new InputStreamReader(\n        new ByteArrayInputStream(out.toByteArray())));\n    String line;\n    int counter = 0;\n    while ((line = br.readLine()) != null) {\n      LOG.info(\"line = \" + line);\n      if (line.contains(jobId)) {\n        counter++;\n      }\n    }\n    assertEquals(1, counter);\n    out.reset();\n  }","commit_id":"fb48b6cdc9d9314bc8af388a42a4a22755c72651","url":"https://github.com/apache/hadoop"},{"original_method":"/**\n   * test fail task\n   */\n  private void testfailTask(Job job, Configuration conf) throws Exception {\n    CLI jc = createJobClient();\n    TaskID tid = new TaskID(job.getJobID(), TaskType.MAP, 0);\n    TaskAttemptID taid = new TaskAttemptID(tid, 1);\n    ByteArrayOutputStream out = new ByteArrayOutputStream();\n    //  TaskAttemptId is not set\n    int exitCode = runTool(conf, jc, new String[] { \"-fail-task\" }, out);\n    assertEquals(\"Exit code\", -1, exitCode);\n\n    try {\n      runTool(conf, jc, new String[] { \"-fail-task\", taid.toString() }, out);\n      fail(\" this task should field\");\n    } catch (IOException e) {\n      // task completed !\n      assertTrue(e.getMessage().contains(\"_0001_m_000000_1\"));\n    }\n  }","id":55451,"modified_method":"/**\n   * test fail task\n   */\n  private void testfailTask(Configuration conf) throws Exception {\n    Job job = runJobInBackGround(conf);\n    CLI jc = createJobClient();\n    TaskID tid = new TaskID(job.getJobID(), TaskType.MAP, 0);\n    TaskAttemptID taid = new TaskAttemptID(tid, 1);\n    ByteArrayOutputStream out = new ByteArrayOutputStream();\n    // TaskAttemptId is not set\n    int exitCode = runTool(conf, jc, new String[] { \"-fail-task\" }, out);\n    assertEquals(\"Exit code\", -1, exitCode);\n\n    runTool(conf, jc, new String[] { \"-fail-task\", taid.toString() }, out);\n    String answer = new String(out.toByteArray(), \"UTF-8\");\n    Assert\n      .assertTrue(answer.contains(\"Killed task \" + taid + \" by failing it\"));\n  }","commit_id":"fb48b6cdc9d9314bc8af388a42a4a22755c72651","url":"https://github.com/apache/hadoop"},{"original_method":"public static void main(String[] argv) throws Exception {\n    int res = ToolRunner.run(new CLI(), argv);\n    System.exit(res);\n  }","id":55452,"modified_method":"public static void main(String[] argv) throws Exception {\n    int res = ToolRunner.run(new CLI(), argv);\n    ExitUtil.terminate(res);\n  }","commit_id":"9ea20fc537b19a8811d0dbebaa7be7dad070c8b5","url":"https://github.com/apache/hadoop"},{"original_method":"/**\n   * Display the information about a job's tasks, of a particular type and\n   * in a particular state\n   * \n   * @param job the job\n   * @param type the type of the task (map/reduce/setup/cleanup)\n   * @param state the state of the task \n   * (pending/running/completed/failed/killed)\n   * @throws IOException when there is an error communicating with the master\n   * @throws InterruptedException\n   * @throws IllegalArgumentException if an invalid type/state is passed\n   */\n  protected void displayTasks(Job job, String type, String state) \n  throws IOException, InterruptedException {\n    if (!taskTypes.contains(type)) {\n      throw new IllegalArgumentException(\"Invalid type: \" + type + \n          \". Valid types for task are: map, reduce, setup, cleanup.\");\n    }\n    if (!taskStates.contains(state)) {\n      throw new java.lang.IllegalArgumentException(\"Invalid state: \" + state + \n          \". Valid states for task are: pending, running, completed, failed, killed.\");\n    }\n\n    TaskReport[] reports = job.getTaskReports(TaskType.valueOf(type));\n    for (TaskReport report : reports) {\n      TIPStatus status = report.getCurrentStatus();\n      if ((state.equals(\"pending\") && status ==TIPStatus.PENDING) ||\n          (state.equals(\"running\") && status ==TIPStatus.RUNNING) ||\n          (state.equals(\"completed\") && status == TIPStatus.COMPLETE) ||\n          (state.equals(\"failed\") && status == TIPStatus.FAILED) ||\n          (state.equals(\"killed\") && status == TIPStatus.KILLED)) {\n        printTaskAttempts(report);\n      }\n    }\n  }","id":55453,"modified_method":"/**\n   * Display the information about a job's tasks, of a particular type and\n   * in a particular state\n   * \n   * @param job the job\n   * @param type the type of the task (map/reduce/setup/cleanup)\n   * @param state the state of the task \n   * (pending/running/completed/failed/killed)\n   * @throws IOException when there is an error communicating with the master\n   * @throws InterruptedException\n   * @throws IllegalArgumentException if an invalid type/state is passed\n   */\n  protected void displayTasks(Job job, String type, String state) \n  throws IOException, InterruptedException {\n\n    if (!taskStates.contains(state)) {\n      throw new java.lang.IllegalArgumentException(\"Invalid state: \" + state + \n          \". Valid states for task are: pending, running, completed, failed, killed.\");\n    }\n    TaskReport[] reports=null;\n    try{\n      reports = job.getTaskReports(TaskType.valueOf(type));\n    }catch(IllegalArgumentException e){\n      throw new IllegalArgumentException(\"Invalid type: \" + type + \n          \". Valid types for task are: MAP, REDUCE, JOB_SETUP, JOB_CLEANUP, TASK_CLEANUP.\");\n    }\n    for (TaskReport report : reports) {\n      TIPStatus status = report.getCurrentStatus();\n      if ((state.equals(\"pending\") && status ==TIPStatus.PENDING) ||\n          (state.equals(\"running\") && status ==TIPStatus.RUNNING) ||\n          (state.equals(\"completed\") && status == TIPStatus.COMPLETE) ||\n          (state.equals(\"failed\") && status == TIPStatus.FAILED) ||\n          (state.equals(\"killed\") && status == TIPStatus.KILLED)) {\n        printTaskAttempts(report);\n      }\n    }\n  }","commit_id":"9ea20fc537b19a8811d0dbebaa7be7dad070c8b5","url":"https://github.com/apache/hadoop"},{"original_method":"public int run(String[] argv) throws Exception {\n    int exitCode = -1;\n    if (argv.length < 1) {\n      displayUsage(\"\");\n      return exitCode;\n    }    \n    // process arguments\n    String cmd = argv[0];\n    String submitJobFile = null;\n    String jobid = null;\n    String taskid = null;\n    String historyFile = null;\n    String counterGroupName = null;\n    String counterName = null;\n    JobPriority jp = null;\n    String taskType = null;\n    String taskState = null;\n    int fromEvent = 0;\n    int nEvents = 0;\n    boolean getStatus = false;\n    boolean getCounter = false;\n    boolean killJob = false;\n    boolean listEvents = false;\n    boolean viewHistory = false;\n    boolean viewAllHistory = false;\n    boolean listJobs = false;\n    boolean listAllJobs = false;\n    boolean listActiveTrackers = false;\n    boolean listBlacklistedTrackers = false;\n    boolean displayTasks = false;\n    boolean killTask = false;\n    boolean failTask = false;\n    boolean setJobPriority = false;\n    boolean logs = false;\n\n    if (\"-submit\".equals(cmd)) {\n      if (argv.length != 2) {\n        displayUsage(cmd);\n        return exitCode;\n      }\n      submitJobFile = argv[1];\n    } else if (\"-status\".equals(cmd)) {\n      if (argv.length != 2) {\n        displayUsage(cmd);\n        return exitCode;\n      }\n      jobid = argv[1];\n      getStatus = true;\n    } else if(\"-counter\".equals(cmd)) {\n      if (argv.length != 4) {\n        displayUsage(cmd);\n        return exitCode;\n      }\n      getCounter = true;\n      jobid = argv[1];\n      counterGroupName = argv[2];\n      counterName = argv[3];\n    } else if (\"-kill\".equals(cmd)) {\n      if (argv.length != 2) {\n        displayUsage(cmd);\n        return exitCode;\n      }\n      jobid = argv[1];\n      killJob = true;\n    } else if (\"-set-priority\".equals(cmd)) {\n      if (argv.length != 3) {\n        displayUsage(cmd);\n        return exitCode;\n      }\n      jobid = argv[1];\n      try {\n        jp = JobPriority.valueOf(argv[2]); \n      } catch (IllegalArgumentException iae) {\n        LOG.info(iae);\n        displayUsage(cmd);\n        return exitCode;\n      }\n      setJobPriority = true; \n    } else if (\"-events\".equals(cmd)) {\n      if (argv.length != 4) {\n        displayUsage(cmd);\n        return exitCode;\n      }\n      jobid = argv[1];\n      fromEvent = Integer.parseInt(argv[2]);\n      nEvents = Integer.parseInt(argv[3]);\n      listEvents = true;\n    } else if (\"-history\".equals(cmd)) {\n      if (argv.length != 2 && !(argv.length == 3 && \"all\".equals(argv[1]))) {\n         displayUsage(cmd);\n         return exitCode;\n      }\n      viewHistory = true;\n      if (argv.length == 3 && \"all\".equals(argv[1])) {\n        viewAllHistory = true;\n        historyFile = argv[2];\n      } else {\n        historyFile = argv[1];\n      }\n    } else if (\"-list\".equals(cmd)) {\n      if (argv.length != 1 && !(argv.length == 2 && \"all\".equals(argv[1]))) {\n        displayUsage(cmd);\n        return exitCode;\n      }\n      if (argv.length == 2 && \"all\".equals(argv[1])) {\n        listAllJobs = true;\n      } else {\n        listJobs = true;\n      }\n    } else if(\"-kill-task\".equals(cmd)) {\n      if (argv.length != 2) {\n        displayUsage(cmd);\n        return exitCode;\n      }\n      killTask = true;\n      taskid = argv[1];\n    } else if(\"-fail-task\".equals(cmd)) {\n      if (argv.length != 2) {\n        displayUsage(cmd);\n        return exitCode;\n      }\n      failTask = true;\n      taskid = argv[1];\n    } else if (\"-list-active-trackers\".equals(cmd)) {\n      if (argv.length != 1) {\n        displayUsage(cmd);\n        return exitCode;\n      }\n      listActiveTrackers = true;\n    } else if (\"-list-blacklisted-trackers\".equals(cmd)) {\n      if (argv.length != 1) {\n        displayUsage(cmd);\n        return exitCode;\n      }\n      listBlacklistedTrackers = true;\n    } else if (\"-list-attempt-ids\".equals(cmd)) {\n      if (argv.length != 4) {\n        displayUsage(cmd);\n        return exitCode;\n      }\n      jobid = argv[1];\n      taskType = argv[2];\n      taskState = argv[3];\n      displayTasks = true;\n    } else if (\"-logs\".equals(cmd)) {\n      if (argv.length == 2 || argv.length ==3) {\n        logs = true;\n        jobid = argv[1];\n        if (argv.length == 3) {\n          taskid = argv[2];\n        }  else {\n          taskid = null;\n        }\n      } else {\n        displayUsage(cmd);\n        return exitCode;\n      }\n    } else {\n      displayUsage(cmd);\n      return exitCode;\n    }\n\n    // initialize cluster\n    cluster = new Cluster(getConf());\n        \n    // Submit the request\n    try {\n      if (submitJobFile != null) {\n        Job job = Job.getInstance(new JobConf(submitJobFile));\n        job.submit();\n        System.out.println(\"Created job \" + job.getJobID());\n        exitCode = 0;\n      } else if (getStatus) {\n        Job job = cluster.getJob(JobID.forName(jobid));\n        if (job == null) {\n          System.out.println(\"Could not find job \" + jobid);\n        } else {\n          Counters counters = job.getCounters();\n          System.out.println();\n          System.out.println(job);\n          if (counters != null) {\n            System.out.println(counters);\n          } else {\n            System.out.println(\"Counters not available. Job is retired.\");\n          }\n          exitCode = 0;\n        }\n      } else if (getCounter) {\n        Job job = cluster.getJob(JobID.forName(jobid));\n        if (job == null) {\n          System.out.println(\"Could not find job \" + jobid);\n        } else {\n          Counters counters = job.getCounters();\n          if (counters == null) {\n            System.out.println(\"Counters not available for retired job \" + \n            jobid);\n            exitCode = -1;\n          } else {\n            System.out.println(getCounter(counters,\n              counterGroupName, counterName));\n            exitCode = 0;\n          }\n        }\n      } else if (killJob) {\n        Job job = cluster.getJob(JobID.forName(jobid));\n        if (job == null) {\n          System.out.println(\"Could not find job \" + jobid);\n        } else {\n          job.killJob();\n          System.out.println(\"Killed job \" + jobid);\n          exitCode = 0;\n        }\n      } else if (setJobPriority) {\n        Job job = cluster.getJob(JobID.forName(jobid));\n        if (job == null) {\n          System.out.println(\"Could not find job \" + jobid);\n        } else {\n          job.setPriority(jp);\n          System.out.println(\"Changed job priority.\");\n          exitCode = 0;\n        } \n      } else if (viewHistory) {\n        viewHistory(historyFile, viewAllHistory);\n        exitCode = 0;\n      } else if (listEvents) {\n        listEvents(cluster.getJob(JobID.forName(jobid)), fromEvent, nEvents);\n        exitCode = 0;\n      } else if (listJobs) {\n        listJobs(cluster);\n        exitCode = 0;\n      } else if (listAllJobs) {\n        listAllJobs(cluster);\n        exitCode = 0;\n      } else if (listActiveTrackers) {\n        listActiveTrackers(cluster);\n        exitCode = 0;\n      } else if (listBlacklistedTrackers) {\n        listBlacklistedTrackers(cluster);\n        exitCode = 0;\n      } else if (displayTasks) {\n        displayTasks(cluster.getJob(JobID.forName(jobid)), taskType, taskState);\n      } else if(killTask) {\n        TaskAttemptID taskID = TaskAttemptID.forName(taskid);\n        Job job = cluster.getJob(taskID.getJobID());\n        if (job == null) {\n          System.out.println(\"Could not find job \" + jobid);\n        } else if (job.killTask(taskID)) {\n          System.out.println(\"Killed task \" + taskid);\n          exitCode = 0;\n        } else {\n          System.out.println(\"Could not kill task \" + taskid);\n          exitCode = -1;\n        }\n      } else if(failTask) {\n        TaskAttemptID taskID = TaskAttemptID.forName(taskid);\n        Job job = cluster.getJob(taskID.getJobID());\n        if (job == null) {\n            System.out.println(\"Could not find job \" + jobid);\n        } else if(job.failTask(taskID)) {\n          System.out.println(\"Killed task \" + taskID + \" by failing it\");\n          exitCode = 0;\n        } else {\n          System.out.println(\"Could not fail task \" + taskid);\n          exitCode = -1;\n        }\n      } else if (logs) {\n        try {\n        JobID jobID = JobID.forName(jobid);\n        TaskAttemptID taskAttemptID = TaskAttemptID.forName(taskid);\n        LogParams logParams = cluster.getLogParams(jobID, taskAttemptID);\n        LogDumper logDumper = new LogDumper();\n        logDumper.setConf(getConf());\n        exitCode = logDumper.dumpAContainersLogs(logParams.getApplicationId(),\n            logParams.getContainerId(), logParams.getNodeId(),\n            logParams.getOwner());\n        } catch (IOException e) {\n          if (e instanceof RemoteException) {\n            throw e;\n          } \n          System.out.println(e.getMessage());\n        }\n      }\n    } catch (RemoteException re) {\n      IOException unwrappedException = re.unwrapRemoteException();\n      if (unwrappedException instanceof AccessControlException) {\n        System.out.println(unwrappedException.getMessage());\n      } else {\n        throw re;\n      }\n    } finally {\n      cluster.close();\n    }\n    return exitCode;\n  }","id":55454,"modified_method":"public int run(String[] argv) throws Exception {\n    int exitCode = -1;\n    if (argv.length < 1) {\n      displayUsage(\"\");\n      return exitCode;\n    }    \n    // process arguments\n    String cmd = argv[0];\n    String submitJobFile = null;\n    String jobid = null;\n    String taskid = null;\n    String historyFile = null;\n    String counterGroupName = null;\n    String counterName = null;\n    JobPriority jp = null;\n    String taskType = null;\n    String taskState = null;\n    int fromEvent = 0;\n    int nEvents = 0;\n    boolean getStatus = false;\n    boolean getCounter = false;\n    boolean killJob = false;\n    boolean listEvents = false;\n    boolean viewHistory = false;\n    boolean viewAllHistory = false;\n    boolean listJobs = false;\n    boolean listAllJobs = false;\n    boolean listActiveTrackers = false;\n    boolean listBlacklistedTrackers = false;\n    boolean displayTasks = false;\n    boolean killTask = false;\n    boolean failTask = false;\n    boolean setJobPriority = false;\n    boolean logs = false;\n\n    if (\"-submit\".equals(cmd)) {\n      if (argv.length != 2) {\n        displayUsage(cmd);\n        return exitCode;\n      }\n      submitJobFile = argv[1];\n    } else if (\"-status\".equals(cmd)) {\n      if (argv.length != 2) {\n        displayUsage(cmd);\n        return exitCode;\n      }\n      jobid = argv[1];\n      getStatus = true;\n    } else if(\"-counter\".equals(cmd)) {\n      if (argv.length != 4) {\n        displayUsage(cmd);\n        return exitCode;\n      }\n      getCounter = true;\n      jobid = argv[1];\n      counterGroupName = argv[2];\n      counterName = argv[3];\n    } else if (\"-kill\".equals(cmd)) {\n      if (argv.length != 2) {\n        displayUsage(cmd);\n        return exitCode;\n      }\n      jobid = argv[1];\n      killJob = true;\n    } else if (\"-set-priority\".equals(cmd)) {\n      if (argv.length != 3) {\n        displayUsage(cmd);\n        return exitCode;\n      }\n      jobid = argv[1];\n      try {\n        jp = JobPriority.valueOf(argv[2]); \n      } catch (IllegalArgumentException iae) {\n        LOG.info(iae);\n        displayUsage(cmd);\n        return exitCode;\n      }\n      setJobPriority = true; \n    } else if (\"-events\".equals(cmd)) {\n      if (argv.length != 4) {\n        displayUsage(cmd);\n        return exitCode;\n      }\n      jobid = argv[1];\n      fromEvent = Integer.parseInt(argv[2]);\n      nEvents = Integer.parseInt(argv[3]);\n      listEvents = true;\n    } else if (\"-history\".equals(cmd)) {\n      if (argv.length != 2 && !(argv.length == 3 && \"all\".equals(argv[1]))) {\n         displayUsage(cmd);\n         return exitCode;\n      }\n      viewHistory = true;\n      if (argv.length == 3 && \"all\".equals(argv[1])) {\n        viewAllHistory = true;\n        historyFile = argv[2];\n      } else {\n        historyFile = argv[1];\n      }\n    } else if (\"-list\".equals(cmd)) {\n      if (argv.length != 1 && !(argv.length == 2 && \"all\".equals(argv[1]))) {\n        displayUsage(cmd);\n        return exitCode;\n      }\n      if (argv.length == 2 && \"all\".equals(argv[1])) {\n        listAllJobs = true;\n      } else {\n        listJobs = true;\n      }\n    } else if(\"-kill-task\".equals(cmd)) {\n      if (argv.length != 2) {\n        displayUsage(cmd);\n        return exitCode;\n      }\n      killTask = true;\n      taskid = argv[1];\n    } else if(\"-fail-task\".equals(cmd)) {\n      if (argv.length != 2) {\n        displayUsage(cmd);\n        return exitCode;\n      }\n      failTask = true;\n      taskid = argv[1];\n    } else if (\"-list-active-trackers\".equals(cmd)) {\n      if (argv.length != 1) {\n        displayUsage(cmd);\n        return exitCode;\n      }\n      listActiveTrackers = true;\n    } else if (\"-list-blacklisted-trackers\".equals(cmd)) {\n      if (argv.length != 1) {\n        displayUsage(cmd);\n        return exitCode;\n      }\n      listBlacklistedTrackers = true;\n    } else if (\"-list-attempt-ids\".equals(cmd)) {\n      if (argv.length != 4) {\n        displayUsage(cmd);\n        return exitCode;\n      }\n      jobid = argv[1];\n      taskType = argv[2];\n      taskState = argv[3];\n      displayTasks = true;\n    } else if (\"-logs\".equals(cmd)) {\n      if (argv.length == 2 || argv.length ==3) {\n        logs = true;\n        jobid = argv[1];\n        if (argv.length == 3) {\n          taskid = argv[2];\n        }  else {\n          taskid = null;\n        }\n      } else {\n        displayUsage(cmd);\n        return exitCode;\n      }\n    } else {\n      displayUsage(cmd);\n      return exitCode;\n    }\n\n    // initialize cluster\n    cluster = new Cluster(getConf());\n        \n    // Submit the request\n    try {\n      if (submitJobFile != null) {\n        Job job = Job.getInstance(new JobConf(submitJobFile));\n        job.submit();\n        System.out.println(\"Created job \" + job.getJobID());\n        exitCode = 0;\n      } else if (getStatus) {\n        Job job = cluster.getJob(JobID.forName(jobid));\n        if (job == null) {\n          System.out.println(\"Could not find job \" + jobid);\n        } else {\n          Counters counters = job.getCounters();\n          System.out.println();\n          System.out.println(job);\n          if (counters != null) {\n            System.out.println(counters);\n          } else {\n            System.out.println(\"Counters not available. Job is retired.\");\n          }\n          exitCode = 0;\n        }\n      } else if (getCounter) {\n        Job job = cluster.getJob(JobID.forName(jobid));\n        if (job == null) {\n          System.out.println(\"Could not find job \" + jobid);\n        } else {\n          Counters counters = job.getCounters();\n          if (counters == null) {\n            System.out.println(\"Counters not available for retired job \" + \n            jobid);\n            exitCode = -1;\n          } else {\n            System.out.println(getCounter(counters,\n              counterGroupName, counterName));\n            exitCode = 0;\n          }\n        }\n      } else if (killJob) {\n        Job job = cluster.getJob(JobID.forName(jobid));\n        if (job == null) {\n          System.out.println(\"Could not find job \" + jobid);\n        } else {\n          job.killJob();\n          System.out.println(\"Killed job \" + jobid);\n          exitCode = 0;\n        }\n      } else if (setJobPriority) {\n        Job job = cluster.getJob(JobID.forName(jobid));\n        if (job == null) {\n          System.out.println(\"Could not find job \" + jobid);\n        } else {\n          job.setPriority(jp);\n          System.out.println(\"Changed job priority.\");\n          exitCode = 0;\n        } \n      } else if (viewHistory) {\n        viewHistory(historyFile, viewAllHistory);\n        exitCode = 0;\n      } else if (listEvents) {\n        listEvents(cluster.getJob(JobID.forName(jobid)), fromEvent, nEvents);\n        exitCode = 0;\n      } else if (listJobs) {\n        listJobs(cluster);\n        exitCode = 0;\n      } else if (listAllJobs) {\n        listAllJobs(cluster);\n        exitCode = 0;\n      } else if (listActiveTrackers) {\n        listActiveTrackers(cluster);\n        exitCode = 0;\n      } else if (listBlacklistedTrackers) {\n        listBlacklistedTrackers(cluster);\n        exitCode = 0;\n      } else if (displayTasks) {\n        displayTasks(cluster.getJob(JobID.forName(jobid)), taskType, taskState);\n        exitCode = 0;\n      } else if(killTask) {\n        TaskAttemptID taskID = TaskAttemptID.forName(taskid);\n        Job job = cluster.getJob(taskID.getJobID());\n        if (job == null) {\n          System.out.println(\"Could not find job \" + jobid);\n        } else if (job.killTask(taskID)) {\n          System.out.println(\"Killed task \" + taskid);\n          exitCode = 0;\n        } else {\n          System.out.println(\"Could not kill task \" + taskid);\n          exitCode = -1;\n        }\n      } else if(failTask) {\n        TaskAttemptID taskID = TaskAttemptID.forName(taskid);\n        Job job = cluster.getJob(taskID.getJobID());\n        if (job == null) {\n            System.out.println(\"Could not find job \" + jobid);\n        } else if(job.failTask(taskID)) {\n          System.out.println(\"Killed task \" + taskID + \" by failing it\");\n          exitCode = 0;\n        } else {\n          System.out.println(\"Could not fail task \" + taskid);\n          exitCode = -1;\n        }\n      } else if (logs) {\n        try {\n        JobID jobID = JobID.forName(jobid);\n        TaskAttemptID taskAttemptID = TaskAttemptID.forName(taskid);\n        LogParams logParams = cluster.getLogParams(jobID, taskAttemptID);\n        LogDumper logDumper = new LogDumper();\n        logDumper.setConf(getConf());\n        exitCode = logDumper.dumpAContainersLogs(logParams.getApplicationId(),\n            logParams.getContainerId(), logParams.getNodeId(),\n            logParams.getOwner());\n        } catch (IOException e) {\n          if (e instanceof RemoteException) {\n            throw e;\n          } \n          System.out.println(e.getMessage());\n        }\n      }\n    } catch (RemoteException re) {\n      IOException unwrappedException = re.unwrapRemoteException();\n      if (unwrappedException instanceof AccessControlException) {\n        System.out.println(unwrappedException.getMessage());\n      } else {\n        throw re;\n      }\n    } finally {\n      cluster.close();\n    }\n    return exitCode;\n  }","commit_id":"9ea20fc537b19a8811d0dbebaa7be7dad070c8b5","url":"https://github.com/apache/hadoop"},{"original_method":"@Test\n  public void testGetCounter(String jobId,\n      Configuration conf) throws Exception {\n    ByteArrayOutputStream out = new ByteArrayOutputStream();\n    int exitCode = runTool(conf, createJobClient(),\n        new String[] { \"-counter\", jobId,\n        \"org.apache.hadoop.mapreduce.TaskCounter\", \"MAP_INPUT_RECORDS\" },\n        out);\n    assertEquals(\"Exit code\", 0, exitCode);\n    assertEquals(\"Counter\", \"3\", out.toString().trim());\n  }","id":55455,"modified_method":"/**\n   * print counters \n   */\n  public void testGetCounter(String jobId, Configuration conf) throws Exception {\n    ByteArrayOutputStream out = new ByteArrayOutputStream();\n    // bad command \n    int exitCode = runTool(conf, createJobClient(),\n        new String[] { \"-counter\", }, out);\n    assertEquals(\"Exit code\", -1, exitCode);\n    \n    exitCode = runTool(conf, createJobClient(),\n        new String[] { \"-counter\", jobId,\n            \"org.apache.hadoop.mapreduce.TaskCounter\", \"MAP_INPUT_RECORDS\" },\n        out);\n    assertEquals(\"Exit code\", 0, exitCode);\n    assertEquals(\"Counter\", \"3\", out.toString().trim());\n  }","commit_id":"9ea20fc537b19a8811d0dbebaa7be7dad070c8b5","url":"https://github.com/apache/hadoop"},{"original_method":"private Job runJob(Configuration conf) throws Exception {\n    String input = \"hello1\\nhello2\\nhello3\\n\";\n\n    Job job = MapReduceTestUtil.createJob(conf,\n      getInputDir(), getOutputDir(), 1, 1, input);\n    job.setJobName(\"mr\");\n    job.setPriority(JobPriority.HIGH);\n    job.waitForCompletion(true);\n    return job;\n  }","id":55456,"modified_method":"private Job runJob(Configuration conf) throws Exception {\n    String input = \"hello1\\nhello2\\nhello3\\n\";\n\n    Job job = MapReduceTestUtil.createJob(conf, getInputDir(), getOutputDir(),\n        1, 1, input);\n    job.setJobName(\"mr\");\n    job.setPriority(JobPriority.NORMAL);\n    job.waitForCompletion(true);\n    return job;\n  }","commit_id":"9ea20fc537b19a8811d0dbebaa7be7dad070c8b5","url":"https://github.com/apache/hadoop"},{"original_method":"@Test\n  public void testChangingJobPriority(String jobId, Configuration conf)\n      throws Exception {\n    int exitCode = runTool(conf, createJobClient(),\n        new String[] { \"-set-priority\", jobId, \"VERY_LOW\" },\n        new ByteArrayOutputStream());\n    assertEquals(\"Exit code\", 0, exitCode);\n    verifyJobPriority(jobId, \"VERY_LOW\", conf, createJobClient());\n  }","id":55457,"modified_method":"public void testChangingJobPriority(String jobId, Configuration conf)\n      throws Exception {\n    int exitCode = runTool(conf, createJobClient(),\n        new String[] { \"-set-priority\" }, new ByteArrayOutputStream());\n    assertEquals(\"Exit code\", -1, exitCode);\n    exitCode = runTool(conf, createJobClient(), new String[] { \"-set-priority\",\n        jobId, \"VERY_LOW\" }, new ByteArrayOutputStream());\n    assertEquals(\"Exit code\", 0, exitCode);\n    // because this method does not implemented still.\n    verifyJobPriority(jobId, \"NORMAL\", conf, createJobClient());\n  }","commit_id":"9ea20fc537b19a8811d0dbebaa7be7dad070c8b5","url":"https://github.com/apache/hadoop"},{"original_method":"@Test\n  public void testJobSubmissionSpecsAndFiles() throws Exception {\n    Configuration conf = createJobConf();\n    Job job = MapReduceTestUtil.createJob(conf,\n          getInputDir(), getOutputDir(), 1, 1);\n    job.setOutputFormatClass(BadOutputFormat.class);\n    try {\n      job.submit();\n      fail(\"Should've thrown an exception while checking output specs.\");\n    } catch (Exception e) {\n      assertTrue(e instanceof IOException);\n    }\n    JobID jobId = job.getJobID();\n    Cluster cluster = new Cluster(conf);\n    Path jobStagingArea = JobSubmissionFiles.getStagingDir(\n        cluster,\n        job.getConfiguration());\n    Path submitJobDir = new Path(jobStagingArea, jobId.toString());\n    Path submitJobFile = JobSubmissionFiles.getJobConfPath(submitJobDir);\n    assertFalse(\n        \"Shouldn't have created a job file if job specs failed.\",\n        FileSystem.get(conf).exists(submitJobFile)\n    );\n  }","id":55458,"modified_method":"public void testJobSubmissionSpecsAndFiles() throws Exception {\n    Configuration conf = createJobConf();\n    Job job = MapReduceTestUtil.createJob(conf, getInputDir(), getOutputDir(),\n        1, 1);\n    job.setOutputFormatClass(BadOutputFormat.class);\n    try {\n      job.submit();\n      fail(\"Should've thrown an exception while checking output specs.\");\n    } catch (Exception e) {\n      assertTrue(e instanceof IOException);\n    }\n    Cluster cluster = new Cluster(conf);\n    Path jobStagingArea = JobSubmissionFiles.getStagingDir(cluster,\n        job.getConfiguration());\n    Path submitJobDir = new Path(jobStagingArea, \"JobId\");\n    Path submitJobFile = JobSubmissionFiles.getJobConfPath(submitJobDir);\n    assertFalse(\"Shouldn't have created a job file if job specs failed.\",\n        FileSystem.get(conf).exists(submitJobFile));\n  }","commit_id":"9ea20fc537b19a8811d0dbebaa7be7dad070c8b5","url":"https://github.com/apache/hadoop"},{"original_method":"protected void verifyJobPriority(String jobId, String priority,\n      Configuration conf, CLI jc) throws Exception {\n    PipedInputStream pis = new PipedInputStream();\n    PipedOutputStream pos = new PipedOutputStream(pis);\n    int exitCode = runTool(conf, jc,\n        new String[] { \"-list\", \"all\" },\n        pos);\n    assertEquals(\"Exit code\", 0, exitCode);\n    BufferedReader br = new BufferedReader(new InputStreamReader(pis));\n    String line = null;\n    while ((line = br.readLine()) != null) {\n      LOG.info(\"line = \" + line);\n      if (!line.startsWith(jobId)) {\n        continue;\n      }\n      assertTrue(line.contains(priority));\n      break;\n    }\n    pis.close();\n  }","id":55459,"modified_method":"protected void verifyJobPriority(String jobId, String priority,\n      Configuration conf, CLI jc) throws Exception {\n    PipedInputStream pis = new PipedInputStream();\n    PipedOutputStream pos = new PipedOutputStream(pis);\n    int exitCode = runTool(conf, jc, new String[] { \"-list\", \"all\" }, pos);\n    assertEquals(\"Exit code\", 0, exitCode);\n    BufferedReader br = new BufferedReader(new InputStreamReader(pis));\n    String line;\n    while ((line = br.readLine()) != null) {\n      LOG.info(\"line = \" + line);\n      if (!line.contains(jobId)) {\n        continue;\n      }\n      assertTrue(line.contains(priority));\n      break;\n    }\n    pis.close();\n  }","commit_id":"9ea20fc537b19a8811d0dbebaa7be7dad070c8b5","url":"https://github.com/apache/hadoop"},{"original_method":"@Test\n  public void testJobList(String jobId,\n      Configuration conf) throws Exception {\n    verifyJobPriority(jobId, \"HIGH\", conf, createJobClient());\n  }","id":55460,"modified_method":"/**\n   * print a job list \n   */\n  protected void testJobList(String jobId, Configuration conf) throws Exception {\n    ByteArrayOutputStream out = new ByteArrayOutputStream();\n    // bad options\n\n    int exitCode = runTool(conf, createJobClient(), new String[] { \"-list\",\n        \"alldata\" }, out);\n    assertEquals(\"Exit code\", -1, exitCode);\n    exitCode = runTool(conf, createJobClient(),\n        // all jobs\n        new String[] { \"-list\", \"all\" }, out);\n    assertEquals(\"Exit code\", 0, exitCode);\n    BufferedReader br = new BufferedReader(new InputStreamReader(\n        new ByteArrayInputStream(out.toByteArray())));\n    String line;\n    int counter = 0;\n    while ((line = br.readLine()) != null) {\n      LOG.info(\"line = \" + line);\n      if (line.contains(jobId)) {\n        counter++;\n      }\n    }\n    assertEquals(1, counter);\n    out.reset();\n    // only submitted \n    exitCode = runTool(conf, createJobClient(), new String[] { \"-list\" }, out);\n    assertEquals(\"Exit code\", 0, exitCode);\n    br = new BufferedReader(new InputStreamReader(new ByteArrayInputStream(\n        out.toByteArray())));\n    counter = 0;\n    while ((line = br.readLine()) != null) {\n      LOG.info(\"line = \" + line);\n      if (line.contains(jobId)) {\n        counter++;\n      }\n    }\n    // all jobs submitted! no current\n    assertEquals(1, counter);\n\n  }","commit_id":"9ea20fc537b19a8811d0dbebaa7be7dad070c8b5","url":"https://github.com/apache/hadoop"},{"original_method":"@Test\n  public void testJobClient() throws Exception {\n    Configuration conf = createJobConf();\n    Job job = runJob(conf);\n    String jobId = job.getJobID().toString();\n    testGetCounter(jobId, conf);\n    testJobList(jobId, conf);\n    testChangingJobPriority(jobId, conf);\n  }","id":55461,"modified_method":"/**\n   * main test method\n   */\n\n  public void testJobClient() throws Exception {\n    Configuration conf = createJobConf();\n    Job job = runJob(conf);\n\n    String jobId = job.getJobID().toString();\n    // test jobs list\n    testJobList(jobId, conf);\n    // test job counter\n    testGetCounter(jobId, conf);\n    // status\n    testJobStatus(jobId, conf);\n    // test list of events\n    testJobEvents(jobId, conf);\n    // test job history\n    testJobHistory(conf);\n    // test tracker list\n    testListTrackers(conf);\n    // attempts list\n    testListAttemptIds(jobId, conf);\n    // black list\n    testListBlackList(conf);\n    // test method main and help screen\n    startStop();\n    // test a change job priority .\n    testChangingJobPriority(jobId, conf);\n    // submit job from file\n    testSubmit(conf);\n    // kill a task\n    testKillTask(job, conf);\n    // fail a task\n    testfailTask(job, conf);\n    // kill job\n    testKillJob(jobId, conf);\n\n  }","commit_id":"9ea20fc537b19a8811d0dbebaa7be7dad070c8b5","url":"https://github.com/apache/hadoop"},{"original_method":"public boolean isHttpMethodAllowedForAction(GroovyObject controller, String httpMethod, String actionName) {\n\t\tboolean isAllowed = true;\n\t\ttry {\n\t\t\tObject methodRestrictionsProperty = controller.getProperty(ALLOWED_HTTP_METHODS_PROPERTY);\n\t\t\tif(methodRestrictionsProperty instanceof Map) {\n\t\t\t\tMap map = (Map)methodRestrictionsProperty;\n\t\t\t\tif(map.containsKey(actionName)) {\n\t\t\t\t\tObject value = map.get(actionName);\n\t\t\t\t\tif(value instanceof List) {\n\t\t\t\t\t\tList listOfMethods = (List) value;\n\t\t\t\t\t\tisAllowed = listOfMethods.contains(httpMethod);\n\t\t\t\t\t} else if(value instanceof String) {\n\t\t\t\t\t\tisAllowed = value.equals(httpMethod);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t} catch (MissingPropertyException mpe) {\n\t\t}\n\t\treturn isAllowed;\n\t}","id":55462,"modified_method":"public boolean isHttpMethodAllowedForAction(GroovyObject controller, String httpMethod, String actionName) {\n\t\tboolean isAllowed = true;\n\t\tfinal Map controllerProperties = DefaultGroovyMethods.getProperties(controller);\n\t\tObject methodRestrictionsProperty = controllerProperties.get(ALLOWED_HTTP_METHODS_PROPERTY);\n\t\tif(methodRestrictionsProperty instanceof Map) {\n\t\t\tMap map = (Map)methodRestrictionsProperty;\n\t\t\tif(map.containsKey(actionName)) {\n\t\t\t\tObject value = map.get(actionName);\n\t\t\t\tif(value instanceof List) {\n\t\t\t\t\tList listOfMethods = (List) value;\n\t\t\t\t\tisAllowed = listOfMethods.contains(httpMethod);\n\t\t\t\t} else if(value instanceof String) {\n\t\t\t\t\tisAllowed = value.equals(httpMethod);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn isAllowed;\n\t}","commit_id":"386e0b050b844aae9354c7631a8525a535614f4c","url":"https://github.com/grails/grails-core"},{"original_method":"public boolean isInterceptedBefore(GroovyObject controller, String action) {\t\t\n\t\ttry {\n\t\t\treturn isIntercepted(controller.getProperty(BEFORE_INTERCEPTOR),action);\n\t\t} catch (MissingPropertyException mpe) {\n\t\t\treturn false;\n\t\t}\n\t}","id":55463,"modified_method":"public boolean isInterceptedBefore(GroovyObject controller, String action) {\n\t\tfinal Map controllerProperties = DefaultGroovyMethods.getProperties(controller);\n\t\treturn isIntercepted(controllerProperties.get(BEFORE_INTERCEPTOR),action);\n\t}","commit_id":"386e0b050b844aae9354c7631a8525a535614f4c","url":"https://github.com/grails/grails-core"},{"original_method":"public Closure getBeforeInterceptor(GroovyObject controller) {\n\t\ttry {\n\t\t\treturn getInterceptor(controller.getProperty(BEFORE_INTERCEPTOR));\n\t\t} catch (MissingPropertyException mpe) {\n\t\t\treturn null;\n\t\t}\n\t}","id":55464,"modified_method":"public Closure getBeforeInterceptor(GroovyObject controller) {\n\t\tfinal Map controllerProperties = DefaultGroovyMethods.getProperties(controller);\n\t\treturn getInterceptor(controllerProperties.get(BEFORE_INTERCEPTOR));\n\t}","commit_id":"386e0b050b844aae9354c7631a8525a535614f4c","url":"https://github.com/grails/grails-core"},{"original_method":"public Closure getAfterInterceptor(GroovyObject controller) {\n\t\ttry {\n\t\t\treturn getInterceptor(controller.getProperty(AFTER_INTERCEPTOR));\n\t\t} catch (MissingPropertyException mpe) {\n\t\t\treturn null;\n\t\t}\n\t}","id":55465,"modified_method":"public Closure getAfterInterceptor(GroovyObject controller) {\n\t\tfinal Map controllerProperties = DefaultGroovyMethods.getProperties(controller);\n\t\treturn getInterceptor(controllerProperties.get(AFTER_INTERCEPTOR));\n\t}","commit_id":"386e0b050b844aae9354c7631a8525a535614f4c","url":"https://github.com/grails/grails-core"},{"original_method":"public boolean isInterceptedAfter(GroovyObject controller, String action) {\n\t\ttry {\n\t\t\treturn isIntercepted(controller.getProperty(AFTER_INTERCEPTOR),action);\n\t\t} catch (MissingPropertyException mpe) {\n\t\t\treturn false;\n\t\t}\n\t}","id":55466,"modified_method":"public boolean isInterceptedAfter(GroovyObject controller, String action) {\n\t\tfinal Map controllerProperties = DefaultGroovyMethods.getProperties(controller);\n\t\treturn isIntercepted(controllerProperties.get(AFTER_INTERCEPTOR),action);\n\t}","commit_id":"386e0b050b844aae9354c7631a8525a535614f4c","url":"https://github.com/grails/grails-core"},{"original_method":"public boolean isHttpMethodAllowedForAction(GroovyObject controller, String httpMethod, String actionName) {\n\t\tboolean isAllowed = true;\n\t\tfinal Map controllerProperties = DefaultGroovyMethods.getProperties(controller);\n\t\tObject methodRestrictionsProperty = controllerProperties.get(ALLOWED_HTTP_METHODS_PROPERTY);\n\t\tif(methodRestrictionsProperty instanceof Map) {\n\t\t\tMap map = (Map)methodRestrictionsProperty;\n\t\t\tif(map.containsKey(actionName)) {\n\t\t\t\tObject value = map.get(actionName);\n\t\t\t\tif(value instanceof List) {\n\t\t\t\t\tList listOfMethods = (List) value;\n\t\t\t\t\tisAllowed = listOfMethods.contains(httpMethod);\n\t\t\t\t} else if(value instanceof String) {\n\t\t\t\t\tisAllowed = value.equals(httpMethod);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn isAllowed;\n\t}","id":55467,"modified_method":"public boolean isHttpMethodAllowedForAction(GroovyObject controller, String httpMethod, String actionName) {\n\t\tboolean isAllowed = true;\n\t\tObject methodRestrictionsProperty = null;\n        if(controller.getMetaClass().hasProperty(controller, ALLOWED_HTTP_METHODS_PROPERTY) != null) {\n            methodRestrictionsProperty = controller.getProperty(ALLOWED_HTTP_METHODS_PROPERTY);\n        }\n\t\tif(methodRestrictionsProperty instanceof Map) {\n\t\t\tMap map = (Map)methodRestrictionsProperty;\n\t\t\tif(map.containsKey(actionName)) {\n\t\t\t\tObject value = map.get(actionName);\n\t\t\t\tif(value instanceof List) {\n\t\t\t\t\tList listOfMethods = (List) value;\n\t\t\t\t\tisAllowed = listOfMethods.contains(httpMethod);\n\t\t\t\t} else if(value instanceof String) {\n\t\t\t\t\tisAllowed = value.equals(httpMethod);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn isAllowed;\n\t}","commit_id":"00076c0c375a8a34cafe6539a6603cc360116721","url":"https://github.com/grails/grails-core"},{"original_method":"public boolean isInterceptedBefore(GroovyObject controller, String action) {\n\t\tfinal Map controllerProperties = DefaultGroovyMethods.getProperties(controller);\n\t\treturn isIntercepted(controllerProperties.get(BEFORE_INTERCEPTOR),action);\n\t}","id":55468,"modified_method":"public boolean isInterceptedBefore(GroovyObject controller, String action) {\n        return controller.getMetaClass().hasProperty(controller, BEFORE_INTERCEPTOR) != null && isIntercepted(controller.getProperty(BEFORE_INTERCEPTOR), action);\n    }","commit_id":"00076c0c375a8a34cafe6539a6603cc360116721","url":"https://github.com/grails/grails-core"},{"original_method":"public boolean isInterceptedAfter(GroovyObject controller, String action) {\n\t\tfinal Map controllerProperties = DefaultGroovyMethods.getProperties(controller);\n\t\treturn isIntercepted(controllerProperties.get(AFTER_INTERCEPTOR),action);\n\t}","id":55469,"modified_method":"public boolean isInterceptedAfter(GroovyObject controller, String action) {\n        return controller.getMetaClass().hasProperty(controller, AFTER_INTERCEPTOR) != null && isIntercepted(controller.getProperty(AFTER_INTERCEPTOR), action);\n\t}","commit_id":"00076c0c375a8a34cafe6539a6603cc360116721","url":"https://github.com/grails/grails-core"},{"original_method":"protected RouteBuilder createRouteBuilder() throws Exception {\n        return new RouteBuilder() {\n            public void configure() throws Exception {\n                from(\"mina2:tcp://127.0.0.1:\" + getPort() + \"?sync=true&codec=#hl7codec\").process(new Processor() {\n                    public void process(Exchange exchange) throws Exception {\n                        assertEquals(70010, exchange.getIn().getBody().toString().length());\n                        MDM_T02 input = (MDM_T02)exchange.getIn().getBody(Message.class);\n                        assertEquals(\"2.5\", input.getVersion());\n                        MSH msh = input.getMSH();\n                        assertEquals(\"20071129144629\", msh.getDateTimeOfMessage().getTime().getValue());\n                        exchange.getOut().setBody(\"some response\");\n                    }\n                }).to(\"mock:result\");\n            }\n        };\n    }","id":55470,"modified_method":"protected RouteBuilder createRouteBuilder() throws Exception {\n        return new RouteBuilder() {\n            public void configure() throws Exception {\n                from(\"mina2:tcp://127.0.0.1:\" + getPort() + \"?sync=true&codec=#hl7codec\").process(new Processor() {\n                    public void process(Exchange exchange) throws Exception {\n                        assertEquals(70010, exchange.getIn().getBody(byte[].class).length);\n                        MDM_T02 input = (MDM_T02)exchange.getIn().getBody(Message.class);\n                        assertEquals(\"2.5\", input.getVersion());\n                        MSH msh = input.getMSH();\n                        assertEquals(\"20071129144629\", msh.getDateTimeOfMessage().getTime().getValue());\n                        exchange.getOut().setBody(\"some response\");\n                    }\n                }).to(\"mock:result\");\n            }\n        };\n    }","commit_id":"402e5a1d07fccefacea85cb6a19ab669085202b1","url":"https://github.com/apache/camel"},{"original_method":"@Test\n    public void testSendHL7Message() throws Exception {\n        // START SNIPPET: e2\n        BufferedReader in = IOHelper.buffered(new InputStreamReader(getClass().getResourceAsStream(\"/mdm_t02.txt\")));\n        String line = \"\";\n        String message = \"\";\n        while (line != null) {\n            if ((line = in.readLine()) != null) {\n                message += line + \"\\r\";\n            }\n        }\n        message = message.substring(0, message.length() - 1);\n        assertEquals(70010, message.length());\n        String out = (String)template.requestBody(\"mina2:tcp://127.0.0.1:\" + getPort() + \"?sync=true&codec=#hl7codec\", message);\n        assertEquals(\"some response\", out);\n        // END SNIPPET: e2\n    }","id":55471,"modified_method":"@Test\n    public void testSendHL7Message() throws Exception {\n        // START SNIPPET: e2\n        BufferedReader in = IOHelper.buffered(new InputStreamReader(getClass().getResourceAsStream(\"/mdm_t02.txt\")));\n        String line = \"\";\n        String message = \"\";\n        while (line != null) {\n            if ((line = in.readLine()) != null) {\n                message += line + \"\\r\";\n            }\n        }\n        message = message.substring(0, message.length() - 1);\n        assertEquals(70010, message.length());\n        String out = template.requestBody(\"mina2:tcp://127.0.0.1:\" + getPort() + \"?sync=true&codec=#hl7codec\", message, String.class);\n        assertEquals(\"some response\", out);\n        // END SNIPPET: e2\n    }","commit_id":"402e5a1d07fccefacea85cb6a19ab669085202b1","url":"https://github.com/apache/camel"},{"original_method":"@Test\n    public void testPlainString() throws Exception {\n        // START SNIPPET: e1\n        MockEndpoint mock = getMockEndpoint(\"mock:result\");\n        mock.expectedBodiesReceived(\"Bye World\");\n\n        // send plain hello world as String\n        Object out = template.requestBody(\"mina2:tcp://127.0.0.1:\" + getPort() + \"?sync=true&codec=#hl7codec\", \"Hello World\");\n\n        assertMockEndpointsSatisfied();\n\n        // and the response is also just plain String\n        assertEquals(\"Bye World\", out);\n        // END SNIPPET: e1\n    }","id":55472,"modified_method":"@Test\n    public void testPlainString() throws Exception {\n        // START SNIPPET: e1\n        MockEndpoint mock = getMockEndpoint(\"mock:result\");\n        mock.expectedBodiesReceived(\"Bye World\");\n\n        // send plain hello world as String\n        Object out = template.requestBody(\"mina2:tcp://127.0.0.1:\" + getPort() + \"?sync=true&codec=#hl7codec\", \"Hello World\", String.class);\n\n        assertMockEndpointsSatisfied();\n\n        // and the response is also just plain String\n        assertEquals(\"Bye World\", out);\n        // END SNIPPET: e1\n    }","commit_id":"402e5a1d07fccefacea85cb6a19ab669085202b1","url":"https://github.com/apache/camel"},{"original_method":"@Test\n    public void testSendHL7Message() throws Exception {\n        String line1 = \"MSH|^~\\\\&|MYSENDER|MYRECEIVER|MYAPPLICATION||200612211200||QRY^A19|1234|P|2.4\";\n        String line2 = \"QRD|200612211200|R|I|GetPatient|||1^RD|0101701234|DEM||\";\n\n        StringBuilder in = new StringBuilder();\n        in.append(line1);\n        in.append(\"\\r\");\n        in.append(line2);\n\n        String out = (String)template.requestBody(\"mina2:tcp://127.0.0.1:\" + getPort() + \"?sync=true&codec=#hl7codec\", in.toString());\n\n        String[] lines = out.split(\"\\r\");\n        assertEquals(\"MSH|^~\\\\&|MYSENDER||||200701011539||ADR^A19||||123\", lines[0]);\n        assertEquals(\"MSA|AA|123\", lines[1]);\n    }","id":55473,"modified_method":"@Test\n    public void testSendHL7Message() throws Exception {\n        String line1 = \"MSH|^~\\\\&|MYSENDER|MYRECEIVER|MYAPPLICATION||200612211200||QRY^A19|1234|P|2.4\";\n        String line2 = \"QRD|200612211200|R|I|GetPatient|||1^RD|0101701234|DEM||\";\n\n        StringBuilder in = new StringBuilder();\n        in.append(line1);\n        in.append(\"\\r\");\n        in.append(line2);\n\n        String out = template.requestBody(\"mina2:tcp://127.0.0.1:\" + getPort() + \"?sync=true&codec=#hl7codec\", in.toString(), String.class);\n\n        String[] lines = out.split(\"\\r\");\n        assertEquals(\"MSH|^~\\\\&|MYSENDER||||200701011539||ADR^A19||||123\", lines[0]);\n        assertEquals(\"MSA|AA|123\", lines[1]);\n    }","commit_id":"402e5a1d07fccefacea85cb6a19ab669085202b1","url":"https://github.com/apache/camel"},{"original_method":"@Test\n    public void testSendHL7Message() throws Exception {\n        // START SNIPPET: e2\n        String line1 = \"MSH|^~\\\\&|MYSENDER|MYRECEIVER|MYAPPLICATION||200612211200||QRY^A19|1234|P|2.4\";\n        String line2 = \"QRD|200612211200|R|I|GetPatient|||1^RD|0101701234|DEM||\";\n\n        StringBuilder in = new StringBuilder();\n        in.append(line1);\n        in.append(\"\\n\");\n        in.append(line2);\n\n        String out = (String)template.requestBody(\"mina2:tcp://127.0.0.1:\" + getPort() + \"?sync=true&codec=#hl7codec\", in.toString());\n        // END SNIPPET: e2\n\n        String[] lines = out.split(\"\\r\");\n        assertEquals(\"MSH|^~\\\\&|MYSENDER||||200701011539||ADR^A19^ADR_A19|456|P|2.4\", lines[0]);\n        assertEquals(\"MSA|AA|123\", lines[1]);\n    }","id":55474,"modified_method":"@Test\n    public void testSendHL7Message() throws Exception {\n        // START SNIPPET: e2\n        String line1 = \"MSH|^~\\\\&|MYSENDER|MYRECEIVER|MYAPPLICATION||200612211200||QRY^A19|1234|P|2.4\";\n        String line2 = \"QRD|200612211200|R|I|GetPatient|||1^RD|0101701234|DEM||\";\n\n        StringBuilder in = new StringBuilder();\n        in.append(line1);\n        in.append(\"\\n\");\n        in.append(line2);\n\n        String out = template.requestBody(\"mina2:tcp://127.0.0.1:\" + getPort() + \"?sync=true&codec=#hl7codec\", in.toString(), String.class);\n        // END SNIPPET: e2\n\n        String[] lines = out.split(\"\\r\");\n        assertEquals(\"MSH|^~\\\\&|MYSENDER||||200701011539||ADR^A19^ADR_A19|456|P|2.4\", lines[0]);\n        assertEquals(\"MSA|AA|123\", lines[1]);\n    }","commit_id":"402e5a1d07fccefacea85cb6a19ab669085202b1","url":"https://github.com/apache/camel"},{"original_method":"void reset() {\n            posStart = 0;\n            posEnd = 0;\n            waitingForEndByte2 = false;\n        }","id":55475,"modified_method":"void reset() {\n            startPos = 0;\n            currentPos = 0;\n            started = false;\n            previousByte = 0;\n        }","commit_id":"402e5a1d07fccefacea85cb6a19ab669085202b1","url":"https://github.com/apache/camel"},{"original_method":"@Override\n    public void dispose(IoSession session) throws Exception {\n        session.removeAttribute(CHARSET_DECODER);\n        session.removeAttribute(DECODER_STATE);\n    }","id":55476,"modified_method":"@Override\n    public void dispose(IoSession session) throws Exception {\n        session.removeAttribute(DECODER_STATE);\n        session.removeAttribute(CHARSET_DECODER);\n    }","commit_id":"402e5a1d07fccefacea85cb6a19ab669085202b1","url":"https://github.com/apache/camel"},{"original_method":"@Override\n    protected boolean doDecode(IoSession session, IoBuffer in, ProtocolDecoderOutput out) {\n\n        // Scan the buffer of start and/or end bytes\n        boolean foundEnd = scan(session, in);\n\n        // Write HL7 string or wait until message end arrives or buffer ends\n        if (foundEnd) {\n            writeString(session, in, out);\n        } else {\n            LOG.debug(\"No complete message in this packet\");\n        }\n\n        return foundEnd;\n    }","id":55477,"modified_method":"@Override\n    protected boolean doDecode(IoSession session, IoBuffer in, ProtocolDecoderOutput out) {\n\n        // Get the state of the current message and\n        // Skip what we have already scanned\n        DecoderState state = decoderState(session);\n        in.position(state.current());\n\n        while (in.hasRemaining()) {\n            byte current = in.get();\n\n            // If it is the start byte and mark the position\n            if (current == config.getStartByte()) {\n                state.markStart(in.position() - 1);\n            }\n            // If it is the end bytes, extract the payload and return\n            if (state.previous() == config.getEndByte1() && current == config.getEndByte2()) {\n\n                // Remember the current position and limit.\n                int position = in.position();\n                int limit = in.limit();\n                LOG.debug(\"Message ends at position {} with length {}\",\n                        position, position - state.start());\n                try {\n                    in.position(state.start());\n                    in.limit(position);\n                    // The bytes between in.position() and in.limit()\n                    // now contain a full MLLP message including the\n                    // start and end bytes.\n                    out.write(parseMessage(in.slice(), charsetDecoder(session)));\n                } catch (CharacterCodingException cce) {\n                    throw new IllegalArgumentException(\"Exception while finalizing the message\", cce);\n                } finally {\n                    // Reset position, limit, and state\n                    in.limit(limit);\n                    in.position(position);\n                    state.reset();\n                }\n                return true;\n            }\n            // Remember previous byte in state object because the buffer could\n            // be theoretically exhausted right between the two end bytes\n            state.markPrevious(current);\n        }\n\n        // Could not find a complete message in the buffer.\n        // Reset to the initial position and return false so that this method\n        // is called again with more data.\n        LOG.debug(\"No complete message yet at position {} \", in.position());\n        state.markCurrent(in.position());\n        in.position(0);\n        return false;\n    }","commit_id":"402e5a1d07fccefacea85cb6a19ab669085202b1","url":"https://github.com/apache/camel"},{"original_method":"private CharsetDecoder charsetDecoder(IoSession session) {\n        // convert to string using the charset decoder\n        CharsetDecoder decoder = (CharsetDecoder) session.getAttribute(CHARSET_DECODER);\n        if (decoder == null) {\n            decoder = config.getCharset().newDecoder();\n            session.setAttribute(CHARSET_DECODER, decoder);\n        }\n        return decoder;\n    }","id":55478,"modified_method":"private CharsetDecoder charsetDecoder(IoSession session) {\n        synchronized (session) {\n            CharsetDecoder decoder = (CharsetDecoder) session.getAttribute(CHARSET_DECODER);\n            if (decoder == null) {\n                decoder = config.getCharset().newDecoder();\n                session.setAttribute(CHARSET_DECODER, decoder);\n            }\n            return decoder;\n        }\n    }","commit_id":"402e5a1d07fccefacea85cb6a19ab669085202b1","url":"https://github.com/apache/camel"},{"original_method":"private DecoderState decoderState(IoSession session) {\n        DecoderState decoderState = (DecoderState) session.getAttribute(DECODER_STATE);\n        if (decoderState == null) {\n            decoderState = new DecoderState();\n            session.setAttribute(DECODER_STATE, decoderState);\n        }\n        return decoderState;\n    }","id":55479,"modified_method":"private DecoderState decoderState(IoSession session) {\n        synchronized (session) {\n            DecoderState decoderState = (DecoderState) session.getAttribute(DECODER_STATE);\n            if (decoderState == null) {\n                decoderState = new DecoderState();\n                session.setAttribute(DECODER_STATE, decoderState);\n            }\n            return decoderState;\n        }\n    }","commit_id":"402e5a1d07fccefacea85cb6a19ab669085202b1","url":"https://github.com/apache/camel"},{"original_method":"public void dispose(IoSession session) throws Exception {\n        session.removeAttribute(CHARSET_ENCODER);\n    }","id":55480,"modified_method":"@Override\n    public void dispose(IoSession session) throws Exception {\n    }","commit_id":"402e5a1d07fccefacea85cb6a19ab669085202b1","url":"https://github.com/apache/camel"},{"original_method":"public void encode(IoSession session, Object message, ProtocolEncoderOutput out) throws Exception {\n        if (message == null) {\n            throw new IllegalArgumentException(\"Message to encode is null\");\n        } else if (message instanceof Exception) {\n            // we cannot handle exceptions\n            throw (Exception)message;\n        }\n\n        CharsetEncoder encoder = (CharsetEncoder)session.getAttribute(CHARSET_ENCODER);\n        if (encoder == null) {\n            encoder = config.getCharset().newEncoder();\n            session.setAttribute(CHARSET_ENCODER, encoder);\n        }\n\n        // convert to string\n        String body;\n        if (message instanceof Message) {\n            body = HL7Converter.encode((Message)message, config.getParser());\n        } else if (message instanceof String) {\n            body = (String)message;\n        } else if (message instanceof byte[]) {\n            body = new String((byte[])message);\n        } else {\n            throw new IllegalArgumentException(\"The message to encode is not a supported type: \"\n                                               + message.getClass().getCanonicalName());\n        }\n\n        // replace \\n with \\r as HL7 uses 0x0d = \\r as segment terminators\n        if (config.isConvertLFtoCR()) {\n            body = body.replace('\\n', '\\r');\n        }\n\n        // put the data into the byte buffer\n        IoBuffer buf = IoBuffer.allocate(body.length() + 3).setAutoExpand(true);\n        buf.put((byte)config.getStartByte());\n        buf.putString(body, encoder);\n        buf.put((byte)config.getEndByte1());\n        buf.put((byte)config.getEndByte2());\n\n        // flip the buffer so we can use it to write to the out stream\n        buf.flip();\n        LOG.debug(\"Encoding HL7 from {} to byte stream\", message.getClass().getCanonicalName());\n        out.write(buf);\n    }","id":55481,"modified_method":"public void encode(IoSession session, Object message, ProtocolEncoderOutput out) throws Exception {\n        if (message == null) {\n            throw new IllegalArgumentException(\"Message to be encoded is null\");\n        } else if (message instanceof Exception) {\n            // we cannot handle exceptions\n            throw (Exception)message;\n        }\n\n        byte[] body;\n        if (message instanceof Message) {\n            body = ((Message) message).encode().getBytes(config.getCharset());\n        } else if (message instanceof String) {\n            body = ((String) message).getBytes(config.getCharset());\n        } else if (message instanceof byte[]) {\n            body = (byte[])message;\n        } else {\n            throw new IllegalArgumentException(\"The message to encode is not a supported type: \"\n                                               + message.getClass().getCanonicalName());\n        }\n\n        // put the data into the byte buffer\n        IoBuffer buf = IoBuffer.allocate(body.length + 3).setAutoExpand(true);\n        buf.put((byte)config.getStartByte());\n        buf.put(body);\n        buf.put((byte)config.getEndByte1());\n        buf.put((byte)config.getEndByte2());\n\n        // flip the buffer so we can use it to write to the out stream\n        buf.flip();\n        LOG.debug(\"Encoded HL7 from {} to byte stream\", message.getClass().getCanonicalName());\n        out.write(buf);\n    }","commit_id":"402e5a1d07fccefacea85cb6a19ab669085202b1","url":"https://github.com/apache/camel"},{"original_method":"@Test\n    public void testSendA19() throws Exception {\n        MockEndpoint mock = getMockEndpoint(\"mock:a19\");\n        mock.expectedMessageCount(1);\n        mock.message(0).body().isInstanceOf(Message.class);\n\n        String line1 = \"MSH|^~\\\\&|MYSENDER|MYSENDERAPP|MYCLIENT|MYCLIENTAPP|200612211200||QRY^A19|1234|P|2.4\";\n        String line2 = \"QRD|200612211200|R|I|GetPatient|||1^RD|0101701234|DEM||\";\n\n        StringBuilder in = new StringBuilder();\n        in.append(line1);\n        in.append(\"\\r\");\n        in.append(line2);\n\n        String out = (String) template.requestBody(\"mina2:tcp://127.0.0.1:\" + getPort() + \"?sync=true&codec=#hl7codec\", in.toString());\n\n        String[] lines = out.split(\"\\r\");\n        assertEquals(\"MSH|^~\\\\&|MYSENDER||||200701011539||ADR^A19||||123\", lines[0]);\n        assertEquals(\"MSA|AA|123\", lines[1]);\n\n        assertMockEndpointsSatisfied();\n    }","id":55482,"modified_method":"@Test\n    public void testSendA19() throws Exception {\n        MockEndpoint mock = getMockEndpoint(\"mock:a19\");\n        mock.expectedMessageCount(1);\n        mock.message(0).body().isInstanceOf(Message.class);\n\n        String line1 = \"MSH|^~\\\\&|MYSENDER|MYSENDERAPP|MYCLIENT|MYCLIENTAPP|200612211200||QRY^A19|1234|P|2.4\";\n        String line2 = \"QRD|200612211200|R|I|GetPatient|||1^RD|0101701234|DEM||\";\n\n        StringBuilder in = new StringBuilder();\n        in.append(line1);\n        in.append(\"\\r\");\n        in.append(line2);\n\n        String out = template.requestBody(\"mina2:tcp://127.0.0.1:\" + getPort() + \"?sync=true&codec=#hl7codec\", in.toString(), String.class);\n\n        String[] lines = out.split(\"\\r\");\n        assertEquals(\"MSH|^~\\\\&|MYSENDER||||200701011539||ADR^A19||||123\", lines[0]);\n        assertEquals(\"MSA|AA|123\", lines[1]);\n\n        assertMockEndpointsSatisfied();\n    }","commit_id":"402e5a1d07fccefacea85cb6a19ab669085202b1","url":"https://github.com/apache/camel"},{"original_method":"@Test\n    public void testSendA01() throws Exception {\n        MockEndpoint mock = getMockEndpoint(\"mock:a01\");\n        mock.expectedMessageCount(1);\n        mock.message(0).body().isInstanceOf(Message.class);\n\n        String line1 = \"MSH|^~\\\\&|MYSENDER|MYSENDERAPP|MYCLIENT|MYCLIENTAPP|200612211200||ADT^A01|1234|P|2.4\";\n        String line2 = \"PID|||123456||Doe^John\";\n\n        StringBuilder in = new StringBuilder();\n        in.append(line1);\n        in.append(\"\\r\");\n        in.append(line2);\n\n        String out = (String) template.requestBody(\"mina2:tcp://127.0.0.1:\" + getPort() + \"?sync=true&codec=#hl7codec\", in.toString());\n        String[] lines = out.split(\"\\r\");\n        assertEquals(\"MSH|^~\\\\&|MYSENDER||||200701011539||ADT^A01||||123\", lines[0]);\n        assertEquals(\"PID|||123456||Doe^John\", lines[1]);\n\n        assertMockEndpointsSatisfied();\n    }","id":55483,"modified_method":"@Test\n    public void testSendA01() throws Exception {\n        MockEndpoint mock = getMockEndpoint(\"mock:a01\");\n        mock.expectedMessageCount(1);\n        mock.message(0).body().isInstanceOf(Message.class);\n\n        String line1 = \"MSH|^~\\\\&|MYSENDER|MYSENDERAPP|MYCLIENT|MYCLIENTAPP|200612211200||ADT^A01|123|P|2.4\";\n        String line2 = \"PID|||123456||Doe^John\";\n\n        StringBuilder in = new StringBuilder();\n        in.append(line1);\n        in.append(\"\\r\");\n        in.append(line2);\n\n        String out = template.requestBody(\"mina2:tcp://127.0.0.1:\" + getPort() + \"?sync=true&codec=#hl7codec\", in.toString(), String.class);\n        String[] lines = out.split(\"\\r\");\n        assertEquals(\"MSH|^~\\\\&|MYSENDER||||200701011539||ADT^A01||||123\", lines[0]);\n        assertEquals(\"PID|||123||Doe^John\", lines[1]);\n\n        assertMockEndpointsSatisfied();\n    }","commit_id":"402e5a1d07fccefacea85cb6a19ab669085202b1","url":"https://github.com/apache/camel"},{"original_method":"public Message handleA01(Message msg) throws Exception {\n            // here you can have your business logic for A01 messages\n            assertTrue(msg instanceof ADT_A01);\n            // just return the same dummy response\n            return createADT01Message();\n        }","id":55484,"modified_method":"public Message handleA01(Message msg) throws Exception {\n            // here you can have your business logic for A01 messages\n            assertTrue(msg instanceof ADT_A01);\n            // just return the same dummy response\n            return createADT01Message(((ADT_A01)msg).getMSH().getMessageControlID().getValue());\n        }","commit_id":"402e5a1d07fccefacea85cb6a19ab669085202b1","url":"https://github.com/apache/camel"},{"original_method":"private static Message createADT01Message() throws Exception {\n        ADT_A01 adt = new ADT_A01();\n\n        // Populate the MSH Segment\n        MSH mshSegment = adt.getMSH();\n        mshSegment.getFieldSeparator().setValue(\"|\");\n        mshSegment.getEncodingCharacters().setValue(\"^~\\\\&\");\n        mshSegment.getDateTimeOfMessage().getTimeOfAnEvent().setValue(\"200701011539\");\n        mshSegment.getSendingApplication().getNamespaceID().setValue(\"MYSENDER\");\n        mshSegment.getSequenceNumber().setValue(\"123\");\n        mshSegment.getMessageType().getMessageType().setValue(\"ADT\");\n        mshSegment.getMessageType().getTriggerEvent().setValue(\"A01\");\n\n        // Populate the PID Segment\n        PID pid = adt.getPID();\n        pid.getPatientName(0).getFamilyName().getSurname().setValue(\"Doe\");\n        pid.getPatientName(0).getGivenName().setValue(\"John\");\n        pid.getPatientIdentifierList(0).getID().setValue(\"123456\");\n\n        return adt;\n    }","id":55485,"modified_method":"private static Message createADT01Message(String msgId) throws Exception {\n        ADT_A01 adt = new ADT_A01();\n\n        // Populate the MSH Segment\n        MSH mshSegment = adt.getMSH();\n        mshSegment.getFieldSeparator().setValue(\"|\");\n        mshSegment.getEncodingCharacters().setValue(\"^~\\\\&\");\n        mshSegment.getDateTimeOfMessage().getTimeOfAnEvent().setValue(\"200701011539\");\n        mshSegment.getSendingApplication().getNamespaceID().setValue(\"MYSENDER\");\n        mshSegment.getSequenceNumber().setValue(\"123\");\n        mshSegment.getMessageType().getMessageType().setValue(\"ADT\");\n        mshSegment.getMessageType().getTriggerEvent().setValue(\"A01\");\n\n        // Populate the PID Segment\n        PID pid = adt.getPID();\n        pid.getPatientName(0).getFamilyName().getSurname().setValue(\"Doe\");\n        pid.getPatientName(0).getGivenName().setValue(\"John\");\n        pid.getPatientIdentifierList(0).getID().setValue(msgId);\n\n        return adt;\n    }","commit_id":"402e5a1d07fccefacea85cb6a19ab669085202b1","url":"https://github.com/apache/camel"},{"original_method":"private void readClasspathEntry(ModifiableRootModel rootModel,\n                                  final Collection<String> unknownLibraries,\n                                  Collection<String> unknownJdks,\n                                  final Set<String> usedVariables,\n                                  Set<String> refsToModules,\n                                  final String testPattern,\n                                  Element element) throws ConversionException {\n    String kind = element.getAttributeValue(EclipseXml.KIND_ATTR);\n    if (kind == null) {\n      throw new ConversionException(\"Missing classpathentry/@kind\");\n    }\n\n\n    String path = element.getAttributeValue(EclipseXml.PATH_ATTR);\n    if (path == null) {\n      throw new ConversionException(\"Missing classpathentry/@path\");\n    }\n\n    final boolean exported = EclipseXml.TRUE_VALUE.equals(element.getAttributeValue(EclipseXml.EXPORTED_ATTR));\n\n    if (kind.equals(EclipseXml.SRC_KIND)) {\n      if (path.startsWith(\"/\")) {\n        final String moduleName = path.substring(1);\n        refsToModules.add(moduleName);\n        rootModel.addInvalidModuleEntry(moduleName).setExported(exported);\n      }\n      else {\n        String srcUrl = VfsUtil.pathToUrl(myRootPath + \"/\" + path);\n        final boolean isTestFolder = testPattern != null && testPattern.length() > 0 && path.matches(testPattern);\n        if (EclipseProjectFinder.isExternalResource(myRootPath, path)) {\n          final String varName = EclipseProjectFinder.extractPathVariableName(path);\n          usedVariables.add(varName);\n\n          final String toPathVariableFormat =\n            getVariableRelatedPath(varName, path.length() > varName.length() ? path.substring(varName.length()) : null);\n          srcUrl = VfsUtil.pathToUrl(PathMacroManager.getInstance(rootModel.getModule()).expandPath(toPathVariableFormat));\n          EclipseModuleManager.getInstance(rootModel.getModule()).registerEclipseLinkedSrcVarPath(srcUrl, path);\n\n          rootModel.addContentEntry(srcUrl).addSourceFolder(srcUrl, isTestFolder);\n        } else {\n          getContentEntry().addSourceFolder(srcUrl, isTestFolder);\n        }\n        rearrangeOrderEntryOfType(rootModel, ModuleSourceOrderEntry.class);\n      }\n    }\n\n    else if (kind.equals(EclipseXml.OUTPUT_KIND)) {\n      setupOutput(rootModel, myRootPath + \"/\" + path);\n    }\n\n    else if (kind.equals(EclipseXml.LIB_KIND)) {\n      final String libName = getPresentableName(path);\n      final Library library = rootModel.getModuleLibraryTable().getModifiableModel().createLibrary(libName);\n      final Library.ModifiableModel modifiableModel = library.getModifiableModel();\n\n      modifiableModel.addRoot(expandEclipsePath2Url(path, rootModel, myCurrentRoots), OrderRootType.CLASSES);\n\n      final String sourcePath = element.getAttributeValue(EclipseXml.SOURCEPATH_ATTR);\n      if (sourcePath != null) {\n        modifiableModel.addRoot(expandEclipsePath2Url(sourcePath, rootModel, myCurrentRoots), OrderRootType.SOURCES);\n      }\n\n      EJavadocUtil.appendJavadocRoots(element, rootModel, myCurrentRoots, modifiableModel);\n      modifiableModel.commit();\n\n      setLibraryEntryExported(rootModel, exported, library);\n    }\n    else if (kind.equals(EclipseXml.VAR_KIND)) {\n      int slash = path.indexOf(\"/\");\n      if (slash == 0) {\n        throw new ConversionException(\"Incorrect 'classpathentry/var@path' format\");\n      }\n\n      final String libName = getPresentableName(path);\n      final Library library = rootModel.getModuleLibraryTable().getModifiableModel().createLibrary(libName);\n      final Library.ModifiableModel modifiableModel = library.getModifiableModel();\n\n      final String url = eclipseVariabledPath2Url(rootModel, usedVariables, path, 0);\n      modifiableModel.addRoot(url, OrderRootType.CLASSES);\n      EclipseModuleManager.getInstance(rootModel.getModule()).registerEclipseVariablePath(url, path);\n\n      final String srcPathAttr = element.getAttributeValue(EclipseXml.SOURCEPATH_ATTR);\n      if (srcPathAttr != null) {\n        final String srcUrl = eclipseVariabledPath2Url(rootModel, usedVariables, srcPathAttr, srcVarStart(srcPathAttr));\n        modifiableModel.addRoot(srcUrl, OrderRootType.SOURCES);\n        EclipseModuleManager.getInstance(rootModel.getModule()).registerEclipseSrcVariablePath(srcUrl, srcPathAttr);\n      }\n\n      EJavadocUtil.appendJavadocRoots(element, rootModel, myCurrentRoots, modifiableModel);\n\n      modifiableModel.commit();\n\n      setLibraryEntryExported(rootModel, exported, library);\n    }\n    else if (kind.equals(EclipseXml.CON_KIND)) {\n      if (path.equals(EclipseXml.ECLIPSE_PLATFORM)) {\n        addNamedLibrary(rootModel, unknownLibraries, exported, IdeaXml.ECLIPSE_LIBRARY, LibraryTablesRegistrar.APPLICATION_LEVEL);\n      }\n      else if (path.startsWith(EclipseXml.JRE_CONTAINER)) {\n\n        final String jdkName = getLastPathComponent(path);\n        if (jdkName == null) {\n          rootModel.inheritSdk();\n        }\n        else {\n          final Sdk moduleJdk = ProjectJdkTable.getInstance().findJdk(jdkName);\n          if (moduleJdk != null) {\n            rootModel.setSdk(moduleJdk);\n          }\n          else {\n            rootModel.setInvalidSdk(jdkName, IdeaXml.JAVA_SDK_TYPE);\n            unknownJdks.add(jdkName);\n          }\n        }\n        rearrangeOrderEntryOfType(rootModel, JdkOrderEntry.class);\n      }\n      else if (path.startsWith(EclipseXml.USER_LIBRARY)) {\n        addNamedLibrary(rootModel, unknownLibraries, exported, getPresentableName(path), LibraryTablesRegistrar.PROJECT_LEVEL);\n      }\n      else if (path.startsWith(EclipseXml.JUNIT_CONTAINER)) {\n        final String junitName = IdeaXml.JUNIT + getPresentableName(path);\n        final Library library = rootModel.getModuleLibraryTable().getModifiableModel().createLibrary(junitName);\n        final Library.ModifiableModel modifiableModel = library.getModifiableModel();\n        modifiableModel.addRoot(getJunitClsUrl(junitName.contains(\"4\")), OrderRootType.CLASSES);\n        modifiableModel.commit();\n      } else {\n        EclipseModuleManager.getInstance(rootModel.getModule()).registerUnknownCons(path);\n        addNamedLibrary(rootModel, new ArrayList<String>(), exported, path, LibraryTablesRegistrar.APPLICATION_LEVEL);\n      }\n    }\n    else {\n      throw new ConversionException(\"Unknown classpathentry/@kind: \" + kind);\n    }\n  }","id":55486,"modified_method":"private void readClasspathEntry(ModifiableRootModel rootModel,\n                                  final Collection<String> unknownLibraries,\n                                  Collection<String> unknownJdks,\n                                  final Set<String> usedVariables,\n                                  Set<String> refsToModules,\n                                  final String testPattern,\n                                  Element element) throws ConversionException {\n    String kind = element.getAttributeValue(EclipseXml.KIND_ATTR);\n    if (kind == null) {\n      throw new ConversionException(\"Missing classpathentry/@kind\");\n    }\n\n\n    String path = element.getAttributeValue(EclipseXml.PATH_ATTR);\n    if (path == null) {\n      throw new ConversionException(\"Missing classpathentry/@path\");\n    }\n\n    final boolean exported = EclipseXml.TRUE_VALUE.equals(element.getAttributeValue(EclipseXml.EXPORTED_ATTR));\n\n    final EclipseModuleManager eclipseModuleManager = EclipseModuleManager.getInstance(rootModel.getModule());\n    if (kind.equals(EclipseXml.SRC_KIND)) {\n      if (path.startsWith(\"/\")) {\n        final String moduleName = path.substring(1);\n        refsToModules.add(moduleName);\n        rootModel.addInvalidModuleEntry(moduleName).setExported(exported);\n      }\n      else {\n        String srcUrl = VfsUtil.pathToUrl(myRootPath + \"/\" + path);\n        final boolean isTestFolder = testPattern != null && testPattern.length() > 0 && path.matches(testPattern);\n        if (EclipseProjectFinder.isExternalResource(myRootPath, path)) {\n          final String varName = EclipseProjectFinder.extractPathVariableName(path);\n          usedVariables.add(varName);\n\n          final String toPathVariableFormat =\n            getVariableRelatedPath(varName, path.length() > varName.length() ? path.substring(varName.length()) : null);\n          srcUrl = VfsUtil.pathToUrl(PathMacroManager.getInstance(rootModel.getModule()).expandPath(toPathVariableFormat));\n          eclipseModuleManager.registerEclipseLinkedSrcVarPath(srcUrl, path);\n\n          rootModel.addContentEntry(srcUrl).addSourceFolder(srcUrl, isTestFolder);\n        } else {\n          getContentEntry().addSourceFolder(srcUrl, isTestFolder);\n        }\n        rearrangeOrderEntryOfType(rootModel, ModuleSourceOrderEntry.class);\n      }\n    }\n\n    else if (kind.equals(EclipseXml.OUTPUT_KIND)) {\n      setupOutput(rootModel, myRootPath + \"/\" + path);\n    }\n\n    else if (kind.equals(EclipseXml.LIB_KIND)) {\n      final String libName = getPresentableName(path);\n      final Library library = rootModel.getModuleLibraryTable().getModifiableModel().createLibrary(libName);\n      final Library.ModifiableModel modifiableModel = library.getModifiableModel();\n\n      final String url = expandEclipsePath2Url(path, rootModel, myCurrentRoots);\n      modifiableModel.addRoot(url, OrderRootType.CLASSES);\n      eclipseModuleManager.registerEclipseLibUrl(url);\n\n      final String sourcePath = element.getAttributeValue(EclipseXml.SOURCEPATH_ATTR);\n      if (sourcePath != null) {\n        final String srcUrl = expandEclipsePath2Url(sourcePath, rootModel, myCurrentRoots);\n        modifiableModel.addRoot(srcUrl, OrderRootType.SOURCES);\n        eclipseModuleManager.registerEclipseLibSrcUrl(srcUrl);\n      }\n\n      EJavadocUtil.appendJavadocRoots(element, rootModel, myCurrentRoots, modifiableModel);\n      modifiableModel.commit();\n\n      setLibraryEntryExported(rootModel, exported, library);\n    }\n    else if (kind.equals(EclipseXml.VAR_KIND)) {\n      int slash = path.indexOf(\"/\");\n      if (slash == 0) {\n        throw new ConversionException(\"Incorrect 'classpathentry/var@path' format\");\n      }\n\n      final String libName = getPresentableName(path);\n      final Library library = rootModel.getModuleLibraryTable().getModifiableModel().createLibrary(libName);\n      final Library.ModifiableModel modifiableModel = library.getModifiableModel();\n\n      final String url = eclipseVariabledPath2Url(rootModel, usedVariables, path, 0);\n      modifiableModel.addRoot(url, OrderRootType.CLASSES);\n      eclipseModuleManager.registerEclipseVariablePath(url, path);\n\n      final String srcPathAttr = element.getAttributeValue(EclipseXml.SOURCEPATH_ATTR);\n      if (srcPathAttr != null) {\n        final String srcUrl = eclipseVariabledPath2Url(rootModel, usedVariables, srcPathAttr, srcVarStart(srcPathAttr));\n        modifiableModel.addRoot(srcUrl, OrderRootType.SOURCES);\n        eclipseModuleManager.registerEclipseSrcVariablePath(srcUrl, srcPathAttr);\n      }\n\n      EJavadocUtil.appendJavadocRoots(element, rootModel, myCurrentRoots, modifiableModel);\n\n      modifiableModel.commit();\n\n      setLibraryEntryExported(rootModel, exported, library);\n    }\n    else if (kind.equals(EclipseXml.CON_KIND)) {\n      if (path.equals(EclipseXml.ECLIPSE_PLATFORM)) {\n        addNamedLibrary(rootModel, unknownLibraries, exported, IdeaXml.ECLIPSE_LIBRARY, LibraryTablesRegistrar.APPLICATION_LEVEL);\n      }\n      else if (path.startsWith(EclipseXml.JRE_CONTAINER)) {\n\n        final String jdkName = getLastPathComponent(path);\n        if (jdkName == null) {\n          rootModel.inheritSdk();\n        }\n        else {\n          final Sdk moduleJdk = ProjectJdkTable.getInstance().findJdk(jdkName);\n          if (moduleJdk != null) {\n            rootModel.setSdk(moduleJdk);\n          }\n          else {\n            rootModel.setInvalidSdk(jdkName, IdeaXml.JAVA_SDK_TYPE);\n            unknownJdks.add(jdkName);\n          }\n        }\n        rearrangeOrderEntryOfType(rootModel, JdkOrderEntry.class);\n      }\n      else if (path.startsWith(EclipseXml.USER_LIBRARY)) {\n        addNamedLibrary(rootModel, unknownLibraries, exported, getPresentableName(path), LibraryTablesRegistrar.PROJECT_LEVEL);\n      }\n      else if (path.startsWith(EclipseXml.JUNIT_CONTAINER)) {\n        final String junitName = IdeaXml.JUNIT + getPresentableName(path);\n        final Library library = rootModel.getModuleLibraryTable().getModifiableModel().createLibrary(junitName);\n        final Library.ModifiableModel modifiableModel = library.getModifiableModel();\n        modifiableModel.addRoot(getJunitClsUrl(junitName.contains(\"4\")), OrderRootType.CLASSES);\n        modifiableModel.commit();\n      } else {\n        eclipseModuleManager.registerUnknownCons(path);\n        addNamedLibrary(rootModel, new ArrayList<String>(), exported, path, LibraryTablesRegistrar.APPLICATION_LEVEL);\n      }\n    }\n    else {\n      throw new ConversionException(\"Unknown classpathentry/@kind: \" + kind);\n    }\n  }","commit_id":"265123726f075aa3c8f26c1bd29809b5635f7961","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private void createClasspathEntry(OrderEntry entry, Element classpathRoot) throws ConversionException {\n    if (entry instanceof ModuleSourceOrderEntry) {\n      final ModuleRootModel rootModel = ((ModuleSourceOrderEntry)entry).getRootModel();\n      final ContentEntry[] entries = rootModel.getContentEntries();\n      for (final ContentEntry contentEntry : entries) {\n        final VirtualFile contentRoot = contentEntry.getFile();\n        for (SourceFolder sourceFolder : contentEntry.getSourceFolders()) {\n          String relativePath = EPathUtil.collapse2EclipsePath(sourceFolder.getUrl(), myModel);\n          if (contentRoot != EPathUtil.getContentRoot(rootModel)) {\n            final String linkedPath = EclipseModuleManager.getInstance(entry.getOwnerModule()).getEclipseLinkedSrcVariablePath(sourceFolder.getUrl());\n            if (linkedPath != null) {\n              relativePath = linkedPath;\n            }\n          }\n          addOrderEntry(EclipseXml.SRC_KIND, relativePath, classpathRoot);\n        }\n      }\n    }\n    else if (entry instanceof ModuleOrderEntry) {\n      Element orderEntry = addOrderEntry(EclipseXml.SRC_KIND, \"/\" + ((ModuleOrderEntry)entry).getModuleName(), classpathRoot);\n      setAttributeIfAbsent(orderEntry, EclipseXml.COMBINEACCESSRULES_ATTR, EclipseXml.FALSE_VALUE);\n      setExported(orderEntry, ((ExportableOrderEntry)entry));\n    }\n    else if (entry instanceof LibraryOrderEntry) {\n      final LibraryOrderEntry libraryOrderEntry = (LibraryOrderEntry)entry;\n      final String libraryName = libraryOrderEntry.getLibraryName();\n      if (libraryOrderEntry.isModuleLevel()) {\n        final String[] files = libraryOrderEntry.getUrls(OrderRootType.CLASSES);\n        if (files.length > 0) {\n          if (libraryName != null &&\n              libraryName.contains(IdeaXml.JUNIT) &&\n              Comparing.strEqual(files[0], EclipseClasspathReader.getJunitClsUrl(libraryName.contains(\"4\")))) {\n            final Element orderEntry =\n              addOrderEntry(EclipseXml.CON_KIND, EclipseXml.JUNIT_CONTAINER + \"/\" + libraryName.substring(IdeaXml.JUNIT.length()),\n                            classpathRoot);\n            setExported(orderEntry, libraryOrderEntry);\n          }\n          else {\n            final String eclipseVariablePath = EclipseModuleManager.getInstance(libraryOrderEntry.getOwnerModule()).getEclipseVariablePath(files[0]);\n            final Element orderEntry;\n            if (eclipseVariablePath != null) {\n              orderEntry = addOrderEntry(EclipseXml.VAR_KIND, eclipseVariablePath, classpathRoot);\n            }\n            else {\n              orderEntry = addOrderEntry(EclipseXml.LIB_KIND, EPathUtil.collapse2EclipsePath(files[0], myModel), classpathRoot);\n            }\n\n            final String srcRelativePath;\n            final String eclipseSrcVariablePath;\n\n            final String[] srcFiles = libraryOrderEntry.getUrls(OrderRootType.SOURCES);\n            if (srcFiles.length == 0) {\n              srcRelativePath = null;\n              eclipseSrcVariablePath = null;\n            }\n            else {\n              final String lastSourceRoot = srcFiles[srcFiles.length - 1];\n              srcRelativePath = EPathUtil.collapse2EclipsePath(lastSourceRoot, myModel);\n              eclipseSrcVariablePath = EclipseModuleManager.getInstance(libraryOrderEntry.getOwnerModule()).getEclipseSrcVariablePath(lastSourceRoot);\n            }\n            setOrRemoveAttribute(orderEntry, EclipseXml.SOURCEPATH_ATTR, eclipseSrcVariablePath != null ? eclipseSrcVariablePath : srcRelativePath);\n\n            EJavadocUtil.setupJavadocAttributes(orderEntry, libraryOrderEntry, myModel);\n            setExported(orderEntry, libraryOrderEntry);\n          }\n        }\n      }\n      else {\n        final Element orderEntry;\n        if (EclipseModuleManager.getInstance(libraryOrderEntry.getOwnerModule()).getUnknownCons().contains(libraryName)) {\n          orderEntry = addOrderEntry(EclipseXml.CON_KIND, libraryName, classpathRoot);\n        } else if (Comparing.strEqual(libraryName, IdeaXml.ECLIPSE_LIBRARY)) {\n          orderEntry = addOrderEntry(EclipseXml.CON_KIND, EclipseXml.ECLIPSE_PLATFORM, classpathRoot);\n        }\n        else {\n          orderEntry = addOrderEntry(EclipseXml.CON_KIND, EclipseXml.USER_LIBRARY + \"/\" + libraryName, classpathRoot);\n        }\n        setExported(orderEntry, libraryOrderEntry);\n      }\n    }\n    else if (entry instanceof JdkOrderEntry) {\n      if (entry instanceof InheritedJdkOrderEntry) {\n        if (!EclipseModuleManager.getInstance(entry.getOwnerModule()).isForceConfigureJDK()) {\n          addOrderEntry(EclipseXml.CON_KIND, EclipseXml.JRE_CONTAINER, classpathRoot);\n        }\n      }\n      else {\n        final Sdk jdk = ((JdkOrderEntry)entry).getJdk();\n        String jdkLink;\n        if (jdk == null) {\n          jdkLink = EclipseXml.JRE_CONTAINER;\n        }\n        else {\n          jdkLink = EclipseXml.JRE_CONTAINER;\n          if (jdk.getSdkType() instanceof JavaSdkType) {\n            jdkLink += EclipseXml.JAVA_SDK_TYPE;\n          }\n          jdkLink += \"/\" + jdk.getName();\n        }\n        addOrderEntry(EclipseXml.CON_KIND, jdkLink, classpathRoot);\n      }\n    }\n    else {\n      throw new ConversionException(\"Unknown EclipseProjectModel.ClasspathEntry: \" + entry.getClass());\n    }\n  }","id":55487,"modified_method":"private void createClasspathEntry(OrderEntry entry, Element classpathRoot) throws ConversionException {\n    if (entry instanceof ModuleSourceOrderEntry) {\n      final ModuleRootModel rootModel = ((ModuleSourceOrderEntry)entry).getRootModel();\n      final ContentEntry[] entries = rootModel.getContentEntries();\n      for (final ContentEntry contentEntry : entries) {\n        final VirtualFile contentRoot = contentEntry.getFile();\n        for (SourceFolder sourceFolder : contentEntry.getSourceFolders()) {\n          String relativePath = EPathUtil.collapse2EclipsePath(sourceFolder.getUrl(), myModel);\n          if (contentRoot != EPathUtil.getContentRoot(rootModel)) {\n            final String linkedPath = EclipseModuleManager.getInstance(entry.getOwnerModule()).getEclipseLinkedSrcVariablePath(sourceFolder.getUrl());\n            if (linkedPath != null) {\n              relativePath = linkedPath;\n            }\n          }\n          addOrderEntry(EclipseXml.SRC_KIND, relativePath, classpathRoot);\n        }\n      }\n    }\n    else if (entry instanceof ModuleOrderEntry) {\n      Element orderEntry = addOrderEntry(EclipseXml.SRC_KIND, \"/\" + ((ModuleOrderEntry)entry).getModuleName(), classpathRoot);\n      setAttributeIfAbsent(orderEntry, EclipseXml.COMBINEACCESSRULES_ATTR, EclipseXml.FALSE_VALUE);\n      setExported(orderEntry, ((ExportableOrderEntry)entry));\n    }\n    else if (entry instanceof LibraryOrderEntry) {\n      final LibraryOrderEntry libraryOrderEntry = (LibraryOrderEntry)entry;\n      final String libraryName = libraryOrderEntry.getLibraryName();\n      final EclipseModuleManager eclipseModuleManager = EclipseModuleManager.getInstance(libraryOrderEntry.getOwnerModule());\n      if (libraryOrderEntry.isModuleLevel()) {\n        final String[] files = libraryOrderEntry.getUrls(OrderRootType.CLASSES);\n        if (files.length > 0) {\n          if (libraryName != null &&\n              libraryName.contains(IdeaXml.JUNIT) &&\n              Comparing.strEqual(files[0], EclipseClasspathReader.getJunitClsUrl(libraryName.contains(\"4\")))) {\n            final Element orderEntry =\n              addOrderEntry(EclipseXml.CON_KIND, EclipseXml.JUNIT_CONTAINER + \"/\" + libraryName.substring(IdeaXml.JUNIT.length()),\n                            classpathRoot);\n            setExported(orderEntry, libraryOrderEntry);\n          }\n          else {\n            String eclipseVariablePath = eclipseModuleManager.getEclipseVariablePath(files[0]);\n            if (eclipseVariablePath == null && !eclipseModuleManager.isEclipseLibUrl(files[0])) { //new library was added\n              eclipseVariablePath = EPathUtil.collapse2EclipseVariabledPath(libraryOrderEntry);\n            }\n            final Element orderEntry;\n            if (eclipseVariablePath != null) {\n              orderEntry = addOrderEntry(EclipseXml.VAR_KIND, eclipseVariablePath, classpathRoot);\n            }\n            else {\n              orderEntry = addOrderEntry(EclipseXml.LIB_KIND, EPathUtil.collapse2EclipsePath(files[0], myModel), classpathRoot);\n            }\n\n            final String srcRelativePath;\n            String eclipseSrcVariablePath = null;\n\n            final String[] srcFiles = libraryOrderEntry.getUrls(OrderRootType.SOURCES);\n            if (srcFiles.length == 0) {\n              srcRelativePath = null;\n            }\n            else {\n              final String srcFile = srcFiles[0];\n              srcRelativePath = EPathUtil.collapse2EclipsePath(srcFile, myModel);\n              if (eclipseVariablePath != null) {\n                eclipseSrcVariablePath = eclipseModuleManager.getEclipseSrcVariablePath(srcFile);\n                if (eclipseSrcVariablePath == null && !eclipseModuleManager.isEclipseLibSrcUrl(srcFile)) {\n                  eclipseSrcVariablePath = \"/\" + EPathUtil.collapse2EclipseVariabledPath(libraryOrderEntry);\n                }\n              }\n            }\n            setOrRemoveAttribute(orderEntry, EclipseXml.SOURCEPATH_ATTR, eclipseSrcVariablePath != null ? eclipseSrcVariablePath : srcRelativePath);\n\n            EJavadocUtil.setupJavadocAttributes(orderEntry, libraryOrderEntry, myModel);\n            setExported(orderEntry, libraryOrderEntry);\n          }\n        }\n      }\n      else {\n        final Element orderEntry;\n        if (eclipseModuleManager.getUnknownCons().contains(libraryName)) {\n          orderEntry = addOrderEntry(EclipseXml.CON_KIND, libraryName, classpathRoot);\n        } else if (Comparing.strEqual(libraryName, IdeaXml.ECLIPSE_LIBRARY)) {\n          orderEntry = addOrderEntry(EclipseXml.CON_KIND, EclipseXml.ECLIPSE_PLATFORM, classpathRoot);\n        }\n        else {\n          orderEntry = addOrderEntry(EclipseXml.CON_KIND, EclipseXml.USER_LIBRARY + \"/\" + libraryName, classpathRoot);\n        }\n        setExported(orderEntry, libraryOrderEntry);\n      }\n    }\n    else if (entry instanceof JdkOrderEntry) {\n      if (entry instanceof InheritedJdkOrderEntry) {\n        if (!EclipseModuleManager.getInstance(entry.getOwnerModule()).isForceConfigureJDK()) {\n          addOrderEntry(EclipseXml.CON_KIND, EclipseXml.JRE_CONTAINER, classpathRoot);\n        }\n      }\n      else {\n        final Sdk jdk = ((JdkOrderEntry)entry).getJdk();\n        String jdkLink;\n        if (jdk == null) {\n          jdkLink = EclipseXml.JRE_CONTAINER;\n        }\n        else {\n          jdkLink = EclipseXml.JRE_CONTAINER;\n          if (jdk.getSdkType() instanceof JavaSdkType) {\n            jdkLink += EclipseXml.JAVA_SDK_TYPE;\n          }\n          jdkLink += \"/\" + jdk.getName();\n        }\n        addOrderEntry(EclipseXml.CON_KIND, jdkLink, classpathRoot);\n      }\n    }\n    else {\n      throw new ConversionException(\"Unknown EclipseProjectModel.ClasspathEntry: \" + entry.getClass());\n    }\n  }","commit_id":"265123726f075aa3c8f26c1bd29809b5635f7961","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private static String expandLinkedPath(ModifiableRootModel rootModel, EclipseProjectFinder.LinkedResource linkedResource) {\n     if (linkedResource.containsPathVariable()) {\n       final String toPathVariableFormat =\n         getVariableRelatedPath(linkedResource.getVariableName(), linkedResource.getRelativeToVariablePath());\n       return PathMacroManager.getInstance(rootModel.getModule()).expandPath(toPathVariableFormat);\n     }\n     return linkedResource.getLocation();\n  }","id":55488,"modified_method":"@Nullable\n  private String expandLinkedResourcesPath(final ModifiableRootModel rootModel,\n                                           final Set<String> usedVariables,\n                                           final String path) {\n    final EclipseProjectFinder.LinkedResource linkedResource = EclipseProjectFinder.findLinkedResource(myRootPath, path);\n    if (linkedResource != null) {\n      if (linkedResource.containsPathVariable()) {\n        usedVariables.add(linkedResource.getVariableName());\n      }\n      if (linkedResource.containsPathVariable()) {\n        final String toPathVariableFormat =\n          getVariableRelatedPath(linkedResource.getVariableName(), linkedResource.getRelativeToVariablePath());\n        return PathMacroManager.getInstance(rootModel.getModule()).expandPath(toPathVariableFormat);\n      }\n      return linkedResource.getLocation();\n    }\n    return null;\n  }","commit_id":"9d87951efd8f728665837aba4211e6192e574b75","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private void readClasspathEntry(ModifiableRootModel rootModel,\n                                  final Collection<String> unknownLibraries,\n                                  Collection<String> unknownJdks,\n                                  final Set<String> usedVariables,\n                                  Set<String> refsToModules,\n                                  final String testPattern,\n                                  Element element, int idx) throws ConversionException {\n    String kind = element.getAttributeValue(EclipseXml.KIND_ATTR);\n    if (kind == null) {\n      throw new ConversionException(\"Missing classpathentry/@kind\");\n    }\n\n\n    String path = element.getAttributeValue(EclipseXml.PATH_ATTR);\n    if (path == null) {\n      throw new ConversionException(\"Missing classpathentry/@path\");\n    }\n\n    final boolean exported = EclipseXml.TRUE_VALUE.equals(element.getAttributeValue(EclipseXml.EXPORTED_ATTR));\n\n    final EclipseModuleManager eclipseModuleManager = EclipseModuleManager.getInstance(rootModel.getModule());\n    if (kind.equals(EclipseXml.SRC_KIND)) {\n      if (path.startsWith(\"/\")) {\n        final String moduleName = path.substring(1);\n        refsToModules.add(moduleName);\n        rootModel.addInvalidModuleEntry(moduleName).setExported(exported);\n      }\n      else {\n        String srcUrl = VfsUtil.pathToUrl(myRootPath + \"/\" + path);\n        boolean isTestFolder = false;\n        try {\n          isTestFolder = testPattern != null && testPattern.length() > 0 && path.matches(testPattern);\n        }\n        catch (PatternSyntaxException e) {\n          isTestFolder = false;\n        }\n        final EclipseProjectFinder.LinkedResource linkedResource = EclipseProjectFinder.findLinkedResource(myRootPath, path);\n        if (linkedResource != null) {\n          if (linkedResource.containsPathVariable()) {\n            usedVariables.add(linkedResource.getVariableName());\n          }\n          srcUrl = VfsUtil.pathToUrl(expandLinkedPath(rootModel, linkedResource));\n          eclipseModuleManager.registerEclipseLinkedSrcVarPath(srcUrl, path);\n          rootModel.addContentEntry(srcUrl).addSourceFolder(srcUrl, isTestFolder);\n        } else {\n          getContentEntry().addSourceFolder(srcUrl, isTestFolder);\n        }\n        eclipseModuleManager.setExpectedModuleSourcePlace(rearrangeOrderEntryOfType(rootModel, ModuleSourceOrderEntry.class));\n        eclipseModuleManager.registerSrcPlace(srcUrl, idx);\n      }\n    }\n\n    else if (kind.equals(EclipseXml.OUTPUT_KIND)) {\n      String output = myRootPath + \"/\" + path;\n      final EclipseProjectFinder.LinkedResource linkedResource = EclipseProjectFinder.findLinkedResource(myRootPath, path);\n      if (linkedResource != null) {\n        if (linkedResource.containsPathVariable()) {\n          usedVariables.add(linkedResource.getVariableName());\n        }\n        output = expandLinkedPath(rootModel, linkedResource);\n        eclipseModuleManager.registerEclipseLinkedVarPath(VfsUtil.pathToUrl(output), path);\n      }\n      setupOutput(rootModel, output);\n    }\n\n    else if (kind.equals(EclipseXml.LIB_KIND)) {\n      final String libName = getPresentableName(path);\n      final Library library = rootModel.getModuleLibraryTable().getModifiableModel().createLibrary(libName);\n      final Library.ModifiableModel modifiableModel = library.getModifiableModel();\n\n      final String url = expandEclipsePath2Url(path, rootModel, myCurrentRoots);\n      modifiableModel.addRoot(url, OrderRootType.CLASSES);\n      eclipseModuleManager.registerEclipseLibUrl(url);\n\n      final String sourcePath = element.getAttributeValue(EclipseXml.SOURCEPATH_ATTR);\n      if (sourcePath != null) {\n        final String srcUrl = expandEclipsePath2Url(sourcePath, rootModel, myCurrentRoots);\n        modifiableModel.addRoot(srcUrl, OrderRootType.SOURCES);\n      }\n\n      EJavadocUtil.appendJavadocRoots(element, rootModel, myCurrentRoots, modifiableModel);\n      modifiableModel.commit();\n\n      setLibraryEntryExported(rootModel, exported, library);\n    }\n    else if (kind.equals(EclipseXml.VAR_KIND)) {\n      int slash = path.indexOf(\"/\");\n      if (slash == 0) {\n        throw new ConversionException(\"Incorrect 'classpathentry/var@path' format\");\n      }\n\n      final String libName = getPresentableName(path);\n      final Library library = rootModel.getModuleLibraryTable().getModifiableModel().createLibrary(libName);\n      final Library.ModifiableModel modifiableModel = library.getModifiableModel();\n\n      final String url = eclipseVariabledPath2Url(rootModel, usedVariables, path, 0);\n      modifiableModel.addRoot(url, OrderRootType.CLASSES);\n      eclipseModuleManager.registerEclipseVariablePath(url, path);\n\n      final String srcPathAttr = element.getAttributeValue(EclipseXml.SOURCEPATH_ATTR);\n      if (srcPathAttr != null) {\n        final String srcUrl = eclipseVariabledPath2Url(rootModel, usedVariables, srcPathAttr, srcVarStart(srcPathAttr));\n        modifiableModel.addRoot(srcUrl, OrderRootType.SOURCES);\n        eclipseModuleManager.registerEclipseSrcVariablePath(srcUrl, srcPathAttr);\n      }\n\n      EJavadocUtil.appendJavadocRoots(element, rootModel, myCurrentRoots, modifiableModel);\n\n      modifiableModel.commit();\n\n      setLibraryEntryExported(rootModel, exported, library);\n    }\n    else if (kind.equals(EclipseXml.CON_KIND)) {\n      if (path.equals(EclipseXml.ECLIPSE_PLATFORM)) {\n        readRequiredBundles(rootModel, refsToModules);\n        addNamedLibrary(rootModel, unknownLibraries, exported, IdeaXml.ECLIPSE_LIBRARY, LibraryTablesRegistrar.APPLICATION_LEVEL);\n      }\n      else if (path.startsWith(EclipseXml.JRE_CONTAINER)) {\n\n        final String jdkName = getLastPathComponent(path);\n        if (jdkName == null) {\n          rootModel.inheritSdk();\n        }\n        else {\n          final Sdk moduleJdk = ProjectJdkTable.getInstance().findJdk(jdkName);\n          if (moduleJdk != null) {\n            rootModel.setSdk(moduleJdk);\n          }\n          else {\n            rootModel.setInvalidSdk(jdkName, IdeaXml.JAVA_SDK_TYPE);\n            eclipseModuleManager.setInvalidJdk(jdkName);\n            unknownJdks.add(jdkName);\n          }\n        }\n        rearrangeOrderEntryOfType(rootModel, JdkOrderEntry.class);\n      }\n      else if (path.startsWith(EclipseXml.USER_LIBRARY)) {\n        addNamedLibrary(rootModel, unknownLibraries, exported, getPresentableName(path), LibraryTablesRegistrar.PROJECT_LEVEL);\n      }\n      else if (path.startsWith(EclipseXml.JUNIT_CONTAINER)) {\n        final String junitName = IdeaXml.JUNIT + getPresentableName(path);\n        final Library library = rootModel.getModuleLibraryTable().getModifiableModel().createLibrary(junitName);\n        final Library.ModifiableModel modifiableModel = library.getModifiableModel();\n        modifiableModel.addRoot(getJunitClsUrl(junitName.contains(\"4\")), OrderRootType.CLASSES);\n        modifiableModel.commit();\n      }\n      else if (path.equals(EclipseXml.GROOVY_DSL_CONTAINER)) {\n        eclipseModuleManager.setGroovyDslSupport();\n        eclipseModuleManager.registerSrcPlace(EclipseXml.GROOVY_DSL_CONTAINER, idx);\n      }\n      else {\n        eclipseModuleManager.registerUnknownCons(path);\n        addNamedLibrary(rootModel, new ArrayList<String>(), exported, path, LibraryTablesRegistrar.APPLICATION_LEVEL);\n      }\n    }\n    else {\n      throw new ConversionException(\"Unknown classpathentry/@kind: \" + kind);\n    }\n  }","id":55489,"modified_method":"private void readClasspathEntry(ModifiableRootModel rootModel,\n                                  final Collection<String> unknownLibraries,\n                                  Collection<String> unknownJdks,\n                                  final Set<String> usedVariables,\n                                  Set<String> refsToModules,\n                                  final String testPattern,\n                                  Element element, int idx) throws ConversionException {\n    String kind = element.getAttributeValue(EclipseXml.KIND_ATTR);\n    if (kind == null) {\n      throw new ConversionException(\"Missing classpathentry/@kind\");\n    }\n\n\n    String path = element.getAttributeValue(EclipseXml.PATH_ATTR);\n    if (path == null) {\n      throw new ConversionException(\"Missing classpathentry/@path\");\n    }\n\n    final boolean exported = EclipseXml.TRUE_VALUE.equals(element.getAttributeValue(EclipseXml.EXPORTED_ATTR));\n\n    final EclipseModuleManager eclipseModuleManager = EclipseModuleManager.getInstance(rootModel.getModule());\n    if (kind.equals(EclipseXml.SRC_KIND)) {\n      if (path.startsWith(\"/\")) {\n        final String moduleName = path.substring(1);\n        refsToModules.add(moduleName);\n        rootModel.addInvalidModuleEntry(moduleName).setExported(exported);\n      }\n      else {\n        String srcUrl = VfsUtil.pathToUrl(myRootPath + \"/\" + path);\n        boolean isTestFolder = false;\n        try {\n          isTestFolder = testPattern != null && testPattern.length() > 0 && path.matches(testPattern);\n        }\n        catch (PatternSyntaxException e) {\n          isTestFolder = false;\n        }\n        final String linked = expandLinkedResourcesPath(rootModel, usedVariables, path);\n        if (linked != null) {\n          srcUrl = VfsUtil.pathToUrl(linked);\n          eclipseModuleManager.registerEclipseLinkedSrcVarPath(srcUrl, path);\n          rootModel.addContentEntry(srcUrl).addSourceFolder(srcUrl, isTestFolder);\n        } else {\n          getContentEntry().addSourceFolder(srcUrl, isTestFolder);\n        }\n        eclipseModuleManager.setExpectedModuleSourcePlace(rearrangeOrderEntryOfType(rootModel, ModuleSourceOrderEntry.class));\n        eclipseModuleManager.registerSrcPlace(srcUrl, idx);\n      }\n    }\n\n    else if (kind.equals(EclipseXml.OUTPUT_KIND)) {\n      String output = myRootPath + \"/\" + path;\n      final String linked = expandLinkedResourcesPath(rootModel, usedVariables, path);\n      if (linked != null) {\n        output = linked;\n        eclipseModuleManager.registerEclipseLinkedVarPath(VfsUtil.pathToUrl(output), path);\n      }\n      setupOutput(rootModel, output);\n    }\n\n    else if (kind.equals(EclipseXml.LIB_KIND)) {\n      final String libName = getPresentableName(path);\n      final Library library = rootModel.getModuleLibraryTable().getModifiableModel().createLibrary(libName);\n      final Library.ModifiableModel modifiableModel = library.getModifiableModel();\n\n      final String linked = expandLinkedResourcesPath(rootModel, usedVariables, path);\n      final String url;\n      if (linked != null) {\n        url = VfsUtil.pathToUrl(linked);\n        eclipseModuleManager.registerEclipseLinkedVarPath(url, path);\n      } else {\n        url = expandEclipsePath2Url(path, rootModel, myCurrentRoots);\n      }\n      modifiableModel.addRoot(url, OrderRootType.CLASSES);\n      eclipseModuleManager.registerEclipseLibUrl(url);\n\n      final String sourcePath = element.getAttributeValue(EclipseXml.SOURCEPATH_ATTR);\n      if (sourcePath != null) {\n        final String linkedSrc = expandLinkedResourcesPath(rootModel, usedVariables, sourcePath);\n        final String srcUrl;\n        if (linkedSrc != null) {\n          srcUrl = VfsUtil.pathToUrl(linkedSrc);\n          eclipseModuleManager.registerEclipseLinkedSrcVarPath(srcUrl, sourcePath);\n        }\n        else {\n          srcUrl = expandEclipsePath2Url(sourcePath, rootModel, myCurrentRoots);\n        }\n        modifiableModel.addRoot(srcUrl, OrderRootType.SOURCES);\n      }\n\n      EJavadocUtil.appendJavadocRoots(element, rootModel, myCurrentRoots, modifiableModel);\n      modifiableModel.commit();\n\n      setLibraryEntryExported(rootModel, exported, library);\n    }\n    else if (kind.equals(EclipseXml.VAR_KIND)) {\n      int slash = path.indexOf(\"/\");\n      if (slash == 0) {\n        throw new ConversionException(\"Incorrect 'classpathentry/var@path' format\");\n      }\n\n      final String libName = getPresentableName(path);\n      final Library library = rootModel.getModuleLibraryTable().getModifiableModel().createLibrary(libName);\n      final Library.ModifiableModel modifiableModel = library.getModifiableModel();\n\n      final String url = eclipseVariabledPath2Url(rootModel, usedVariables, path, 0);\n      modifiableModel.addRoot(url, OrderRootType.CLASSES);\n      eclipseModuleManager.registerEclipseVariablePath(url, path);\n\n      final String srcPathAttr = element.getAttributeValue(EclipseXml.SOURCEPATH_ATTR);\n      if (srcPathAttr != null) {\n        final String srcUrl = eclipseVariabledPath2Url(rootModel, usedVariables, srcPathAttr, srcVarStart(srcPathAttr));\n        modifiableModel.addRoot(srcUrl, OrderRootType.SOURCES);\n        eclipseModuleManager.registerEclipseSrcVariablePath(srcUrl, srcPathAttr);\n      }\n\n      EJavadocUtil.appendJavadocRoots(element, rootModel, myCurrentRoots, modifiableModel);\n\n      modifiableModel.commit();\n\n      setLibraryEntryExported(rootModel, exported, library);\n    }\n    else if (kind.equals(EclipseXml.CON_KIND)) {\n      if (path.equals(EclipseXml.ECLIPSE_PLATFORM)) {\n        readRequiredBundles(rootModel, refsToModules);\n        addNamedLibrary(rootModel, unknownLibraries, exported, IdeaXml.ECLIPSE_LIBRARY, LibraryTablesRegistrar.APPLICATION_LEVEL);\n      }\n      else if (path.startsWith(EclipseXml.JRE_CONTAINER)) {\n\n        final String jdkName = getLastPathComponent(path);\n        if (jdkName == null) {\n          rootModel.inheritSdk();\n        }\n        else {\n          final Sdk moduleJdk = ProjectJdkTable.getInstance().findJdk(jdkName);\n          if (moduleJdk != null) {\n            rootModel.setSdk(moduleJdk);\n          }\n          else {\n            rootModel.setInvalidSdk(jdkName, IdeaXml.JAVA_SDK_TYPE);\n            eclipseModuleManager.setInvalidJdk(jdkName);\n            unknownJdks.add(jdkName);\n          }\n        }\n        rearrangeOrderEntryOfType(rootModel, JdkOrderEntry.class);\n      }\n      else if (path.startsWith(EclipseXml.USER_LIBRARY)) {\n        addNamedLibrary(rootModel, unknownLibraries, exported, getPresentableName(path), LibraryTablesRegistrar.PROJECT_LEVEL);\n      }\n      else if (path.startsWith(EclipseXml.JUNIT_CONTAINER)) {\n        final String junitName = IdeaXml.JUNIT + getPresentableName(path);\n        final Library library = rootModel.getModuleLibraryTable().getModifiableModel().createLibrary(junitName);\n        final Library.ModifiableModel modifiableModel = library.getModifiableModel();\n        modifiableModel.addRoot(getJunitClsUrl(junitName.contains(\"4\")), OrderRootType.CLASSES);\n        modifiableModel.commit();\n      }\n      else if (path.equals(EclipseXml.GROOVY_DSL_CONTAINER)) {\n        eclipseModuleManager.setGroovyDslSupport();\n        eclipseModuleManager.registerSrcPlace(EclipseXml.GROOVY_DSL_CONTAINER, idx);\n      }\n      else {\n        eclipseModuleManager.registerUnknownCons(path);\n        addNamedLibrary(rootModel, new ArrayList<String>(), exported, path, LibraryTablesRegistrar.APPLICATION_LEVEL);\n      }\n    }\n    else {\n      throw new ConversionException(\"Unknown classpathentry/@kind: \" + kind);\n    }\n  }","commit_id":"9d87951efd8f728665837aba4211e6192e574b75","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"/** This method is called from within the constructor to\n     * initialize the form.\n     * WARNING: Do NOT modify this code. The content of this method is\n     * always regenerated by the Form Editor.\n     */\n    @SuppressWarnings(\"unchecked\")\n    // <editor-fold defaultstate=\"collapsed\" desc=\"Generated Code\">//GEN-BEGIN:initComponents\n    private void initComponents() {\n\n        closeButton = new javax.swing.JButton();\n        editorPanel = new javax.swing.JPanel();\n        newCaseButton = new javax.swing.JButton();\n        openCaseButton = new javax.swing.JButton();\n        openRecentButton = new javax.swing.JButton();\n        createNewLabel = new javax.swing.JLabel();\n        openLabel = new javax.swing.JLabel();\n        openRecentLabel = new javax.swing.JLabel();\n        autopsyLogo = new javax.swing.JLabel();\n        this.autopsyLogo.setText(\"\");\n\n        closeButton.setText(org.openide.util.NbBundle.getMessage(CueBannerPanel.class, \"CueBannerPanel.closeButton.text\")); // NOI18N\n\n        newCaseButton.setIcon(new javax.swing.ImageIcon(getClass().getResource(\"/org/sleuthkit/autopsy/casemodule/btn_icon_create_new_case.png\"))); // NOI18N\n        newCaseButton.setText(org.openide.util.NbBundle.getMessage(CueBannerPanel.class, \"CueBannerPanel.newCaseButton.text\")); // NOI18N\n        newCaseButton.setBorder(null);\n        newCaseButton.setBorderPainted(false);\n        newCaseButton.setContentAreaFilled(false);\n        newCaseButton.setPreferredSize(new java.awt.Dimension(70, 70));\n        newCaseButton.addActionListener(new java.awt.event.ActionListener() {\n            public void actionPerformed(java.awt.event.ActionEvent evt) {\n                newCaseButtonActionPerformed(evt);\n            }\n        });\n\n        openCaseButton.setIcon(new javax.swing.ImageIcon(getClass().getResource(\"/org/sleuthkit/autopsy/casemodule/btn_icon_open_existing.png\"))); // NOI18N\n        openCaseButton.setText(org.openide.util.NbBundle.getMessage(CueBannerPanel.class, \"CueBannerPanel.openCaseButton.text\")); // NOI18N\n        openCaseButton.setBorder(null);\n        openCaseButton.setBorderPainted(false);\n        openCaseButton.setContentAreaFilled(false);\n        openCaseButton.setMargin(new java.awt.Insets(1, 1, 1, 1));\n        openCaseButton.setPreferredSize(new java.awt.Dimension(70, 70));\n        openCaseButton.addActionListener(new java.awt.event.ActionListener() {\n            public void actionPerformed(java.awt.event.ActionEvent evt) {\n                openCaseButtonActionPerformed(evt);\n            }\n        });\n\n        openRecentButton.setIcon(new javax.swing.ImageIcon(getClass().getResource(\"/org/sleuthkit/autopsy/casemodule/btn_icon_open_recent.png\"))); // NOI18N\n        openRecentButton.setText(org.openide.util.NbBundle.getMessage(CueBannerPanel.class, \"CueBannerPanel.openRecentButton.text\")); // NOI18N\n        openRecentButton.setBorder(null);\n        openRecentButton.setBorderPainted(false);\n        openRecentButton.setContentAreaFilled(false);\n        openRecentButton.setPreferredSize(new java.awt.Dimension(70, 70));\n        openRecentButton.addActionListener(new java.awt.event.ActionListener() {\n            public void actionPerformed(java.awt.event.ActionEvent evt) {\n                openRecentButtonActionPerformed(evt);\n            }\n        });\n\n        createNewLabel.setFont(new java.awt.Font(\"Tahoma\", 0, 13));\n        createNewLabel.setText(org.openide.util.NbBundle.getMessage(CueBannerPanel.class, \"CueBannerPanel.createNewLabel.text\")); // NOI18N\n\n        openLabel.setFont(new java.awt.Font(\"Tahoma\", 0, 13));\n        openLabel.setText(org.openide.util.NbBundle.getMessage(CueBannerPanel.class, \"CueBannerPanel.openLabel.text\")); // NOI18N\n\n        openRecentLabel.setFont(new java.awt.Font(\"Tahoma\", 0, 13));\n        openRecentLabel.setText(org.openide.util.NbBundle.getMessage(CueBannerPanel.class, \"CueBannerPanel.openRecentLabel.text\")); // NOI18N\n\n        javax.swing.GroupLayout editorPanelLayout = new javax.swing.GroupLayout(editorPanel);\n        editorPanel.setLayout(editorPanelLayout);\n        editorPanelLayout.setHorizontalGroup(\n            editorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n            .addGroup(editorPanelLayout.createSequentialGroup()\n                .addGroup(editorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n                    .addGroup(editorPanelLayout.createSequentialGroup()\n                        .addComponent(newCaseButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)\n                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)\n                        .addComponent(createNewLabel))\n                    .addGroup(editorPanelLayout.createSequentialGroup()\n                        .addComponent(openCaseButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)\n                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)\n                        .addComponent(openLabel))\n                    .addGroup(editorPanelLayout.createSequentialGroup()\n                        .addComponent(openRecentButton, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)\n                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)\n                        .addComponent(openRecentLabel)))\n                .addContainerGap(60, Short.MAX_VALUE))\n        );\n        editorPanelLayout.setVerticalGroup(\n            editorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n            .addGroup(editorPanelLayout.createSequentialGroup()\n                .addGroup(editorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n                    .addGroup(editorPanelLayout.createSequentialGroup()\n                        .addGap(32, 32, 32)\n                        .addComponent(newCaseButton, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE))\n                    .addGroup(editorPanelLayout.createSequentialGroup()\n                        .addGap(50, 50, 50)\n                        .addComponent(createNewLabel)))\n                .addGroup(editorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n                    .addGroup(editorPanelLayout.createSequentialGroup()\n                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)\n                        .addComponent(openCaseButton, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE))\n                    .addGroup(editorPanelLayout.createSequentialGroup()\n                        .addGap(31, 31, 31)\n                        .addComponent(openLabel)))\n                .addGroup(editorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n                    .addGroup(editorPanelLayout.createSequentialGroup()\n                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)\n                        .addComponent(openRecentButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))\n                    .addGroup(editorPanelLayout.createSequentialGroup()\n                        .addGap(32, 32, 32)\n                        .addComponent(openRecentLabel)))\n                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))\n        );\n\n        autopsyLogo.setIcon(new javax.swing.ImageIcon(getClass().getResource(\"/org/sleuthkit/autopsy/casemodule/welcome_logo.png\"))); // NOI18N\n        autopsyLogo.setText(org.openide.util.NbBundle.getMessage(CueBannerPanel.class, \"CueBannerPanel.autopsyLogo.text\")); // NOI18N\n\n        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);\n        this.setLayout(layout);\n        layout.setHorizontalGroup(\n            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n            .addGroup(layout.createSequentialGroup()\n                .addContainerGap()\n                .addComponent(autopsyLogo)\n                .addGap(29, 29, 29)\n                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)\n                    .addComponent(editorPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)\n                    .addComponent(closeButton, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE))\n                .addContainerGap())\n        );\n        layout.setVerticalGroup(\n            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n            .addGroup(layout.createSequentialGroup()\n                .addContainerGap()\n                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n                    .addComponent(autopsyLogo, javax.swing.GroupLayout.PREFERRED_SIZE, 257, javax.swing.GroupLayout.PREFERRED_SIZE)\n                    .addGroup(layout.createSequentialGroup()\n                        .addComponent(editorPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)\n                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)\n                        .addComponent(closeButton)))\n                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))\n        );\n    }","id":55490,"modified_method":"/** This method is called from within the constructor to\n     * initialize the form.\n     * WARNING: Do NOT modify this code. The content of this method is\n     * always regenerated by the Form Editor.\n     */\n    @SuppressWarnings(\"unchecked\")\n    // <editor-fold defaultstate=\"collapsed\" desc=\"Generated Code\">//GEN-BEGIN:initComponents\n    private void initComponents() {\n\n        closeButton = new javax.swing.JButton();\n        editorPanel = new javax.swing.JPanel();\n        newCaseButton = new javax.swing.JButton();\n        openRecentButton = new javax.swing.JButton();\n        createNewLabel = new javax.swing.JLabel();\n        openRecentLabel = new javax.swing.JLabel();\n        openCaseButton = new javax.swing.JButton();\n        openLabel = new javax.swing.JLabel();\n        autopsyLogo = new javax.swing.JLabel();\n        this.autopsyLogo.setText(\"\");\n\n        closeButton.setText(org.openide.util.NbBundle.getMessage(CueBannerPanel.class, \"CueBannerPanel.closeButton.text\")); // NOI18N\n\n        newCaseButton.setIcon(new javax.swing.ImageIcon(getClass().getResource(\"/org/sleuthkit/autopsy/casemodule/btn_icon_create_new_case.png\"))); // NOI18N\n        newCaseButton.setText(org.openide.util.NbBundle.getMessage(CueBannerPanel.class, \"CueBannerPanel.newCaseButton.text\")); // NOI18N\n        newCaseButton.setBorder(null);\n        newCaseButton.setBorderPainted(false);\n        newCaseButton.setContentAreaFilled(false);\n        newCaseButton.setPreferredSize(new java.awt.Dimension(70, 70));\n        newCaseButton.addActionListener(new java.awt.event.ActionListener() {\n            public void actionPerformed(java.awt.event.ActionEvent evt) {\n                newCaseButtonActionPerformed(evt);\n            }\n        });\n\n        openRecentButton.setIcon(new javax.swing.ImageIcon(getClass().getResource(\"/org/sleuthkit/autopsy/casemodule/btn_icon_open_recent.png\"))); // NOI18N\n        openRecentButton.setText(org.openide.util.NbBundle.getMessage(CueBannerPanel.class, \"CueBannerPanel.openRecentButton.text\")); // NOI18N\n        openRecentButton.setBorder(null);\n        openRecentButton.setBorderPainted(false);\n        openRecentButton.setContentAreaFilled(false);\n        openRecentButton.setPreferredSize(new java.awt.Dimension(70, 70));\n        openRecentButton.addActionListener(new java.awt.event.ActionListener() {\n            public void actionPerformed(java.awt.event.ActionEvent evt) {\n                openRecentButtonActionPerformed(evt);\n            }\n        });\n\n        createNewLabel.setFont(new java.awt.Font(\"Tahoma\", 0, 13)); // NOI18N\n        createNewLabel.setText(org.openide.util.NbBundle.getMessage(CueBannerPanel.class, \"CueBannerPanel.createNewLabel.text\")); // NOI18N\n\n        openRecentLabel.setFont(new java.awt.Font(\"Tahoma\", 0, 13)); // NOI18N\n        openRecentLabel.setText(org.openide.util.NbBundle.getMessage(CueBannerPanel.class, \"CueBannerPanel.openRecentLabel.text\")); // NOI18N\n\n        openCaseButton.setIcon(new javax.swing.ImageIcon(getClass().getResource(\"/org/sleuthkit/autopsy/casemodule/btn_icon_open_existing.png\"))); // NOI18N\n        openCaseButton.setText(org.openide.util.NbBundle.getMessage(CueBannerPanel.class, \"CueBannerPanel.openCaseButton.text\")); // NOI18N\n        openCaseButton.setBorder(null);\n        openCaseButton.setBorderPainted(false);\n        openCaseButton.setContentAreaFilled(false);\n        openCaseButton.setMargin(new java.awt.Insets(1, 1, 1, 1));\n        openCaseButton.setPreferredSize(new java.awt.Dimension(70, 70));\n        openCaseButton.addActionListener(new java.awt.event.ActionListener() {\n            public void actionPerformed(java.awt.event.ActionEvent evt) {\n                openCaseButtonActionPerformed(evt);\n            }\n        });\n\n        openLabel.setFont(new java.awt.Font(\"Tahoma\", 0, 13)); // NOI18N\n        openLabel.setText(org.openide.util.NbBundle.getMessage(CueBannerPanel.class, \"CueBannerPanel.openLabel.text\")); // NOI18N\n\n        javax.swing.GroupLayout editorPanelLayout = new javax.swing.GroupLayout(editorPanel);\n        editorPanel.setLayout(editorPanelLayout);\n        editorPanelLayout.setHorizontalGroup(\n            editorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n            .addGroup(editorPanelLayout.createSequentialGroup()\n                .addGroup(editorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n                    .addGroup(editorPanelLayout.createSequentialGroup()\n                        .addComponent(newCaseButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)\n                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)\n                        .addComponent(createNewLabel))\n                    .addGroup(editorPanelLayout.createSequentialGroup()\n                        .addComponent(openRecentButton, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)\n                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)\n                        .addComponent(openRecentLabel))\n                    .addGroup(editorPanelLayout.createSequentialGroup()\n                        .addComponent(openCaseButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)\n                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)\n                        .addComponent(openLabel)))\n                .addContainerGap(60, Short.MAX_VALUE))\n        );\n        editorPanelLayout.setVerticalGroup(\n            editorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n            .addGroup(editorPanelLayout.createSequentialGroup()\n                .addGap(32, 32, 32)\n                .addGroup(editorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)\n                    .addComponent(createNewLabel)\n                    .addComponent(newCaseButton, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE))\n                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)\n                .addGroup(editorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)\n                    .addComponent(openRecentLabel)\n                    .addComponent(openRecentButton, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))\n                .addGap(0, 0, Short.MAX_VALUE)\n                .addGroup(editorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)\n                    .addComponent(openLabel)\n                    .addComponent(openCaseButton, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE))\n                .addContainerGap(25, Short.MAX_VALUE))\n        );\n\n        autopsyLogo.setIcon(new javax.swing.ImageIcon(getClass().getResource(\"/org/sleuthkit/autopsy/casemodule/welcome_logo.png\"))); // NOI18N\n        autopsyLogo.setText(org.openide.util.NbBundle.getMessage(CueBannerPanel.class, \"CueBannerPanel.autopsyLogo.text\")); // NOI18N\n\n        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);\n        this.setLayout(layout);\n        layout.setHorizontalGroup(\n            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n            .addGroup(layout.createSequentialGroup()\n                .addContainerGap()\n                .addComponent(autopsyLogo)\n                .addGap(29, 29, 29)\n                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)\n                    .addComponent(editorPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)\n                    .addComponent(closeButton, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE))\n                .addContainerGap())\n        );\n        layout.setVerticalGroup(\n            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n            .addGroup(layout.createSequentialGroup()\n                .addContainerGap()\n                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n                    .addComponent(autopsyLogo, javax.swing.GroupLayout.PREFERRED_SIZE, 257, javax.swing.GroupLayout.PREFERRED_SIZE)\n                    .addGroup(layout.createSequentialGroup()\n                        .addComponent(editorPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)\n                        .addGap(18, 18, 18)\n                        .addComponent(closeButton)))\n                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))\n        );\n    }","commit_id":"d83c58b9265e0d55cca92b8148e67b57dd590428","url":"https://github.com/sleuthkit/autopsy"},{"original_method":"public void selectionChanged(LWSelection s) {\n\n        //Log.debug(\"selectionChanged: \" + s + \"; size=\" + s.size() + \"; \" + Arrays.asList(s.toArray()) + \"; parents=\" + s.getParents());\n\n        enableForSelection(s);\n\n//         if (!s.getParents().contains(mMap.getActiveLayer()))\n//             for (LWComponent c : s.getParents())\n//                 if (c instanceof Layer)\n//                     mMap.setActiveLayer(c);\n\n        if (s.getParents().size() == 1)\n            setActiveLayer(s.first().getLayer());\n\n\n//         if (s.size() == 1 && s.first().getLayer() != null) {\n//             //if (DEBUG.Enabled) Log.debug(\"selectionChanged: single selection; activate layer of: \" + s.first());\n//             setActiveLayer(s.first().getLayer());\n//         } else if (s.getParents().size() == 1 && s.first().getParent() instanceof Layer) {\n//             //if (DEBUG.Enabled) Log.debug(\"selectionChanged: one parent in selection; active parent \" + s.first().getParent());\n//             setActiveLayer((Layer) s.first().getParent());\n//         }\n\n        indicateActiveLayers(s.getParents());\n\n//         // for debug / child-list mode:\n//         if (mMap != null && !mMap.isLayered())\n//             indicateActiveLayer(null);\n    }","id":55491,"modified_method":"public void selectionChanged(LWSelection s) {\n\n        //Log.debug(\"selectionChanged: \" + s + \"; size=\" + s.size() + \"; \" + Arrays.asList(s.toArray()) + \"; parents=\" + s.getParents());\n\n        updateGrabEnabledForSelection(s);\n\n//         if (!s.getParents().contains(mMap.getActiveLayer()))\n//             for (LWComponent c : s.getParents())\n//                 if (c instanceof Layer)\n//                     mMap.setActiveLayer(c);\n\n        if (s.getParents().size() == 1)\n            setActiveLayer(s.first().getLayer());\n\n\n//         if (s.size() == 1 && s.first().getLayer() != null) {\n//             //if (DEBUG.Enabled) Log.debug(\"selectionChanged: single selection; activate layer of: \" + s.first());\n//             setActiveLayer(s.first().getLayer());\n//         } else if (s.getParents().size() == 1 && s.first().getParent() instanceof Layer) {\n//             //if (DEBUG.Enabled) Log.debug(\"selectionChanged: one parent in selection; active parent \" + s.first().getParent());\n//             setActiveLayer((Layer) s.first().getParent());\n//         }\n\n        indicateActiveLayers(s.getParents());\n\n//         // for debug / child-list mode:\n//         if (mMap != null && !mMap.isLayered())\n//             indicateActiveLayer(null);\n    }","commit_id":"98a1b7d1aafc4a83dd28079b689e4a2d9955ecef","url":"https://github.com/VUE/VUE"},{"original_method":"private static void grabFromSelection(Layer layer) {\n        final LWSelection selection = VUE.getSelection();\n        \n        final java.util.List grabbing = new ArrayList();\n        \n        for (LWComponent c : selection) {\n            if (layerCanGrab(layer, c))\n                grabbing.add(c);\n        }\n\n        // todo perf: remove all old layer in one swoop, then add to new\n        \n        layer.addChildren(grabbing);\n        \n    }","id":55492,"modified_method":"private static void grabFromSelection(Layer layer) {\n        final LWSelection selection = VUE.getSelection();\n        \n        final java.util.List grabbing = new ArrayList();\n        \n        for (LWComponent c : selection) {\n            if (layerCanGrab(layer, c))\n                grabbing.add(c);\n        }\n\n        // todo perf: remove all old layer in one swoop, then add to new\n        \n        layer.addChildren(grabbing);\n\n        selection.resetStatistics();\n    }","commit_id":"98a1b7d1aafc4a83dd28079b689e4a2d9955ecef","url":"https://github.com/VUE/VUE"},{"original_method":"Row(final LWComponent layer)\n        {\n            this.layer = layer;\n            label = new TextEdit(this);\n            setName(layer.toString());\n            setLayout(new GridBagLayout());\n            setBorder(new CompoundBorder(new MatteBorder(1,0,1,0, Color.lightGray),\n                                         GUI.makeSpace(3,7,3,7)));\n            if (SCROLLABLE) {\n                if (layer instanceof Layer)\n                    setPreferredSize(LayerHeight);\n                else\n                    setPreferredSize(DefaultHeight);\n            }\n            //setMaximumSize(new Dimension(Short.MAX_VALUE, 64)); // no effect\n            //setMinimumSize(new Dimension(150, 100)); // no effect\n\n            addMouseListener(this);\n            addMouseMotionListener(this);\n            \n            if (layer instanceof Layer)\n                defaultBackground = null;\n            else\n                defaultBackground = Color.white; // debug/test case\n            setBackground(defaultBackground);\n            \n            if (true) {\n                // looks a bit messy w/current icons, but more informative\n                visible.setName(\"layer.visible\");\n                visible.setIcon(VueResources.getImageIcon(\"pathwayOff\"));\n                visible.setSelectedIcon(VueResources.getImageIcon(\"pathwayOn\"));\n                // need a bigger and/or colored icon -- to tough to see\n                locked.setName(\"layer.locked\");\n                locked.setIcon(VueResources.getImageIcon(\"lockOpen\"));\n                locked.setSelectedIcon(VueResources.getImageIcon(\"lock\"));\n                locked.setMargin(LockedInsets);\n                //locked.setBorder(GUI.makeSpace(1,5,5,1)); // no effect\n            }\n            \n            locked.setSelected(layer.isLocked());\n            locked.setBorderPainted(layer.isLocked());\n            locked.setOpaque(false);\n            locked.addActionListener(new ActionListener() {\n                    public void actionPerformed(ActionEvent e) {\n                        locked.setBorderPainted(locked.isSelected());\n                        layer.setLocked(locked.isSelected());\n                        if (layer == getActiveLayer() && !canBeActive(layer))\n                            if (AUTO_ADJUST_ACTIVE_LAYER) attemptAlternativeActiveLayer();\n                    }});\n            \n\n            visible.setSelected(layer.isVisible());\n            visible.addActionListener(new ActionListener() {\n                    public void actionPerformed(ActionEvent e) {\n                        layer.setVisible(visible.isSelected());\n                        locked.setEnabled(layer.isVisible());\n                        label.setEnabled(layer.isVisible());\n                        if (layer == getActiveLayer() && !canBeActive(layer))\n                            if (AUTO_ADJUST_ACTIVE_LAYER) attemptAlternativeActiveLayer();\n                            \n                    }});\n\n            label.setEnabled(layer.isVisible());\n            \n            \n            if (layer instanceof Layer) {\n\n//                 exclusive = new JRadioButton();            \n//                 exclusive.addActionListener(new ActionListener() {\n//                         public void actionPerformed(ActionEvent e) {\n//                             Row.this.setExclusive(exclusive.isSelected());\n//                         }});\n                exclusive = null;\n            \n                if (true) {\n                    // debg\n                    grab = new JButton(\"Grab\");\n                    grab.setFont(VueConstants.SmallFont);\n                } else {\n                    // todo: use icon-button version when ready to go -- may\n                    // want to use a VueButton\n                    grab = new JButton();\n                    grab.setBorderPainted(false);\n                    // todo: update when Melanie creates new icon for this\n                    grab.setIcon(VueResources.getIcon(VUE.class, \"images/hand_open.png\"));\n                    grab.putClientProperty(\"JButton.buttonType\", \"textured\");\n                    grab.putClientProperty(\"JButton.sizeVariant\", \"tiny\");\n                }\n                grab.setFocusable(false); // FYI, no help on ignoring mouse-motion\n                grab.setOpaque(false);\n                \n                grab.addActionListener(new ActionListener() {\n                        public void actionPerformed(ActionEvent e) {\n                            if (VUE.getSelection().size() > 0) {\n                                grabFromSelection((Layer)layer);\n                                VUE.getUndoManager().mark(\"Move To Layer \" + Util.quote(layer.getLabel()));\n                            }\n                        }});\n            } else {\n                exclusive = null;\n                grab = null;\n            }\n\n            \n            final JLabel info = new JLabel()\n                //{ public Dimension getMinimumSize() { return GUI.ZeroSize; } }\n                ;\n            \n            if (layer.supportsChildren()) {\n                \n                // This might slow down undo of some large-set operations in large maps,\n                // such as grabs, as auto-reparenting will currently de-parent each\n                // child separately, issuing an event for each.  (All hierarchy events,\n                // however, are merged into a single one for undo/redo for each parent).\n                \n                // Note: depends on Layer having permitZombieEvent(e) return\n                // true, otherwise won't update correctly on undo.\n                final LWComponent.Listener countListener\n                    = new LWComponent.Listener() {\n                        public void LWCChanged(LWCEvent e) {\n                            //if (DEBUG.Enabled) Log.debug(\"UPDATING \" + Row.this + \" \" + e);\n                            String counts = \"\";\n                            final int nChild = layer.numChildren();\n                            final int allChildren = layer.getDescendentCount();\n                                \n                            if (nChild > 0)\n                                counts += nChild;\n                            if (allChildren != nChild)\n                                counts += \"/\" + allChildren;\n                            info.setText(counts);\n                            //if (DEBUG.Enabled) { Row.this.validate(); GUI.paintNow(Row.this); } // slower\n                            // above will usually cause a deadlock tho when dropping images and this UI is visible\n                            //if (DEBUG.Enabled) { Row.this.validate(); GUI.paintNow(info); } // faster\n                        }};\n                countListener.LWCChanged(null); // do the initial set\n                layer.addLWCListener(countListener, LWKey.ChildrenAdded, LWKey.ChildrenRemoved);\n            }\n\n\n//             activeIcon.setIcon(VueResources.getIcon(VUE.class, \"images/hand_open.png\"));\n//             // todo perf: only actually need instance of each of these for all rows:\n//             activeIcon.setDisabledIcon(new GUI.EmptyIcon(activeIcon.getIcon())); \n//             activeIcon.setBorder(GUI.makeSpace(4,0,0,0));\n\n            \n            //final JComponent label = new VueTextField(layer.getLabel());\n            // VueTextField impl not useful to us (also not used anywhere)\n            // -- we need an impl that works just like VueTextPane, except\n            // as a single line of text.\n            \n            //final JLabel info = new JLabel(\"(\" + layer.numChildren() + \" items)\");\n            \n            final GridBagConstraints c = new GridBagConstraints();\n            c.weighty = 1; // 1 has all expanding to fill vertical, 0 leaves all at min height\n            c.anchor = GridBagConstraints.WEST;\n            \n            c.insets.right = 4;\n            add(exclusive, c);\n\n            //add(Box.createHorizontalStrut(5), c);\n            c.insets.right = 0;\n            add(visible, c);\n            \n            info.setHorizontalAlignment(SwingConstants.RIGHT);\n\n            if (true) {\n\n                // this magic, setting min-size to zero on the info text to 0, and wrapping\n                // it in a container with the label, allows it fill left, shriking the\n                // edit label if need-be, but never expanding the size of the two\n                // components togehter -- that way, all label-edit + info-text groups\n                // in all rows will always have the same width, keeping everything\n                // in alignment\n                \n                info.setMinimumSize(GUI.ZeroSize);\n                //info.addMouseListener(RowMouseEnterExitTracker);\n                Box box = new Box(BoxLayout.X_AXIS);\n                //JPanel box = new JPanel();\n                label.setPreferredSize(null); // must remove this, or info gets squished to 0 width\n                //label.addMouseListener(RowMouseEnterExitTracker);\n                box.add(label);\n                //box.add(Box.createHorizontalGlue());\n                box.add(info);\n                if (DEBUG.BOXES) box.setBorder(new LineBorder(Color.red));\n                box.setPreferredSize(GUI.MaxSize);\n                //box.setPreferredSize(new Dimension(200, 30));\n                //box.setMaximumSize(new Dimension(200, 30)); // apparently no use\n                \n                c.weightx = 1;\n                c.fill = GridBagConstraints.HORIZONTAL;\n                c.insets.right = 4;\n                add(box, c);\n                c.insets.left = 0;\n                //c.insets.right = 0;\n                c.weightx = 0;\n                c.fill = GridBagConstraints.NONE;\n                \n            } else {\n\n                c.weightx = 1;\n                c.fill = GridBagConstraints.HORIZONTAL;\n                add(label, c);\n                c.fill = GridBagConstraints.NONE;\n                c.weightx = 0;\n                add(info, c);\n\n//                 add(Box.createHorizontalStrut(1));\n//                 add(label);\n            \n//                 //add(Box.createHorizontalGlue());\n            \n//                 add(Box.createHorizontalStrut(1));\n//                 //info.setBorder(new LineBorder(Color.red));\n//                 //info.setPreferredSize(new Dimension(70,Short.MAX_VALUE));\n//                 //info.setMinimumSize(new Dimension(60,0));\n//                 add(info);\n            }\n            \n            //add(Box.createHorizontalGlue(), c);\n\n            if (layer.hasFlag(INTERNAL)) {\n                add(locked, c);\n                preview = null;\n                return;\n            }\n            \n            preview = new Preview(layer);\n            //preview.setMinimumSize(new Dimension(128, 64));\n            \n            //preview.setPreferredSize(GUI.MaxSize);\n            //preview.setSize(256,128);\n            //preview.setPreferredSize(new Dimension(256, Short.MAX_VALUE));\n            //preview.setMaximumSize(GUI.MaxSize);\n\n            if (false && DEBUG.Enabled)\n                layer.addLWCListener(new LWComponent.Listener() {\n                        public void LWCChanged(LWCEvent e) {\n                            // this is heavy duty!  Would be nice if UserActionCompleted\n                            // came through the layer, and we could listen for that,\n                            // but it comes through the map\n                            preview.repaint();\n                        }});\n            \n            \n\n            //add(Box.createHorizontalGlue());\n            \n            if (preview != null) {\n                c.weightx = 1;\n                c.fill = GridBagConstraints.BOTH;\n                //c.fill = GridBagConstraints.VERTICAL;\n                //add(Box.createHorizontalStrut(7));\n                add(preview, c);\n                c.weightx = 0;\n                c.fill = GridBagConstraints.NONE;\n                \n            }\n\n            if (true) {\n                JPanel fixed = new JPanel(new BorderLayout());\n                // todo: will need fancier layout to add a 3rd item in here\n                // and keep everything aligned\n                fixed.setOpaque(false);\n                fixed.setMinimumSize(new Dimension(100, 0));\n                //fixed.add: todo the exclusive \"quick-edit\" icon-button\n                fixed.add(grab, BorderLayout.WEST);\n                fixed.add(locked, BorderLayout.EAST);\n                c.fill = GridBagConstraints.BOTH;\n                add(fixed, c);\n            } else {\n                // old-style before we added hiding these on mouse roll-off\n                //add(activeIcon, c);\n                add(grab, c);\n                add(locked, c);\n            }\n\n            // set initial visibility states by simulating a mouse roll-off\n            rollOff(); \n\n        }","id":55493,"modified_method":"Row(final LWComponent layer)\n        {\n            this.layer = layer;\n            label = new TextEdit(this);\n            setName(layer.toString());\n            setLayout(new GridBagLayout());\n            setBorder(new CompoundBorder(new MatteBorder(1,0,1,0, Color.lightGray),\n                                         GUI.makeSpace(3,7,3,7)));\n            if (SCROLLABLE) {\n                if (layer instanceof Layer)\n                    setPreferredSize(LayerHeight);\n                else\n                    setPreferredSize(DefaultHeight);\n            }\n            //setMaximumSize(new Dimension(Short.MAX_VALUE, 64)); // no effect\n            //setMinimumSize(new Dimension(150, 100)); // no effect\n\n            addMouseListener(this);\n            addMouseMotionListener(this);\n            \n            if (layer instanceof Layer)\n                defaultBackground = null;\n            else\n                defaultBackground = Color.white; // debug/test case\n            setBackground(defaultBackground);\n            \n            if (true) {\n                // looks a bit messy w/current icons, but more informative\n                visible.setName(\"layer.visible\");\n                visible.setIcon(VueResources.getImageIcon(\"pathwayOff\"));\n                visible.setSelectedIcon(VueResources.getImageIcon(\"pathwayOn\"));\n                // need a bigger and/or colored icon -- to tough to see\n                locked.setName(\"layer.locked\");\n                locked.setIcon(VueResources.getImageIcon(\"lockOpen\"));\n                locked.setSelectedIcon(VueResources.getImageIcon(\"lock\"));\n                locked.setMargin(LockedInsets);\n                //locked.setBorder(GUI.makeSpace(1,5,5,1)); // no effect\n            }\n            \n            locked.setSelected(layer.isLocked());\n            locked.setBorderPainted(layer.isLocked());\n            locked.setOpaque(false);\n            locked.addActionListener(new ActionListener() {\n                    public void actionPerformed(ActionEvent e) {\n                        locked.setBorderPainted(locked.isSelected());\n                        layer.setLocked(locked.isSelected());\n                        if (layer == getActiveLayer() && !canBeActive(layer))\n                            if (AUTO_ADJUST_ACTIVE_LAYER) attemptAlternativeActiveLayer();\n                    }});\n            \n\n            visible.setSelected(layer.isVisible());\n            visible.addActionListener(new ActionListener() {\n                    public void actionPerformed(ActionEvent e) {\n                        layer.setVisible(visible.isSelected());\n                        locked.setEnabled(layer.isVisible());\n                        label.setEnabled(layer.isVisible());\n                        if (layer == getActiveLayer() && !canBeActive(layer))\n                            if (AUTO_ADJUST_ACTIVE_LAYER) attemptAlternativeActiveLayer();\n                            \n                    }});\n\n            label.setEnabled(layer.isVisible());\n            \n            \n            if (layer instanceof Layer) {\n\n                exclusive = new JRadioButton();\n                exclusive.setName(\"exclusive\");\n                exclusive.setToolTipText(\"Quick-Edit\");\n                exclusive.setBorderPainted(false);\n                exclusive.setIcon(VueResources.getIcon(VUE.class, \"images/quickFocus_ov.png\"));\n                exclusive.setFocusable(false);\n                exclusive.setOpaque(false);\n                exclusive.addActionListener(new ActionListener() {\n                        public void actionPerformed(ActionEvent e) {\n                            exclusive.setBorderPainted(exclusive.isSelected());\n                            Row.this.setExclusive(exclusive.isSelected());\n                        }});\n            \n                //grab = new JButton(\"Grab\");\n                //grab.setFont(VueConstants.SmallFont);\n                grab = new JButton();\n                grab.setName(\"grab\");\n                grab.setToolTipText(\"Move selection to this layer\");\n                grab.setBorderPainted(false);\n                grab.setIcon(VueResources.getIcon(VUE.class, \"images/grab_ov.png\"));\n                grab.setFocusable(false); // FYI, no help on ignoring mouse-motion\n                grab.setOpaque(false);\n                \n\n//                     // todo: use icon-button version when ready to go -- may\n//                     // want to use a VueButton\n//                     grab = new JButton();\n//                     grab.setBorderPainted(false);\n//                     // todo: update when Melanie creates new icon for this\n//                     grab.setIcon(VueResources.getIcon(VUE.class, \"images/hand_open.png\"));\n//                     grab.putClientProperty(\"JButton.buttonType\", \"textured\");\n//                     grab.putClientProperty(\"JButton.sizeVariant\", \"tiny\");\n                \n                grab.addActionListener(new ActionListener() {\n                        public void actionPerformed(ActionEvent e) {\n                            if (VUE.getSelection().size() > 0) {\n                                grabFromSelection((Layer)layer);\n                                VUE.getUndoManager().mark(\"Move To Layer \" + Util.quote(layer.getLabel()));\n                            }\n                        }});\n            } else {\n                exclusive = null;\n                grab = null;\n            }\n\n            \n            final JLabel info = new JLabel()\n                //{ public Dimension getMinimumSize() { return GUI.ZeroSize; } }\n                ;\n            \n            if (layer.supportsChildren()) {\n                \n                // This might slow down undo of some large-set operations in large maps,\n                // such as grabs, as auto-reparenting will currently de-parent each\n                // child separately, issuing an event for each.  (All hierarchy events,\n                // however, are merged into a single one for undo/redo for each parent).\n                \n                // Note: depends on Layer having permitZombieEvent(e) return\n                // true, otherwise won't update correctly on undo.\n                final LWComponent.Listener countListener\n                    = new LWComponent.Listener() {\n                        public void LWCChanged(LWCEvent e) {\n                            //if (DEBUG.Enabled) Log.debug(\"UPDATING \" + Row.this + \" \" + e);\n                            String counts = \"\";\n                            final int nChild = layer.numChildren();\n                            final int allChildren = layer.getDescendentCount();\n                                \n                            if (nChild > 0)\n                                counts += nChild;\n                            if (allChildren != nChild)\n                                counts += \"/\" + allChildren;\n                            info.setText(counts);\n                            //if (DEBUG.Enabled) { Row.this.validate(); GUI.paintNow(Row.this); } // slower\n                            // above will usually cause a deadlock tho when dropping images and this UI is visible\n                            //if (DEBUG.Enabled) { Row.this.validate(); GUI.paintNow(info); } // faster\n                        }};\n                countListener.LWCChanged(null); // do the initial set\n                layer.addLWCListener(countListener, LWKey.ChildrenAdded, LWKey.ChildrenRemoved);\n            }\n\n\n//             activeIcon.setIcon(VueResources.getIcon(VUE.class, \"images/hand_open.png\"));\n//             // todo perf: only actually need instance of each of these for all rows:\n//             activeIcon.setDisabledIcon(new GUI.EmptyIcon(activeIcon.getIcon())); \n//             activeIcon.setBorder(GUI.makeSpace(4,0,0,0));\n\n            \n            //final JComponent label = new VueTextField(layer.getLabel());\n            // VueTextField impl not useful to us (also not used anywhere)\n            // -- we need an impl that works just like VueTextPane, except\n            // as a single line of text.\n            \n            //final JLabel info = new JLabel(\"(\" + layer.numChildren() + \" items)\");\n            \n            final GridBagConstraints c = new GridBagConstraints();\n            c.weighty = 1; // 1 has all expanding to fill vertical, 0 leaves all at min height\n            c.anchor = GridBagConstraints.WEST;\n            \n//             c.insets.right = 4;\n//             add(exclusive, c);\n\n            //add(Box.createHorizontalStrut(5), c);\n            c.insets.right = 0;\n            add(visible, c);\n            \n            info.setHorizontalAlignment(SwingConstants.RIGHT);\n\n            if (true) {\n\n                // this magic, setting min-size to zero on the info text to 0, and wrapping\n                // it in a container with the label, allows it fill left, shriking the\n                // edit label if need-be, but never expanding the size of the two\n                // components togehter -- that way, all label-edit + info-text groups\n                // in all rows will always have the same width, keeping everything\n                // in alignment\n                \n                info.setMinimumSize(GUI.ZeroSize);\n                //info.addMouseListener(RowMouseEnterExitTracker);\n                Box box = new Box(BoxLayout.X_AXIS);\n                //JPanel box = new JPanel();\n                label.setPreferredSize(null); // must remove this, or info gets squished to 0 width\n                //label.addMouseListener(RowMouseEnterExitTracker);\n                box.add(label);\n                //box.add(Box.createHorizontalGlue());\n                box.add(info);\n                if (DEBUG.BOXES) box.setBorder(new LineBorder(Color.red));\n                box.setPreferredSize(GUI.MaxSize);\n                //box.setPreferredSize(new Dimension(200, 30));\n                //box.setMaximumSize(new Dimension(200, 30)); // apparently no use\n                \n                c.weightx = 1;\n                c.fill = GridBagConstraints.HORIZONTAL;\n                c.insets.right = 4;\n                add(box, c);\n                c.insets.left = 0;\n                //c.insets.right = 0;\n                c.weightx = 0;\n                c.fill = GridBagConstraints.NONE;\n                \n            } else {\n\n                c.weightx = 1;\n                c.fill = GridBagConstraints.HORIZONTAL;\n                add(label, c);\n                c.fill = GridBagConstraints.NONE;\n                c.weightx = 0;\n                add(info, c);\n\n//                 add(Box.createHorizontalStrut(1));\n//                 add(label);\n            \n//                 //add(Box.createHorizontalGlue());\n            \n//                 add(Box.createHorizontalStrut(1));\n//                 //info.setBorder(new LineBorder(Color.red));\n//                 //info.setPreferredSize(new Dimension(70,Short.MAX_VALUE));\n//                 //info.setMinimumSize(new Dimension(60,0));\n//                 add(info);\n            }\n            \n            //add(Box.createHorizontalGlue(), c);\n\n            if (layer.hasFlag(INTERNAL)) {\n                add(locked, c);\n                preview = null;\n                return;\n            }\n            \n            preview = new Preview(layer);\n            //preview.setMinimumSize(new Dimension(128, 64));\n            \n            //preview.setPreferredSize(GUI.MaxSize);\n            //preview.setSize(256,128);\n            //preview.setPreferredSize(new Dimension(256, Short.MAX_VALUE));\n            //preview.setMaximumSize(GUI.MaxSize);\n\n            if (false && DEBUG.Enabled)\n                layer.addLWCListener(new LWComponent.Listener() {\n                        public void LWCChanged(LWCEvent e) {\n                            // this is heavy duty!  Would be nice if UserActionCompleted\n                            // came through the layer, and we could listen for that,\n                            // but it comes through the map\n                            preview.repaint();\n                        }});\n            \n            \n\n            //add(Box.createHorizontalGlue());\n            \n            if (preview != null) {\n                c.weightx = 1;\n                c.fill = GridBagConstraints.BOTH;\n                //c.fill = GridBagConstraints.VERTICAL;\n                //add(Box.createHorizontalStrut(7));\n                add(preview, c);\n                c.weightx = 0;\n                c.fill = GridBagConstraints.NONE;\n                \n            }\n\n            if (true) {\n                JPanel fixed = new JPanel(new BorderLayout());\n                if (DEBUG.BOXES) fixed.setBorder(new LineBorder(Color.red, 1));\n                fixed.setOpaque(false);\n                fixed.setMinimumSize(new Dimension(70, 0));\n                \n                fixed.add(exclusive, BorderLayout.WEST);\n                fixed.add(grab, BorderLayout.CENTER);\n                fixed.add(locked, BorderLayout.EAST);\n                \n                c.fill = GridBagConstraints.BOTH;\n                add(fixed, c);\n            } else {\n                // old-style before we added hiding these on mouse roll-off\n                //add(activeIcon, c);\n                add(grab, c);\n                add(locked, c);\n            }\n\n            // set initial visibility states by simulating a mouse roll-off\n            rollOff(); \n\n        }","commit_id":"98a1b7d1aafc4a83dd28079b689e4a2d9955ecef","url":"https://github.com/VUE/VUE"},{"original_method":"private void enableForSelection(LWSelection s) {\n\n        final Collection<LWContainer> parents = s.getParents();\n        //final LWContainer parent0 = parents.isEmpty() ? null : parents.iterator().next();\n\n        boolean disable =\n            s.size() < 1\n            || s.only() instanceof Layer;\n\n        // todo: to be more precise, could always accumme related parets\n\n        if (!disable) {\n            boolean canExtract = false;\n            for (LWContainer parent : parents) {\n                if (isExtractableParent(parent)) {\n                    canExtract = true;\n                    break;\n                }\n            }\n            disable = !canExtract;\n        }\n        \n        for (Row row : mRows) {\n            if (row.grab == null)\n                continue;\n            if (disable)\n                row.grab.setEnabled(false);\n            else if (parents.size() == 1 && parents.contains(row.layer))\n                row.grab.setEnabled(false);\n            else \n                row.grab.setEnabled(true);\n        }\n    }","id":55494,"modified_method":"private void updateGrabEnabledForSelection(LWSelection s) {\n\n        final Collection<LWContainer> parents = s.getParents();\n        //final LWContainer parent0 = parents.isEmpty() ? null : parents.iterator().next();\n\n        boolean disable =\n            s.size() < 1\n            || s.only() instanceof Layer;\n\n        // todo: to be more precise, could always accumme related parets\n\n        if (!disable) {\n            boolean canExtract = false;\n            for (LWContainer parent : parents) {\n                if (isExtractableParent(parent)) {\n                    canExtract = true;\n                    break;\n                }\n            }\n            disable = !canExtract;\n        }\n        \n        for (Row row : mRows) {\n            if (row.grab == null)\n                continue;\n            if (disable) {\n                row.grab.setEnabled(false);\n            } else if (parents.size() == 1 && parents.contains(row.layer)) {\n                Log.debug(\"DISABLE GRAB IN \" + row);\n                row.grab.setEnabled(false);\n            } else  {\n                Log.debug(\" ENABLE GRAB IN \" + row);\n                row.grab.setEnabled(true);\n            }\n        }\n    }","commit_id":"98a1b7d1aafc4a83dd28079b689e4a2d9955ecef","url":"https://github.com/VUE/VUE"},{"original_method":"public void LWCChanged(LWCEvent e) {\n\n        // ignore events from children: just want hierarchy events directly from the map\n        // (as we're only interested in changes to map layers)\n        \n        if (e.key == LWKey.UserActionCompleted) {\n            repaint(); // repaint the previews\n        }\n        else if (mShowAll.isSelected() || e.getSource() == mMap) {\n            if (e.getName().startsWith(\"hier.\"))\n                loadLayers(mMap);\n        }\n    }","id":55495,"modified_method":"public void LWCChanged(LWCEvent e) {\n\n        // ignore events from children: just want hierarchy events directly from the map\n        // (as we're only interested in changes to map layers)\n        \n        if (e.key == LWKey.UserActionCompleted) {\n            if (layerReparentingSeen) {\n                VUE.getSelection().resetStatistics();\n                updateGrabEnabledForSelection(VUE.getSelection());\n                layerReparentingSeen = false;\n            }\n            repaint(); // repaint the previews\n        }\n        else if (mShowAll.isSelected() || e.getSource() == mMap) {\n            if (e.getName().startsWith(\"hier.\")) {\n                loadLayers(mMap);\n            }\n        } else if (e.getSource() instanceof Layer && e.getName().startsWith(\"hier.\")) {\n            // tho we only really need to track this for changes to any components\n            // that are in the selection, we just track it for everything right\n            // now -- we especially need this to handle updating grab enabled\n            // states when undoing grabs\n            layerReparentingSeen = true;\n        }\n    }","commit_id":"98a1b7d1aafc4a83dd28079b689e4a2d9955ecef","url":"https://github.com/VUE/VUE"},{"original_method":"void rollOff() {\n            if (grab != null)\n                grab.setVisible(false);\n            if (locked != null && !locked.isSelected())\n                locked.setVisible(false);\n            // todo: handle exlusive button (will work same as locked: hide if unselected)\n        }","id":55496,"modified_method":"void rollOff() {\n            if (grab != null)\n                grab.setVisible(false);\n            if (locked != null && !locked.isSelected())\n                locked.setVisible(false);\n            if (exclusive != null && !exclusive.isSelected())\n                exclusive.setVisible(false);\n        }","commit_id":"98a1b7d1aafc4a83dd28079b689e4a2d9955ecef","url":"https://github.com/VUE/VUE"},{"original_method":"private void loadLayers(final LWMap map) {\n\n        mRows.clear();\n        \n        if (map != null) {\n            \n            // handle in reverse order (top layer on top)\n            for (LWComponent layer : reverse(map.getChildren())) {\n                mRows.add(produceRow(layer));\n                if (mShowAll.isSelected()) {\n                    //for (LWComponent c : reverse(layer.getChildren()))\n                    for (LWComponent c : reverse(layer.getAllDescendents(ChildKind.PROPER, new ArrayList(), Order.DEPTH)))\n                        mRows.add(produceRow(c));\n                }\n            }\n\n            updateLayerActionEnabled(map.getActiveLayer());\n        } else {\n            updateLayerActionEnabled(null);\n        }\n        \n        if (!isDragUnderway) {\n            enableForSelection(VUE.getSelection());\n            indicateActiveLayers(null);\n        }\n        \n        layoutRows();\n    }","id":55497,"modified_method":"private void loadLayers(final LWMap map) {\n\n        mRows.clear();\n        \n        if (map != null) {\n            \n            // handle in reverse order (top layer on top)\n            for (LWComponent layer : reverse(map.getChildren())) {\n                mRows.add(produceRow(layer));\n                if (mShowAll.isSelected()) {\n                    //for (LWComponent c : reverse(layer.getChildren()))\n                    for (LWComponent c : reverse(layer.getAllDescendents(ChildKind.PROPER, new ArrayList(), Order.DEPTH)))\n                        mRows.add(produceRow(c));\n                }\n            }\n\n            updateLayerActionEnabled(map.getActiveLayer());\n        } else {\n            updateLayerActionEnabled(null);\n        }\n        \n        if (!isDragUnderway) {\n            updateGrabEnabledForSelection(VUE.getSelection());\n            indicateActiveLayers(null);\n        }\n        \n        layoutRows();\n    }","commit_id":"98a1b7d1aafc4a83dd28079b689e4a2d9955ecef","url":"https://github.com/VUE/VUE"},{"original_method":"void rollOn() {\n            if (grab != null) {\n                grab.setVisible(true);\n                //grab.setFocusable(false); // NO HELP ON IGNORING MOUSE-MOTION\n            }\n            if (locked != null)\n                locked.setVisible(true);\n            // todo: handle exlusive button\n\n        }","id":55498,"modified_method":"void rollOn() {\n            if (grab != null) {\n                grab.setVisible(true);\n                //grab.setFocusable(false); // NO HELP ON IGNORING MOUSE-MOTION\n            }\n            if (locked != null)\n                locked.setVisible(true);\n            if (exclusive != null)\n                exclusive.setVisible(true);\n\n        }","commit_id":"98a1b7d1aafc4a83dd28079b689e4a2d9955ecef","url":"https://github.com/VUE/VUE"},{"original_method":"private void setExclusive(final boolean excluding) {\n\n            Row exclusiveRow = fetchExclusiveRow();\n\n            //Log.debug(\"SET-EXCLUSIVE \" + this + \" = \" + excluding + \"; nowExclusive=\" + exclusiveRow);\n\n            if (excluding && exclusiveRow == this)\n                return;\n\n            final boolean wasExcluding = exclusiveRow != null;\n            final Row lastExcluded = exclusiveRow;\n            exclusiveRow = this;\n\n            if (wasExcluding && excluding) {\n                // disable old row\n                lastExcluded.label.setEnabled(false);\n                lastExcluded.layer.setHidden(LAYER_EXCLUDED);\n                lastExcluded.exclusive.setSelected(false);\n            }\n\n            if (excluding) {\n                if (!wasExcluding)\n                    setExclusiveMode(true, this);\n                storeExclusiveRow(this);\n                if (layer instanceof Layer)\n                    setActiveLayer((Layer) layer);\n            } else if (exclusiveRow == this) {\n                setExclusiveMode(false, null);\n                return;\n            }\n\n            exclusive.setSelected(excluding);\n            label.setEnabled(true);\n                        \n            layer.clearHidden(DEFAULT);\n            layer.clearHidden(LAYER_EXCLUDED);\n            layer.setLocked(false);\n\n            indicateActiveLayers(null);\n            //tufts.vue.ZoomTool.setZoomFit();\n        }","id":55499,"modified_method":"private void setExclusive(final boolean excluding) {\n\n            Row exclusiveRow = fetchExclusiveRow();\n\n            //Log.debug(\"SET-EXCLUSIVE \" + this + \" = \" + excluding + \"; nowExclusive=\" + exclusiveRow);\n\n            if (excluding && exclusiveRow == this)\n                return;\n\n            final boolean wasExcluding = exclusiveRow != null;\n            final Row lastExcluded = exclusiveRow;\n            exclusiveRow = this;\n\n            if (wasExcluding && excluding) {\n                // disable old row\n                lastExcluded.label.setEnabled(false);\n                lastExcluded.layer.setHidden(LAYER_EXCLUDED);\n                lastExcluded.exclusive.setVisible(false); // simulate rollOff\n                lastExcluded.exclusive.setSelected(false);\n                lastExcluded.exclusive.setBorderPainted(false); // clear sticky-state border\n            }\n\n            if (excluding) {\n                if (!wasExcluding)\n                    setExclusiveMode(true, this);\n                storeExclusiveRow(this);\n                if (layer instanceof Layer)\n                    setActiveLayer((Layer) layer);\n            } else if (exclusiveRow == this) {\n                setExclusiveMode(false, null);\n                return;\n            }\n\n            exclusive.setSelected(excluding);\n            label.setEnabled(true);\n                        \n            layer.clearHidden(DEFAULT);\n            layer.clearHidden(LAYER_EXCLUDED);\n            layer.setLocked(false);\n\n            indicateActiveLayers(null);\n            //tufts.vue.ZoomTool.setZoomFit();\n        }","commit_id":"98a1b7d1aafc4a83dd28079b689e4a2d9955ecef","url":"https://github.com/VUE/VUE"},{"original_method":"public void mousePressed(MouseEvent e) {\n\n            Log.debug(e);\n            \n            if (layer instanceof Layer) {\n// //                 if (e.isShiftDown())\n// //                     mSelection.toggle(layer);\n// //                 else\n//                     mSelection.setTo(layer);\n                if (inExclusiveMode())\n                    setExclusive(true);\n                else if (!AUTO_ADJUST_ACTIVE_LAYER || layer.isVisible()) \n                    setActiveLayer((Layer) layer, UPDATE);\n//                 if (VUE.getSelection().isEmpty() || VUE.getSelection().only() instanceof Layer)\n//                     VUE.getSelection().setTo(layer);\n            } else {\n                // this case for debug/test only: we shouldn't normally\n                // see regular objects a the top level of the map anymore\n                VUE.getSelection().setTo(layer);\n            }\n            //LayersUI.this.requestFocus();\n            isDragUnderway = false;\n            mDragRow = null;\n            didReorder = false;\n        }","id":55500,"modified_method":"public void mousePressed(MouseEvent e) {\n\n            Log.debug(e);\n            \n            if (layer instanceof Layer) {\n// //                 if (e.isShiftDown())\n// //                     mSelection.toggle(layer);\n// //                 else\n//                     mSelection.setTo(layer);\n                \n//                 if (inExclusiveMode()) // exlusive mode is no longer globally modal\n//                     setExclusive(true);\n//                 else\n                    if (!AUTO_ADJUST_ACTIVE_LAYER || layer.isVisible()) \n                    setActiveLayer((Layer) layer, UPDATE);\n//                 if (VUE.getSelection().isEmpty() || VUE.getSelection().only() instanceof Layer)\n//                     VUE.getSelection().setTo(layer);\n            } else {\n                // this case for debug/test only: we shouldn't normally\n                // see regular objects a the top level of the map anymore\n                VUE.getSelection().setTo(layer);\n            }\n            //LayersUI.this.requestFocus();\n            isDragUnderway = false;\n            mDragRow = null;\n            didReorder = false;\n        }","commit_id":"98a1b7d1aafc4a83dd28079b689e4a2d9955ecef","url":"https://github.com/VUE/VUE"},{"original_method":"protected Color getBackground(final boolean isSelected, final JCheckBox checkbox) {\n      return isSelected ? getSelectionBackground() : getBackground();\n    }","id":55501,"modified_method":"protected Color getBackground(final boolean isSelected) {\n      return isSelected ? getSelectionBackground() : getBackground();\n    }","commit_id":"421c2ad2e464f3b73da7bcc8d395e2f55140c7d4","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Override\n    public Component getListCellRendererComponent(JList list, Object value, int index, boolean isSelected, boolean cellHasFocus) {\n      JCheckBox checkbox = (JCheckBox)value;\n      if (!UIUtil.isUnderNimbusLookAndFeel()) {\n        checkbox.setBackground(getBackground(isSelected, checkbox));\n        checkbox.setForeground(getForeground(isSelected, checkbox));\n      }\n      checkbox.setEnabled(isEnabled());\n      checkbox.setFont(getFont(checkbox));\n      checkbox.setFocusPainted(false);\n      checkbox.setBorderPainted(true);\n      checkbox.setBorder(isSelected ? mySelectedBorder : myBorder);\n      adjustRendering(checkbox, isSelected, cellHasFocus);\n      return checkbox;\n    }","id":55502,"modified_method":"@Override\n    public Component getListCellRendererComponent(JList list, Object value, int index, boolean isSelected, boolean cellHasFocus) {\n      JCheckBox checkbox = (JCheckBox)value;\n\n      Color textColor = getForeground(isSelected);\n      Color backgroundColor = getBackground(isSelected);\n      Font font = getFont();\n\n      boolean shouldAdjustColors = !UIUtil.isUnderNimbusLookAndFeel();\n\n      if (shouldAdjustColors) {\n        checkbox.setBackground(backgroundColor);\n        checkbox.setForeground(textColor);\n      }\n\n      checkbox.setEnabled(isEnabled());\n      checkbox.setFont(font);\n      checkbox.setFocusPainted(false);\n\n      String auxText = getSecondaryText(index);\n\n      JComponent rootComponent;\n      if (auxText != null) {\n        JPanel panel = new JPanel(new BorderLayout());\n\n        checkbox.setBorderPainted(false);\n        panel.add(checkbox, BorderLayout.LINE_START);\n\n        JLabel infoLabel = new JLabel();\n        infoLabel.setText(auxText);\n        infoLabel.setHorizontalAlignment(SwingConstants.RIGHT);\n        infoLabel.setFont(font);\n        panel.add(infoLabel, BorderLayout.CENTER);\n\n        if (shouldAdjustColors) {\n          panel.setBackground(backgroundColor);\n          infoLabel.setForeground(isSelected ? textColor : JBColor.GRAY);\n          infoLabel.setBackground(backgroundColor);\n        }\n\n        rootComponent = panel;\n      }\n      else {\n        checkbox.setBorderPainted(true);\n        rootComponent = checkbox;\n      }\n\n      rootComponent.setBorder(isSelected ? mySelectedBorder : myBorder);\n\n      adjustRendering(checkbox, isSelected, cellHasFocus);\n      return rootComponent;\n    }","commit_id":"421c2ad2e464f3b73da7bcc8d395e2f55140c7d4","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"protected Color getForeground(final boolean isSelected, final JCheckBox checkbox) {\n    return isSelected ? getSelectionForeground() : getForeground();\n  }","id":55503,"modified_method":"protected Color getForeground(final boolean isSelected) {\n    return isSelected ? getSelectionForeground() : getForeground();\n  }","commit_id":"421c2ad2e464f3b73da7bcc8d395e2f55140c7d4","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Override\n\tprotected void doProcessAction(\n\t\t\tActionRequest actionRequest, ActionResponse actionResponse)\n\t\tthrows Exception {\n\n\t\tlong groupId = ParamUtil.getLong(actionRequest, \"groupId\");\n\t\tlong recordSetId = ParamUtil.getLong(actionRequest, \"recordSetId\");\n\n\t\tDDLRecordSet recordSet = _ddlRecordSetService.getRecordSet(recordSetId);\n\n\t\tvalidateCaptcha(actionRequest, recordSet);\n\n\t\tDDMForm ddmForm = getDDMForm(recordSet);\n\n\t\tDDMFormValues ddmFormValues = _ddmFormValuesFactory.create(\n\t\t\tactionRequest, ddmForm);\n\n\t\tServiceContext serviceContext = ServiceContextFactory.getInstance(\n\t\t\tDDLRecord.class.getName(), actionRequest);\n\n\t\tDDLRecord ddlRecord = _ddlRecordService.addRecord(\n\t\t\tgroupId, recordSetId, DDLRecordConstants.DISPLAY_INDEX_DEFAULT,\n\t\t\tddmFormValues, serviceContext);\n\n\t\tboolean emailNotificationEnabled =\n\t\t\tDDLFormEmailNotificationUtil.isEmailNotificationEnabled(recordSet);\n\n\t\tif (emailNotificationEnabled) {\n\t\t\tDDLFormEmailNotificationSenderUtil.sendEmailNotification(\n\t\t\t\tactionRequest, ddlRecord);\n\t\t}\n\n\t\tString redirectURL = GetterUtil.getString(\n\t\t\trecordSet.getSettingsProperty(\"redirectURL\", StringPool.BLANK));\n\n\t\tif (SessionErrors.isEmpty(actionRequest) &&\n\t\t\tValidator.isNotNull(redirectURL)) {\n\n\t\t\tString portletId = PortalUtil.getPortletId(actionRequest);\n\n\t\t\tSessionMessages.add(\n\t\t\t\tactionRequest, portletId,\n\t\t\t\tSessionMessages.KEY_SUFFIX_HIDE_DEFAULT_SUCCESS_MESSAGE);\n\n\t\t\tactionResponse.sendRedirect(redirectURL);\n\t\t}\n\t}","id":55504,"modified_method":"@Override\n\tprotected void doProcessAction(\n\t\t\tActionRequest actionRequest, ActionResponse actionResponse)\n\t\tthrows Exception {\n\n\t\tlong groupId = ParamUtil.getLong(actionRequest, \"groupId\");\n\t\tlong recordSetId = ParamUtil.getLong(actionRequest, \"recordSetId\");\n\n\t\tDDLRecordSet recordSet = _ddlRecordSetService.getRecordSet(recordSetId);\n\n\t\tvalidateCaptcha(actionRequest, recordSet);\n\n\t\tDDMForm ddmForm = getDDMForm(recordSet);\n\n\t\tDDMFormValues ddmFormValues = _ddmFormValuesFactory.create(\n\t\t\tactionRequest, ddmForm);\n\n\t\tServiceContext serviceContext = ServiceContextFactory.getInstance(\n\t\t\tDDLRecord.class.getName(), actionRequest);\n\n\t\tDDLRecord ddlRecord = _ddlRecordService.addRecord(\n\t\t\tgroupId, recordSetId, DDLRecordConstants.DISPLAY_INDEX_DEFAULT,\n\t\t\tddmFormValues, serviceContext);\n\n\t\tboolean emailNotificationEnabled =\n\t\t\tDDLFormEmailNotificationUtil.isEmailNotificationEnabled(recordSet);\n\n\t\tif (emailNotificationEnabled) {\n\t\t\t_ddlFormEmailNotificationSender.sendEmailNotification(\n\t\t\t\tactionRequest, ddlRecord);\n\t\t}\n\n\t\tString redirectURL = recordSet.getSettingsProperty(\n\t\t\t\"redirectURL\", StringPool.BLANK);\n\n\t\tif (SessionErrors.isEmpty(actionRequest) &&\n\t\t\tValidator.isNotNull(redirectURL)) {\n\n\t\t\tString portletId = PortalUtil.getPortletId(actionRequest);\n\n\t\t\tSessionMessages.add(\n\t\t\t\tactionRequest, portletId,\n\t\t\t\tSessionMessages.KEY_SUFFIX_HIDE_DEFAULT_SUCCESS_MESSAGE);\n\n\t\t\tactionResponse.sendRedirect(redirectURL);\n\t\t}\n\t}","commit_id":"838aff450448914e7695231a7e4acf28f09877b3","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void sendEmailNotification(\n\t\tPortletRequest portletRequest, DDLRecord record) {\n\n\t\ttry {\n\t\t\tDDLRecordSet recordSet = record.getRecordSet();\n\n\t\t\tString emailFromAddress =\n\t\t\t\tDDLFormEmailNotificationUtil.getEmailFromAddress(recordSet);\n\t\t\tString emailFromName =\n\t\t\t\tDDLFormEmailNotificationUtil.getEmailFromName(recordSet);\n\t\t\tString emailToAddress =\n\t\t\t\tDDLFormEmailNotificationUtil.getEmailToAddress(recordSet);\n\t\t\tString subject = DDLFormEmailNotificationUtil.getEmailSubject(\n\t\t\t\trecordSet);\n\n\t\t\tInternetAddress fromInternetAddress = new InternetAddress(\n\t\t\t\temailFromAddress, emailFromName);\n\n\t\t\tString body = getEmailBody(portletRequest, recordSet, record);\n\n\t\t\tMailMessage mailMessage = new MailMessage(\n\t\t\t\tfromInternetAddress, subject, body, true);\n\n\t\t\tInternetAddress[] toAddresses = InternetAddress.parse(\n\t\t\t\temailToAddress);\n\n\t\t\tmailMessage.setTo(toAddresses);\n\n\t\t\tMailServiceUtil.sendEmail(mailMessage);\n\t\t}\n\t\tcatch (Exception e) {\n\t\t\t_log.error(\"The form email could not be sent\", e);\n\t\t}\n\t}","id":55505,"modified_method":"public void sendEmailNotification(\n\t\tPortletRequest portletRequest, DDLRecord record) {\n\n\t\ttry {\n\t\t\tMailMessage mailMessage = createMailMessage(portletRequest, record);\n\n\t\t\t_mailService.sendEmail(mailMessage);\n\t\t}\n\t\tcatch (Exception e) {\n\t\t\t_log.error(\"The form email could not be sent\", e);\n\t\t}\n\t}","commit_id":"838aff450448914e7695231a7e4acf28f09877b3","url":"https://github.com/liferay/liferay-portal"},{"original_method":"protected Map<String, Serializable> getContext(\n\t\t\tPortletRequest portletRequest, DDLRecordSet recordSet,\n\t\t\tDDLRecord record)\n\t\tthrows PortalException {\n\n\t\tMap<String, Serializable> context = new HashMap<>();\n\n\t\tDDMStructure ddmStructure = recordSet.getDDMStructure();\n\n\t\tString emailFromAddress =\n\t\t\tDDLFormEmailNotificationUtil.getEmailFromAddress(recordSet);\n\t\tString emailFromName = DDLFormEmailNotificationUtil.getEmailFromName(\n\t\t\trecordSet);\n\n\t\tLocale locale = ddmStructure.getDDMForm().getDefaultLocale();\n\n\t\tThemeDisplay themeDisplay = (ThemeDisplay)portletRequest.getAttribute(\n\t\t\tWebKeys.THEME_DISPLAY);\n\n\t\tGroup siteGroup = themeDisplay.getSiteGroup();\n\n\t\tString portalUrl = PortalUtil.getPortalURL(portletRequest);\n\n\t\tcontext.put(\"formName\", recordSet.getName(locale));\n\t\tcontext.put(\"siteName\", siteGroup.getName(locale));\n\t\tcontext.put(\"formFieldsValues\", getSerializedDDMFormValues(record));\n\t\tcontext.put(\"fromName\", emailFromName);\n\t\tcontext.put(\"fromAddress\", emailFromAddress);\n\t\tcontext.put(\"portalUrl\", portalUrl);\n\n\t\treturn context;\n\t}","id":55506,"modified_method":"protected Map<String, Serializable> getContext(\n\t\t\tPortletRequest portletRequest, DDLRecordSet recordSet,\n\t\t\tDDLRecord record)\n\t\tthrows PortalException {\n\n\t\tMap<String, Serializable> context = new HashMap<>();\n\n\t\tLocale locale = getDDMFormDefaultLocale(recordSet.getDDMStructure());\n\n\t\tcontext.put(\"formName\", recordSet.getName(locale));\n\n\t\tThemeDisplay themeDisplay = (ThemeDisplay)portletRequest.getAttribute(\n\t\t\tWebKeys.THEME_DISPLAY);\n\n\t\tGroup siteGroup = themeDisplay.getSiteGroup();\n\n\t\tcontext.put(\"siteName\", siteGroup.getName(locale));\n\t\tcontext.put(\"formFieldsValues\", getSerializedDDMFormValues(record));\n\t\tcontext.put(\n\t\t\t\"fromName\",\n\t\t\tDDLFormEmailNotificationUtil.getEmailFromName(recordSet));\n\t\tcontext.put(\n\t\t\t\"fromAddress\",\n\t\t\tDDLFormEmailNotificationUtil.getEmailFromAddress(recordSet));\n\t\tcontext.put(\"portalUrl\", PortalUtil.getPortalURL(portletRequest));\n\n\t\treturn context;\n\t}","commit_id":"838aff450448914e7695231a7e4acf28f09877b3","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public static String getEmailFromName(DDLRecordSet recordSet) {\n\t\tString defaultEmailFromName = PrefsPropsUtil.getString(\n\t\t\trecordSet.getCompanyId(), PropsKeys.ADMIN_EMAIL_FROM_NAME);\n\n\t\treturn GetterUtil.getString(\n\t\t\trecordSet.getSettingsProperty(\n\t\t\t\t\"emailFromName\", defaultEmailFromName));\n\t}","id":55507,"modified_method":"public static String getEmailFromName(DDLRecordSet recordSet) {\n\t\tString defaultEmailFromName = PrefsPropsUtil.getString(\n\t\t\trecordSet.getCompanyId(), PropsKeys.ADMIN_EMAIL_FROM_NAME);\n\n\t\treturn recordSet.getSettingsProperty(\n\t\t\t\"emailFromName\", defaultEmailFromName);\n\t}","commit_id":"838aff450448914e7695231a7e4acf28f09877b3","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public static String getEmailSubject(DDLRecordSet recordSet)\n\t\tthrows PortalException {\n\n\t\tDDMStructure ddmStructure = recordSet.getDDMStructure();\n\n\t\tDDMForm ddmForm = ddmStructure.getDDMForm();\n\n\t\tLocale locale = ddmForm.getDefaultLocale();\n\n\t\tResourceBundle resourceBundle = ResourceBundleUtil.getBundle(\n\t\t\t\"content.Language\", locale, DDLFormEmailNotificationUtil.class);\n\n\t\tString defaultEmailSubject = LanguageUtil.format(\n\t\t\tresourceBundle, \"new-x-form-submitted\", recordSet.getName(locale),\n\t\t\tfalse);\n\n\t\treturn GetterUtil.getString(\n\t\t\trecordSet.getSettingsProperty(\"emailSubject\", defaultEmailSubject));\n\t}","id":55508,"modified_method":"public static String getEmailSubject(DDLRecordSet recordSet)\n\t\tthrows PortalException {\n\n\t\tDDMStructure ddmStructure = recordSet.getDDMStructure();\n\n\t\tDDMForm ddmForm = ddmStructure.getDDMForm();\n\n\t\tLocale locale = ddmForm.getDefaultLocale();\n\n\t\tResourceBundle resourceBundle = ResourceBundleUtil.getBundle(\n\t\t\t\"content.Language\", locale, DDLFormEmailNotificationUtil.class);\n\n\t\tString defaultEmailSubject = LanguageUtil.format(\n\t\t\tresourceBundle, \"new-x-form-submitted\", recordSet.getName(locale),\n\t\t\tfalse);\n\n\t\treturn recordSet.getSettingsProperty(\n\t\t\t\"emailSubject\", defaultEmailSubject);\n\t}","commit_id":"838aff450448914e7695231a7e4acf28f09877b3","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public static String getEmailToAddress(DDLRecordSet recordSet) {\n\t\tString defaultEmailToAddress = StringPool.BLANK;\n\n\t\tUser user = UserLocalServiceUtil.fetchUser(recordSet.getUserId());\n\n\t\tif (user != null) {\n\t\t\tdefaultEmailToAddress = user.getEmailAddress();\n\t\t}\n\n\t\treturn GetterUtil.getString(\n\t\t\trecordSet.getSettingsProperty(\n\t\t\t\t\"emailToAddress\", defaultEmailToAddress));\n\t}","id":55509,"modified_method":"public static String getEmailToAddress(DDLRecordSet recordSet) {\n\t\tString defaultEmailToAddress = StringPool.BLANK;\n\n\t\tUser user = UserLocalServiceUtil.fetchUser(recordSet.getUserId());\n\n\t\tif (user != null) {\n\t\t\tdefaultEmailToAddress = user.getEmailAddress();\n\t\t}\n\n\t\treturn recordSet.getSettingsProperty(\n\t\t\t\"emailToAddress\", defaultEmailToAddress);\n\t}","commit_id":"838aff450448914e7695231a7e4acf28f09877b3","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public static String getEmailFromAddress(DDLRecordSet recordSet) {\n\t\tString defaultEmailFromAddress = PrefsPropsUtil.getString(\n\t\t\trecordSet.getCompanyId(), PropsKeys.ADMIN_EMAIL_FROM_ADDRESS);\n\n\t\treturn GetterUtil.getString(\n\t\t\trecordSet.getSettingsProperty(\n\t\t\t\t\"emailFromAddress\", defaultEmailFromAddress));\n\t}","id":55510,"modified_method":"public static String getEmailFromAddress(DDLRecordSet recordSet) {\n\t\tString defaultEmailFromAddress = PrefsPropsUtil.getString(\n\t\t\trecordSet.getCompanyId(), PropsKeys.ADMIN_EMAIL_FROM_ADDRESS);\n\n\t\treturn recordSet.getSettingsProperty(\n\t\t\t\"emailFromAddress\", defaultEmailFromAddress);\n\t}","commit_id":"838aff450448914e7695231a7e4acf28f09877b3","url":"https://github.com/liferay/liferay-portal"},{"original_method":"protected void validateSettingsProperties(\n\t\t\tUnicodeProperties settingsProperties)\n\t\tthrows PortalException {\n\n\t\tString redirectURL = settingsProperties.getProperty(\"redirectURL\");\n\n\t\tif (Validator.isNotNull(redirectURL) && !Validator.isUrl(redirectURL)) {\n\t\t\tthrow new RecordSetSettingsException(\n\t\t\t\t\"The property \\\"redirectURL\\\" is not a URL\");\n\t\t}\n\n\t\tboolean sendEmailNotification = GetterUtil.getBoolean(\n\t\t\tsettingsProperties.getProperty(\"sendEmailNotification\"));\n\n\t\tif (sendEmailNotification) {\n\t\t\tString emailFromAddress = GetterUtil.getString(\n\t\t\t\tsettingsProperties.getProperty(\"emailFromAddress\"));\n\t\t\tString emailFromName = GetterUtil.getString(\n\t\t\t\tsettingsProperties.getProperty(\"emailFromName\"));\n\t\t\tString emailToAddress = GetterUtil.getString(\n\t\t\t\tsettingsProperties.getProperty(\"emailToAddress\"));\n\n\t\t\tif (Validator.isNull(emailFromName)) {\n\t\t\t\tthrow new RecordSetSettingsException(\n\t\t\t\t\t\"The property \\\"emailFromName\\\" is empty\");\n\t\t\t}\n\n\t\t\tif (!Validator.isEmailAddress(emailFromAddress)) {\n\t\t\t\tthrow new RecordSetSettingsException(\n\t\t\t\t\t\"The property \\\"emailFromAddress\\\" is not an email\");\n\t\t\t}\n\n\t\t\tif (!Validator.isEmailAddress(emailToAddress)) {\n\t\t\t\tthrow new RecordSetSettingsException(\n\t\t\t\t\t\"The property \\\"emailToAddress\\\" is not an email\");\n\t\t\t}\n\nString requireCaptcha = settingsProperties.getProperty(\n\t\t\t\"requireCaptcha\");\n\n\t\tif (!Validator.isBoolean(requireCaptcha)) {\n\t\t\tthrow new RecordSetSettingsException(\n\t\t\t\t\"The property \\\"requireCaptcha\\\" is not a boolean\");\n\t\t}\n\n\t\t}\n\t}","id":55511,"modified_method":"protected void validateSettingsProperties(\n\t\t\tUnicodeProperties settingsProperties)\n\t\tthrows PortalException {\n\n\t\tString redirectURL = settingsProperties.getProperty(\"redirectURL\");\n\n\t\tif (Validator.isNotNull(redirectURL) && !Validator.isUrl(redirectURL)) {\n\t\t\tthrow new RecordSetSettingsException(\n\t\t\t\t\"The property \\\"redirectURL\\\" is not a URL\");\n\t\t}\n\n\t\tString requireCaptcha = settingsProperties.getProperty(\n\t\t\t\"requireCaptcha\");\n\n\t\tif (Validator.isNotNull(requireCaptcha) &&\n\t\t\t!Validator.isBoolean(requireCaptcha)) {\n\n\t\t\tthrow new RecordSetSettingsException(\n\t\t\t\t\"The property \\\"requireCaptcha\\\" is not a boolean\");\n\t\t}\n\n\t\tboolean sendEmailNotification = GetterUtil.getBoolean(\n\t\t\tsettingsProperties.getProperty(\"sendEmailNotification\"));\n\n\t\tif (sendEmailNotification) {\n\t\t\tString emailFromAddress = settingsProperties.getProperty(\n\t\t\t\t\"emailFromAddress\");\n\n\t\t\tif (!Validator.isEmailAddress(emailFromAddress)) {\n\t\t\t\tthrow new RecordSetSettingsException(\n\t\t\t\t\t\"The property \\\"emailFromAddress\\\" is not an email\");\n\t\t\t}\n\n\t\t\tString emailFromName = settingsProperties.getProperty(\n\t\t\t\t\"emailFromName\");\n\n\t\t\tif (Validator.isNull(emailFromName)) {\n\t\t\t\tthrow new RecordSetSettingsException(\n\t\t\t\t\t\"The property \\\"emailFromName\\\" is empty\");\n\t\t\t}\n\n\t\t\tString emailToAddress = settingsProperties.getProperty(\n\t\t\t\t\"emailToAddresses\");\n\n\t\t\tif (!Validator.isEmailAddress(emailToAddress)) {\n\t\t\t\tthrow new RecordSetSettingsException(\n\t\t\t\t\t\"The property \\\"emailToAddress\\\" is not an email\");\n\t\t\t}\n\t\t}\n\t}","commit_id":"838aff450448914e7695231a7e4acf28f09877b3","url":"https://github.com/liferay/liferay-portal"},{"original_method":"protected void updateRecordSetSettings(ActionRequest actionRequest)\n\t\tthrows PortalException {\n\n\t\tlong recordSetId = ParamUtil.getLong(actionRequest, \"recordSetId\");\n\n\t\tUnicodeProperties settingsProperties = new UnicodeProperties(true);\n\n\t\tupdateRecordSetRedirectURLSettings(actionRequest, settingsProperties);\n\t\tupdateRecordSetEmailNotificationSettings(\n\t\t\tactionRequest, settingsProperties);\n\n\t\tboolean requireCaptcha = ParamUtil.getBoolean(\n\t\t\tactionRequest, \"requireCaptcha\");\n\n\t\tsettingsProperties.setProperty(\n\t\t\t\"requireCaptcha\", String.valueOf(requireCaptcha));\n\n\t\t_ddlRecordSetService.updateRecordSet(\n\t\t\trecordSetId, settingsProperties.toString());\n\t}","id":55512,"modified_method":"protected void updateRecordSetSettings(ActionRequest actionRequest)\n\t\tthrows PortalException {\n\n\t\tlong recordSetId = ParamUtil.getLong(actionRequest, \"recordSetId\");\n\n\t\tUnicodeProperties settingsProperties = new UnicodeProperties(true);\n\n\t\tupdateRecordSetRedirectURLSettings(actionRequest, settingsProperties);\n\t\tupdateRecordSetRequireCaptchaSettings(\n\t\t\tactionRequest, settingsProperties);\n\t\tupdateRecordSetEmailNotificationSettings(\n\t\t\tactionRequest, settingsProperties);\n\n\t\t_ddlRecordSetService.updateRecordSet(\n\t\t\trecordSetId, settingsProperties.toString());\n\t}","commit_id":"838aff450448914e7695231a7e4acf28f09877b3","url":"https://github.com/liferay/liferay-portal"},{"original_method":"@Issue(\"JENKINS-24433\")\n    @Test\n    public void testProjectNameInAFolderDisplayName() throws Exception {\n        final String projectName1 = \"job-1\";\n        final String displayName1 = \"job-1\";\n\n        final String projectName2 = \"job-2\";\n        final String displayName2 = \"my-folder-1 job-2\";\n\n        FreeStyleProject project1 = j.createFreeStyleProject(projectName1);\n        project1.setDisplayName(displayName1);\n\n        FreeStyleProject project2 = j.createFolder(\"my-folder-1\").createProject(FreeStyleProject.class, projectName2);\n        project2.setDisplayName(displayName2);\n\n\n        WebClient wc = j.createWebClient();\n        Page result = wc.goTo(\"job/my-folder-1/search/suggest?query=\" + projectName2, \"application/json\");\n        assertNotNull(result);\n        j.assertGoodStatus(result);\n\n        String content = result.getWebResponse().getContentAsString();\n        JSONObject jsonContent = (JSONObject)JSONSerializer.toJSON(content);\n        assertNotNull(jsonContent);\n        JSONArray jsonArray = jsonContent.getJSONArray(\"suggestions\");\n        assertNotNull(jsonArray);\n\n        assertEquals(1, jsonArray.size());\n\n        boolean foundDisplayName = false;\n        for(Object suggestion : jsonArray) {\n            JSONObject jsonSuggestion = (JSONObject)suggestion;\n\n            String name = (String)jsonSuggestion.get(\"name\");\n\n            if(displayName2.equals(name)) {\n                foundDisplayName = true;\n            }\n        }\n\n        assertTrue(foundDisplayName);\n    }","id":55513,"modified_method":"@Issue(\"JENKINS-24433\")\n    @Test\n    public void testProjectNameInAFolderDisplayName() throws Exception {\n        final String projectName1 = \"job-1\";\n        final String displayName1 = \"job-1 display\";\n\n        final String projectName2 = \"job-2\";\n        final String displayName2 = \"my-folder-1 job-2\";\n\n        FreeStyleProject project1 = j.createFreeStyleProject(projectName1);\n        project1.setDisplayName(displayName1);\n\n\t\tMockFolder myMockFolder = j.createFolder(\"my-folder-1\");\n\n        FreeStyleProject project2 = myMockFolder.createProject(FreeStyleProject.class, projectName2);\n        project2.setDisplayName(displayName2);\n\n        WebClient wc = j.createWebClient();\n        Page result = wc.goTo(myMockFolder.getUrl() + \"search/suggest?query=\" + projectName2, \"application/json\");\n        assertNotNull(result);\n        j.assertGoodStatus(result);\n\n        String content = result.getWebResponse().getContentAsString();\n        JSONObject jsonContent = (JSONObject)JSONSerializer.toJSON(content);\n        assertNotNull(jsonContent);\n        JSONArray jsonArray = jsonContent.getJSONArray(\"suggestions\");\n        assertNotNull(jsonArray);\n\n        assertEquals(1, jsonArray.size());\n\n        boolean foundDisplayName = false;\n        for(Object suggestion : jsonArray) {\n            JSONObject jsonSuggestion = (JSONObject)suggestion;\n\n            String name = (String)jsonSuggestion.get(\"name\");\n\n            if(displayName2.equals(name)) {\n                foundDisplayName = true;\n            }\n        }\n\n        assertTrue(foundDisplayName);\n    }","commit_id":"9afb092b44a7d72cc5f34aa9309822db3ca8afe0","url":"https://github.com/kohsuke/hudson"},{"original_method":"@Issue(\"JENKINS-24433\")\n    @Test\n    public void testProjectNameBehindAFolderDisplayName() throws Exception {\n        final String projectName1 = \"job-1\";\n        final String displayName1 = \"job-1\";\n\n        final String projectName2 = \"job-2\";\n        final String displayName2 = \"job-2\";\n\n        FreeStyleProject project1 = j.createFreeStyleProject(projectName1);\n        project1.setDisplayName(displayName1);\n\n        FreeStyleProject project2 = j.createFolder(\"my-folder-1\").createProject(FreeStyleProject.class, projectName2);\n        project2.setDisplayName(displayName2);\n\n        WebClient wc = j.createWebClient();\n        Page result = wc.goTo(\"job/my-folder-1/search/suggest?query=\" + projectName1, \"application/json\");\n        assertNotNull(result);\n        j.assertGoodStatus(result);\n\n        String content = result.getWebResponse().getContentAsString();\n        JSONObject jsonContent = (JSONObject)JSONSerializer.toJSON(content);\n        assertNotNull(jsonContent);\n        JSONArray jsonArray = jsonContent.getJSONArray(\"suggestions\");\n        assertNotNull(jsonArray);\n\n        assertEquals(1, jsonArray.size());\n\n        boolean foundProjectName = false;\n        boolean foundDisplayName = false;\n        for(Object suggestion : jsonArray) {\n            JSONObject jsonSuggestion = (JSONObject)suggestion;\n\n            String name = (String)jsonSuggestion.get(\"name\");\n            if(displayName1.equals(name)) {\n                foundDisplayName = true;\n            }\n        }\n\n        assertTrue(foundDisplayName);\n    }","id":55514,"modified_method":"@Issue(\"JENKINS-24433\")\n    @Test\n    public void testProjectNameBehindAFolderDisplayName() throws Exception {\n        final String projectName1 = \"job-1\";\n        final String displayName1 = \"job-1 display\";\n\n        final String projectName2 = \"job-2\";\n        final String displayName2 = \"job-2 display\";\n\n        FreeStyleProject project1 = j.createFreeStyleProject(projectName1);\n        project1.setDisplayName(displayName1);\n\n\t\tMockFolder myMockFolder = j.createFolder(\"my-folder-1\");\n\n\t\tFreeStyleProject project2 = myMockFolder.createProject(FreeStyleProject.class, projectName2);\n\t\tproject2.setDisplayName(displayName2);\n\n        WebClient wc = j.createWebClient();\n        Page result = wc.goTo(myMockFolder.getUrl() + \"search/suggest?query=\" + projectName1, \"application/json\");\n        assertNotNull(result);\n        j.assertGoodStatus(result);\n\n        String content = result.getWebResponse().getContentAsString();\n        JSONObject jsonContent = (JSONObject)JSONSerializer.toJSON(content);\n        assertNotNull(jsonContent);\n        JSONArray jsonArray = jsonContent.getJSONArray(\"suggestions\");\n        assertNotNull(jsonArray);\n\n        assertEquals(2, jsonArray.size());\n\n        boolean foundDisplayName = false;\n        for(Object suggestion : jsonArray) {\n            JSONObject jsonSuggestion = (JSONObject)suggestion;\n\n            String name = (String)jsonSuggestion.get(\"name\");\n            if(projectName1.equals(name)) {\n                foundDisplayName = true;\n            }\n        }\n\n\t\tassertTrue(foundDisplayName);\n    }","commit_id":"9afb092b44a7d72cc5f34aa9309822db3ca8afe0","url":"https://github.com/kohsuke/hudson"},{"original_method":"@Issue(\"JENKINS-24433\")\n    @Test\n    public void testProjectNameBehindAFolderDisplayName() throws Exception {\n        final String projectName1 = \"job-1\";\n        final String displayName1 = \"job-1\";\n\n        final String projectName2 = \"job-2\";\n        final String displayName2 = \"job-2\";\n\n        FreeStyleProject project1 = j.createFreeStyleProject(projectName1);\n        project1.setDisplayName(displayName1);\n\n        FreeStyleProject project2 = j.createFolder(\"my-folder-1\").createProject(FreeStyleProject.class, projectName2);\n        project2.setDisplayName(displayName2);\n\n        WebClient wc = j.createWebClient();\n        Page result = wc.goTo(\"job/my-folder-1/search/suggest?query=\" + projectName1, \"application/json\");\n        assertNotNull(result);\n        j.assertGoodStatus(result);\n\n        String content = result.getWebResponse().getContentAsString();\n        JSONObject jsonContent = (JSONObject)JSONSerializer.toJSON(content);\n        assertNotNull(jsonContent);\n        JSONArray jsonArray = jsonContent.getJSONArray(\"suggestions\");\n        assertNotNull(jsonArray);\n\n        assertEquals(1, jsonArray.size());\n\n        boolean foundProjectName = false;\n        boolean foundDisplayName = false;\n        for(Object suggestion : jsonArray) {\n            JSONObject jsonSuggestion = (JSONObject)suggestion;\n\n            String name = (String)jsonSuggestion.get(\"name\");\n            if(displayName1.equals(name)) {\n                foundDisplayName = true;\n            }\n        }\n\n        assertTrue(foundDisplayName);\n    }","id":55515,"modified_method":"@Issue(\"JENKINS-24433\")\n    @Test\n    public void testProjectNameBehindAFolderDisplayName() throws Exception {\n        final String projectName1 = \"job-1\";\n        final String displayName1 = \"job-1 display\";\n\n        final String projectName2 = \"job-2\";\n        final String displayName2 = \"job-2 display\";\n\n        FreeStyleProject project1 = j.createFreeStyleProject(projectName1);\n        project1.setDisplayName(displayName1);\n\n\t\tMockFolder myMockFolder = j.createFolder(\"my-folder-1\");\n\n\t\tFreeStyleProject project2 = myMockFolder.createProject(FreeStyleProject.class, projectName2);\n\t\tproject2.setDisplayName(displayName2);\n\n        WebClient wc = j.createWebClient();\n        Page result = wc.goTo(myMockFolder.getUrl() + \"search/suggest?query=\" + projectName1, \"application/json\");\n        assertNotNull(result);\n        j.assertGoodStatus(result);\n\n        String content = result.getWebResponse().getContentAsString();\n        JSONObject jsonContent = (JSONObject)JSONSerializer.toJSON(content);\n        assertNotNull(jsonContent);\n        JSONArray jsonArray = jsonContent.getJSONArray(\"suggestions\");\n        assertNotNull(jsonArray);\n\n        assertEquals(2, jsonArray.size());\n\n        boolean foundDisplayName = false;\n        for(Object suggestion : jsonArray) {\n            JSONObject jsonSuggestion = (JSONObject)suggestion;\n\n            String name = (String)jsonSuggestion.get(\"name\");\n            if(projectName1.equals(name)) {\n                foundDisplayName = true;\n            }\n        }\n\n\t\tassertTrue(foundDisplayName);\n    }","commit_id":"7aad12ec0c5f0b75d6dcc2b909d603f003ab33f1","url":"https://github.com/kohsuke/hudson"},{"original_method":"@Issue(\"JENKINS-24433\")\n    @Test\n    public void testProjectNameInAFolderDisplayName() throws Exception {\n        final String projectName1 = \"job-1\";\n        final String displayName1 = \"job-1\";\n\n        final String projectName2 = \"job-2\";\n        final String displayName2 = \"my-folder-1 job-2\";\n\n        FreeStyleProject project1 = j.createFreeStyleProject(projectName1);\n        project1.setDisplayName(displayName1);\n\n        FreeStyleProject project2 = j.createFolder(\"my-folder-1\").createProject(FreeStyleProject.class, projectName2);\n        project2.setDisplayName(displayName2);\n\n\n        WebClient wc = j.createWebClient();\n        Page result = wc.goTo(\"job/my-folder-1/search/suggest?query=\" + projectName2, \"application/json\");\n        assertNotNull(result);\n        j.assertGoodStatus(result);\n\n        String content = result.getWebResponse().getContentAsString();\n        JSONObject jsonContent = (JSONObject)JSONSerializer.toJSON(content);\n        assertNotNull(jsonContent);\n        JSONArray jsonArray = jsonContent.getJSONArray(\"suggestions\");\n        assertNotNull(jsonArray);\n\n        assertEquals(1, jsonArray.size());\n\n        boolean foundDisplayName = false;\n        for(Object suggestion : jsonArray) {\n            JSONObject jsonSuggestion = (JSONObject)suggestion;\n\n            String name = (String)jsonSuggestion.get(\"name\");\n\n            if(displayName2.equals(name)) {\n                foundDisplayName = true;\n            }\n        }\n\n        assertTrue(foundDisplayName);\n    }","id":55516,"modified_method":"@Issue(\"JENKINS-24433\")\n    @Test\n    public void testProjectNameInAFolderDisplayName() throws Exception {\n        final String projectName1 = \"job-1\";\n        final String displayName1 = \"job-1 display\";\n\n        final String projectName2 = \"job-2\";\n        final String displayName2 = \"my-folder-1 job-2\";\n\n        FreeStyleProject project1 = j.createFreeStyleProject(projectName1);\n        project1.setDisplayName(displayName1);\n\n\t\tMockFolder myMockFolder = j.createFolder(\"my-folder-1\");\n\n        FreeStyleProject project2 = myMockFolder.createProject(FreeStyleProject.class, projectName2);\n        project2.setDisplayName(displayName2);\n\n        WebClient wc = j.createWebClient();\n        Page result = wc.goTo(myMockFolder.getUrl() + \"search/suggest?query=\" + projectName2, \"application/json\");\n        assertNotNull(result);\n        j.assertGoodStatus(result);\n\n        String content = result.getWebResponse().getContentAsString();\n        JSONObject jsonContent = (JSONObject)JSONSerializer.toJSON(content);\n        assertNotNull(jsonContent);\n        JSONArray jsonArray = jsonContent.getJSONArray(\"suggestions\");\n        assertNotNull(jsonArray);\n\n        assertEquals(1, jsonArray.size());\n\n        boolean foundDisplayName = false;\n        for(Object suggestion : jsonArray) {\n            JSONObject jsonSuggestion = (JSONObject)suggestion;\n\n            String name = (String)jsonSuggestion.get(\"name\");\n\n            if(displayName2.equals(name)) {\n                foundDisplayName = true;\n            }\n        }\n\n        assertTrue(foundDisplayName);\n    }","commit_id":"7aad12ec0c5f0b75d6dcc2b909d603f003ab33f1","url":"https://github.com/kohsuke/hudson"},{"original_method":"@Override\n  public void validate(Plan plan, ReservationAllocation reservation)\n      throws PlanningException {\n\n    ReservationAllocation oldReservation =\n        plan.getReservationById(reservation.getReservationId());\n\n    // check updates are using same name\n    if (oldReservation != null\n        && !oldReservation.getUser().equals(reservation.getUser())) {\n      throw new MismatchedUserException(\n          \"Updating an existing reservation with mismatching user:\"\n              + oldReservation.getUser() + \" != \" + reservation.getUser());\n    }\n\n    long startTime = reservation.getStartTime();\n    long endTime = reservation.getEndTime();\n    long step = plan.getStep();\n\n    // for every instant in time, check we are respecting cluster capacity\n    for (long t = startTime; t < endTime; t += step) {\n      Resource currExistingAllocTot = plan.getTotalCommittedResources(t);\n      Resource currNewAlloc = reservation.getResourcesAtTime(t);\n      Resource currOldAlloc = Resource.newInstance(0, 0);\n      if (oldReservation != null) {\n        oldReservation.getResourcesAtTime(t);\n      }\n      // check the cluster is never over committed\n      // currExistingAllocTot + currNewAlloc - currOldAlloc >\n      // capPlan.getTotalCapacity()\n      if (Resources.greaterThan(plan.getResourceCalculator(), plan\n          .getTotalCapacity(), Resources.subtract(\n          Resources.add(currExistingAllocTot, currNewAlloc), currOldAlloc),\n          plan.getTotalCapacity())) {\n        throw new ResourceOverCommitException(\"Resources at time \" + t\n            + \" would be overcommitted by \" + \"accepting reservation: \"\n            + reservation.getReservationId());\n      }\n    }\n  }","id":55517,"modified_method":"@Override\n  public void validate(Plan plan, ReservationAllocation reservation)\n      throws PlanningException {\n\n    ReservationAllocation oldReservation =\n        plan.getReservationById(reservation.getReservationId());\n\n    // check updates are using same name\n    if (oldReservation != null\n        && !oldReservation.getUser().equals(reservation.getUser())) {\n      throw new MismatchedUserException(\n          \"Updating an existing reservation with mismatching user:\"\n              + oldReservation.getUser() + \" != \" + reservation.getUser());\n    }\n\n    RLESparseResourceAllocation available = plan.getAvailableResourceOverTime(\n        reservation.getUser(), reservation.getReservationId(),\n        reservation.getStartTime(), reservation.getEndTime());\n\n    // test the reservation does not exceed what is available\n    try {\n      RLESparseResourceAllocation\n          .merge(plan.getResourceCalculator(), plan.getTotalCapacity(),\n              available, reservation.getResourcesOverTime(),\n              RLESparseResourceAllocation.RLEOperator.subtractTestNonNegative,\n              reservation.getStartTime(), reservation.getEndTime());\n    } catch (PlanningException p) {\n      throw new ResourceOverCommitException(\n          \"Resources at time \" + \" would be overcommitted by \"\n              + \"accepting reservation: \" + reservation.getReservationId());\n    }\n  }","commit_id":"db54670e83a84c1d7deff2c225725687cf9e5f14","url":"https://github.com/apache/hadoop"},{"original_method":"@Test\n  public void testReplanningPlanCapacityLoss() throws PlanningException {\n\n    Resource clusterCapacity = Resource.newInstance(100 * 1024, 10);\n    Resource minAlloc = Resource.newInstance(1024, 1);\n    Resource maxAlloc = Resource.newInstance(1024 * 8, 8);\n\n    ResourceCalculator res = new DefaultResourceCalculator();\n    long step = 1L;\n    Clock clock = mock(Clock.class);\n    ReservationAgent agent = mock(ReservationAgent.class);\n\n    SharingPolicy policy = new NoOverCommitPolicy();\n    policy.init(\"root.dedicated\", null);\n\n    QueueMetrics queueMetrics = mock(QueueMetrics.class);\n\n    when(clock.getTime()).thenReturn(0L);\n    SimpleCapacityReplanner enf = new SimpleCapacityReplanner(clock);\n\n    RMContext context = ReservationSystemTestUtil.createMockRMContext();\n    ReservationSchedulerConfiguration conf =\n        mock(ReservationSchedulerConfiguration.class);\n    when(conf.getEnforcementWindow(any(String.class))).thenReturn(6L);\n\n    enf.init(\"blah\", conf);\n\n    // Initialize the plan with more resources\n    InMemoryPlan plan =\n        new InMemoryPlan(queueMetrics, policy, agent, clusterCapacity, step,\n            res, minAlloc, maxAlloc, \"dedicated\", enf, true, context, clock);\n\n    // add reservation filling the plan (separating them 1ms, so we are sure\n    // s2 follows s1 on acceptance\n    long ts = System.currentTimeMillis();\n    ReservationId r1 = ReservationId.newInstance(ts, 1);\n    int[] f5 = { 20, 20, 20, 20, 20 };\n    ReservationDefinition rDef =\n        ReservationSystemTestUtil.createSimpleReservationDefinition(\n            0, 0 + f5.length, f5.length);\n    assertTrue(plan.toString(),\n        plan.addReservation(new InMemoryReservationAllocation(r1, rDef, \"u3\",\n            \"dedicated\", 0, 0 + f5.length, generateAllocation(0, f5), res,\n            minAlloc), false));\n    when(clock.getTime()).thenReturn(1L);\n    ReservationId r2 = ReservationId.newInstance(ts, 2);\n    assertTrue(plan.toString(),\n        plan.addReservation(new InMemoryReservationAllocation(r2, rDef, \"u4\",\n            \"dedicated\", 0, 0 + f5.length, generateAllocation(0, f5), res,\n            minAlloc), false));\n    when(clock.getTime()).thenReturn(2L);\n    ReservationId r3 = ReservationId.newInstance(ts, 3);\n    assertTrue(plan.toString(),\n        plan.addReservation(new InMemoryReservationAllocation(r3, rDef, \"u5\",\n            \"dedicated\", 0, 0 + f5.length, generateAllocation(0, f5), res,\n            minAlloc), false));\n    when(clock.getTime()).thenReturn(3L);\n    ReservationId r4 = ReservationId.newInstance(ts, 4);\n    assertTrue(plan.toString(),\n        plan.addReservation(new InMemoryReservationAllocation(r4, rDef, \"u6\",\n            \"dedicated\", 0, 0 + f5.length, generateAllocation(0, f5), res,\n            minAlloc), false));\n    when(clock.getTime()).thenReturn(4L);\n    ReservationId r5 = ReservationId.newInstance(ts, 5);\n    assertTrue(plan.toString(),\n        plan.addReservation(new InMemoryReservationAllocation(r5, rDef, \"u7\",\n            \"dedicated\", 0, 0 + f5.length, generateAllocation(0, f5), res,\n            minAlloc), false));\n\n    int[] f6 = { 50, 50, 50, 50, 50 };\n    ReservationId r6 = ReservationId.newInstance(ts, 6);\n    assertTrue(plan.toString(),\n        plan.addReservation(new InMemoryReservationAllocation(r6, rDef, \"u3\",\n            \"dedicated\", 10, 10 + f6.length, generateAllocation(10, f6), res,\n            minAlloc), false));\n    when(clock.getTime()).thenReturn(6L);\n    ReservationId r7 = ReservationId.newInstance(ts, 7);\n    assertTrue(plan.toString(),\n        plan.addReservation(new InMemoryReservationAllocation(r7, rDef, \"u4\",\n            \"dedicated\", 10, 10 + f6.length, generateAllocation(10, f6), res,\n            minAlloc), false));\n\n    // remove some of the resources (requires replanning)\n    plan.setTotalCapacity(Resource.newInstance(70 * 1024, 70));\n\n    when(clock.getTime()).thenReturn(0L);\n\n    // run the replanner\n    enf.plan(plan, null);\n\n    // check which reservation are still present\n    assertNotNull(plan.getReservationById(r1));\n    assertNotNull(plan.getReservationById(r2));\n    assertNotNull(plan.getReservationById(r3));\n    assertNotNull(plan.getReservationById(r6));\n    assertNotNull(plan.getReservationById(r7));\n\n    // and which ones are removed\n    assertNull(plan.getReservationById(r4));\n    assertNull(plan.getReservationById(r5));\n\n    // check resources at each moment in time no more exceed capacity\n    for (int i = 0; i < 20; i++) {\n      long tot = 0;\n      for (ReservationAllocation r : plan.getReservationsAtTime(i)) {\n        tot = r.getResourcesAtTime(i).getMemorySize();\n      }\n      assertTrue(tot <= 70 * 1024);\n    }\n  }","id":55518,"modified_method":"@Test\n  public void testReplanningPlanCapacityLoss() throws PlanningException {\n\n    Resource clusterCapacity = Resource.newInstance(100 * 1024, 100);\n    Resource minAlloc = Resource.newInstance(1024, 1);\n    Resource maxAlloc = Resource.newInstance(1024 * 8, 8);\n\n    ResourceCalculator res = new DefaultResourceCalculator();\n    long step = 1L;\n    Clock clock = mock(Clock.class);\n    ReservationAgent agent = mock(ReservationAgent.class);\n\n    SharingPolicy policy = new NoOverCommitPolicy();\n    policy.init(\"root.dedicated\", null);\n\n    QueueMetrics queueMetrics = mock(QueueMetrics.class);\n\n    when(clock.getTime()).thenReturn(0L);\n    SimpleCapacityReplanner enf = new SimpleCapacityReplanner(clock);\n\n    RMContext context = ReservationSystemTestUtil.createMockRMContext();\n    ReservationSchedulerConfiguration conf =\n        mock(ReservationSchedulerConfiguration.class);\n    when(conf.getEnforcementWindow(any(String.class))).thenReturn(6L);\n\n    enf.init(\"blah\", conf);\n\n    // Initialize the plan with more resources\n    InMemoryPlan plan =\n        new InMemoryPlan(queueMetrics, policy, agent, clusterCapacity, step,\n            res, minAlloc, maxAlloc, \"dedicated\", enf, true, context, clock);\n\n    // add reservation filling the plan (separating them 1ms, so we are sure\n    // s2 follows s1 on acceptance\n    long ts = System.currentTimeMillis();\n    ReservationId r1 = ReservationId.newInstance(ts, 1);\n    int[] f5 = { 20, 20, 20, 20, 20 };\n    ReservationDefinition rDef =\n        ReservationSystemTestUtil.createSimpleReservationDefinition(\n            0, 0 + f5.length, f5.length);\n    assertTrue(plan.toString(),\n        plan.addReservation(new InMemoryReservationAllocation(r1, rDef, \"u3\",\n            \"dedicated\", 0, 0 + f5.length, generateAllocation(0, f5), res,\n            minAlloc), false));\n    when(clock.getTime()).thenReturn(1L);\n    ReservationId r2 = ReservationId.newInstance(ts, 2);\n    assertTrue(plan.toString(),\n        plan.addReservation(new InMemoryReservationAllocation(r2, rDef, \"u4\",\n            \"dedicated\", 0, 0 + f5.length, generateAllocation(0, f5), res,\n            minAlloc), false));\n    when(clock.getTime()).thenReturn(2L);\n    ReservationId r3 = ReservationId.newInstance(ts, 3);\n    assertTrue(plan.toString(),\n        plan.addReservation(new InMemoryReservationAllocation(r3, rDef, \"u5\",\n            \"dedicated\", 0, 0 + f5.length, generateAllocation(0, f5), res,\n            minAlloc), false));\n    when(clock.getTime()).thenReturn(3L);\n    ReservationId r4 = ReservationId.newInstance(ts, 4);\n    assertTrue(plan.toString(),\n        plan.addReservation(new InMemoryReservationAllocation(r4, rDef, \"u6\",\n            \"dedicated\", 0, 0 + f5.length, generateAllocation(0, f5), res,\n            minAlloc), false));\n    when(clock.getTime()).thenReturn(4L);\n    ReservationId r5 = ReservationId.newInstance(ts, 5);\n    assertTrue(plan.toString(),\n        plan.addReservation(new InMemoryReservationAllocation(r5, rDef, \"u7\",\n            \"dedicated\", 0, 0 + f5.length, generateAllocation(0, f5), res,\n            minAlloc), false));\n\n    int[] f6 = { 50, 50, 50, 50, 50 };\n    ReservationId r6 = ReservationId.newInstance(ts, 6);\n    assertTrue(plan.toString(),\n        plan.addReservation(new InMemoryReservationAllocation(r6, rDef, \"u3\",\n            \"dedicated\", 10, 10 + f6.length, generateAllocation(10, f6), res,\n            minAlloc), false));\n    when(clock.getTime()).thenReturn(6L);\n    ReservationId r7 = ReservationId.newInstance(ts, 7);\n    assertTrue(plan.toString(),\n        plan.addReservation(new InMemoryReservationAllocation(r7, rDef, \"u4\",\n            \"dedicated\", 10, 10 + f6.length, generateAllocation(10, f6), res,\n            minAlloc), false));\n\n    // remove some of the resources (requires replanning)\n    plan.setTotalCapacity(Resource.newInstance(70 * 1024, 70));\n\n    when(clock.getTime()).thenReturn(0L);\n\n    // run the replanner\n    enf.plan(plan, null);\n\n    // check which reservation are still present\n    assertNotNull(plan.getReservationById(r1));\n    assertNotNull(plan.getReservationById(r2));\n    assertNotNull(plan.getReservationById(r3));\n    assertNotNull(plan.getReservationById(r6));\n    assertNotNull(plan.getReservationById(r7));\n\n    // and which ones are removed\n    assertNull(plan.getReservationById(r4));\n    assertNull(plan.getReservationById(r5));\n\n    // check resources at each moment in time no more exceed capacity\n    for (int i = 0; i < 20; i++) {\n      long tot = 0;\n      for (ReservationAllocation r : plan.getReservationsAtTime(i)) {\n        tot = r.getResourcesAtTime(i).getMemorySize();\n      }\n      assertTrue(tot <= 70 * 1024);\n    }\n  }","commit_id":"db54670e83a84c1d7deff2c225725687cf9e5f14","url":"https://github.com/apache/hadoop"},{"original_method":"private void incrementAllocation(ReservationAllocation reservation) {\n    assert (readWriteLock.isWriteLockedByCurrentThread());\n    Map<ReservationInterval, Resource> allocationRequests =\n        reservation.getAllocationRequests();\n    // check if we have encountered the user earlier and if not add an entry\n    String user = reservation.getUser();\n    RLESparseResourceAllocation resAlloc = userResourceAlloc.get(user);\n    if (resAlloc == null) {\n      resAlloc = new RLESparseResourceAllocation(resCalc, minAlloc);\n      userResourceAlloc.put(user, resAlloc);\n    }\n    for (Map.Entry<ReservationInterval, Resource> r : allocationRequests\n        .entrySet()) {\n      resAlloc.addInterval(r.getKey(), r.getValue());\n      rleSparseVector.addInterval(r.getKey(), r.getValue());\n    }\n  }","id":55519,"modified_method":"private void incrementAllocation(ReservationAllocation reservation) {\n    assert (readWriteLock.isWriteLockedByCurrentThread());\n    Map<ReservationInterval, Resource> allocationRequests =\n        reservation.getAllocationRequests();\n    // check if we have encountered the user earlier and if not add an entry\n    String user = reservation.getUser();\n    RLESparseResourceAllocation resAlloc = userResourceAlloc.get(user);\n    if (resAlloc == null) {\n      resAlloc = new RLESparseResourceAllocation(resCalc);\n      userResourceAlloc.put(user, resAlloc);\n    }\n    for (Map.Entry<ReservationInterval, Resource> r : allocationRequests\n        .entrySet()) {\n      resAlloc.addInterval(r.getKey(), r.getValue());\n      rleSparseVector.addInterval(r.getKey(), r.getValue());\n    }\n  }","commit_id":"da1016365aba1cee9c06771ab142d077379f27af","url":"https://github.com/apache/hadoop"},{"original_method":"@Override\n  public long getLastEndTime() {\n    readLock.lock();\n    try {\n      return rleSparseVector.getLatestEndTime();\n    } finally {\n      readLock.unlock();\n    }\n  }","id":55520,"modified_method":"@Override\n  public long getLastEndTime() {\n    readLock.lock();\n    try {\n      return rleSparseVector.getLatestNonNullTime();\n    } finally {\n      readLock.unlock();\n    }\n  }","commit_id":"da1016365aba1cee9c06771ab142d077379f27af","url":"https://github.com/apache/hadoop"},{"original_method":"public InMemoryPlan(QueueMetrics queueMetrics, SharingPolicy policy,\n      ReservationAgent agent, Resource totalCapacity, long step,\n      ResourceCalculator resCalc, Resource minAlloc, Resource maxAlloc,\n      String queueName, Planner replanner, boolean getMoveOnExpiry,\n      RMContext rmContext, Clock clock) {\n    this.queueMetrics = queueMetrics;\n    this.policy = policy;\n    this.agent = agent;\n    this.step = step;\n    this.totalCapacity = totalCapacity;\n    this.resCalc = resCalc;\n    this.minAlloc = minAlloc;\n    this.maxAlloc = maxAlloc;\n    this.rleSparseVector = new RLESparseResourceAllocation(resCalc, minAlloc);\n    this.queueName = queueName;\n    this.replanner = replanner;\n    this.getMoveOnExpiry = getMoveOnExpiry;\n    this.clock = clock;\n    this.rmStateStore = rmContext.getStateStore();\n  }","id":55521,"modified_method":"public InMemoryPlan(QueueMetrics queueMetrics, SharingPolicy policy,\n      ReservationAgent agent, Resource totalCapacity, long step,\n      ResourceCalculator resCalc, Resource minAlloc, Resource maxAlloc,\n      String queueName, Planner replanner, boolean getMoveOnExpiry,\n      RMContext rmContext, Clock clock) {\n    this.queueMetrics = queueMetrics;\n    this.policy = policy;\n    this.agent = agent;\n    this.step = step;\n    this.totalCapacity = totalCapacity;\n    this.resCalc = resCalc;\n    this.minAlloc = minAlloc;\n    this.maxAlloc = maxAlloc;\n    this.rleSparseVector = new RLESparseResourceAllocation(resCalc);\n    this.queueName = queueName;\n    this.replanner = replanner;\n    this.getMoveOnExpiry = getMoveOnExpiry;\n    this.clock = clock;\n    this.rmStateStore = rmContext.getStateStore();\n  }","commit_id":"da1016365aba1cee9c06771ab142d077379f27af","url":"https://github.com/apache/hadoop"},{"original_method":"public InMemoryReservationAllocation(ReservationId reservationID,\n      ReservationDefinition contract, String user, String planName,\n      long startTime, long endTime,\n      Map<ReservationInterval, Resource> allocations,\n      ResourceCalculator calculator, Resource minAlloc, boolean hasGang) {\n    this.contract = contract;\n    this.startTime = startTime;\n    this.endTime = endTime;\n    this.reservationID = reservationID;\n    this.user = user;\n    this.allocationRequests = allocations;\n    this.planName = planName;\n    this.hasGang = hasGang;\n    resourcesOverTime = new RLESparseResourceAllocation(calculator, minAlloc);\n    for (Map.Entry<ReservationInterval, Resource> r : allocations\n        .entrySet()) {\n      resourcesOverTime.addInterval(r.getKey(), r.getValue());\n    }\n  }","id":55522,"modified_method":"public InMemoryReservationAllocation(ReservationId reservationID,\n      ReservationDefinition contract, String user, String planName,\n      long startTime, long endTime,\n      Map<ReservationInterval, Resource> allocations,\n      ResourceCalculator calculator, Resource minAlloc, boolean hasGang) {\n    this.contract = contract;\n    this.startTime = startTime;\n    this.endTime = endTime;\n    this.reservationID = reservationID;\n    this.user = user;\n    this.allocationRequests = allocations;\n    this.planName = planName;\n    this.hasGang = hasGang;\n    resourcesOverTime = new RLESparseResourceAllocation(calculator);\n    for (Map.Entry<ReservationInterval, Resource> r : allocations\n        .entrySet()) {\n      resourcesOverTime.addInterval(r.getKey(), r.getValue());\n    }\n  }","commit_id":"da1016365aba1cee9c06771ab142d077379f27af","url":"https://github.com/apache/hadoop"},{"original_method":"protected void initialize(Plan plan, ReservationDefinition reservation) {\n\n    // Get plan step & capacity\n    capacity = plan.getTotalCapacity();\n    step = plan.getStep();\n\n    // Get job parameters (type, arrival time & deadline)\n    jobType = reservation.getReservationRequests().getInterpreter();\n    jobArrival = stepRoundUp(reservation.getArrival(), step);\n    jobDeadline = stepRoundDown(reservation.getDeadline(), step);\n\n    // Dirty read of plan load\n    planLoads = getAllLoadsInInterval(plan, jobArrival, jobDeadline);\n\n    // Initialize the plan modifications\n    planModifications =\n        new RLESparseResourceAllocation(plan.getResourceCalculator(),\n            plan.getMinimumAllocation());\n\n  }","id":55523,"modified_method":"protected void initialize(Plan plan, ReservationDefinition reservation) {\n\n    // Get plan step & capacity\n    capacity = plan.getTotalCapacity();\n    step = plan.getStep();\n\n    // Get job parameters (type, arrival time & deadline)\n    jobType = reservation.getReservationRequests().getInterpreter();\n    jobArrival = stepRoundUp(reservation.getArrival(), step);\n    jobDeadline = stepRoundDown(reservation.getDeadline(), step);\n\n    // Dirty read of plan load\n    planLoads = getAllLoadsInInterval(plan, jobArrival, jobDeadline);\n\n    // Initialize the plan modifications\n    planModifications =\n        new RLESparseResourceAllocation(plan.getResourceCalculator());\n\n  }","commit_id":"da1016365aba1cee9c06771ab142d077379f27af","url":"https://github.com/apache/hadoop"},{"original_method":"@Override\n  public RLESparseResourceAllocation computeJobAllocation(Plan plan,\n      ReservationId reservationId, ReservationDefinition reservation)\n      throws ContractValidationException {\n\n    // Initialize\n    initialize(plan, reservation);\n\n    // If the job has been previously reserved, logically remove its allocation\n    ReservationAllocation oldReservation =\n        plan.getReservationById(reservationId);\n    if (oldReservation != null) {\n      ignoreOldAllocation(oldReservation);\n    }\n\n    // Create the allocations data structure\n    RLESparseResourceAllocation allocations =\n        new RLESparseResourceAllocation(plan.getResourceCalculator(),\n            plan.getMinimumAllocation());\n\n    // Get a reverse iterator for the set of stages\n    ListIterator<ReservationRequest> li =\n        reservation\n            .getReservationRequests()\n            .getReservationResources()\n            .listIterator(\n                reservation.getReservationRequests().getReservationResources()\n                    .size());\n\n    // Current stage\n    ReservationRequest currentReservationStage;\n\n    // Index, points on the current node\n    int index =\n        reservation.getReservationRequests().getReservationResources().size();\n\n    // Stage deadlines\n    long stageDeadline = stepRoundDown(reservation.getDeadline(), step);\n    long successorStartingTime = -1;\n\n    // Iterate the stages in reverse order\n    while (li.hasPrevious()) {\n\n      // Get current stage\n      currentReservationStage = li.previous();\n      index -= 1;\n\n      // Validate that the ReservationRequest respects basic constraints\n      validateInputStage(plan, currentReservationStage);\n\n      // Compute an adjusted earliestStart for this resource\n      // (we need this to provision some space for the ORDER contracts)\n      long stageArrivalTime = reservation.getArrival();\n      if (jobType == ReservationRequestInterpreter.R_ORDER\n          || jobType == ReservationRequestInterpreter.R_ORDER_NO_GAP) {\n        stageArrivalTime =\n            computeEarliestStartingTime(plan, reservation, index,\n                currentReservationStage, stageDeadline);\n      }\n      stageArrivalTime = stepRoundUp(stageArrivalTime, step);\n      stageArrivalTime = Math.max(stageArrivalTime, reservation.getArrival());\n\n      // Compute the allocation of a single stage\n      Map<ReservationInterval, Resource> curAlloc =\n          computeStageAllocation(plan, currentReservationStage,\n              stageArrivalTime, stageDeadline);\n\n      // If we did not find an allocation, return NULL\n      // (unless it's an ANY job, then we simply continue).\n      if (curAlloc == null) {\n\n        // If it's an ANY job, we can move to the next possible request\n        if (jobType == ReservationRequestInterpreter.R_ANY) {\n          continue;\n        }\n\n        // Otherwise, the job cannot be allocated\n        return null;\n\n      }\n\n      // Get the start & end time of the current allocation\n      Long stageStartTime = findEarliestTime(curAlloc.keySet());\n      Long stageEndTime = findLatestTime(curAlloc.keySet());\n\n      // If we did find an allocation for the stage, add it\n      for (Entry<ReservationInterval, Resource> entry : curAlloc.entrySet()) {\n        allocations.addInterval(entry.getKey(), entry.getValue());\n      }\n\n      // If this is an ANY clause, we have finished\n      if (jobType == ReservationRequestInterpreter.R_ANY) {\n        break;\n      }\n\n      // If ORDER job, set the stageDeadline of the next stage to be processed\n      if (jobType == ReservationRequestInterpreter.R_ORDER\n          || jobType == ReservationRequestInterpreter.R_ORDER_NO_GAP) {\n\n        // Verify that there is no gap, in case the job is ORDER_NO_GAP\n        if (jobType == ReservationRequestInterpreter.R_ORDER_NO_GAP\n            && successorStartingTime != -1\n            && successorStartingTime > stageEndTime) {\n\n          return null;\n\n        }\n\n        // Store the stageStartTime and set the new stageDeadline\n        successorStartingTime = stageStartTime;\n        stageDeadline = stageStartTime;\n\n      }\n\n    }\n\n    // If the allocation is empty, return an error\n    if (allocations.isEmpty()) {\n      return null;\n    }\n\n    return allocations;\n\n  }","id":55524,"modified_method":"@Override\n  public RLESparseResourceAllocation computeJobAllocation(Plan plan,\n      ReservationId reservationId, ReservationDefinition reservation)\n      throws ContractValidationException {\n\n    // Initialize\n    initialize(plan, reservation);\n\n    // If the job has been previously reserved, logically remove its allocation\n    ReservationAllocation oldReservation =\n        plan.getReservationById(reservationId);\n    if (oldReservation != null) {\n      ignoreOldAllocation(oldReservation);\n    }\n\n    // Create the allocations data structure\n    RLESparseResourceAllocation allocations =\n        new RLESparseResourceAllocation(plan.getResourceCalculator());\n\n    // Get a reverse iterator for the set of stages\n    ListIterator<ReservationRequest> li =\n        reservation\n            .getReservationRequests()\n            .getReservationResources()\n            .listIterator(\n                reservation.getReservationRequests().getReservationResources()\n                    .size());\n\n    // Current stage\n    ReservationRequest currentReservationStage;\n\n    // Index, points on the current node\n    int index =\n        reservation.getReservationRequests().getReservationResources().size();\n\n    // Stage deadlines\n    long stageDeadline = stepRoundDown(reservation.getDeadline(), step);\n    long successorStartingTime = -1;\n\n    // Iterate the stages in reverse order\n    while (li.hasPrevious()) {\n\n      // Get current stage\n      currentReservationStage = li.previous();\n      index -= 1;\n\n      // Validate that the ReservationRequest respects basic constraints\n      validateInputStage(plan, currentReservationStage);\n\n      // Compute an adjusted earliestStart for this resource\n      // (we need this to provision some space for the ORDER contracts)\n      long stageArrivalTime = reservation.getArrival();\n      if (jobType == ReservationRequestInterpreter.R_ORDER\n          || jobType == ReservationRequestInterpreter.R_ORDER_NO_GAP) {\n        stageArrivalTime =\n            computeEarliestStartingTime(plan, reservation, index,\n                currentReservationStage, stageDeadline);\n      }\n      stageArrivalTime = stepRoundUp(stageArrivalTime, step);\n      stageArrivalTime = Math.max(stageArrivalTime, reservation.getArrival());\n\n      // Compute the allocation of a single stage\n      Map<ReservationInterval, Resource> curAlloc =\n          computeStageAllocation(plan, currentReservationStage,\n              stageArrivalTime, stageDeadline);\n\n      // If we did not find an allocation, return NULL\n      // (unless it's an ANY job, then we simply continue).\n      if (curAlloc == null) {\n\n        // If it's an ANY job, we can move to the next possible request\n        if (jobType == ReservationRequestInterpreter.R_ANY) {\n          continue;\n        }\n\n        // Otherwise, the job cannot be allocated\n        return null;\n\n      }\n\n      // Get the start & end time of the current allocation\n      Long stageStartTime = findEarliestTime(curAlloc.keySet());\n      Long stageEndTime = findLatestTime(curAlloc.keySet());\n\n      // If we did find an allocation for the stage, add it\n      for (Entry<ReservationInterval, Resource> entry : curAlloc.entrySet()) {\n        allocations.addInterval(entry.getKey(), entry.getValue());\n      }\n\n      // If this is an ANY clause, we have finished\n      if (jobType == ReservationRequestInterpreter.R_ANY) {\n        break;\n      }\n\n      // If ORDER job, set the stageDeadline of the next stage to be processed\n      if (jobType == ReservationRequestInterpreter.R_ORDER\n          || jobType == ReservationRequestInterpreter.R_ORDER_NO_GAP) {\n\n        // Verify that there is no gap, in case the job is ORDER_NO_GAP\n        if (jobType == ReservationRequestInterpreter.R_ORDER_NO_GAP\n            && successorStartingTime != -1\n            && successorStartingTime > stageEndTime) {\n\n          return null;\n\n        }\n\n        // Store the stageStartTime and set the new stageDeadline\n        successorStartingTime = stageStartTime;\n        stageDeadline = stageStartTime;\n\n      }\n\n    }\n\n    // If the allocation is empty, return an error\n    if (allocations.isEmpty()) {\n      return null;\n    }\n\n    return allocations;\n\n  }","commit_id":"da1016365aba1cee9c06771ab142d077379f27af","url":"https://github.com/apache/hadoop"},{"original_method":"/**\n   * Add a resource for the specified interval\n   *\n   * @param reservationInterval the interval for which the resource is to be\n   *          added\n   * @param totCap the resource to be added\n   * @return true if addition is successful, false otherwise\n   */\n  public boolean addInterval(ReservationInterval reservationInterval,\n      Resource totCap) {\n    if (totCap.equals(ZERO_RESOURCE)) {\n      return true;\n    }\n    writeLock.lock();\n    try {\n      long startKey = reservationInterval.getStartTime();\n      long endKey = reservationInterval.getEndTime();\n      NavigableMap<Long, Resource> ticks =\n          cumulativeCapacity.headMap(endKey, false);\n      if (ticks != null && !ticks.isEmpty()) {\n        Resource updatedCapacity = Resource.newInstance(0, 0);\n        Entry<Long, Resource> lowEntry = ticks.floorEntry(startKey);\n        if (lowEntry == null) {\n          // This is the earliest starting interval\n          cumulativeCapacity.put(startKey, totCap);\n        } else {\n          updatedCapacity = Resources.add(lowEntry.getValue(), totCap);\n          // Add a new tick only if the updated value is different\n          // from the previous tick\n          if ((startKey == lowEntry.getKey())\n              && (isSameAsPrevious(lowEntry.getKey(), updatedCapacity))) {\n            cumulativeCapacity.remove(lowEntry.getKey());\n          } else {\n            cumulativeCapacity.put(startKey, updatedCapacity);\n          }\n        }\n        // Increase all the capacities of overlapping intervals\n        Set<Entry<Long, Resource>> overlapSet =\n            ticks.tailMap(startKey, false).entrySet();\n        for (Entry<Long, Resource> entry : overlapSet) {\n          updatedCapacity = Resources.add(entry.getValue(), totCap);\n          entry.setValue(updatedCapacity);\n        }\n      } else {\n        // This is the first interval to be added\n        cumulativeCapacity.put(startKey, totCap);\n      }\n      Resource nextTick = cumulativeCapacity.get(endKey);\n      if (nextTick != null) {\n        // If there is overlap, remove the duplicate entry\n        if (isSameAsPrevious(endKey, nextTick)) {\n          cumulativeCapacity.remove(endKey);\n        }\n      } else {\n        // Decrease capacity as this is end of the interval\n        cumulativeCapacity.put(endKey, Resources.subtract(cumulativeCapacity\n            .floorEntry(endKey).getValue(), totCap));\n      }\n      return true;\n    } finally {\n      writeLock.unlock();\n    }\n  }","id":55525,"modified_method":"/**\n   * Add a resource for the specified interval.\n   *\n   * @param reservationInterval the interval for which the resource is to be\n   *          added\n   * @param totCap the resource to be added\n   * @return true if addition is successful, false otherwise\n   */\n  public boolean addInterval(ReservationInterval reservationInterval,\n      Resource totCap) {\n    if (totCap.equals(ZERO_RESOURCE)) {\n      return true;\n    }\n    writeLock.lock();\n    try {\n      NavigableMap<Long, Resource> addInt = new TreeMap<Long, Resource>();\n      addInt.put(reservationInterval.getStartTime(), totCap);\n      addInt.put(reservationInterval.getEndTime(), ZERO_RESOURCE);\n      try {\n        cumulativeCapacity =\n            merge(resourceCalculator, totCap, cumulativeCapacity, addInt,\n                Long.MIN_VALUE, Long.MAX_VALUE, RLEOperator.add);\n      } catch (PlanningException e) {\n        // never happens for add\n      }\n      return true;\n    } finally {\n      writeLock.unlock();\n    }\n  }","commit_id":"da1016365aba1cee9c06771ab142d077379f27af","url":"https://github.com/apache/hadoop"},{"original_method":"/**\n   * Returns the representation of the current resources allocated over time as\n   * an interval map.\n   *\n   * @return the representation of the current resources allocated over time as\n   *         an interval map.\n   */\n  public Map<ReservationInterval, Resource> toIntervalMap() {\n\n    readLock.lock();\n    try {\n      Map<ReservationInterval, Resource> allocations =\n          new TreeMap<ReservationInterval, Resource>();\n\n      // Empty\n      if (isEmpty()) {\n        return allocations;\n      }\n\n      Map.Entry<Long, Resource> lastEntry = null;\n      for (Map.Entry<Long, Resource> entry : cumulativeCapacity.entrySet()) {\n\n        if (lastEntry != null) {\n          ReservationInterval interval =\n              new ReservationInterval(lastEntry.getKey(), entry.getKey());\n          Resource resource = lastEntry.getValue();\n\n          allocations.put(interval, resource);\n        }\n\n        lastEntry = entry;\n      }\n      return allocations;\n    } finally {\n      readLock.unlock();\n    }\n\n  }","id":55526,"modified_method":"/**\n   * Returns the representation of the current resources allocated over time as\n   * an interval map (in the defined non-null range).\n   *\n   * @return the representation of the current resources allocated over time as\n   *         an interval map.\n   */\n  public Map<ReservationInterval, Resource> toIntervalMap() {\n\n    readLock.lock();\n    try {\n      Map<ReservationInterval, Resource> allocations =\n          new TreeMap<ReservationInterval, Resource>();\n\n      // Empty\n      if (isEmpty()) {\n        return allocations;\n      }\n\n      Map.Entry<Long, Resource> lastEntry = null;\n      for (Map.Entry<Long, Resource> entry : cumulativeCapacity.entrySet()) {\n\n        if (lastEntry != null && entry.getValue() != null) {\n          ReservationInterval interval =\n              new ReservationInterval(lastEntry.getKey(), entry.getKey());\n          Resource resource = lastEntry.getValue();\n\n          allocations.put(interval, resource);\n        }\n\n        lastEntry = entry;\n      }\n      return allocations;\n    } finally {\n      readLock.unlock();\n    }\n  }","commit_id":"da1016365aba1cee9c06771ab142d077379f27af","url":"https://github.com/apache/hadoop"},{"original_method":"/**\n   * Returns the capacity, i.e. total resources allocated at the specified point\n   * of time\n   *\n   * @param tick the time (UTC in ms) at which the capacity is requested\n   * @return the resources allocated at the specified time\n   */\n  public Resource getCapacityAtTime(long tick) {\n    readLock.lock();\n    try {\n      Entry<Long, Resource> closestStep = cumulativeCapacity.floorEntry(tick);\n      if (closestStep != null) {\n        return Resources.clone(closestStep.getValue());\n      }\n      return Resources.clone(ZERO_RESOURCE);\n    } finally {\n      readLock.unlock();\n    }\n  }","id":55527,"modified_method":"/**\n   * Returns the capacity, i.e. total resources allocated at the specified point\n   * of time.\n   *\n   * @return the resources allocated at the specified time\n   */\n  public Resource getCapacityAtTime(long tick) {\n    readLock.lock();\n    try {\n      Entry<Long, Resource> closestStep = cumulativeCapacity.floorEntry(tick);\n      if (closestStep != null) {\n        return Resources.clone(closestStep.getValue());\n      }\n      return Resources.clone(ZERO_RESOURCE);\n    } finally {\n      readLock.unlock();\n    }\n  }","commit_id":"da1016365aba1cee9c06771ab142d077379f27af","url":"https://github.com/apache/hadoop"},{"original_method":"/**\n   * Removes a resource for the specified interval\n   *\n   * @param reservationInterval the interval for which the resource is to be\n   *          removed\n   * @param totCap the resource to be removed\n   * @return true if removal is successful, false otherwise\n   */\n  public boolean removeInterval(ReservationInterval reservationInterval,\n      Resource totCap) {\n    if (totCap.equals(ZERO_RESOURCE)) {\n      return true;\n    }\n    writeLock.lock();\n    try {\n      long startKey = reservationInterval.getStartTime();\n      long endKey = reservationInterval.getEndTime();\n      // update the start key\n      NavigableMap<Long, Resource> ticks =\n          cumulativeCapacity.headMap(endKey, false);\n      // Decrease all the capacities of overlapping intervals\n      SortedMap<Long, Resource> overlapSet = ticks.tailMap(startKey);\n      if (overlapSet != null && !overlapSet.isEmpty()) {\n        Resource updatedCapacity = Resource.newInstance(0, 0);\n        long currentKey = -1;\n        for (Iterator<Entry<Long, Resource>> overlapEntries =\n            overlapSet.entrySet().iterator(); overlapEntries.hasNext();) {\n          Entry<Long, Resource> entry = overlapEntries.next();\n          currentKey = entry.getKey();\n          updatedCapacity = Resources.subtract(entry.getValue(), totCap);\n          // update each entry between start and end key\n          cumulativeCapacity.put(currentKey, updatedCapacity);\n        }\n        // Remove the first overlap entry if it is same as previous after\n        // updation\n        Long firstKey = overlapSet.firstKey();\n        if (isSameAsPrevious(firstKey, overlapSet.get(firstKey))) {\n          cumulativeCapacity.remove(firstKey);\n        }\n        // Remove the next entry if it is same as end entry after updation\n        if ((currentKey != -1) && (isSameAsNext(currentKey, updatedCapacity))) {\n          cumulativeCapacity.remove(cumulativeCapacity.higherKey(currentKey));\n        }\n      }\n      return true;\n    } finally {\n      writeLock.unlock();\n    }\n  }","id":55528,"modified_method":"/**\n   * Removes a resource for the specified interval.\n   *\n   * @param reservationInterval the interval for which the resource is to be\n   *          removed\n   * @param totCap the resource to be removed\n   * @return true if removal is successful, false otherwise\n   */\n  public boolean removeInterval(ReservationInterval reservationInterval,\n      Resource totCap) {\n    if (totCap.equals(ZERO_RESOURCE)) {\n      return true;\n    }\n    writeLock.lock();\n    try {\n\n      NavigableMap<Long, Resource> removeInt = new TreeMap<Long, Resource>();\n      removeInt.put(reservationInterval.getStartTime(), totCap);\n      removeInt.put(reservationInterval.getEndTime(), ZERO_RESOURCE);\n      try {\n        cumulativeCapacity =\n            merge(resourceCalculator, totCap, cumulativeCapacity, removeInt,\n                Long.MIN_VALUE, Long.MAX_VALUE, RLEOperator.subtract);\n      } catch (PlanningException e) {\n        // never happens for subtract\n      }\n      return true;\n    } finally {\n      writeLock.unlock();\n    }\n  }","commit_id":"da1016365aba1cee9c06771ab142d077379f27af","url":"https://github.com/apache/hadoop"},{"original_method":"/**\n   * Returns true if there are no non-zero entries\n   *\n   * @return true if there are no allocations or false otherwise\n   */\n  public boolean isEmpty() {\n    readLock.lock();\n    try {\n      if (cumulativeCapacity.isEmpty()) {\n        return true;\n      }\n      // Deletion leaves a single zero entry so check for that\n      if (cumulativeCapacity.size() == 1) {\n        return cumulativeCapacity.firstEntry().getValue().equals(ZERO_RESOURCE);\n      }\n      return false;\n    } finally {\n      readLock.unlock();\n    }\n  }","id":55529,"modified_method":"/**\n   * Returns true if there are no non-zero entries.\n   *\n   * @return true if there are no allocations or false otherwise\n   */\n  public boolean isEmpty() {\n    readLock.lock();\n    try {\n      if (cumulativeCapacity.isEmpty()) {\n        return true;\n      }\n      // Deletion leaves a single zero entry with a null at the end so check for\n      // that\n      if (cumulativeCapacity.size() == 2) {\n        return cumulativeCapacity.firstEntry().getValue().equals(ZERO_RESOURCE)\n            && cumulativeCapacity.lastEntry().getValue() == null;\n      }\n      return false;\n    } finally {\n      readLock.unlock();\n    }\n  }","commit_id":"da1016365aba1cee9c06771ab142d077379f27af","url":"https://github.com/apache/hadoop"},{"original_method":"/**\n   * Get the timestamp of the latest resource allocation\n   *\n   * @return the timestamp of the last resource allocation\n   */\n  public long getLatestEndTime() {\n    readLock.lock();\n    try {\n      if (cumulativeCapacity.isEmpty()) {\n        return -1;\n      } else {\n        return cumulativeCapacity.lastKey();\n      }\n    } finally {\n      readLock.unlock();\n    }\n  }","id":55530,"modified_method":"/**\n   * Get the timestamp of the latest non-null resource allocation.\n   *\n   * @return the timestamp of the last resource allocation\n   */\n  public long getLatestNonNullTime() {\n    readLock.lock();\n    try {\n      if (cumulativeCapacity.isEmpty()) {\n        return -1;\n      } else {\n        // the last entry might contain null (to terminate\n        // the sequence)... return previous one.\n        Entry<Long, Resource> last = cumulativeCapacity.lastEntry();\n        if (last.getValue() == null) {\n          return cumulativeCapacity.floorKey(last.getKey() - 1);\n        } else {\n          return last.getKey();\n        }\n      }\n    } finally {\n      readLock.unlock();\n    }\n  }","commit_id":"da1016365aba1cee9c06771ab142d077379f27af","url":"https://github.com/apache/hadoop"},{"original_method":"public RLESparseResourceAllocation(ResourceCalculator resourceCalculator,\n      Resource minAlloc) {\n    this.resourceCalculator = resourceCalculator;\n    this.minAlloc = minAlloc;\n  }","id":55531,"modified_method":"public RLESparseResourceAllocation(ResourceCalculator resourceCalculator) {\n    this.resourceCalculator = resourceCalculator;\n  }","commit_id":"da1016365aba1cee9c06771ab142d077379f27af","url":"https://github.com/apache/hadoop"},{"original_method":"@Override\n  public Map<ReservationInterval, Resource> computeStageAllocation(\n      Plan plan, Map<Long, Resource> planLoads,\n      RLESparseResourceAllocation planModifications, ReservationRequest rr,\n      long stageEarliestStart, long stageDeadline) {\n\n    // Initialize\n    ResourceCalculator resCalc = plan.getResourceCalculator();\n    Resource capacity = plan.getTotalCapacity();\n    long step = plan.getStep();\n\n    // Create allocationRequestsearlies\n    RLESparseResourceAllocation allocationRequests =\n        new RLESparseResourceAllocation(plan.getResourceCalculator(),\n            plan.getMinimumAllocation());\n\n    // Initialize parameters\n    long duration = stepRoundUp(rr.getDuration(), step);\n    int windowSizeInDurations =\n        (int) ((stageDeadline - stageEarliestStart) / duration);\n    int totalGangs = rr.getNumContainers() / rr.getConcurrency();\n    int numContainersPerGang = rr.getConcurrency();\n    Resource gang =\n        Resources.multiply(rr.getCapability(), numContainersPerGang);\n\n    // Set maxGangsPerUnit\n    int maxGangsPerUnit =\n        (int) Math.max(\n            Math.floor(((double) totalGangs) / windowSizeInDurations), 1);\n    maxGangsPerUnit = Math.max(maxGangsPerUnit / smoothnessFactor, 1);\n\n    // If window size is too small, return null\n    if (windowSizeInDurations <= 0) {\n      return null;\n    }\n\n    // Initialize tree sorted by costs\n    TreeSet<DurationInterval> durationIntervalsSortedByCost =\n        new TreeSet<DurationInterval>(new Comparator<DurationInterval>() {\n          @Override\n          public int compare(DurationInterval val1, DurationInterval val2) {\n\n            int cmp = Double.compare(val1.getTotalCost(), val2.getTotalCost());\n            if (cmp != 0) {\n              return cmp;\n            }\n\n            return (-1) * Long.compare(val1.getEndTime(), val2.getEndTime());\n          }\n        });\n\n    // Add durationIntervals that end at (endTime - n*duration) for some n.\n    for (long intervalEnd = stageDeadline; intervalEnd >= stageEarliestStart\n        + duration; intervalEnd -= duration) {\n\n      long intervalStart = intervalEnd - duration;\n\n      // Get duration interval [intervalStart,intervalEnd)\n      DurationInterval durationInterval =\n          getDurationInterval(intervalStart, intervalEnd, planLoads,\n              planModifications, capacity, resCalc, step);\n\n      // If the interval can fit a gang, add it to the tree\n      if (durationInterval.canAllocate(gang, capacity, resCalc)) {\n        durationIntervalsSortedByCost.add(durationInterval);\n      }\n    }\n\n    // Allocate\n    int remainingGangs = totalGangs;\n    while (remainingGangs > 0) {\n\n      // If no durationInterval can fit a gang, break and return null\n      if (durationIntervalsSortedByCost.isEmpty()) {\n        break;\n      }\n\n      // Get best duration interval\n      DurationInterval bestDurationInterval =\n          durationIntervalsSortedByCost.first();\n      int numGangsToAllocate = Math.min(maxGangsPerUnit, remainingGangs);\n\n      // Add it\n      remainingGangs -= numGangsToAllocate;\n\n      ReservationInterval reservationInt =\n          new ReservationInterval(bestDurationInterval.getStartTime(),\n              bestDurationInterval.getEndTime());\n\n      Resource reservationRes =\n          Resources.multiply(rr.getCapability(), rr.getConcurrency()\n              * numGangsToAllocate);\n\n      planModifications.addInterval(reservationInt, reservationRes);\n      allocationRequests.addInterval(reservationInt, reservationRes);\n\n      // Remove from tree\n      durationIntervalsSortedByCost.remove(bestDurationInterval);\n\n      // Get updated interval\n      DurationInterval updatedDurationInterval =\n          getDurationInterval(bestDurationInterval.getStartTime(),\n              bestDurationInterval.getStartTime() + duration, planLoads,\n              planModifications, capacity, resCalc, step);\n\n      // Add to tree, if possible\n      if (updatedDurationInterval.canAllocate(gang, capacity, resCalc)) {\n        durationIntervalsSortedByCost.add(updatedDurationInterval);\n      }\n\n    }\n\n    // Get the final allocation\n    Map<ReservationInterval, Resource> allocations =\n        allocationRequests.toIntervalMap();\n\n    // If no gangs are left to place we succeed and return the allocation\n    if (remainingGangs <= 0) {\n      return allocations;\n    } else {\n\n      // If we are here is because we did not manage to satisfy this request.\n      // We remove unwanted side-effect from planModifications (needed for ANY).\n      for (Map.Entry<ReservationInterval, Resource> tempAllocation\n          : allocations.entrySet()) {\n\n        planModifications.removeInterval(tempAllocation.getKey(),\n            tempAllocation.getValue());\n\n      }\n      // Return null to signal failure in this allocation\n      return null;\n\n    }\n\n  }","id":55532,"modified_method":"@Override\n  public Map<ReservationInterval, Resource> computeStageAllocation(\n      Plan plan, Map<Long, Resource> planLoads,\n      RLESparseResourceAllocation planModifications, ReservationRequest rr,\n      long stageEarliestStart, long stageDeadline) {\n\n    // Initialize\n    ResourceCalculator resCalc = plan.getResourceCalculator();\n    Resource capacity = plan.getTotalCapacity();\n    long step = plan.getStep();\n\n    // Create allocationRequestsearlies\n    RLESparseResourceAllocation allocationRequests =\n        new RLESparseResourceAllocation(plan.getResourceCalculator());\n\n    // Initialize parameters\n    long duration = stepRoundUp(rr.getDuration(), step);\n    int windowSizeInDurations =\n        (int) ((stageDeadline - stageEarliestStart) / duration);\n    int totalGangs = rr.getNumContainers() / rr.getConcurrency();\n    int numContainersPerGang = rr.getConcurrency();\n    Resource gang =\n        Resources.multiply(rr.getCapability(), numContainersPerGang);\n\n    // Set maxGangsPerUnit\n    int maxGangsPerUnit =\n        (int) Math.max(\n            Math.floor(((double) totalGangs) / windowSizeInDurations), 1);\n    maxGangsPerUnit = Math.max(maxGangsPerUnit / smoothnessFactor, 1);\n\n    // If window size is too small, return null\n    if (windowSizeInDurations <= 0) {\n      return null;\n    }\n\n    // Initialize tree sorted by costs\n    TreeSet<DurationInterval> durationIntervalsSortedByCost =\n        new TreeSet<DurationInterval>(new Comparator<DurationInterval>() {\n          @Override\n          public int compare(DurationInterval val1, DurationInterval val2) {\n\n            int cmp = Double.compare(val1.getTotalCost(), val2.getTotalCost());\n            if (cmp != 0) {\n              return cmp;\n            }\n\n            return (-1) * Long.compare(val1.getEndTime(), val2.getEndTime());\n          }\n        });\n\n    // Add durationIntervals that end at (endTime - n*duration) for some n.\n    for (long intervalEnd = stageDeadline; intervalEnd >= stageEarliestStart\n        + duration; intervalEnd -= duration) {\n\n      long intervalStart = intervalEnd - duration;\n\n      // Get duration interval [intervalStart,intervalEnd)\n      DurationInterval durationInterval =\n          getDurationInterval(intervalStart, intervalEnd, planLoads,\n              planModifications, capacity, resCalc, step);\n\n      // If the interval can fit a gang, add it to the tree\n      if (durationInterval.canAllocate(gang, capacity, resCalc)) {\n        durationIntervalsSortedByCost.add(durationInterval);\n      }\n    }\n\n    // Allocate\n    int remainingGangs = totalGangs;\n    while (remainingGangs > 0) {\n\n      // If no durationInterval can fit a gang, break and return null\n      if (durationIntervalsSortedByCost.isEmpty()) {\n        break;\n      }\n\n      // Get best duration interval\n      DurationInterval bestDurationInterval =\n          durationIntervalsSortedByCost.first();\n      int numGangsToAllocate = Math.min(maxGangsPerUnit, remainingGangs);\n\n      // Add it\n      remainingGangs -= numGangsToAllocate;\n\n      ReservationInterval reservationInt =\n          new ReservationInterval(bestDurationInterval.getStartTime(),\n              bestDurationInterval.getEndTime());\n\n      Resource reservationRes =\n          Resources.multiply(rr.getCapability(), rr.getConcurrency()\n              * numGangsToAllocate);\n\n      planModifications.addInterval(reservationInt, reservationRes);\n      allocationRequests.addInterval(reservationInt, reservationRes);\n\n      // Remove from tree\n      durationIntervalsSortedByCost.remove(bestDurationInterval);\n\n      // Get updated interval\n      DurationInterval updatedDurationInterval =\n          getDurationInterval(bestDurationInterval.getStartTime(),\n              bestDurationInterval.getStartTime() + duration, planLoads,\n              planModifications, capacity, resCalc, step);\n\n      // Add to tree, if possible\n      if (updatedDurationInterval.canAllocate(gang, capacity, resCalc)) {\n        durationIntervalsSortedByCost.add(updatedDurationInterval);\n      }\n\n    }\n\n    // Get the final allocation\n    Map<ReservationInterval, Resource> allocations =\n        allocationRequests.toIntervalMap();\n\n    // If no gangs are left to place we succeed and return the allocation\n    if (remainingGangs <= 0) {\n      return allocations;\n    } else {\n\n      // If we are here is because we did not manage to satisfy this request.\n      // We remove unwanted side-effect from planModifications (needed for ANY).\n      for (Map.Entry<ReservationInterval, Resource> tempAllocation\n          : allocations.entrySet()) {\n\n        planModifications.removeInterval(tempAllocation.getKey(),\n            tempAllocation.getValue());\n\n      }\n      // Return null to signal failure in this allocation\n      return null;\n\n    }\n\n  }","commit_id":"da1016365aba1cee9c06771ab142d077379f27af","url":"https://github.com/apache/hadoop"},{"original_method":"@Test\n  public void testToIntervalMap() {\n    ResourceCalculator resCalc = new DefaultResourceCalculator();\n    Resource minAlloc = Resource.newInstance(1, 1);\n    RLESparseResourceAllocation rleSparseVector =\n        new RLESparseResourceAllocation(resCalc, minAlloc);\n    Map<ReservationInterval, Resource> mapAllocations;\n\n    // Check empty\n    mapAllocations = rleSparseVector.toIntervalMap();\n    Assert.assertTrue(mapAllocations.isEmpty());\n\n    // Check full\n    int[] alloc = { 0, 5, 10, 10, 5, 0, 5, 0 };\n    int start = 100;\n    Set<Entry<ReservationInterval, Resource>> inputs =\n        generateAllocation(start, alloc, false).entrySet();\n    for (Entry<ReservationInterval, Resource> ip : inputs) {\n      rleSparseVector.addInterval(ip.getKey(), ip.getValue());\n    }\n    mapAllocations = rleSparseVector.toIntervalMap();\n    Assert.assertTrue(mapAllocations.size() == 5);\n    for (Entry<ReservationInterval, Resource> entry : mapAllocations\n        .entrySet()) {\n      ReservationInterval interval = entry.getKey();\n      Resource resource = entry.getValue();\n      if (interval.getStartTime() == 101L) {\n        Assert.assertTrue(interval.getEndTime() == 102L);\n        Assert.assertEquals(resource, Resource.newInstance(5 * 1024, 5));\n      } else if (interval.getStartTime() == 102L) {\n        Assert.assertTrue(interval.getEndTime() == 104L);\n        Assert.assertEquals(resource, Resource.newInstance(10 * 1024, 10));\n      } else if (interval.getStartTime() == 104L) {\n        Assert.assertTrue(interval.getEndTime() == 105L);\n        Assert.assertEquals(resource, Resource.newInstance(5 * 1024, 5));\n      } else if (interval.getStartTime() == 105L) {\n        Assert.assertTrue(interval.getEndTime() == 106L);\n        Assert.assertEquals(resource, Resource.newInstance(0 * 1024, 0));\n      } else if (interval.getStartTime() == 106L) {\n        Assert.assertTrue(interval.getEndTime() == 107L);\n        Assert.assertEquals(resource, Resource.newInstance(5 * 1024, 5));\n      } else {\n        Assert.fail();\n      }\n    }\n  }","id":55533,"modified_method":"@Test\n  public void testToIntervalMap() {\n    ResourceCalculator resCalc = new DefaultResourceCalculator();\n    RLESparseResourceAllocation rleSparseVector =\n        new RLESparseResourceAllocation(resCalc);\n    Map<ReservationInterval, Resource> mapAllocations;\n\n    // Check empty\n    mapAllocations = rleSparseVector.toIntervalMap();\n    Assert.assertTrue(mapAllocations.isEmpty());\n\n    // Check full\n    int[] alloc = { 0, 5, 10, 10, 5, 0, 5, 0 };\n    int start = 100;\n    Set<Entry<ReservationInterval, Resource>> inputs =\n        generateAllocation(start, alloc, false).entrySet();\n    for (Entry<ReservationInterval, Resource> ip : inputs) {\n      rleSparseVector.addInterval(ip.getKey(), ip.getValue());\n    }\n    mapAllocations = rleSparseVector.toIntervalMap();\n    Assert.assertTrue(mapAllocations.size() == 5);\n    for (Entry<ReservationInterval, Resource> entry : mapAllocations.entrySet()) {\n      ReservationInterval interval = entry.getKey();\n      Resource resource = entry.getValue();\n      if (interval.getStartTime() == 101L) {\n        Assert.assertTrue(interval.getEndTime() == 102L);\n        Assert.assertEquals(resource, Resource.newInstance(5 * 1024, 5));\n      } else if (interval.getStartTime() == 102L) {\n        Assert.assertTrue(interval.getEndTime() == 104L);\n        Assert.assertEquals(resource, Resource.newInstance(10 * 1024, 10));\n      } else if (interval.getStartTime() == 104L) {\n        Assert.assertTrue(interval.getEndTime() == 105L);\n        Assert.assertEquals(resource, Resource.newInstance(5 * 1024, 5));\n      } else if (interval.getStartTime() == 105L) {\n        Assert.assertTrue(interval.getEndTime() == 106L);\n        Assert.assertEquals(resource, Resource.newInstance(0 * 1024, 0));\n      } else if (interval.getStartTime() == 106L) {\n        Assert.assertTrue(interval.getEndTime() == 107L);\n        Assert.assertEquals(resource, Resource.newInstance(5 * 1024, 5));\n      } else {\n        Assert.fail();\n      }\n    }\n  }","commit_id":"da1016365aba1cee9c06771ab142d077379f27af","url":"https://github.com/apache/hadoop"},{"original_method":"@Test\n  public void testSteps() {\n    ResourceCalculator resCalc = new DefaultResourceCalculator();\n    Resource minAlloc = Resource.newInstance(1, 1);\n\n    RLESparseResourceAllocation rleSparseVector =\n        new RLESparseResourceAllocation(resCalc, minAlloc);\n    int[] alloc = { 10, 10, 10, 10, 10, 10 };\n    int start = 100;\n    Set<Entry<ReservationInterval, Resource>> inputs =\n        generateAllocation(start, alloc, true).entrySet();\n    for (Entry<ReservationInterval, Resource> ip : inputs) {\n      rleSparseVector.addInterval(ip.getKey(), ip.getValue());\n    }\n    LOG.info(rleSparseVector.toString());\n    Assert.assertFalse(rleSparseVector.isEmpty());\n    Assert.assertEquals(Resource.newInstance(0, 0),\n        rleSparseVector.getCapacityAtTime(99));\n    Assert.assertEquals(Resource.newInstance(0, 0),\n        rleSparseVector.getCapacityAtTime(start + alloc.length + 1));\n    for (int i = 0; i < alloc.length; i++) {\n      Assert.assertEquals(\n          Resource.newInstance(1024 * (alloc[i] + i), (alloc[i] + i)),\n          rleSparseVector.getCapacityAtTime(start + i));\n    }\n    Assert.assertEquals(Resource.newInstance(0, 0),\n        rleSparseVector.getCapacityAtTime(start + alloc.length + 2));\n    for (Entry<ReservationInterval, Resource> ip : inputs) {\n      rleSparseVector.removeInterval(ip.getKey(),ip.getValue());\n    }\n    LOG.info(rleSparseVector.toString());\n    for (int i = 0; i < alloc.length; i++) {\n      Assert.assertEquals(Resource.newInstance(0, 0),\n          rleSparseVector.getCapacityAtTime(start + i));\n    }\n    Assert.assertTrue(rleSparseVector.isEmpty());\n  }","id":55534,"modified_method":"@Test\n  public void testSteps() {\n    ResourceCalculator resCalc = new DefaultResourceCalculator();\n\n    RLESparseResourceAllocation rleSparseVector =\n        new RLESparseResourceAllocation(resCalc);\n    int[] alloc = { 10, 10, 10, 10, 10, 10 };\n    int start = 100;\n    Set<Entry<ReservationInterval, Resource>> inputs =\n        generateAllocation(start, alloc, true).entrySet();\n    for (Entry<ReservationInterval, Resource> ip : inputs) {\n      rleSparseVector.addInterval(ip.getKey(), ip.getValue());\n    }\n    LOG.info(rleSparseVector.toString());\n    Assert.assertFalse(rleSparseVector.isEmpty());\n    Assert.assertEquals(Resource.newInstance(0, 0),\n        rleSparseVector.getCapacityAtTime(99));\n    Assert.assertEquals(Resource.newInstance(0, 0),\n        rleSparseVector.getCapacityAtTime(start + alloc.length + 1));\n    for (int i = 0; i < alloc.length; i++) {\n      Assert.assertEquals(\n          Resource.newInstance(1024 * (alloc[i] + i), (alloc[i] + i)),\n          rleSparseVector.getCapacityAtTime(start + i));\n    }\n    Assert.assertEquals(Resource.newInstance(0, 0),\n        rleSparseVector.getCapacityAtTime(start + alloc.length + 2));\n    for (Entry<ReservationInterval, Resource> ip : inputs) {\n      rleSparseVector.removeInterval(ip.getKey(), ip.getValue());\n    }\n    LOG.info(rleSparseVector.toString());\n    for (int i = 0; i < alloc.length; i++) {\n      Assert.assertEquals(Resource.newInstance(0, 0),\n          rleSparseVector.getCapacityAtTime(start + i));\n    }\n    Assert.assertTrue(rleSparseVector.isEmpty());\n  }","commit_id":"da1016365aba1cee9c06771ab142d077379f27af","url":"https://github.com/apache/hadoop"},{"original_method":"@Test\n  public void testZeroAlloaction() {\n    ResourceCalculator resCalc = new DefaultResourceCalculator();\n    Resource minAlloc = Resource.newInstance(1, 1);\n    RLESparseResourceAllocation rleSparseVector =\n        new RLESparseResourceAllocation(resCalc, minAlloc);\n    rleSparseVector.addInterval(new ReservationInterval(0, Long.MAX_VALUE),\n        Resource.newInstance(0, 0));\n    LOG.info(rleSparseVector.toString());\n    Assert.assertEquals(Resource.newInstance(0, 0),\n        rleSparseVector.getCapacityAtTime(new Random().nextLong()));\n    Assert.assertTrue(rleSparseVector.isEmpty());\n  }","id":55535,"modified_method":"@Test\n  public void testZeroAllocation() {\n    ResourceCalculator resCalc = new DefaultResourceCalculator();\n    RLESparseResourceAllocation rleSparseVector =\n        new RLESparseResourceAllocation(resCalc);\n    rleSparseVector.addInterval(new ReservationInterval(0, Long.MAX_VALUE),\n        Resource.newInstance(0, 0));\n    LOG.info(rleSparseVector.toString());\n    Assert.assertEquals(Resource.newInstance(0, 0),\n        rleSparseVector.getCapacityAtTime(new Random().nextLong()));\n    Assert.assertTrue(rleSparseVector.isEmpty());\n  }","commit_id":"da1016365aba1cee9c06771ab142d077379f27af","url":"https://github.com/apache/hadoop"},{"original_method":"@Test\n  public void testSkyline() {\n    ResourceCalculator resCalc = new DefaultResourceCalculator();\n    Resource minAlloc = Resource.newInstance(1, 1);\n\n    RLESparseResourceAllocation rleSparseVector =\n        new RLESparseResourceAllocation(resCalc, minAlloc);\n    int[] alloc = { 0, 5, 10, 10, 5, 0 };\n    int start = 100;\n    Set<Entry<ReservationInterval, Resource>> inputs =\n        generateAllocation(start, alloc, true).entrySet();\n    for (Entry<ReservationInterval, Resource> ip : inputs) {\n      rleSparseVector.addInterval(ip.getKey(), ip.getValue());\n    }\n    LOG.info(rleSparseVector.toString());\n    Assert.assertFalse(rleSparseVector.isEmpty());\n    Assert.assertEquals(Resource.newInstance(0, 0),\n        rleSparseVector.getCapacityAtTime(99));\n    Assert.assertEquals(Resource.newInstance(0, 0),\n        rleSparseVector.getCapacityAtTime(start + alloc.length + 1));\n    for (int i = 0; i < alloc.length; i++) {\n      Assert.assertEquals(\n          Resource.newInstance(1024 * (alloc[i] + i), (alloc[i] + i)),\n          rleSparseVector.getCapacityAtTime(start + i));\n    }\n    Assert.assertEquals(Resource.newInstance(0, 0),\n        rleSparseVector.getCapacityAtTime(start + alloc.length + 2));\n    for (Entry<ReservationInterval, Resource> ip : inputs) {\n      rleSparseVector.removeInterval(ip.getKey(), ip.getValue());\n    }\n    LOG.info(rleSparseVector.toString());\n    for (int i = 0; i < alloc.length; i++) {\n      Assert.assertEquals(Resource.newInstance(0, 0),\n          rleSparseVector.getCapacityAtTime(start + i));\n    }\n    Assert.assertTrue(rleSparseVector.isEmpty());\n  }","id":55536,"modified_method":"@Test\n  public void testSkyline() {\n    ResourceCalculator resCalc = new DefaultResourceCalculator();\n\n    RLESparseResourceAllocation rleSparseVector =\n        new RLESparseResourceAllocation(resCalc);\n    int[] alloc = { 0, 5, 10, 10, 5, 0 };\n    int start = 100;\n    Set<Entry<ReservationInterval, Resource>> inputs =\n        generateAllocation(start, alloc, true).entrySet();\n    for (Entry<ReservationInterval, Resource> ip : inputs) {\n      rleSparseVector.addInterval(ip.getKey(), ip.getValue());\n    }\n    LOG.info(rleSparseVector.toString());\n    Assert.assertFalse(rleSparseVector.isEmpty());\n    Assert.assertEquals(Resource.newInstance(0, 0),\n        rleSparseVector.getCapacityAtTime(99));\n    Assert.assertEquals(Resource.newInstance(0, 0),\n        rleSparseVector.getCapacityAtTime(start + alloc.length + 1));\n    for (int i = 0; i < alloc.length; i++) {\n      Assert.assertEquals(\n          Resource.newInstance(1024 * (alloc[i] + i), (alloc[i] + i)),\n          rleSparseVector.getCapacityAtTime(start + i));\n    }\n    Assert.assertEquals(Resource.newInstance(0, 0),\n        rleSparseVector.getCapacityAtTime(start + alloc.length + 2));\n    for (Entry<ReservationInterval, Resource> ip : inputs) {\n      rleSparseVector.removeInterval(ip.getKey(), ip.getValue());\n    }\n    LOG.info(rleSparseVector.toString());\n    for (int i = 0; i < alloc.length; i++) {\n      Assert.assertEquals(Resource.newInstance(0, 0),\n          rleSparseVector.getCapacityAtTime(start + i));\n    }\n    Assert.assertTrue(rleSparseVector.isEmpty());\n  }","commit_id":"da1016365aba1cee9c06771ab142d077379f27af","url":"https://github.com/apache/hadoop"},{"original_method":"@Test\n  public void testBlocks() {\n    ResourceCalculator resCalc = new DefaultResourceCalculator();\n    Resource minAlloc = Resource.newInstance(1, 1);\n\n    RLESparseResourceAllocation rleSparseVector =\n        new RLESparseResourceAllocation(resCalc, minAlloc);\n    int[] alloc = { 10, 10, 10, 10, 10, 10 };\n    int start = 100;\n    Set<Entry<ReservationInterval, Resource>> inputs =\n        generateAllocation(start, alloc, false).entrySet();\n    for (Entry<ReservationInterval, Resource> ip : inputs) {\n      rleSparseVector.addInterval(ip.getKey(), ip.getValue());\n    }\n    LOG.info(rleSparseVector.toString());\n    Assert.assertFalse(rleSparseVector.isEmpty());\n    Assert.assertEquals(Resource.newInstance(0, 0),\n        rleSparseVector.getCapacityAtTime(99));\n    Assert.assertEquals(Resource.newInstance(0, 0),\n        rleSparseVector.getCapacityAtTime(start + alloc.length + 1));\n    for (int i = 0; i < alloc.length; i++) {\n      Assert.assertEquals(Resource.newInstance(1024 * (alloc[i]), (alloc[i])),\n          rleSparseVector.getCapacityAtTime(start + i));\n    }\n    Assert.assertEquals(Resource.newInstance(0, 0),\n        rleSparseVector.getCapacityAtTime(start + alloc.length + 2));\n    for (Entry<ReservationInterval, Resource> ip : inputs) {\n      rleSparseVector.removeInterval(ip.getKey(), ip.getValue());\n    }\n    LOG.info(rleSparseVector.toString());\n    for (int i = 0; i < alloc.length; i++) {\n      Assert.assertEquals(Resource.newInstance(0, 0),\n          rleSparseVector.getCapacityAtTime(start + i));\n    }\n    Assert.assertTrue(rleSparseVector.isEmpty());\n  }","id":55537,"modified_method":"@Test\n  public void testBlocks() {\n    ResourceCalculator resCalc = new DefaultResourceCalculator();\n\n    RLESparseResourceAllocation rleSparseVector =\n        new RLESparseResourceAllocation(resCalc);\n    int[] alloc = { 10, 10, 10, 10, 10, 10 };\n    int start = 100;\n    Set<Entry<ReservationInterval, Resource>> inputs =\n        generateAllocation(start, alloc, false).entrySet();\n    for (Entry<ReservationInterval, Resource> ip : inputs) {\n      rleSparseVector.addInterval(ip.getKey(), ip.getValue());\n    }\n    LOG.info(rleSparseVector.toString());\n    Assert.assertFalse(rleSparseVector.isEmpty());\n    Assert.assertEquals(Resource.newInstance(0, 0),\n        rleSparseVector.getCapacityAtTime(99));\n    Assert.assertEquals(Resource.newInstance(0, 0),\n        rleSparseVector.getCapacityAtTime(start + alloc.length + 1));\n    for (int i = 0; i < alloc.length; i++) {\n      Assert.assertEquals(Resource.newInstance(1024 * (alloc[i]), (alloc[i])),\n          rleSparseVector.getCapacityAtTime(start + i));\n    }\n    Assert.assertEquals(Resource.newInstance(0, 0),\n        rleSparseVector.getCapacityAtTime(start + alloc.length + 2));\n    for (Entry<ReservationInterval, Resource> ip : inputs) {\n      rleSparseVector.removeInterval(ip.getKey(), ip.getValue());\n    }\n    LOG.info(rleSparseVector.toString());\n    for (int i = 0; i < alloc.length; i++) {\n      Assert.assertEquals(Resource.newInstance(0, 0),\n          rleSparseVector.getCapacityAtTime(start + i));\n    }\n    Assert.assertTrue(rleSparseVector.isEmpty());\n  }","commit_id":"da1016365aba1cee9c06771ab142d077379f27af","url":"https://github.com/apache/hadoop"},{"original_method":"public static void installEditAction(final JTree tree, String actionName) {\n    tree.addMouseListener(new MouseAdapter(){\n      public void mouseClicked(MouseEvent e) {\n        if (e.getClickCount() != 2) return;\n        if (tree.getPathForLocation(e.getX(), e.getY()) == null) return;\n        DataContext dataContext = DataManager.getInstance().getDataContext(tree);\n        GotoFrameSourceAction.doAction(dataContext);\n      }\n    });\n    ActionManager.getInstance().getAction(actionName).registerCustomShortcutSet(CommonShortcuts.getEditSource(), tree);\n  }","id":55538,"modified_method":"public static Disposable installEditAction(final JTree tree, String actionName) {\n    final MouseAdapter mouseListener = new MouseAdapter() {\n      public void mouseClicked(MouseEvent e) {\n        if (e.getClickCount() != 2) return;\n        if (tree.getPathForLocation(e.getX(), e.getY()) == null) return;\n        DataContext dataContext = DataManager.getInstance().getDataContext(tree);\n        GotoFrameSourceAction.doAction(dataContext);\n      }\n    };\n    tree.addMouseListener(mouseListener);\n    \n    final AnAction action = ActionManager.getInstance().getAction(actionName);\n    action.registerCustomShortcutSet(CommonShortcuts.getEditSource(), tree);\n\n    return new Disposable() {\n      public void dispose() {\n        tree.removeMouseListener(mouseListener);\n        action.unregisterCustomShortcutSet(tree);\n      }\n    };\n  }","commit_id":"c2eb13f333c5ce679b52b1bb3464b7f72a368fcf","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void dispose() {\n    myStateManager.removeListener(myContextListener);\n    myTree.dispose();\n  }","id":55539,"modified_method":"public void dispose() {\n    for (Disposable disposable : myDisposables) {\n      disposable.dispose();\n    }\n    myDisposables.clear();\n    myTree.dispose();\n  }","commit_id":"c2eb13f333c5ce679b52b1bb3464b7f72a368fcf","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public DebuggerPanel(Project project, DebuggerStateManager stateManager) {\n    super(new BorderLayout());\n    myProject = project;\n    myStateManager = stateManager;\n    myTree = createTreeView();\n    myContextListener = new DebuggerContextListener() {\n      public void changeEvent(DebuggerContextImpl newContext, int event) {\n        DebuggerPanel.this.changeEvent(newContext, event);\n      }\n    };\n\n    myTree.addMouseListener(new PopupHandler(){\n      public void invokePopup(Component comp,int x,int y){\n        ActionPopupMenu popupMenu = createPopupMenu();\n        if (popupMenu != null) {\n          popupMenu.getComponent().show(comp, x, y);\n        }\n      }\n    });\n    setFocusTraversalPolicy(new IdeFocusTraversalPolicy() {\n      public Component getDefaultComponentImpl(Container focusCycleRoot) {\n        return myTree;\n      }\n    });\n    myStateManager.addListener(myContextListener);\n  }","id":55540,"modified_method":"public DebuggerPanel(Project project, DebuggerStateManager stateManager) {\n    super(new BorderLayout());\n    myProject = project;\n    myStateManager = stateManager;\n    myTree = createTreeView();\n\n    final PopupHandler popupHandler = new PopupHandler() {\n      public void invokePopup(Component comp, int x, int y) {\n        ActionPopupMenu popupMenu = createPopupMenu();\n        if (popupMenu != null) {\n          popupMenu.getComponent().show(comp, x, y);\n        }\n      }\n    };\n    myTree.addMouseListener(popupHandler);\n\n    setFocusTraversalPolicy(new IdeFocusTraversalPolicy() {\n      public Component getDefaultComponentImpl(Container focusCycleRoot) {\n        return myTree;\n      }\n    });\n\n    final DebuggerContextListener contextListener = new DebuggerContextListener() {\n      public void changeEvent(DebuggerContextImpl newContext, int event) {\n        DebuggerPanel.this.changeEvent(newContext, event);\n      }\n    };\n    myStateManager.addListener(contextListener);\n\n    registerDisposable(new Disposable() {\n      public void dispose() {\n        myTree.removeMouseListener(popupHandler);\n        myStateManager.removeListener(contextListener);\n      }\n    });\n  }","commit_id":"c2eb13f333c5ce679b52b1bb3464b7f72a368fcf","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public MyEvaluationPanel(final Project project) {\n      super(project, (DebuggerManagerEx.getInstanceEx(project)).getContextManager());\n      getWatchTree().setEvaluationPriority(DebuggerManagerThreadImpl.HIGH_PRIORITY);\n      getWatchTree().setAllowBreakpoints(true);\n    }","id":55541,"modified_method":"public MyEvaluationPanel(final Project project) {\n      super(project, (DebuggerManagerEx.getInstanceEx(project)).getContextManager());\n      final WatchDebuggerTree watchTree = getWatchTree();\n      watchTree.setEvaluationPriority(DebuggerManagerThreadImpl.HIGH_PRIORITY);\n      watchTree.setAllowBreakpoints(true);\n      final AnAction setValueAction  = ActionManager.getInstance().getAction(DebuggerActions.SET_VALUE);\n      setValueAction.registerCustomShortcutSet(new CustomShortcutSet(KeyStroke.getKeyStroke(KeyEvent.VK_F2, 0)), watchTree);\n      registerDisposable(new Disposable() {\n        public void dispose() {\n          setValueAction.unregisterCustomShortcutSet(watchTree);\n        }\n      });\n    }","commit_id":"c2eb13f333c5ce679b52b1bb3464b7f72a368fcf","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public FramePanel(Project project, DebuggerStateManager stateManager) {\n    super(project, stateManager);\n    myThreadsCombo = new JComboBox();\n    myFramesCombo = new JComboBox();\n    myThreadsCombo.setRenderer(new DebuggerComboBoxRenderer());\n    myFramesCombo.setRenderer(new DebuggerComboBoxRenderer());\n    myThreadsListener = new ThreadsListener();\n    myFramesListener = new FramesListener();\n    myThreadsCombo.addItemListener(myThreadsListener);\n    myFramesCombo.addActionListener(myFramesListener);\n\n    Splitter splitter = new Splitter();\n    splitter.setPreferredSize(new Dimension(-1, 23));\n    splitter.setFirstComponent(new ComboPager(myFramesCombo, this));\n    splitter.setSecondComponent(myThreadsCombo);\n\n    this.add(splitter, BorderLayout.NORTH);\n\n    add(new JScrollPane(getFrameTree()), BorderLayout.CENTER);\n\n    DebuggerAction.installEditAction(getFrameTree(), DebuggerActions.EDIT_NODE_SOURCE);\n\n    final AnAction setValueAction  = ActionManager.getInstance().getAction(DebuggerActions.SET_VALUE);\n    setValueAction.registerCustomShortcutSet(new CustomShortcutSet(KeyStroke.getKeyStroke(KeyEvent.VK_F2, 0)), getFrameTree());\n  }","id":55542,"modified_method":"public FramePanel(Project project, DebuggerStateManager stateManager) {\n    super(project, stateManager);\n    myThreadsCombo = new JComboBox();\n    myFramesCombo = new JComboBox();\n    myThreadsCombo.setRenderer(new DebuggerComboBoxRenderer());\n    myFramesCombo.setRenderer(new DebuggerComboBoxRenderer());\n    myThreadsListener = new ThreadsListener();\n    myFramesListener = new FramesListener();\n    myThreadsCombo.addItemListener(myThreadsListener);\n    myFramesCombo.addActionListener(myFramesListener);\n\n    Splitter splitter = new Splitter();\n    splitter.setPreferredSize(new Dimension(-1, 23));\n    splitter.setFirstComponent(new ComboPager(myFramesCombo, this));\n    splitter.setSecondComponent(myThreadsCombo);\n\n    this.add(splitter, BorderLayout.NORTH);\n\n    final FrameDebuggerTree frameTree = getFrameTree();\n    add(new JScrollPane(frameTree), BorderLayout.CENTER);\n\n    final Disposable disposable = DebuggerAction.installEditAction(frameTree, DebuggerActions.EDIT_NODE_SOURCE);\n    registerDisposable(disposable);\n\n    final AnAction setValueAction  = ActionManager.getInstance().getAction(DebuggerActions.SET_VALUE);\n    setValueAction.registerCustomShortcutSet(new CustomShortcutSet(KeyStroke.getKeyStroke(KeyEvent.VK_F2, 0)), frameTree);\n    registerDisposable(new Disposable() {\n      public void dispose() {\n        setValueAction.unregisterCustomShortcutSet(frameTree);\n      }\n    });\n  }","commit_id":"c2eb13f333c5ce679b52b1bb3464b7f72a368fcf","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public InspectPanel(Project project, DebuggerStateManager stateManager, NodeDescriptorImpl inspectDescriptor) {\n    super(project, stateManager);\n    LOG.assertTrue(inspectDescriptor != null);\n\n    getInspectTree().setInspectDescriptor(inspectDescriptor);\n\n    add(new JScrollPane(getInspectTree()), BorderLayout.CENTER);\n    DebuggerAction.installEditAction(getInspectTree(), DebuggerActions.EDIT_NODE_SOURCE);\n  }","id":55543,"modified_method":"public InspectPanel(Project project, DebuggerStateManager stateManager, NodeDescriptorImpl inspectDescriptor) {\n    super(project, stateManager);\n    LOG.assertTrue(inspectDescriptor != null);\n\n    getInspectTree().setInspectDescriptor(inspectDescriptor);\n\n    add(new JScrollPane(getInspectTree()), BorderLayout.CENTER);\n    final Disposable disposable = DebuggerAction.installEditAction(getInspectTree(), DebuggerActions.EDIT_NODE_SOURCE);\n    registerDisposable(disposable);\n  }","commit_id":"c2eb13f333c5ce679b52b1bb3464b7f72a368fcf","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public MainWatchPanel(Project project, DebuggerStateManager stateManager) {\n    super(project,stateManager);\n    AnAction removeWatchesAction = ActionManager.getInstance().getAction(DebuggerActions.REMOVE_WATCH);\n    removeWatchesAction.registerCustomShortcutSet(new CustomShortcutSet(myRemoveWatchAccelerator), getWatchTree());\n\n    AnAction newWatchAction  = ActionManager.getInstance().getAction(DebuggerActions.NEW_WATCH);\n    newWatchAction.registerCustomShortcutSet(new CustomShortcutSet(myNewWatchAccelerator), getWatchTree());\n\n    ListenerUtil.addMouseListener(getWatchTree(), new MouseAdapter(){\n      public void mouseClicked(MouseEvent e) {\n        if(e.getButton() == MouseEvent.BUTTON1 &&  e.getClickCount() == 2) {\n          AnAction editWatchAction  = ActionManager.getInstance().getAction(DebuggerActions.EDIT_WATCH);\n          Presentation presentation = (Presentation)editWatchAction.getTemplatePresentation().clone();\n          DataContext context = DataManager.getInstance().getDataContext(getWatchTree());\n\n          AnActionEvent actionEvent = new AnActionEvent(null, context, \"WATCH_TREE\", presentation, ActionManager.getInstance(), 0);\n          editWatchAction.actionPerformed(actionEvent);\n        }\n      }\n    });\n\n    AnAction editWatchAction  = ActionManager.getInstance().getAction(DebuggerActions.EDIT_WATCH);\n    editWatchAction.registerCustomShortcutSet(new CustomShortcutSet(myEditWatchAccelerator), getWatchTree());\n  }","id":55544,"modified_method":"public MainWatchPanel(Project project, DebuggerStateManager stateManager) {\n    super(project,stateManager);\n    final WatchDebuggerTree watchTree = getWatchTree();\n\n    final AnAction removeWatchesAction = ActionManager.getInstance().getAction(DebuggerActions.REMOVE_WATCH);\n    removeWatchesAction.registerCustomShortcutSet(new CustomShortcutSet(myRemoveWatchAccelerator), watchTree);\n\n    final AnAction newWatchAction  = ActionManager.getInstance().getAction(DebuggerActions.NEW_WATCH);\n    newWatchAction.registerCustomShortcutSet(new CustomShortcutSet(myNewWatchAccelerator), watchTree);\n\n    final MouseAdapter mouseListener = new MouseAdapter() {\n      public void mouseClicked(MouseEvent e) {\n        if (e.getButton() == MouseEvent.BUTTON1 && e.getClickCount() == 2) {\n          AnAction editWatchAction = ActionManager.getInstance().getAction(DebuggerActions.EDIT_WATCH);\n          Presentation presentation = (Presentation)editWatchAction.getTemplatePresentation().clone();\n          DataContext context = DataManager.getInstance().getDataContext(watchTree);\n\n          AnActionEvent actionEvent = new AnActionEvent(null, context, \"WATCH_TREE\", presentation, ActionManager.getInstance(), 0);\n          editWatchAction.actionPerformed(actionEvent);\n        }\n      }\n    };\n    ListenerUtil.addMouseListener(watchTree, mouseListener);\n\n    final AnAction editWatchAction  = ActionManager.getInstance().getAction(DebuggerActions.EDIT_WATCH);\n    editWatchAction.registerCustomShortcutSet(new CustomShortcutSet(myEditWatchAccelerator), watchTree);\n    registerDisposable(new Disposable() {\n      public void dispose() {\n        ListenerUtil.removeMouseListener(watchTree, mouseListener);\n        removeWatchesAction.unregisterCustomShortcutSet(watchTree);\n        newWatchAction.unregisterCustomShortcutSet(watchTree);\n        editWatchAction.unregisterCustomShortcutSet(watchTree);\n      }\n    });\n  }","commit_id":"c2eb13f333c5ce679b52b1bb3464b7f72a368fcf","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public ThreadsPanel(Project project, DebuggerStateManager stateManager) {\n    super(project, stateManager);\n\n    DebuggerAction.installEditAction(getThreadsTree(), DebuggerActions.EDIT_FRAME_SOURCE);\n\n    getThreadsTree().addKeyListener(new KeyAdapter() {\n      public void keyPressed(KeyEvent e) {\n        if (e.getKeyCode() == KeyEvent.VK_ENTER && getThreadsTree().getSelectionCount() == 1) {\n          DebuggerTreeNodeImpl node = (DebuggerTreeNodeImpl)getThreadsTree().getLastSelectedPathComponent();\n          if (node != null) {\n            NodeDescriptorImpl descriptor = node.getDescriptor();\n            if (descriptor instanceof StackFrameDescriptorImpl) {\n              selectFrame(node);\n            }\n          }\n        }\n      }\n    });\n    add(new JScrollPane(getThreadsTree()), BorderLayout.CENTER);\n  }","id":55545,"modified_method":"public ThreadsPanel(Project project, DebuggerStateManager stateManager) {\n    super(project, stateManager);\n\n    final Disposable disposable = DebuggerAction.installEditAction(getThreadsTree(), DebuggerActions.EDIT_FRAME_SOURCE);\n    registerDisposable(disposable);\n\n    getThreadsTree().addKeyListener(new KeyAdapter() {\n      public void keyPressed(KeyEvent e) {\n        if (e.getKeyCode() == KeyEvent.VK_ENTER && getThreadsTree().getSelectionCount() == 1) {\n          DebuggerTreeNodeImpl node = (DebuggerTreeNodeImpl)getThreadsTree().getLastSelectedPathComponent();\n          if (node != null) {\n            NodeDescriptorImpl descriptor = node.getDescriptor();\n            if (descriptor instanceof StackFrameDescriptorImpl) {\n              selectFrame(node);\n            }\n          }\n        }\n      }\n    });\n    add(new JScrollPane(getThreadsTree()), BorderLayout.CENTER);\n  }","commit_id":"c2eb13f333c5ce679b52b1bb3464b7f72a368fcf","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public WatchPanel(Project project, DebuggerStateManager stateManager) {\n    super(project, stateManager);\n    add(new JScrollPane(getWatchTree()), BorderLayout.CENTER);\n    DebuggerAction.installEditAction(getWatchTree(), DebuggerActions.EDIT_NODE_SOURCE);\n  }","id":55546,"modified_method":"public WatchPanel(Project project, DebuggerStateManager stateManager) {\n    super(project, stateManager);\n    add(new JScrollPane(getWatchTree()), BorderLayout.CENTER);\n    final Disposable disposable = DebuggerAction.installEditAction(getWatchTree(), DebuggerActions.EDIT_NODE_SOURCE);\n    registerDisposable(disposable);\n  }","commit_id":"c2eb13f333c5ce679b52b1bb3464b7f72a368fcf","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@AdviseWith(adviceClasses = {ClusterExecutorAdvice.class})\n\t@NewEnv(type = NewEnv.Type.CLASSLOADER)\n\t@Test\n\tpublic void testGetMasterClusterNodeIdRetry() throws Exception {\n\n\t\t// Test 1, retry to get cluster node when log is enabled\n\n\t\tfinal ClusterMasterExecutorImpl clusterMasterExecutorImpl =\n\t\t\tnew ClusterMasterExecutorImpl();\n\n\t\tMockClusterExecutor mockClusterExecutor = new MockClusterExecutor(true);\n\n\t\tclusterMasterExecutorImpl.setClusterExecutorImpl(mockClusterExecutor);\n\n\t\tclusterMasterExecutorImpl.activate();\n\n\t\tmockClusterExecutor.setCoordinatorAddress(_TEST_ADDRESS);\n\n\t\tClusterExecutorAdvice.block();\n\n\t\tThread thread = new Thread() {\n\n\t\t\t@Override\n\t\t\tpublic void run() {\n\t\t\t\ttry (CaptureHandler captureHandler =\n\t\t\t\t\tJDKLoggerTestUtil.configureJDKLogger(\n\t\t\t\t\t\tClusterMasterExecutorImpl.class.getName(),\n\t\t\t\t\t\tLevel.INFO)) {\n\n\t\t\t\t\tAssert.assertEquals(\n\t\t\t\t\t\t_TEST_CLUSTER_NODE_ID,\n\t\t\t\t\t\tclusterMasterExecutorImpl.getMasterClusterNodeId(\n\t\t\t\t\t\t\tfalse));\n\n\t\t\t\t\tList<LogRecord> logRecords = captureHandler.getLogRecords();\n\n\t\t\t\t\tAssert.assertEquals(1, logRecords.size());\n\n\t\t\t\t\tLogRecord logRecord = logRecords.get(0);\n\n\t\t\t\t\tAssert.assertEquals(\n\t\t\t\t\t\t\"Unable to get cluster node information for \"+\n\t\t\t\t\t\t\t\"coordinator address \" + _TEST_ADDRESS +\n\t\t\t\t\t\t\t\t\". Trying again.\",\n\t\t\t\t\t\tlogRecord.getMessage());\n\t\t\t\t}\n\t\t\t}\n\n\t\t};\n\n\t\tthread.start();\n\n\t\tClusterExecutorAdvice.waitUntilBlock(1);\n\n\t\tClusterExecutorAdvice.unblock(1);\n\n\t\tClusterExecutorAdvice.waitUntilBlock(1);\n\n\t\tmockClusterExecutor.addClusterNode(\n\t\t\t_TEST_ADDRESS,\n\t\t\tnew ClusterNode(_TEST_CLUSTER_NODE_ID, InetAddress.getLocalHost()));\n\n\t\tClusterExecutorAdvice.unblock(1);\n\n\t\tthread.join();\n\n\t\t// Test 2, retry to get cluster node when log is disabled\n\n\t\tmockClusterExecutor.removeClusterNode(_TEST_ADDRESS);\n\n\t\tClusterExecutorAdvice.block();\n\n\t\tthread = new Thread() {\n\n\t\t\t@Override\n\t\t\tpublic void run() {\n\t\t\t\ttry (CaptureHandler captureHandler =\n\t\t\t\t\tJDKLoggerTestUtil.configureJDKLogger(\n\t\t\t\t\t\tClusterMasterExecutorImpl.class.getName(), Level.OFF)) {\n\n\t\t\t\t\tAssert.assertEquals(\n\t\t\t\t\t\t_TEST_CLUSTER_NODE_ID,\n\t\t\t\t\t\tclusterMasterExecutorImpl.getMasterClusterNodeId(\n\t\t\t\t\t\t\tfalse));\n\n\t\t\t\t\tList<LogRecord> logRecords = captureHandler.getLogRecords();\n\n\t\t\t\t\tAssert.assertTrue(logRecords.isEmpty());\n\t\t\t\t}\n\t\t\t}\n\n\t\t};\n\n\t\tthread.start();\n\n\t\tClusterExecutorAdvice.waitUntilBlock(1);\n\n\t\tClusterExecutorAdvice.unblock(1);\n\n\t\tClusterExecutorAdvice.waitUntilBlock(1);\n\n\t\tmockClusterExecutor.addClusterNode(\n\t\t\t_TEST_ADDRESS,\n\t\t\tnew ClusterNode(_TEST_CLUSTER_NODE_ID, InetAddress.getLocalHost()));\n\n\t\tClusterExecutorAdvice.unblock(1);\n\n\t\tthread.join();\n\t}","id":55547,"modified_method":"@AdviseWith(adviceClasses = {ClusterExecutorAdvice.class})\n\t@NewEnv(type = NewEnv.Type.CLASSLOADER)\n\t@Test\n\tpublic void testGetMasterClusterNodeIdRetry() throws Exception {\n\n\t\t// Test 1, retry to get cluster node when log is enabled\n\n\t\tfinal ClusterMasterExecutorImpl clusterMasterExecutorImpl =\n\t\t\tnew ClusterMasterExecutorImpl();\n\n\t\tMockClusterExecutor mockClusterExecutor = new MockClusterExecutor(true);\n\n\t\tclusterMasterExecutorImpl.setClusterExecutorImpl(mockClusterExecutor);\n\n\t\tclusterMasterExecutorImpl.activate();\n\n\t\tmockClusterExecutor.setCoordinatorAddress(_TEST_ADDRESS);\n\n\t\tClusterExecutorAdvice.block();\n\n\t\tThread thread = new Thread() {\n\n\t\t\t@Override\n\t\t\tpublic void run() {\n\t\t\t\ttry (CaptureHandler captureHandler =\n\t\t\t\t\tJDKLoggerTestUtil.configureJDKLogger(\n\t\t\t\t\t\tClusterMasterExecutorImpl.class.getName(),\n\t\t\t\t\t\tLevel.INFO)) {\n\n\t\t\t\t\tAssert.assertEquals(\n\t\t\t\t\t\t_TEST_CLUSTER_NODE_ID,\n\t\t\t\t\t\tclusterMasterExecutorImpl.getMasterClusterNodeId(\n\t\t\t\t\t\t\tfalse));\n\n\t\t\t\t\tList<LogRecord> logRecords = captureHandler.getLogRecords();\n\n\t\t\t\t\tAssert.assertEquals(1, logRecords.size());\n\n\t\t\t\t\tLogRecord logRecord = logRecords.get(0);\n\n\t\t\t\t\tAssert.assertEquals(\n\t\t\t\t\t\t\"Unable to get cluster node information for \"+\n\t\t\t\t\t\t\t\"coordinator address \" + _TEST_ADDRESS +\n\t\t\t\t\t\t\t\t\". Trying again.\",\n\t\t\t\t\t\tlogRecord.getMessage());\n\t\t\t\t}\n\t\t\t}\n\n\t\t};\n\n\t\tthread.start();\n\n\t\tClusterExecutorAdvice.waitUntilBlock(1);\n\n\t\tClusterExecutorAdvice.unblock(1);\n\n\t\tAssert.assertNull(ClusterExecutorAdvice.waitClusterNode());\n\n\t\tClusterExecutorAdvice.waitUntilBlock(1);\n\n\t\tClusterNode clusterNode = new ClusterNode(\n\t\t\t_TEST_CLUSTER_NODE_ID, InetAddress.getLocalHost());\n\n\t\tmockClusterExecutor.addClusterNode(_TEST_ADDRESS, clusterNode);\n\n\t\tClusterExecutorAdvice.unblock(1);\n\n\t\tAssert.assertSame(clusterNode, ClusterExecutorAdvice.waitClusterNode());\n\n\t\tthread.join();\n\n\t\t// Test 2, retry to get cluster node when log is disabled\n\n\t\tmockClusterExecutor.removeClusterNode(_TEST_ADDRESS);\n\n\t\tClusterExecutorAdvice.block();\n\n\t\tthread = new Thread() {\n\n\t\t\t@Override\n\t\t\tpublic void run() {\n\t\t\t\ttry (CaptureHandler captureHandler =\n\t\t\t\t\tJDKLoggerTestUtil.configureJDKLogger(\n\t\t\t\t\t\tClusterMasterExecutorImpl.class.getName(), Level.OFF)) {\n\n\t\t\t\t\tAssert.assertEquals(\n\t\t\t\t\t\t_TEST_CLUSTER_NODE_ID,\n\t\t\t\t\t\tclusterMasterExecutorImpl.getMasterClusterNodeId(\n\t\t\t\t\t\t\tfalse));\n\n\t\t\t\t\tList<LogRecord> logRecords = captureHandler.getLogRecords();\n\n\t\t\t\t\tAssert.assertTrue(logRecords.isEmpty());\n\t\t\t\t}\n\t\t\t}\n\n\t\t};\n\n\t\tthread.start();\n\n\t\tClusterExecutorAdvice.waitUntilBlock(1);\n\n\t\tClusterExecutorAdvice.unblock(1);\n\n\t\tAssert.assertNull(ClusterExecutorAdvice.waitClusterNode());\n\n\t\tClusterExecutorAdvice.waitUntilBlock(1);\n\n\t\tmockClusterExecutor.addClusterNode(_TEST_ADDRESS, clusterNode);\n\n\t\tClusterExecutorAdvice.unblock(1);\n\n\t\tAssert.assertSame(clusterNode, ClusterExecutorAdvice.waitClusterNode());\n\n\t\tthread.join();\n\t}","commit_id":"a0418e6eb7a382f6cc029d669124a4b807a57e30","url":"https://github.com/liferay/liferay-portal"},{"original_method":"@Around(\n\t\t\t\"execution(protected * com.liferay.portal.cluster.internal.\" +\n\t\t\t\t\"ClusterExecutorImpl.getClusterNode(..))\"\n\t\t)\n\t\tpublic Object getClusterNode(ProceedingJoinPoint proceedingJoinPoint)\n\t\t\tthrows Throwable {\n\n\t\t\tSemaphore semaphore = _semaphore;\n\n\t\t\tif (semaphore != null) {\n\t\t\t\tsemaphore.acquire();\n\t\t\t}\n\n\t\t\treturn proceedingJoinPoint.proceed();\n\t\t}","id":55548,"modified_method":"@Around(\n\t\t\t\"execution(protected * com.liferay.portal.cluster.internal.\" +\n\t\t\t\t\"ClusterExecutorImpl.getClusterNode(..))\"\n\t\t)\n\t\tpublic Object getClusterNode(ProceedingJoinPoint proceedingJoinPoint)\n\t\t\tthrows Throwable {\n\n\t\t\tSemaphore semaphore = _semaphore;\n\n\t\t\tif (semaphore != null) {\n\t\t\t\tsemaphore.acquire();\n\t\t\t}\n\n\t\t\tObject result = proceedingJoinPoint.proceed();\n\n\t\t\t_clusterNodeExchanger.exchange((ClusterNode)result);\n\n\t\t\treturn result;\n\t\t}","commit_id":"a0418e6eb7a382f6cc029d669124a4b807a57e30","url":"https://github.com/liferay/liferay-portal"},{"original_method":"@Around(\n\t\t\t\"execution(public static boolean com.liferay.portal.kernel.\" +\n\t\t\t\t\"resiliency.spi.SPIUtil.isSPI())\"\n\t\t)\n\t\tpublic boolean getClusterNode(ProceedingJoinPoint proceedingJoinPoint)\n\t\t\tthrows Throwable {\n\n\t\t\treturn true;\n\t\t}","id":55549,"modified_method":"@Around(\n\t\t\t\"execution(public static boolean com.liferay.portal.kernel.\" +\n\t\t\t\t\"resiliency.spi.SPIUtil.isSPI())\"\n\t\t)\n\t\tpublic boolean isSPI(ProceedingJoinPoint proceedingJoinPoint)\n\t\t\tthrows Throwable {\n\n\t\t\treturn true;\n\t\t}","commit_id":"a0418e6eb7a382f6cc029d669124a4b807a57e30","url":"https://github.com/liferay/liferay-portal"},{"original_method":"@Override\n\tpublic Object invoke(MethodInvocation methodInvocation) throws Throwable {\n\t\tif (StagingAdvicesThreadLocal.isEnabled()) {\n\t\t\treturn wrapReturnValue(methodInvocation.proceed());\n\t\t}\n\n\t\treturn methodInvocation.proceed();\n\t}","id":55550,"modified_method":"@Override\n\tpublic Object invoke(MethodInvocation methodInvocation) throws Throwable {\n\t\tObject returnValue = methodInvocation.proceed();\n\n\t\tif (!StagingAdvicesThreadLocal.isEnabled()) {\n\t\t\treturn returnValue;\n\t\t}\n\n\t\tif (returnValue instanceof LayoutSet) {\n\t\t\treturn wrapLayoutSet((LayoutSet)returnValue);\n\t\t}\n\n\t\tif (returnValue instanceof List<?>) {\n\t\t\tList<?> list = (List<?>)returnValue;\n\n\t\t\tif (!list.isEmpty() && (list.get(0) instanceof LayoutSet)) {\n\t\t\t\treturnValue = wrapLayoutSets((List<LayoutSet>)returnValue);\n\t\t\t}\n\t\t}\n\n\t\treturn returnValue;\n\t}","commit_id":"de567f56b4a2a2b31a69c109916d65d372a485af","url":"https://github.com/liferay/liferay-portal"},{"original_method":"private long[] _getCompanyIdsBySQL() throws SQLException {\n\t\tList<Long> companyIds = new ArrayList<Long>();\n\n\t\tString currentShardName = ShardUtil.getCurrentShardName();\n\n\t\tShardDataSourceTargetSource shardDataSourceTargetSource =\n\t\t\t(ShardDataSourceTargetSource)\n\t\t\t\tInfrastructureUtil.getShardDataSourceTargetSource();\n\n\t\tShardSessionFactoryTargetSource shardSessionFactoryTargetSource = null;\n\n\t\tif (shardDataSourceTargetSource != null) {\n\t\t\tshardDataSourceTargetSource.setDataSource(\n\t\t\t\tPropsValues.SHARD_DEFAULT_NAME);\n\n\t\t\tshardSessionFactoryTargetSource =\n\t\t\t\t(ShardSessionFactoryTargetSource)\n\t\t\t\t\tInfrastructureUtil.getShardSessionFactoryTargetSource();\n\n\t\t\tshardSessionFactoryTargetSource.setSessionFactory(\n\t\t\t\tPropsValues.SHARD_DEFAULT_NAME);\n\n\t\t\tShardUtil.pushCompanyService(PropsValues.SHARD_DEFAULT_NAME);\n\t\t}\n\n\t\tConnection con = null;\n\t\tPreparedStatement ps = null;\n\t\tResultSet rs = null;\n\n\t\ttry {\n\t\t\tcon = DataAccess.getConnection();\n\n\t\t\tps = con.prepareStatement(_GET_COMPANY_IDS);\n\n\t\t\tps.setString(1, currentShardName);\n\n\t\t\trs = ps.executeQuery();\n\n\t\t\twhile (rs.next()) {\n\t\t\t\tlong companyId = rs.getLong(\"companyId\");\n\n\t\t\t\tcompanyIds.add(companyId);\n\t\t\t}\n\t\t}\n\t\tfinally {\n\t\t\tif (shardDataSourceTargetSource != null) {\n\t\t\t\tShardUtil.popCompanyService();\n\n\t\t\t\tshardSessionFactoryTargetSource.setSessionFactory(\n\t\t\t\t\tcurrentShardName);\n\n\t\t\t\tshardDataSourceTargetSource.setDataSource(currentShardName);\n\t\t\t}\n\n\t\t\tDataAccess.cleanUp(con, ps, rs);\n\t\t}\n\n\t\treturn ArrayUtil.toArray(\n\t\t\tcompanyIds.toArray(new Long[companyIds.size()]));\n\t}","id":55551,"modified_method":"private long[] _getCompanyIdsBySQL() throws SQLException {\n\t\tList<Long> companyIds = new ArrayList<Long>();\n\n\t\tString currentShardName = ShardUtil.setTargetSource(\n\t\t\tPropsValues.SHARD_DEFAULT_NAME);\n\n\t\tif (Validator.isNotNull(currentShardName)) {\n\t\t\tShardUtil.pushCompanyService(PropsValues.SHARD_DEFAULT_NAME);\n\t\t}\n\n\t\tConnection con = null;\n\t\tPreparedStatement ps = null;\n\t\tResultSet rs = null;\n\n\t\ttry {\n\t\t\tcon = DataAccess.getConnection();\n\n\t\t\tps = con.prepareStatement(_GET_COMPANY_IDS);\n\n\t\t\tps.setString(1, currentShardName);\n\n\t\t\trs = ps.executeQuery();\n\n\t\t\twhile (rs.next()) {\n\t\t\t\tlong companyId = rs.getLong(\"companyId\");\n\n\t\t\t\tcompanyIds.add(companyId);\n\t\t\t}\n\t\t}\n\t\tfinally {\n\t\t\tif (Validator.isNotNull(currentShardName)) {\n\t\t\t\tShardUtil.popCompanyService();\n\n\t\t\t\tShardUtil.setTargetSource(currentShardName);\n\t\t\t}\n\n\t\t\tDataAccess.cleanUp(con, ps, rs);\n\t\t}\n\n\t\treturn ArrayUtil.toArray(\n\t\t\tcompanyIds.toArray(new Long[companyIds.size()]));\n\t}","commit_id":"c228769af21d0bd28187069e8a686e012d2a1cf5","url":"https://github.com/liferay/liferay-portal"},{"original_method":"private void _setShardNameByCompanyId(long companyId)\n\t\tthrows PortalException, SystemException {\n\n\t\tif (companyId == 0) {\n\t\t\t_setShardName(PropsValues.SHARD_DEFAULT_NAME);\n\t\t}\n\t\telse {\n\t\t\tShard shard = ShardLocalServiceUtil.getShard(\n\t\t\t\tCompany.class.getName(), companyId);\n\n\t\t\tString shardName = shard.getName();\n\n\t\t\t_setShardName(shardName);\n\t\t}\n\t}","id":55552,"modified_method":"private String _setShardNameByCompanyId(long companyId)\n\t\tthrows PortalException, SystemException {\n\n\t\tString shardName = PropsValues.SHARD_DEFAULT_NAME;\n\n\t\tif (companyId != 0) {\n\t\t\tShard shard = ShardLocalServiceUtil.getShard(\n\t\t\t\tCompany.class.getName(), companyId);\n\n\t\t\tshardName = shard.getName();\n\t\t}\n\n\t\t_setShardName(shardName);\n\n\t\treturn shardName;\n\t}","commit_id":"c228769af21d0bd28187069e8a686e012d2a1cf5","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void setShardNameByCompany() throws Throwable {\n\t\tStack<String> companyServiceStack = _getCompanyServiceStack();\n\n\t\tif (companyServiceStack.isEmpty()) {\n\t\t\tlong companyId = CompanyThreadLocal.getCompanyId();\n\n\t\t\t_setShardNameByCompanyId(companyId);\n\t\t}\n\t\telse {\n\t\t\tString shardName = companyServiceStack.peek();\n\n\t\t\t_setShardName(shardName);\n\t\t}\n\t}","id":55553,"modified_method":"public String setShardNameByCompany() throws Throwable {\n\t\tStack<String> companyServiceStack = _getCompanyServiceStack();\n\n\t\tif (companyServiceStack.isEmpty()) {\n\t\t\tlong companyId = CompanyThreadLocal.getCompanyId();\n\n\t\t\treturn _setShardNameByCompanyId(companyId);\n\t\t}\n\t\telse {\n\t\t\tString shardName = companyServiceStack.peek();\n\n\t\t\t_setShardName(shardName);\n\n\t\t\treturn shardName;\n\t\t}\n\t}","commit_id":"c228769af21d0bd28187069e8a686e012d2a1cf5","url":"https://github.com/liferay/liferay-portal"},{"original_method":"/**\n\t * Invoke a join point across all shards while ignoring the company service\n\t * stack.\n\t *\n\t * @see ShardIterativelyAdvice\n\t */\n\tpublic Object invoke(MethodInvocation methodInvocation) throws Throwable {\n\t\tObject returnValue = null;\n\n\t\tboolean isCompanyPushed = false;\n\n\t\t_shardAdvice.setGlobalCall(new Object());\n\n\t\ttry {\n\t\t\tif (_log.isInfoEnabled()) {\n\t\t\t\t_log.info(\n\t\t\t\t\t\"All shards invoked for \" + methodInvocation.toString());\n\t\t\t}\n\n\t\t\tfor (String shardName : ShardUtil.getAvailableShardNames()) {\n\t\t\t\tShardDataSourceTargetSource shardDataSourceTargetSource =\n\t\t\t\t\t_shardAdvice.getShardDataSourceTargetSource();\n\n\t\t\t\tshardDataSourceTargetSource.setDataSource(shardName);\n\n\t\t\t\tShardSessionFactoryTargetSource\n\t\t\t\t\tshardSessionFactoryTargetSource =\n\t\t\t\t\t\t_shardAdvice.getShardSessionFactoryTargetSource();\n\n\t\t\t\tshardSessionFactoryTargetSource.setSessionFactory(shardName);\n\n\t\t\t\t_shardAdvice.pushCompanyService(shardName);\n\n\t\t\t\tisCompanyPushed = true;\n\n\t\t\t\tObject value = methodInvocation.proceed();\n\n\t\t\t\t_shardAdvice.popCompanyService();\n\n\t\t\t\tisCompanyPushed = false;\n\n\t\t\t\tif (shardName.equals(ShardUtil.getDefaultShardName())) {\n\t\t\t\t\treturnValue = value;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tfinally {\n\t\t\t_shardAdvice.setGlobalCall(null);\n\n\t\t\tif (isCompanyPushed) {\n\t\t\t\t_shardAdvice.popCompanyService();\n\t\t\t}\n\t\t}\n\n\t\treturn returnValue;\n\t}","id":55554,"modified_method":"/**\n\t * Invoke a join point across all shards while ignoring the company service\n\t * stack.\n\t *\n\t * @see ShardIterativelyAdvice\n\t */\n\tpublic Object invoke(MethodInvocation methodInvocation) throws Throwable {\n\t\tObject returnValue = null;\n\n\t\t_shardAdvice.setGlobalCall(new Object());\n\n\t\ttry {\n\t\t\tfor (String shardName : ShardUtil.getAvailableShardNames()) {\n\t\t\t\tif (_log.isInfoEnabled()) {\n\t\t\t\t\t_log.info(\n\t\t\t\t\t\t\"Invoking shard \" + shardName + \" for \" +\n\t\t\t\t\t\t\tmethodInvocation.toString());\n\t\t\t\t}\n\n\t\t\t\tShardUtil.setTargetSource(shardName);\n\n\t\t\t\t_shardAdvice.pushCompanyService(shardName);\n\n\t\t\t\ttry {\n\t\t\t\t\tObject value = methodInvocation.proceed();\n\n\t\t\t\t\tif (shardName.equals(ShardUtil.getDefaultShardName())) {\n\t\t\t\t\t\treturnValue = value;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tfinally {\n\t\t\t\t\t_shardAdvice.popCompanyService();\n\n\t\t\t\t\tCacheRegistryUtil.clear();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tfinally {\n\t\t\t_shardAdvice.setGlobalCall(null);\n\t\t}\n\n\t\treturn returnValue;\n\t}","commit_id":"c228769af21d0bd28187069e8a686e012d2a1cf5","url":"https://github.com/liferay/liferay-portal"},{"original_method":"/**\n\t * Invoke a join point across all shards while using the company service\n\t * stack.\n\t *\n\t * @see ShardGloballyAdvice\n\t */\n\tpublic Object invoke(MethodInvocation methodInvocation) throws Throwable {\n\t\tif (_log.isInfoEnabled()) {\n\t\t\t_log.info(\n\t\t\t\t\"Iterating through all shards for \" +\n\t\t\t\t\tmethodInvocation.toString());\n\t\t}\n\n\t\tfor (String shardName : ShardUtil.getAvailableShardNames()) {\n\t\t\t_shardAdvice.pushCompanyService(shardName);\n\n\t\t\ttry {\n\t\t\t\tmethodInvocation.proceed();\n\t\t\t}\n\t\t\tfinally {\n\t\t\t\t_shardAdvice.popCompanyService();\n\n\t\t\t\tCacheRegistryUtil.clear();\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\t}","id":55555,"modified_method":"/**\n\t * Invoke a join point across all shards while using the company service\n\t * stack.\n\t *\n\t * @see ShardGloballyAdvice\n\t */\n\tpublic Object invoke(MethodInvocation methodInvocation) throws Throwable {\n\t\tObject returnValue = null;\n\n\t\tfor (String shardName : ShardUtil.getAvailableShardNames()) {\n\t\t\tif (_log.isInfoEnabled()) {\n\t\t\t\t_log.info(\n\t\t\t\t\t\"Invoking shard \" + shardName + \" for \" +\n\t\t\t\t\t\tmethodInvocation.toString());\n\t\t\t}\n\n\t\t\t_shardAdvice.pushCompanyService(shardName);\n\n\t\t\ttry {\n\t\t\t\tObject value = methodInvocation.proceed();\n\n\t\t\t\tif (shardName.equals(ShardUtil.getDefaultShardName())) {\n\t\t\t\t\treturnValue = value;\n\t\t\t\t}\n\t\t\t}\n\t\t\tfinally {\n\t\t\t\t_shardAdvice.popCompanyService();\n\n\t\t\t\tCacheRegistryUtil.clear();\n\t\t\t}\n\t\t}\n\n\t\treturn returnValue;\n\t}","commit_id":"c228769af21d0bd28187069e8a686e012d2a1cf5","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public Object invoke(MethodInvocation methodInvocation) throws Throwable {\n\t\tShardDataSourceTargetSource shardDataSourceTargetSource =\n\t\t\t_shardAdvice.getShardDataSourceTargetSource();\n\t\tShardSessionFactoryTargetSource shardSessionFactoryTargetSource =\n\t\t\t_shardAdvice.getShardSessionFactoryTargetSource();\n\n\t\tif ((shardDataSourceTargetSource == null) ||\n\t\t\t(shardSessionFactoryTargetSource == null)) {\n\n\t\t\treturn methodInvocation.proceed();\n\t\t}\n\n\t\tObject target = methodInvocation.getThis();\n\n\t\tif (target instanceof ClassNamePersistence ||\n\t\t\ttarget instanceof CompanyPersistence ||\n\t\t\ttarget instanceof CounterFinder ||\n\t\t\ttarget instanceof CounterPersistence ||\n\t\t\ttarget instanceof PortalPreferencesPersistence ||\n\t\t\ttarget instanceof ReleasePersistence ||\n\t\t\ttarget instanceof ResourceActionPersistence ||\n\t\t\ttarget instanceof ServiceComponentPersistence ||\n\t\t\ttarget instanceof ShardPersistence ||\n\t\t\ttarget instanceof VirtualHostPersistence) {\n\n\t\t\tString currentShardName = ShardUtil.getCurrentShardName();\n\n\t\t\tshardDataSourceTargetSource.setDataSource(\n\t\t\t\tPropsValues.SHARD_DEFAULT_NAME);\n\t\t\tshardSessionFactoryTargetSource.setSessionFactory(\n\t\t\t\tPropsValues.SHARD_DEFAULT_NAME);\n\n\t\t\tif (_log.isDebugEnabled()) {\n\t\t\t\t_log.debug(\n\t\t\t\t\t\"Using default shard for \" + methodInvocation.toString());\n\t\t\t}\n\n\t\t\t_shardAdvice.pushCompanyService(PropsValues.SHARD_DEFAULT_NAME);\n\n\t\t\ttry {\n\t\t\t\treturn methodInvocation.proceed();\n\t\t\t}\n\t\t\tfinally {\n\t\t\t\t_shardAdvice.popCompanyService();\n\n\t\t\t\tshardDataSourceTargetSource.setDataSource(currentShardName);\n\t\t\t\tshardSessionFactoryTargetSource.setSessionFactory(\n\t\t\t\t\tcurrentShardName);\n\t\t\t}\n\t\t}\n\n\t\tif (_shardAdvice.getGlobalCall() == null) {\n\t\t\t_shardAdvice.setShardNameByCompany();\n\n\t\t\tString shardName = _shardAdvice.getShardName();\n\n\t\t\tshardDataSourceTargetSource.setDataSource(shardName);\n\t\t\tshardSessionFactoryTargetSource.setSessionFactory(shardName);\n\n\t\t\tif (_log.isInfoEnabled()) {\n\t\t\t\t_log.info(\n\t\t\t\t\t\"Using shard name \" + shardName + \" for \" +\n\t\t\t\t\t\tmethodInvocation.toString());\n\t\t\t}\n\n\t\t\treturn methodInvocation.proceed();\n\t\t}\n\t\telse {\n\t\t\treturn methodInvocation.proceed();\n\t\t}\n\t}","id":55556,"modified_method":"public Object invoke(MethodInvocation methodInvocation) throws Throwable {\n\t\tShardDataSourceTargetSource shardDataSourceTargetSource =\n\t\t\t_shardAdvice.getShardDataSourceTargetSource();\n\t\tShardSessionFactoryTargetSource shardSessionFactoryTargetSource =\n\t\t\t_shardAdvice.getShardSessionFactoryTargetSource();\n\n\t\tif ((shardDataSourceTargetSource == null) ||\n\t\t\t(shardSessionFactoryTargetSource == null)) {\n\n\t\t\treturn methodInvocation.proceed();\n\t\t}\n\n\t\tObject target = methodInvocation.getThis();\n\n\t\tif (target instanceof ClassNamePersistence ||\n\t\t\ttarget instanceof CompanyPersistence ||\n\t\t\ttarget instanceof CounterFinder ||\n\t\t\ttarget instanceof CounterPersistence ||\n\t\t\ttarget instanceof PortalPreferencesPersistence ||\n\t\t\ttarget instanceof ReleasePersistence ||\n\t\t\ttarget instanceof ResourceActionPersistence ||\n\t\t\ttarget instanceof ServiceComponentPersistence ||\n\t\t\ttarget instanceof ShardPersistence ||\n\t\t\ttarget instanceof VirtualHostPersistence) {\n\n\t\t\tString currentShardName = ShardUtil.setTargetSource(\n\t\t\t\tPropsValues.SHARD_DEFAULT_NAME);\n\n\t\t\tif (_log.isDebugEnabled()) {\n\t\t\t\t_log.debug(\n\t\t\t\t\t\"Using default shard for \" + methodInvocation.toString());\n\t\t\t}\n\n\t\t\t_shardAdvice.pushCompanyService(PropsValues.SHARD_DEFAULT_NAME);\n\n\t\t\ttry {\n\t\t\t\treturn methodInvocation.proceed();\n\t\t\t}\n\t\t\tfinally {\n\t\t\t\t_shardAdvice.popCompanyService();\n\n\t\t\t\tShardUtil.setTargetSource(currentShardName);\n\t\t\t}\n\t\t}\n\n\t\tif (_shardAdvice.getGlobalCall() == null) {\n\t\t\tString shardName = _shardAdvice.setShardNameByCompany();\n\n\t\t\tShardUtil.setTargetSource(shardName);\n\n\t\t\tif (_log.isInfoEnabled()) {\n\t\t\t\t_log.info(\n\t\t\t\t\t\"Using shard name \" + shardName + \" for \" +\n\t\t\t\t\t\tmethodInvocation.toString());\n\t\t\t}\n\n\t\t\treturn methodInvocation.proceed();\n\t\t}\n\t\telse {\n\t\t\treturn methodInvocation.proceed();\n\t\t}\n\t}","commit_id":"c228769af21d0bd28187069e8a686e012d2a1cf5","url":"https://github.com/liferay/liferay-portal"},{"original_method":"@Override\n\t\tprotected boolean matches(EClassDescriptor typeDescriptor) {\n\t\t\treturn (namePattern == null || namePattern.equals(typeDescriptor.getName()));\n\t\t}","id":55557,"modified_method":"@Override\n\t\tprotected boolean matches(EClassDescriptor typeDescriptor) {\n\t\t\treturn matchesGlobbing(typeDescriptor.getName(), namePattern);\n\t\t}","commit_id":"71c3aba365c3f1d5630eb7af1630d5eef7594af8","url":"https://github.com/eclipse/xtext"},{"original_method":"protected boolean matches(ECrossReferenceDescriptor crossRefDescriptor) {\n\t\t\treturn referenceNamePattern == null || referenceNamePattern.equals(crossRefDescriptor.getReferenceName());\n\t\t}","id":55558,"modified_method":"protected boolean matches(ECrossReferenceDescriptor crossRefDescriptor) {\n\t\t\treturn matchesGlobbing(crossRefDescriptor.getReferenceName(), referenceNamePattern);\n\t\t}","commit_id":"71c3aba365c3f1d5630eb7af1630d5eef7594af8","url":"https://github.com/eclipse/xtext"},{"original_method":"public boolean matches(EObjectDescriptor elementDescriptor) {\n\t\t\tif ((fragmentPattern == null || fragmentPattern.equals(elementDescriptor.getFragment()))\n\t\t\t\t\t&& (namePattern == null || namePattern.equals(elementDescriptor.getName()))\n\t\t\t\t\t&& (typeDescriptor == null || typeDescriptor.equals(elementDescriptor.getEClassDescriptor()))) {\n\t\t\t\tif (userDataPatterns != null) {\n\t\t\t\t\tfor (Entry<String, String> userDataEntry : userDataPatterns.entrySet()) {\n\t\t\t\t\t\tif (!userDataEntry.getValue().equals(elementDescriptor.getUserData(userDataEntry.getKey()))) {\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn false;\n\t\t}","id":55559,"modified_method":"public boolean matches(EObjectDescriptor elementDescriptor) {\n\t\t\tif (matchesGlobbing(elementDescriptor.getFragment(), fragmentPattern)\n\t\t\t\t\t&& matchesGlobbing(elementDescriptor.getName(), namePattern)\n\t\t\t\t\t&& (typeDescriptor == null || typeDescriptor.equals(elementDescriptor.getEClassDescriptor()))) {\n\t\t\t\tif (userDataPatterns != null) {\n\t\t\t\t\tfor (Entry<String, String> userDataEntry : userDataPatterns.entrySet()) {\n\t\t\t\t\t\tif (!matchesGlobbing(elementDescriptor.getUserData(userDataEntry.getKey()), userDataEntry.getValue())) {\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn false;\n\t\t}","commit_id":"71c3aba365c3f1d5630eb7af1630d5eef7594af8","url":"https://github.com/eclipse/xtext"},{"original_method":"@Override\n\t\tprotected boolean matches(EPackageDescriptor ePackageDescriptor) {\n\t\t\treturn ((indexingDate == UNSET_DATE || indexingDate == ePackageDescriptor.getIndexingDate()) \n\t\t\t\t\t&& (namePattern == null || namePattern.equals(ePackageDescriptor.getName()))\n\t\t\t\t\t&& (nsURIPattern == null || nsURIPattern.equals(ePackageDescriptor.getNsURI())));\n\t\t}","id":55560,"modified_method":"@Override\n\t\tprotected boolean matches(EPackageDescriptor ePackageDescriptor) {\n\t\t\treturn ((indexingDate == UNSET_DATE || indexingDate == ePackageDescriptor.getIndexingDate())\n\t\t\t\t\t&& matchesGlobbing(ePackageDescriptor.getName(), namePattern) && matchesGlobbing(ePackageDescriptor\n\t\t\t\t\t.getNsURI(), nsURIPattern));\n\t\t}","commit_id":"71c3aba365c3f1d5630eb7af1630d5eef7594af8","url":"https://github.com/eclipse/xtext"},{"original_method":"public static void feedEPackagesFromRegistry(IIndexStore indexStore) {\n\t\tfor (boolean hasChanged = true; hasChanged;) {\n\t\t\tfor (String nsURI : EPackage.Registry.INSTANCE.keySet()) {\n\t\t\t\thasChanged = false;\n\t\t\t\tEPackageDescriptor storedEPackages = indexStore.ePackageDAO().createQuery().nsURI(nsURI)\n\t\t\t\t\t\t.executeSingleResult();\n\t\t\t\tif (storedEPackages == null) {\n\t\t\t\t\thasChanged = true;\n\t\t\t\t\tEPackage ePackage = EPackage.Registry.INSTANCE.getEPackage(nsURI);\n\t\t\t\t\tindexStore.indexFeeder().index(ePackage, true);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}","id":55561,"modified_method":"public static void feedEPackagesFromRegistry(IIndexStore indexStore) {\n\t\tfor (boolean hasChanged = true; hasChanged;) {\n\t\t\tList<String> nsURIs = new ArrayList<String>(EPackage.Registry.INSTANCE.keySet());\n\t\t\tfor (String nsURI : nsURIs) {\n\t\t\t\thasChanged = false;\n\t\t\t\tEPackageDescriptor storedEPackages = indexStore.ePackageDAO().createQuery().nsURI(nsURI)\n\t\t\t\t\t\t.executeSingleResult();\n\t\t\t\tif (storedEPackages == null) {\n\t\t\t\t\thasChanged = true;\n\t\t\t\t\tEPackage ePackage = EPackage.Registry.INSTANCE.getEPackage(nsURI);\n\t\t\t\t\tindexStore.indexFeeder().index(ePackage, true);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}","commit_id":"71c3aba365c3f1d5630eb7af1630d5eef7594af8","url":"https://github.com/eclipse/xtext"},{"original_method":"public List<EClassDescriptor> index(EPackage ePackage, boolean isRecurseSubpackages) {\n\t\tEPackageDescriptor ePackageDescriptor = internalIndexEPackage(ePackage);\n\t\tList<EClassDescriptor> typeDescriptors = internalIndexEPackageContents(ePackage, ePackageDescriptor);\n\t\tif (isRecurseSubpackages) {\n\t\t\tfor (EPackage subPackage : ePackage.getESubpackages())\n\t\t\t\ttypeDescriptors.addAll(index(subPackage, isRecurseSubpackages));\n\t\t}\n\t\t// TODO Handle removed sub packages?\n\t\treturn typeDescriptors;\n\t}","id":55562,"modified_method":"public List<EClassDescriptor> index(EPackage ePackage, boolean isRecurseSubpackages) {\n\t\tEPackageDescriptor ePackageDescriptor = internalIndexEPackage(ePackage);\n\t\tList<EClassDescriptor> typeDescriptors = internalIndexEPackageContents(ePackage, ePackageDescriptor);\n\t\tif (isRecurseSubpackages) {\n\t\t\tfor (EPackage subPackage : ePackage.getESubpackages())\n\t\t\t\t// don't follow cross-resource references\n\t\t\t\tif (ePackage.eResource() == null || subPackage.eResource() == ePackage.eResource())\n\t\t\t\t\ttypeDescriptors.addAll(index(subPackage, isRecurseSubpackages));\n\t\t}\n\t\t// TODO Handle removed sub packages?\n\t\treturn typeDescriptors;\n\t}","commit_id":"71c3aba365c3f1d5630eb7af1630d5eef7594af8","url":"https://github.com/eclipse/xtext"},{"original_method":"public Collection<SourceDesc> executeListResult() {\n\t\t\treturn lookup(target);\n\t\t}","id":55563,"modified_method":"public Collection<SourceDesc> executeListResult() {\n\t\t\treturn CollectionUtils.copyOrNull(lookup(target));\n\t\t}","commit_id":"71c3aba365c3f1d5630eb7af1630d5eef7594af8","url":"https://github.com/eclipse/xtext"},{"original_method":"protected boolean matches(ResourceDescriptor resourceDescriptor) {\n\t\t\treturn ((uriPattern == null || uriPattern.equals(resourceDescriptor.getURI())) && (indexingDate == UNSET_DATE || indexingDate == resourceDescriptor\n\t\t\t\t\t.getIndexingDate()));\n\t\t}","id":55564,"modified_method":"protected boolean matches(ResourceDescriptor resourceDescriptor) {\n\t\t\treturn matchesGlobbing(resourceDescriptor.getURI(), uriPattern)\n\t\t\t\t\t&& (indexingDate == UNSET_DATE || indexingDate == resourceDescriptor.getIndexingDate());\n\t\t}","commit_id":"71c3aba365c3f1d5630eb7af1630d5eef7594af8","url":"https://github.com/eclipse/xtext"},{"original_method":"@Override\n\t\tprotected boolean matches(EClassDescriptor typeDescriptor) {\n\t\t\treturn (namePattern == null || namePattern.equals(typeDescriptor.getName()));\n\t\t}","id":55565,"modified_method":"@Override\n\t\tprotected boolean matches(EClassDescriptor typeDescriptor) {\n\t\t\treturn matchesGlobbing(typeDescriptor.getName(), namePattern);\n\t\t}","commit_id":"340b353b9845d5934638bb66111bc7f62ce4e1d6","url":"https://github.com/eclipse/xtext"},{"original_method":"protected boolean matches(ECrossReferenceDescriptor crossRefDescriptor) {\n\t\t\treturn referenceNamePattern == null || referenceNamePattern.equals(crossRefDescriptor.getReferenceName());\n\t\t}","id":55566,"modified_method":"protected boolean matches(ECrossReferenceDescriptor crossRefDescriptor) {\n\t\t\treturn matchesGlobbing(crossRefDescriptor.getReferenceName(), referenceNamePattern);\n\t\t}","commit_id":"340b353b9845d5934638bb66111bc7f62ce4e1d6","url":"https://github.com/eclipse/xtext"},{"original_method":"public boolean matches(EObjectDescriptor elementDescriptor) {\n\t\t\tif ((fragmentPattern == null || fragmentPattern.equals(elementDescriptor.getFragment()))\n\t\t\t\t\t&& (namePattern == null || namePattern.equals(elementDescriptor.getName()))\n\t\t\t\t\t&& (typeDescriptor == null || typeDescriptor.equals(elementDescriptor.getEClassDescriptor()))) {\n\t\t\t\tif (userDataPatterns != null) {\n\t\t\t\t\tfor (Entry<String, String> userDataEntry : userDataPatterns.entrySet()) {\n\t\t\t\t\t\tif (!userDataEntry.getValue().equals(elementDescriptor.getUserData(userDataEntry.getKey()))) {\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn false;\n\t\t}","id":55567,"modified_method":"public boolean matches(EObjectDescriptor elementDescriptor) {\n\t\t\tif (matchesGlobbing(elementDescriptor.getFragment(), fragmentPattern)\n\t\t\t\t\t&& matchesGlobbing(elementDescriptor.getName(), namePattern)\n\t\t\t\t\t&& (typeDescriptor == null || typeDescriptor.equals(elementDescriptor.getEClassDescriptor()))) {\n\t\t\t\tif (userDataPatterns != null) {\n\t\t\t\t\tfor (Entry<String, String> userDataEntry : userDataPatterns.entrySet()) {\n\t\t\t\t\t\tif (!matchesGlobbing(elementDescriptor.getUserData(userDataEntry.getKey()), userDataEntry.getValue())) {\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn false;\n\t\t}","commit_id":"340b353b9845d5934638bb66111bc7f62ce4e1d6","url":"https://github.com/eclipse/xtext"},{"original_method":"@Override\n\t\tprotected boolean matches(EPackageDescriptor ePackageDescriptor) {\n\t\t\treturn ((indexingDate == UNSET_DATE || indexingDate == ePackageDescriptor.getIndexingDate()) \n\t\t\t\t\t&& (namePattern == null || namePattern.equals(ePackageDescriptor.getName()))\n\t\t\t\t\t&& (nsURIPattern == null || nsURIPattern.equals(ePackageDescriptor.getNsURI())));\n\t\t}","id":55568,"modified_method":"@Override\n\t\tprotected boolean matches(EPackageDescriptor ePackageDescriptor) {\n\t\t\treturn ((indexingDate == UNSET_DATE || indexingDate == ePackageDescriptor.getIndexingDate())\n\t\t\t\t\t&& matchesGlobbing(ePackageDescriptor.getName(), namePattern) && matchesGlobbing(ePackageDescriptor\n\t\t\t\t\t.getNsURI(), nsURIPattern));\n\t\t}","commit_id":"340b353b9845d5934638bb66111bc7f62ce4e1d6","url":"https://github.com/eclipse/xtext"},{"original_method":"public static void feedEPackagesFromRegistry(IIndexStore indexStore) {\n\t\tfor (boolean hasChanged = true; hasChanged;) {\n\t\t\tfor (String nsURI : EPackage.Registry.INSTANCE.keySet()) {\n\t\t\t\thasChanged = false;\n\t\t\t\tEPackageDescriptor storedEPackages = indexStore.ePackageDAO().createQuery().nsURI(nsURI)\n\t\t\t\t\t\t.executeSingleResult();\n\t\t\t\tif (storedEPackages == null) {\n\t\t\t\t\thasChanged = true;\n\t\t\t\t\tEPackage ePackage = EPackage.Registry.INSTANCE.getEPackage(nsURI);\n\t\t\t\t\tindexStore.indexFeeder().index(ePackage, true);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}","id":55569,"modified_method":"public static void feedEPackagesFromRegistry(IIndexStore indexStore) {\n\t\tfor (boolean hasChanged = true; hasChanged;) {\n\t\t\tList<String> nsURIs = new ArrayList<String>(EPackage.Registry.INSTANCE.keySet());\n\t\t\tfor (String nsURI : nsURIs) {\n\t\t\t\thasChanged = false;\n\t\t\t\tEPackageDescriptor storedEPackages = indexStore.ePackageDAO().createQuery().nsURI(nsURI)\n\t\t\t\t\t\t.executeSingleResult();\n\t\t\t\tif (storedEPackages == null) {\n\t\t\t\t\thasChanged = true;\n\t\t\t\t\tEPackage ePackage = EPackage.Registry.INSTANCE.getEPackage(nsURI);\n\t\t\t\t\tindexStore.indexFeeder().index(ePackage, true);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}","commit_id":"340b353b9845d5934638bb66111bc7f62ce4e1d6","url":"https://github.com/eclipse/xtext"},{"original_method":"public List<EClassDescriptor> index(EPackage ePackage, boolean isRecurseSubpackages) {\n\t\tEPackageDescriptor ePackageDescriptor = internalIndexEPackage(ePackage);\n\t\tList<EClassDescriptor> typeDescriptors = internalIndexEPackageContents(ePackage, ePackageDescriptor);\n\t\tif (isRecurseSubpackages) {\n\t\t\tfor (EPackage subPackage : ePackage.getESubpackages())\n\t\t\t\ttypeDescriptors.addAll(index(subPackage, isRecurseSubpackages));\n\t\t}\n\t\t// TODO Handle removed sub packages?\n\t\treturn typeDescriptors;\n\t}","id":55570,"modified_method":"public List<EClassDescriptor> index(EPackage ePackage, boolean isRecurseSubpackages) {\n\t\tEPackageDescriptor ePackageDescriptor = internalIndexEPackage(ePackage);\n\t\tList<EClassDescriptor> typeDescriptors = internalIndexEPackageContents(ePackage, ePackageDescriptor);\n\t\tif (isRecurseSubpackages) {\n\t\t\tfor (EPackage subPackage : ePackage.getESubpackages())\n\t\t\t\t// don't follow cross-resource references\n\t\t\t\tif (ePackage.eResource() == null || subPackage.eResource() == ePackage.eResource())\n\t\t\t\t\ttypeDescriptors.addAll(index(subPackage, isRecurseSubpackages));\n\t\t}\n\t\t// TODO Handle removed sub packages?\n\t\treturn typeDescriptors;\n\t}","commit_id":"340b353b9845d5934638bb66111bc7f62ce4e1d6","url":"https://github.com/eclipse/xtext"},{"original_method":"public Collection<SourceDesc> executeListResult() {\n\t\t\treturn lookup(target);\n\t\t}","id":55571,"modified_method":"public Collection<SourceDesc> executeListResult() {\n\t\t\treturn CollectionUtils.copyOrNull(lookup(target));\n\t\t}","commit_id":"340b353b9845d5934638bb66111bc7f62ce4e1d6","url":"https://github.com/eclipse/xtext"},{"original_method":"protected boolean matches(ResourceDescriptor resourceDescriptor) {\n\t\t\treturn ((uriPattern == null || uriPattern.equals(resourceDescriptor.getURI())) && (indexingDate == UNSET_DATE || indexingDate == resourceDescriptor\n\t\t\t\t\t.getIndexingDate()));\n\t\t}","id":55572,"modified_method":"protected boolean matches(ResourceDescriptor resourceDescriptor) {\n\t\t\treturn matchesGlobbing(resourceDescriptor.getURI(), uriPattern)\n\t\t\t\t\t&& (indexingDate == UNSET_DATE || indexingDate == resourceDescriptor.getIndexingDate());\n\t\t}","commit_id":"340b353b9845d5934638bb66111bc7f62ce4e1d6","url":"https://github.com/eclipse/xtext"},{"original_method":"@Override\n  protected void runChild(Runner runner, RunNotifier notifier) {\n    super.runChild(runner, notifier);\n    if (runner == children.get(children.size() - 1)) {\n      MpsTestsSupport.disposeEnv();\n    }\n  }","id":55573,"modified_method":"@Override\n  protected void runChild(Runner runner, RunNotifier notifier) {\n    WatchingRunNotifier runNotifier = new WatchingRunNotifier(notifier);\n    if (runner instanceof Sortable) {\n      ((Sortable) runner).sort(new Sorter(new OrderComparator()));\n    }\n    try {\n      super.runChild(runner, runNotifier);\n    } finally {\n      runNotifier.dispose();\n    }\n\n    if (runner == children.get(children.size() - 1)) {\n      MpsTestsSupport.disposeEnv();\n    }\n  }","commit_id":"bf80eb76e45b04dc6ceb6b4a38702ffc4a8b3674","url":"https://github.com/JetBrains/MPS"},{"original_method":"@Override\n  protected void runChild(Runner runner, RunNotifier notifier) {\n    super.runChild(runner, notifier);\n    if (runner == children.get(children.size() - 1)) {\n      MpsTestsSupport.disposeEnv();\n    }\n  }","id":55574,"modified_method":"@Override\n  protected void runChild(Runner runner, RunNotifier notifier) {\n    WatchingRunNotifier runNotifier = new WatchingRunNotifier(notifier);\n    try {\n      super.runChild(runner, runNotifier);\n    } finally {\n      PerformanceMessenger.getInstance().generateReport();\n      runNotifier.dispose();\n    }\n\n    if (runner == children.get(children.size() - 1)) {\n      MpsTestsSupport.disposeEnv();\n    }\n  }","commit_id":"52b0997c927f8d9a6d79830f8a9daac3f633b105","url":"https://github.com/JetBrains/MPS"},{"original_method":"public TestResult doRun(Test suite, boolean wait) {  //todo\n    if (mySendTree) {\n      try {\n        TreeSender.sendTree(this, suite);\n      }\n      catch (Exception e) {\n        //noinspection HardCodedStringLiteral\n        System.err.println(\"Internal Error occured.\");\n        e.printStackTrace(System.err);\n      }\n    }\n    return super.doRun(suite, wait);\n  }","id":55575,"modified_method":"public TestResult doRun(Test suite, boolean wait) {  //todo\n    try {\n      TreeSender.sendTree(this, suite, mySendTree);\n    }\n    catch (Exception e) {\n      //noinspection HardCodedStringLiteral\n      System.err.println(\"Internal Error occured.\");\n      e.printStackTrace(System.err);\n    }\n    return super.doRun(suite, wait);\n  }","commit_id":"ce7977ba38c6183acff6b7337b6610399a620938","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public int startRunnerWithArgs(String[] args, ArrayList listeners, boolean sendTree) {\n\n    final Request request = JUnit4TestRunnerUtil.buildRequest(args, sendTree);\n    if (request == null) return -1;\n    final Runner testRunner = request.getRunner();\n    try {\n      Description description = testRunner.getDescription();\n      if (request instanceof ClassRequest) {\n        description = getSuiteMethodDescription(request, description);\n      }\n      else if (request instanceof FilterRequest) {\n        description = getFilteredDescription(request, description);\n      }\n      if (sendTree) TreeSender.sendTree(this, description);\n    }\n    catch (Exception e) {\n      //noinspection HardCodedStringLiteral\n      System.err.println(\"Internal Error occured.\");\n      e.printStackTrace(System.err);\n    }\n\n    try {\n      final JUnitCore runner = new JUnitCore();\n      runner.addListener(myTestsListener);\n      for (Iterator iterator = listeners.iterator(); iterator.hasNext();) {\n        final IDEAJUnitListener junitListener = (IDEAJUnitListener)Class.forName((String)iterator.next()).newInstance();\n        runner.addListener(new RunListener() {\n          public void testStarted(Description description) throws Exception {\n            junitListener.testStarted(JUnit4ReflectionUtil.getClassName(description), JUnit4ReflectionUtil.getMethodName(description));\n          }\n\n          public void testFinished(Description description) throws Exception {\n            junitListener.testFinished(JUnit4ReflectionUtil.getClassName(description), JUnit4ReflectionUtil.getMethodName(description));\n          }\n        });\n      }\n      long startTime = System.currentTimeMillis();\n      Result result = runner.run(testRunner/*.sortWith(new Comparator() {\n        public int compare(Object d1, Object d2) {\n          return ((Description)d1).getDisplayName().compareTo(((Description)d2).getDisplayName());\n        }\n      })*/);\n      long endTime = System.currentTimeMillis();\n      long runTime = endTime - startTime;\n      if (sendTree) new TimeSender(myRegistry).printHeader(runTime);\n\n      if (!result.wasSuccessful()) {\n        return -1;\n      }\n      return 0;\n    }\n    catch (Exception e) {\n      e.printStackTrace(System.err);\n      return -2;\n    }\n  }","id":55576,"modified_method":"public int startRunnerWithArgs(String[] args, ArrayList listeners, boolean sendTree) {\n\n    final Request request = JUnit4TestRunnerUtil.buildRequest(args, sendTree);\n    if (request == null) return -1;\n    final Runner testRunner = request.getRunner();\n    try {\n      Description description = testRunner.getDescription();\n      if (request instanceof ClassRequest) {\n        description = getSuiteMethodDescription(request, description);\n      }\n      else if (request instanceof FilterRequest) {\n        description = getFilteredDescription(request, description);\n      }\n      TreeSender.sendTree(this, description, sendTree);\n    }\n    catch (Exception e) {\n      //noinspection HardCodedStringLiteral\n      System.err.println(\"Internal Error occured.\");\n      e.printStackTrace(System.err);\n    }\n\n    try {\n      final JUnitCore runner = new JUnitCore();\n      runner.addListener(myTestsListener);\n      for (Iterator iterator = listeners.iterator(); iterator.hasNext();) {\n        final IDEAJUnitListener junitListener = (IDEAJUnitListener)Class.forName((String)iterator.next()).newInstance();\n        runner.addListener(new RunListener() {\n          public void testStarted(Description description) throws Exception {\n            junitListener.testStarted(JUnit4ReflectionUtil.getClassName(description), JUnit4ReflectionUtil.getMethodName(description));\n          }\n\n          public void testFinished(Description description) throws Exception {\n            junitListener.testFinished(JUnit4ReflectionUtil.getClassName(description), JUnit4ReflectionUtil.getMethodName(description));\n          }\n        });\n      }\n      long startTime = System.currentTimeMillis();\n      Result result = runner.run(testRunner/*.sortWith(new Comparator() {\n        public int compare(Object d1, Object d2) {\n          return ((Description)d1).getDisplayName().compareTo(((Description)d2).getDisplayName());\n        }\n      })*/);\n      long endTime = System.currentTimeMillis();\n      long runTime = endTime - startTime;\n      if (sendTree) new TimeSender(myRegistry).printHeader(runTime);\n\n      if (!result.wasSuccessful()) {\n        return -1;\n      }\n      return 0;\n    }\n    catch (Exception e) {\n      e.printStackTrace(System.err);\n      return -2;\n    }\n  }","commit_id":"ce7977ba38c6183acff6b7337b6610399a620938","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private static int processChildren(boolean isJUnit4,\n                                     List listeners,\n                                     SegmentedOutputStream out,\n                                     SegmentedOutputStream err,\n                                     List parameters,\n                                     IdeaTestRunner testRunner,\n                                     List children,\n                                     int result,\n                                     boolean forkTillMethod, File workingDir) throws IOException, InterruptedException {\n    for (int i = 0, argsLength = children.size(); i < argsLength; i++) {\n      final Object child = children.get(i);\n      final List childTests = testRunner.getChildTests(child);\n      final int childResult = childTests.isEmpty() || !forkTillMethod\n                              ? runChild(child, isJUnit4, listeners, out, err, parameters, testRunner, forkTillMethod || workingDir != null, testRunner.getStartDescription(child), workingDir)\n                              : processChildren(isJUnit4, listeners, out, err, parameters, testRunner, childTests, result, forkTillMethod, workingDir);\n      result = Math.min(childResult, result);\n    }\n    return result;\n  }","id":55577,"modified_method":"private static int processChildren(boolean isJUnit4,\n                                     List listeners,\n                                     SegmentedOutputStream out,\n                                     SegmentedOutputStream err,\n                                     List parameters,\n                                     IdeaTestRunner testRunner,\n                                     List children,\n                                     int result,\n                                     boolean forkTillMethod, File workingDir) throws IOException, InterruptedException {\n    for (int i = 0, argsLength = children.size(); i < argsLength; i++) {\n      final Object child = children.get(i);\n      final List childTests = testRunner.getChildTests(child);\n      final int childResult;\n      if (childTests.isEmpty() || !forkTillMethod) {\n        final int startIndex = testRunner.getRegistry().getKnownObject(child);\n        childResult =\n          runChild(isJUnit4, listeners, out, err, parameters, testRunner.getStartDescription(child), workingDir,\n                   String.valueOf(startIndex));\n      }\n      else {\n        childResult =\n          processChildren(isJUnit4, listeners, out, err, parameters, testRunner, childTests, result, forkTillMethod, workingDir);\n      }\n      result = Math.min(childResult, result);\n    }\n    return result;\n  }","commit_id":"ce7977ba38c6183acff6b7337b6610399a620938","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"static int startForkedVMs(String workingDirsPath,\n                            String[] args,\n                            boolean isJUnit4,\n                            List listeners,\n                            SegmentedOutputStream out,\n                            SegmentedOutputStream err,\n                            String forkMode,\n                            String path) throws Exception {\n    final List parameters = new ArrayList();\n    final BufferedReader bufferedReader = new BufferedReader(new FileReader(path));\n    try {\n      String line;\n      while ((line = bufferedReader.readLine()) != null) {\n        parameters.add(line);\n      }\n    }\n    finally {\n      bufferedReader.close();\n    }\n\n    IdeaTestRunner testRunner = (IdeaTestRunner)JUnitStarter.getAgentClass(isJUnit4).newInstance();\n    testRunner.setStreams(out, err, 0);\n    final Object description = testRunner.getTestToStart(args);\n    if (description == null) return -1;\n\n    TreeSender.sendTree(testRunner, description);\n\n    long time = System.currentTimeMillis();\n\n    int result = 0;\n    if (workingDirsPath == null || new File(workingDirsPath).length() == 0) {\n       final List children = testRunner.getChildTests(description);\n       final boolean forkTillMethod = forkMode.equalsIgnoreCase(\"method\");\n       result = processChildren(isJUnit4, listeners, out, err, parameters, testRunner, children, 0, forkTillMethod, null);\n    } else {\n      final BufferedReader perDirReader = new BufferedReader(new FileReader(workingDirsPath));\n      try {\n        final String packageName = perDirReader.readLine();\n        String workingDir;\n        while ((workingDir = perDirReader.readLine()) != null) {\n          try {\n            File tempFile = File.createTempFile(\"idea_junit\", \".tmp\");\n            tempFile.deleteOnExit();\n\n            final FileOutputStream writer = new FileOutputStream(tempFile);\n\n            String firstName = null;\n            try {\n              final int classNamesSize = Integer.parseInt(perDirReader.readLine());\n              writer.write((packageName + \", working directory: \\'\" + workingDir + \"\\'\\n\").getBytes(\"UTF-8\")); //instead of package name\n              for (int i = 0; i < classNamesSize; i++) {\n                String className = perDirReader.readLine();\n                if (className == null) {\n                  System.err.println(\"Class name is expected. Working dir: \" + workingDir);\n                  return -1;\n                }\n                if (firstName == null) {\n                  firstName = className;\n                }\n                writer.write((className + \"\\n\").getBytes(\"UTF-8\"));\n              }\n            }\n            finally {\n              writer.close();\n            }\n\n            final Object rootDescriptor = findByClassName(testRunner, firstName, description);\n            final int childResult;\n            final File dir = new File(workingDir);\n            if (forkMode.equals(\"none\")) {\n              childResult =\n                runChild(rootDescriptor, isJUnit4, listeners, out, err, parameters, testRunner, false, \"@\" + tempFile.getAbsolutePath(), dir);\n            } else {\n              final List children = testRunner.getChildTests(rootDescriptor);\n              final boolean forkTillMethod = forkMode.equalsIgnoreCase(\"method\");\n              childResult = processChildren(isJUnit4, listeners, out, err, parameters, testRunner, children, result, forkTillMethod, dir);\n            }\n            result = Math.min(childResult, result);\n          }\n          catch (Exception e) {\n            e.printStackTrace();\n          }\n        }\n      }\n      finally {\n        perDirReader.close();\n      }\n    }\n\n    time = System.currentTimeMillis() - time;\n    new TimeSender(testRunner.getRegistry()).printHeader(time);\n    return result;\n  }","id":55578,"modified_method":"static int startForkedVMs(String workingDirsPath,\n                            String[] args,\n                            boolean isJUnit4,\n                            List listeners,\n                            SegmentedOutputStream out,\n                            SegmentedOutputStream err,\n                            String forkMode,\n                            String path) throws Exception {\n    final List parameters = new ArrayList();\n    final BufferedReader bufferedReader = new BufferedReader(new FileReader(path));\n    try {\n      String line;\n      while ((line = bufferedReader.readLine()) != null) {\n        parameters.add(line);\n      }\n    }\n    finally {\n      bufferedReader.close();\n    }\n\n    IdeaTestRunner testRunner = (IdeaTestRunner)JUnitStarter.getAgentClass(isJUnit4).newInstance();\n    testRunner.setStreams(out, err, 0);\n    final Object description = testRunner.getTestToStart(args);\n    if (description == null) return -1;\n\n    TreeSender.sendTree(testRunner, description, true);\n\n    long time = System.currentTimeMillis();\n\n    int result = 0;\n    if (workingDirsPath == null || new File(workingDirsPath).length() == 0) {\n       final List children = testRunner.getChildTests(description);\n       final boolean forkTillMethod = forkMode.equalsIgnoreCase(\"method\");\n       result = processChildren(isJUnit4, listeners, out, err, parameters, testRunner, children, 0, forkTillMethod, null);\n    } else {\n      final BufferedReader perDirReader = new BufferedReader(new FileReader(workingDirsPath));\n      try {\n        final String packageName = perDirReader.readLine();\n        String workingDir;\n        while ((workingDir = perDirReader.readLine()) != null) {\n          try {\n            File tempFile = File.createTempFile(\"idea_junit\", \".tmp\");\n            tempFile.deleteOnExit();\n\n            final FileOutputStream writer = new FileOutputStream(tempFile);\n\n            List classNames = new ArrayList();\n            try {\n              final int classNamesSize = Integer.parseInt(perDirReader.readLine());\n              writer.write((packageName + \", working directory: \\'\" + workingDir + \"\\'\\n\").getBytes(\"UTF-8\")); //instead of package name\n              for (int i = 0; i < classNamesSize; i++) {\n                String className = perDirReader.readLine();\n                if (className == null) {\n                  System.err.println(\"Class name is expected. Working dir: \" + workingDir);\n                  return -1;\n                }\n                classNames.add(className);\n                writer.write((className + \"\\n\").getBytes(\"UTF-8\"));\n              }\n            }\n            finally {\n              writer.close();\n            }\n\n            final Object rootDescriptor = findByClassName(testRunner, (String)classNames.get(0), description);\n            final int childResult;\n            final File dir = new File(workingDir);\n            if (forkMode.equals(\"none\")) {\n              childResult =\n                runChild(isJUnit4, listeners, out, err, parameters, \"@\" + tempFile.getAbsolutePath(), dir,\n                         String.valueOf(testRunner.getRegistry().getKnownObject(rootDescriptor) - 1));\n            } else {\n              final List children = new ArrayList(testRunner.getChildTests(description));\n              for (Iterator iterator = children.iterator(); iterator.hasNext(); ) {\n                if (!classNames.contains(testRunner.getTestClassName(iterator.next()))) {\n                  iterator.remove();\n                }\n              }\n              final boolean forkTillMethod = forkMode.equalsIgnoreCase(\"method\");\n              childResult = processChildren(isJUnit4, listeners, out, err, parameters, testRunner, children, result, forkTillMethod, dir);\n            }\n            result = Math.min(childResult, result);\n          }\n          catch (Exception e) {\n            e.printStackTrace();\n          }\n        }\n      }\n      finally {\n        perDirReader.close();\n      }\n    }\n\n    time = System.currentTimeMillis() - time;\n    new TimeSender(testRunner.getRegistry()).printHeader(time);\n    return result;\n  }","commit_id":"ce7977ba38c6183acff6b7337b6610399a620938","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private static int runChild(Object child,\n                              boolean isJUnit4,\n                              List listeners,\n                              SegmentedOutputStream out,\n                              SegmentedOutputStream err,\n                              List parameters,\n                              IdeaTestRunner testRunner,\n                              boolean forkTillMethod,\n                              String description,\n                              File workingDir) throws IOException, InterruptedException {\n    //noinspection SSBasedInspection\n    final File tempFile = File.createTempFile(\"fork\", \"test\");\n    final String testOutputPath = tempFile.getAbsolutePath();\n    final int knownObject = testRunner.getRegistry().getKnownObject(child);\n\n    final ProcessBuilder builder = new ProcessBuilder();\n    builder.add(parameters);\n    builder.add(JUnitForkedStarter.class.getName());\n    builder.add(testOutputPath);\n    builder.add(String.valueOf(knownObject + (forkTillMethod ? 0 : 1)));\n    builder.add(String.valueOf(isJUnit4));\n    builder.add(description);\n    builder.add(listeners);\n    builder.setWorkingDir(workingDir);\n\n    final Process exec = builder.createProcess();\n    final int result = exec.waitFor();\n    ForkedVMWrapper.readWrapped(testOutputPath, out.getPrintStream(), err.getPrintStream());\n    return result;\n  }","id":55579,"modified_method":"private static int runChild(boolean isJUnit4,\n                              List listeners,\n                              SegmentedOutputStream out,\n                              SegmentedOutputStream err,\n                              List parameters,\n                              String description,\n                              File workingDir, \n                              String startIndex) throws IOException, InterruptedException {\n    //noinspection SSBasedInspection\n    final File tempFile = File.createTempFile(\"fork\", \"test\");\n    final String testOutputPath = tempFile.getAbsolutePath();\n\n    final ProcessBuilder builder = new ProcessBuilder();\n    builder.add(parameters);\n    builder.add(JUnitForkedStarter.class.getName());\n    builder.add(testOutputPath);\n    builder.add(startIndex);\n    builder.add(String.valueOf(isJUnit4));\n    builder.add(description);\n    builder.add(listeners);\n    builder.setWorkingDir(workingDir);\n\n    final Process exec = builder.createProcess();\n    final int result = exec.waitFor();\n    ForkedVMWrapper.readWrapped(testOutputPath, out.getPrintStream(), err.getPrintStream());\n    return result;\n  }","commit_id":"ce7977ba38c6183acff6b7337b6610399a620938","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public static void sendTree(IdeaTestRunner runner, Object suite) {\n    Packet packet = runner.getRegistry().createPacket();\n    packet.addString(PoolOfDelimiters.TREE_PREFIX);\n    Set objects = new HashSet();\n    sendNode(runner, suite, packet, objects);\n    for (Iterator iterator = objects.iterator(); iterator.hasNext();) {\n      ((Packet)iterator.next()).send();\n    }\n    packet.addString(\"\\n\");\n    packet.send();\n  }","id":55580,"modified_method":"public static void sendTree(IdeaTestRunner runner, Object suite, boolean sendTree) {\n    Packet packet = runner.getRegistry().createPacket();\n    packet.addString(PoolOfDelimiters.TREE_PREFIX);\n    Set objects = new HashSet();\n    sendNode(runner, suite, packet, objects);\n    if (sendTree) {\n      for (Iterator iterator = objects.iterator(); iterator.hasNext();) {\n        ((Packet)iterator.next()).send();\n      }\n      packet.addString(\"\\n\");\n      packet.send();\n    }\n  }","commit_id":"ce7977ba38c6183acff6b7337b6610399a620938","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public static void updateWalrusUrl() {\n\t\tList<ServiceConfiguration> walrusConfigs;\n\t\ttry {\n\t\t\twalrusConfigs = ServiceConfigurations.list( Walrus.class );\n\t\t\tif(walrusConfigs.size() > 0) {\n\t\t\t  ServiceConfiguration walrusConfig = walrusConfigs.get(0);\n\t\t\t\tWALRUS_URL = ServiceUris.remote( walrusConfig ).toASCIIString( );\n\t\t\t\tStorageProperties.enableSnapshots = true;\n\t\t\t\tLOG.info(\"Setting WALRUS_URL to: \" + WALRUS_URL);\n\t\t\t} else {\n\t\t\t\tLOG.warn(\"Could not obtain walrus information. Snapshot functionality may be unavailable. Have you registered Walrus?\");\n\t\t\t\tStorageProperties.enableSnapshots = false;\n\t\t\t}\n\t\t} catch (PersistenceException e) {\n\t\t\tLOG.warn(\"Could not obtain walrus information. Snapshot functionality may be unavailable. Have you registered Walrus?\");\n\t\t\tStorageProperties.enableSnapshots = false;\n\t\t}\t\t\n\t}","id":55581,"modified_method":"public static void updateWalrusUrl() {\n\t\ttry {\n\t\t\tServiceConfiguration walrusConfig = Topology.lookup(Walrus.class);\n\t\t\tWALRUS_URL = ServiceUris.remote( walrusConfig ).toASCIIString( );\n\t\t\tStorageProperties.enableSnapshots = true;\n\t\t\tLOG.info(\"Setting WALRUS_URL to: \" + WALRUS_URL);\n\t\t} catch (Exception e) {\n\t\t\tLOG.warn(\"Could not obtain walrus information. Snapshot functionality may be unavailable. Have you registered Walrus?\");\n\t\t\tStorageProperties.enableSnapshots = false;\n\t\t}\t\t\n\t}","commit_id":"be3621d9c80b2b78faeeeab06b4c78319ae3947b","url":"https://github.com/eucalyptus/eucalyptus"},{"original_method":"/**\n   * Set the cluster configuration using the UI input.\n   * \n   * @param input\n   */\n  public static void setClusterConfiguration( final SearchResultRow input ) throws EucalyptusServiceException {\n    try {\n      ServiceConfiguration clusterConf = ServiceConfigurations.lookupByName( ClusterController.class, input.getField( 1 ) );\n      deserializeClusterConfiguration( clusterConf, input );\n      EntityWrapper.get( clusterConf ).mergeAndCommit( clusterConf );\n    } catch ( Exception e ) {\n      LOG.error( \"Failed to set cluster configuration\" );\n      LOG.debug( e, e );\n      throw new EucalyptusServiceException( \"Failed to set cluster configuration\", e );\n    }\n  }","id":55582,"modified_method":"/**\n\t * Set the cluster configuration using the UI input.\n\t * \n\t * @param input\n\t */\n\tpublic static void setClusterConfiguration( final SearchResultRow input ) throws EucalyptusServiceException {\n\t\ttry {\n\t\t\t//set props for all in the same partition\n\t\t\tNavigableSet<ServiceConfiguration> configs = Components.lookup(ClusterController.class).lookupServiceConfigurations();\n\t\t\tfor ( ServiceConfiguration c : configs ) {\n\t\t\t\tif (input.getField(2).equals(c.getPartition())) {\n\t\t\t\t\tdeserializeClusterConfiguration( c, input );\n\t\t\t\t\tEntityWrapper.get( c ).mergeAndCommit( c );\n\t\t\t\t}\n\t\t\t}\n\t\t} catch ( Exception e ) {\n\t\t\tLOG.error( \"Failed to set cluster configuration\" );\n\t\t\tLOG.debug( e, e );\n\t\t\tthrow new EucalyptusServiceException( \"Failed to set cluster configuration\", e );\n\t\t}\n\t}","commit_id":"77ebb2623e488d1f82d26fb6f13efd422479d5b3","url":"https://github.com/eucalyptus/eucalyptus"},{"original_method":"/**\n   * Set properties for a storage controller from UI input.\n   * \n   * @param input\n   */\n  public static void setStorageConfiguration( SearchResultRow input ) throws EucalyptusServiceException  {\n    int i = 0;\n    i++;//id\n    String name = input.getField( i++ );\n    String partition = input.getField( i++ );\n    i++;//type\n    String host = input.getField( i++ );\n    Integer port = null;\n    try {\n      port = Integer.parseInt( input.getField( i++ ) );\n    } catch ( Exception e ) {\n      LOG.error( \"Failed to parse port for storage configuration from UI input\" );\n      return;\n    }\n    ArrayList<ComponentProperty> properties = Lists.newArrayList( );\n    deserializeComponentProperties( properties, input, i );\n    \n    ServiceConfiguration scConfig = ServiceConfigurations.lookupByName( Storage.class, name );\n    final UpdateStorageConfigurationType updateStorageConfiguration = new UpdateStorageConfigurationType( );\n    updateStorageConfiguration.setName( scConfig.getPartition( ) );\n    updateStorageConfiguration.setStorageParams( properties );\n\n    Dispatcher scDispatch = ServiceDispatcher.lookup( scConfig );\n    try {\n      scDispatch.send( updateStorageConfiguration );\n    } catch ( Exception e ) {\n      LOG.error( \"Error sending update configuration message to storage controller: \" + updateStorageConfiguration );\n      LOG.error( \"The storage controller's configuration may be out of sync!\" );\n      LOG.debug( e, e );\n      throw new EucalyptusServiceException( \"Failed to update storage configuration\", e ); \n    }\n  }","id":55583,"modified_method":"/**\n\t * Set properties for a storage controller from UI input.\n\t * \n\t * @param input\n\t */\n\tpublic static void setStorageConfiguration( SearchResultRow input ) throws EucalyptusServiceException  {\n\t\tint i = 0;\n\t\ti++;//id\n\t\tString name = input.getField( i++ );\n\t\tString partition = input.getField( i++ );\n\t\ti++;//type\n\t\tString host = input.getField( i++ );\n\t\tInteger port = null;\n\t\ttry {\n\t\t\tport = Integer.parseInt( input.getField( i++ ) );\n\t\t} catch ( Exception e ) {\n\t\t\tLOG.error( \"Failed to parse port for storage configuration from UI input\" );\n\t\t\treturn;\n\t\t}\n\t\ti++; //status\n\t\tArrayList<ComponentProperty> properties = Lists.newArrayList( );\n\t\tdeserializeComponentProperties( properties, input, i );\n\n\t\t//Get enabled component for partition. Send to enabled component corresponding to partition.\n\t\tNavigableSet<ServiceConfiguration> configs = Components.lookup(Storage.class).lookupServiceConfigurations();\n\t\tfor ( ServiceConfiguration c : configs ) {\n\t\t\tif ( partition.equals(c.getPartition()) && Component.State.ENABLED.equals(c.lookupState())) {\n\t\t\t\tfinal UpdateStorageConfigurationType updateStorageConfiguration = new UpdateStorageConfigurationType( );\n\t\t\t\tupdateStorageConfiguration.setName( c.getPartition( ) );\n\t\t\t\tupdateStorageConfiguration.setStorageParams( properties );\n\t\t\t\tDispatcher scDispatch = ServiceDispatcher.lookup( c );\n\t\t\t\ttry {\n\t\t\t\t\tscDispatch.send( updateStorageConfiguration );\n\t\t\t\t} catch ( Exception e ) {\n\t\t\t\t\tLOG.error( \"Error sending update configuration message to storage controller: \" + updateStorageConfiguration );\n\t\t\t\t\tLOG.error( \"The storage controller's configuration may be out of sync!\" );\n\t\t\t\t\tLOG.debug( e, e );\n\t\t\t\t\tthrow new EucalyptusServiceException( \"Failed to update storage configuration\", e ); \n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}","commit_id":"77ebb2623e488d1f82d26fb6f13efd422479d5b3","url":"https://github.com/eucalyptus/eucalyptus"},{"original_method":"/**\n   * @return the storage configurations for UI display.\n   */\n  public static List<SearchResultRow> getStorageConfiguration( ) {\n    List<SearchResultRow> results = Lists.newArrayList( );\n    for ( final ServiceConfiguration cc : ServiceConfigurations.list( ClusterController.class ) ) {\n      StorageControllerConfiguration c;\n      try {\n    \tc = Partitions.lookupService(Storage.class, cc.getPartition());  \n        List<ComponentProperty> properties = Lists.newArrayList( );\n        try {\n          GetStorageConfigurationResponseType getStorageConfigResponse = sendForStorageInfo( cc, c );\n          if ( c.getPartition( ).equals( getStorageConfigResponse.getName( ) ) ) {\n            properties.addAll( getStorageConfigResponse.getStorageParams( ) );\n          } else {\n            LOG.debug( \"Unexpected storage controller name: \" + getStorageConfigResponse.getName( ), new Exception( ) );\n            LOG.debug( \"Expected configuration for SC related to CC: \" + LogUtil.dumpObject( c ) );\n            LOG.debug( \"Received configuration for SC related to CC: \" + LogUtil.dumpObject( getStorageConfigResponse ) );\n          }\n        } catch ( Exception e ) {\n          LOG.debug( \"Got an error while trying to communicate with remote storage controller\", e );\n        }\n        results.add( createStorageConfiguration( STORAGE_TYPE, c.getName( ), c.getPartition( ), c.getHostName( ), c.getPort( ), properties, c.lookupState().toString() ) );\n      } catch ( Exception e1 ) {\n        results.add( createStorageConfiguration( STORAGE_TYPE, SC_DEFAULT_NAME, SC_DEFAULT_NAME, SC_DEFAULT_HOST, SC_DEFAULT_PORT, new ArrayList<ComponentProperty>( ), UNKNOWN_STATE ) );\n      }\n    }\n    return results;\n  }","id":55584,"modified_method":"/**\n\t * @return the storage configurations for UI display.\n\t */\n\tpublic static List<SearchResultRow> getStorageConfiguration( ) {\n\t\tList<SearchResultRow> results = Lists.newArrayList( );\n\t\t//StorageControllerConfiguration c;\n\t\tHashMap<String, List<ComponentProperty>> configMap = new HashMap<String, List<ComponentProperty>> (); \n\n\t\tNavigableSet<ServiceConfiguration> configs = Components.lookup(Storage.class).lookupServiceConfigurations();\n\t\tfor ( ServiceConfiguration c : configs ) {\n\t\t\tif(Component.State.ENABLED.equals(c.lookupState())) {\n\t\t\t\t//send for config and add result row\n\t\t\t\tList<ComponentProperty> properties = Lists.newArrayList( );\n\t\t\t\ttry {\n\t\t\t\t\tGetStorageConfigurationResponseType getStorageConfigResponse = sendForStorageInfo( c );\n\t\t\t\t\tif ( c.getPartition( ).equals( getStorageConfigResponse.getName( ) ) ) {\n\t\t\t\t\t\tproperties.addAll( getStorageConfigResponse.getStorageParams( ) );\n\t\t\t\t\t} else {\n\t\t\t\t\t\tLOG.debug( \"Unexpected storage controller name: \" + getStorageConfigResponse.getName( ), new Exception( ) );\n\t\t\t\t\t\tLOG.debug( \"Expected configuration for SC related to CC: \" + LogUtil.dumpObject( c ) );\n\t\t\t\t\t\tLOG.debug( \"Received configuration for SC related to CC: \" + LogUtil.dumpObject( getStorageConfigResponse ) );\n\t\t\t\t\t}\n\t\t\t\t} catch ( Exception e ) {\n\t\t\t\t\tLOG.debug( \"Got an error while trying to communicate with remote storage controller\", e );\n\t\t\t\t}\n\t\t\t\tconfigMap.put(c.getPartition(), properties );    \t\n\t\t\t}\n\t\t}\n\n\t\tfor ( ServiceConfiguration c : configs ) {\n\t\t\t//add result row corresponding to partition.\n\t\t\tList<ComponentProperty> properties = configMap.get(c.getPartition());\n\t\t\tif(properties != null) {\n\t\t\t\tresults.add( createStorageConfiguration( STORAGE_TYPE, c.getName( ), c.getPartition( ), c.getHostName( ), c.getPort( ), properties, c.lookupState().toString() ) );\n\t\t\t} else {\n\t\t\t\tresults.add( createStorageConfiguration( STORAGE_TYPE, SC_DEFAULT_NAME, SC_DEFAULT_NAME, SC_DEFAULT_HOST, SC_DEFAULT_PORT, new ArrayList<ComponentProperty>( ), UNKNOWN_STATE ) );\n\t\t\t}\n\t\t}    \t\n\t\treturn results;\n\t}","commit_id":"77ebb2623e488d1f82d26fb6f13efd422479d5b3","url":"https://github.com/eucalyptus/eucalyptus"},{"original_method":"private static GetStorageConfigurationResponseType sendForStorageInfo( ServiceConfiguration cc, ServiceConfiguration c ) throws EucalyptusCloudException {\n    GetStorageConfigurationType getStorageConfiguration = new GetStorageConfigurationType( c.getPartition( ) );\n    Dispatcher scDispatch = ServiceDispatcher.lookup( c );\n    GetStorageConfigurationResponseType getStorageConfigResponse = scDispatch.send( getStorageConfiguration );\n    return getStorageConfigResponse;\n  }","id":55585,"modified_method":"private static GetStorageConfigurationResponseType sendForStorageInfo( ServiceConfiguration c ) throws EucalyptusCloudException {\n\t\tGetStorageConfigurationType getStorageConfiguration = new GetStorageConfigurationType( c.getPartition( ) );\n\t\tDispatcher scDispatch = ServiceDispatcher.lookup( c );\n\t\tGetStorageConfigurationResponseType getStorageConfigResponse = scDispatch.send( getStorageConfiguration );\n\t\treturn getStorageConfigResponse;\n\t}","commit_id":"77ebb2623e488d1f82d26fb6f13efd422479d5b3","url":"https://github.com/eucalyptus/eucalyptus"},{"original_method":"private static void serializeClusterConfiguration( ServiceConfiguration serviceConf, SearchResultRow result ) {\n    ClusterConfiguration clusterConf = (ClusterConfiguration) serviceConf;//NOTE:GRZE: depending on referencing the Cluster-specific configuration type is not a safe assumption as that is a component-private type\n    // Common\n    result.addField( makeConfigId( clusterConf.getName( ), CLUSTER_TYPE ) );\n    result.addField( clusterConf.getName( ) );\n    result.addField( clusterConf.getPartition( ) );\n    result.addField( CLUSTER_TYPE );\n    result.addField( clusterConf.getHostName( ) );\n    result.addField( clusterConf.getPort( ) == null ? null : clusterConf.getPort( ).toString( ) );\n    result.addField( clusterConf.lookupState().toString( ) );\n    // Specific\n    result.addField( clusterConf.getMinNetworkTag( ) == null ? \"0\" : clusterConf.getMinNetworkTag( ).toString( ) );\n    result.addField( clusterConf.getMaxNetworkTag( ) == null ? \"0\" : clusterConf.getMaxNetworkTag( ).toString( ) );\n  }","id":55586,"modified_method":"private static void serializeClusterConfiguration( ServiceConfiguration serviceConf, String minNetworkTag, String maxNetworkTag, SearchResultRow result ) {\n\t\t// Common\n\t\tresult.addField( makeConfigId( serviceConf.getName( ), CLUSTER_TYPE ) );\n\t\tresult.addField( serviceConf.getName( ) );\n\t\tresult.addField( serviceConf.getPartition( ) );\n\t\tresult.addField( CLUSTER_TYPE );\n\t\tresult.addField( serviceConf.getHostName( ) );\n\t\tresult.addField( serviceConf.getPort( ) == null ? null : serviceConf.getPort( ).toString( ) );\n\t\tresult.addField( serviceConf.lookupState().toString( ) );\n\t\t// Specific\n\t\tresult.addField( minNetworkTag );\n\t\tresult.addField( maxNetworkTag );\n\t}","commit_id":"77ebb2623e488d1f82d26fb6f13efd422479d5b3","url":"https://github.com/eucalyptus/eucalyptus"},{"original_method":"/**\n   * @return the list of cluster configurations for UI display.\n   */\n  public static List<SearchResultRow> getClusterConfigurations( ) {\n    List<SearchResultRow> results = Lists.newArrayList( );\n    try {\n      for ( ServiceConfiguration c : ServiceConfigurations.list( ClusterController.class ) ) {\n        SearchResultRow row = new SearchResultRow( );\n        row.setExtraFieldDescs( CLUSTER_CONFIG_EXTRA_FIELD_DESCS );\n        serializeClusterConfiguration( c, row );\n        results.add( row );\n      }\n    } catch ( Exception e ) {\n      LOG.debug( \"Got an error while trying to retrieving storage controller configuration list\", e );\n    }    \n    return results;\n  }","id":55587,"modified_method":"/**\n\t * @return the list of cluster configurations for UI display.\n\t */\n\tpublic static List<SearchResultRow> getClusterConfigurations( ) {\n\t\tList<SearchResultRow> results = Lists.newArrayList( );\n\t\tHashMap<String, List<String>> configProps = new HashMap<String, List<String>>();\n\t\tNavigableSet<ServiceConfiguration> configs = Components.lookup(ClusterController.class).lookupServiceConfigurations();\n\t\tfor (ServiceConfiguration c : configs ) {\n\t\t\tif (!configProps.containsKey(c.getPartition())) {\n\t\t\t\t//This is bad. We should never directly have to cast\n\t\t\t\t//This entire class should never reference backend props directly\n\n\t\t\t\t//Pick the first one. It shouldn't matter which one.\n\t\t\t\tClusterConfiguration config = (ClusterConfiguration) c;\n\t\t\t\tList<String> props = new ArrayList<String>();\n\t\t\t\tprops.add(config.getMinNetworkTag() == null ? \"0\" : config.getMinNetworkTag().toString());\n\t\t\t\tprops.add(config.getMaxNetworkTag() == null ? \"0\" : config.getMaxNetworkTag().toString());\n\t\t\t\tconfigProps.put(c.getPartition(), props);\n\t\t\t}\t\t\t\n\t\t}\n\t\tfor (ServiceConfiguration c : configs ) {\n\t\t\tList<String> props = configProps.get(c.getPartition());\n\t\t\tif(props != null) {\n\t\t\t\tSearchResultRow row = new SearchResultRow( );\n\t\t\t\trow.setExtraFieldDescs( CLUSTER_CONFIG_EXTRA_FIELD_DESCS );\n\t\t\t\t//ugly: this is temporary and needs to go away\n\t\t\t\tserializeClusterConfiguration( c, props.get(0), props.get(1), row );\n\t\t\t\tresults.add( row );\n\t\t\t} else {\n\t\t\t\tLOG.debug( \"Got an error while trying to retrieving storage controller configuration list\");\n\t\t\t}\t\n\t\t}\n\t\treturn results;\n\t}","commit_id":"77ebb2623e488d1f82d26fb6f13efd422479d5b3","url":"https://github.com/eucalyptus/eucalyptus"},{"original_method":"/**\n\t * Set Walrus configuration using UI input.\n\t * \n\t * @param input\n\t */\n\tpublic static void setWalrusConfiguration( SearchResultRow input ) throws EucalyptusServiceException  {\n\t\tArrayList<ComponentProperty> properties = Lists.newArrayList( );\n\t\tdeserializeComponentProperties( properties, input, COMMON_FIELD_DESCS.size( ) );\n\t\tUpdateWalrusConfigurationType updateWalrusConfiguration = new UpdateWalrusConfigurationType( );\n\t\tupdateWalrusConfiguration.setName( WalrusProperties.NAME );\n\t\tupdateWalrusConfiguration.setProperties( properties );\n\t\tDispatcher scDispatch = ServiceDispatcher.lookupSingle( Components.lookup( WALRUS_NAME ) );\n\t\ttry {\n\t\t\tscDispatch.send( updateWalrusConfiguration );\n\t\t} catch ( Exception e ) {\n\t\t\tLOG.error( \"Failed to set Walrus configuration\", e );\n\t\t\tLOG.debug( e, e );\n\t\t\tthrow new EucalyptusServiceException( \"Failed to set Walrus configuration\", e );\n\t\t}\n\t}","id":55588,"modified_method":"/**\n\t * Set Walrus configuration using UI input.\n\t *\t \n\t * @param input\n\t */\n\tpublic static void setWalrusConfiguration( SearchResultRow input ) throws EucalyptusServiceException  {\n\t\tArrayList<ComponentProperty> properties = Lists.newArrayList( );\n\t\tdeserializeComponentProperties( properties, input, COMMON_FIELD_DESCS.size( ) );\n\n\t        NavigableSet<ServiceConfiguration> configs = Components.lookup(Walrus.class).lookupServiceConfigurations();\n                for ( ServiceConfiguration c : configs ) {\n\t\t\tif ( input.getField(2).equals(c.getPartition()) && Component.State.ENABLED.equals(c.lookupState())) {\n\t\t\t\tUpdateWalrusConfigurationType updateWalrusConfiguration = new UpdateWalrusConfigurationType( );\n\t\t\t\tupdateWalrusConfiguration.setName( c.getPartition() );\n\t\t\t\tupdateWalrusConfiguration.setProperties( properties );\n\t\t\t\tDispatcher scDispatch = ServiceDispatcher.lookup( c );\n\t\t\t\ttry {\n\t\t\t\t\tscDispatch.send( updateWalrusConfiguration );\n\t\t\t\t} catch ( Exception e ) {\n\t\t\t\t\tLOG.error( \"Failed to set Walrus configuration\", e );\n\t\t\t\t\tLOG.debug( e, e );\n\t\t\t\t\tthrow new EucalyptusServiceException( \"Failed to set Walrus configuration\", e );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\n\t}","commit_id":"ab3a14ee5c1483069e0840e036100fd67b5ec81d","url":"https://github.com/eucalyptus/eucalyptus"},{"original_method":"/**\n\t * @return the list of Walrus configurations for UI display.\n\t */\n\tpublic static List<SearchResultRow> getWalrusConfiguration( ) {\n\t\tList<SearchResultRow> results = new ArrayList<SearchResultRow>( );\n\t\ttry {\n\t\t\tfor ( ServiceConfiguration c : ServiceConfigurations.list( Walrus.class ) ) {\n\t\t\t\tGetWalrusConfigurationType getWalrusConfiguration = new GetWalrusConfigurationType( WalrusProperties.NAME );\n\t\t\t\tDispatcher scDispatch = ServiceDispatcher.lookupSingle( Components.lookup( WALRUS_NAME ) );\n\t\t\t\tGetWalrusConfigurationResponseType getWalrusConfigResponse = scDispatch.send( getWalrusConfiguration );\n\t\t\t\tresults.add( createStorageConfiguration( WALRUS_TYPE, c.getName( ), c.getPartition( ), c.getHostName( ), c.getPort( ), getWalrusConfigResponse.getProperties( ), c.lookupState().toString() ) );\n\t\t\t}\n\t\t} catch ( Exception ex ) {\n\t\t\tLOG.error( \"Failed to retrieve walrus configuration\", ex );\n\t\t\tLOG.debug( ex , ex );\n\t\t}\n\t\treturn results;    \n\t}","id":55589,"modified_method":"/**\n\t * @return the list of Walrus configurations for UI display.\n\t */\n\tpublic static List<SearchResultRow> getWalrusConfiguration( ) {\n\t\tList<SearchResultRow> results = new ArrayList<SearchResultRow>( );\n\t\tHashMap<String, List<ComponentProperty>> configMap = new HashMap<String, List<ComponentProperty>> (); \n\t\tNavigableSet<ServiceConfiguration> configs = Components.lookup(Walrus.class).lookupServiceConfigurations();\n\t\tfor ( ServiceConfiguration c : configs ) {\n\t\t\tif(Component.State.ENABLED.equals(c.lookupState())) {\n\t\t\t\t//send for config and add result row\n\t\t\t\tList<ComponentProperty> properties = Lists.newArrayList( );\n\t\t\t\t\n\t\t\t\ttry {\n\t\t\t\t\t\tGetWalrusConfigurationType getWalrusConfiguration = new GetWalrusConfigurationType( WalrusProperties.NAME );\n\t\t\t\t\t\tDispatcher walrusDispatch = ServiceDispatcher.lookup( c );\n\t\t\t\t\t\tGetWalrusConfigurationResponseType getWalrusConfigResponse = walrusDispatch.send( getWalrusConfiguration );\n\t\t\t\t\t\tconfigMap.put( c.getPartition(), getWalrusConfigResponse.getProperties( ));\n\t\t\t\t} catch ( Exception ex ) {\n\t\t\t\t\tLOG.error( \"Failed to retrieve walrus configuration\", ex );\n\t\t\t\t\tLOG.debug( ex , ex );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfor ( ServiceConfiguration c : configs ) {\n\t\t\tList<ComponentProperty> properties = configMap.get(c.getPartition()); \n\t\t\tif (properties != null) {\n\t\t\t\tresults.add( createStorageConfiguration( WALRUS_TYPE, c.getName( ), c.getPartition( ), c.getHostName( ), c.getPort( ), properties, c.lookupState().toString() ) );\n\t\t\t}\n\t\t}\n\t\treturn results;    \n\t}","commit_id":"ab3a14ee5c1483069e0840e036100fd67b5ec81d","url":"https://github.com/eucalyptus/eucalyptus"},{"original_method":"private static boolean doReplace(Project project, Editor editor, FindModel model, final Document document, int caretOffset,\n                                   boolean toPrompt, ReplaceDelegate delegate) {\n    FindManager findManager = FindManager.getInstance(project);\n    model = (FindModel)model.clone();\n    int occurrences = 0;\n\n    List<Pair<TextRange,String>> rangesToChange = new ArrayList<Pair<TextRange, String>>();\n\n    boolean replaced = false;\n    int offset = caretOffset;\n    while (offset >= 0 && offset < editor.getDocument().getTextLength()) {\n      caretOffset = offset;\n      FindResult result = doSearch(project, editor, offset, !replaced, model, toPrompt);\n      if (result == null) {\n        break;\n      }\n      int startResultOffset = result.getStartOffset();\n      model.setFromCursor(true);\n\n      int startOffset = result.getStartOffset();\n      int endOffset = result.getEndOffset();\n      String foundString = document.getCharsSequence().subSequence(startOffset, endOffset).toString();\n      String toReplace;\n      try {\n        toReplace = findManager.getStringToReplace(foundString, model, startOffset, document.getText());\n      }\n      catch (FindManager.MalformedReplacementStringException e) {\n        if (!ApplicationManager.getApplication().isUnitTestMode()) {\n          Messages.showErrorDialog(project, e.getMessage(), FindBundle.message(\"find.replace.invalid.replacement.string.title\"));\n        }\n        break;\n      }\n\n      if (toPrompt) {\n        int promptResult = findManager.showPromptDialog(model, FindBundle.message(\"find.replace.dialog.title\"));\n        if (promptResult == FindManager.PromptResult.SKIP) {\n          offset = model.isForward() ? result.getEndOffset() : startResultOffset;\n          continue;\n        }\n        if (promptResult == FindManager.PromptResult.CANCEL) {\n          break;\n        }\n        if (promptResult == FindManager.PromptResult.ALL) {\n          toPrompt = false;\n          ((DocumentEx) document).setInBulkUpdate(true);\n        }\n      }\n\n      boolean reallyReplace = toPrompt;\n      TextRange textRange = doReplace(project, document, model, result, toReplace, reallyReplace, rangesToChange);\n\n      int newOffset = model.isForward() ? textRange.getEndOffset() : textRange.getStartOffset();\n      if (newOffset == offset) {\n        newOffset += model.isForward() ? 1 : -1;\n      }\n      offset = newOffset;\n      occurrences++;\n\n      //[SCR 7258]\n      if (!replaced) {\n        editor.getCaretModel().moveToOffset(0);\n      }\n\n      replaced = true;\n    }\n\n    if (replaced) {\n      if (!toPrompt) {\n        CharSequence text = document.getCharsSequence();\n        final StringBuilder newText = new StringBuilder(document.getTextLength());\n        Collections.sort(rangesToChange, new Comparator<Pair<TextRange, String>>() {\n          public int compare(Pair<TextRange, String> o1, Pair<TextRange, String> o2) {\n            return o1.getFirst().getStartOffset() - o2.getFirst().getStartOffset();\n          }\n        });\n        int offsetBefore = 0;\n        for (Pair<TextRange, String> pair : rangesToChange) {\n          TextRange range = pair.getFirst();\n          String replace = pair.getSecond();\n          newText.append(text, offsetBefore, range.getStartOffset()); //before change\n          if (delegate.shouldReplace(range, replace)) {\n            newText.append(replace);\n          } else {\n            newText.append(text.subSequence(range.getStartOffset(), range.getEndOffset()));\n          }\n          offsetBefore = range.getEndOffset();\n          if (offsetBefore < caretOffset) {\n            caretOffset += replace.length() - range.getLength();\n          }\n        }\n        newText.append(text, offsetBefore, text.length()); //tail\n        CommandProcessor.getInstance().executeCommand(project, new Runnable() {\n          public void run() {\n            ApplicationManager.getApplication().runWriteAction(new Runnable() {\n              public void run() {\n                document.setText(newText);\n              }\n            });\n          }\n        }, null, document);\n\n        if (caretOffset > document.getTextLength()) caretOffset = document.getTextLength();\n      }\n      editor.getCaretModel().moveToOffset(caretOffset);\n    }\n\n    ReplaceInProjectManager.reportNumberReplacedOccurences(project, occurrences);\n    return replaced;\n  }","id":55590,"modified_method":"private static boolean doReplace(Project project, final Editor editor, FindModel model, final Document document, int caretOffset,\n                                   boolean toPrompt, ReplaceDelegate delegate) {\n    FindManager findManager = FindManager.getInstance(project);\n    model = (FindModel)model.clone();\n    int occurrences = 0;\n\n    List<Pair<TextRange,String>> rangesToChange = new ArrayList<Pair<TextRange, String>>();\n\n    boolean replaced = false;\n    boolean reallyReplaced = false;\n\n    int offset = caretOffset;\n    while (offset >= 0 && offset < editor.getDocument().getTextLength()) {\n      caretOffset = offset;\n      FindResult result = doSearch(project, editor, offset, !replaced, model, toPrompt);\n      if (result == null) {\n        break;\n      }\n      int startResultOffset = result.getStartOffset();\n      model.setFromCursor(true);\n\n      int startOffset = result.getStartOffset();\n      int endOffset = result.getEndOffset();\n      String foundString = document.getCharsSequence().subSequence(startOffset, endOffset).toString();\n      String toReplace;\n      try {\n        toReplace = findManager.getStringToReplace(foundString, model, startOffset, document.getText());\n      }\n      catch (FindManager.MalformedReplacementStringException e) {\n        if (!ApplicationManager.getApplication().isUnitTestMode()) {\n          Messages.showErrorDialog(project, e.getMessage(), FindBundle.message(\"find.replace.invalid.replacement.string.title\"));\n        }\n        break;\n      }\n\n      if (toPrompt) {\n        int promptResult = findManager.showPromptDialog(model, FindBundle.message(\"find.replace.dialog.title\"));\n        if (promptResult == FindManager.PromptResult.SKIP) {\n          offset = model.isForward() ? result.getEndOffset() : startResultOffset;\n          continue;\n        }\n        if (promptResult == FindManager.PromptResult.CANCEL) {\n          break;\n        }\n        if (promptResult == FindManager.PromptResult.ALL) {\n          toPrompt = false;\n          ((DocumentEx) document).setInBulkUpdate(true);\n        }\n      }\n      if (delegate == null || delegate.shouldReplace(result, toReplace)){\n        boolean reallyReplace = toPrompt;\n        if (reallyReplace) {\n          //[SCR 7258]\n          if (!reallyReplaced) {\n            editor.getCaretModel().moveToOffset(0);\n            reallyReplaced = true;\n          }\n        }\n        TextRange textRange = doReplace(project, document, model, result, toReplace, reallyReplace, rangesToChange);\n        replaced = true;\n        int newOffset = model.isForward() ? textRange.getEndOffset() : textRange.getStartOffset();\n        if (newOffset == offset) {\n          newOffset += model.isForward() ? 1 : -1;\n        }\n        offset = newOffset;\n        occurrences++;\n      }\n\n    }\n\n    if (replaced) {\n      if (!toPrompt) {\n        CharSequence text = document.getCharsSequence();\n        final StringBuilder newText = new StringBuilder(document.getTextLength());\n        Collections.sort(rangesToChange, new Comparator<Pair<TextRange, String>>() {\n          public int compare(Pair<TextRange, String> o1, Pair<TextRange, String> o2) {\n            return o1.getFirst().getStartOffset() - o2.getFirst().getStartOffset();\n          }\n        });\n        int offsetBefore = 0;\n        for (Pair<TextRange, String> pair : rangesToChange) {\n          TextRange range = pair.getFirst();\n          String replace = pair.getSecond();\n          newText.append(text, offsetBefore, range.getStartOffset()); //before change\n          if (delegate == null || delegate.shouldReplace(range, replace)) {\n            newText.append(replace);\n          } else {\n            newText.append(text.subSequence(range.getStartOffset(), range.getEndOffset()));\n          }\n          offsetBefore = range.getEndOffset();\n          if (offsetBefore < caretOffset) {\n            caretOffset += replace.length() - range.getLength();\n          }\n        }\n        newText.append(text, offsetBefore, text.length()); //tail\n        if (caretOffset > newText.length()) {\n          caretOffset = newText.length();\n        }\n        final int finalCaretOffset = caretOffset;\n        CommandProcessor.getInstance().executeCommand(project, new Runnable() {\n          public void run() {\n            ApplicationManager.getApplication().runWriteAction(new Runnable() {\n              public void run() {\n                document.setText(newText);\n                editor.getCaretModel().moveToOffset(finalCaretOffset);\n              }\n            });\n          }\n        }, null, document);\n      } else {\n        if (reallyReplaced) {\n          if (caretOffset > document.getTextLength()) {\n            caretOffset = document.getTextLength();\n          }\n          editor.getCaretModel().moveToOffset(caretOffset);\n        }\n      }\n    }\n\n    ReplaceInProjectManager.reportNumberReplacedOccurences(project, occurrences);\n    return replaced;\n  }","commit_id":"bf26455f4fea29458de44c81f8803c32b2ae26a9","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void execute(final Editor editor, DataContext dataContext) {\n      final Project project = PlatformDataKeys.PROJECT.getData(DataManager.getInstance().getDataContext(editor.getComponent()));\n      if (!editor.isOneLineMode()) {\n        final JComponent headerComponent = editor.getHeaderComponent();\n        if (headerComponent instanceof EditorSearchComponent) {\n          EditorSearchComponent editorSearchComponent = (EditorSearchComponent)headerComponent;\n          if (!myReplace) {\n            headerComponent.requestFocus();\n          }\n          FindUtil.configureFindModel(myReplace, editor.getSelectionModel().getSelectedText(), editorSearchComponent.getFindModel());\n        } else {\n          FindManager findManager = FindManager.getInstance(project);\n          FindModel model;\n          if (myReplace) {\n            model = findManager.createReplaceInFileModel();\n          } else {\n            model = new FindModel();\n            model.copyFrom(findManager.getFindInFileModel());\n          }\n          FindUtil.configureFindModel(myReplace, null, model);\n          final EditorSearchComponent header = new EditorSearchComponent(editor, project, model);\n          editor.setHeaderComponent(header);\n          header.requestFocus();\n        }\n      }\n    }","id":55591,"modified_method":"public void execute(final Editor editor, DataContext dataContext) {\n      final Project project = PlatformDataKeys.PROJECT.getData(DataManager.getInstance().getDataContext(editor.getComponent()));\n      if (!editor.isOneLineMode()) {\n        final JComponent headerComponent = editor.getHeaderComponent();\n        if (headerComponent instanceof EditorSearchComponent) {\n          EditorSearchComponent editorSearchComponent = (EditorSearchComponent)headerComponent;\n            headerComponent.requestFocus();\n          FindUtil.configureFindModel(myReplace, editor.getSelectionModel().getSelectedText(), editorSearchComponent.getFindModel());\n        } else {\n          FindManager findManager = FindManager.getInstance(project);\n          FindModel model;\n          if (myReplace) {\n            model = findManager.createReplaceInFileModel();\n          } else {\n            model = new FindModel();\n            model.copyFrom(findManager.getFindInFileModel());\n          }\n          FindUtil.configureFindModel(myReplace, myReplace ? editor.getSelectionModel().getSelectedText() : null, model);\n          final EditorSearchComponent header = new EditorSearchComponent(editor, project, model);\n          editor.setHeaderComponent(header);\n          header.requestFocus();\n        }\n      }\n    }","commit_id":"bf26455f4fea29458de44c81f8803c32b2ae26a9","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void updateThreadSafe(final FindModel findModel, final boolean toChangeSelection, final TextRange next) {\n    if (myDisposed) return;\n    final ArrayList<LiveOccurrence> occurrences = new ArrayList<LiveOccurrence>();\n    final Editor editor = getEditor();\n\n    final ArrayList<FindResult> results = new ArrayList<FindResult>();\n    if (findModel != null) {\n\n      ApplicationManager.getApplication().runReadAction(new Runnable() {\n        @Override\n        public void run() {\n          TextRange selection = new TextRange(editor.getSelectionModel().getSelectionStart(),\n                                          editor.getSelectionModel().getSelectionEnd());\n          TextRange r = findModel.isGlobal() ? new TextRange(0, Integer.MAX_VALUE) : selection;\n          if (r.getLength() == 0) {\n            r = new TextRange(0, Integer.MAX_VALUE);\n          }\n          int offset = r.getStartOffset();\n          VirtualFile virtualFile = FileDocumentManager.getInstance().getFile(editor.getDocument());\n\n          while (true) {\n            FindManager findManager = FindManager.getInstance(editor.getProject());\n            FindResult result = findManager.findString(editor.getDocument().getCharsSequence(), offset, findModel, virtualFile);\n            if (!result.isStringFound()) break;\n            int newOffset = result.getEndOffset();\n            if (offset == newOffset || result.getEndOffset() > r.getEndOffset()) break;\n            offset = newOffset;\n            results.add(result);\n\n            if (results.size() > myMatchesLimit) break;\n          }\n          if (results.size() < myMatchesLimit) {\n\n            findResultsToOccurrences(results, occurrences);\n          }\n\n          final Runnable searchCompletedRunnable = new Runnable() {\n            @Override\n            public void run() {\n              searchCompleted(occurrences, results.size(), editor, findModel, toChangeSelection, next);\n            }\n          };\n\n          if (!ApplicationManager.getApplication().isUnitTestMode()) {\n            ApplicationManager.getApplication().invokeLater(searchCompletedRunnable);\n          } else {\n            searchCompletedRunnable.run();\n          }\n        }\n      });\n    }\n  }","id":55592,"modified_method":"public void updateThreadSafe(final FindModel findModel, final boolean toChangeSelection, final TextRange next) {\n    if (myDisposed) return;\n    final ArrayList<LiveOccurrence> occurrences = new ArrayList<LiveOccurrence>();\n    final Editor editor = getEditor();\n\n    final ArrayList<FindResult> results = new ArrayList<FindResult>();\n    if (findModel != null) {\n\n      ApplicationManager.getApplication().runReadAction(new Runnable() {\n        @Override\n        public void run() {\n          TextRange selection = new TextRange(editor.getSelectionModel().getSelectionStart(),\n                                          editor.getSelectionModel().getSelectionEnd());\n          TextRange r = findModel.isGlobal() ? new TextRange(0, Integer.MAX_VALUE) : selection;\n          if (r.getLength() == 0) {\n            r = new TextRange(0, Integer.MAX_VALUE);\n          }\n          int offset = r.getStartOffset();\n          VirtualFile virtualFile = FileDocumentManager.getInstance().getFile(editor.getDocument());\n\n          while (true) {\n            FindManager findManager = FindManager.getInstance(editor.getProject());\n            FindResult result;\n            try {\n              result = findManager.findString(editor.getDocument().getCharsSequence(), offset, findModel, virtualFile);\n            } catch(PatternSyntaxException e) {\n              result = null;\n            }\n            if (result == null || !result.isStringFound()) break;\n            int newOffset = result.getEndOffset();\n            if (offset == newOffset || result.getEndOffset() > r.getEndOffset()) break;\n            offset = newOffset;\n            results.add(result);\n\n            if (results.size() > myMatchesLimit) break;\n          }\n          if (results.size() < myMatchesLimit) {\n\n            findResultsToOccurrences(results, occurrences);\n          }\n\n          final Runnable searchCompletedRunnable = new Runnable() {\n            @Override\n            public void run() {\n              searchCompleted(occurrences, results.size(), editor, findModel, toChangeSelection, next);\n            }\n          };\n\n          if (!ApplicationManager.getApplication().isUnitTestMode()) {\n            ApplicationManager.getApplication().invokeLater(searchCompletedRunnable);\n          } else {\n            searchCompletedRunnable.run();\n          }\n        }\n      });\n    }\n  }","commit_id":"bf26455f4fea29458de44c81f8803c32b2ae26a9","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private void finishTemplateEditing() {\n    int endSegmentNumber = myTemplate.getEndSegmentNumber();\n    int offset = myTemplateRange.getEndOffset();\n    if (endSegmentNumber >= 0) {\n      offset = mySegments.getSegmentStart(endSegmentNumber);\n    }\n    myEditor.getCaretModel().moveToOffset(offset);\n    myEditor.getScrollingModel().scrollToCaret(ScrollType.RELATIVE);\n    myEditor.getSelectionModel().removeSelection();\n\n    int selStart = myTemplate.getSelectionStartSegmentNumber();\n    int selEnd = myTemplate.getSelectionEndSegmentNumber();\n    if (selStart >= 0 && selEnd >= 0) {\n      myEditor.getSelectionModel().setSelection(\n        mySegments.getSegmentStart(selStart),\n        mySegments.getSegmentStart(selEnd)\n      );\n    }\n\n    fireTemplateFinished();\n    myListeners.clear();\n    setCurrentVariableNumber(-1);\n    myProject = null;\n  }","id":55593,"modified_method":"private void finishTemplateEditing() {\n    int endSegmentNumber = myTemplate.getEndSegmentNumber();\n    int offset = -1;\n    if (endSegmentNumber >= 0) {\n      offset = mySegments.getSegmentStart(endSegmentNumber);\n    } else {\n      if (!myTemplate.isSelectionTemplate()) { //do not move caret to the end of range for selection templates\n        offset = myTemplateRange.getEndOffset();\n      }\n    }\n\n    if (offset >= 0) {\n      myEditor.getCaretModel().moveToOffset(offset);\n      myEditor.getScrollingModel().scrollToCaret(ScrollType.RELATIVE);\n    }\n\n    myEditor.getSelectionModel().removeSelection();\n    int selStart = myTemplate.getSelectionStartSegmentNumber();\n    int selEnd = myTemplate.getSelectionEndSegmentNumber();\n    if (selStart >= 0 && selEnd >= 0) {\n      myEditor.getSelectionModel().setSelection(\n        mySegments.getSegmentStart(selStart),\n        mySegments.getSegmentStart(selEnd)\n      );\n    }\n\n    fireTemplateFinished();\n    myListeners.clear();\n    setCurrentVariableNumber(-1);\n    myProject = null;\n  }","commit_id":"0bdac4b2b8e8faf9273b1e789921c7bdd400d32c","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private static void write(@NotNull final PyClass pyClass,\n                            @NotNull final List<PyMethodMember> newMembers,\n                            @NotNull final Editor editor) {\n    final PyStatementList statementList = pyClass.getStatementList();\n    final int offset = editor.getCaretModel().getOffset();\n    PsiElement anchor = null;\n    for (PyStatement statement: statementList.getStatements()) {\n      if (statement.getTextRange().getStartOffset() < offset) {\n        anchor = statement;\n      }\n    }\n\n    PyFunction element = null;\n    for (PyMethodMember newMember : newMembers) {\n      PyFunction baseFunction = (PyFunction) newMember.getPsiElement();\n      final PyFunctionBuilder builder = buildOverriddenFunction(pyClass, baseFunction);\n      PyFunction function = builder.addFunctionAfter(statementList, anchor);\n      element = CodeInsightUtilBase.forcePsiPostprocessAndRestoreElement(function);\n    }\n    \n    PyPsiUtils.removeRedundantPass(statementList);\n    final int start = element.getStatementList().getTextRange().getStartOffset();\n    editor.getCaretModel().moveToOffset(start);\n    editor.getScrollingModel().scrollToCaret(ScrollType.RELATIVE);\n    editor.getSelectionModel().setSelection(start, element.getTextRange().getEndOffset());\n  }","id":55594,"modified_method":"private static void write(@NotNull final PyClass pyClass,\n                            @NotNull final List<PyMethodMember> newMembers,\n                            @NotNull final Editor editor) {\n    final PyStatementList statementList = pyClass.getStatementList();\n    final int offset = editor.getCaretModel().getOffset();\n    PsiElement anchor = null;\n    for (PyStatement statement: statementList.getStatements()) {\n      if (statement.getTextRange().getStartOffset() < offset) {\n        anchor = statement;\n      }\n    }\n\n    PyFunction element = null;\n    for (PyMethodMember newMember : newMembers) {\n      PyFunction baseFunction = (PyFunction) newMember.getPsiElement();\n      final PyFunctionBuilder builder = buildOverriddenFunction(pyClass, baseFunction);\n      PyFunction function = builder.addFunctionAfter(statementList, anchor);\n      element = CodeInsightUtilBase.forcePsiPostprocessAndRestoreElement(function);\n    }\n\n    PyPsiUtils.removeRedundantPass(statementList);\n    if (element != null) {\n      final PyStatementList targetStatementList = element.getStatementList();\n      final int start = targetStatementList != null\n                        ? targetStatementList.getTextRange().getStartOffset()\n                        : element.getTextRange().getStartOffset();\n      editor.getCaretModel().moveToOffset(start);\n      editor.getScrollingModel().scrollToCaret(ScrollType.RELATIVE);\n      editor.getSelectionModel().setSelection(start, element.getTextRange().getEndOffset());\n    }\n  }","commit_id":"7400f4f0b9808b08bec0d50152300aa20ce823f9","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void handleInsert(InsertionContext context, LookupElement item) {\n    int tailOffset = context.getTailOffset();\n\n    PsiElement argumentList = context.getFile().findElementAt(tailOffset - 1);\n    while (argumentList != null && !(argumentList instanceof GrArgumentList) && !(argumentList instanceof GrListOrMap)) {\n      argumentList = argumentList.getParent();\n    }\n\n    final Editor editor = context.getEditor();\n\n    if (argumentList != null) {\n      String argumentListText = argumentList.getText();\n\n      String s = argumentListText.substring(tailOffset - argumentList.getTextOffset());\n      s = StringUtil.trimEnd(s, \")\");\n\n      if (s.trim().length() == 0) {\n        editor.getDocument().insertString(tailOffset, \": \");\n        editor.getCaretModel().moveToOffset(tailOffset + 2);\n      }\n      else {\n        Matcher m = Pattern.compile(\"(\\\\s*)(:)?(\\\\s*),?\\\\s?(\\\\s*)(.*)\", Pattern.DOTALL).matcher(s);\n        if (!m.matches()) throw new RuntimeException(\"This pattern must match any non-empty string! (\" + s + \")\");\n\n        if (m.group(2) != null) {\n          editor.getCaretModel().moveToOffset(tailOffset + m.end(3));\n        }\n        else {\n          String toInsert = m.group(5).startsWith(\"]\") ? \": \" : \": , \";\n          editor.getDocument().replaceString(tailOffset, tailOffset + m.start(4), toInsert);\n          editor.getCaretModel().moveToOffset(tailOffset + 2);\n        }\n      }\n    }\n\n    editor.getScrollingModel().scrollToCaret(ScrollType.RELATIVE);\n    editor.getSelectionModel().removeSelection();\n\n    if (context.getCompletionChar() == ':' || context.getCompletionChar() == ' ') {\n      context.setAddCompletionChar(false);\n    }\n  }","id":55595,"modified_method":"public void handleInsert(InsertionContext context, LookupElement item) {\n    int tailOffset = context.getTailOffset();\n\n    PsiElement argumentList = context.getFile().findElementAt(tailOffset - 1);\n    while (argumentList != null && !(argumentList instanceof GrArgumentList) && !(argumentList instanceof GrListOrMap)) {\n      argumentList = argumentList.getParent();\n    }\n\n    final Editor editor = context.getEditor();\n\n    if (argumentList != null) {\n      if (context.getCompletionChar() == ':' || context.getCompletionChar() == ' ') {\n        context.setAddCompletionChar(false);\n      }\n      \n      String argumentListText = argumentList.getText();\n\n      String s = argumentListText.substring(tailOffset - argumentList.getTextOffset());\n      s = StringUtil.trimEnd(s, \")\");\n\n      if (s.trim().length() == 0) {\n        editor.getDocument().insertString(tailOffset, \": \");\n        editor.getCaretModel().moveToOffset(tailOffset + 2);\n      }\n      else {\n        Matcher m = Pattern.compile(\"([ \\\\t]*):([ \\\\t]*)(.*)\", Pattern.DOTALL).matcher(s);\n        if (m.matches()) {\n          int caret = tailOffset + m.end(2);\n\n          if (m.group(2).isEmpty()) {\n            editor.getDocument().insertString(caret, \" \");\n            caret++;\n          }\n\n          editor.getCaretModel().moveToOffset(caret);\n        }\n        else {\n          m = Pattern.compile(\"([ \\\\t]*)([\\\\n \\\\t]*)[\\\\],](.*)\", Pattern.DOTALL).matcher(s);\n          if (m.matches()) {\n            editor.getDocument().replaceString(tailOffset, tailOffset + m.start(2), \": \");\n            editor.getCaretModel().moveToOffset(tailOffset + 2);\n          }\n          else {\n            m = Pattern.compile(\"([ \\\\t]*)(.*)\", Pattern.DOTALL).matcher(s);\n            if (!m.matches()) throw new RuntimeException(\"This pattern must match any non-empty string! (\" + s + \")\");\n            \n            String toInsert = m.group(2).startsWith(\"\\n\") ? \": ,\" : \": , \";\n            editor.getDocument().replaceString(tailOffset, tailOffset + m.start(2), toInsert);\n            editor.getCaretModel().moveToOffset(tailOffset + 2);\n          }\n        }\n      }\n      \n      editor.getScrollingModel().scrollToCaret(ScrollType.RELATIVE);\n      editor.getSelectionModel().removeSelection();\n    }\n  }","commit_id":"17127936fa721b0c55b139d3d5db646a04227bd2","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void handleInsert(InsertionContext context, LookupElement item) {\n    @NonNls Object obj = item.getObject();\n\n    if (obj instanceof GroovyResolveResult) {\n      obj = ((GroovyResolveResult)obj).getElement();\n    }\n\n    if (obj instanceof PsiMethod) {\n      PsiMethod method = (PsiMethod)obj;\n      PsiParameter[] parameters = method.getParameterList().getParameters();\n      Editor editor = context.getEditor();\n      Document document = editor.getDocument();\n      if (context.getCompletionChar() == Lookup.REPLACE_SELECT_CHAR) {\n        handleOverwrite(editor.getCaretModel().getOffset(), document);\n      }\n\n      CaretModel caretModel = editor.getCaretModel();\n      int offset = context.getTailOffset();\n      PsiFile file = context.getFile();\n      assert file != null;\n      PsiElement elementAt = file.findElementAt(context.getStartOffset());\n      assert elementAt != null;\n      PsiElement parent = elementAt.getParent();\n      if (parent instanceof GrReferenceExpression && ((GrReferenceExpression)parent).getDotTokenType() == GroovyTokenTypes.mMEMBER_POINTER) {\n        return;\n      }\n\n      CharSequence charsSequence = document.getCharsSequence();\n      if (isAnnotationNameValuePair(obj, parent)) {\n        int endOffset = offset;\n        if (context.getCompletionChar() == Lookup.REPLACE_SELECT_CHAR) {\n          endOffset = CharArrayUtil.shiftForward(charsSequence, offset, \" \\t\");\n          if (charsSequence.length() > endOffset && charsSequence.charAt(endOffset) == '=') {\n            endOffset++;\n            endOffset = CharArrayUtil.shiftForward(charsSequence, endOffset, \" \\t\");\n          }\n        }\n        document.replaceString(offset, endOffset, \" = \");\n        caretModel.moveToOffset(offset + 3);\n        return;\n      }\n\n      if (PsiTreeUtil.getParentOfType(elementAt, GrImportStatement.class) != null) return;\n\n      if (parameters.length == 1) {\n        if ((context.getCompletionChar() != '(' && context.getCompletionChar() != ' ') && \n            TypesUtil.isClassType(parameters[0].getType(), GroovyCommonClassNames.GROOVY_LANG_CLOSURE)) {\n          int afterBrace;\n          final int nonWs = CharArrayUtil.shiftForward(charsSequence, offset, \" \\t\");\n          if (nonWs < document.getTextLength() && charsSequence.charAt(nonWs) == '{') {\n            afterBrace = nonWs + 1;\n          } else {\n            document.insertString(offset, \" {}\");\n            afterBrace = offset + 2;\n          }\n          caretModel.moveToOffset(afterBrace);\n          return;\n        }\n      }\n\n      context.commitDocument();\n\n      if (context.getCompletionChar() == ' ' && MethodParenthesesHandler.hasParams(item, context.getElements(), true, method)) {\n        return;\n      }\n\n      new MethodParenthesesHandler(method, true).handleInsert(context, item);\n      AutoPopupController.getInstance(context.getProject()).autoPopupParameterInfo(editor, method);\n      return;\n    }\n\n    if (obj instanceof PsiClass) {\n      final PsiClass clazz = (PsiClass)obj;\n      Editor editor = context.getEditor();\n      Document document = editor.getDocument();\n      PsiFile file = PsiDocumentManager.getInstance(clazz.getProject()).getPsiFile(document);\n      assert file != null;\n      PsiElement elementAt = file.findElementAt(context.getStartOffset());\n      assert elementAt != null;\n      CaretModel caretModel = editor.getCaretModel();\n      int offset = context.getStartOffset() + elementAt.getTextLength();\n\n      final String text = document.getText();\n      final PsiElement parent = elementAt.getParent();\n      if (parent instanceof GrCodeReferenceElement &&\n          parent.getParent() instanceof GrNewExpression &&\n          (offset == text.length() || !text.substring(offset).trim().startsWith(\"(\"))) {\n        document.insertString(offset, \"()\");\n        if (GroovyCompletionUtil.hasConstructorParameters(clazz, (GroovyPsiElement)parent)) {\n          caretModel.moveToOffset(offset + 1);\n          return;\n        }\n        caretModel.moveToOffset(offset + 2);\n        return;\n      }\n    }\n\n    if (context.getCompletionChar() == '=') {\n      context.setAddCompletionChar(false);\n      TailType.EQ.processTail(context.getEditor(), context.getTailOffset());\n      return;\n    }\n\n    if (obj instanceof PsiPackage) {\n      AutoPopupController.getInstance(context.getProject()).scheduleAutoPopup(context.getEditor(), null);\n    }\n  }","id":55596,"modified_method":"public void handleInsert(InsertionContext context, LookupElement item) {\n    @NonNls Object obj = item.getObject();\n\n    if (obj instanceof GroovyResolveResult) {\n      obj = ((GroovyResolveResult)obj).getElement();\n    }\n\n    if (obj instanceof PsiMethod) {\n      PsiMethod method = (PsiMethod)obj;\n      PsiParameter[] parameters = method.getParameterList().getParameters();\n      Editor editor = context.getEditor();\n      Document document = editor.getDocument();\n      if (context.getCompletionChar() == Lookup.REPLACE_SELECT_CHAR) {\n        handleOverwrite(editor.getCaretModel().getOffset(), document);\n      }\n\n      CaretModel caretModel = editor.getCaretModel();\n      int offset = context.getTailOffset();\n      PsiFile file = context.getFile();\n      PsiElement elementAt = file.findElementAt(context.getStartOffset());\n      assert elementAt != null;\n      PsiElement parent = elementAt.getParent();\n      if (parent instanceof GrReferenceExpression && ((GrReferenceExpression)parent).getDotTokenType() == GroovyTokenTypes.mMEMBER_POINTER) {\n        return;\n      }\n\n      CharSequence charsSequence = document.getCharsSequence();\n      if (isAnnotationNameValuePair(obj, parent)) {\n        int endOffset = offset;\n        if (context.getCompletionChar() == Lookup.REPLACE_SELECT_CHAR) {\n          endOffset = CharArrayUtil.shiftForward(charsSequence, offset, \" \\t\");\n          if (charsSequence.length() > endOffset && charsSequence.charAt(endOffset) == '=') {\n            endOffset++;\n            endOffset = CharArrayUtil.shiftForward(charsSequence, endOffset, \" \\t\");\n          }\n        }\n        document.replaceString(offset, endOffset, \" = \");\n        caretModel.moveToOffset(offset + 3);\n        return;\n      }\n\n      if (PsiTreeUtil.getParentOfType(elementAt, GrImportStatement.class) != null) return;\n\n      if (parameters.length == 1) {\n        if ((context.getCompletionChar() != '(' && context.getCompletionChar() != ' ') &&\n            TypesUtil.isClassType(parameters[0].getType(), GroovyCommonClassNames.GROOVY_LANG_CLOSURE)) {\n          int afterBrace;\n          final int nonWs = CharArrayUtil.shiftForward(charsSequence, offset, \" \\t\");\n          if (nonWs < document.getTextLength() && charsSequence.charAt(nonWs) == '{') {\n            afterBrace = nonWs + 1;\n          }\n          else {\n            if (context.getCompletionChar() == Lookup.COMPLETE_STATEMENT_SELECT_CHAR) {\n              //smart enter invoked\n              document.insertString(offset, \" {\\n}\");\n              afterBrace = offset + 1;  //position caret before '{' for smart enter\n              context.setTailOffset(afterBrace);\n            }\n            else {\n              document.insertString(offset, \" {}\");\n              afterBrace = offset + 2;\n            }\n          }\n          caretModel.moveToOffset(afterBrace);\n          return;\n        }\n      }\n\n      context.commitDocument();\n\n      if (context.getCompletionChar() == ' ' && MethodParenthesesHandler.hasParams(item, context.getElements(), true, method)) {\n        return;\n      }\n\n      new MethodParenthesesHandler(method, true).handleInsert(context, item);\n      AutoPopupController.getInstance(context.getProject()).autoPopupParameterInfo(editor, method);\n      return;\n    }\n\n    if (obj instanceof PsiClass) {\n      final PsiClass clazz = (PsiClass)obj;\n      Editor editor = context.getEditor();\n      Document document = editor.getDocument();\n      PsiFile file = PsiDocumentManager.getInstance(clazz.getProject()).getPsiFile(document);\n      assert file != null;\n      PsiElement elementAt = file.findElementAt(context.getStartOffset());\n      assert elementAt != null;\n      CaretModel caretModel = editor.getCaretModel();\n      int offset = context.getStartOffset() + elementAt.getTextLength();\n\n      final String text = document.getText();\n      final PsiElement parent = elementAt.getParent();\n      if (parent instanceof GrCodeReferenceElement &&\n          parent.getParent() instanceof GrNewExpression &&\n          (offset == text.length() || !text.substring(offset).trim().startsWith(\"(\"))) {\n        document.insertString(offset, \"()\");\n        if (GroovyCompletionUtil.hasConstructorParameters(clazz, (GroovyPsiElement)parent)) {\n          caretModel.moveToOffset(offset + 1);\n          return;\n        }\n        caretModel.moveToOffset(offset + 2);\n        return;\n      }\n    }\n\n    if (context.getCompletionChar() == '=') {\n      context.setAddCompletionChar(false);\n      TailType.EQ.processTail(context.getEditor(), context.getTailOffset());\n      return;\n    }\n\n    if (obj instanceof PsiPackage) {\n      AutoPopupController.getInstance(context.getProject()).scheduleAutoPopup(context.getEditor(), null);\n    }\n  }","commit_id":"91694acf45f28e0c068a8667ca27357d538120f1","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Nullable\n  private static GrCodeBlock getControlStatementBlock(int caret, PsiElement element) {\n    GrStatement body = null;\n\n    if (element instanceof GrMethod) return ((GrMethod)element).getBlock();\n\n    if (element instanceof GrIfStatement) {\n      body = ((GrIfStatement)element).getThenBranch();\n      if (body != null && caret > body.getTextRange().getEndOffset()) {\n        body = ((GrIfStatement)element).getElseBranch();\n      }\n    }\n    else if (element instanceof GrWhileStatement) {\n      body = ((GrWhileStatement)element).getBody();\n    }\n    else if (element instanceof GrForStatement) {\n      body = ((GrForStatement)element).getBody();\n    }\n\n    if (body instanceof GrBlockStatement) {\n      return ((GrBlockStatement)body).getBlock();\n    }\n\n\n    return null;\n  }","id":55597,"modified_method":"@Nullable\n  private static GrCodeBlock getControlStatementBlock(int caret, PsiElement element) {\n    GrStatement body = null;\n\n    if (element instanceof GrMethod) return ((GrMethod)element).getBlock();\n\n    if (element instanceof GrMethodCall) {\n      final GrClosableBlock[] arguments = ((GrMethodCall)element).getClosureArguments();\n      if (arguments.length > 0) return arguments[0]; else return null;\n    }\n\n    if (element instanceof GrIfStatement) {\n      body = ((GrIfStatement)element).getThenBranch();\n      if (body != null && caret > body.getTextRange().getEndOffset()) {\n        body = ((GrIfStatement)element).getElseBranch();\n      }\n    }\n    else if (element instanceof GrWhileStatement) {\n      body = ((GrWhileStatement)element).getBody();\n    }\n    else if (element instanceof GrForStatement) {\n      body = ((GrForStatement)element).getBody();\n    }\n\n    if (body instanceof GrBlockStatement) {\n      return ((GrBlockStatement)body).getBlock();\n    }\n\n\n    return null;\n  }","commit_id":"91694acf45f28e0c068a8667ca27357d538120f1","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public boolean doEnter(Editor editor, PsiElement psiElement, boolean isModified) {\n    GrCodeBlock block = getControlStatementBlock(editor.getCaretModel().getOffset(), psiElement);\n\n    if (block != null) {\n      PsiElement firstElement = block.getFirstChild().getNextSibling();\n\n      editor.getCaretModel().moveToOffset(firstElement != null ?\n              firstElement.getTextRange().getStartOffset() - 1 :\n              block.getTextRange().getEndOffset());\n    }\n\n    EditorActionManager.getInstance().getActionHandler(IdeActions.ACTION_EDITOR_START_NEW_LINE)\n      .execute(editor, ((EditorEx)editor).getDataContext());\n    return true;\n  }","id":55598,"modified_method":"public boolean doEnter(Editor editor, PsiElement psiElement, boolean isModified) {\n    GrCodeBlock block = getControlStatementBlock(editor.getCaretModel().getOffset(), psiElement);\n\n    if (block != null) {\n      PsiElement firstElement = block.getFirstChild().getNextSibling();\n\n      final int offset = firstElement != null ? firstElement.getTextRange().getStartOffset() - 1 : block.getTextRange().getEndOffset();\n      editor.getCaretModel().moveToOffset(offset);\n    }\n\n    final EditorActionHandler endterHandler = EditorActionManager.getInstance().getActionHandler(IdeActions.ACTION_EDITOR_START_NEW_LINE);\n    endterHandler.execute(editor, ((EditorEx)editor).getDataContext());\n    return true;\n  }","commit_id":"91694acf45f28e0c068a8667ca27357d538120f1","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private static PsiElement[] getChildren(PsiElement element) {\n    PsiElement psiChild = element.getFirstChild();\n    if (psiChild == null) return new PsiElement[0];\n\n    List<PsiElement> result = new ArrayList<PsiElement>();\n    while (psiChild != null) {\n      result.add(psiChild);\n\n      psiChild = psiChild.getNextSibling();\n    }\n    return PsiUtilBase.toPsiElementArray(result);\n  }","id":55599,"modified_method":"private static PsiElement[] getChildren(PsiElement element) {\n    PsiElement psiChild = element.getFirstChild();\n    if (psiChild == null) return new PsiElement[0];\n\n    List<PsiElement> result = new ArrayList<PsiElement>();\n    while (psiChild != null) {\n      result.add(psiChild);\n\n      psiChild = psiChild.getNextSibling();\n    }\n    return PsiUtilCore.toPsiElementArray(result);\n  }","commit_id":"91694acf45f28e0c068a8667ca27357d538120f1","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Nullable\n  protected PsiElement getStatementAtCaret(Editor editor, PsiFile psiFile) {\n    final PsiElement atCaret = super.getStatementAtCaret(editor, psiFile);\n\n    if (atCaret instanceof PsiWhiteSpace) return null;\n    if (atCaret == null) return null;\n\n    final GrCodeBlock codeBlock = PsiTreeUtil.getParentOfType(atCaret, GrCodeBlock.class, false, GrControlStatement.class);\n    if (codeBlock != null) {\n      for (GrStatement statement : codeBlock.getStatements()) {\n        if (PsiTreeUtil.isAncestor(statement, atCaret, true)) {\n          return statement;\n        }\n      }\n    }\n\n    PsiElement statementAtCaret = PsiTreeUtil.getParentOfType(atCaret,\n                                                              GrStatement.class,\n                                                              GrCodeBlock.class,\n                                                              PsiMember.class,\n                                                              GrDocComment.class\n    );\n\n    if (statementAtCaret instanceof GrBlockStatement) return null;\n    if (statementAtCaret == null) return null;\n\n    GrControlStatement controlStatement = PsiTreeUtil.getParentOfType(statementAtCaret, GrControlStatement.class, false);\n\n    if (controlStatement != null && !PsiTreeUtil.hasErrorElements(statementAtCaret)) {\n      return controlStatement;\n    }\n\n    return statementAtCaret instanceof GrStatement ||\n           statementAtCaret instanceof GrMember\n           ? statementAtCaret\n           : null;\n  }","id":55600,"modified_method":"@Nullable\n  protected PsiElement getStatementAtCaret(Editor editor, PsiFile psiFile) {\n    final PsiElement atCaret = super.getStatementAtCaret(editor, psiFile);\n\n    if (atCaret instanceof PsiWhiteSpace) return null;\n    if (atCaret == null) return null;\n\n    GrCodeBlock codeBlock = PsiTreeUtil.getParentOfType(atCaret, GrCodeBlock.class, false, GrControlStatement.class);\n    if (codeBlock instanceof GrClosableBlock && \"{}\".equals(codeBlock.getText())) {\n      codeBlock = PsiTreeUtil.getParentOfType(codeBlock, GrCodeBlock.class, true, GrControlStatement.class);\n    }\n    if (codeBlock != null) {\n      for (GrStatement statement : codeBlock.getStatements()) {\n        if (PsiTreeUtil.isAncestor(statement, atCaret, true)) {\n          return statement;\n        }\n      }\n    }\n\n    PsiElement statementAtCaret = PsiTreeUtil.getParentOfType(atCaret,\n                                                              GrStatement.class,\n                                                              GrCodeBlock.class,\n                                                              PsiMember.class,\n                                                              GrDocComment.class\n    );\n\n    if (statementAtCaret instanceof GrBlockStatement) return null;\n    if (statementAtCaret == null) return null;\n\n    GrControlStatement controlStatement = PsiTreeUtil.getParentOfType(statementAtCaret, GrControlStatement.class, false);\n\n    if (controlStatement != null && !PsiTreeUtil.hasErrorElements(statementAtCaret)) {\n      return controlStatement;\n    }\n\n    return statementAtCaret instanceof GrStatement ||\n           statementAtCaret instanceof GrMember\n           ? statementAtCaret\n           : null;\n  }","commit_id":"91694acf45f28e0c068a8667ca27357d538120f1","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"protected static boolean isModified(@NotNull final Editor editor) {\n    final Long timestamp = editor.getUserData(SMART_ENTER_TIMESTAMP);\n    return editor.getDocument().getModificationStamp() != timestamp.longValue();\n  }","id":55601,"modified_method":"protected static boolean isModified(@NotNull final Editor editor) {\n    final Long timestamp = editor.getUserData(SMART_ENTER_TIMESTAMP);\n    assert timestamp != null;\n    return editor.getDocument().getModificationStamp() != timestamp.longValue();\n  }","commit_id":"91694acf45f28e0c068a8667ca27357d538120f1","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Nullable\n  private PsiElement getPsiElement() {\n    TreePath path = myTree.getSelectionPath();\n    if (path != null) {\n      DefaultMutableTreeNode node = (DefaultMutableTreeNode)path.getLastPathComponent();\n      if (node.getUserObject() instanceof ViewerNodeDescriptor) {\n        ViewerNodeDescriptor descriptor = (ViewerNodeDescriptor)node.getUserObject();\n        Object elementObject = descriptor.getElement();\n        return elementObject instanceof PsiElement\n               ? (PsiElement)elementObject\n               : elementObject instanceof ASTNode ? ((ASTNode)elementObject).getPsi() : null;\n      }\n    }\n    return null;\n  }","id":55602,"modified_method":"@Nullable\n  private PsiElement getPsiElement() {\n    final TreePath path = myTree.getSelectionPath();\n    return path == null ? null : getPsiElement((DefaultMutableTreeNode)path.getLastPathComponent());\n  }","commit_id":"c963b21766b97a07f51e792396ebd527d2ba9125","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public MyTreeSelectionListener() {\n      myAttributes = new TextAttributes();\n      myAttributes.setBackgroundColor(new Color(0, 0, 128));\n      myAttributes.setForegroundColor(Color.white);\n    }","id":55603,"modified_method":"public MyTreeSelectionListener() {\n      myAttributes = new TextAttributes();\n      myAttributes.setBackgroundColor(SELECTION_BG_COLOR);\n      myAttributes.setForegroundColor(Color.white);\n    }","commit_id":"c963b21766b97a07f51e792396ebd527d2ba9125","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"protected void init() {\n    initBorders();\n    final List<Presentation> items = new ArrayList<Presentation>();\n    final EditorFactory editorFactory = EditorFactory.getInstance();\n    final Document document = editorFactory.createDocument(\"\");\n    myEditor = editorFactory.createEditor(document, myProject);\n    myEditor.getSettings().setFoldingOutlineShown(false);\n\n    for (PsiViewerExtension extension : Extensions.getExtensions(PsiViewerExtension.EP_NAME)) {\n      final Presentation p = new Presentation(extension.getName());\n      p.setIcon(extension.getIcon());\n      handlers.put(p.getText(), extension);\n      items.add(p);\n    }\n\n    for (FileType fileType : FileTypeManager.getInstance().getRegisteredFileTypes()) {\n      if (fileType != StdFileTypes.GUI_DESIGNER_FORM &&\n          fileType != StdFileTypes.IDEA_MODULE &&\n          fileType != StdFileTypes.IDEA_PROJECT &&\n          fileType != StdFileTypes.IDEA_WORKSPACE &&\n          fileType != FileTypes.ARCHIVE &&\n          fileType != FileTypes.UNKNOWN &&\n          fileType != FileTypes.PLAIN_TEXT &&\n          !(fileType instanceof AbstractFileType) &&\n          !fileType.isBinary() &&\n          !fileType.isReadOnly()) {\n        final Presentation p = new Presentation(fileType.getName() + \" file\");\n        p.setIcon(fileType.getIcon());\n        handlers.put(p.getText(), fileType);\n        items.add(p);\n      }\n    }\n\n    final Presentation[] popupItems = items.toArray(new Presentation[items.size()]);\n    Arrays.sort(popupItems, new Comparator<Presentation>() {\n      public int compare(Presentation p1, Presentation p2) {\n        return p1.getText().toUpperCase().compareTo(p2.getText().toUpperCase());\n      }\n    });\n\n    final ViewerTreeStructure treeStructure = (ViewerTreeStructure)myTreeBuilder.getTreeStructure();\n    myShowWhiteSpacesBox.addActionListener(new ActionListener() {\n      public void actionPerformed(ActionEvent e) {\n        treeStructure.setShowWhiteSpaces(myShowWhiteSpacesBox.isSelected());\n        myTreeBuilder.queueUpdate();\n      }\n    });\n    myShowTreeNodesCheckBox.addActionListener(new ActionListener() {\n      public void actionPerformed(ActionEvent e) {\n        treeStructure.setShowTreeNodes(myShowTreeNodesCheckBox.isSelected());\n        myTreeBuilder.queueUpdate();\n      }\n    });\n    myTextPanel.setLayout(new BorderLayout());\n    myTextPanel.add(myEditor.getComponent(), BorderLayout.CENTER);\n\n    myGroup = new DefaultActionGroup();\n    for (final Presentation popupItem : popupItems) {\n      myGroup.add(new PopupItemAction(popupItem));\n    }\n\n    final PsiViewerSettings settings = PsiViewerSettings.getSettings();\n    final String type = settings.type;\n    for (Presentation popupItem : popupItems) {\n      if (popupItem.getText().equals(type)) {\n        updatePresentation(popupItem);\n        break;\n      }\n    }\n\n    ApplicationManager.getApplication().runWriteAction(new Runnable() {\n      public void run() {\n        myEditor.getDocument().setText(settings.text);\n      }\n    });\n\n    myShowWhiteSpacesBox.setSelected(settings.showWhiteSpaces);\n    myShowTreeNodesCheckBox.setSelected(settings.showTreeNodes);\n\n    final ChoosePsiTypeButton typeButton = new ChoosePsiTypeButton();\n    myButtonPanel.add(typeButton.createCustomComponent(myPresentation), BorderLayout.CENTER);\n\n    updateDialectsCombo();\n    if (myDialectsComboBox.isVisible()) {\n      for (int i = 0; i < myLanguageDialects.length; i++) {\n        if (settings.dialect.equals(myLanguageDialects[i].toString())) {\n          myDialectsComboBox.setSelectedIndex(i);\n          break;\n        }\n      }\n    }\n\n    registerCustomKeyboardActions();\n    super.init();\n  }","id":55604,"modified_method":"protected void init() {\n    initBorders();\n    final List<Presentation> items = new ArrayList<Presentation>();\n    final EditorFactory editorFactory = EditorFactory.getInstance();\n    final Document document = editorFactory.createDocument(\"\");\n    myEditor = editorFactory.createEditor(document, myProject);\n    myEditor.getSettings().setFoldingOutlineShown(false);\n    document.addDocumentListener(myEditorListener);\n    myEditor.getSelectionModel().addSelectionListener(myEditorListener);\n    myEditor.getCaretModel().addCaretListener(myEditorListener);\n\n    for (PsiViewerExtension extension : Extensions.getExtensions(PsiViewerExtension.EP_NAME)) {\n      final Presentation p = new Presentation(extension.getName());\n      p.setIcon(extension.getIcon());\n      handlers.put(p.getText(), extension);\n      items.add(p);\n    }\n\n    for (FileType fileType : FileTypeManager.getInstance().getRegisteredFileTypes()) {\n      if (fileType != StdFileTypes.GUI_DESIGNER_FORM &&\n          fileType != StdFileTypes.IDEA_MODULE &&\n          fileType != StdFileTypes.IDEA_PROJECT &&\n          fileType != StdFileTypes.IDEA_WORKSPACE &&\n          fileType != FileTypes.ARCHIVE &&\n          fileType != FileTypes.UNKNOWN &&\n          fileType != FileTypes.PLAIN_TEXT &&\n          !(fileType instanceof AbstractFileType) &&\n          !fileType.isBinary() &&\n          !fileType.isReadOnly()) {\n        final Presentation p = new Presentation(fileType.getName() + \" file\");\n        p.setIcon(fileType.getIcon());\n        handlers.put(p.getText(), fileType);\n        items.add(p);\n      }\n    }\n\n    final Presentation[] popupItems = items.toArray(new Presentation[items.size()]);\n    Arrays.sort(popupItems, new Comparator<Presentation>() {\n      public int compare(Presentation p1, Presentation p2) {\n        return p1.getText().toUpperCase().compareTo(p2.getText().toUpperCase());\n      }\n    });\n\n    final ViewerTreeStructure treeStructure = (ViewerTreeStructure)myTreeBuilder.getTreeStructure();\n    myShowWhiteSpacesBox.addActionListener(new ActionListener() {\n      public void actionPerformed(ActionEvent e) {\n        treeStructure.setShowWhiteSpaces(myShowWhiteSpacesBox.isSelected());\n        myTreeBuilder.queueUpdate();\n      }\n    });\n    myShowTreeNodesCheckBox.addActionListener(new ActionListener() {\n      public void actionPerformed(ActionEvent e) {\n        treeStructure.setShowTreeNodes(myShowTreeNodesCheckBox.isSelected());\n        myTreeBuilder.queueUpdate();\n      }\n    });\n    myTextPanel.setLayout(new BorderLayout());\n    myTextPanel.add(myEditor.getComponent(), BorderLayout.CENTER);\n\n    myGroup = new DefaultActionGroup();\n    for (final Presentation popupItem : popupItems) {\n      myGroup.add(new PopupItemAction(popupItem));\n    }\n\n    final PsiViewerSettings settings = PsiViewerSettings.getSettings();\n    final String type = settings.type;\n    for (Presentation popupItem : popupItems) {\n      if (popupItem.getText().equals(type)) {\n        updatePresentation(popupItem);\n        break;\n      }\n    }\n\n    ApplicationManager.getApplication().runWriteAction(new Runnable() {\n      public void run() {\n        myEditor.getDocument().setText(settings.text);\n      }\n    });\n\n    myShowWhiteSpacesBox.setSelected(settings.showWhiteSpaces);\n    myShowTreeNodesCheckBox.setSelected(settings.showTreeNodes);\n\n    final ChoosePsiTypeButton typeButton = new ChoosePsiTypeButton();\n    myButtonPanel.add(typeButton.createCustomComponent(myPresentation), BorderLayout.CENTER);\n\n    updateDialectsCombo();\n    if (myDialectsComboBox.isVisible()) {\n      for (int i = 0; i < myLanguageDialects.length; i++) {\n        if (settings.dialect.equals(myLanguageDialects[i].toString())) {\n          myDialectsComboBox.setSelectedIndex(i);\n          break;\n        }\n      }\n    }\n\n    registerCustomKeyboardActions();\n    super.init();\n  }","commit_id":"c963b21766b97a07f51e792396ebd527d2ba9125","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"protected void doOKAction() {\n    final String text = myEditor.getDocument().getText();\n    if (text.trim().length() == 0) return;\n\n    myLastParsedText = text;\n    PsiElement rootElement = null;\n    final Object handler = getHandler();\n\n    try {\n      if (handler instanceof PsiViewerExtension) {\n        final PsiViewerExtension ext = (PsiViewerExtension)handler;\n        rootElement = ext.createElement(myProject, text);\n      }\n      else if (handler instanceof FileType) {\n        final FileType type = (FileType)handler;\n        if (type instanceof LanguageFileType) {\n          final Language language = ((LanguageFileType)type).getLanguage();\n          final Language dialect = (Language)myDialectsComboBox.getSelectedItem();\n          rootElement = PsiFileFactory.getInstance(myProject)\n            .createFileFromText(\"Dummy.\" + type.getDefaultExtension(), dialect == null ? language : dialect, text);\n        }\n        else {\n          rootElement = PsiFileFactory.getInstance(myProject).createFileFromText(\"Dummy.\" + type.getDefaultExtension(), text);\n        }\n      }\n      focusTree();\n    }\n    catch (IncorrectOperationException e1) {\n      rootElement = null;\n      Messages.showMessageDialog(myProject, e1.getMessage(), \"Error\", Messages.getErrorIcon());\n    }\n    ViewerTreeStructure structure = (ViewerTreeStructure)myTreeBuilder.getTreeStructure();\n    structure.setRootPsiElement(rootElement);\n\n    myTreeBuilder.queueUpdate();\n    myTree.setRootVisible(true);\n    myTree.expandRow(0);\n    myTree.setRootVisible(false);\n  }","id":55605,"modified_method":"protected void doOKAction() {\n    final String text = myEditor.getDocument().getText();\n    if (text.trim().length() == 0) return;\n\n    myLastParsedText = text;\n    myLastParsedTextHashCode = text.hashCode();\n    myNewDocumentHashCode = myLastParsedTextHashCode;\n    PsiElement rootElement = null;\n    final Object handler = getHandler();\n\n    try {\n      if (handler instanceof PsiViewerExtension) {\n        final PsiViewerExtension ext = (PsiViewerExtension)handler;\n        rootElement = ext.createElement(myProject, text);\n      }\n      else if (handler instanceof FileType) {\n        final FileType type = (FileType)handler;\n        if (type instanceof LanguageFileType) {\n          final Language language = ((LanguageFileType)type).getLanguage();\n          final Language dialect = (Language)myDialectsComboBox.getSelectedItem();\n          rootElement = PsiFileFactory.getInstance(myProject)\n            .createFileFromText(\"Dummy.\" + type.getDefaultExtension(), dialect == null ? language : dialect, text);\n        }\n        else {\n          rootElement = PsiFileFactory.getInstance(myProject).createFileFromText(\"Dummy.\" + type.getDefaultExtension(), text);\n        }\n      }\n      focusTree();\n    }\n    catch (IncorrectOperationException e1) {\n      rootElement = null;\n      Messages.showMessageDialog(myProject, e1.getMessage(), \"Error\", Messages.getErrorIcon());\n    }\n    ViewerTreeStructure structure = (ViewerTreeStructure)myTreeBuilder.getTreeStructure();\n    structure.setRootPsiElement(rootElement);\n\n    myTreeBuilder.queueUpdate();\n    myTree.setRootVisible(true);\n    myTree.expandRow(0);\n    myTree.setRootVisible(false);\n  }","commit_id":"c963b21766b97a07f51e792396ebd527d2ba9125","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void valueChanged(TreeSelectionEvent e) {\n      if (!myEditor.getDocument().getText().equals(myLastParsedText)) return;\n      TreePath path = myTree.getSelectionPath();\n      if (path == null) {\n        clearSelection();\n      }\n      else {\n        clearSelection();\n        DefaultMutableTreeNode node = (DefaultMutableTreeNode)path.getLastPathComponent();\n        if (!(node.getUserObject() instanceof ViewerNodeDescriptor)) return;\n        ViewerNodeDescriptor descriptor = (ViewerNodeDescriptor)node.getUserObject();\n        Object elementObject = descriptor.getElement();\n        final PsiElement element = elementObject instanceof PsiElement\n                                   ? (PsiElement)elementObject\n                                   : elementObject instanceof ASTNode ? ((ASTNode)elementObject).getPsi() : null;\n        if (element != null) {\n          TextRange range = element.getTextRange();\n          int start = range.getStartOffset();\n          int end = range.getEndOffset();\n          final ViewerTreeStructure treeStructure = (ViewerTreeStructure)myTreeBuilder.getTreeStructure();\n          PsiElement rootPsiElement = treeStructure.getRootPsiElement();\n          if (rootPsiElement != null) {\n            int baseOffset = rootPsiElement.getTextRange().getStartOffset();\n            start -= baseOffset;\n            end -= baseOffset;\n          }\n\n          final int textLength = myEditor.getDocument().getTextLength();\n          if (end <= textLength) {\n            myEditor.getMarkupModel()\n              .addRangeHighlighter(start, end, HighlighterLayer.FIRST + 1, myAttributes, HighlighterTargetArea.EXACT_RANGE);\n            myEditor.getCaretModel().moveToOffset(start);\n            myEditor.getScrollingModel().scrollToCaret(ScrollType.MAKE_VISIBLE);\n          }\n          updateReferences(element);\n        }\n      }\n    }","id":55606,"modified_method":"public void valueChanged(TreeSelectionEvent e) {\n      if (!myEditor.getDocument().getText().equals(myLastParsedText)) return;\n      TreePath path = myTree.getSelectionPath();\n      if (path == null) {\n        clearSelection();\n      }\n      else {\n        clearSelection();\n        DefaultMutableTreeNode node = (DefaultMutableTreeNode)path.getLastPathComponent();\n        if (!(node.getUserObject() instanceof ViewerNodeDescriptor)) return;\n        ViewerNodeDescriptor descriptor = (ViewerNodeDescriptor)node.getUserObject();\n        Object elementObject = descriptor.getElement();\n        final PsiElement element = elementObject instanceof PsiElement\n                                   ? (PsiElement)elementObject\n                                   : elementObject instanceof ASTNode ? ((ASTNode)elementObject).getPsi() : null;\n        if (element != null) {\n          TextRange range = element.getTextRange();\n          int start = range.getStartOffset();\n          int end = range.getEndOffset();\n          final ViewerTreeStructure treeStructure = (ViewerTreeStructure)myTreeBuilder.getTreeStructure();\n          PsiElement rootPsiElement = treeStructure.getRootPsiElement();\n          if (rootPsiElement != null) {\n            int baseOffset = rootPsiElement.getTextRange().getStartOffset();\n            start -= baseOffset;\n            end -= baseOffset;\n          }\n\n          final int textLength = myEditor.getDocument().getTextLength();\n          if (end <= textLength) {\n            myEditor.getMarkupModel()\n              .addRangeHighlighter(start, end, HighlighterLayer.FIRST + 1, myAttributes, HighlighterTargetArea.EXACT_RANGE);\n            if (myTree.hasFocus()) {\n              myEditor.getCaretModel().moveToOffset(start);\n              myEditor.getScrollingModel().scrollToCaret(ScrollType.MAKE_VISIBLE);\n            } else {\n              myEditor.getScrollingModel().scrollTo(myEditor.offsetToLogicalPosition(start), ScrollType.MAKE_VISIBLE);\n            }\n          }\n          updateReferences(element);\n        }\n      }\n    }","commit_id":"c963b21766b97a07f51e792396ebd527d2ba9125","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public Object getParentElement(Object element) {\n    return null;\n    //if (element == myRootElement) {\n    //  return null;\n    //}\n    //if (element == myRootPsiElement) {\n    //  return myRootElement;\n    //}\n    //PsiElement parent = ((PsiElement)element).getParent();\n    //return parent;\n  }","id":55607,"modified_method":"public Object getParentElement(Object element) {\n    if (element == myRootElement) {\n      return null;\n    }\n    if (element == myRootPsiElement) {\n      return myRootElement;\n    }\n    return ((PsiElement)element).getParent();\n  }","commit_id":"c963b21766b97a07f51e792396ebd527d2ba9125","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public DataSourceList(DataSourceViewer dsViewer) {\n        super(new DefaultListModel());\n        this.dsViewer = dsViewer;\n        this.setSelectionMode(DefaultListSelectionModel.SINGLE_SELECTION);\n        this.setFixedCellHeight(-1);\n        dropTarget = new DropTarget(this,  ACCEPTABLE_DROP_TYPES, this);\n        \n        breakIcon.setIconWidth(1600);\n        breakIcon.setIconHeight(1);\n        DefaultListCellRenderer renderer = new DefaultListCellRenderer() {\n            public Component getListCellRendererComponent(JList list,Object value, int index, boolean iss,boolean chf)   {\n                \n                if (value instanceof String){\n                    \n                    super.getListCellRendererComponent(list,\"\",index,iss,chf);\n                }\n                        else{\n                    \n                super.getListCellRendererComponent(list,((DataSource)value).getDisplayName(), index, iss, chf);\n                        }\n                \n                //if (((DataSource)value).getType() == DataSource.FAVORITES){\n                \n                if (value instanceof FavoritesDataSource){\n                    setIcon(myFavoritesIcon);\n                    this.setPreferredSize(new Dimension(200,20));\n                }\n                \n                /*\n                \n                else if (((DataSource)value).getType() == DataSource.FILING_LOCAL){\n                    \n                    setIcon(myComputerIcon);\n                    this.setPreferredSize(new Dimension(200,20));\n                }\n                 */\n                else  if (value instanceof String){\n                    \n                    \n                  \n                     JPanel linePanel = new JPanel() {\n                   protected void paintComponent(Graphics g) {\n                     Graphics2D g2d = (Graphics2D)g;\n                        g2d.setColor(Color.LIGHT_GRAY);\n                         float dash1[] = {3.0f};\n                        BasicStroke dashed = new BasicStroke(1.0f, \n                                                      BasicStroke.CAP_BUTT, \n                                                      BasicStroke.JOIN_MITER, \n                                                     10.0f, dash1, 0.0f);\n                        g2d.setStroke(dashed);\n                        JPanel tpanel =(JPanel)(DataSourceList.this.dsViewer).getComponent(0);\n                        JScrollPane jsp = (JScrollPane)tpanel.getComponent(1);\n                        int width = jsp.getViewport().getViewSize().width;\n                        g2d.drawLine(0, 3, width-10, 3);\n\n                 \n                   }\n                   };\n                       \n                   \n                   \n                  \n                  this.setPreferredSize(new Dimension(200,20));\n                    \n                   // return new JButton(\"hello\");\n                  return linePanel;\n                    \n                   \n                    \n                }\n                 \n                else{\n                    setIcon(remoteIcon);\n                    this.setPreferredSize(new Dimension(200,20));\n                    \n                }\n                \n                \n                return this;\n                \n            }\n            \n            \n            \n            \n        };\n        \n        this.setCellRenderer(renderer);\n    }","id":55608,"modified_method":"public DataSourceList(DataSourceViewer dsViewer) {\n        super(new DefaultListModel());\n        this.dsViewer = dsViewer;\n        this.setSelectionMode(DefaultListSelectionModel.SINGLE_SELECTION);\n        this.setFixedCellHeight(-1);\n        dropTarget = new DropTarget(this,  ACCEPTABLE_DROP_TYPES, this);\n        \n        breakIcon.setIconWidth(1600);\n        breakIcon.setIconHeight(1);\n        DefaultListCellRenderer renderer = new DefaultListCellRenderer() {\n            public Component getListCellRendererComponent(JList list,Object value, int index, boolean iss,boolean chf)   {\n                \n                if (value instanceof String){\n                    \n                    super.getListCellRendererComponent(list,\"\",index,iss,chf);\n                }\n                        else{\n                    \n                super.getListCellRendererComponent(list,((DataSource)value).getDisplayName(), index, iss, chf);\n                        }\n                \n               \n                \n                if (value instanceof FavoritesDataSource){\n                    setIcon(myFavoritesIcon);\n                    this.setPreferredSize(new Dimension(200,20));\n                }\n                \n                else if (value instanceof LocalFileDataSource){\n                    \n                     setIcon(myComputerIcon);\n                    this.setPreferredSize(new Dimension(200,20)); \n                    \n                }\n               \n                else  if (value instanceof String){\n                    \n                    \n                  \n                     JPanel linePanel = new JPanel() {\n                   protected void paintComponent(Graphics g) {\n                     Graphics2D g2d = (Graphics2D)g;\n                        g2d.setColor(Color.LIGHT_GRAY);\n                         float dash1[] = {3.0f};\n                        BasicStroke dashed = new BasicStroke(1.0f, \n                                                      BasicStroke.CAP_BUTT, \n                                                      BasicStroke.JOIN_MITER, \n                                                     10.0f, dash1, 0.0f);\n                        g2d.setStroke(dashed);\n                        JPanel tpanel =(JPanel)(DataSourceList.this.dsViewer).getComponent(0);\n                        JScrollPane jsp = (JScrollPane)tpanel.getComponent(1);\n                        int width = jsp.getViewport().getViewSize().width;\n                        g2d.drawLine(0, 3, width-10, 3);\n\n                 \n                   }\n                   };\n                       \n                   \n                   \n                   \n                  this.setPreferredSize(new Dimension(200,3));\n                    \n                  \n                  return linePanel;\n                    \n                   \n                    \n                }\n                 \n                else{\n                    setIcon(remoteIcon);\n                    this.setPreferredSize(new Dimension(200,20));\n                    \n                }\n                \n                \n                return this;\n                \n            }\n            \n            \n            \n            \n        };\n        \n        this.setCellRenderer(renderer);\n    }","commit_id":"82d29d2a7521ef6bd40bd25fcaa115b3d5a519bf","url":"https://github.com/VUE/VUE"},{"original_method":"public void loadDataSources(){\n        \n          Vector dataSource0 = new Vector();       \n          Vector dataSource1 = new Vector();\n         Vector dataSource2 = new Vector();\n          Vector dataSource3 = new Vector();\n         Vector dataSource4 = new Vector();\n      \n         allDataSources.add(dataSource0);\n         allDataSources.add(dataSource1);\n         allDataSources.add(dataSource2);\n            allDataSources.add(dataSource3);\n         allDataSources.add(dataSource4);\n       \n        \n         \n           \n               DataSource ds1 = new LocalFileDataSource(\"My Computer\", \"\");\n               addDataSource(ds1);\n        \n               DataSource ds2 = new FavoritesDataSource(\"My Favorites\");\n               addDataSource(ds2);\n               \n             \n               DataSource ds3 = new FedoraDataSource(\"Tufts Digital Library\",\"vue-dl.tccs.tufts.edu\",\"test\",\"test\");\n               addDataSource(ds3);\n       \n        \n               DataSource ds4 = new GoogleDataSource(\"Tufts Google\", VueResources.getString(\"url.google\"));\n               addDataSource(ds4);\n               \n             \n               \n          \n             \n           setActiveDataSource(ds1);\n               refreshDataSourceList();\n             \n             \n             \n    \n        \n        \n    }","id":55609,"modified_method":"public void loadDataSources(){\n        \n          Vector dataSource0 = new Vector();       \n          Vector dataSource1 = new Vector();\n         Vector dataSource2 = new Vector();\n          Vector dataSource3 = new Vector();\n         Vector dataSource4 = new Vector();\n      \n         allDataSources.add(dataSource0);\n         allDataSources.add(dataSource1);\n         allDataSources.add(dataSource2);\n            allDataSources.add(dataSource3);\n         allDataSources.add(dataSource4);\n\n         \n         File f  = new File(VueUtil.getDefaultUserFolder().getAbsolutePath()+File.separatorChar+VueResources.getString(\"save.datasources\"));\n        \n\n                 try{\n               SaveDataSourceViewer rViewer = unMarshallMap(f);\n               Vector rsources = rViewer.getSaveDataSources();\n                while (!(rsources.isEmpty())){\n                    DataSource ds = (DataSource)rsources.remove(0);\n                    System.out.println(ds.getDisplayName()+ds.getClass());\n                    try {\n                        ds.setResourceViewer();\n                        addDataSource(ds);\n                        setActiveDataSource(ds);\n                              \n                    } catch(Exception ex) {System.out.println(\"this is a problem in restoring the datasources\");}\n                   \n                }\n                 \n                 \n                }catch (Exception ex) {\n                             \n                VueUtil.alert(null,\"Previously saved datasources file does not exist or cannot be read. Adding Default Datasources\",\"Loading Datasources\");\n               DataSource ds1 = new LocalFileDataSource(\"My Computer\",\"\");\n                addDataSource(ds1);\n               DataSource ds2 = new FavoritesDataSource(\"My Favorites\");\n                 addDataSource(ds2);\n               DataSource ds3 = new FedoraDataSource(\"Tufts Digital Library\",\"vue-dl.tccs.tufts.edu\", \"test\",\"test\");\n                 addDataSource(ds3);\n               DataSource ds4 = new GoogleDataSource(\"Tufts Web\",VueResources.getString(\"url.google\"));\n               addDataSource(ds4);\n                setActiveDataSource(ds2);\n               \n                 }\n               \n           \n               \n       \n          \n          \n                \n               refreshDataSourceList();\n             \n             \n             \n    \n        \n        \n    }","commit_id":"82d29d2a7521ef6bd40bd25fcaa115b3d5a519bf","url":"https://github.com/VUE/VUE"},{"original_method":"public DataSourceViewer(DRBrowser drBrowser){\n        \n        \n        setLayout(new BorderLayout());\n        setBorder(new TitledBorder(\"DataSource\"));\n        this.drBrowser = drBrowser;\n        resourcesPanel = new JPanel();\n        \n        dataSourceList = new DataSourceList(this);\n        dataSourceList.addKeyListener(this);\n        \n        \n        loadDataSources();  \n     \n       // if (loadingFromFile)dataSourceChanged = false;\n       setPopup(); \n        dataSourceList.addListSelectionListener(new ListSelectionListener() {\n           public void valueChanged(ListSelectionEvent e) {\n               \n              if ((DataSource)((JList)e.getSource()).getSelectedValue()!=null){\n              if (!(((JList)e.getSource()).getSelectedValue() instanceof String)){\n               DataSourceViewer.this.setActiveDataSource(((DataSource)((JList)e.getSource()).getSelectedValue()));\n              }\n               \n            }}\n        });\n        dataSourceList.addMouseListener(new MouseAdapter() {\n           public void mouseClicked(MouseEvent e) {\n               if(e.getButton() == e.BUTTON3) {\n                  popup.show(e.getComponent(), e.getX(), e.getY());\n                }\n            }\n       });\n        \n        \n        // GRID: addConditionButton\n        JButton addButton=new VueButton(\"add\");\n        addButton.setBackground(this.getBackground());\n        addButton.setToolTipText(\"Add/Edit Datasource Information\");\n        \n        addButton.addActionListener(new ActionListener() {\n            public void actionPerformed(ActionEvent e) {\n               showAddEditWindow(0);\n                \n            }\n        });\n        \n        \n        // GRID: deleteConditionButton\n        JButton deleteButton=new VueButton(\"delete\");\n        deleteButton.setBackground(this.getBackground());\n        deleteButton.setToolTipText(\"Remove a Datasource from VUE\");\n        \n        deleteButton.addActionListener(new ActionListener() {\n            public void actionPerformed(ActionEvent e) {\n               deleteDataSource(activeDataSource);\n              \n               refreshDataSourceList();\n               if (!dataSourceList.getContents().isEmpty())dataSourceList.setSelectedIndex(0);\n               else{ \n                     DataSourceViewer.this.drBrowser.remove(resourcesPanel);\n                     DataSourceViewer.this.resourcesPanel  = new JPanel();\n                     DataSourceViewer.this.drBrowser.add(resourcesPanel,BorderLayout.CENTER);\n                     DataSourceViewer.this.drBrowser.repaint();\n                     DataSourceViewer.this.drBrowser.validate();\n               }\n            }\n        });\n\n        \n           // GRID: addConditionButton\n        \n        \n        JButton refreshButton=new VueButton(\"refresh\");\n        \n        refreshButton.setBackground(this.getBackground());\n        refreshButton.setToolTipText(\"Refresh Local Datasource\");\n        \n        refreshButton.addActionListener(new ActionListener() {\n            public void actionPerformed(ActionEvent e) {\n               activeDataSource.setResourceViewer();\n               refreshDataSourceList();\n               \n            }\n        });\n        \n        \n        JLabel questionLabel = new JLabel(VueResources.getImageIcon(\"smallInfo\"), JLabel.LEFT);\n        questionLabel.setPreferredSize(new Dimension(22, 17));\n        questionLabel.setToolTipText(\"Add/Delete/Refresh a Data Source\");\n        \n        JPanel topPanel=new JPanel(new FlowLayout(FlowLayout.RIGHT,2,0));\n       \n        \n        topPanel.add(addButton);\n        topPanel.add(deleteButton);\n        topPanel.add(refreshButton);\n        topPanel.add(questionLabel);\n     \n        \n       \n        dataSourcePanel = new JPanel();\n        dataSourcePanel.setLayout(new BorderLayout());\n        dataSourcePanel.add(topPanel,BorderLayout.NORTH);\n      \n        \n        JScrollPane dataJSP = new JScrollPane(dataSourceList);\n        dataSourcePanel.add(dataJSP,BorderLayout.CENTER);\n        add(dataSourcePanel,BorderLayout.CENTER);\n        drBrowser.add(resourcesPanel,BorderLayout.CENTER);\n\n   \n        \n    }","id":55610,"modified_method":"public DataSourceViewer(DRBrowser drBrowser){\n        \n        \n        setLayout(new BorderLayout());\n        setBorder(new TitledBorder(\"DataSource\"));\n        this.drBrowser = drBrowser;\n        resourcesPanel = new JPanel();\n        \n        dataSourceList = new DataSourceList(this);\n        dataSourceList.addKeyListener(this);\n        \n        \n        loadDataSources();  \n     \n       // if (loadingFromFile)dataSourceChanged = false;\n       setPopup(); \n        dataSourceList.addListSelectionListener(new ListSelectionListener() {\n           public void valueChanged(ListSelectionEvent e) {\n               \n              if ((DataSource)((JList)e.getSource()).getSelectedValue()!=null){\n                System.out.print(\"do I get here?\"); \n               DataSourceViewer.this.setActiveDataSource(((DataSource)((JList)e.getSource()).getSelectedValue()));\n              \n               \n            }}\n        });\n        dataSourceList.addMouseListener(new MouseAdapter() {\n           public void mouseClicked(MouseEvent e) {\n               if(e.getButton() == e.BUTTON3) {\n                  popup.show(e.getComponent(), e.getX(), e.getY());\n                }\n            }\n       });\n        \n        \n        // GRID: addConditionButton\n        JButton addButton=new VueButton(\"add\");\n        addButton.setBackground(this.getBackground());\n        addButton.setToolTipText(\"Add/Edit Datasource Information\");\n        \n        addButton.addActionListener(new ActionListener() {\n            public void actionPerformed(ActionEvent e) {\n               showAddEditWindow(0);\n                \n            }\n        });\n        \n        \n        // GRID: deleteConditionButton\n        JButton deleteButton=new VueButton(\"delete\");\n        deleteButton.setBackground(this.getBackground());\n        deleteButton.setToolTipText(\"Remove a Datasource from VUE\");\n        \n        deleteButton.addActionListener(new ActionListener() {\n            public void actionPerformed(ActionEvent e) {\n               deleteDataSource(activeDataSource);\n              \n               refreshDataSourceList();\n               if (!dataSourceList.getContents().isEmpty())dataSourceList.setSelectedIndex(0);\n               else{ \n                     DataSourceViewer.this.drBrowser.remove(resourcesPanel);\n                     DataSourceViewer.this.resourcesPanel  = new JPanel();\n                     DataSourceViewer.this.drBrowser.add(resourcesPanel,BorderLayout.CENTER);\n                     DataSourceViewer.this.drBrowser.repaint();\n                     DataSourceViewer.this.drBrowser.validate();\n               }\n            }\n        });\n\n        \n           // GRID: addConditionButton\n        \n        \n        JButton refreshButton=new VueButton(\"refresh\");\n        \n        refreshButton.setBackground(this.getBackground());\n        refreshButton.setToolTipText(\"Refresh Local Datasource\");\n        \n        refreshButton.addActionListener(new ActionListener() {\n            public void actionPerformed(ActionEvent e) {\n               activeDataSource.setResourceViewer();\n               refreshDataSourceList();\n               \n            }\n        });\n        \n        \n        JLabel questionLabel = new JLabel(VueResources.getImageIcon(\"smallInfo\"), JLabel.LEFT);\n        questionLabel.setPreferredSize(new Dimension(22, 17));\n        questionLabel.setToolTipText(\"Add/Delete/Refresh a Data Source\");\n        \n        JPanel topPanel=new JPanel(new FlowLayout(FlowLayout.RIGHT,2,0));\n       \n        \n        topPanel.add(addButton);\n        topPanel.add(deleteButton);\n        topPanel.add(refreshButton);\n        topPanel.add(questionLabel);\n     \n        \n       \n        dataSourcePanel = new JPanel();\n        dataSourcePanel.setLayout(new BorderLayout());\n        dataSourcePanel.add(topPanel,BorderLayout.NORTH);\n      \n        \n        JScrollPane dataJSP = new JScrollPane(dataSourceList);\n        dataSourcePanel.add(dataJSP,BorderLayout.CENTER);\n        add(dataSourcePanel,BorderLayout.CENTER);\n        drBrowser.add(resourcesPanel,BorderLayout.CENTER);\n\n   \n        \n    }","commit_id":"82d29d2a7521ef6bd40bd25fcaa115b3d5a519bf","url":"https://github.com/VUE/VUE"},{"original_method":"private static void saveDataSourceInfo()\n    {\n        DataSource ds;\n        ListModel model = tufts.vue.DataSourceViewer.dataSourceList.getModel();\n        int i;\n         \n        for (i =0 ; i< model.getSize(); i++){\n\n            Object o = model.getElementAt(i);\n        \n            if (o instanceof DataSource)\n                ds = (DataSource) o;\n            else {\n                // TODO: somebody fix this or comment out as okay condition (we're\n                // seeing String's in the model -- this was throwing class-cast exceptions\n                // as a String is not a DataSource... SMF 2004-06-10 17:53)\n                System.err.println(\"Don't know how to save data source model element of type \"\n                                   + o.getClass()\n                                   + \" object=[\" + o + \"]\"\n                                   );\n                continue;\n            }\n         \n            if (ds instanceof FavoritesDataSource){\n            \n                FavoritesWindow fw = (FavoritesWindow)ds.getResourceViewer();              \n                if (fw.favoritesTree != null)  {\n                    //Saving favorites\n            \n                    tufts.vue.VueDandDTree ft = ((FavoritesWindow)ds.getResourceViewer()).getFavoritesTree();\n                    ft.setRootVisible(true);\n                    System.out.println(\"This is tree [\" + (ft.getModel()).getRoot() + \"]\");\n                    tufts.vue.SaveVueJTree sfavtree = new tufts.vue.SaveVueJTree(ft);\n                    File favf  = new File(VueUtil.getDefaultUserFolder().getAbsolutePath()+File.separatorChar+ds.getDisplayName()+VueResources.getString(\"save.favorites\"));\n                    ((FavoritesWindow)ds.getResourceViewer()).marshallFavorites(favf,sfavtree);\n                    System.out.println(\"Favorites Saved [\"+ds.getDisplayName() + \"] to \" + favf);\n                }\n            }\n        }\n        //tufts.vue.DataSourceViewer.saveDataSourceViewer();\n    }","id":55611,"modified_method":"private static void saveDataSourceInfo()\n    {\n        DataSource ds;\n        ListModel model = tufts.vue.DataSourceViewer.dataSourceList.getModel();\n        int i;\n         \n        for (i =0 ; i< model.getSize(); i++){\n\n           \n        \n\n            if (!(model.getElementAt(i) instanceof String))\n            {\n                ds = (DataSource)model.getElementAt(i) ;\n       \n            if (ds instanceof FavoritesDataSource){\n            \n                FavoritesWindow fw = (FavoritesWindow)ds.getResourceViewer();              \n                if (fw.favoritesTree != null)  {\n                    //Saving favorites\n            \n                    tufts.vue.VueDandDTree ft = ((FavoritesWindow)ds.getResourceViewer()).getFavoritesTree();\n                    ft.setRootVisible(true);\n                  //  System.out.println(\"This is tree [\" + (ft.getModel()).getRoot() + \"]\");\n                    tufts.vue.SaveVueJTree sfavtree = new tufts.vue.SaveVueJTree(ft);\n                    File favf  = new File(VueUtil.getDefaultUserFolder().getAbsolutePath()+File.separatorChar+ds.getDisplayName()+VueResources.getString(\"save.favorites\"));\n                    ((FavoritesWindow)ds.getResourceViewer()).marshallFavorites(favf,sfavtree);\n                    //System.out.println(\"Favorites Saved [\"+ds.getDisplayName() + \"] to \" + favf);\n                }\n            }\n\n            }\n        }\n        \n        tufts.vue.DataSourceViewer.saveDataSourceViewer();\n         \n        \n \n        }","commit_id":"82d29d2a7521ef6bd40bd25fcaa115b3d5a519bf","url":"https://github.com/VUE/VUE"},{"original_method":"public  SaveVueJTree unMarshallFavorites(File file) {\n        Unmarshaller unmarshaller = null;\n        SaveVueJTree sTree = null;\n        \n        try {\n            unmarshaller = new Unmarshaller(ActionUtil.getDefaultMapping());\n            FileReader reader = new FileReader(file);\n            sTree= (SaveVueJTree) unmarshaller.unmarshal(new InputSource(reader));\n            reader.close();\n        } catch (Exception e) {\n            e.printStackTrace();\n            System.err.println(\"FavoritesWindow.unmarshallFavorites: \" + e);\n            sTree = null;\n        }\n        return sTree;\n    }","id":55612,"modified_method":"public  SaveVueJTree unMarshallFavorites(File file) {\n        Unmarshaller unmarshaller = null;\n        SaveVueJTree sTree = null;\n        \n        try {\n            unmarshaller = new Unmarshaller(ActionUtil.getDefaultMapping());\n            FileReader reader = new FileReader(file);\n            sTree= (SaveVueJTree) unmarshaller.unmarshal(new InputSource(reader));\n            reader.close();\n        } catch (Exception e) {\n           // e.printStackTrace();\n            //System.err.println(\"FavoritesWindow.unmarshallFavorites: \" + e);\n            sTree = null;\n        }\n        return sTree;\n    }","commit_id":"82d29d2a7521ef6bd40bd25fcaa115b3d5a519bf","url":"https://github.com/VUE/VUE"},{"original_method":"public static void marshallFavorites(File file,SaveVueJTree favoritesTree) {\n        Marshaller marshaller = null;\n        Mapping mapping = new Mapping();\n        \n        try {\n            FileWriter writer = new FileWriter(file);\n            marshaller = new Marshaller(writer);\n            marshaller.setMapping(ActionUtil.getDefaultMapping());\n            marshaller.marshal(favoritesTree);\n            writer.flush();\n            writer.close();\n        } catch (Exception e) {\n            e.printStackTrace();\n            System.err.println(\"FavoritesWindow.marshallFavorites: \" + e);\n        }\n    }","id":55613,"modified_method":"public static void marshallFavorites(File file,SaveVueJTree favoritesTree) {\n        Marshaller marshaller = null;\n        Mapping mapping = new Mapping();\n        \n        try {\n            FileWriter writer = new FileWriter(file);\n            marshaller = new Marshaller(writer);\n            marshaller.setMapping(ActionUtil.getDefaultMapping());\n            marshaller.marshal(favoritesTree);\n            writer.flush();\n            writer.close();\n        } catch (Exception e) {\n           // e.printStackTrace();\n            //System.err.println(\"FavoritesWindow.marshallFavorites: \" + e);\n        }\n    }","commit_id":"82d29d2a7521ef6bd40bd25fcaa115b3d5a519bf","url":"https://github.com/VUE/VUE"},{"original_method":"public String getUserName(){\n        \n        return this.username;\n        \n    }","id":55614,"modified_method":"public String getUserName(){\n        \n        return this.UserName;\n        \n    }","commit_id":"82d29d2a7521ef6bd40bd25fcaa115b3d5a519bf","url":"https://github.com/VUE/VUE"},{"original_method":"public void  setResourceViewer(){\n             \n       try{\n          this.resourceViewer = new DRViewer(\"fedora.conf\",this.getDisplayName(),this.getDisplayName(),this.getDisplayName(),new URL(\"http\",this.getAddress(),8080,\"fedora/\"),this.getUserName(),this.getPassword());\n              \n       }catch (Exception ex){}; \n   }","id":55615,"modified_method":"public void  setResourceViewer(){\n             \n       try{\n          this.resourceViewer = new DRViewer(\"fedora.conf\",this.getDisplayName(),this.getDisplayName(),this.getDisplayName(),new URL(\"http\",this.getAddress(),8080,\"fedora/\"),this.getUserName(),this.getPassword());\n              \n       }catch (Exception ex){VueUtil.alert(null,ex.getMessage(),\"Error Setting Reseource Viewer\");}; \n   }","commit_id":"82d29d2a7521ef6bd40bd25fcaa115b3d5a519bf","url":"https://github.com/VUE/VUE"},{"original_method":"public void setUserName(String username){\n        \n        this.username = username;\n        \n    }","id":55616,"modified_method":"public void setUserName(String username){\n        \n        this.UserName = username;\n        \n    }","commit_id":"82d29d2a7521ef6bd40bd25fcaa115b3d5a519bf","url":"https://github.com/VUE/VUE"},{"original_method":"public void  setResourceViewer(){\n             \n       try{\n         \n        \n         this.resourceViewer = new TuftsGoogle(this.getDisplayName(),this.getAddress());\n              \n       }catch (Exception ex){}; \n   }","id":55617,"modified_method":"public void  setResourceViewer(){\n             \n       try{\n         \n        \n         this.resourceViewer = new TuftsGoogle(this.getDisplayName(),this.getAddress());\n              \n       }catch (Exception ex){VueUtil.alert(null,ex.getMessage(),\"Error Setting Reseource Viewer\");}; \n   }","commit_id":"82d29d2a7521ef6bd40bd25fcaa115b3d5a519bf","url":"https://github.com/VUE/VUE"},{"original_method":"public void  setResourceViewer(){\n          \n             Vector cabVector = new Vector();\n            try{\n            LocalFilingManager manager = new LocalFilingManager();   // get a filing manager\n         \n            if (this.getAddress().compareTo(\"\") == 0){     \n                LocalCabinetEntryIterator rootCabs = (LocalCabinetEntryIterator) manager.listRoots();\n                osid.shared.Agent agent = null; //  This may cause problems later.\n              while(rootCabs.hasNext()){  \n                    LocalCabinetEntry rootNode = (LocalCabinetEntry)rootCabs.next();\n                    CabinetResource res = new CabinetResource(rootNode);\n                    cabVector.add(res);\n                }\n                \n            }\n          \n            // setPublishMode(Publisher.PUBLISH_CMAP);\n           \n            \n            else {\n                osid.shared.Agent agent = null;\n                LocalCabinet rootNode = new LocalCabinet(this.getAddress(),agent,null);\n                CabinetResource res = new CabinetResource(rootNode);\n                cabVector.add(res); \n            }\n               }catch (Exception ex) {}\n            VueDragTree fileTree = new VueDragTree(cabVector.iterator(), this.getDisplayName());\n            fileTree.setRootVisible(true);\n            fileTree.setShowsRootHandles(true);\n            fileTree.expandRow(0);\n            fileTree.setRootVisible(false);\n            JPanel localPanel = new JPanel();\n            JScrollPane rSP = new JScrollPane(fileTree);\n            localPanel.setMinimumSize(new Dimension(290,100));\n            localPanel.setLayout(new BorderLayout());\n            localPanel.add(rSP,BorderLayout.CENTER);\n            this.resourceViewer = localPanel;\n   \n   }","id":55618,"modified_method":"public void  setResourceViewer(){\n          \n             Vector cabVector = new Vector();\n            try{\n            LocalFilingManager manager = new LocalFilingManager();   // get a filing manager\n         \n            if (this.getAddress().compareTo(\"\") == 0){     \n                LocalCabinetEntryIterator rootCabs = (LocalCabinetEntryIterator) manager.listRoots();\n                osid.shared.Agent agent = null; //  This may cause problems later.\n              while(rootCabs.hasNext()){  \n                    LocalCabinetEntry rootNode = (LocalCabinetEntry)rootCabs.next();\n                    CabinetResource res = new CabinetResource(rootNode);\n                    cabVector.add(res);\n                }\n                \n            }\n          \n            // setPublishMode(Publisher.PUBLISH_CMAP);\n           \n            \n            else {\n                osid.shared.Agent agent = null;\n                LocalCabinet rootNode = new LocalCabinet(this.getAddress(),agent,null);\n                CabinetResource res = new CabinetResource(rootNode);\n                cabVector.add(res); \n            }\n               }catch (Exception ex) {VueUtil.alert(null,ex.getMessage(),\"Error Setting Reseource Viewer\");}\n            VueDragTree fileTree = new VueDragTree(cabVector.iterator(), this.getDisplayName());\n            fileTree.setRootVisible(true);\n            fileTree.setShowsRootHandles(true);\n            fileTree.expandRow(0);\n            fileTree.setRootVisible(false);\n            JPanel localPanel = new JPanel();\n            JScrollPane rSP = new JScrollPane(fileTree);\n            localPanel.setMinimumSize(new Dimension(290,100));\n            localPanel.setLayout(new BorderLayout());\n            localPanel.add(rSP,BorderLayout.CENTER);\n            this.resourceViewer = localPanel;\n   \n   }","commit_id":"82d29d2a7521ef6bd40bd25fcaa115b3d5a519bf","url":"https://github.com/VUE/VUE"},{"original_method":"public void setUserName(String username){\n        \n        this.username = username;\n        \n    }","id":55619,"modified_method":"public void setUserName(String username){\n        \n        this.UserName = username;\n        \n    }","commit_id":"82d29d2a7521ef6bd40bd25fcaa115b3d5a519bf","url":"https://github.com/VUE/VUE"},{"original_method":"public void  setResourceViewer(){\n          \n              Vector cabVector = new Vector();\n            try{\n            RemoteFilingManager manager = new RemoteFilingManager();   // get a filing manager\n            manager.createClient(this.getAddress(),this.getUserName(),this.getPassword());       // make a connection to the ftp site \n            RemoteCabinetEntryIterator rootCabs = (RemoteCabinetEntryIterator) manager.listRoots(); \n            osid.shared.Agent agent = null; //  This may cause problems later.\n            while(rootCabs.hasNext()){\n                RemoteCabinetEntry rootNode = (RemoteCabinetEntry)rootCabs.next();\n                CabinetResource res = new CabinetResource (rootNode);\n                cabVector.add (res);\n               \n            }   \n            }catch (Exception ex) {}\n\n            VueDragTree fileTree = new VueDragTree (cabVector.iterator(), this.getDisplayName());\n            JScrollPane rSP = new JScrollPane (fileTree);\n            JPanel localPanel = new JPanel();\n            localPanel.setMinimumSize(new Dimension(290,100));\n            localPanel.setLayout(new BorderLayout());\n            localPanel.add(rSP,BorderLayout.CENTER);\n            this.resourceViewer = localPanel;\n            \n           \n\n   \n   }","id":55620,"modified_method":"public void  setResourceViewer(){\n          \n              Vector cabVector = new Vector();\n            try{\n            RemoteFilingManager manager = new RemoteFilingManager();   // get a filing manager\n            manager.createClient(this.getAddress(),this.getUserName(),this.getPassword());       // make a connection to the ftp site \n            RemoteCabinetEntryIterator rootCabs = (RemoteCabinetEntryIterator) manager.listRoots(); \n            osid.shared.Agent agent = null; //  This may cause problems later.\n            while(rootCabs.hasNext()){\n                RemoteCabinetEntry rootNode = (RemoteCabinetEntry)rootCabs.next();\n                CabinetResource res = new CabinetResource (rootNode);\n                cabVector.add (res);\n               \n            }   \n            }catch (Exception ex) {VueUtil.alert(null,ex.getMessage(),\"Error Setting Reseource Viewer\");}\n\n            VueDragTree fileTree = new VueDragTree (cabVector.iterator(), this.getDisplayName());\n            JScrollPane rSP = new JScrollPane (fileTree);\n            JPanel localPanel = new JPanel();\n            localPanel.setMinimumSize(new Dimension(290,100));\n            localPanel.setLayout(new BorderLayout());\n            localPanel.add(rSP,BorderLayout.CENTER);\n            this.resourceViewer = localPanel;\n            \n           \n\n   \n   }","commit_id":"82d29d2a7521ef6bd40bd25fcaa115b3d5a519bf","url":"https://github.com/VUE/VUE"},{"original_method":"public String getUserName(){\n        \n        return this.username;\n        \n    }","id":55621,"modified_method":"public String getUserName(){\n        \n        return this.UserName;\n        \n    }","commit_id":"82d29d2a7521ef6bd40bd25fcaa115b3d5a519bf","url":"https://github.com/VUE/VUE"},{"original_method":"@Test\n    public void shouldLoadAKnownGoodPropertyFile() throws IOException {\n        NeoServerWithEmbeddedWebServer server = ServerBuilder.server().withPassingStartupHealthcheck().withRandomDatabaseDir().withDefaultDatabaseTuning().build();\n        server.start();\n        Map<Object, Object> params = server.getDatabase().graph.getConfig().getParams();\n        \n        \n        assertTrue(propertyAndValuePresentIn(\"neostore.nodestore.db.mapped_memory\", \"25M\", params));\n        assertTrue(propertyAndValuePresentIn(\"neostore.relationshipstore.db.mapped_memory\", \"50M\", params));\n        assertTrue(propertyAndValuePresentIn(\"neostore.propertystore.db.mapped_memory\", \"90M\", params));\n        assertTrue(propertyAndValuePresentIn(\"neostore.propertystore.db.strings.mapped_memory\", \"130M\", params));\n        assertTrue(propertyAndValuePresentIn(\"neostore.propertystore.db.arrays.mapped_memory\", \"130M\", params));\n        \n        server.stop();\n    }","id":55622,"modified_method":"@Test\n    public void shouldLoadAKnownGoodPropertyFile() throws IOException\n    {\n        NeoServerWithEmbeddedWebServer server = ServerBuilder.server()\n                .withDefaultDatabaseTuning()\n                .build();\n        server.start();\n        Map<Object, Object> params = server.getDatabase().graph.getConfig()\n                .getParams();\n\n        assertTrue( propertyAndValuePresentIn( \"neostore.nodestore.db.mapped_memory\", \"25M\", params ) );\n        assertTrue( propertyAndValuePresentIn( \"neostore.relationshipstore.db.mapped_memory\", \"50M\", params ) );\n        assertTrue( propertyAndValuePresentIn( \"neostore.propertystore.db.mapped_memory\", \"90M\", params ) );\n        assertTrue( propertyAndValuePresentIn( \"neostore.propertystore.db.strings.mapped_memory\", \"130M\", params ) );\n        assertTrue( propertyAndValuePresentIn( \"neostore.propertystore.db.arrays.mapped_memory\", \"130M\", params ) );\n\n        server.stop();\n    }","commit_id":"967a6f49b68f8f74bf78ab53a89bd0f42a38e416","url":"https://github.com/neo4j/neo4j"},{"original_method":"@Test\n    public void shouldLogWarningAndContinueIfTuningFilePropertyDoesNotResolve() throws IOException {\n        InMemoryAppender appender = new InMemoryAppender(PropertyFileConfigurator.log);\n        \n        NeoServer server = ServerBuilder.server().withPassingStartupHealthcheck().withRandomDatabaseDir().withNonResolvableTuningFile().build();\n        server.start();\n        \n        assertThat(appender.toString(), containsString(String.format(\"The specified file for database performance tuning properties [\")));\n        assertThat(appender.toString(), containsString(String.format(\"] does not exist.\")));\n        \n        server.stop();\n    }","id":55623,"modified_method":"@Test\n    public void shouldLogWarningAndContinueIfTuningFilePropertyDoesNotResolve() throws IOException\n    {\n        InMemoryAppender appender = new InMemoryAppender( PropertyFileConfigurator.log );\n\n        NeoServer server = ServerBuilder.server()\n                .withNonResolvableTuningFile()\n                .build();\n        server.start();\n\n        assertThat( appender.toString(),\n                containsString( String.format( \"The specified file for database performance tuning properties [\" ) ) );\n        assertThat( appender.toString(), containsString( String.format( \"] does not exist.\" ) ) );\n\n        server.stop();\n    }","commit_id":"967a6f49b68f8f74bf78ab53a89bd0f42a38e416","url":"https://github.com/neo4j/neo4j"},{"original_method":"@Test\n    public void shouldLogWarningAndContinueIfNoTuningFilePropertyPresent() throws IOException {\n        InMemoryAppender appender = new InMemoryAppender(PropertyFileConfigurator.log);\n        \n        NeoServer server = ServerBuilder.server().withPassingStartupHealthcheck().withNonResolvableTuningFile().withRandomDatabaseDir().build();\n        server.start();\n        \n        assertThat(appender.toString(), containsString(\"The specified file for database performance tuning properties\"));\n        \n        server.stop();\n    }","id":55624,"modified_method":"@Test\n    public void shouldLogWarningAndContinueIfNoTuningFilePropertyPresent() throws IOException\n    {\n        InMemoryAppender appender = new InMemoryAppender( PropertyFileConfigurator.log );\n\n        NeoServer server = ServerBuilder.server()\n                .withNonResolvableTuningFile()\n                .build();\n        server.start();\n\n        assertThat( appender.toString(),\n                containsString( \"The specified file for database performance tuning properties\" ) );\n\n        server.stop();\n    }","commit_id":"967a6f49b68f8f74bf78ab53a89bd0f42a38e416","url":"https://github.com/neo4j/neo4j"},{"original_method":"@Test\n    public void shouldLoadExtensionInitializers() throws Exception\n    {\n        server = ServerBuilder.server()\n                .withThirdPartyJaxRsPackage( \"org.dummy.web.service\",\n                        DummyThirdPartyWebService.DUMMY_WEB_SERVICE_MOUNT_POINT )\n                .withPassingStartupHealthcheck()\n                .withRandomDatabaseDir()\n                .build();\n        server.start();\n\n        int nodesCreated = createSimpleDatabase( server.getDatabase().graph );\n\n        URI thirdPartyServiceUri = new URI( server.baseUri()\n                .toString() + DummyThirdPartyWebService.DUMMY_WEB_SERVICE_MOUNT_POINT + \"/inject-test\" ).normalize();\n        String response = Client.create()\n                .resource( thirdPartyServiceUri.toString() )\n                .get( String.class );\n        assertEquals( String.valueOf( nodesCreated + ROOT_NODE ), response );\n    }","id":55625,"modified_method":"@Test\n    public void shouldLoadExtensionInitializers() throws Exception\n    {\n        server = ServerBuilder.server()\n                .withThirdPartyJaxRsPackage( \"org.dummy.web.service\",\n                        DummyThirdPartyWebService.DUMMY_WEB_SERVICE_MOUNT_POINT )\n                .build();\n        server.start();\n\n        int nodesCreated = createSimpleDatabase( server.getDatabase().graph );\n\n        URI thirdPartyServiceUri = new URI( server.baseUri()\n                .toString() + DummyThirdPartyWebService.DUMMY_WEB_SERVICE_MOUNT_POINT + \"/inject-test\" ).normalize();\n        String response = Client.create()\n                .resource( thirdPartyServiceUri.toString() )\n                .get( String.class );\n        assertEquals( String.valueOf( nodesCreated + ROOT_NODE ), response );\n    }","commit_id":"967a6f49b68f8f74bf78ab53a89bd0f42a38e416","url":"https://github.com/neo4j/neo4j"},{"original_method":"@Test\n    public void shouldLoadThirdPartyJaxRsClasses() throws Exception\n    {\n        server = ServerBuilder.server()\n                .withThirdPartyJaxRsPackage( \"org.dummy.web.service\",\n                        DummyThirdPartyWebService.DUMMY_WEB_SERVICE_MOUNT_POINT )\n                .withPassingStartupHealthcheck()\n                .withRandomDatabaseDir()\n                .build();\n        server.start();\n\n        URI thirdPartyServiceUri = new URI( server.baseUri()\n                .toString() + DummyThirdPartyWebService.DUMMY_WEB_SERVICE_MOUNT_POINT ).normalize();\n        String response = Client.create()\n                .resource( thirdPartyServiceUri.toString() )\n                .get( String.class );\n        assertEquals( \"hello\", response );\n    }","id":55626,"modified_method":"@Test\n    public void shouldLoadThirdPartyJaxRsClasses() throws Exception\n    {\n        server = ServerBuilder.server()\n                .withThirdPartyJaxRsPackage( \"org.dummy.web.service\",\n                        DummyThirdPartyWebService.DUMMY_WEB_SERVICE_MOUNT_POINT )\n                .build();\n        server.start();\n\n        URI thirdPartyServiceUri = new URI( server.baseUri()\n                .toString() + DummyThirdPartyWebService.DUMMY_WEB_SERVICE_MOUNT_POINT ).normalize();\n        String response = Client.create()\n                .resource( thirdPartyServiceUri.toString() )\n                .get( String.class );\n        assertEquals( \"hello\", response );\n    }","commit_id":"967a6f49b68f8f74bf78ab53a89bd0f42a38e416","url":"https://github.com/neo4j/neo4j"},{"original_method":"@Test\n    public void shouldComplainIfServerPortIsAlreadyTaken() throws IOException\n    {\n        int contestedPort = 9999;\n        ServerSocket socket = new ServerSocket( contestedPort );\n\n        InMemoryAppender appender = new InMemoryAppender( NeoServerWithEmbeddedWebServer.log );\n        NeoServerWithEmbeddedWebServer server = ServerBuilder.server()\n                .withPassingStartupHealthcheck()\n                .onPort( contestedPort )\n                .withRandomDatabaseDir()\n                .build();\n        server.start();\n\n        // Don't include the SEVERE string since it's\n        // OS-regional-settings-specific\n        assertThat(\n                appender.toString(),\n                containsString( String.format( \": Failed to start Neo Server on port [%s]\", server.getWebServerPort() ) ) );\n        socket.close();\n        server.stop();\n    }","id":55627,"modified_method":"@Test\n    public void shouldComplainIfServerPortIsAlreadyTaken() throws IOException\n    {\n        int contestedPort = 9999;\n        ServerSocket socket = new ServerSocket( contestedPort );\n\n        InMemoryAppender appender = new InMemoryAppender( NeoServerWithEmbeddedWebServer.log );\n        NeoServerWithEmbeddedWebServer server = ServerBuilder.server()\n                .onPort( contestedPort )\n                .build();\n        server.start();\n\n        // Don't include the SEVERE string since it's\n        // OS-regional-settings-specific\n        assertThat(\n                appender.toString(),\n                containsString( String.format( \": Failed to start Neo Server on port [%s]\", server.getWebServerPort() ) ) );\n        socket.close();\n        server.stop();\n    }","commit_id":"967a6f49b68f8f74bf78ab53a89bd0f42a38e416","url":"https://github.com/neo4j/neo4j"},{"original_method":"public ServerBuilder withSpecificServerModules( Class<? extends ServerModule>... modules )\n    {\n        serverModules = Arrays.asList( modules );\n        return this;\n    }","id":55628,"modified_method":"public ServerBuilder withSpecificServerModulesOnly( Class<? extends ServerModule>... modules )\n    {\n        serverModules = Arrays.asList( modules );\n        return this;\n    }","commit_id":"967a6f49b68f8f74bf78ab53a89bd0f42a38e416","url":"https://github.com/neo4j/neo4j"},{"original_method":"@SuppressWarnings( \"unchecked\" )\n    public NeoServerWithEmbeddedWebServer build() throws IOException\n    {\n        if ( dbDir == null )\n        {\n            throw new IllegalStateException( \"database directory must be configured.\" );\n        }\n        File configFile = createPropertiesFiles();\n\n        if(serverModules == null) {\n            withSpecificServerModules(RESTApiModule.class, WebAdminModule.class, ManagementApiModule.class, ThirdPartyJAXRSModule.class, DiscoveryModule.class);\n        }\n        \n        return new NeoServerWithEmbeddedWebServer( new NeoServerBootstrapper(), addressResolver, startupHealthCheck,\n                new PropertyFileConfigurator( new Validator( new DatabaseLocationMustBeSpecifiedRule() ), configFile ),\n                new Jetty6WebServer(), serverModules );\n\n    }","id":55629,"modified_method":"@SuppressWarnings( \"unchecked\" )\n    public NeoServerWithEmbeddedWebServer build() throws IOException\n    {\n        if ( dbDir == null )\n        {\n            this.dbDir = createTempDir().getAbsolutePath();\n        }\n        File configFile = createPropertiesFiles();\n\n        if ( serverModules == null )\n        {\n            withSpecificServerModulesOnly( RESTApiModule.class, WebAdminModule.class, ManagementApiModule.class,\n                    ThirdPartyJAXRSModule.class, DiscoveryModule.class );\n        }\n\n        if ( startupHealthCheck == null )\n        {\n            startupHealthCheck = mock( StartupHealthCheck.class );\n            when( startupHealthCheck.run() ).thenReturn( true );\n        }\n\n        return new NeoServerWithEmbeddedWebServer( new NeoServerBootstrapper(), addressResolver, startupHealthCheck,\n                new PropertyFileConfigurator( new Validator( new DatabaseLocationMustBeSpecifiedRule() ), configFile ),\n                new Jetty6WebServer(), serverModules );\n\n    }","commit_id":"967a6f49b68f8f74bf78ab53a89bd0f42a38e416","url":"https://github.com/neo4j/neo4j"},{"original_method":"@Test\n    public void shouldPickUpPortFromConfig() throws Exception\n    {\n        final int NON_DEFAULT_PORT = 4321;\n\n        server = server().withRandomDatabaseDir()\n                .withPassingStartupHealthcheck()\n                .onPort( NON_DEFAULT_PORT )\n                .build();\n        server.start();\n\n        assertEquals( NON_DEFAULT_PORT, server.getWebServerPort() );\n\n        ClientResponse response = Client.create()\n                .resource( server.baseUri() )\n                .get( ClientResponse.class );\n\n        assertThat( response.getStatus(), is( 200 ) );\n        response.close();\n    }","id":55630,"modified_method":"@Test\n    public void shouldPickUpPortFromConfig() throws Exception\n    {\n        final int NON_DEFAULT_PORT = 4321;\n\n        server = server().onPort( NON_DEFAULT_PORT )\n                .build();\n        server.start();\n\n        assertEquals( NON_DEFAULT_PORT, server.getWebServerPort() );\n\n        ClientResponse response = Client.create()\n                .resource( server.baseUri() )\n                .get( ClientResponse.class );\n\n        assertThat( response.getStatus(), is( 200 ) );\n        response.close();\n    }","commit_id":"967a6f49b68f8f74bf78ab53a89bd0f42a38e416","url":"https://github.com/neo4j/neo4j"},{"original_method":"@Test\n    public void shouldPickupRelativeUrisForWebAdminAndWebAdminRest() throws IOException\n    {\n        String webAdminDataUri = \"/a/different/webadmin/data/uri/\";\n        String webAdminManagementUri = \"/a/different/webadmin/management/uri/\";\n\n        server = server().withRandomDatabaseDir()\n                .withRelativeWebDataAdminUriPath( webAdminDataUri )\n                .withRelativeWebAdminUriPath( webAdminManagementUri )\n                .withPassingStartupHealthcheck()\n                .build();\n        server.start();\n\n        ClientResponse response = Client.create()\n                .resource( \"http://localhost:7474\" + webAdminDataUri )\n                .accept( MediaType.TEXT_HTML )\n                .get( ClientResponse.class );\n        assertEquals( 200, response.getStatus() );\n\n        response = Client.create()\n                .resource( \"http://localhost:7474\" + webAdminManagementUri )\n                .accept( MediaType.APPLICATION_JSON )\n                .get( ClientResponse.class );\n        assertEquals( 200, response.getStatus() );\n        response.close();\n    }","id":55631,"modified_method":"@Test\n    public void shouldPickupRelativeUrisForWebAdminAndWebAdminRest() throws IOException\n    {\n        String webAdminDataUri = \"/a/different/webadmin/data/uri/\";\n        String webAdminManagementUri = \"/a/different/webadmin/management/uri/\";\n\n        server = server().withRelativeWebDataAdminUriPath( webAdminDataUri )\n                .withRelativeWebAdminUriPath( webAdminManagementUri )\n                .build();\n        server.start();\n\n        ClientResponse response = Client.create()\n                .resource( \"http://localhost:7474\" + webAdminDataUri )\n                .accept( MediaType.TEXT_HTML )\n                .get( ClientResponse.class );\n        assertEquals( 200, response.getStatus() );\n\n        response = Client.create()\n                .resource( \"http://localhost:7474\" + webAdminManagementUri )\n                .accept( MediaType.APPLICATION_JSON )\n                .get( ClientResponse.class );\n        assertEquals( 200, response.getStatus() );\n        response.close();\n    }","commit_id":"967a6f49b68f8f74bf78ab53a89bd0f42a38e416","url":"https://github.com/neo4j/neo4j"},{"original_method":"public static NeoServerWithEmbeddedWebServer createServer() throws IOException\n    {\n        NeoServerWithEmbeddedWebServer server = ServerBuilder.server()\n                .withRandomDatabaseDir()\n                .withPassingStartupHealthcheck()\n                .build();\n\n        server.start();\n\n        return server;\n    }","id":55632,"modified_method":"public static NeoServerWithEmbeddedWebServer createServer() throws IOException\n    {\n        NeoServerWithEmbeddedWebServer server = ServerBuilder.server()\n                .build();\n\n        server.start();\n\n        return server;\n    }","commit_id":"967a6f49b68f8f74bf78ab53a89bd0f42a38e416","url":"https://github.com/neo4j/neo4j"},{"original_method":"public void ensureServerIsRunning() throws IOException\n    {\n        if ( !isUsingExternalServer() )\n        {\n            server = ServerBuilder.server().withRandomDatabaseDir().withPassingStartupHealthcheck().build();\n            server.start();\n        }\n    }","id":55633,"modified_method":"public void ensureServerIsRunning() throws IOException\n    {\n        if ( !isUsingExternalServer() )\n        {\n            server = ServerBuilder.server()\n                    .build();\n            server.start();\n        }\n    }","commit_id":"967a6f49b68f8f74bf78ab53a89bd0f42a38e416","url":"https://github.com/neo4j/neo4j"},{"original_method":"@Test(expected = StartupHealthCheckFailedException.class)\n    public void shouldExitWhenFailedStartupHealthCheck() throws IOException {\n        server = ServerBuilder.server().withFailingStartupHealthcheck().withRandomDatabaseDir().build();\n        server.start();\n    }","id":55634,"modified_method":"@Test( expected = StartupHealthCheckFailedException.class )\n    public void shouldExitWhenFailedStartupHealthCheck() throws IOException\n    {\n        server = ServerBuilder.server()\n                .withFailingStartupHealthcheck()\n                .build();\n        server.start();\n    }","commit_id":"967a6f49b68f8f74bf78ab53a89bd0f42a38e416","url":"https://github.com/neo4j/neo4j"},{"original_method":"public PortletServletRequest(\n\t\tHttpServletRequest request, PortletRequest portletRequest,\n\t\tString pathInfo, String queryString, String requestURI,\n\t\tString servletPath, boolean named, boolean include) {\n\n\t\tsuper(request);\n\n\t\t_request = request;\n\t\t_portletRequest = portletRequest;\n\t\t_portletRequestImpl =\n\t\t\tPortletRequestImpl.getPortletRequestImpl(_portletRequest);\n\n\t\t_lifecycle = _portletRequestImpl.getLifecycle();\n\t\t_pathInfo = pathInfo;\n\t\t_queryString = queryString;\n\t\t_requestURI = GetterUtil.getString(requestURI);\n\t\t_servletPath = GetterUtil.getString(servletPath);\n\t\t_named = named;\n\t\t_include = include;\n\t}","id":55635,"modified_method":"public PortletServletRequest(\n\t\tHttpServletRequest request, PortletRequest portletRequest,\n\t\tString pathInfo, String queryString, String requestURI,\n\t\tString servletPath, boolean named, boolean include) {\n\n\t\tsuper(request);\n\n\t\t_request = request;\n\t\t_portletRequest = portletRequest;\n\t\t_portletRequestImpl = PortletRequestImpl.getPortletRequestImpl(\n\t\t\t_portletRequest);\n\t\t_pathInfo = pathInfo;\n\t\t_queryString = queryString;\n\t\t_requestURI = GetterUtil.getString(requestURI);\n\t\t_servletPath = GetterUtil.getString(servletPath);\n\t\t_named = named;\n\t\t_include = include;\n\n\t\t_lifecycle = _portletRequestImpl.getLifecycle();\n\t}","commit_id":"4c8f04b71d6bb0b37897aca380f518f3bec73018","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void setCharacterEncoding(String encoding)\n\t\tthrows UnsupportedEncodingException {\n\n\t\tif (_lifecycle.equals(PortletRequest.ACTION_PHASE) ||\n\t\t\t_lifecycle.equals(PortletRequest.RESOURCE_PHASE)) {\n\n\t\t\t_getClientDataRequest().setCharacterEncoding(encoding);\n\t\t}\n\t}","id":55636,"modified_method":"public void setCharacterEncoding(String encoding)\n\t\tthrows UnsupportedEncodingException {\n\n\t\tif (_lifecycle.equals(PortletRequest.ACTION_PHASE) ||\n\t\t\t_lifecycle.equals(PortletRequest.RESOURCE_PHASE)) {\n\n\t\t\tClientDataRequest clientDataRequest = _getClientDataRequest();\n\n\t\t\tclientDataRequest.setCharacterEncoding(encoding);\n\t\t}\n\t}","commit_id":"4c8f04b71d6bb0b37897aca380f518f3bec73018","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public String getMethod() {\n\t\tif (_lifecycle.equals(PortletRequest.RENDER_PHASE)) {\n\t\t\treturn HttpMethods.GET;\n\t\t}\n\t\telse if (_lifecycle.equals(PortletRequest.ACTION_PHASE) ||\n\t\t\t_lifecycle.equals(PortletRequest.RESOURCE_PHASE)) {\n\n\t\t\treturn _getClientDataRequest().getMethod();\n\t\t}\n\t\telse {\n\t\t\treturn _getEventRequest().getMethod();\n\t\t}\n\t}","id":55637,"modified_method":"public String getMethod() {\n\t\tif (_lifecycle.equals(PortletRequest.ACTION_PHASE) ||\n\t\t\t_lifecycle.equals(PortletRequest.RESOURCE_PHASE)) {\n\n\t\t\tClientDataRequest clientDataRequest = _getClientDataRequest();\n\n\t\t\treturn clientDataRequest.getMethod();\n\t\t}\n\t\telse if (_lifecycle.equals(PortletRequest.RENDER_PHASE)) {\n\t\t\treturn HttpMethods.GET;\n\t\t}\n\t\telse {\n\t\t\tEventRequest eventRequest = _getEventRequest();\n\n\t\t\treturn eventRequest.getMethod();\n\t\t}\n\t}","commit_id":"4c8f04b71d6bb0b37897aca380f518f3bec73018","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public BufferedReader getReader() throws IOException {\n\t\tif (_lifecycle.equals(PortletRequest.ACTION_PHASE) ||\n\t\t\t_lifecycle.equals(PortletRequest.RESOURCE_PHASE)) {\n\n\t\t\treturn _getClientDataRequest().getReader();\n\t\t}\n\t\telse {\n\t\t\treturn null;\n\t\t}\n\t}","id":55638,"modified_method":"public BufferedReader getReader() throws IOException {\n\t\tif (_lifecycle.equals(PortletRequest.ACTION_PHASE) ||\n\t\t\t_lifecycle.equals(PortletRequest.RESOURCE_PHASE)) {\n\n\t\t\tClientDataRequest clientDataRequest = _getClientDataRequest();\n\n\t\t\treturn clientDataRequest.getReader();\n\t\t}\n\t\telse {\n\t\t\treturn null;\n\t\t}\n\t}","commit_id":"4c8f04b71d6bb0b37897aca380f518f3bec73018","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public ServletInputStream getInputStream() throws IOException {\n\t\tif (_lifecycle.equals(PortletRequest.ACTION_PHASE) ||\n\t\t\t_lifecycle.equals(PortletRequest.RESOURCE_PHASE)) {\n\n\t\t\tInputStream portletInputStream =\n\t\t\t\t_getClientDataRequest().getPortletInputStream();\n\n\t\t\tServletInputStream servletInputStream =\n\t\t\t\tnew GenericServletInputStream(portletInputStream);\n\n\t\t\treturn servletInputStream;\n\t\t}\n\t\telse {\n\t\t\treturn null;\n\t\t}\n\t}","id":55639,"modified_method":"public ServletInputStream getInputStream() throws IOException {\n\t\tif (_lifecycle.equals(PortletRequest.ACTION_PHASE) ||\n\t\t\t_lifecycle.equals(PortletRequest.RESOURCE_PHASE)) {\n\n\t\t\tClientDataRequest clientDataRequest = _getClientDataRequest();\n\n\t\t\tInputStream portletInputStream =\n\t\t\t\tclientDataRequest.getPortletInputStream();\n\n\t\t\tServletInputStream servletInputStream =\n\t\t\t\tnew GenericServletInputStream(portletInputStream);\n\n\t\t\treturn servletInputStream;\n\t\t}\n\t\telse {\n\t\t\treturn null;\n\t\t}\n\t}","commit_id":"4c8f04b71d6bb0b37897aca380f518f3bec73018","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void reset() {\n\t\tif (_lifecycle.equals(PortletRequest.RENDER_PHASE) ||\n\t\t\t_lifecycle.equals(PortletRequest.RESOURCE_PHASE)) {\n\n\t\t\t_getMimeResponse().reset();\n\t\t}\n\t}","id":55640,"modified_method":"public void reset() {\n\t\tif (_lifecycle.equals(PortletRequest.RENDER_PHASE) ||\n\t\t\t_lifecycle.equals(PortletRequest.RESOURCE_PHASE)) {\n\n\t\t\tMimeResponse mimeResponse = _getMimeResponse();\n\n\t\t\tmimeResponse.reset();\n\t\t}\n\t}","commit_id":"4c8f04b71d6bb0b37897aca380f518f3bec73018","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public ServletOutputStream getOutputStream() throws IOException {\n\t\tif (_lifecycle.equals(PortletRequest.RENDER_PHASE) ||\n\t\t\t_lifecycle.equals(PortletRequest.RESOURCE_PHASE)) {\n\n\t\t\tOutputStream portletOutputStream =\n\t\t\t\t_getMimeResponse().getPortletOutputStream();\n\n\t\t\tServletOutputStream servletOutputStream =\n\t\t\t\tnew GenericServletOutputStream(portletOutputStream);\n\n\t\t\treturn servletOutputStream;\n\t\t}\n\t\telse {\n\t\t\treturn new NullServletOutputStream();\n\t\t}\n\t}","id":55641,"modified_method":"public ServletOutputStream getOutputStream() throws IOException {\n\t\tif (_lifecycle.equals(PortletRequest.RENDER_PHASE) ||\n\t\t\t_lifecycle.equals(PortletRequest.RESOURCE_PHASE)) {\n\n\t\t\tMimeResponse mimeResponse = _getMimeResponse();\n\n\t\t\tOutputStream portletOutputStream =\n\t\t\t\tmimeResponse.getPortletOutputStream();\n\n\t\t\tServletOutputStream servletOutputStream =\n\t\t\t\tnew GenericServletOutputStream(portletOutputStream);\n\n\t\t\treturn servletOutputStream;\n\t\t}\n\t\telse {\n\t\t\treturn new NullServletOutputStream();\n\t\t}\n\t}","commit_id":"4c8f04b71d6bb0b37897aca380f518f3bec73018","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public String getCharacterEncoding() {\n\t\tif (_lifecycle.equals(PortletRequest.RENDER_PHASE) ||\n\t\t\t_lifecycle.equals(PortletRequest.RESOURCE_PHASE)) {\n\n\t\t\treturn _getMimeResponse().getCharacterEncoding();\n\t\t}\n\t\telse {\n\t\t\treturn null;\n\t\t}\n\t}","id":55642,"modified_method":"public String getCharacterEncoding() {\n\t\tif (_lifecycle.equals(PortletRequest.RENDER_PHASE) ||\n\t\t\t_lifecycle.equals(PortletRequest.RESOURCE_PHASE)) {\n\n\t\t\tMimeResponse mimeResponse = _getMimeResponse();\n\n\t\t\treturn mimeResponse.getCharacterEncoding();\n\t\t}\n\t\telse {\n\t\t\treturn null;\n\t\t}\n\t}","commit_id":"4c8f04b71d6bb0b37897aca380f518f3bec73018","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public PrintWriter getWriter() throws IOException {\n\t\tif (_lifecycle.equals(PortletRequest.RENDER_PHASE) ||\n\t\t\t_lifecycle.equals(PortletRequest.RESOURCE_PHASE)) {\n\n\t\t\treturn _getMimeResponse().getWriter();\n\t\t}\n\t\telse {\n\t\t\treturn new UnsyncPrintWriter(new NullServletOutputStream());\n\t\t}\n\t}","id":55643,"modified_method":"public PrintWriter getWriter() throws IOException {\n\t\tif (_lifecycle.equals(PortletRequest.RENDER_PHASE) ||\n\t\t\t_lifecycle.equals(PortletRequest.RESOURCE_PHASE)) {\n\n\t\t\tMimeResponse mimeResponse = _getMimeResponse();\n\n\t\t\treturn mimeResponse.getWriter();\n\t\t}\n\t\telse {\n\t\t\treturn new UnsyncPrintWriter(new NullServletOutputStream());\n\t\t}\n\t}","commit_id":"4c8f04b71d6bb0b37897aca380f518f3bec73018","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void setBufferSize(int bufferSize) {\n\t\tif (_lifecycle.equals(PortletRequest.RENDER_PHASE) ||\n\t\t\t_lifecycle.equals(PortletRequest.RESOURCE_PHASE)) {\n\n\t\t\t_getMimeResponse().setBufferSize(bufferSize);\n\t\t}\n\t}","id":55644,"modified_method":"public void setBufferSize(int bufferSize) {\n\t\tif (_lifecycle.equals(PortletRequest.RENDER_PHASE) ||\n\t\t\t_lifecycle.equals(PortletRequest.RESOURCE_PHASE)) {\n\n\t\t\tMimeResponse mimeResponse = _getMimeResponse();\n\n\t\t\tmimeResponse.setBufferSize(bufferSize);\n\t\t}\n\t}","commit_id":"4c8f04b71d6bb0b37897aca380f518f3bec73018","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void addHeader(String name, String value) {\n\t\tif (!_include) {\n\t\t\tif (_lifecycle.equals(PortletRequest.RENDER_PHASE) ||\n\t\t\t\t_lifecycle.equals(PortletRequest.RESOURCE_PHASE)) {\n\n\t\t\t\t_getMimeResponse().setProperty(name, value);\n\t\t\t}\n\t\t}\n\t}","id":55645,"modified_method":"public void addHeader(String name, String value) {\n\t\tif (!_include) {\n\t\t\tif (_lifecycle.equals(PortletRequest.RENDER_PHASE) ||\n\t\t\t\t_lifecycle.equals(PortletRequest.RESOURCE_PHASE)) {\n\n\t\t\t\tMimeResponse mimeResponse = _getMimeResponse();\n\n\t\t\t\tmimeResponse.setProperty(name, value);\n\t\t\t}\n\t\t}\n\t}","commit_id":"4c8f04b71d6bb0b37897aca380f518f3bec73018","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void setCharacterEncoding(String encoding) {\n\t\tif (!_include) {\n\t\t\tif (_lifecycle.equals(PortletRequest.RESOURCE_PHASE)) {\n\t\t\t\t_getResourceResponse().setCharacterEncoding(encoding);\n\t\t\t}\n\t\t}\n\t}","id":55646,"modified_method":"public void setCharacterEncoding(String encoding) {\n\t\tif (!_include) {\n\t\t\tif (_lifecycle.equals(PortletRequest.RESOURCE_PHASE)) {\n\t\t\t\tResourceResponse resourceResponse = _getResourceResponse();\n\n\t\t\t\tresourceResponse.setCharacterEncoding(encoding);\n\t\t\t}\n\t\t}\n\t}","commit_id":"4c8f04b71d6bb0b37897aca380f518f3bec73018","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void setHeader(String name, String value) {\n\t\tif (!_include) {\n\t\t\tif (_lifecycle.equals(PortletRequest.RENDER_PHASE) ||\n\t\t\t\t_lifecycle.equals(PortletRequest.RESOURCE_PHASE)) {\n\n\t\t\t\t_getMimeResponse().setProperty(name, value);\n\t\t\t}\n\t\t}\n\t}","id":55647,"modified_method":"public void setHeader(String name, String value) {\n\t\tif (!_include) {\n\t\t\tif (_lifecycle.equals(PortletRequest.RENDER_PHASE) ||\n\t\t\t\t_lifecycle.equals(PortletRequest.RESOURCE_PHASE)) {\n\n\t\t\t\tMimeResponse mimeResponse = _getMimeResponse();\n\n\t\t\t\tmimeResponse.setProperty(name, value);\n\t\t\t}\n\t\t}\n\t}","commit_id":"4c8f04b71d6bb0b37897aca380f518f3bec73018","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void setLocale(Locale locale) {\n\t\tif (!_include) {\n\t\t\tif (_lifecycle.equals(PortletRequest.RESOURCE_PHASE)) {\n\t\t\t\t_getResourceResponse().setLocale(locale);\n\t\t\t}\n\t\t}\n\t}","id":55648,"modified_method":"public void setLocale(Locale locale) {\n\t\tif (!_include) {\n\t\t\tif (_lifecycle.equals(PortletRequest.RESOURCE_PHASE)) {\n\t\t\t\tResourceResponse resourceResponse = _getResourceResponse();\n\n\t\t\t\tresourceResponse.setLocale(locale);\n\t\t\t}\n\t\t}\n\t}","commit_id":"4c8f04b71d6bb0b37897aca380f518f3bec73018","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public boolean isCommitted() {\n\t\tif (_lifecycle.equals(PortletRequest.RENDER_PHASE) ||\n\t\t\t_lifecycle.equals(PortletRequest.RESOURCE_PHASE)) {\n\n\t\t\treturn _getMimeResponse().isCommitted();\n\t\t}\n\t\telse if (!_include) {\n\t\t\treturn false;\n\t\t}\n\t\telse {\n\t\t\treturn true;\n\t\t}\n\t}","id":55649,"modified_method":"public boolean isCommitted() {\n\t\tif (_lifecycle.equals(PortletRequest.RENDER_PHASE) ||\n\t\t\t_lifecycle.equals(PortletRequest.RESOURCE_PHASE)) {\n\n\t\t\tMimeResponse mimeResponse = _getMimeResponse();\n\n\t\t\treturn mimeResponse.isCommitted();\n\t\t}\n\t\telse if (!_include) {\n\t\t\treturn false;\n\t\t}\n\t\telse {\n\t\t\treturn true;\n\t\t}\n\t}","commit_id":"4c8f04b71d6bb0b37897aca380f518f3bec73018","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void resetBuffer() {\n\t\tif (_lifecycle.equals(PortletRequest.RENDER_PHASE) ||\n\t\t\t_lifecycle.equals(PortletRequest.RESOURCE_PHASE)) {\n\n\t\t\t_getMimeResponse().resetBuffer();\n\t\t}\n\t}","id":55650,"modified_method":"public void resetBuffer() {\n\t\tif (_lifecycle.equals(PortletRequest.RENDER_PHASE) ||\n\t\t\t_lifecycle.equals(PortletRequest.RESOURCE_PHASE)) {\n\n\t\t\tMimeResponse mimeResponse = _getMimeResponse();\n\n\t\t\tmimeResponse.resetBuffer();\n\t\t}\n\t}","commit_id":"4c8f04b71d6bb0b37897aca380f518f3bec73018","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void setContentType(String contentType) {\n\t\tif (!_include) {\n\t\t\tif (_lifecycle.equals(PortletRequest.RENDER_PHASE) ||\n\t\t\t\t_lifecycle.equals(PortletRequest.RESOURCE_PHASE)) {\n\n\t\t\t\t_getMimeResponse().setContentType(contentType);\n\t\t\t}\n\t\t}\n\t}","id":55651,"modified_method":"public void setContentType(String contentType) {\n\t\tif (!_include) {\n\t\t\tif (_lifecycle.equals(PortletRequest.RENDER_PHASE) ||\n\t\t\t\t_lifecycle.equals(PortletRequest.RESOURCE_PHASE)) {\n\n\t\t\t\tMimeResponse mimeResponse = _getMimeResponse();\n\n\t\t\t\tmimeResponse.setContentType(contentType);\n\t\t\t}\n\t\t}\n\t}","commit_id":"4c8f04b71d6bb0b37897aca380f518f3bec73018","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void flushBuffer() throws IOException {\n\t\tif (_lifecycle.equals(PortletRequest.RENDER_PHASE) ||\n\t\t\t_lifecycle.equals(PortletRequest.RESOURCE_PHASE)) {\n\n\t\t\t_getMimeResponse().flushBuffer();\n\t\t}\n\t}","id":55652,"modified_method":"public void flushBuffer() throws IOException {\n\t\tif (_lifecycle.equals(PortletRequest.RENDER_PHASE) ||\n\t\t\t_lifecycle.equals(PortletRequest.RESOURCE_PHASE)) {\n\n\t\t\tMimeResponse mimeResponse = _getMimeResponse();\n\n\t\t\tmimeResponse.flushBuffer();\n\t\t}\n\t}","commit_id":"4c8f04b71d6bb0b37897aca380f518f3bec73018","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void setContentLength(int length) {\n\t\tif (!_include) {\n\t\t\tif (_lifecycle.equals(PortletRequest.RESOURCE_PHASE)) {\n\t\t\t\t_getResourceResponse().setContentLength(length);\n\t\t\t}\n\t\t}\n\t}","id":55653,"modified_method":"public void setContentLength(int length) {\n\t\tif (!_include) {\n\t\t\tif (_lifecycle.equals(PortletRequest.RESOURCE_PHASE)) {\n\t\t\t\tResourceResponse resourceResponse = _getResourceResponse();\n\n\t\t\t\tresourceResponse.setContentLength(length);\n\t\t\t}\n\t\t}\n\t}","commit_id":"4c8f04b71d6bb0b37897aca380f518f3bec73018","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void setStatus(int status) {\n\t\tif (!_include) {\n\t\t\tif (_lifecycle.equals(PortletRequest.RESOURCE_PHASE)) {\n\t\t\t\t_getResourceResponse().setProperty(\n\t\t\t\t\tResourceResponse.HTTP_STATUS_CODE, String.valueOf(status));\n\t\t\t}\n\t\t}\n\t}","id":55654,"modified_method":"public void setStatus(int status) {\n\t\tif (!_include) {\n\t\t\tif (_lifecycle.equals(PortletRequest.RESOURCE_PHASE)) {\n\t\t\t\tResourceResponse resourceResponse = _getResourceResponse();\n\n\t\t\t\tresourceResponse.setProperty(\n\t\t\t\t\tResourceResponse.HTTP_STATUS_CODE, String.valueOf(status));\n\t\t\t}\n\t\t}\n\t}","commit_id":"4c8f04b71d6bb0b37897aca380f518f3bec73018","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void sendRedirect(String location) throws IOException {\n\t\tif (!_include) {\n\t\t\tif (_lifecycle.equals(PortletRequest.ACTION_PHASE)) {\n\t\t\t\t_getActionResponse().sendRedirect(location);\n\t\t\t}\n\t\t}\n\t}","id":55655,"modified_method":"public void sendRedirect(String location) throws IOException {\n\t\tif (!_include) {\n\t\t\tif (_lifecycle.equals(PortletRequest.ACTION_PHASE)) {\n\t\t\t\tActionResponse actionResponse = _getActionResponse();\n\n\t\t\t\tactionResponse.sendRedirect(location);\n\t\t\t}\n\t\t}\n\t}","commit_id":"4c8f04b71d6bb0b37897aca380f518f3bec73018","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public String getContentType() {\n\t\tif (_lifecycle.equals(PortletRequest.RENDER_PHASE) ||\n\t\t\t_lifecycle.equals(PortletRequest.RESOURCE_PHASE)) {\n\n\t\t\treturn _getMimeResponse().getContentType();\n\t\t}\n\t\telse {\n\t\t\treturn null;\n\t\t}\n\t}","id":55656,"modified_method":"public String getContentType() {\n\t\tif (_lifecycle.equals(PortletRequest.RENDER_PHASE) ||\n\t\t\t_lifecycle.equals(PortletRequest.RESOURCE_PHASE)) {\n\n\t\t\tMimeResponse mimeResponse = _getMimeResponse();\n\n\t\t\treturn mimeResponse.getContentType();\n\t\t}\n\t\telse {\n\t\t\treturn null;\n\t\t}\n\t}","commit_id":"4c8f04b71d6bb0b37897aca380f518f3bec73018","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public Locale getLocale() {\n\t\tif (_lifecycle.equals(PortletRequest.RENDER_PHASE) ||\n\t\t\t_lifecycle.equals(PortletRequest.RESOURCE_PHASE)) {\n\n\t\t\treturn _getMimeResponse().getLocale();\n\t\t}\n\t\telse {\n\t\t\treturn null;\n\t\t}\n\t}","id":55657,"modified_method":"public Locale getLocale() {\n\t\tif (_lifecycle.equals(PortletRequest.RENDER_PHASE) ||\n\t\t\t_lifecycle.equals(PortletRequest.RESOURCE_PHASE)) {\n\n\t\t\tMimeResponse mimeResponse = _getMimeResponse();\n\n\t\t\treturn mimeResponse.getLocale();\n\t\t}\n\t\telse {\n\t\t\treturn null;\n\t\t}\n\t}","commit_id":"4c8f04b71d6bb0b37897aca380f518f3bec73018","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public int getBufferSize() {\n\t\tif (_lifecycle.equals(PortletRequest.RENDER_PHASE) ||\n\t\t\t_lifecycle.equals(PortletRequest.RESOURCE_PHASE)) {\n\n\t\t\treturn _getMimeResponse().getBufferSize();\n\t\t}\n\t\telse {\n\t\t\treturn 0;\n\t\t}\n\t}","id":55658,"modified_method":"public int getBufferSize() {\n\t\tif (_lifecycle.equals(PortletRequest.RENDER_PHASE) ||\n\t\t\t_lifecycle.equals(PortletRequest.RESOURCE_PHASE)) {\n\n\t\t\tMimeResponse mimeResponse = _getMimeResponse();\n\n\t\t\treturn mimeResponse.getBufferSize();\n\t\t}\n\t\telse {\n\t\t\treturn 0;\n\t\t}\n\t}","commit_id":"4c8f04b71d6bb0b37897aca380f518f3bec73018","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public BlackboardArtifactTagTypeNode(TagName tagName) {\r\n        super(Children.create(new BlackboardArtifactTagNodeFactory(tagName), true));\r\n        super.setName(DISPLAY_NAME);\r\n        super.setDisplayName(DISPLAY_NAME);\r\n        this.setIconBaseWithExtension(ICON_PATH);\r\n    }","id":55659,"modified_method":"public BlackboardArtifactTagTypeNode(TagName tagName) {\r\n        super(Children.create(new BlackboardArtifactTagNodeFactory(tagName), true));\r\n\r\n        long tagsCount = 0;\r\n        try {\r\n            tagsCount = Case.getCurrentCase().getServices().getTagsManager().getBlackboardArtifactTagsCountByTagName(tagName);\r\n        }\r\n        catch (TskCoreException ex) {\r\n            Logger.getLogger(BlackboardArtifactTagTypeNode.class.getName()).log(Level.SEVERE, \"Failed to get blackboard artifact tags count for \" + tagName.getDisplayName() + \" tag name\", ex);\r\n        }\r\n        \r\n        super.setName(DISPLAY_NAME + \" (\" + tagsCount + \")\");\r\n        super.setDisplayName(DISPLAY_NAME + \" (\" + tagsCount + \")\");\r\n        this.setIconBaseWithExtension(ICON_PATH);\r\n    }","commit_id":"4cd68f99a14395a409d03e7f5ae12ea6d56f9a50","url":"https://github.com/sleuthkit/autopsy"},{"original_method":"public ContentTagTypeNode(TagName tagName) {\r\n        super(Children.create(new ContentTagNodeFactory(tagName), true));\r\n        super.setName(DISPLAY_NAME);\r\n        super.setDisplayName(DISPLAY_NAME);\r\n        this.setIconBaseWithExtension(ICON_PATH);\r\n    }","id":55660,"modified_method":"public ContentTagTypeNode(TagName tagName) {\r\n        super(Children.create(new ContentTagNodeFactory(tagName), true));\r\n        \r\n        long tagsCount = 0;\r\n        try {\r\n            tagsCount = Case.getCurrentCase().getServices().getTagsManager().getContentTagsCountByTagName(tagName);\r\n        }\r\n        catch (TskCoreException ex) {\r\n            Logger.getLogger(ContentTagTypeNode.class.getName()).log(Level.SEVERE, \"Failed to get content tags count for \" + tagName.getDisplayName() + \" tag name\", ex);\r\n        }\r\n        \r\n        super.setName(DISPLAY_NAME + \" (\" + tagsCount + \")\");\r\n        super.setDisplayName(DISPLAY_NAME + \" (\" + tagsCount + \")\");\r\n        this.setIconBaseWithExtension(ICON_PATH);\r\n    }","commit_id":"4cd68f99a14395a409d03e7f5ae12ea6d56f9a50","url":"https://github.com/sleuthkit/autopsy"},{"original_method":"public TagNameNode(TagName tagName) {\r\n        super(Children.create(new TagTypeNodeFactory(tagName), true));\r\n        this.tagName = tagName;\r\n        super.setName(tagName.getDisplayName());\r\n        super.setDisplayName(tagName.getDisplayName());\r\n        if (tagName.getDisplayName().equals(\"Bookmark\")) {\r\n            setIconBaseWithExtension(BOOKMARK_TAG_ICON_PATH);\r\n        }\r\n        else {\r\n            setIconBaseWithExtension(ICON_PATH);\r\n        }\r\n    }","id":55661,"modified_method":"public TagNameNode(TagName tagName) {\r\n        super(Children.create(new TagTypeNodeFactory(tagName), true));\r\n        this.tagName = tagName;\r\n        \r\n        long tagsCount = 0;\r\n        try {\r\n            tagsCount = Case.getCurrentCase().getServices().getTagsManager().getContentTagsCountByTagName(tagName);\r\n            tagsCount += Case.getCurrentCase().getServices().getTagsManager().getBlackboardArtifactTagsCountByTagName(tagName);\r\n        }\r\n        catch (TskCoreException ex) {\r\n            Logger.getLogger(TagNameNode.class.getName()).log(Level.SEVERE, \"Failed to get tags count for \" + tagName.getDisplayName() + \" tag name\", ex);\r\n        }\r\n        \r\n        super.setName(tagName.getDisplayName() + \" (\" + tagsCount + \")\");\r\n        super.setDisplayName(tagName.getDisplayName() + \" (\" + tagsCount + \")\");\r\n        if (tagName.getDisplayName().equals(\"Bookmark\")) {\r\n            setIconBaseWithExtension(BOOKMARK_TAG_ICON_PATH);\r\n        }\r\n        else {\r\n            setIconBaseWithExtension(ICON_PATH);\r\n        }\r\n    }","commit_id":"4cd68f99a14395a409d03e7f5ae12ea6d56f9a50","url":"https://github.com/sleuthkit/autopsy"},{"original_method":"private String buildMessageBody(PrivateMessage message) {\n\t  User currentUser = UserDirectoryService.getCurrentUser();\n\t  StringBuilder body = new StringBuilder(message.getBody());\n\n\t  body.insert(0, \"From: \" + currentUser.getDisplayName() + \"<p/>\"); \n\n\t  // need to determine if there are \"hidden\" recipients to this message.\n\t  // If so, we need to replace them with \"Undisclosed Recipients\"\n\t  // Identifying them is tricky now because hidden users are identified by having their\n\t  // names in parentheses at the end of the list. At some point, the usernames were also added to\n\t  // this in parentheses (although this may be overridden via a property). \n\t  // So to fix this going forward, the hidden users will be indicated by brackets [],\n\t  // but we still need to handle the old data with hidden users in parens\n\t  String sendToString = message.getRecipientsAsText();\n\t  \n\t  if (sendToString.indexOf(PrivateMessage.HIDDEN_RECIPIENTS_START) > 0) {\n\t      sendToString = sendToString.substring(0, sendToString.indexOf(PrivateMessage.HIDDEN_RECIPIENTS_START));\n\t      \n\t      // add \"Undisclosed Recipients\" in place of the hidden users\n\t      sendToString = sendToString.trim();\n\t      if (sendToString.length() > 0) {\n\t          sendToString += \"; \";\n\t      } \n\t      sendToString += getResourceBundleString(\"pvt_HiddenRecipients\");\n\t  } else {\n\t      // we may have parens around a list of names with eid in parens\n\t      if (ServerConfigurationService.getBoolean(\"msg.displayEid\", true)) {\n\t          String originalSendTo = sendToString;\n\t          sendToString = sendToString.replaceAll(\"\\\\([^)]+\\\\(.*\", \"\");\n\t          \n\t          // add \"Undisclosed Recipients\" in place of the hidden users\n\t          if (!sendToString.equals(originalSendTo)) {\n\t              sendToString = sendToString.trim();\n\t              if (sendToString.length() > 0) {\n\t                  sendToString += \"; \";\n\t              }\n\t              sendToString += getResourceBundleString(\"pvt_HiddenRecipients\");\n\t          }\n\t      } else {\n\t          // the old data just has the hidden users in parens\n\t          if (sendToString.indexOf(\"(\") > 0) {\n\t              sendToString = sendToString.substring(0, sendToString.indexOf(\"(\"));\n\t              \n\t              // add \"Undisclosed Recipients\" in place of the hidden users\n\t              sendToString = sendToString.trim();\n\t              if (sendToString.length() > 0) {\n\t                  sendToString += \"; \";\n\t              }\n\t              sendToString += getResourceBundleString(\"pvt_HiddenRecipients\");\n\t          }\n\t          \n\t      }\n\t  }\n\n\t  body.insert(0, \"To: \" + sendToString + \"<p/>\");\n\n\t  if (message.getAttachments() != null && message.getAttachments().size() > 0) {\n\n\t\t  body.append(\"<br/><br/>\");\n\t\t  for (Iterator iter = message.getAttachments().iterator(); iter.hasNext();) {\n\t\t\t  Attachment attachment = (Attachment) iter.next();\n\t\t\t  //body.append(\"<a href=\\\"\" + attachment.getAttachmentUrl() +\n\t\t\t  //\"\\\">\" + attachment.getAttachmentName() + \"<\/a><br/>\");            \n\t\t\t  body.append(\"<a href=\\\"\" + messageManager.getAttachmentUrl(attachment.getAttachmentId()) +\n\t\t\t\t\t  \"\\\">\" + attachment.getAttachmentName() + \"<\/a><br/>\");            \n\t\t  }\n\t  }\n\n\t  String siteTitle = null;\n\t  try{\n\t\t  siteTitle = SiteService.getSite(getContextId()).getTitle();\n\t  }\n\t  catch (IdUnusedException e){\n\t\t  LOG.error(e.getMessage(), e);\n\t  }\n\n\t  String thisPageId = \"\";\n\t  ToolSession ts = sessionManager.getCurrentToolSession();\n\t  if (ts != null)\n\t  {\n\t\t  ToolConfiguration tool = SiteService.findTool(ts.getPlacementId());\n\t\t  if (tool != null)\n\t\t  {\n\t\t\t  thisPageId = tool.getPageId();\n\t\t  }\n\t  }\n\n\t  String footer = \"<p>----------------------<br>\" +\n\t      getResourceBundleString(EMAIL_FOOTER1) + \" \" + ServerConfigurationService.getString(\"ui.service\",\"Sakai\") +\n\t  \" \" + getResourceBundleString(EMAIL_FOOTER2) + \" \\\"\" +\n\t  siteTitle + \"\\\" \" + getResourceBundleString(EMAIL_FOOTER3) + \"\\n\" +\n\t  getResourceBundleString(EMAIL_FOOTER4) +\n\t  \" <a href=\\\"\" +\n\t  ServerConfigurationService.getPortalUrl() + \n\t  \"/site/\" + ToolManager.getCurrentPlacement().getContext() +\n\t  \"/page/\" + thisPageId+\n\t  \"\\\">\";\n\n\n\t  footer += siteTitle + \"<\/a>.<\/p>\";                      \n\t  body.append(footer);\n\n\t  String bodyString = body.toString();\n\t  return bodyString;\n  }","id":55662,"modified_method":"private String buildMessageBody(PrivateMessage message) {\n\t  User currentUser = UserDirectoryService.getCurrentUser();\n\t  StringBuilder body = new StringBuilder(message.getBody());\n\t  \n\t  StringBuilder fromString = new StringBuilder();\n\t  fromString.append(\"<p>\");\n\t  if (ServerConfigurationService.getBoolean(\"msg.displayEid\", true)) {\n\t      fromString.append(getResourceBundleString(\"pvt_email_from_with_eid\", \n                      new Object[] {currentUser.getDisplayName(), currentUser.getEid(), currentUser.getEmail() }));\n\t  } else {\n\t      fromString.append(getResourceBundleString(\"pvt_email_from\", \n\t              new Object[] {currentUser.getDisplayName(), currentUser.getEmail() }));\n\t  }\n\t  \n\t  fromString.append(\"<\/p>\");\n\n\t  body.insert(0, fromString.toString());\n\n\t  // need to determine if there are \"hidden\" recipients to this message.\n\t  // If so, we need to replace them with \"Undisclosed Recipients\"\n\t  // Identifying them is tricky now because hidden users are identified by having their\n\t  // names in parentheses at the end of the list. At some point, the usernames were also added to\n\t  // this in parentheses (although this may be overridden via a property). \n\t  // So to fix this going forward, the hidden users will be indicated by brackets [],\n\t  // but we still need to handle the old data with hidden users in parens\n\t  String sendToString = message.getRecipientsAsText();\n\t  \n\t  if (sendToString.indexOf(PrivateMessage.HIDDEN_RECIPIENTS_START) > 0) {\n\t      sendToString = sendToString.substring(0, sendToString.indexOf(PrivateMessage.HIDDEN_RECIPIENTS_START));\n\t      \n\t      // add \"Undisclosed Recipients\" in place of the hidden users\n\t      sendToString = sendToString.trim();\n\t      if (sendToString.length() > 0) {\n\t          sendToString += \"; \";\n\t      } \n\t      sendToString += getResourceBundleString(\"pvt_HiddenRecipients\");\n\t  } else {\n\t      // we may have parens around a list of names with eid in parens\n\t      if (ServerConfigurationService.getBoolean(\"msg.displayEid\", true)) {\n\t          String originalSendTo = sendToString;\n\t          sendToString = sendToString.replaceAll(\"\\\\([^)]+\\\\(.*\", \"\");\n\t          \n\t          // add \"Undisclosed Recipients\" in place of the hidden users\n\t          if (!sendToString.equals(originalSendTo)) {\n\t              sendToString = sendToString.trim();\n\t              if (sendToString.length() > 0) {\n\t                  sendToString += \"; \";\n\t              }\n\t              sendToString += getResourceBundleString(\"pvt_HiddenRecipients\");\n\t          }\n\t      } else {\n\t          // the old data just has the hidden users in parens\n\t          if (sendToString.indexOf(\"(\") > 0) {\n\t              sendToString = sendToString.substring(0, sendToString.indexOf(\"(\"));\n\t              \n\t              // add \"Undisclosed Recipients\" in place of the hidden users\n\t              sendToString = sendToString.trim();\n\t              if (sendToString.length() > 0) {\n\t                  sendToString += \"; \";\n\t              }\n\t              sendToString += getResourceBundleString(\"pvt_HiddenRecipients\");\n\t          }\n\t          \n\t      }\n\t  }\n\n\t  body.insert(0, \"<p>\" + getResourceBundleString(\"pvt_email_to\", new Object[] {sendToString}) + \"<p/>\");\n\n\t  if (message.getAttachments() != null && message.getAttachments().size() > 0) {\n\n\t\t  body.append(\"<br/><br/>\");\n\t\t  for (Iterator iter = message.getAttachments().iterator(); iter.hasNext();) {\n\t\t\t  Attachment attachment = (Attachment) iter.next();\n\t\t\t  //body.append(\"<a href=\\\"\" + attachment.getAttachmentUrl() +\n\t\t\t  //\"\\\">\" + attachment.getAttachmentName() + \"<\/a><br/>\");            \n\t\t\t  body.append(\"<a href=\\\"\" + messageManager.getAttachmentUrl(attachment.getAttachmentId()) +\n\t\t\t\t\t  \"\\\">\" + attachment.getAttachmentName() + \"<\/a><br/>\");            \n\t\t  }\n\t  }\n\n\t  String siteTitle = null;\n\t  try{\n\t\t  siteTitle = SiteService.getSite(getContextId()).getTitle();\n\t  }\n\t  catch (IdUnusedException e){\n\t\t  LOG.error(e.getMessage(), e);\n\t  }\n\n\t  String thisPageId = \"\";\n\t  ToolSession ts = sessionManager.getCurrentToolSession();\n\t  if (ts != null)\n\t  {\n\t\t  ToolConfiguration tool = SiteService.findTool(ts.getPlacementId());\n\t\t  if (tool != null)\n\t\t  {\n\t\t\t  thisPageId = tool.getPageId();\n\t\t  }\n\t  }\n\n\t  String footer = \"<p>----------------------<br>\" +\n\t      getResourceBundleString(EMAIL_FOOTER1) + \" \" + ServerConfigurationService.getString(\"ui.service\",\"Sakai\") +\n\t  \" \" + getResourceBundleString(EMAIL_FOOTER2) + \" \\\"\" +\n\t  siteTitle + \"\\\" \" + getResourceBundleString(EMAIL_FOOTER3) + \"\\n\" +\n\t  getResourceBundleString(EMAIL_FOOTER4) +\n\t  \" <a href=\\\"\" +\n\t  ServerConfigurationService.getPortalUrl() + \n\t  \"/site/\" + ToolManager.getCurrentPlacement().getContext() +\n\t  \"/page/\" + thisPageId+\n\t  \"\\\">\";\n\n\n\t  footer += siteTitle + \"<\/a>.<\/p>\";                      \n\t  body.append(footer);\n\n\t  String bodyString = body.toString();\n\t  return bodyString;\n  }","commit_id":"839dedef8f0fdc6e19ea01b22e4115374af684d7","url":"https://github.com/sakaiproject/sakai"},{"original_method":"private void updateTags(final List<String> images) throws Exception{\n    for(final String imageId : images){\n      try{\n        final ImageInfo image = Images.lookupImage(imageId);\n        final ImageMetadata.State imgState = image.getState();\n        final String taskId = ((MachineImageInfo) image).getImageConversionId();\n        if(ImageMetadata.State.pending_available.equals(imgState)){\n          ; // do nothing for images not yet in conversion\n        }else if (ImageMetadata.State.pending_conversion.equals(imgState)){\n          String message = \"\";\n          try{\n            Optional<DiskImageConversionTask> task = \n               conversionTaskCache.get(taskId);\n            if(task.isPresent()){\n              message = task.get().getStatusMessage();\n            }\n          }catch(final Exception ex){\n            ;\n          }\n          // if needed, we can add messages as well; not sure yet if the messages are clear\n          this.tagResources(imageId, \"active\", message);\n          taggedImages.add(imageId);\n        }else if (ImageMetadata.State.available.equals(imgState) && taggedImages.contains(imageId)){\n          try{\n            this.removeTags(imageId);\n          }catch(final Exception ex){\n            ;\n          }finally{\n            taggedImages.remove(imageId);\n          }\n        }else if (ImageMetadata.State.failed.equals(imgState) && taggedImages.contains(imageId)){\n          String message = \"\";\n          try{\n            conversionTaskCache.invalidate(taskId);\n            Optional<DiskImageConversionTask> task = \n               conversionTaskCache.get(taskId);\n            if(task.isPresent())\n              message = task.get().getStatusMessage();\n          }catch(final Exception ex){\n            ;\n          }finally{\n            taggedImages.remove(imageId);\n          }\n          this.tagResources(imageId, \"failed\", message);\n          try ( final TransactionResource db =\n              Entities.transactionFor( ImageInfo.class ) ) {\n            try{\n              final ImageInfo entity = Entities.uniqueResult(Images.exampleWithImageId(imageId));\n              entity.setState(ImageMetadata.State.pending_available);\n              entity.setImageFormat(ImageMetadata.ImageFormat.partitioned.name());\n              ((MachineImageInfo)entity).setImageConversionId(null);\n              Entities.persist(entity);\n              db.commit();\n            }catch(final Exception ex){\n              LOG.error(\"Failed to mark the image state available for conversion\", ex);\n            }\n          }\n        }\n      }catch(final Exception ex){\n        LOG.error(\"Failed to update tags for resources in conversion\", ex);\n      }\n    }\n  }","id":55663,"modified_method":"private void updateTags(final List<String> images) throws Exception{\n    for(final String imageId : images){\n      try{\n        final ImageInfo image = Images.lookupImage(imageId);\n        final ImageMetadata.State imgState = image.getState();\n        final String taskId = ((MachineImageInfo) image).getImageConversionId();\n        if(ImageMetadata.State.pending_available.equals(imgState)){\n          ; // do nothing for images not yet in conversion\n        }else if (ImageMetadata.State.pending_conversion.equals(imgState)){\n          String message = \"\";\n          try{\n            Optional<DiskImageConversionTask> task = \n               conversionTaskCache.get(taskId);\n            if(task.isPresent()){\n              message = task.get().getStatusMessage();\n            }\n          }catch(final Exception ex){\n            ;\n          }\n          // if needed, we can add messages as well; not sure yet if the messages are clear\n          this.tagResources(imageId, \"active\", message);\n          taggedImages.add(imageId);\n        }else if (ImageMetadata.State.available.equals(imgState) && taggedImages.contains(imageId)){\n          try{\n            this.removeTags(imageId);\n          }catch(final Exception ex){\n            ;\n          }finally{\n            taggedImages.remove(imageId);\n          }\n        }\n      }catch(final Exception ex){\n        LOG.error(\"Failed to update tags for resources in conversion\", ex);\n      }\n    }\n  }","commit_id":"09fb2a71a66f4b7afd796262f7c4a63c1bafc489","url":"https://github.com/eucalyptus/eucalyptus"},{"original_method":"private void createBuckets(final List<ImageInfo> images) throws Exception {\n    Set<String> systemBuckets = null;\n    if(images.size()>0){\n      try{\n        final ListBucketsTask task = new ListBucketsTask();\n        final CheckedListenableFuture<Boolean> result = task.dispatch();\n        if(result.get()){\n          final List<String> bucketNames = task.getBuckets();\n          systemBuckets = Sets.newHashSet();\n          systemBuckets.addAll(bucketNames);\n        }\n      }catch(final Exception ex){\n        throw new Exception(\"Failed to check the existing buckets\", ex);\n      }\n    }\n    \n    for(final ImageInfo image: images){\n      try{\n        if(!(image instanceof MachineImageInfo))\n          continue;\n        final MachineImageInfo machineImage = (MachineImageInfo) image;\n\n        final String manifestLocation = machineImage.getManifestLocation();\n        final String[] tokens = manifestLocation.split(\"/\");\n        final String bucketName = tokens[0];\n        final String prefix = tokens[1].replace(\".manifest.xml\", \"\");\n\n        String newBucket = null;\n        do{\n          newBucket = String.format(\"%s-%s-%s\", \n              BUCKET_PREFIX, Crypto.generateAlphanumericId(5, \"\"), bucketName);\n          if(newBucket.length()>63){\n            newBucket = String.format(\"%s-%s\", BUCKET_PREFIX, Crypto.generateAlphanumericId(8, \"\"));\n          }\n          newBucket = newBucket.toLowerCase();\n        }while (systemBuckets.contains(newBucket));\n\n        try{\n          final CreateBucketTask task = new CreateBucketTask(newBucket);\n          final CheckedListenableFuture<Boolean> result = task.dispatch();\n          if(result.get()){\n            ;\n          }\n        }catch(final Exception ex){\n          throw new Exception(\"Failed to create a system-owned bucket for converted image\", ex);\n        }\n\n        // set run manifest path\n        final String runManifestPath = String.format(\"%s/%s.manifest.xml\", newBucket, prefix);\n        try{\n          machineImage.setRunManifestLocation(runManifestPath);\n          Images.setRunManifestLocation(machineImage.getDisplayName(), runManifestPath);\n        }catch(final Exception ex){\n          throw new Exception(\"Failed to update run manifest location\");\n        }\n      }catch(final Exception ex){\n        try{\n          Images.setImageState(image.getDisplayName(), ImageMetadata.State.failed);\n        }catch(final Exception ex2){\n          ;\n        }\n        throw ex;\n      }\n    }\n  }","id":55664,"modified_method":"private void createBuckets(final List<ImageInfo> images) throws Exception {\n    Set<String> systemBuckets = null;\n    if(images.size()>0){\n      try{\n        final ListBucketsTask task = new ListBucketsTask();\n        final CheckedListenableFuture<Boolean> result = task.dispatch();\n        if(result.get()){\n          final List<String> bucketNames = task.getBuckets();\n          systemBuckets = Sets.newHashSet();\n          systemBuckets.addAll(bucketNames);\n        }\n      }catch(final Exception ex){\n        throw new Exception(\"Failed to check the existing buckets\", ex);\n      }\n    }\n\n    String newBucket = null;\n    for(final ImageInfo image: images){\n      try{\n        if(!(image instanceof MachineImageInfo))\n          continue;\n        final MachineImageInfo machineImage = (MachineImageInfo) image;\n\n        final String manifestLocation = machineImage.getManifestLocation();\n        final String[] tokens = manifestLocation.split(\"/\");\n        final String bucketName = tokens[0];\n        final String prefix = tokens[1].replace(\".manifest.xml\", \"\");\n        do{\n          newBucket = String.format(\"%s-%s-%s\", \n              BUCKET_PREFIX, Crypto.generateAlphanumericId(5, \"\"), bucketName);\n          if(newBucket.length()>63){\n            newBucket = String.format(\"%s-%s\", BUCKET_PREFIX, Crypto.generateAlphanumericId(8, \"\"));\n          }\n          newBucket = newBucket.toLowerCase();\n        }while (systemBuckets.contains(newBucket));\n\n        try{\n          final CreateBucketTask task = new CreateBucketTask(newBucket);\n          final CheckedListenableFuture<Boolean> result = task.dispatch();\n          if(result.get()){\n            ;\n          }\n        }catch(final Exception ex){\n          throw new Exception(\"Failed to create a system-owned bucket for converted image\", ex);\n        }\n\n        // set run manifest path\n        final String runManifestPath = String.format(\"%s/%s.manifest.xml\", newBucket, prefix);\n        try{\n          machineImage.setRunManifestLocation(runManifestPath);\n          Images.setRunManifestLocation(machineImage.getDisplayName(), runManifestPath);\n        }catch(final Exception ex){\n          throw new Exception(\"Failed to update run manifest location\");\n        }\n      }catch(final Exception ex){\n        LOG.error(String.format(\"Unable to create the bucket %s for image %s\", newBucket, image.getDisplayName()));\n        resetImagePendingAvailable(image.getDisplayName(), \"Failed to create bucket\");\n        throw ex;\n      }\n    }\n  }","commit_id":"09fb2a71a66f4b7afd796262f7c4a63c1bafc489","url":"https://github.com/eucalyptus/eucalyptus"},{"original_method":"private void convertImages(final List<ImageInfo> images){\n   for(final ImageInfo image: images){\n     if(!(image instanceof MachineImageInfo))\n       continue;\n     try{\n       final MachineImageInfo machineImage = (MachineImageInfo) image;\n       final String kernelId = machineImage.getKernelId();\n       final String ramdiskId = machineImage.getRamdiskId();\n       if(kernelId==null || ramdiskId ==null)\n         throw new Exception(\"Kernel and ramdisk are not found for the image\");\n       \n       final KernelImageInfo kernel = Images.lookupKernel(kernelId);\n       final RamdiskImageInfo ramdisk = Images.lookupRamdisk(ramdiskId);\n       final ServiceConfiguration osg = Topology.lookup( ObjectStorage.class );\n       final URI osgUri = osg.getUri();\n       final String osgPrefix = \n           String.format(\"%s://%s:%d%s\", osgUri.getScheme(), osgUri.getHost(), osgUri.getPort(), osgUri.getPath());\n\n       final String kernelManifest = String.format(\"%s/%s\", osgPrefix, kernel.getManifestLocation());\n       final String ramdiskManifest = String.format(\"%s/%s\", osgPrefix, ramdisk.getManifestLocation());\n       final String machineManifest = String.format(\"%s/%s\", osgPrefix, machineImage.getManifestLocation());\n       final String[] tokens = machineImage.getRunManifestLocation().split(\"/\");\n       final String bucket = tokens[0];\n       final String prefix = tokens[1].replace(\".manifest.xml\",\"\");\n       \n       String taskId = null;\n       try{\n         final ImportImageBuilder builder = new ImportImageBuilder();\n         final ImportImageTask task = new ImportImageTask(builder\n             .withArchitecture(machineImage.getArchitecture().name())\n             .withBucket(bucket)\n             .withPrefix(prefix)\n             .withKernel(kernel.getDisplayName(), kernelManifest, kernel.getImageSizeBytes())\n             .withRamdisk(ramdisk.getDisplayName(), ramdiskManifest, ramdisk.getImageSizeBytes())\n             .withMachineImage(machineImage.getDisplayName(), machineManifest, machineImage.getImageSizeBytes())\n             .withBucketUploadPolicy(bucket, prefix));\n         final CheckedListenableFuture<Boolean> result = task.dispatch();\n         if(result.get()){\n           taskId = task.getTaskId();\n         }\n       }catch(final Exception ex){\n         throw ex;\n       }\n       if(taskId == null)\n         throw new Exception(\"ImportImage Task id is null\");\n       Images.setConversionTaskId(machineImage.getDisplayName(), taskId);\n     }catch(final Exception ex) {\n       LOG.error(\"Failed to convert the image \"+image.getDisplayName(), ex);\n       try{\n         this.cleanupBuckets(Lists.newArrayList(image), false);\n       }catch(final Exception ex2){\n         ;\n       }\n       try{\n         Images.setImageState(image.getDisplayName(), ImageMetadata.State.failed);\n       }catch(final Exception ex2){\n         ;\n       }\n     }\n   }\n  }","id":55665,"modified_method":"private void convertImages(final List<ImageInfo> images){\n   for(final ImageInfo image: images){\n     if(!(image instanceof MachineImageInfo))\n       continue;\n     try{\n       final MachineImageInfo machineImage = (MachineImageInfo) image;\n       final String kernelId = machineImage.getKernelId();\n       final String ramdiskId = machineImage.getRamdiskId();\n       if(kernelId==null || ramdiskId ==null){\n         LOG.warn(String.format(\"Kernel and ramdisk are not found for the image %s\", image.getDisplayName()));\n         continue;\n       }\n       \n       final KernelImageInfo kernel = Images.lookupKernel(kernelId);\n       final RamdiskImageInfo ramdisk = Images.lookupRamdisk(ramdiskId);\n       final ServiceConfiguration osg = Topology.lookup( ObjectStorage.class );\n       final URI osgUri = osg.getUri();\n       final String osgPrefix = \n           String.format(\"%s://%s:%d%s\", osgUri.getScheme(), osgUri.getHost(), osgUri.getPort(), osgUri.getPath());\n\n       final String kernelManifest = String.format(\"%s/%s\", osgPrefix, kernel.getManifestLocation());\n       final String ramdiskManifest = String.format(\"%s/%s\", osgPrefix, ramdisk.getManifestLocation());\n       final String machineManifest = String.format(\"%s/%s\", osgPrefix, machineImage.getManifestLocation());\n       final String[] tokens = machineImage.getRunManifestLocation().split(\"/\");\n       final String bucket = tokens[0];\n       final String prefix = tokens[1].replace(\".manifest.xml\",\"\");\n       \n       String taskId = null;\n       try{\n         final ImportImageBuilder builder = new ImportImageBuilder();\n         final ImportImageTask task = new ImportImageTask(builder\n             .withArchitecture(machineImage.getArchitecture().name())\n             .withBucket(bucket)\n             .withPrefix(prefix)\n             .withKernel(kernel.getDisplayName(), kernelManifest, kernel.getImageSizeBytes())\n             .withRamdisk(ramdisk.getDisplayName(), ramdiskManifest, ramdisk.getImageSizeBytes())\n             .withMachineImage(machineImage.getDisplayName(), machineManifest, machineImage.getImageSizeBytes())\n             .withBucketUploadPolicy(bucket, prefix));\n         final CheckedListenableFuture<Boolean> result = task.dispatch();\n         if(result.get()){\n           taskId = task.getTaskId();\n         }\n       }catch(final Exception ex){\n         throw ex;\n       }\n       if(taskId == null)\n         throw new Exception(\"ImportImage Task id is null\");\n       Images.setConversionTaskId(machineImage.getDisplayName(), taskId);\n     }catch(final Exception ex) {\n       LOG.error(\"Failed to convert the image: \"+image.getDisplayName(), ex);\n       try{\n         this.cleanupBuckets(Lists.newArrayList(image), false);\n         resetImagePendingAvailable(image.getDisplayName(), \"Failed to request conversion\");\n       }catch(final Exception ex2){\n         LOG.error(\"Failed to cleanup the image's system bucket; setting image state failed: \"+image.getDisplayName());\n         try{\n           Images.setImageState(image.getDisplayName(), ImageMetadata.State.failed);\n         }catch(final Exception ex3){\n           ;\n         }\n       }\n     }\n   }\n  }","commit_id":"09fb2a71a66f4b7afd796262f7c4a63c1bafc489","url":"https://github.com/eucalyptus/eucalyptus"},{"original_method":"private void checkConversion(final List<ImageInfo> images){\n    for(final ImageInfo image : images){\n      if(!(image instanceof MachineImageInfo))\n        continue;\n      try{\n        final MachineImageInfo machineImage = (MachineImageInfo) image;\n        final String taskId = machineImage.getImageConversionId();\n        if(taskId==null || taskId.length()<=0)\n          throw new Exception(\"Image \"+machineImage.getDisplayName()+\" has no conversion task Id\");\n        \n        final DescribeConversionTasks task = \n            new DescribeConversionTasks(Lists.newArrayList(machineImage.getImageConversionId()));\n            \n       final CheckedListenableFuture<Boolean> result = task.dispatch();\n       List<DiskImageConversionTask> ctasks = null;\n       if(result.get()){\n         ctasks = task.getTasks();\n       }\n       boolean conversionSuccess=true;\n       String errorMessage = null;\n       if(ctasks.size()<=0){\n         /// consider this task as done when describe tasks has no result\n         conversionSuccess=true;\n       }else{\n         DiskImageConversionTask ct = ctasks.get(0);\n         if(\"completed\".equals(ct.getState())){\n           conversionSuccess=true;\n         }else if(\"active\".equals(ct.getState())){\n           continue;\n         }else{\n           conversionSuccess=false;\n           errorMessage = ct.getStatusMessage();\n         }\n       }\n       if(conversionSuccess){\n         /// if user deregistered the image while in conversion\n          if(ImageMetadata.State.deregistered_cleanup.equals(image.getState())){\n            try{\n              this.cleanupBuckets(Lists.newArrayList(image), true);\n            }catch(final Exception ex){\n              ;\n            }\n          }else{\n           Images.setImageFormat(machineImage.getDisplayName(), ImageMetadata.ImageFormat.fulldisk);\n           /// the service and the backend (NC) rely on virtualizationType=HVM when they prepare full-disk type instances\n           Images.setImageState(machineImage.getDisplayName(), ImageMetadata.State.available);\n           try{\n             generateDownloadManifests(machineImage.getDisplayName());\n           }catch(final Exception ex){\n             ;\n           }\n          }\n       }else{\n         Images.setImageState(machineImage.getDisplayName(), ImageMetadata.State.failed);\n         try{\n           this.cleanupBuckets(Lists.newArrayList(image), false);\n         }catch(final Exception ex){\n           ;\n         }\n         LOG.error(\"Failed to convert partitioned image: \"+errorMessage);\n       }\n      }catch(final Exception ex){\n        try{\n          Images.setImageState(image.getDisplayName(), ImageMetadata.State.failed);\n          try{\n            this.cleanupBuckets(Lists.newArrayList(image), false);\n          }catch(final Exception ex2){\n            ;\n          }\n          LOG.error(\"Failed to convert partitioned image\", ex);\n        }catch(final Exception ex1){\n          ;\n        }\n      }\n    }\n  }","id":55666,"modified_method":"private void checkConversion(final List<ImageInfo> images){\n    for(final ImageInfo image : images){\n      if(!(image instanceof MachineImageInfo))\n        continue;\n      try{\n        final MachineImageInfo machineImage = (MachineImageInfo) image;\n        final String taskId = machineImage.getImageConversionId();\n        if(taskId==null || taskId.length()<=0)\n          throw new Exception(\"Image \"+machineImage.getDisplayName()+\" has no conversion task Id\");\n        \n        final DescribeConversionTasks task = \n            new DescribeConversionTasks(Lists.newArrayList(machineImage.getImageConversionId()));\n            \n       final CheckedListenableFuture<Boolean> result = task.dispatch();\n       List<DiskImageConversionTask> ctasks = null;\n       if(result.get()){\n         ctasks = task.getTasks();\n       }\n       boolean conversionSuccess=true;\n       String errorMessage = null;\n       if(ctasks.size()<=0){\n         /// consider this task as done when describe tasks has no result\n         conversionSuccess=true;\n       }else{\n         DiskImageConversionTask ct = ctasks.get(0);\n         if(\"completed\".equals(ct.getState())){\n           conversionSuccess=true;\n         }else if(\"active\".equals(ct.getState())){\n           continue;\n         }else{\n           conversionSuccess=false;\n           errorMessage = ct.getStatusMessage();\n         }\n       }\n       if(conversionSuccess){\n         /// if user deregistered the image while in conversion\n          if(ImageMetadata.State.deregistered_cleanup.equals(image.getState())){\n            try{\n              this.cleanupBuckets(Lists.newArrayList(image), true);\n            }catch(final Exception ex){\n              ;\n            }\n          }else{\n           Images.setImageFormat(machineImage.getDisplayName(), ImageMetadata.ImageFormat.fulldisk);\n           /// the service and the backend (NC) rely on virtualizationType=HVM when they prepare full-disk type instances\n           Images.setImageState(machineImage.getDisplayName(), ImageMetadata.State.available);\n           try{\n             generateDownloadManifests(machineImage.getDisplayName());\n           }catch(final Exception ex){\n             ;\n           }\n          }\n       }else{\n         LOG.warn(\"Conversion task for image \" + image.getDisplayName()+ \" has failed: \"+ errorMessage);\n         try{\n           this.cleanupBuckets(Lists.newArrayList(image), false);\n           this.resetImagePendingAvailable(image.getDisplayName(), null);\n         }catch(final Exception ex){\n           LOG.error(\"Failed to cleanup the image's system bucket; setting image state failed: \"+image.getDisplayName());\n           Images.setImageState(machineImage.getDisplayName(), ImageMetadata.State.failed);\n         }\n       }\n      }catch(final Exception ex){\n        LOG.warn(\"Conversion task for image \" + image.getDisplayName()+ \" has failed: \", ex);\n        try{\n          this.cleanupBuckets(Lists.newArrayList(image), false);\n          this.resetImagePendingAvailable(image.getDisplayName(), \"Failed to check conversion status\");\n        }catch(final Exception ex2){\n          LOG.error(\"Failed to cleanup the image's system bucket; setting image state failed: \"+image.getDisplayName());\n          try{\n            Images.setImageState(image.getDisplayName(), ImageMetadata.State.failed);\n          }catch(final Exception ex3){\n            ;\n          }\n        }\n      }\n    }\n  }","commit_id":"09fb2a71a66f4b7afd796262f7c4a63c1bafc489","url":"https://github.com/eucalyptus/eucalyptus"},{"original_method":"private void updateTags(final List<String> images) throws Exception{\n    for(final String imageId : images){\n      try{\n        final ImageInfo image = Images.lookupImage(imageId);\n        final ImageMetadata.State imgState = image.getState();\n        final String taskId = ((MachineImageInfo) image).getImageConversionId();\n        if(ImageMetadata.State.pending_available.equals(imgState)){\n          ; // do nothing for images not yet in conversion\n        }else if (ImageMetadata.State.pending_conversion.equals(imgState)){\n          String message = \"\";\n          try{\n            Optional<DiskImageConversionTask> task = \n               conversionTaskCache.get(taskId);\n            if(task.isPresent()){\n              message = task.get().getStatusMessage();\n            }\n          }catch(final Exception ex){\n            ;\n          }\n          // if needed, we can add messages as well; not sure yet if the messages are clear\n          this.tagResources(imageId, \"active\", message);\n          taggedImages.add(imageId);\n        }else if (ImageMetadata.State.available.equals(imgState) && taggedImages.contains(imageId)){\n          try{\n            this.removeTags(imageId);\n          }catch(final Exception ex){\n            ;\n          }finally{\n            taggedImages.remove(imageId);\n          }\n        }else if (ImageMetadata.State.failed.equals(imgState) && taggedImages.contains(imageId)){\n          String message = \"\";\n          try{\n            conversionTaskCache.invalidate(taskId);\n            Optional<DiskImageConversionTask> task = \n               conversionTaskCache.get(taskId);\n            if(task.isPresent())\n              message = task.get().getStatusMessage();\n          }catch(final Exception ex){\n            ;\n          }finally{\n            taggedImages.remove(imageId);\n          }\n          this.tagResources(imageId, \"failed\", message);\n          try ( final TransactionResource db =\n              Entities.transactionFor( ImageInfo.class ) ) {\n            try{\n              final ImageInfo entity = Entities.uniqueResult(Images.exampleWithImageId(imageId));\n              entity.setState(ImageMetadata.State.pending_available);\n              entity.setImageFormat(ImageMetadata.ImageFormat.partitioned.name());\n              ((MachineImageInfo)entity).setImageConversionId(null);\n              Entities.persist(entity);\n              db.commit();\n            }catch(final Exception ex){\n              LOG.error(\"Failed to mark the image state available for conversion\", ex);\n            }\n          }\n        }\n      }catch(final Exception ex){\n        LOG.error(\"Failed to update tags for resources in conversion\", ex);\n      }\n    }\n  }","id":55667,"modified_method":"private void updateTags(final List<String> images) throws Exception{\n    for(final String imageId : images){\n      try{\n        final ImageInfo image = Images.lookupImage(imageId);\n        final ImageMetadata.State imgState = image.getState();\n        final String taskId = ((MachineImageInfo) image).getImageConversionId();\n        if(ImageMetadata.State.pending_available.equals(imgState)){\n          ; // do nothing for images not yet in conversion\n        }else if (ImageMetadata.State.pending_conversion.equals(imgState)){\n          String message = \"\";\n          try{\n            Optional<DiskImageConversionTask> task = \n               conversionTaskCache.get(taskId);\n            if(task.isPresent()){\n              message = task.get().getStatusMessage();\n            }\n          }catch(final Exception ex){\n            ;\n          }\n          // if needed, we can add messages as well; not sure yet if the messages are clear\n          this.tagResources(imageId, \"active\", message);\n          taggedImages.add(imageId);\n        }else if (ImageMetadata.State.available.equals(imgState) && taggedImages.contains(imageId)){\n          try{\n            this.removeTags(imageId);\n          }catch(final Exception ex){\n            ;\n          }finally{\n            taggedImages.remove(imageId);\n          }\n        }\n      }catch(final Exception ex){\n        LOG.error(\"Failed to update tags for resources in conversion\", ex);\n      }\n    }\n  }","commit_id":"7b21714c82d4cbedd9bece7d327bf02b63f99bbb","url":"https://github.com/eucalyptus/eucalyptus"},{"original_method":"private void createBuckets(final List<ImageInfo> images) throws Exception {\n    Set<String> systemBuckets = null;\n    if(images.size()>0){\n      try{\n        final ListBucketsTask task = new ListBucketsTask();\n        final CheckedListenableFuture<Boolean> result = task.dispatch();\n        if(result.get()){\n          final List<String> bucketNames = task.getBuckets();\n          systemBuckets = Sets.newHashSet();\n          systemBuckets.addAll(bucketNames);\n        }\n      }catch(final Exception ex){\n        throw new Exception(\"Failed to check the existing buckets\", ex);\n      }\n    }\n    \n    for(final ImageInfo image: images){\n      try{\n        if(!(image instanceof MachineImageInfo))\n          continue;\n        final MachineImageInfo machineImage = (MachineImageInfo) image;\n\n        final String manifestLocation = machineImage.getManifestLocation();\n        final String[] tokens = manifestLocation.split(\"/\");\n        final String bucketName = tokens[0];\n        final String prefix = tokens[1].replace(\".manifest.xml\", \"\");\n\n        String newBucket = null;\n        do{\n          newBucket = String.format(\"%s-%s-%s\", \n              BUCKET_PREFIX, Crypto.generateAlphanumericId(5, \"\"), bucketName);\n          if(newBucket.length()>63){\n            newBucket = String.format(\"%s-%s\", BUCKET_PREFIX, Crypto.generateAlphanumericId(8, \"\"));\n          }\n          newBucket = newBucket.toLowerCase();\n        }while (systemBuckets.contains(newBucket));\n\n        try{\n          final CreateBucketTask task = new CreateBucketTask(newBucket);\n          final CheckedListenableFuture<Boolean> result = task.dispatch();\n          if(result.get()){\n            ;\n          }\n        }catch(final Exception ex){\n          throw new Exception(\"Failed to create a system-owned bucket for converted image\", ex);\n        }\n\n        // set run manifest path\n        final String runManifestPath = String.format(\"%s/%s.manifest.xml\", newBucket, prefix);\n        try{\n          machineImage.setRunManifestLocation(runManifestPath);\n          Images.setRunManifestLocation(machineImage.getDisplayName(), runManifestPath);\n        }catch(final Exception ex){\n          throw new Exception(\"Failed to update run manifest location\");\n        }\n      }catch(final Exception ex){\n        try{\n          Images.setImageState(image.getDisplayName(), ImageMetadata.State.failed);\n        }catch(final Exception ex2){\n          ;\n        }\n        throw ex;\n      }\n    }\n  }","id":55668,"modified_method":"private void createBuckets(final List<ImageInfo> images) throws Exception {\n    Set<String> systemBuckets = null;\n    if(images.size()>0){\n      try{\n        final ListBucketsTask task = new ListBucketsTask();\n        final CheckedListenableFuture<Boolean> result = task.dispatch();\n        if(result.get()){\n          final List<String> bucketNames = task.getBuckets();\n          systemBuckets = Sets.newHashSet();\n          systemBuckets.addAll(bucketNames);\n        }\n      }catch(final Exception ex){\n        throw new Exception(\"Failed to check the existing buckets\", ex);\n      }\n    }\n\n    String newBucket = null;\n    for(final ImageInfo image: images){\n      try{\n        if(!(image instanceof MachineImageInfo))\n          continue;\n        final MachineImageInfo machineImage = (MachineImageInfo) image;\n\n        final String manifestLocation = machineImage.getManifestLocation();\n        final String[] tokens = manifestLocation.split(\"/\");\n        final String bucketName = tokens[0];\n        final String prefix = tokens[1].replace(\".manifest.xml\", \"\");\n        do{\n          newBucket = String.format(\"%s-%s-%s\", \n              BUCKET_PREFIX, Crypto.generateAlphanumericId(5, \"\"), bucketName);\n          if(newBucket.length()>63){\n            newBucket = String.format(\"%s-%s\", BUCKET_PREFIX, Crypto.generateAlphanumericId(8, \"\"));\n          }\n          newBucket = newBucket.toLowerCase();\n        }while (systemBuckets.contains(newBucket));\n\n        try{\n          final CreateBucketTask task = new CreateBucketTask(newBucket);\n          final CheckedListenableFuture<Boolean> result = task.dispatch();\n          if(result.get()){\n            ;\n          }\n        }catch(final Exception ex){\n          throw new Exception(\"Failed to create a system-owned bucket for converted image\", ex);\n        }\n\n        // set run manifest path\n        final String runManifestPath = String.format(\"%s/%s.manifest.xml\", newBucket, prefix);\n        try{\n          machineImage.setRunManifestLocation(runManifestPath);\n          Images.setRunManifestLocation(machineImage.getDisplayName(), runManifestPath);\n        }catch(final Exception ex){\n          throw new Exception(\"Failed to update run manifest location\");\n        }\n      }catch(final Exception ex){\n        LOG.error(String.format(\"Unable to create the bucket %s for image %s\", newBucket, image.getDisplayName()));\n        resetImagePendingAvailable(image.getDisplayName(), \"Failed to create bucket\");\n        throw ex;\n      }\n    }\n  }","commit_id":"7b21714c82d4cbedd9bece7d327bf02b63f99bbb","url":"https://github.com/eucalyptus/eucalyptus"},{"original_method":"private void checkConversion(final List<ImageInfo> images){\n    for(final ImageInfo image : images){\n      if(!(image instanceof MachineImageInfo))\n        continue;\n      try{\n        final MachineImageInfo machineImage = (MachineImageInfo) image;\n        final String taskId = machineImage.getImageConversionId();\n        if(taskId==null || taskId.length()<=0)\n          throw new Exception(\"Image \"+machineImage.getDisplayName()+\" has no conversion task Id\");\n        \n        final DescribeConversionTasks task = \n            new DescribeConversionTasks(Lists.newArrayList(machineImage.getImageConversionId()));\n            \n       final CheckedListenableFuture<Boolean> result = task.dispatch();\n       List<DiskImageConversionTask> ctasks = null;\n       if(result.get()){\n         ctasks = task.getTasks();\n       }\n       boolean conversionSuccess=true;\n       String errorMessage = null;\n       if(ctasks.size()<=0){\n         /// consider this task as done when describe tasks has no result\n         conversionSuccess=true;\n       }else{\n         DiskImageConversionTask ct = ctasks.get(0);\n         if(\"completed\".equals(ct.getState())){\n           conversionSuccess=true;\n         }else if(\"active\".equals(ct.getState())){\n           continue;\n         }else{\n           conversionSuccess=false;\n           errorMessage = ct.getStatusMessage();\n         }\n       }\n       if(conversionSuccess){\n         /// if user deregistered the image while in conversion\n          if(ImageMetadata.State.deregistered_cleanup.equals(image.getState())){\n            try{\n              this.cleanupBuckets(Lists.newArrayList(image), true);\n            }catch(final Exception ex){\n              ;\n            }\n          }else{\n           Images.setImageFormat(machineImage.getDisplayName(), ImageMetadata.ImageFormat.fulldisk);\n           /// the service and the backend (NC) rely on virtualizationType=HVM when they prepare full-disk type instances\n           Images.setImageState(machineImage.getDisplayName(), ImageMetadata.State.available);\n           try{\n             generateDownloadManifests(machineImage.getDisplayName());\n           }catch(final Exception ex){\n             ;\n           }\n          }\n       }else{\n         Images.setImageState(machineImage.getDisplayName(), ImageMetadata.State.failed);\n         try{\n           this.cleanupBuckets(Lists.newArrayList(image), false);\n         }catch(final Exception ex){\n           ;\n         }\n         LOG.error(\"Failed to convert partitioned image: \"+errorMessage);\n       }\n      }catch(final Exception ex){\n        try{\n          Images.setImageState(image.getDisplayName(), ImageMetadata.State.failed);\n          try{\n            this.cleanupBuckets(Lists.newArrayList(image), false);\n          }catch(final Exception ex2){\n            ;\n          }\n          LOG.error(\"Failed to convert partitioned image\", ex);\n        }catch(final Exception ex1){\n          ;\n        }\n      }\n    }\n  }","id":55669,"modified_method":"private void checkConversion(final List<ImageInfo> images){\n    for(final ImageInfo image : images){\n      if(!(image instanceof MachineImageInfo))\n        continue;\n      try{\n        final MachineImageInfo machineImage = (MachineImageInfo) image;\n        final String taskId = machineImage.getImageConversionId();\n        if(taskId==null || taskId.length()<=0)\n          throw new Exception(\"Image \"+machineImage.getDisplayName()+\" has no conversion task Id\");\n        \n        final DescribeConversionTasks task = \n            new DescribeConversionTasks(Lists.newArrayList(machineImage.getImageConversionId()));\n            \n       final CheckedListenableFuture<Boolean> result = task.dispatch();\n       List<DiskImageConversionTask> ctasks = null;\n       if(result.get()){\n         ctasks = task.getTasks();\n       }\n       boolean conversionSuccess=true;\n       String errorMessage = null;\n       if(ctasks.size()<=0){\n         /// consider this task as done when describe tasks has no result\n         conversionSuccess=true;\n       }else{\n         DiskImageConversionTask ct = ctasks.get(0);\n         if(\"completed\".equals(ct.getState())){\n           conversionSuccess=true;\n         }else if(\"active\".equals(ct.getState())){\n           continue;\n         }else{\n           conversionSuccess=false;\n           errorMessage = ct.getStatusMessage();\n         }\n       }\n       if(conversionSuccess){\n         /// if user deregistered the image while in conversion\n          if(ImageMetadata.State.deregistered_cleanup.equals(image.getState())){\n            try{\n              this.cleanupBuckets(Lists.newArrayList(image), true);\n            }catch(final Exception ex){\n              ;\n            }\n          }else{\n           Images.setImageFormat(machineImage.getDisplayName(), ImageMetadata.ImageFormat.fulldisk);\n           /// the service and the backend (NC) rely on virtualizationType=HVM when they prepare full-disk type instances\n           Images.setImageState(machineImage.getDisplayName(), ImageMetadata.State.available);\n           try{\n             generateDownloadManifests(machineImage.getDisplayName());\n           }catch(final Exception ex){\n             ;\n           }\n          }\n       }else{\n         LOG.warn(\"Conversion task for image \" + image.getDisplayName()+ \" has failed: \"+ errorMessage);\n         try{\n           this.cleanupBuckets(Lists.newArrayList(image), false);\n           this.resetImagePendingAvailable(image.getDisplayName(), null);\n         }catch(final Exception ex){\n           LOG.error(\"Failed to cleanup the image's system bucket; setting image state failed: \"+image.getDisplayName());\n           Images.setImageState(machineImage.getDisplayName(), ImageMetadata.State.failed);\n         }\n       }\n      }catch(final Exception ex){\n        LOG.warn(\"Conversion task for image \" + image.getDisplayName()+ \" has failed: \", ex);\n        try{\n          this.cleanupBuckets(Lists.newArrayList(image), false);\n          this.resetImagePendingAvailable(image.getDisplayName(), \"Failed to check conversion status\");\n        }catch(final Exception ex2){\n          LOG.error(\"Failed to cleanup the image's system bucket; setting image state failed: \"+image.getDisplayName());\n          try{\n            Images.setImageState(image.getDisplayName(), ImageMetadata.State.failed);\n          }catch(final Exception ex3){\n            ;\n          }\n        }\n      }\n    }\n  }","commit_id":"7b21714c82d4cbedd9bece7d327bf02b63f99bbb","url":"https://github.com/eucalyptus/eucalyptus"},{"original_method":"private void convertImages(final List<ImageInfo> images){\n   for(final ImageInfo image: images){\n     if(!(image instanceof MachineImageInfo))\n       continue;\n     try{\n       final MachineImageInfo machineImage = (MachineImageInfo) image;\n       final String kernelId = machineImage.getKernelId();\n       final String ramdiskId = machineImage.getRamdiskId();\n       if(kernelId==null || ramdiskId ==null)\n         throw new Exception(\"Kernel and ramdisk are not found for the image\");\n       \n       final KernelImageInfo kernel = Images.lookupKernel(kernelId);\n       final RamdiskImageInfo ramdisk = Images.lookupRamdisk(ramdiskId);\n       final ServiceConfiguration osg = Topology.lookup( ObjectStorage.class );\n       final URI osgUri = osg.getUri();\n       final String osgPrefix = \n           String.format(\"%s://%s:%d%s\", osgUri.getScheme(), osgUri.getHost(), osgUri.getPort(), osgUri.getPath());\n\n       final String kernelManifest = String.format(\"%s/%s\", osgPrefix, kernel.getManifestLocation());\n       final String ramdiskManifest = String.format(\"%s/%s\", osgPrefix, ramdisk.getManifestLocation());\n       final String machineManifest = String.format(\"%s/%s\", osgPrefix, machineImage.getManifestLocation());\n       final String[] tokens = machineImage.getRunManifestLocation().split(\"/\");\n       final String bucket = tokens[0];\n       final String prefix = tokens[1].replace(\".manifest.xml\",\"\");\n       \n       String taskId = null;\n       try{\n         final ImportImageBuilder builder = new ImportImageBuilder();\n         final ImportImageTask task = new ImportImageTask(builder\n             .withArchitecture(machineImage.getArchitecture().name())\n             .withBucket(bucket)\n             .withPrefix(prefix)\n             .withKernel(kernel.getDisplayName(), kernelManifest, kernel.getImageSizeBytes())\n             .withRamdisk(ramdisk.getDisplayName(), ramdiskManifest, ramdisk.getImageSizeBytes())\n             .withMachineImage(machineImage.getDisplayName(), machineManifest, machineImage.getImageSizeBytes())\n             .withBucketUploadPolicy(bucket, prefix));\n         final CheckedListenableFuture<Boolean> result = task.dispatch();\n         if(result.get()){\n           taskId = task.getTaskId();\n         }\n       }catch(final Exception ex){\n         throw ex;\n       }\n       if(taskId == null)\n         throw new Exception(\"ImportImage Task id is null\");\n       Images.setConversionTaskId(machineImage.getDisplayName(), taskId);\n     }catch(final Exception ex) {\n       LOG.error(\"Failed to convert the image \"+image.getDisplayName(), ex);\n       try{\n         this.cleanupBuckets(Lists.newArrayList(image), false);\n       }catch(final Exception ex2){\n         ;\n       }\n       try{\n         Images.setImageState(image.getDisplayName(), ImageMetadata.State.failed);\n       }catch(final Exception ex2){\n         ;\n       }\n     }\n   }\n  }","id":55670,"modified_method":"private void convertImages(final List<ImageInfo> images){\n   for(final ImageInfo image: images){\n     if(!(image instanceof MachineImageInfo))\n       continue;\n     try{\n       final MachineImageInfo machineImage = (MachineImageInfo) image;\n       final String kernelId = machineImage.getKernelId();\n       final String ramdiskId = machineImage.getRamdiskId();\n       if(kernelId==null || ramdiskId ==null){\n         LOG.warn(String.format(\"Kernel and ramdisk are not found for the image %s\", image.getDisplayName()));\n         continue;\n       }\n       \n       final KernelImageInfo kernel = Images.lookupKernel(kernelId);\n       final RamdiskImageInfo ramdisk = Images.lookupRamdisk(ramdiskId);\n       final ServiceConfiguration osg = Topology.lookup( ObjectStorage.class );\n       final URI osgUri = osg.getUri();\n       final String osgPrefix = \n           String.format(\"%s://%s:%d%s\", osgUri.getScheme(), osgUri.getHost(), osgUri.getPort(), osgUri.getPath());\n\n       final String kernelManifest = String.format(\"%s/%s\", osgPrefix, kernel.getManifestLocation());\n       final String ramdiskManifest = String.format(\"%s/%s\", osgPrefix, ramdisk.getManifestLocation());\n       final String machineManifest = String.format(\"%s/%s\", osgPrefix, machineImage.getManifestLocation());\n       final String[] tokens = machineImage.getRunManifestLocation().split(\"/\");\n       final String bucket = tokens[0];\n       final String prefix = tokens[1].replace(\".manifest.xml\",\"\");\n       \n       String taskId = null;\n       try{\n         final ImportImageBuilder builder = new ImportImageBuilder();\n         final ImportImageTask task = new ImportImageTask(builder\n             .withArchitecture(machineImage.getArchitecture().name())\n             .withBucket(bucket)\n             .withPrefix(prefix)\n             .withKernel(kernel.getDisplayName(), kernelManifest, kernel.getImageSizeBytes())\n             .withRamdisk(ramdisk.getDisplayName(), ramdiskManifest, ramdisk.getImageSizeBytes())\n             .withMachineImage(machineImage.getDisplayName(), machineManifest, machineImage.getImageSizeBytes())\n             .withBucketUploadPolicy(bucket, prefix));\n         final CheckedListenableFuture<Boolean> result = task.dispatch();\n         if(result.get()){\n           taskId = task.getTaskId();\n         }\n       }catch(final Exception ex){\n         throw ex;\n       }\n       if(taskId == null)\n         throw new Exception(\"ImportImage Task id is null\");\n       Images.setConversionTaskId(machineImage.getDisplayName(), taskId);\n     }catch(final Exception ex) {\n       LOG.error(\"Failed to convert the image: \"+image.getDisplayName(), ex);\n       try{\n         this.cleanupBuckets(Lists.newArrayList(image), false);\n         resetImagePendingAvailable(image.getDisplayName(), \"Failed to request conversion\");\n       }catch(final Exception ex2){\n         LOG.error(\"Failed to cleanup the image's system bucket; setting image state failed: \"+image.getDisplayName());\n         try{\n           Images.setImageState(image.getDisplayName(), ImageMetadata.State.failed);\n         }catch(final Exception ex3){\n           ;\n         }\n       }\n     }\n   }\n  }","commit_id":"7b21714c82d4cbedd9bece7d327bf02b63f99bbb","url":"https://github.com/eucalyptus/eucalyptus"},{"original_method":"@Override\n  public String getDescription() {\n    return \"Creates a blank Maven module or from Maven Archetype\";\n  }","id":55671,"modified_method":"@Override\n  public String getDescription() {\n    return \"Maven modules are used for developing <b>JVM-based<\/b> applications with dependencies managed by <b>Maven<\/b>. \" +\n           \"You can create either a blank Maven module or a module based on a <b>Maven archetype<\/b>.\";\n  }","commit_id":"bec4e990da9a9222054095bdc05e1ee982202c56","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"protected MvcModuleBuilder(MvcFramework framework, Icon bigIcon) {\n    super(framework.getFrameworkName(), framework.getDisplayName() + \" Application\", \"Create a new \" + framework.getDisplayName() + \" application\", bigIcon);\n    myFramework = framework;\n  }","id":55672,"modified_method":"protected MvcModuleBuilder(MvcFramework framework, Icon bigIcon) {\n    super(framework.getFrameworkName(), framework.getDisplayName() + \" Application\",\n          framework.getDisplayName() + \" modules are used for creating <b>\" + framework.getDisplayName() + \"<\/b> applications.\", bigIcon);\n    myFramework = framework;\n  }","commit_id":"bec4e990da9a9222054095bdc05e1ee982202c56","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"/**\r\n   * Converts the input into a byte array.\r\n   * @param d textual data\r\n   * @param ii input info\r\n   * @return decoded string\r\n   * @throws QueryException query exception\r\n   */\r\n  private static byte[] decode(final byte[] d, final InputInfo ii)\r\n      throws QueryException {\r\n    try {\r\n      return Base64.decode(d);\r\n    } catch(final IllegalArgumentException ex) {\r\n      final String chars = ex.getMessage().replaceAll(\".*?: |\\\\.$\", \"\");\r\n      throw FUNCAST.thrw(ii, AtomType.B64, chars);\r\n    }\r\n  }","id":55673,"modified_method":"/**\r\n   * Converts the input into a byte array.\r\n   * @param d textual data\r\n   * @param ii input info\r\n   * @return decoded string\r\n   * @throws QueryException query exception\r\n   */\r\n  private static byte[] decode(final byte[] d, final InputInfo ii)\r\n      throws QueryException {\r\n    try {\r\n      return Base64.decode(d);\r\n    } catch(final IllegalArgumentException ex) {\r\n      final String chars = ex.getMessage().replaceAll(\"^.*?: |\\\\.$\", \"\");\r\n      throw FUNCAST.thrw(ii, AtomType.B64, chars);\r\n    }\r\n  }","commit_id":"ad390d3865cace60c40cff89057d9c9dbbf09ddf","url":"https://github.com/BaseXdb/basex"},{"original_method":"@Override\r\n  public void action(final Object cmp) {\r\n    final Context ctx = gui.context;\r\n    if(refresh) {\r\n      // rebuild databases and focus list chooser\r\n      choice.setData(List.list(ctx, true).toArray());\r\n      choice.requestFocusInWindow();\r\n      refresh = false;\r\n    }\r\n\r\n    final StringList dbs = choice.getValues();\r\n    final String db = choice.getValue();\r\n    final ObjList<Command> cmds = new ObjList<Command>();\r\n    boolean active = dbs.size() > 0;\r\n\r\n    if(cmp == open) {\r\n      close();\r\n\r\n    } else if(cmp == drop) {\r\n      for(final String s : dbs) {\r\n        if(ctx.mprop.dbexists(s)) cmds.add(new DropDB(s));\r\n      }\r\n      if(!Dialog.confirm(gui, Util.info(DROPCONF, cmds.size()))) return;\r\n      refresh = true;\r\n\r\n    } else if(cmp == rename) {\r\n      final DialogInput dr = new DialogInput(db, RENAMETITLE, gui, 1);\r\n      if(!dr.ok() || dr.input().equals(db)) return;\r\n      cmds.add(new AlterDB(db, dr.input()));\r\n      refresh = true;\r\n\r\n    } else if(cmp == copy) {\r\n      final DialogInput dc = new DialogInput(db, COPYTITLE, gui, 2);\r\n      if(!dc.ok() || dc.input().equals(db)) return;\r\n      cmds.add(new Copy(db, dc.input()));\r\n      refresh = true;\r\n\r\n    } else if(cmp == backup) {\r\n      for(final String s : dbs) cmds.add(new CreateBackup(s));\r\n\r\n    } else if(cmp == restore) {\r\n      // show warning if existing database would be overwritten\r\n      if(!gui.context.mprop.dbexists(db) || Dialog.confirm(gui, OVERWRITE))\r\n        cmds.add(new Restore(db));\r\n\r\n    } else if(cmp == backups) {\r\n      // don't reset the combo box after selecting an item\r\n      // no direct consequences if backup selection changes\r\n\r\n    } else if(cmp == delete) {\r\n      cmds.add(new DropBackup(backups.getValue()));\r\n      refresh = backups.getList().length == 1;\r\n      backups.requestFocusInWindow();\r\n\r\n    } else if(cmp == deleteAll) {\r\n      final String[] back = backups.getList();\r\n      if(!Dialog.confirm(gui, Util.info(DROPBACKUP, back.length))) return;\r\n      for(final String b : back) cmds.add(new DropBackup(b));\r\n      refresh = true;\r\n\r\n    } else if(cmp != backups) {\r\n      final String title = dbs.size() == 1 ? db : dbs.size() + \" \" + DATABASES;\r\n      doc1.setText(title);\r\n      doc2.setText(title);\r\n\r\n      active = ctx.mprop.dbexists(db);\r\n      if(active) {\r\n        // refresh info view\r\n        DataInput in = null;\r\n        final MetaData meta = new MetaData(db, ctx);\r\n        try {\r\n          in = new DataInput(meta.dbfile(DATAINF));\r\n          meta.read(in);\r\n          detail.setText(InfoDB.db(meta, true, true, true));\r\n        } catch(final IOException ex) {\r\n          detail.setText(Token.token(ex.getMessage()));\r\n        } finally {\r\n          if(in != null) try { in.close(); } catch(final IOException ex) { }\r\n        }\r\n      } else {\r\n        detail.setText(dbs.size() == 1 ? Token.token(ONLYBACKUP) : Token.EMPTY);\r\n      }\r\n\r\n      // enable or disable buttons\r\n      rename.setEnabled(active);\r\n      copy.setEnabled(active);\r\n      open.setEnabled(active);\r\n      restore.setEnabled(active);\r\n\r\n      active = false;\r\n      for(final String d : dbs) active |= ctx.mprop.dbexists(d);\r\n      drop.setEnabled(active);\r\n      backup.setEnabled(active);\r\n\r\n      // enable/disable backup buttons\r\n      final String[] back = ShowBackups.list(db, false, ctx).toArray();\r\n      active = back.length > 0;\r\n      backups.setData(back);\r\n      backups.setEnabled(active);\r\n\r\n      restore.setEnabled(active);\r\n      delete.setEnabled(active);\r\n      deleteAll.setEnabled(active);\r\n    }\r\n\r\n    // run all commands\r\n    if(cmds.size() != 0) {\r\n      DialogProgress.execute(this, \"\", cmds.toArray(new Command[cmds.size()]));\r\n    }\r\n  }","id":55674,"modified_method":"@Override\r\n  public void action(final Object cmp) {\r\n    final Context ctx = gui.context;\r\n    if(refresh) {\r\n      // rebuild databases and focus list chooser\r\n      choice.setData(List.list(ctx, true).toArray());\r\n      choice.requestFocusInWindow();\r\n      refresh = false;\r\n    }\r\n\r\n    final StringList dbs = choice.getValues();\r\n    final String db = choice.getValue();\r\n    final ObjList<Command> cmds = new ObjList<Command>();\r\n    boolean active = dbs.size() > 0;\r\n\r\n    if(cmp == open) {\r\n      close();\r\n\r\n    } else if(cmp == drop) {\r\n      for(final String s : dbs) {\r\n        if(ctx.mprop.dbexists(s)) cmds.add(new DropDB(s));\r\n      }\r\n      if(!Dialog.confirm(gui, Util.info(DROPCONF, cmds.size()))) return;\r\n      refresh = true;\r\n\r\n    } else if(cmp == rename) {\r\n      final DialogInput dr = new DialogInput(db, RENAMETITLE, gui, 1);\r\n      if(!dr.ok() || dr.input().equals(db)) return;\r\n      cmds.add(new AlterDB(db, dr.input()));\r\n      refresh = true;\r\n\r\n    } else if(cmp == copy) {\r\n      final DialogInput dc = new DialogInput(db, COPYTITLE, gui, 2);\r\n      if(!dc.ok() || dc.input().equals(db)) return;\r\n      cmds.add(new Copy(db, dc.input()));\r\n      refresh = true;\r\n\r\n    } else if(cmp == backup) {\r\n      for(final String s : dbs) cmds.add(new CreateBackup(s));\r\n\r\n    } else if(cmp == restore) {\r\n      // show warning if existing database would be overwritten\r\n      if(!gui.context.mprop.dbexists(db) || Dialog.confirm(gui, OVERWRITE))\r\n        cmds.add(new Restore(db));\r\n\r\n    } else if(cmp == backups) {\r\n      // don't reset the combo box after selecting an item\r\n      // no direct consequences if backup selection changes\r\n\r\n    } else if(cmp == delete) {\r\n      cmds.add(new DropBackup(backups.getValue()));\r\n      refresh = backups.getList().length == 1;\r\n      backups.requestFocusInWindow();\r\n\r\n    } else if(cmp == deleteAll) {\r\n      final String[] back = backups.getList();\r\n      if(!Dialog.confirm(gui, Util.info(DROPBACKUP, back.length))) return;\r\n      for(final String b : back) cmds.add(new DropBackup(b));\r\n      refresh = true;\r\n\r\n    } else if(cmp != backups) {\r\n      final String title = dbs.size() == 1 ? db : dbs.size() + \" \" + DATABASES;\r\n      doc1.setText(title);\r\n      doc2.setText(title);\r\n\r\n      active = ctx.mprop.dbexists(db);\r\n      if(active) {\r\n        // refresh info view\r\n        DataInput in = null;\r\n        final MetaData meta = new MetaData(db, ctx);\r\n        try {\r\n          in = new DataInput(meta.dbfile(DATAINF));\r\n          meta.read(in);\r\n          detail.setText(Token.token(InfoDB.db(meta, true, true, true)));\r\n        } catch(final IOException ex) {\r\n          detail.setText(Token.token(ex.getMessage()));\r\n        } finally {\r\n          if(in != null) try { in.close(); } catch(final IOException ex) { }\r\n        }\r\n      } else {\r\n        detail.setText(dbs.size() == 1 ? Token.token(ONLYBACKUP) : Token.EMPTY);\r\n      }\r\n\r\n      // enable or disable buttons\r\n      rename.setEnabled(active);\r\n      copy.setEnabled(active);\r\n      open.setEnabled(active);\r\n      restore.setEnabled(active);\r\n\r\n      active = false;\r\n      for(final String d : dbs) active |= ctx.mprop.dbexists(d);\r\n      drop.setEnabled(active);\r\n      backup.setEnabled(active);\r\n\r\n      // enable/disable backup buttons\r\n      final String[] back = ShowBackups.list(db, false, ctx).toArray();\r\n      active = back.length > 0;\r\n      backups.setData(back);\r\n      backups.setEnabled(active);\r\n\r\n      restore.setEnabled(active);\r\n      delete.setEnabled(active);\r\n      deleteAll.setEnabled(active);\r\n    }\r\n\r\n    // run all commands\r\n    if(cmds.size() != 0) {\r\n      DialogProgress.execute(this, \"\", cmds.toArray(new Command[cmds.size()]));\r\n    }\r\n  }","commit_id":"ad390d3865cace60c40cff89057d9c9dbbf09ddf","url":"https://github.com/BaseXdb/basex"},{"original_method":"/**\r\n   * Default constructor.\r\n   * @param main reference to the main window\r\n   */\r\n  public DialogProps(final GUI main) {\r\n    super(main, INFODB);\r\n    panel.setLayout(new BorderLayout(5, 0));\r\n\r\n    final Data data = gui.context.data();\r\n\r\n    final BaseXButton okButton = new BaseXButton(BUTTONOK, this);\r\n    optimize = new BaseXButton(BUTTONOPT, this);\r\n    buttons = newButtons(optimize, okButton, BUTTONCANCEL);\r\n\r\n    // resource tree\r\n    resources = new DialogResources(this);\r\n\r\n    // tab: database info\r\n    final BaseXBack tabInfo = new BaseXBack(new BorderLayout(0, 8)).border(8);\r\n    final Font f = tabInfo.getFont();\r\n    final BaseXLabel doc = new BaseXLabel(data.meta.name).border(0, 0, 5, 0);\r\n    doc.setFont(f.deriveFont(f.getSize2D() + 7f));\r\n    tabInfo.add(doc, BorderLayout.NORTH);\r\n\r\n    final byte[] db = InfoDB.db(data.meta, true, false, true);\r\n    final TokenBuilder info = new TokenBuilder(db);\r\n    if(data.nspaces.size() != 0) {\r\n      info.bold().add(NL + INFONS + NL).norm().add(data.nspaces.info());\r\n    }\r\n\r\n    final BaseXEditor text = text(info.finish());\r\n    text.setFont(f);\r\n    tabInfo.add(text, BorderLayout.CENTER);\r\n\r\n    // tab: resources\r\n    add = new DialogAdd(this);\r\n    final BaseXBack tabRes = add.border(8);\r\n\r\n    // tab: name indexes\r\n    final BaseXBack tabNames =\r\n        new BaseXBack(new GridLayout(2, 1, 0, 8)).border(8);\r\n    tabNames.add(addIndex(true, data));\r\n    tabNames.add(addIndex(false, data));\r\n\r\n    final String[] cb = {\r\n        INFOPATHINDEX, INFOTEXTINDEX, INFOATTRINDEX, INFOFTINDEX };\r\n    final boolean[] val = { data.meta.pathindex, data.meta.textindex,\r\n        data.meta.attrindex, data.meta.ftxtindex };\r\n\r\n    final BaseXBack[] panels = new BaseXBack[indexes.length];\r\n    for(int i = 0; i < indexes.length; ++i) {\r\n      indexes[i] = new BaseXCheckBox(cb[i], val[i], 0, this);\r\n      indexes[i].setEnabled(data instanceof DiskData);\r\n      panels[i] = new BaseXBack(new BorderLayout());\r\n    }\r\n\r\n    // tab: path index\r\n    final BaseXBack tabPath = new BaseXBack(new GridLayout(1, 1)).border(8);\r\n    panels[0].add(indexes[0], BorderLayout.NORTH);\r\n    panels[0].add(text(val[0] ? data.info(IndexType.PATH) :\r\n      Token.token(PATHINDEXINFO)), BorderLayout.CENTER);\r\n    tabPath.add(panels[0]);\r\n\r\n    // tab: value indexes\r\n    final BaseXBack tabValues = new BaseXBack(new GridLayout(2, 1)).border(8);\r\n    panels[1].add(indexes[1], BorderLayout.NORTH);\r\n    panels[1].add(text(val[1] ? data.info(IndexType.TEXT) :\r\n      Token.token(TXTINDEXINFO)), BorderLayout.CENTER);\r\n    tabValues.add(panels[1]);\r\n\r\n    panels[2].add(indexes[2], BorderLayout.NORTH);\r\n    panels[2].add(text(val[2] ? data.info(IndexType.ATTRIBUTE) :\r\n      Token.token(ATTINDEXINFO)), BorderLayout.CENTER);\r\n    tabValues.add(panels[2]);\r\n\r\n    // tab: full-text index\r\n    final BaseXBack tabFT = new BaseXBack(new GridLayout(1, 1)).border(8);\r\n    panels[3].add(indexes[3], BorderLayout.NORTH);\r\n    if(!val[3]) ft = new DialogFT(this, false);\r\n    panels[3].add(val[3] ? text(data.info(IndexType.FULLTEXT)) : ft,\r\n        BorderLayout.CENTER);\r\n    tabFT.add(panels[3]);\r\n\r\n    final BaseXTabs tabs = new BaseXTabs(this);\r\n    tabs.addTab(GENERALINFO, tabInfo);\r\n    tabs.addTab(\"Add Resources\", tabRes);\r\n    tabs.addTab(NAMESINFO, tabNames);\r\n    tabs.addTab(INFOPATHINDEX, tabPath);\r\n    tabs.addTab(INDEXINFO, tabValues);\r\n    tabs.addTab(FTINFO, tabFT);\r\n\r\n    final BaseXBack back = new BaseXBack(new BorderLayout());\r\n    back.add(tabs, BorderLayout.CENTER);\r\n    back.add(buttons, BorderLayout.SOUTH);\r\n\r\n    set(back, BorderLayout.CENTER);\r\n    set(resources, BorderLayout.WEST);\r\n\r\n    action(null);\r\n    setResizable(true);\r\n    setMinimumSize(getPreferredSize());\r\n    finish(null);\r\n  }","id":55675,"modified_method":"/**\r\n   * Default constructor.\r\n   * @param main reference to the main window\r\n   */\r\n  public DialogProps(final GUI main) {\r\n    super(main, INFODB);\r\n    panel.setLayout(new BorderLayout(5, 0));\r\n\r\n    final Data data = gui.context.data();\r\n\r\n    final BaseXButton okButton = new BaseXButton(BUTTONOK, this);\r\n    optimize = new BaseXButton(BUTTONOPT, this);\r\n    buttons = newButtons(optimize, okButton, BUTTONCANCEL);\r\n\r\n    // resource tree\r\n    resources = new DialogResources(this);\r\n\r\n    // tab: database info\r\n    final BaseXBack tabInfo = new BaseXBack(new BorderLayout(0, 8)).border(8);\r\n    final Font f = tabInfo.getFont();\r\n    final BaseXLabel doc = new BaseXLabel(data.meta.name).border(0, 0, 5, 0);\r\n    doc.setFont(f.deriveFont(f.getSize2D() + 7f));\r\n    tabInfo.add(doc, BorderLayout.NORTH);\r\n\r\n    final String db = InfoDB.db(data.meta, true, false, true);\r\n    final TokenBuilder info = new TokenBuilder(db);\r\n    if(data.nspaces.size() != 0) {\r\n      info.bold().add(NL + INFONS + NL).norm().add(data.nspaces.info());\r\n    }\r\n\r\n    final BaseXEditor text = text(info.finish());\r\n    text.setFont(f);\r\n    tabInfo.add(text, BorderLayout.CENTER);\r\n\r\n    // tab: resources\r\n    add = new DialogAdd(this);\r\n    final BaseXBack tabRes = add.border(8);\r\n\r\n    // tab: name indexes\r\n    final BaseXBack tabNames =\r\n        new BaseXBack(new GridLayout(2, 1, 0, 8)).border(8);\r\n    tabNames.add(addIndex(true, data));\r\n    tabNames.add(addIndex(false, data));\r\n\r\n    final String[] cb = {\r\n        INFOPATHINDEX, INFOTEXTINDEX, INFOATTRINDEX, INFOFTINDEX };\r\n    final boolean[] val = { data.meta.pathindex, data.meta.textindex,\r\n        data.meta.attrindex, data.meta.ftxtindex };\r\n\r\n    final BaseXBack[] panels = new BaseXBack[indexes.length];\r\n    for(int i = 0; i < indexes.length; ++i) {\r\n      indexes[i] = new BaseXCheckBox(cb[i], val[i], 0, this);\r\n      indexes[i].setEnabled(data instanceof DiskData);\r\n      panels[i] = new BaseXBack(new BorderLayout());\r\n    }\r\n\r\n    // tab: path index\r\n    final BaseXBack tabPath = new BaseXBack(new GridLayout(1, 1)).border(8);\r\n    panels[0].add(indexes[0], BorderLayout.NORTH);\r\n    panels[0].add(text(val[0] ? data.info(IndexType.PATH) :\r\n      Token.token(PATHINDEXINFO)), BorderLayout.CENTER);\r\n    tabPath.add(panels[0]);\r\n\r\n    // tab: value indexes\r\n    final BaseXBack tabValues = new BaseXBack(new GridLayout(2, 1)).border(8);\r\n    panels[1].add(indexes[1], BorderLayout.NORTH);\r\n    panels[1].add(text(val[1] ? data.info(IndexType.TEXT) :\r\n      Token.token(TXTINDEXINFO)), BorderLayout.CENTER);\r\n    tabValues.add(panels[1]);\r\n\r\n    panels[2].add(indexes[2], BorderLayout.NORTH);\r\n    panels[2].add(text(val[2] ? data.info(IndexType.ATTRIBUTE) :\r\n      Token.token(ATTINDEXINFO)), BorderLayout.CENTER);\r\n    tabValues.add(panels[2]);\r\n\r\n    // tab: full-text index\r\n    final BaseXBack tabFT = new BaseXBack(new GridLayout(1, 1)).border(8);\r\n    panels[3].add(indexes[3], BorderLayout.NORTH);\r\n    if(!val[3]) ft = new DialogFT(this, false);\r\n    panels[3].add(val[3] ? text(data.info(IndexType.FULLTEXT)) : ft,\r\n        BorderLayout.CENTER);\r\n    tabFT.add(panels[3]);\r\n\r\n    final BaseXTabs tabs = new BaseXTabs(this);\r\n    tabs.addTab(GENERALINFO, tabInfo);\r\n    tabs.addTab(\"Add Resources\", tabRes);\r\n    tabs.addTab(NAMESINFO, tabNames);\r\n    tabs.addTab(INFOPATHINDEX, tabPath);\r\n    tabs.addTab(INDEXINFO, tabValues);\r\n    tabs.addTab(FTINFO, tabFT);\r\n\r\n    final BaseXBack back = new BaseXBack(new BorderLayout());\r\n    back.add(tabs, BorderLayout.CENTER);\r\n    back.add(buttons, BorderLayout.SOUTH);\r\n\r\n    set(back, BorderLayout.CENTER);\r\n    set(resources, BorderLayout.WEST);\r\n\r\n    action(null);\r\n    setResizable(true);\r\n    setMinimumSize(getPreferredSize());\r\n    finish(null);\r\n  }","commit_id":"ad390d3865cace60c40cff89057d9c9dbbf09ddf","url":"https://github.com/BaseXdb/basex"},{"original_method":"/**\r\n   * Performs the info function.\r\n   * @param ctx query context\r\n   * @return iterator\r\n   * @throws QueryException query exception\r\n   */\r\n  private Str info(final QueryContext ctx) throws QueryException {\r\n    final Data data = data(0, ctx);\r\n    final byte[] info;\r\n    if(expr.length == 1) {\r\n      final boolean create = ctx.context.user.perm(User.CREATE);\r\n      info = InfoDB.db(data.meta, false, true, create);\r\n    } else {\r\n      final byte[] tp = checkStr(expr[1], ctx);\r\n      final CmdIndexInfo cmd = InfoIndex.info(string(tp));\r\n      if(cmd == null) NOINDEX.thrw(input, data.meta.name, this);\r\n      info = InfoIndex.info(cmd, data);\r\n    }\r\n    return Str.get(Token.delete(info, '\\r'));\r\n  }","id":55676,"modified_method":"/**\r\n   * Performs the info function.\r\n   * @param ctx query context\r\n   * @return iterator\r\n   * @throws QueryException query exception\r\n   */\r\n  private Item info(final QueryContext ctx) throws QueryException {\r\n    final Data data = data(0, ctx);\r\n    final boolean create = ctx.context.user.perm(User.CREATE);\r\n    return toNode(InfoDB.db(data.meta, false, true, create), DATABASE);\r\n  }","commit_id":"ad390d3865cace60c40cff89057d9c9dbbf09ddf","url":"https://github.com/BaseXdb/basex"},{"original_method":"/**\r\n   * Performs the system function.\r\n   * @param ctx query context\r\n   * @return iterator\r\n   */\r\n  private Str system(final QueryContext ctx) {\r\n    return Str.get(Token.delete(Info.info(ctx.context), '\\r'));\r\n  }","id":55677,"modified_method":"/**\r\n   * Performs the system function.\r\n   * @param ctx query context\r\n   * @return iterator\r\n   */\r\n  private ANode system(final QueryContext ctx) {\r\n    return toNode(Info.info(ctx.context), SYSTEM);\r\n  }","commit_id":"ad390d3865cace60c40cff89057d9c9dbbf09ddf","url":"https://github.com/BaseXdb/basex"},{"original_method":"/**\r\n   * Test method for the db:info() function.\r\n   * @throws BaseXException database exception\r\n   */\r\n  @Test\r\n  public void dbInfo() throws BaseXException {\r\n    check(_DB_INFO);\r\n    // standard test\r\n    contains(_DB_INFO.args(DB), INFOON);\r\n\r\n    // drop indexes and check index queries\r\n    final String[] types = { \"text\", \"attribute\", \"fulltext\" };\r\n    for(final String type : types) new DropIndex(type).execute(CONTEXT);\r\n    for(final String type : types) query(_DB_INFO.args(DB, type));\r\n    // create indexes and check index queries\r\n    for(final String type : types) new CreateIndex(type).execute(CONTEXT);\r\n    for(final String type : types) query(_DB_INFO.args(DB, type));\r\n    // check name indexes\r\n    query(_DB_INFO.args(DB, \"tag\"));\r\n    query(_DB_INFO.args(DB, \"attname\"));\r\n    error(_DB_INFO.args(DB, \"XXX\"), Err.NOINDEX);\r\n  }","id":55678,"modified_method":"/**\r\n   * Test method for the db:info() function.\r\n   */\r\n  @Test\r\n  public void dbInfo() {\r\n    check(_DB_INFO);\r\n    query(\"count(\" + _DB_INFO.args(DB) + \"//\" +\r\n        INFODBSIZE.replaceAll(\" |-\", \"\") + \")\", 1);\r\n  }","commit_id":"ad390d3865cace60c40cff89057d9c9dbbf09ddf","url":"https://github.com/BaseXdb/basex"},{"original_method":"/**\r\n   * Test method for the db:system() function.\r\n   */\r\n  @Test\r\n  public void dbSystem() {\r\n    check(_DB_SYSTEM);\r\n    contains(_DB_SYSTEM.args(), INFOON);\r\n  }","id":55679,"modified_method":"/**\r\n   * Test method for the db:system() function.\r\n   */\r\n  @Test\r\n  public void dbSystem() {\r\n    check(_DB_SYSTEM);\r\n    contains(_DB_SYSTEM.args(), Prop.VERSION);\r\n  }","commit_id":"ad390d3865cace60c40cff89057d9c9dbbf09ddf","url":"https://github.com/BaseXdb/basex"},{"original_method":"/**\n   * Creates a database information string.\n   * @param context database context\n   * @return info string\n   */\n  public static byte[] info(final Context context) {\n    final TokenBuilder tb = new TokenBuilder();\n    tb.add(INFOGENERAL + NL);\n    format(tb, VERSINFO, VERSION);\n    if(context.user.perm(User.CREATE)) {\n      Performance.gc(3);\n      format(tb, INFODBPATH, context.mprop.get(MainProp.DBPATH));\n      format(tb, INFOMEM, Performance.getMem());\n    }\n    final Prop prop = context.prop;\n    tb.add(NL + INFORESOURCE + NL);\n    format(tb, INFOCHOP, Util.flag(prop.is(Prop.CHOP)));\n\n    tb.add(NL + INFOINDEX + NL);\n    format(tb, INFOPATHINDEX, Util.flag(prop.is(Prop.PATHINDEX)));\n    format(tb, INFOTEXTINDEX, Util.flag(prop.is(Prop.TEXTINDEX)));\n    format(tb, INFOATTRINDEX, Util.flag(prop.is(Prop.ATTRINDEX)));\n    format(tb, INFOFTINDEX,   Util.flag(prop.is(Prop.FTINDEX)) +\n        (prop.is(Prop.FTINDEX) && prop.is(Prop.WILDCARDS) ?\n        \" (\" + INFOWCINDEX + \")\" : \"\"));\n    return tb.finish();\n  }","id":55680,"modified_method":"/**\n   * Creates a database information string.\n   * @param context database context\n   * @return info string\n   */\n  public static String info(final Context context) {\n    final TokenBuilder tb = new TokenBuilder();\n    tb.add(INFOGENERAL + NL);\n    format(tb, VERSINFO, VERSION);\n    if(context.user.perm(User.CREATE)) {\n      Performance.gc(3);\n      format(tb, INFODBPATH, context.mprop.get(MainProp.DBPATH));\n      format(tb, INFOMEM, Performance.getMem());\n    }\n    final Prop prop = context.prop;\n    tb.add(NL + INFORESOURCE + NL);\n    format(tb, INFOCHOP, Util.flag(prop.is(Prop.CHOP)));\n\n    tb.add(NL + INFOINDEX + NL);\n    format(tb, INFOPATHINDEX, Util.flag(prop.is(Prop.PATHINDEX)));\n    format(tb, INFOTEXTINDEX, Util.flag(prop.is(Prop.TEXTINDEX)));\n    format(tb, INFOATTRINDEX, Util.flag(prop.is(Prop.ATTRINDEX)));\n    format(tb, INFOFTINDEX,   Util.flag(prop.is(Prop.FTINDEX)) +\n        (prop.is(Prop.FTINDEX) && prop.is(Prop.WILDCARDS) ?\n        \" (\" + INFOWCINDEX + \")\" : \"\"));\n    return tb.toString();\n  }","commit_id":"ad390d3865cace60c40cff89057d9c9dbbf09ddf","url":"https://github.com/BaseXdb/basex"},{"original_method":"/**\n   * Creates a database information string.\n   * @param meta meta data\n   * @param bold header bold header flag\n   * @param index add index information\n   * @param create create permissions\n   * @return info string\n   */\n  public static byte[] db(final MetaData meta, final boolean bold,\n      final boolean index, final boolean create) {\n\n    final TokenBuilder tb = new TokenBuilder();\n    final String header = (bold ?\n        new TokenBuilder().bold().add('%').norm().toString() : \"%\") + NL;\n    tb.addExt(header, INFODB);\n    format(tb, INFODBNAME, meta.name);\n    format(tb, INFODBSIZE, Performance.format(meta.dbsize()));\n    format(tb, INFONODES, Integer.toString(meta.size));\n\n    // count number of raw files\n    final int bin = meta.binaries().descendants().size();\n    format(tb, INFODOCS, Integer.toString(meta.ndocs));\n    format(tb, INFOBIN, Integer.toString(bin));\n    format(tb, INFOTIME, DATE.format(new Date(meta.dbtime())));\n    if(meta.corrupt) tb.add(' ' + DBCORRUPT + NL);\n\n    tb.add(NL).addExt(header, INFORESOURCE);\n    if(create && !meta.original.isEmpty()) format(tb, INFOPATH, meta.original);\n    if(meta.filesize != 0)\n      format(tb, INFODOCSIZE, Performance.format(meta.filesize));\n    format(tb, INFOTIME, DATE.format(new Date(meta.time)));\n    format(tb, INFOENCODING, meta.encoding);\n    format(tb, INFOCHOP, Util.flag(meta.chop));\n\n    if(index) {\n      tb.add(NL).addExt(header, INFOINDEX);\n      if(meta.oldindex) {\n        tb.add(\" \" + INDUPDATE + NL);\n      } else {\n        format(tb, INFOUPTODATE, String.valueOf(meta.uptodate));\n        format(tb, INFOPATHINDEX, Util.flag(meta.pathindex));\n        format(tb, INFOTEXTINDEX, Util.flag(meta.textindex));\n        format(tb, INFOATTRINDEX, Util.flag(meta.attrindex));\n        format(tb, INFOFTINDEX, Util.flag(meta.ftxtindex) + (meta.ftxtindex &&\n            meta.wildcards ? \" (\" + INFOWCINDEX + \")\" : \"\"));\n      }\n    }\n    return tb.finish();\n  }","id":55681,"modified_method":"/**\n   * Creates a database information string.\n   * @param meta meta data\n   * @param bold header bold header flag\n   * @param index add index information\n   * @param create create permissions\n   * @return info string\n   */\n  public static String db(final MetaData meta, final boolean bold,\n      final boolean index, final boolean create) {\n\n    final TokenBuilder tb = new TokenBuilder();\n    final String header = (bold ?\n        new TokenBuilder().bold().add('%').norm().toString() : \"%\") + NL;\n    tb.addExt(header, INFODB);\n    format(tb, INFODBNAME, meta.name);\n    format(tb, INFODBSIZE, Performance.format(meta.dbsize()));\n    format(tb, INFONODES, Integer.toString(meta.size));\n\n    // count number of raw files\n    final int bin = meta.binaries().descendants().size();\n    format(tb, INFODOCS, Integer.toString(meta.ndocs));\n    format(tb, INFOBIN, Integer.toString(bin));\n    format(tb, INFOTIME, DATE.format(new Date(meta.dbtime())));\n    if(meta.corrupt) tb.add(' ' + DBCORRUPT + NL);\n\n    tb.add(NL).addExt(header, INFORESOURCE);\n    if(create && !meta.original.isEmpty()) format(tb, INFOPATH, meta.original);\n    if(meta.filesize != 0)\n      format(tb, INFODOCSIZE, Performance.format(meta.filesize));\n    format(tb, INFOTIME, DATE.format(new Date(meta.time)));\n    format(tb, INFOENCODING, meta.encoding);\n    format(tb, INFOCHOP, Util.flag(meta.chop));\n\n    if(index) {\n      tb.add(NL).addExt(header, INFOINDEX);\n      if(meta.oldindex) {\n        tb.add(\" \" + INDUPDATE + NL);\n      } else {\n        format(tb, INFOUPTODATE, String.valueOf(meta.uptodate));\n        format(tb, INFOPATHINDEX, Util.flag(meta.pathindex));\n        format(tb, INFOTEXTINDEX, Util.flag(meta.textindex));\n        format(tb, INFOATTRINDEX, Util.flag(meta.attrindex));\n        format(tb, INFOFTINDEX, Util.flag(meta.ftxtindex) + (meta.ftxtindex &&\n            meta.wildcards ? \" (\" + INFOWCINDEX + \")\" : \"\"));\n      }\n    }\n    return tb.toString();\n  }","commit_id":"ad390d3865cace60c40cff89057d9c9dbbf09ddf","url":"https://github.com/BaseXdb/basex"},{"original_method":"/**\n   * Returns the addressed database (i.e., the first path entry), or {@code null}\n   * if the root directory was specified.\n   * @return database\n   */\n  public String db() {\n    return depth() == 0 ? null : segments[0];\n  }","id":55682,"modified_method":"/**\n   * Returns the addressed database (i.e., the first path entry).\n   * @return database, or {@code null} if the root directory was specified.\n   */\n  public String db() {\n    final int s = path.indexOf('/', 1);\n    return path.substring(1, s == -1 ? path.length() : s);\n  }","commit_id":"a1ecd592e626169ab12033042a337627a7e35769","url":"https://github.com/BaseXdb/basex"},{"original_method":"/**\n   * Returns the database path (i.e., all path entries except for the first).\n   * @return path depth\n   */\n  public String dbpath() {\n    final TokenBuilder tb = new TokenBuilder();\n    final int ps = segments.length;\n    for(int p = 1; p < ps; p++) {\n      if(!tb.isEmpty()) tb.add('/');\n      tb.add(segments[p]);\n    }\n    return tb.toString();\n  }","id":55683,"modified_method":"/**\n   * Returns the database path (i.e., all path entries except for the first).\n   * @return database path\n   */\n  public String dbpath() {\n    final int s = path.indexOf('/', 1);\n    return s == -1 ? \"\" : path.substring(s + 1);\n  }","commit_id":"a1ecd592e626169ab12033042a337627a7e35769","url":"https://github.com/BaseXdb/basex"},{"original_method":"/**\n   * Constructor.\n   * @param rq request\n   * @param rs response\n   * @param servlet calling servlet instance\n   * @throws IOException I/O exception\n   */\n  public HTTPContext(final HttpServletRequest rq, final HttpServletResponse rs,\n      final BaseXServlet servlet) throws IOException {\n\n    req = rq;\n    res = rs;\n    params = new HTTPParams(this);\n\n    method = rq.getMethod();\n\n    final StringBuilder uri = new StringBuilder(req.getRequestURL());\n    final String qs = req.getQueryString();\n    if(qs != null) uri.append('?').append(qs);\n    log('[' + method + \"] \" + uri, null);\n\n    // set UTF8 as default encoding (can be overwritten)\n    res.setCharacterEncoding(UTF8);\n    segments = decode(toSegments(req.getPathInfo()));\n\n    // adopt servlet-specific credentials or use global ones\n    final GlobalOptions mprop = context().globalopts;\n    user = servlet.user != null ? servlet.user : mprop.get(GlobalOptions.USER);\n    pass = servlet.pass != null ? servlet.pass : mprop.get(GlobalOptions.PASSWORD);\n\n    // overwrite credentials with session-specific data\n    final String auth = req.getHeader(AUTHORIZATION);\n    if(auth != null) {\n      final String[] values = auth.split(\" \");\n      if(values[0].equals(BASIC)) {\n        final String[] cred = org.basex.util.Base64.decode(values[1]).split(\":\", 2);\n        if(cred.length != 2) throw new LoginException(NOPASSWD);\n        user = cred[0];\n        pass = cred[1];\n      } else {\n        throw new LoginException(WHICHAUTH, values[0]);\n      }\n    }\n  }","id":55684,"modified_method":"/**\n   * Constructor.\n   * @param req request\n   * @param res response\n   * @param servlet calling servlet instance\n   * @throws IOException I/O exception\n   */\n  public HTTPContext(final HttpServletRequest req, final HttpServletResponse res,\n      final BaseXServlet servlet) throws IOException {\n\n    this.req = req;\n    this.res = res;\n    params = new HTTPParams(this);\n\n    method = req.getMethod();\n\n    final StringBuilder uri = new StringBuilder(req.getRequestURL());\n    final String qs = req.getQueryString();\n    if(qs != null) uri.append('?').append(qs);\n    log('[' + method + \"] \" + uri, null);\n\n    // set UTF8 as default encoding (can be overwritten)\n    res.setCharacterEncoding(UTF8);\n    path = decode(normalize(req.getPathInfo()));\n\n    // adopt servlet-specific credentials or use global ones\n    final GlobalOptions mprop = context().globalopts;\n    user = servlet.user != null ? servlet.user : mprop.get(GlobalOptions.USER);\n    pass = servlet.pass != null ? servlet.pass : mprop.get(GlobalOptions.PASSWORD);\n\n    // overwrite credentials with session-specific data\n    final String auth = req.getHeader(AUTHORIZATION);\n    if(auth != null) {\n      final String[] values = auth.split(\" \");\n      if(values[0].equals(BASIC)) {\n        final String[] cred = org.basex.util.Base64.decode(values[1]).split(\":\", 2);\n        if(cred.length != 2) throw new LoginException(NOPASSWD);\n        user = cred[0];\n        pass = cred[1];\n      } else {\n        throw new LoginException(WHICHAUTH, values[0]);\n      }\n    }\n  }","commit_id":"a1ecd592e626169ab12033042a337627a7e35769","url":"https://github.com/BaseXdb/basex"},{"original_method":"/**\n   * Decodes the specified path segments.\n   * @param segments strings to be decoded\n   * @return argument\n   * @throws IllegalArgumentException invalid path segments\n   */\n  public static String[] decode(final String[] segments) {\n    try {\n      final int sl = segments.length;\n      for(int s = 0; s < sl; s++) {\n        segments[s] = URLDecoder.decode(segments[s], Prop.ENCODING);\n      }\n      return segments;\n    } catch(final UnsupportedEncodingException ex) {\n      throw new IllegalArgumentException(ex);\n    }\n  }","id":55685,"modified_method":"/**\n   * Decodes the specified path segments.\n   * @param segments strings to be decoded\n   * @return argument\n   * @throws IllegalArgumentException invalid path segments\n   */\n  public static String decode(final String segments) {\n    try {\n      return URLDecoder.decode(segments, Prop.ENCODING);\n    } catch(final UnsupportedEncodingException ex) {\n      throw new IllegalArgumentException(ex);\n    }\n  }","commit_id":"a1ecd592e626169ab12033042a337627a7e35769","url":"https://github.com/BaseXdb/basex"},{"original_method":"/**\n   * Adds a command or opening the addressed database.\n   * @param rs REST session\n   */\n  static void open(final RESTSession rs) {\n    final String db = rs.http.db();\n    if(db != null) rs.add(new Open(db, rs.http.dbpath()));\n  }","id":55686,"modified_method":"/**\n   * Adds a command or opening the addressed database.\n   * @param rs REST session\n   */\n  static void open(final RESTSession rs) {\n    final String db = rs.http.db();\n    if(!db.isEmpty()) rs.add(new Open(db, rs.http.dbpath()));\n  }","commit_id":"a1ecd592e626169ab12033042a337627a7e35769","url":"https://github.com/BaseXdb/basex"},{"original_method":"/**\n   * Creates a new instance of this command.\n   * @param rs REST session\n   * @return command\n   * @throws IOException I/O exception\n   */\n  static RESTExec get(final RESTSession rs) throws IOException {\n    RESTCmd.parseOptions(rs);\n\n    final HTTPContext http = rs.http;\n    if(http.depth() == 0) throw HTTPCode.NO_PATH.get();\n\n    // open database to ensure it exists\n    rs.add(new Open(http.db()));\n    if(http.depth() == 1) rs.add(new DropDB(http.db()));\n    else rs.add(new Delete(http.dbpath()));\n\n    return new RESTExec(rs);\n  }","id":55687,"modified_method":"/**\n   * Creates a new instance of this command.\n   * @param rs REST session\n   * @return command\n   * @throws IOException I/O exception\n   */\n  static RESTExec get(final RESTSession rs) throws IOException {\n    RESTCmd.parseOptions(rs);\n\n    final HTTPContext http = rs.http;\n    final String db = http.db();\n    if(db.isEmpty()) throw HTTPCode.NO_PATH.get();\n\n    // open database to ensure it exists\n    rs.add(new Open(db));\n    final String path = http.dbpath();\n    if(path.isEmpty()) rs.add(new DropDB(db));\n    else rs.add(new Delete(path));\n\n    return new RESTExec(rs);\n  }","commit_id":"a1ecd592e626169ab12033042a337627a7e35769","url":"https://github.com/BaseXdb/basex"},{"original_method":"/**\n   * Creates REST code.\n   * @param rs REST session\n   * @return code\n   * @throws IOException I/O exception\n   */\n  public static RESTExec get(final RESTSession rs) throws IOException {\n    // create new database or update resource\n    final HTTPContext http = rs.http;\n    if(http.depth() == 0) throw HTTPCode.NO_PATH.get();\n\n    RESTCmd.parseOptions(rs);\n\n    boolean xml = true;\n    final InputStream is = http.req.getInputStream();\n    final String ct = http.contentType();\n    // choose correct importer\n    MainParser parser = null;\n    if(isJSON(ct)) {\n      parser = MainParser.JSON;\n      if(APP_JSONML.equals(ct)) {\n        final JsonParserOptions jopts = new JsonParserOptions();\n        jopts.set(JsonOptions.FORMAT, JsonFormat.JSONML);\n        rs.context.options.set(MainOptions.JSONPARSER, jopts);\n      }\n    } else if(TEXT_CSV.equals(ct)) {\n      parser = MainParser.CSV;\n    } else if(TEXT_HTML.equals(ct)) {\n      parser = MainParser.HTML;\n    } else if(ct != null && isText(ct)) {\n      parser = MainParser.TEXT;\n    } else if(ct != null && !isXML(ct)) {\n      xml = false;\n    }\n    if(parser != null) rs.context.options.set(MainOptions.PARSER, parser);\n\n    // store data as XML or raw file, depending on content type\n    final String db = http.db();\n    if(http.depth() == 1) {\n      if(xml) {\n        rs.add(new CreateDB(db), is);\n      } else {\n        rs.add(new CreateDB(db));\n        rs.add(new Store(db), is);\n      }\n    } else {\n      rs.add(new Open(db));\n      final String path = http.dbpath();\n      if(xml) {\n        rs.add(new Replace(path), is);\n      } else {\n        rs.add(new Delete(path));\n        rs.add(new Store(path), is);\n      }\n    }\n    final RESTExec cmd = new RESTExec(rs);\n    cmd.code = HTTPCode.CREATED_X;\n    return cmd;\n  }","id":55688,"modified_method":"/**\n   * Creates REST code.\n   * @param rs REST session\n   * @return code\n   * @throws IOException I/O exception\n   */\n  public static RESTExec get(final RESTSession rs) throws IOException {\n    // create new database or update resource\n    final HTTPContext http = rs.http;\n    final String db = http.db();\n    if(db.isEmpty()) throw HTTPCode.NO_PATH.get();\n\n    RESTCmd.parseOptions(rs);\n\n    boolean xml = true;\n    final InputStream is = http.req.getInputStream();\n    final String ct = http.contentType();\n    // choose correct importer\n    MainParser parser = null;\n    if(isJSON(ct)) {\n      parser = MainParser.JSON;\n      if(APP_JSONML.equals(ct)) {\n        final JsonParserOptions jopts = new JsonParserOptions();\n        jopts.set(JsonOptions.FORMAT, JsonFormat.JSONML);\n        rs.context.options.set(MainOptions.JSONPARSER, jopts);\n      }\n    } else if(TEXT_CSV.equals(ct)) {\n      parser = MainParser.CSV;\n    } else if(TEXT_HTML.equals(ct)) {\n      parser = MainParser.HTML;\n    } else if(ct != null && isText(ct)) {\n      parser = MainParser.TEXT;\n    } else if(ct != null && !isXML(ct)) {\n      xml = false;\n    }\n    if(parser != null) rs.context.options.set(MainOptions.PARSER, parser);\n\n    // store data as XML or raw file, depending on content type\n    final String path = http.dbpath();\n    if(path.isEmpty()) {\n      if(xml) {\n        rs.add(new CreateDB(db), is);\n      } else {\n        rs.add(new CreateDB(db));\n        rs.add(new Store(db), is);\n      }\n    } else {\n      rs.add(new Open(db));\n      if(xml) {\n        rs.add(new Replace(path), is);\n      } else {\n        rs.add(new Delete(path));\n        rs.add(new Store(path), is);\n      }\n    }\n    final RESTExec cmd = new RESTExec(rs);\n    cmd.code = HTTPCode.CREATED_X;\n    return cmd;\n  }","commit_id":"a1ecd592e626169ab12033042a337627a7e35769","url":"https://github.com/BaseXdb/basex"},{"original_method":"/**\n   * Creates a new instance of this command.\n   * @param rs REST session\n   * @return command\n   */\n  static RESTCmd get(final RESTSession rs) {\n    final HTTPContext http = rs.http;\n    if(http.depth() == 0) return new RESTList(rs.add(new List()));\n    return new RESTRetrieve(rs.add(new Open(http.db())));\n  }","id":55689,"modified_method":"/**\n   * Creates a new instance of this command.\n   * @param rs REST session\n   * @return command\n   */\n  static RESTCmd get(final RESTSession rs) {\n    final HTTPContext http = rs.http;\n    final String db = http.db();\n    if(db.isEmpty()) return new RESTList(rs.add(new List()));\n    return new RESTRetrieve(rs.add(new Open(db)));\n  }","commit_id":"a1ecd592e626169ab12033042a337627a7e35769","url":"https://github.com/BaseXdb/basex"},{"original_method":"/**\n   * Returns the function that has a mime type the quality factor of which matches the HTTP request\n   * best.\n   * @param list list of functions\n   * @param http http context\n   * @return best function, or {@code null} if more than one function exists\n   */\n  private RestXqFunction bestQf(final ArrayList<RestXqFunction> list, final HTTPContext http) {\n    // mime types accepted by the client\n    final HTTPAccept[] accepts = http.accepts();\n\n    double bestQf = 0;\n    RestXqFunction best = list.get(0);\n    for(final RestXqFunction rxf : list) {\n      // skip remaining functions with a weaker specifity\n      if(best.compareTo(rxf) != 0) break;\n      for(final String p : rxf.produces) {\n        for(final HTTPAccept accept : accepts) {\n          final double qf = accept.qf;\n          if(MimeTypes.matches(p, accept.type)) {\n            // multiple functions with the same quality factor\n            if(bestQf == qf) return null;\n            if(bestQf < qf) {\n              bestQf = qf;\n              best = rxf;\n            }\n          }\n        }\n      }\n    }\n    return best;\n  }","id":55690,"modified_method":"/**\n   * Returns the function that has a mime type the quality factor of which matches the HTTP request\n   * best.\n   * @param list list of functions\n   * @param http http context\n   * @return best function, or {@code null} if more than one function exists\n   */\n  private RestXqFunction bestQf(final ArrayList<RestXqFunction> list, final HTTPContext http) {\n    // mime types accepted by the client\n    final HTTPAccept[] accepts = http.accepts();\n\n    double bestQf = 0;\n    RestXqFunction best = list.get(0);\n    for(final RestXqFunction rxf : list) {\n      // skip remaining functions with a weaker specifity\n      if(best.compareTo(rxf) != 0) break;\n      if(rxf.produces.isEmpty()) return null;\n\n      for(final String p : rxf.produces) {\n        for(final HTTPAccept accept : accepts) {\n          final double qf = accept.qf;\n          if(MimeTypes.matches(p, accept.type)) {\n            // multiple functions with the same quality factor\n            if(bestQf == qf) return null;\n            if(bestQf < qf) {\n              bestQf = qf;\n              best = rxf;\n            }\n          }\n        }\n      }\n    }\n    return best;\n  }","commit_id":"a1ecd592e626169ab12033042a337627a7e35769","url":"https://github.com/BaseXdb/basex"},{"original_method":"/**\n   * Checks if the path matches the HTTP request.\n   * @param http http context\n   * @return result of check\n   */\n  boolean matches(final HTTPContext http) {\n    return matcher.matches(http.req.getPathInfo());\n  }","id":55691,"modified_method":"/**\n   * Checks if the path matches the HTTP request.\n   * @param http http context\n   * @return result of check\n   */\n  boolean matches(final HTTPContext http) {\n    return matcher.matches(http.path());\n  }","commit_id":"a1ecd592e626169ab12033042a337627a7e35769","url":"https://github.com/BaseXdb/basex"},{"original_method":"/**\n   * Gets the variable values for the given HTTP context path.\n   * @param http HTTP context\n   * @return map with variable values\n   */\n  Map<QNm, String> values(final HTTPContext http) {\n    return matcher.values(http.req.getPathInfo());\n  }","id":55692,"modified_method":"/**\n   * Gets the variable values for the given HTTP context path.\n   * @param http HTTP context\n   * @return map with variable values\n   */\n  Map<QNm, String> values(final HTTPContext http) {\n    return matcher.values(http.path());\n  }","commit_id":"a1ecd592e626169ab12033042a337627a7e35769","url":"https://github.com/BaseXdb/basex"},{"original_method":"/**\n   * Creates a pattern matcher for the given string.\n   * @param input input string\n   * @return pattern matcher\n   */\n  private Matcher matcher(final String input) {\n    final String p = decode(input);\n    return pattern.matcher(p.startsWith(\"/\") ? p : p + '/');\n  }","id":55693,"modified_method":"/**\n   * Creates a pattern matcher for the given string.\n   * @param input input string\n   * @return pattern matcher\n   */\n  private Matcher matcher(final String input) {\n    return pattern.matcher(input);\n  }","commit_id":"a1ecd592e626169ab12033042a337627a7e35769","url":"https://github.com/BaseXdb/basex"},{"original_method":"/**\n   * Decodes the URL and escapes regex characters in path template literals.\n   * @param literals literals to escape\n   * @param result string builder where the escaped literals will be appended to.\n   */\n  private static void decodeAndEscape(final StringBuilder literals, final StringBuilder result) {\n    if(literals.length() > 0) {\n      final String decoded = decode(literals.toString());\n      final int n = decoded.length();\n      for(int i = 0; i < n; ++i) {\n        final char c = decoded.charAt(i);\n        if(isRegexChar(c)) result.append('\\\\');\n        result.append(c);\n      }\n      literals.setLength(0);\n    }\n  }","id":55694,"modified_method":"/**\n   * Decodes the URL and escapes regex characters in path template literals.\n   * @param literals literals to escape\n   * @param result string builder where the escaped literals will be appended to.\n   */\n  private static void decodeAndEscape(final StringBuilder literals, final StringBuilder result) {\n    if(literals.length() > 0) {\n      final String decoded = HTTPContext.decode(literals.toString());\n      final int n = decoded.length();\n      for(int i = 0; i < n; ++i) {\n        final char c = decoded.charAt(i);\n        if(isRegexChar(c)) result.append('\\\\');\n        result.append(c);\n      }\n      literals.setLength(0);\n    }\n  }","commit_id":"a1ecd592e626169ab12033042a337627a7e35769","url":"https://github.com/BaseXdb/basex"},{"original_method":"/**\n   * Retrieves the root.\n   * @throws Exception exception\n   */\n  @Test\n  public void get() throws Exception {\n    get(\"declare %R:path('/') function m:f() { 'root' };\", \"\", \"root\");\n    get(\"declare %R:path('') function m:f() { 'root' };\", \"\", \"root\");\n    // explicit GET method\n    get(\"declare %R:GET %R:path('') function m:f() { 'root' };\", \"\", \"root\");\n    // duplicate GET method\n    getE(\"declare %R:GET %R:GET %R:path('') function m:f() { 'root' };\", \"\");\n  }","id":55695,"modified_method":"/**\n   * Retrieves the root.\n   * @throws Exception exception\n   */\n  @Test\n  public void get() throws Exception {\n    // ignore duplicate slashes\n    get(\"declare %R:path('') function m:f() { 'root' };\", \"\", \"root\");\n    get(\"declare %R:path('') function m:f() { 'root' };\", \"/\", \"root\");\n    get(\"declare %R:path('') function m:f() { 'root' };\", \"//\", \"root\");\n    get(\"declare %R:path('') function m:f() { 'root' };\", \"/////\", \"root\");\n    get(\"declare %R:path('/') function m:f() { 'root' };\", \"\", \"root\");\n    get(\"declare %R:path('/') function m:f() { 'root' };\", \"/\", \"root\");\n    // explicit GET method\n    get(\"declare %R:GET %R:path('') function m:f() { 'root' };\", \"\", \"root\");\n    // duplicate GET method\n    getE(\"declare %R:GET %R:GET %R:path('') function m:f() { 'root' };\", \"\");\n  }","commit_id":"a1ecd592e626169ab12033042a337627a7e35769","url":"https://github.com/BaseXdb/basex"},{"original_method":"/**\n   * Returns the base URI of the resource function.\n   * @return base uri\n   * @throws QueryException query exception\n   */\n  public Uri baseUri() throws QueryException {\n    final HTTPContext http = http();\n    return Uri.uri(http.req.getRequestURI().replaceAll(http.req.getPathInfo(), \"\"));\n  }","id":55696,"modified_method":"/**\n   * Returns the base URI of the resource function.\n   * @return base uri\n   * @throws QueryException query exception\n   */\n  public Uri baseUri() throws QueryException {\n    final HTTPContext http = http();\n    return Uri.uri(http.req.getRequestURI().replace(http.req.getPathInfo(), \"\"));\n  }","commit_id":"a1ecd592e626169ab12033042a337627a7e35769","url":"https://github.com/BaseXdb/basex"},{"original_method":"@Override\n    protected ModelAndView handleRequestInternal(HttpServletRequest request, HttpServletResponse response) throws Exception {\n        String[] requiredParameters = new String[] { \"report or domain\", \"type\" };\n      \n        // Get Form Variable\n        String report_type = WebSecurityUtils.sanitizeString(request.getParameter(\"type\"));\n        if (report_type == null) {\n            throw new MissingParameterException(\"type\", requiredParameters);\n        }\n      \n        String r_index = WebSecurityUtils.sanitizeString(request.getParameter(\"report\"));\n        String domain = WebSecurityUtils.sanitizeString(request.getParameter(\"domain\"));\n        int report_index = 0;\n        if (r_index != null) {\n            report_index = WebSecurityUtils.safeParseInt(r_index);\n        } else if (domain == null) {\n            throw new MissingParameterException(\"report or domain\", requiredParameters);\n        }\n      \n        String override_timespan = WebSecurityUtils.sanitizeString(request.getParameter(\"timespan\"));\n        String override_graphtype = WebSecurityUtils.sanitizeString(request.getParameter(\"graphtype\"));\n        if ((override_timespan == null) || (override_timespan.equals(\"null\"))) {\n            override_timespan = \"none\";\n        }\n        if ((override_graphtype == null) || (override_graphtype.equals(\"null\"))) {\n            override_graphtype = \"none\";\n        }\n      \n        // Load report to view \n        Report report = null;\n        if (\"node\".equals(report_type)) {\n            report = getKscReportService().buildNodeReport(report_index);\n        } else if (\"domain\".equals(report_type)) {\n            report = getKscReportService().buildDomainReport(domain);\n        } else if (\"custom\".equals(report_type)) {\n            report = m_kscReportFactory.getReportByIndex(report_index);\n        } else {\n            throw new IllegalArgumentException(\"value to 'type' parameter of '\" + report_type + \"' is not supported.  Must be one of: node, domain, or custom\");\n        }\n      \n        if (report == null) {\n            throw new ServletException(\"Report does not exist\");\n        }\n      \n        // Define the possible graph options \n        PrefabGraph[] graph_options = new PrefabGraph[0];\n      \n        if (report.getGraphCount() > 0) {\n            Set<PrefabGraph> prefabGraphs = new HashSet<PrefabGraph>();\n            \n            for (int i = 0; i < report.getGraphCount(); i++) {\n                Graph graph = report.getGraph(i);\n                OnmsResource resource = getKscReportService().getResourceFromGraph(graph);\n                prefabGraphs.addAll(Arrays.asList(getResourceService().findPrefabGraphsForResource(resource)));\n            }\n            \n            graph_options = prefabGraphs.toArray(new PrefabGraph[prefabGraphs.size()]);\n\n            if (graph_options.length > 1) {\n                Arrays.sort(graph_options);\n            }\n\n            /*\n            if (\"custom\".equals(report_type) && \"node\".equals(resource.getResourceType().getName())) {\n                graph_options = getResourceService().findPrefabGraphsForChildResources(resource.getParent(), \"nodeSnmp\", \"interfaceSnmp\");\n            } else {\n                graph_options = getResourceService().findPrefabGraphsForChildResources(resource.getParent(), \"interfaceSnmp\");\n            }\n            */\n      \n            // Get default graph type from first element of graph_options\n            if ((\"node\".equals(report_type) || \"domain\".equals(report_type))\n                    && \"none\".equals(override_graphtype)\n                    && graph_options.length > 0) {\n                override_graphtype = graph_options[0].getName();\n                if (log().isDebugEnabled()) {\n                    log().debug(\"custom_view: setting default graph type to \"\n                                + override_graphtype);\n                }\n            }\n\n            /*\n            if (graph_options.length > 1) {\n                Arrays.sort(graph_options);\n            }\n            */\n        }\n        \n        \n        ArrayList<KscResultSet> resultSets = new ArrayList<KscResultSet>(report.getGraphCount());\n        for (int i = 0; i < report.getGraphCount(); i++) {\n            Graph current_graph = report.getGraph(i);\n            \n            OnmsResource resource = getKscReportService().getResourceFromGraph(current_graph);\n            promoteResourceAttributesIfNecessary(resource);\n\n            String display_graphtype = null;\n            if (\"none\".equals(override_graphtype)) {\n                display_graphtype = current_graph.getGraphtype();\n            } else {\n                display_graphtype = override_graphtype;\n            }\n            \n            PrefabGraph display_graph = getResourceService().getPrefabGraph(display_graphtype);\n            \n            // gather start/stop time information\n            String display_timespan = null;\n            if (\"none\".equals(override_timespan)) {\n                display_timespan = current_graph.getTimespan();\n            } else {\n                display_timespan = override_timespan;\n            }\n            Calendar begin_time = Calendar.getInstance();\n            Calendar end_time = Calendar.getInstance();\n            KSC_PerformanceReportFactory.getBeginEndTime(display_timespan, begin_time, end_time);\n            \n            KscResultSet resultSet = new KscResultSet(current_graph.getTitle(), begin_time.getTime(), end_time.getTime(), resource, display_graph);\n            resultSets.add(resultSet);\n        }\n        \n        ModelAndView modelAndView = new ModelAndView(\"KSC/customView\");\n\n        modelAndView.addObject(\"reportType\", report_type);\n        if (report != null) {\n            modelAndView.addObject(\"report\", r_index);\n        }\n        if (domain != null) {\n            modelAndView.addObject(\"domain\", domain);\n        }\n        \n        modelAndView.addObject(\"title\", report.getTitle());\n        modelAndView.addObject(\"resultSets\", resultSets);\n        \n        if (report.getShow_timespan_button()) {\n            if (\"none\".equals(override_timespan) || !getKscReportService().getTimeSpans(true).containsKey(override_timespan)) {\n                modelAndView.addObject(\"timeSpan\", \"none\");\n            } else {\n                modelAndView.addObject(\"timeSpan\", override_timespan);\n            }\n            modelAndView.addObject(\"timeSpans\", getKscReportService().getTimeSpans(true));\n        } else {\n            // Make sure it's null so the pulldown list isn't shown\n            modelAndView.addObject(\"timeSpan\", null);\n        }\n\n        if (report.getShow_graphtype_button()) {\n            LinkedHashMap<String, String> graphTypes = new LinkedHashMap<String, String>();\n            graphTypes.put(\"none\", \"none\");\n            for (PrefabGraph graph_option : graph_options) {\n                graphTypes.put(graph_option.getName(), graph_option.getName());\n            }\n            \n            if (\"none\".equals(override_graphtype) || !graphTypes.containsKey(override_graphtype)) {\n                modelAndView.addObject(\"graphType\", \"none\");\n            } else {\n                modelAndView.addObject(\"graphType\", override_graphtype);\n            }\n            modelAndView.addObject(\"graphTypes\", graphTypes);\n        } else {\n            // Make sure it's null so the pulldown list isn't shown\n            modelAndView.addObject(\"graphType\", null);\n        }\n        \n        modelAndView.addObject(\"showCustomizeButton\", !request.isUserInRole(Authentication.READONLY_ROLE));\n\n        if (report.getGraphs_per_line() > 0) {\n            modelAndView.addObject(\"graphsPerLine\", report.getGraphs_per_line());\n        } else {\n            modelAndView.addObject(\"graphsPerLine\", getDefaultGraphsPerLine());\n        }\n        \n        return modelAndView;\n    }","id":55697,"modified_method":"@Override\n    protected ModelAndView handleRequestInternal(HttpServletRequest request, HttpServletResponse response) throws Exception {\n        String[] requiredParameters = new String[] { \"report or domain\", \"type\" };\n      \n        // Get Form Variable\n        String report_type = WebSecurityUtils.sanitizeString(request.getParameter(\"type\"));\n        if (report_type == null) {\n            throw new MissingParameterException(\"type\", requiredParameters);\n        }\n      \n        String r_index = WebSecurityUtils.sanitizeString(request.getParameter(\"report\"));\n        String domain = WebSecurityUtils.sanitizeString(request.getParameter(\"domain\"));\n        int report_index = 0;\n        if (r_index != null) {\n            report_index = WebSecurityUtils.safeParseInt(r_index);\n        } else if (domain == null) {\n            throw new MissingParameterException(\"report or domain\", requiredParameters);\n        }\n      \n        String override_timespan = WebSecurityUtils.sanitizeString(request.getParameter(\"timespan\"));\n        String override_graphtype = WebSecurityUtils.sanitizeString(request.getParameter(\"graphtype\"));\n        if ((override_timespan == null) || (override_timespan.equals(\"null\"))) {\n            override_timespan = \"none\";\n        }\n        if ((override_graphtype == null) || (override_graphtype.equals(\"null\"))) {\n            override_graphtype = \"none\";\n        }\n      \n        // Load report to view \n        Report report = null;\n        if (\"node\".equals(report_type)) {\n            report = getKscReportService().buildNodeReport(report_index);\n        } else if (\"domain\".equals(report_type)) {\n            report = getKscReportService().buildDomainReport(domain);\n        } else if (\"custom\".equals(report_type)) {\n            report = m_kscReportFactory.getReportByIndex(report_index);\n        } else {\n            throw new IllegalArgumentException(\"value to 'type' parameter of '\" + report_type + \"' is not supported.  Must be one of: node, domain, or custom\");\n        }\n      \n        if (report == null) {\n            throw new ServletException(\"Report does not exist\");\n        }\n      \n        // Define the possible graph options \n        PrefabGraph[] graph_options = new PrefabGraph[0];\n      \n        if (report.getGraphCount() > 0) {\n            Set<PrefabGraph> prefabGraphs = new HashSet<PrefabGraph>();\n            \n            for (int i = 0; i < report.getGraphCount(); i++) {\n                Graph graph = report.getGraph(i);\n                OnmsResource resource = getKscReportService().getResourceFromGraph(graph);\n                prefabGraphs.addAll(Arrays.asList(getResourceService().findPrefabGraphsForResource(resource)));\n            }\n            \n            graph_options = prefabGraphs.toArray(new PrefabGraph[prefabGraphs.size()]);\n\n            if (graph_options.length > 1) {\n                Arrays.sort(graph_options);\n            }\n\n            /*\n            if (\"custom\".equals(report_type) && \"node\".equals(resource.getResourceType().getName())) {\n                graph_options = getResourceService().findPrefabGraphsForChildResources(resource.getParent(), \"nodeSnmp\", \"interfaceSnmp\");\n            } else {\n                graph_options = getResourceService().findPrefabGraphsForChildResources(resource.getParent(), \"interfaceSnmp\");\n            }\n            */\n      \n            // Get default graph type from first element of graph_options\n            if ((\"node\".equals(report_type) || \"domain\".equals(report_type))\n                    && \"none\".equals(override_graphtype)\n                    && graph_options.length > 0) {\n                override_graphtype = graph_options[0].getName();\n                if (log().isDebugEnabled()) {\n                    log().debug(\"custom_view: setting default graph type to \"\n                                + override_graphtype);\n                }\n            }\n\n            /*\n            if (graph_options.length > 1) {\n                Arrays.sort(graph_options);\n            }\n            */\n        }\n        \n        \n        ArrayList<KscResultSet> resultSets = new ArrayList<KscResultSet>(report.getGraphCount());\n        for (int i = 0; i < report.getGraphCount(); i++) {\n            Graph current_graph = report.getGraph(i);\n            \n            OnmsResource resource = getKscReportService().getResourceFromGraph(current_graph);\n            promoteResourceAttributesIfNecessary(resource);\n\n            String display_graphtype = null;\n            if (\"none\".equals(override_graphtype)) {\n                display_graphtype = current_graph.getGraphtype();\n            } else {\n                display_graphtype = override_graphtype;\n            }\n            \n            PrefabGraph display_graph = getResourceService().getPrefabGraph(display_graphtype);\n            \n            // gather start/stop time information\n            String display_timespan = null;\n            if (\"none\".equals(override_timespan)) {\n                display_timespan = current_graph.getTimespan();\n            } else {\n                display_timespan = override_timespan;\n            }\n            Calendar begin_time = Calendar.getInstance();\n            Calendar end_time = Calendar.getInstance();\n            KSC_PerformanceReportFactory.getBeginEndTime(display_timespan, begin_time, end_time);\n            \n            KscResultSet resultSet = new KscResultSet(current_graph.getTitle(), begin_time.getTime(), end_time.getTime(), resource, display_graph);\n            resultSets.add(resultSet);\n        }\n        \n        ModelAndView modelAndView = new ModelAndView(\"KSC/customView\");\n\n        modelAndView.addObject(\"loggedIn\", request.getRemoteUser() != null);\n        modelAndView.addObject(\"reportType\", report_type);\n        if (report != null) {\n            modelAndView.addObject(\"report\", r_index);\n        }\n        if (domain != null) {\n            modelAndView.addObject(\"domain\", domain);\n        }\n        \n        modelAndView.addObject(\"title\", report.getTitle());\n        modelAndView.addObject(\"resultSets\", resultSets);\n        \n        if (report.getShow_timespan_button()) {\n            if (\"none\".equals(override_timespan) || !getKscReportService().getTimeSpans(true).containsKey(override_timespan)) {\n                modelAndView.addObject(\"timeSpan\", \"none\");\n            } else {\n                modelAndView.addObject(\"timeSpan\", override_timespan);\n            }\n            modelAndView.addObject(\"timeSpans\", getKscReportService().getTimeSpans(true));\n        } else {\n            // Make sure it's null so the pulldown list isn't shown\n            modelAndView.addObject(\"timeSpan\", null);\n        }\n\n        if (report.getShow_graphtype_button()) {\n            LinkedHashMap<String, String> graphTypes = new LinkedHashMap<String, String>();\n            graphTypes.put(\"none\", \"none\");\n            for (PrefabGraph graph_option : graph_options) {\n                graphTypes.put(graph_option.getName(), graph_option.getName());\n            }\n            \n            if (\"none\".equals(override_graphtype) || !graphTypes.containsKey(override_graphtype)) {\n                modelAndView.addObject(\"graphType\", \"none\");\n            } else {\n                modelAndView.addObject(\"graphType\", override_graphtype);\n            }\n            modelAndView.addObject(\"graphTypes\", graphTypes);\n        } else {\n            // Make sure it's null so the pulldown list isn't shown\n            modelAndView.addObject(\"graphType\", null);\n        }\n        \n        modelAndView.addObject(\"showCustomizeButton\", !request.isUserInRole(Authentication.READONLY_ROLE) && (request.getRemoteUser() != null));\n\n        if (report.getGraphs_per_line() > 0) {\n            modelAndView.addObject(\"graphsPerLine\", report.getGraphs_per_line());\n        } else {\n            modelAndView.addObject(\"graphsPerLine\", getDefaultGraphsPerLine());\n        }\n        \n        return modelAndView;\n    }","commit_id":"aef41ee9c346d2dfb23749590f68b14bfe052079","url":"https://github.com/OpenNMS/opennms"},{"original_method":"@Override\n    protected ModelAndView handleRequestInternal(HttpServletRequest request, HttpServletResponse response) throws Exception {\n        String action = WebSecurityUtils.sanitizeString(request.getParameter(\"report_action\"));\n\n        if (action == null) {\n            throw new MissingParameterException(\"report_action\");\n        }\n\n        KscReportEditor editor = KscReportEditor.getFromSession(request.getSession(), false);\n        \n        if (action.equals(\"Customize\")) {\n            editor.loadWorkingReport(getKscReportFactory(), getReportIndex(request));\n            return new ModelAndView(\"redirect:/KSC/customReport.htm\");\n        } else if (action.equals(\"CreateFrom\")) {\n            editor.loadWorkingReportDuplicate(getKscReportFactory(), getReportIndex(request));\n            return new ModelAndView(\"redirect:/KSC/customReport.htm\");\n        } else if (action.equals(\"Delete\")) {\n            getKscReportFactory().deleteReportAndSave(getReportIndex(request)); \n            return new ModelAndView(\"redirect:/KSC/index.htm\");\n        } else if (action.equals(\"Create\")) {\n            editor.loadNewWorkingReport();\n            return new ModelAndView(\"redirect:/KSC/customReport.htm\");\n        } else if (action.equals(\"View\")) {\n            ModelAndView modelAndView = new ModelAndView(\"redirect:/KSC/customView.htm\");\n            modelAndView.addObject(\"report\", getReportIndex(request));\n            modelAndView.addObject(\"type\", \"custom\");\n            return modelAndView;\n        } else {\n            throw new ServletException (\"Invalid Parameter contents for report_action: \" + action);\n        }\n    }","id":55698,"modified_method":"@Override\n    protected ModelAndView handleRequestInternal(HttpServletRequest request, HttpServletResponse response) throws Exception {\n        String action = WebSecurityUtils.sanitizeString(request.getParameter(\"report_action\"));\n\n        if (action == null) {\n            throw new MissingParameterException(\"report_action\");\n        }\n\n        KscReportEditor editor = KscReportEditor.getFromSession(request.getSession(), false);\n\n        if (action.equals(\"View\")) {\n            ModelAndView modelAndView = new ModelAndView(\"redirect:/KSC/customView.htm\");\n            modelAndView.addObject(\"report\", getReportIndex(request));\n            modelAndView.addObject(\"type\", \"custom\");\n            return modelAndView;\n          \n        } else if (!request.isUserInRole(Authentication.READONLY_ROLE) && (request.getRemoteUser() != null)) {\n            if (action.equals(\"Customize\")) {\n                editor.loadWorkingReport(getKscReportFactory(), getReportIndex(request));\n                return new ModelAndView(\"redirect:/KSC/customReport.htm\");\n            } else if (action.equals(\"CreateFrom\")) {\n                editor.loadWorkingReportDuplicate(getKscReportFactory(), getReportIndex(request));\n                return new ModelAndView(\"redirect:/KSC/customReport.htm\");\n            } else if (action.equals(\"Delete\")) {\n                getKscReportFactory().deleteReportAndSave(getReportIndex(request)); \n                return new ModelAndView(\"redirect:/KSC/index.htm\");\n            } else if (action.equals(\"Create\")) {\n                editor.loadNewWorkingReport();\n               return new ModelAndView(\"redirect:/KSC/customReport.htm\");\n            }\n        }\n        throw new ServletException (\"Invalid Parameter contents for report_action: \" + action);\n    }","commit_id":"aef41ee9c346d2dfb23749590f68b14bfe052079","url":"https://github.com/OpenNMS/opennms"},{"original_method":"@Override\n    protected ModelAndView handleRequestInternal(HttpServletRequest request, HttpServletResponse response) throws Exception {\n        String[] requiredParameters = new String[] {\n                \"resourceId\",\n                \"reports\"\n        };\n        \n        for (String requiredParameter : requiredParameters) {\n            if (request.getParameter(requiredParameter) == null) {\n                throw new MissingParameterException(requiredParameter,\n                                                    requiredParameters);\n            }\n        }\n\n        String[] resourceIds = WebSecurityUtils.sanitizeString(request.getParameterValues(\"resourceId\"));\n        String[] reports = WebSecurityUtils.sanitizeString(request.getParameterValues(\"reports\"));\n        \n        // see if the start and end time were explicitly set as params\n        String start = WebSecurityUtils.sanitizeString(request.getParameter(\"start\"));\n        String end = WebSecurityUtils.sanitizeString(request.getParameter(\"end\"));\n\n        String relativeTime = WebSecurityUtils.sanitizeString(request.getParameter(\"relativetime\"));\n        \n        String startMonth = WebSecurityUtils.sanitizeString(request.getParameter(\"startMonth\"));\n        String startDate = WebSecurityUtils.sanitizeString(request.getParameter(\"startDate\"));\n        String startYear = WebSecurityUtils.sanitizeString(request.getParameter(\"startYear\"));\n        String startHour = WebSecurityUtils.sanitizeString(request.getParameter(\"startHour\"));\n\n        String endMonth = WebSecurityUtils.sanitizeString(request.getParameter(\"endMonth\"));\n        String endDate = WebSecurityUtils.sanitizeString(request.getParameter(\"endDate\"));\n        String endYear = WebSecurityUtils.sanitizeString(request.getParameter(\"endYear\"));\n        String endHour = WebSecurityUtils.sanitizeString(request.getParameter(\"endHour\"));\n        \n        long startLong;\n        long endLong;\n\n        if (start != null || end != null) {\n            String[] ourRequiredParameters = new String[] {\n                    \"start\",\n                    \"end\"\n            };\n        \n            if (start == null) {\n                throw new MissingParameterException(\"start\",\n                                                    ourRequiredParameters);\n            }\n            \n            if (end == null) {\n                throw new MissingParameterException(\"end\",\n                                                    ourRequiredParameters);\n            }\n            \n            // XXX could use some error checking\n            startLong = WebSecurityUtils.safeParseLong(start);\n            endLong = WebSecurityUtils.safeParseLong(end);\n        } else if (startMonth != null || startDate != null \n                   || startYear != null || startHour != null\n                   || endMonth != null || endDate != null || endYear != null\n                   || endHour != null) {\n            \n            String[] ourRequiredParameters = new String[] {\n                    \"startMonth\",\n                    \"startDate\",\n                    \"startYear\",\n                    \"startHour\",\n                    \"endMonth\",\n                    \"endDate\",\n                    \"endYear\",\n                    \"endHour\"\n            };\n            \n            for (String requiredParameter : ourRequiredParameters) {\n                if (request.getParameter(requiredParameter) == null) {\n                    throw new MissingParameterException(requiredParameter,\n                                                        ourRequiredParameters);\n                }\n            }\n\n            Calendar startCal = Calendar.getInstance();\n            startCal.set(Calendar.MONTH, WebSecurityUtils.safeParseInt(startMonth));\n            startCal.set(Calendar.DATE, WebSecurityUtils.safeParseInt(startDate));\n            startCal.set(Calendar.YEAR, WebSecurityUtils.safeParseInt(startYear));\n            startCal.set(Calendar.HOUR_OF_DAY, WebSecurityUtils.safeParseInt(startHour));\n            startCal.set(Calendar.MINUTE, 0);\n            startCal.set(Calendar.SECOND, 0);\n            startCal.set(Calendar.MILLISECOND, 0);\n\n            Calendar endCal = Calendar.getInstance();\n            endCal.set(Calendar.MONTH, WebSecurityUtils.safeParseInt(endMonth));\n            endCal.set(Calendar.DATE, WebSecurityUtils.safeParseInt(endDate));\n            endCal.set(Calendar.YEAR, WebSecurityUtils.safeParseInt(endYear));\n            endCal.set(Calendar.HOUR_OF_DAY, WebSecurityUtils.safeParseInt(endHour));\n            endCal.set(Calendar.MINUTE, 0);\n            endCal.set(Calendar.SECOND, 0);\n            endCal.set(Calendar.MILLISECOND, 0);\n\n            startLong = startCal.getTime().getTime();\n            endLong = endCal.getTime().getTime();\n        } else {\n            if (relativeTime == null) {\n                relativeTime = s_periods[0].getId();\n            }\n\n            RelativeTimePeriod period = RelativeTimePeriod.getPeriodByIdOrDefault(\n                                                                                  s_periods,\n                                                                                  relativeTime,\n                                                                                  s_periods[0]);\n\n            long[] times = period.getStartAndEndTimes();\n            startLong = times[0];\n            endLong = times[1];\n        }\n        \n        GraphResults model =\n            m_graphResultsService.findResults(resourceIds,\n                                              reports, startLong,\n                                              endLong, relativeTime);\n\n        return new ModelAndView(\"/graph/results\", \"results\", model);\n    }","id":55699,"modified_method":"@Override\n    protected ModelAndView handleRequestInternal(HttpServletRequest request, HttpServletResponse response) throws Exception {\n        String[] requiredParameters = new String[] {\n                \"resourceId\",\n                \"reports\"\n        };\n        \n        for (String requiredParameter : requiredParameters) {\n            if (request.getParameter(requiredParameter) == null) {\n                throw new MissingParameterException(requiredParameter,\n                                                    requiredParameters);\n            }\n        }\n\n        String[] resourceIds = WebSecurityUtils.sanitizeString(request.getParameterValues(\"resourceId\"));\n        String[] reports = WebSecurityUtils.sanitizeString(request.getParameterValues(\"reports\"));\n        \n        // see if the start and end time were explicitly set as params\n        String start = WebSecurityUtils.sanitizeString(request.getParameter(\"start\"));\n        String end = WebSecurityUtils.sanitizeString(request.getParameter(\"end\"));\n\n        String relativeTime = WebSecurityUtils.sanitizeString(request.getParameter(\"relativetime\"));\n        \n        String startMonth = WebSecurityUtils.sanitizeString(request.getParameter(\"startMonth\"));\n        String startDate = WebSecurityUtils.sanitizeString(request.getParameter(\"startDate\"));\n        String startYear = WebSecurityUtils.sanitizeString(request.getParameter(\"startYear\"));\n        String startHour = WebSecurityUtils.sanitizeString(request.getParameter(\"startHour\"));\n\n        String endMonth = WebSecurityUtils.sanitizeString(request.getParameter(\"endMonth\"));\n        String endDate = WebSecurityUtils.sanitizeString(request.getParameter(\"endDate\"));\n        String endYear = WebSecurityUtils.sanitizeString(request.getParameter(\"endYear\"));\n        String endHour = WebSecurityUtils.sanitizeString(request.getParameter(\"endHour\"));\n        \n        long startLong;\n        long endLong;\n\n        if (start != null || end != null) {\n            String[] ourRequiredParameters = new String[] {\n                    \"start\",\n                    \"end\"\n            };\n        \n            if (start == null) {\n                throw new MissingParameterException(\"start\",\n                                                    ourRequiredParameters);\n            }\n            \n            if (end == null) {\n                throw new MissingParameterException(\"end\",\n                                                    ourRequiredParameters);\n            }\n            \n            // XXX could use some error checking\n            startLong = WebSecurityUtils.safeParseLong(start);\n            endLong = WebSecurityUtils.safeParseLong(end);\n        } else if (startMonth != null || startDate != null \n                   || startYear != null || startHour != null\n                   || endMonth != null || endDate != null || endYear != null\n                   || endHour != null) {\n            \n            String[] ourRequiredParameters = new String[] {\n                    \"startMonth\",\n                    \"startDate\",\n                    \"startYear\",\n                    \"startHour\",\n                    \"endMonth\",\n                    \"endDate\",\n                    \"endYear\",\n                    \"endHour\"\n            };\n            \n            for (String requiredParameter : ourRequiredParameters) {\n                if (request.getParameter(requiredParameter) == null) {\n                    throw new MissingParameterException(requiredParameter,\n                                                        ourRequiredParameters);\n                }\n            }\n\n            Calendar startCal = Calendar.getInstance();\n            startCal.set(Calendar.MONTH, WebSecurityUtils.safeParseInt(startMonth));\n            startCal.set(Calendar.DATE, WebSecurityUtils.safeParseInt(startDate));\n            startCal.set(Calendar.YEAR, WebSecurityUtils.safeParseInt(startYear));\n            startCal.set(Calendar.HOUR_OF_DAY, WebSecurityUtils.safeParseInt(startHour));\n            startCal.set(Calendar.MINUTE, 0);\n            startCal.set(Calendar.SECOND, 0);\n            startCal.set(Calendar.MILLISECOND, 0);\n\n            Calendar endCal = Calendar.getInstance();\n            endCal.set(Calendar.MONTH, WebSecurityUtils.safeParseInt(endMonth));\n            endCal.set(Calendar.DATE, WebSecurityUtils.safeParseInt(endDate));\n            endCal.set(Calendar.YEAR, WebSecurityUtils.safeParseInt(endYear));\n            endCal.set(Calendar.HOUR_OF_DAY, WebSecurityUtils.safeParseInt(endHour));\n            endCal.set(Calendar.MINUTE, 0);\n            endCal.set(Calendar.SECOND, 0);\n            endCal.set(Calendar.MILLISECOND, 0);\n\n            startLong = startCal.getTime().getTime();\n            endLong = endCal.getTime().getTime();\n        } else {\n            if (relativeTime == null) {\n                relativeTime = s_periods[0].getId();\n            }\n\n            RelativeTimePeriod period = RelativeTimePeriod.getPeriodByIdOrDefault(\n                                                                                  s_periods,\n                                                                                  relativeTime,\n                                                                                  s_periods[0]);\n\n            long[] times = period.getStartAndEndTimes();\n            startLong = times[0];\n            endLong = times[1];\n        }\n        \n        GraphResults model =\n            m_graphResultsService.findResults(resourceIds,\n                                              reports, startLong,\n                                              endLong, relativeTime);\n\n        ModelAndView modelAndView = new ModelAndView(\"/graph/results\", \"results\", model);\n\n        modelAndView.addObject(\"loggedIn\", request.getRemoteUser() != null);\n        \n        return modelAndView;\n    }","commit_id":"aef41ee9c346d2dfb23749590f68b14bfe052079","url":"https://github.com/OpenNMS/opennms"},{"original_method":"@Override\n    protected ModelAndView handleRequestInternal(HttpServletRequest request, HttpServletResponse response) throws Exception {\n        ModelAndView modelAndView = new ModelAndView(\"KSC/index\");\n\n        modelAndView.addObject(\"showReportList\", !request.isUserInRole(Authentication.READONLY_ROLE));\n        modelAndView.addObject(\"reports\", getKscReportService().getReportList());\n        modelAndView.addObject(\"nodeResources\", getResourceService().findNodeResources());\n        modelAndView.addObject(\"domainResources\", getResourceService().findDomainResources());\n        \n        return modelAndView;\n    }","id":55700,"modified_method":"@Override\n    protected ModelAndView handleRequestInternal(HttpServletRequest request, HttpServletResponse response) throws Exception {\n        ModelAndView modelAndView = new ModelAndView(\"KSC/index\");\n\n        modelAndView.addObject(\"kscReadOnly\", (request.isUserInRole(Authentication.READONLY_ROLE)) || (request.getRemoteUser() == null));\n        modelAndView.addObject(\"reports\", getKscReportService().getReportList());\n        modelAndView.addObject(\"nodeResources\", getResourceService().findNodeResources());\n        modelAndView.addObject(\"domainResources\", getResourceService().findDomainResources());\n        \n        return modelAndView;\n    }","commit_id":"aef41ee9c346d2dfb23749590f68b14bfe052079","url":"https://github.com/OpenNMS/opennms"},{"original_method":"@Override\n    protected ModelAndView handleRequestInternal(HttpServletRequest request, HttpServletResponse response) throws Exception {\n        String[] requiredParameters = new String[] { \"report or domain\", \"type\" };\n      \n        // Get Form Variable\n        String report_type = WebSecurityUtils.sanitizeString(request.getParameter(\"type\"));\n        if (report_type == null) {\n            throw new MissingParameterException(\"type\", requiredParameters);\n        }\n      \n        String r_index = WebSecurityUtils.sanitizeString(request.getParameter(\"report\"));\n        String domain = WebSecurityUtils.sanitizeString(request.getParameter(\"domain\"));\n        int report_index = 0;\n        if (r_index != null) {\n            report_index = WebSecurityUtils.safeParseInt(r_index);\n        } else if (domain == null) {\n            throw new MissingParameterException(\"report or domain\", requiredParameters);\n        }\n      \n        String override_timespan = WebSecurityUtils.sanitizeString(request.getParameter(\"timespan\"));\n        String override_graphtype = WebSecurityUtils.sanitizeString(request.getParameter(\"graphtype\"));\n        if ((override_timespan == null) || (override_timespan.equals(\"null\"))) {\n            override_timespan = \"none\";\n        }\n        if ((override_graphtype == null) || (override_graphtype.equals(\"null\"))) {\n            override_graphtype = \"none\";\n        }\n      \n        // Load report to view \n        Report report = null;\n        if (\"node\".equals(report_type)) {\n            report = getKscReportService().buildNodeReport(report_index);\n        } else if (\"domain\".equals(report_type)) {\n            report = getKscReportService().buildDomainReport(domain);\n        } else if (\"custom\".equals(report_type)) {\n            report = m_kscReportFactory.getReportByIndex(report_index);\n        } else {\n            throw new IllegalArgumentException(\"value to 'type' parameter of '\" + report_type + \"' is not supported.  Must be one of: node, domain, or custom\");\n        }\n      \n        if (report == null) {\n            throw new ServletException(\"Report does not exist\");\n        }\n      \n        // Define the possible graph options \n        PrefabGraph[] graph_options = new PrefabGraph[0];\n      \n        if (report.getGraphCount() > 0) {\n            Set<PrefabGraph> prefabGraphs = new HashSet<PrefabGraph>();\n            \n            for (int i = 0; i < report.getGraphCount(); i++) {\n                Graph graph = report.getGraph(i);\n                OnmsResource resource = getKscReportService().getResourceFromGraph(graph);\n                prefabGraphs.addAll(Arrays.asList(getResourceService().findPrefabGraphsForResource(resource)));\n            }\n            \n            graph_options = prefabGraphs.toArray(new PrefabGraph[prefabGraphs.size()]);\n\n            if (graph_options.length > 1) {\n                Arrays.sort(graph_options);\n            }\n\n            /*\n            if (\"custom\".equals(report_type) && \"node\".equals(resource.getResourceType().getName())) {\n                graph_options = getResourceService().findPrefabGraphsForChildResources(resource.getParent(), \"nodeSnmp\", \"interfaceSnmp\");\n            } else {\n                graph_options = getResourceService().findPrefabGraphsForChildResources(resource.getParent(), \"interfaceSnmp\");\n            }\n            */\n      \n            // Get default graph type from first element of graph_options\n            if ((\"node\".equals(report_type) || \"domain\".equals(report_type))\n                    && \"none\".equals(override_graphtype)\n                    && graph_options.length > 0) {\n                override_graphtype = graph_options[0].getName();\n                if (log().isDebugEnabled()) {\n                    log().debug(\"custom_view: setting default graph type to \"\n                                + override_graphtype);\n                }\n            }\n\n            /*\n            if (graph_options.length > 1) {\n                Arrays.sort(graph_options);\n            }\n            */\n        }\n        \n        \n        ArrayList<KscResultSet> resultSets = new ArrayList<KscResultSet>(report.getGraphCount());\n        for (int i = 0; i < report.getGraphCount(); i++) {\n            Graph current_graph = report.getGraph(i);\n            \n            OnmsResource resource = getKscReportService().getResourceFromGraph(current_graph);\n            promoteResourceAttributesIfNecessary(resource);\n\n            String display_graphtype = null;\n            if (\"none\".equals(override_graphtype)) {\n                display_graphtype = current_graph.getGraphtype();\n            } else {\n                display_graphtype = override_graphtype;\n            }\n            \n            PrefabGraph display_graph = getResourceService().getPrefabGraph(display_graphtype);\n            \n            // gather start/stop time information\n            String display_timespan = null;\n            if (\"none\".equals(override_timespan)) {\n                display_timespan = current_graph.getTimespan();\n            } else {\n                display_timespan = override_timespan;\n            }\n            Calendar begin_time = Calendar.getInstance();\n            Calendar end_time = Calendar.getInstance();\n            KSC_PerformanceReportFactory.getBeginEndTime(display_timespan, begin_time, end_time);\n            \n            KscResultSet resultSet = new KscResultSet(current_graph.getTitle(), begin_time.getTime(), end_time.getTime(), resource, display_graph);\n            resultSets.add(resultSet);\n        }\n        \n        ModelAndView modelAndView = new ModelAndView(\"KSC/customView\");\n\n        modelAndView.addObject(\"reportType\", report_type);\n        if (report != null) {\n            modelAndView.addObject(\"report\", r_index);\n        }\n        if (domain != null) {\n            modelAndView.addObject(\"domain\", domain);\n        }\n        \n        modelAndView.addObject(\"title\", report.getTitle());\n        modelAndView.addObject(\"resultSets\", resultSets);\n        \n        if (report.getShow_timespan_button()) {\n            if (\"none\".equals(override_timespan) || !getKscReportService().getTimeSpans(true).containsKey(override_timespan)) {\n                modelAndView.addObject(\"timeSpan\", \"none\");\n            } else {\n                modelAndView.addObject(\"timeSpan\", override_timespan);\n            }\n            modelAndView.addObject(\"timeSpans\", getKscReportService().getTimeSpans(true));\n        } else {\n            // Make sure it's null so the pulldown list isn't shown\n            modelAndView.addObject(\"timeSpan\", null);\n        }\n\n        if (report.getShow_graphtype_button()) {\n            LinkedHashMap<String, String> graphTypes = new LinkedHashMap<String, String>();\n            graphTypes.put(\"none\", \"none\");\n            for (PrefabGraph graph_option : graph_options) {\n                graphTypes.put(graph_option.getName(), graph_option.getName());\n            }\n            \n            if (\"none\".equals(override_graphtype) || !graphTypes.containsKey(override_graphtype)) {\n                modelAndView.addObject(\"graphType\", \"none\");\n            } else {\n                modelAndView.addObject(\"graphType\", override_graphtype);\n            }\n            modelAndView.addObject(\"graphTypes\", graphTypes);\n        } else {\n            // Make sure it's null so the pulldown list isn't shown\n            modelAndView.addObject(\"graphType\", null);\n        }\n        \n        modelAndView.addObject(\"showCustomizeButton\", !request.isUserInRole(Authentication.READONLY_ROLE));\n\n        if (report.getGraphs_per_line() > 0) {\n            modelAndView.addObject(\"graphsPerLine\", report.getGraphs_per_line());\n        } else {\n            modelAndView.addObject(\"graphsPerLine\", getDefaultGraphsPerLine());\n        }\n        \n        return modelAndView;\n    }","id":55701,"modified_method":"@Override\n    protected ModelAndView handleRequestInternal(HttpServletRequest request, HttpServletResponse response) throws Exception {\n        String[] requiredParameters = new String[] { \"report or domain\", \"type\" };\n      \n        // Get Form Variable\n        String report_type = WebSecurityUtils.sanitizeString(request.getParameter(\"type\"));\n        if (report_type == null) {\n            throw new MissingParameterException(\"type\", requiredParameters);\n        }\n      \n        String r_index = WebSecurityUtils.sanitizeString(request.getParameter(\"report\"));\n        String domain = WebSecurityUtils.sanitizeString(request.getParameter(\"domain\"));\n        int report_index = 0;\n        if (r_index != null) {\n            report_index = WebSecurityUtils.safeParseInt(r_index);\n        } else if (domain == null) {\n            throw new MissingParameterException(\"report or domain\", requiredParameters);\n        }\n      \n        String override_timespan = WebSecurityUtils.sanitizeString(request.getParameter(\"timespan\"));\n        String override_graphtype = WebSecurityUtils.sanitizeString(request.getParameter(\"graphtype\"));\n        if ((override_timespan == null) || (override_timespan.equals(\"null\"))) {\n            override_timespan = \"none\";\n        }\n        if ((override_graphtype == null) || (override_graphtype.equals(\"null\"))) {\n            override_graphtype = \"none\";\n        }\n      \n        // Load report to view \n        Report report = null;\n        if (\"node\".equals(report_type)) {\n            report = getKscReportService().buildNodeReport(report_index);\n        } else if (\"domain\".equals(report_type)) {\n            report = getKscReportService().buildDomainReport(domain);\n        } else if (\"custom\".equals(report_type)) {\n            report = m_kscReportFactory.getReportByIndex(report_index);\n        } else {\n            throw new IllegalArgumentException(\"value to 'type' parameter of '\" + report_type + \"' is not supported.  Must be one of: node, domain, or custom\");\n        }\n      \n        if (report == null) {\n            throw new ServletException(\"Report does not exist\");\n        }\n      \n        // Define the possible graph options \n        PrefabGraph[] graph_options = new PrefabGraph[0];\n      \n        if (report.getGraphCount() > 0) {\n            Set<PrefabGraph> prefabGraphs = new HashSet<PrefabGraph>();\n            \n            for (int i = 0; i < report.getGraphCount(); i++) {\n                Graph graph = report.getGraph(i);\n                OnmsResource resource = getKscReportService().getResourceFromGraph(graph);\n                prefabGraphs.addAll(Arrays.asList(getResourceService().findPrefabGraphsForResource(resource)));\n            }\n            \n            graph_options = prefabGraphs.toArray(new PrefabGraph[prefabGraphs.size()]);\n\n            if (graph_options.length > 1) {\n                Arrays.sort(graph_options);\n            }\n\n            /*\n            if (\"custom\".equals(report_type) && \"node\".equals(resource.getResourceType().getName())) {\n                graph_options = getResourceService().findPrefabGraphsForChildResources(resource.getParent(), \"nodeSnmp\", \"interfaceSnmp\");\n            } else {\n                graph_options = getResourceService().findPrefabGraphsForChildResources(resource.getParent(), \"interfaceSnmp\");\n            }\n            */\n      \n            // Get default graph type from first element of graph_options\n            if ((\"node\".equals(report_type) || \"domain\".equals(report_type))\n                    && \"none\".equals(override_graphtype)\n                    && graph_options.length > 0) {\n                override_graphtype = graph_options[0].getName();\n                if (log().isDebugEnabled()) {\n                    log().debug(\"custom_view: setting default graph type to \"\n                                + override_graphtype);\n                }\n            }\n\n            /*\n            if (graph_options.length > 1) {\n                Arrays.sort(graph_options);\n            }\n            */\n        }\n        \n        \n        ArrayList<KscResultSet> resultSets = new ArrayList<KscResultSet>(report.getGraphCount());\n        for (int i = 0; i < report.getGraphCount(); i++) {\n            Graph current_graph = report.getGraph(i);\n            \n            OnmsResource resource = getKscReportService().getResourceFromGraph(current_graph);\n            promoteResourceAttributesIfNecessary(resource);\n\n            String display_graphtype = null;\n            if (\"none\".equals(override_graphtype)) {\n                display_graphtype = current_graph.getGraphtype();\n            } else {\n                display_graphtype = override_graphtype;\n            }\n            \n            PrefabGraph display_graph = getResourceService().getPrefabGraph(display_graphtype);\n            \n            // gather start/stop time information\n            String display_timespan = null;\n            if (\"none\".equals(override_timespan)) {\n                display_timespan = current_graph.getTimespan();\n            } else {\n                display_timespan = override_timespan;\n            }\n            Calendar begin_time = Calendar.getInstance();\n            Calendar end_time = Calendar.getInstance();\n            KSC_PerformanceReportFactory.getBeginEndTime(display_timespan, begin_time, end_time);\n            \n            KscResultSet resultSet = new KscResultSet(current_graph.getTitle(), begin_time.getTime(), end_time.getTime(), resource, display_graph);\n            resultSets.add(resultSet);\n        }\n        \n        ModelAndView modelAndView = new ModelAndView(\"KSC/customView\");\n\n        modelAndView.addObject(\"loggedIn\", request.getRemoteUser() != null);\n        modelAndView.addObject(\"reportType\", report_type);\n        if (report != null) {\n            modelAndView.addObject(\"report\", r_index);\n        }\n        if (domain != null) {\n            modelAndView.addObject(\"domain\", domain);\n        }\n        \n        modelAndView.addObject(\"title\", report.getTitle());\n        modelAndView.addObject(\"resultSets\", resultSets);\n        \n        if (report.getShow_timespan_button()) {\n            if (\"none\".equals(override_timespan) || !getKscReportService().getTimeSpans(true).containsKey(override_timespan)) {\n                modelAndView.addObject(\"timeSpan\", \"none\");\n            } else {\n                modelAndView.addObject(\"timeSpan\", override_timespan);\n            }\n            modelAndView.addObject(\"timeSpans\", getKscReportService().getTimeSpans(true));\n        } else {\n            // Make sure it's null so the pulldown list isn't shown\n            modelAndView.addObject(\"timeSpan\", null);\n        }\n\n        if (report.getShow_graphtype_button()) {\n            LinkedHashMap<String, String> graphTypes = new LinkedHashMap<String, String>();\n            graphTypes.put(\"none\", \"none\");\n            for (PrefabGraph graph_option : graph_options) {\n                graphTypes.put(graph_option.getName(), graph_option.getName());\n            }\n            \n            if (\"none\".equals(override_graphtype) || !graphTypes.containsKey(override_graphtype)) {\n                modelAndView.addObject(\"graphType\", \"none\");\n            } else {\n                modelAndView.addObject(\"graphType\", override_graphtype);\n            }\n            modelAndView.addObject(\"graphTypes\", graphTypes);\n        } else {\n            // Make sure it's null so the pulldown list isn't shown\n            modelAndView.addObject(\"graphType\", null);\n        }\n        \n        modelAndView.addObject(\"showCustomizeButton\", !request.isUserInRole(Authentication.READONLY_ROLE) && (request.getRemoteUser() != null));\n\n        if (report.getGraphs_per_line() > 0) {\n            modelAndView.addObject(\"graphsPerLine\", report.getGraphs_per_line());\n        } else {\n            modelAndView.addObject(\"graphsPerLine\", getDefaultGraphsPerLine());\n        }\n        \n        return modelAndView;\n    }","commit_id":"a18299a83778ee407f0b22d2564c71aa8cfebf75","url":"https://github.com/OpenNMS/opennms"},{"original_method":"@Override\n    protected ModelAndView handleRequestInternal(HttpServletRequest request, HttpServletResponse response) throws Exception {\n        String action = WebSecurityUtils.sanitizeString(request.getParameter(\"report_action\"));\n\n        if (action == null) {\n            throw new MissingParameterException(\"report_action\");\n        }\n\n        KscReportEditor editor = KscReportEditor.getFromSession(request.getSession(), false);\n        \n        if (action.equals(\"Customize\")) {\n            editor.loadWorkingReport(getKscReportFactory(), getReportIndex(request));\n            return new ModelAndView(\"redirect:/KSC/customReport.htm\");\n        } else if (action.equals(\"CreateFrom\")) {\n            editor.loadWorkingReportDuplicate(getKscReportFactory(), getReportIndex(request));\n            return new ModelAndView(\"redirect:/KSC/customReport.htm\");\n        } else if (action.equals(\"Delete\")) {\n            getKscReportFactory().deleteReportAndSave(getReportIndex(request)); \n            return new ModelAndView(\"redirect:/KSC/index.htm\");\n        } else if (action.equals(\"Create\")) {\n            editor.loadNewWorkingReport();\n            return new ModelAndView(\"redirect:/KSC/customReport.htm\");\n        } else if (action.equals(\"View\")) {\n            ModelAndView modelAndView = new ModelAndView(\"redirect:/KSC/customView.htm\");\n            modelAndView.addObject(\"report\", getReportIndex(request));\n            modelAndView.addObject(\"type\", \"custom\");\n            return modelAndView;\n        } else {\n            throw new ServletException (\"Invalid Parameter contents for report_action: \" + action);\n        }\n    }","id":55702,"modified_method":"@Override\n    protected ModelAndView handleRequestInternal(HttpServletRequest request, HttpServletResponse response) throws Exception {\n        String action = WebSecurityUtils.sanitizeString(request.getParameter(\"report_action\"));\n\n        if (action == null) {\n            throw new MissingParameterException(\"report_action\");\n        }\n\n        KscReportEditor editor = KscReportEditor.getFromSession(request.getSession(), false);\n\n        if (action.equals(\"View\")) {\n            ModelAndView modelAndView = new ModelAndView(\"redirect:/KSC/customView.htm\");\n            modelAndView.addObject(\"report\", getReportIndex(request));\n            modelAndView.addObject(\"type\", \"custom\");\n            return modelAndView;\n          \n        } else if (!request.isUserInRole(Authentication.READONLY_ROLE) && (request.getRemoteUser() != null)) {\n            if (action.equals(\"Customize\")) {\n                editor.loadWorkingReport(getKscReportFactory(), getReportIndex(request));\n                return new ModelAndView(\"redirect:/KSC/customReport.htm\");\n            } else if (action.equals(\"CreateFrom\")) {\n                editor.loadWorkingReportDuplicate(getKscReportFactory(), getReportIndex(request));\n                return new ModelAndView(\"redirect:/KSC/customReport.htm\");\n            } else if (action.equals(\"Delete\")) {\n                getKscReportFactory().deleteReportAndSave(getReportIndex(request)); \n                return new ModelAndView(\"redirect:/KSC/index.htm\");\n            } else if (action.equals(\"Create\")) {\n                editor.loadNewWorkingReport();\n               return new ModelAndView(\"redirect:/KSC/customReport.htm\");\n            }\n        }\n        throw new ServletException (\"Invalid Parameter contents for report_action: \" + action);\n    }","commit_id":"a18299a83778ee407f0b22d2564c71aa8cfebf75","url":"https://github.com/OpenNMS/opennms"},{"original_method":"@Override\n    protected ModelAndView handleRequestInternal(HttpServletRequest request, HttpServletResponse response) throws Exception {\n        String[] requiredParameters = new String[] {\n                \"resourceId\",\n                \"reports\"\n        };\n        \n        for (String requiredParameter : requiredParameters) {\n            if (request.getParameter(requiredParameter) == null) {\n                throw new MissingParameterException(requiredParameter,\n                                                    requiredParameters);\n            }\n        }\n\n        String[] resourceIds = WebSecurityUtils.sanitizeString(request.getParameterValues(\"resourceId\"));\n        String[] reports = WebSecurityUtils.sanitizeString(request.getParameterValues(\"reports\"));\n        \n        // see if the start and end time were explicitly set as params\n        String start = WebSecurityUtils.sanitizeString(request.getParameter(\"start\"));\n        String end = WebSecurityUtils.sanitizeString(request.getParameter(\"end\"));\n\n        String relativeTime = WebSecurityUtils.sanitizeString(request.getParameter(\"relativetime\"));\n        \n        String startMonth = WebSecurityUtils.sanitizeString(request.getParameter(\"startMonth\"));\n        String startDate = WebSecurityUtils.sanitizeString(request.getParameter(\"startDate\"));\n        String startYear = WebSecurityUtils.sanitizeString(request.getParameter(\"startYear\"));\n        String startHour = WebSecurityUtils.sanitizeString(request.getParameter(\"startHour\"));\n\n        String endMonth = WebSecurityUtils.sanitizeString(request.getParameter(\"endMonth\"));\n        String endDate = WebSecurityUtils.sanitizeString(request.getParameter(\"endDate\"));\n        String endYear = WebSecurityUtils.sanitizeString(request.getParameter(\"endYear\"));\n        String endHour = WebSecurityUtils.sanitizeString(request.getParameter(\"endHour\"));\n        \n        long startLong;\n        long endLong;\n\n        if (start != null || end != null) {\n            String[] ourRequiredParameters = new String[] {\n                    \"start\",\n                    \"end\"\n            };\n        \n            if (start == null) {\n                throw new MissingParameterException(\"start\",\n                                                    ourRequiredParameters);\n            }\n            \n            if (end == null) {\n                throw new MissingParameterException(\"end\",\n                                                    ourRequiredParameters);\n            }\n            \n            // XXX could use some error checking\n            startLong = WebSecurityUtils.safeParseLong(start);\n            endLong = WebSecurityUtils.safeParseLong(end);\n        } else if (startMonth != null || startDate != null \n                   || startYear != null || startHour != null\n                   || endMonth != null || endDate != null || endYear != null\n                   || endHour != null) {\n            \n            String[] ourRequiredParameters = new String[] {\n                    \"startMonth\",\n                    \"startDate\",\n                    \"startYear\",\n                    \"startHour\",\n                    \"endMonth\",\n                    \"endDate\",\n                    \"endYear\",\n                    \"endHour\"\n            };\n            \n            for (String requiredParameter : ourRequiredParameters) {\n                if (request.getParameter(requiredParameter) == null) {\n                    throw new MissingParameterException(requiredParameter,\n                                                        ourRequiredParameters);\n                }\n            }\n\n            Calendar startCal = Calendar.getInstance();\n            startCal.set(Calendar.MONTH, WebSecurityUtils.safeParseInt(startMonth));\n            startCal.set(Calendar.DATE, WebSecurityUtils.safeParseInt(startDate));\n            startCal.set(Calendar.YEAR, WebSecurityUtils.safeParseInt(startYear));\n            startCal.set(Calendar.HOUR_OF_DAY, WebSecurityUtils.safeParseInt(startHour));\n            startCal.set(Calendar.MINUTE, 0);\n            startCal.set(Calendar.SECOND, 0);\n            startCal.set(Calendar.MILLISECOND, 0);\n\n            Calendar endCal = Calendar.getInstance();\n            endCal.set(Calendar.MONTH, WebSecurityUtils.safeParseInt(endMonth));\n            endCal.set(Calendar.DATE, WebSecurityUtils.safeParseInt(endDate));\n            endCal.set(Calendar.YEAR, WebSecurityUtils.safeParseInt(endYear));\n            endCal.set(Calendar.HOUR_OF_DAY, WebSecurityUtils.safeParseInt(endHour));\n            endCal.set(Calendar.MINUTE, 0);\n            endCal.set(Calendar.SECOND, 0);\n            endCal.set(Calendar.MILLISECOND, 0);\n\n            startLong = startCal.getTime().getTime();\n            endLong = endCal.getTime().getTime();\n        } else {\n            if (relativeTime == null) {\n                relativeTime = s_periods[0].getId();\n            }\n\n            RelativeTimePeriod period = RelativeTimePeriod.getPeriodByIdOrDefault(\n                                                                                  s_periods,\n                                                                                  relativeTime,\n                                                                                  s_periods[0]);\n\n            long[] times = period.getStartAndEndTimes();\n            startLong = times[0];\n            endLong = times[1];\n        }\n        \n        GraphResults model =\n            m_graphResultsService.findResults(resourceIds,\n                                              reports, startLong,\n                                              endLong, relativeTime);\n\n        return new ModelAndView(\"/graph/results\", \"results\", model);\n    }","id":55703,"modified_method":"@Override\n    protected ModelAndView handleRequestInternal(HttpServletRequest request, HttpServletResponse response) throws Exception {\n        String[] requiredParameters = new String[] {\n                \"resourceId\",\n                \"reports\"\n        };\n        \n        for (String requiredParameter : requiredParameters) {\n            if (request.getParameter(requiredParameter) == null) {\n                throw new MissingParameterException(requiredParameter,\n                                                    requiredParameters);\n            }\n        }\n\n        String[] resourceIds = WebSecurityUtils.sanitizeString(request.getParameterValues(\"resourceId\"));\n        String[] reports = WebSecurityUtils.sanitizeString(request.getParameterValues(\"reports\"));\n        \n        // see if the start and end time were explicitly set as params\n        String start = WebSecurityUtils.sanitizeString(request.getParameter(\"start\"));\n        String end = WebSecurityUtils.sanitizeString(request.getParameter(\"end\"));\n\n        String relativeTime = WebSecurityUtils.sanitizeString(request.getParameter(\"relativetime\"));\n        \n        String startMonth = WebSecurityUtils.sanitizeString(request.getParameter(\"startMonth\"));\n        String startDate = WebSecurityUtils.sanitizeString(request.getParameter(\"startDate\"));\n        String startYear = WebSecurityUtils.sanitizeString(request.getParameter(\"startYear\"));\n        String startHour = WebSecurityUtils.sanitizeString(request.getParameter(\"startHour\"));\n\n        String endMonth = WebSecurityUtils.sanitizeString(request.getParameter(\"endMonth\"));\n        String endDate = WebSecurityUtils.sanitizeString(request.getParameter(\"endDate\"));\n        String endYear = WebSecurityUtils.sanitizeString(request.getParameter(\"endYear\"));\n        String endHour = WebSecurityUtils.sanitizeString(request.getParameter(\"endHour\"));\n        \n        long startLong;\n        long endLong;\n\n        if (start != null || end != null) {\n            String[] ourRequiredParameters = new String[] {\n                    \"start\",\n                    \"end\"\n            };\n        \n            if (start == null) {\n                throw new MissingParameterException(\"start\",\n                                                    ourRequiredParameters);\n            }\n            \n            if (end == null) {\n                throw new MissingParameterException(\"end\",\n                                                    ourRequiredParameters);\n            }\n            \n            // XXX could use some error checking\n            startLong = WebSecurityUtils.safeParseLong(start);\n            endLong = WebSecurityUtils.safeParseLong(end);\n        } else if (startMonth != null || startDate != null \n                   || startYear != null || startHour != null\n                   || endMonth != null || endDate != null || endYear != null\n                   || endHour != null) {\n            \n            String[] ourRequiredParameters = new String[] {\n                    \"startMonth\",\n                    \"startDate\",\n                    \"startYear\",\n                    \"startHour\",\n                    \"endMonth\",\n                    \"endDate\",\n                    \"endYear\",\n                    \"endHour\"\n            };\n            \n            for (String requiredParameter : ourRequiredParameters) {\n                if (request.getParameter(requiredParameter) == null) {\n                    throw new MissingParameterException(requiredParameter,\n                                                        ourRequiredParameters);\n                }\n            }\n\n            Calendar startCal = Calendar.getInstance();\n            startCal.set(Calendar.MONTH, WebSecurityUtils.safeParseInt(startMonth));\n            startCal.set(Calendar.DATE, WebSecurityUtils.safeParseInt(startDate));\n            startCal.set(Calendar.YEAR, WebSecurityUtils.safeParseInt(startYear));\n            startCal.set(Calendar.HOUR_OF_DAY, WebSecurityUtils.safeParseInt(startHour));\n            startCal.set(Calendar.MINUTE, 0);\n            startCal.set(Calendar.SECOND, 0);\n            startCal.set(Calendar.MILLISECOND, 0);\n\n            Calendar endCal = Calendar.getInstance();\n            endCal.set(Calendar.MONTH, WebSecurityUtils.safeParseInt(endMonth));\n            endCal.set(Calendar.DATE, WebSecurityUtils.safeParseInt(endDate));\n            endCal.set(Calendar.YEAR, WebSecurityUtils.safeParseInt(endYear));\n            endCal.set(Calendar.HOUR_OF_DAY, WebSecurityUtils.safeParseInt(endHour));\n            endCal.set(Calendar.MINUTE, 0);\n            endCal.set(Calendar.SECOND, 0);\n            endCal.set(Calendar.MILLISECOND, 0);\n\n            startLong = startCal.getTime().getTime();\n            endLong = endCal.getTime().getTime();\n        } else {\n            if (relativeTime == null) {\n                relativeTime = s_periods[0].getId();\n            }\n\n            RelativeTimePeriod period = RelativeTimePeriod.getPeriodByIdOrDefault(\n                                                                                  s_periods,\n                                                                                  relativeTime,\n                                                                                  s_periods[0]);\n\n            long[] times = period.getStartAndEndTimes();\n            startLong = times[0];\n            endLong = times[1];\n        }\n        \n        GraphResults model =\n            m_graphResultsService.findResults(resourceIds,\n                                              reports, startLong,\n                                              endLong, relativeTime);\n\n        ModelAndView modelAndView = new ModelAndView(\"/graph/results\", \"results\", model);\n\n        modelAndView.addObject(\"loggedIn\", request.getRemoteUser() != null);\n        \n        return modelAndView;\n    }","commit_id":"a18299a83778ee407f0b22d2564c71aa8cfebf75","url":"https://github.com/OpenNMS/opennms"},{"original_method":"@Override\n    protected ModelAndView handleRequestInternal(HttpServletRequest request, HttpServletResponse response) throws Exception {\n        ModelAndView modelAndView = new ModelAndView(\"KSC/index\");\n\n        modelAndView.addObject(\"showReportList\", !request.isUserInRole(Authentication.READONLY_ROLE));\n        modelAndView.addObject(\"reports\", getKscReportService().getReportList());\n        modelAndView.addObject(\"nodeResources\", getResourceService().findNodeResources());\n        modelAndView.addObject(\"domainResources\", getResourceService().findDomainResources());\n        \n        return modelAndView;\n    }","id":55704,"modified_method":"@Override\n    protected ModelAndView handleRequestInternal(HttpServletRequest request, HttpServletResponse response) throws Exception {\n        ModelAndView modelAndView = new ModelAndView(\"KSC/index\");\n\n        modelAndView.addObject(\"kscReadOnly\", (request.isUserInRole(Authentication.READONLY_ROLE)) || (request.getRemoteUser() == null));\n        modelAndView.addObject(\"reports\", getKscReportService().getReportList());\n        modelAndView.addObject(\"nodeResources\", getResourceService().findNodeResources());\n        modelAndView.addObject(\"domainResources\", getResourceService().findDomainResources());\n        \n        return modelAndView;\n    }","commit_id":"a18299a83778ee407f0b22d2564c71aa8cfebf75","url":"https://github.com/OpenNMS/opennms"},{"original_method":"@Override\n    protected ModelAndView handleRequestInternal(HttpServletRequest request, HttpServletResponse response) throws Exception {\n        String[] requiredParameters = new String[] { \"report or domain\", \"type\" };\n      \n        // Get Form Variable\n        String report_type = WebSecurityUtils.sanitizeString(request.getParameter(\"type\"));\n        if (report_type == null) {\n            throw new MissingParameterException(\"type\", requiredParameters);\n        }\n      \n        String r_index = WebSecurityUtils.sanitizeString(request.getParameter(\"report\"));\n        String domain = WebSecurityUtils.sanitizeString(request.getParameter(\"domain\"));\n        int report_index = 0;\n        if (r_index != null) {\n            report_index = WebSecurityUtils.safeParseInt(r_index);\n        } else if (domain == null) {\n            throw new MissingParameterException(\"report or domain\", requiredParameters);\n        }\n      \n        String override_timespan = WebSecurityUtils.sanitizeString(request.getParameter(\"timespan\"));\n        String override_graphtype = WebSecurityUtils.sanitizeString(request.getParameter(\"graphtype\"));\n        if ((override_timespan == null) || (override_timespan.equals(\"null\"))) {\n            override_timespan = \"none\";\n        }\n        if ((override_graphtype == null) || (override_graphtype.equals(\"null\"))) {\n            override_graphtype = \"none\";\n        }\n      \n        // Load report to view \n        Report report = null;\n        if (\"node\".equals(report_type)) {\n            report = getKscReportService().buildNodeReport(report_index);\n        } else if (\"domain\".equals(report_type)) {\n            report = getKscReportService().buildDomainReport(domain);\n        } else if (\"custom\".equals(report_type)) {\n            report = m_kscReportFactory.getReportByIndex(report_index);\n        } else {\n            throw new IllegalArgumentException(\"value to 'type' parameter of '\" + report_type + \"' is not supported.  Must be one of: node, domain, or custom\");\n        }\n      \n        if (report == null) {\n            throw new ServletException(\"Report does not exist\");\n        }\n      \n        // Define the possible graph options \n        PrefabGraph[] graph_options = new PrefabGraph[0];\n      \n        if (report.getGraphCount() > 0) {\n            Set<PrefabGraph> prefabGraphs = new HashSet<PrefabGraph>();\n            \n            for (int i = 0; i < report.getGraphCount(); i++) {\n                Graph graph = report.getGraph(i);\n                OnmsResource resource = getKscReportService().getResourceFromGraph(graph);\n                prefabGraphs.addAll(Arrays.asList(getResourceService().findPrefabGraphsForResource(resource)));\n            }\n            \n            graph_options = prefabGraphs.toArray(new PrefabGraph[prefabGraphs.size()]);\n\n            if (graph_options.length > 1) {\n                Arrays.sort(graph_options);\n            }\n\n            /*\n            if (\"custom\".equals(report_type) && \"node\".equals(resource.getResourceType().getName())) {\n                graph_options = getResourceService().findPrefabGraphsForChildResources(resource.getParent(), \"nodeSnmp\", \"interfaceSnmp\");\n            } else {\n                graph_options = getResourceService().findPrefabGraphsForChildResources(resource.getParent(), \"interfaceSnmp\");\n            }\n            */\n      \n            // Get default graph type from first element of graph_options\n            if ((\"node\".equals(report_type) || \"domain\".equals(report_type))\n                    && \"none\".equals(override_graphtype)\n                    && graph_options.length > 0) {\n                override_graphtype = graph_options[0].getName();\n                if (log().isDebugEnabled()) {\n                    log().debug(\"custom_view: setting default graph type to \"\n                                + override_graphtype);\n                }\n            }\n\n            /*\n            if (graph_options.length > 1) {\n                Arrays.sort(graph_options);\n            }\n            */\n        }\n        \n        \n        ArrayList<KscResultSet> resultSets = new ArrayList<KscResultSet>(report.getGraphCount());\n        for (int i = 0; i < report.getGraphCount(); i++) {\n            Graph current_graph = report.getGraph(i);\n            \n            OnmsResource resource = getKscReportService().getResourceFromGraph(current_graph);\n            promoteResourceAttributesIfNecessary(resource);\n\n            String display_graphtype = null;\n            if (\"none\".equals(override_graphtype)) {\n                display_graphtype = current_graph.getGraphtype();\n            } else {\n                display_graphtype = override_graphtype;\n            }\n            \n            PrefabGraph display_graph = getResourceService().getPrefabGraph(display_graphtype);\n            \n            // gather start/stop time information\n            String display_timespan = null;\n            if (\"none\".equals(override_timespan)) {\n                display_timespan = current_graph.getTimespan();\n            } else {\n                display_timespan = override_timespan;\n            }\n            Calendar begin_time = Calendar.getInstance();\n            Calendar end_time = Calendar.getInstance();\n            KSC_PerformanceReportFactory.getBeginEndTime(display_timespan, begin_time, end_time);\n            \n            KscResultSet resultSet = new KscResultSet(current_graph.getTitle(), begin_time.getTime(), end_time.getTime(), resource, display_graph);\n            resultSets.add(resultSet);\n        }\n        \n        ModelAndView modelAndView = new ModelAndView(\"KSC/customView\");\n\n        modelAndView.addObject(\"reportType\", report_type);\n        if (report != null) {\n            modelAndView.addObject(\"report\", r_index);\n        }\n        if (domain != null) {\n            modelAndView.addObject(\"domain\", domain);\n        }\n        \n        modelAndView.addObject(\"title\", report.getTitle());\n        modelAndView.addObject(\"resultSets\", resultSets);\n        \n        if (report.getShow_timespan_button()) {\n            if (\"none\".equals(override_timespan) || !getKscReportService().getTimeSpans(true).containsKey(override_timespan)) {\n                modelAndView.addObject(\"timeSpan\", \"none\");\n            } else {\n                modelAndView.addObject(\"timeSpan\", override_timespan);\n            }\n            modelAndView.addObject(\"timeSpans\", getKscReportService().getTimeSpans(true));\n        } else {\n            // Make sure it's null so the pulldown list isn't shown\n            modelAndView.addObject(\"timeSpan\", null);\n        }\n\n        if (report.getShow_graphtype_button()) {\n            LinkedHashMap<String, String> graphTypes = new LinkedHashMap<String, String>();\n            graphTypes.put(\"none\", \"none\");\n            for (PrefabGraph graph_option : graph_options) {\n                graphTypes.put(graph_option.getName(), graph_option.getName());\n            }\n            \n            if (\"none\".equals(override_graphtype) || !graphTypes.containsKey(override_graphtype)) {\n                modelAndView.addObject(\"graphType\", \"none\");\n            } else {\n                modelAndView.addObject(\"graphType\", override_graphtype);\n            }\n            modelAndView.addObject(\"graphTypes\", graphTypes);\n        } else {\n            // Make sure it's null so the pulldown list isn't shown\n            modelAndView.addObject(\"graphType\", null);\n        }\n        \n        modelAndView.addObject(\"showCustomizeButton\", !request.isUserInRole(Authentication.READONLY_ROLE));\n\n        if (report.getGraphs_per_line() > 0) {\n            modelAndView.addObject(\"graphsPerLine\", report.getGraphs_per_line());\n        } else {\n            modelAndView.addObject(\"graphsPerLine\", getDefaultGraphsPerLine());\n        }\n        \n        return modelAndView;\n    }","id":55705,"modified_method":"@Override\n    protected ModelAndView handleRequestInternal(HttpServletRequest request, HttpServletResponse response) throws Exception {\n        String[] requiredParameters = new String[] { \"report or domain\", \"type\" };\n      \n        // Get Form Variable\n        String report_type = WebSecurityUtils.sanitizeString(request.getParameter(\"type\"));\n        if (report_type == null) {\n            throw new MissingParameterException(\"type\", requiredParameters);\n        }\n      \n        String r_index = WebSecurityUtils.sanitizeString(request.getParameter(\"report\"));\n        String domain = WebSecurityUtils.sanitizeString(request.getParameter(\"domain\"));\n        int report_index = 0;\n        if (r_index != null) {\n            report_index = WebSecurityUtils.safeParseInt(r_index);\n        } else if (domain == null) {\n            throw new MissingParameterException(\"report or domain\", requiredParameters);\n        }\n      \n        String override_timespan = WebSecurityUtils.sanitizeString(request.getParameter(\"timespan\"));\n        String override_graphtype = WebSecurityUtils.sanitizeString(request.getParameter(\"graphtype\"));\n        if ((override_timespan == null) || (override_timespan.equals(\"null\"))) {\n            override_timespan = \"none\";\n        }\n        if ((override_graphtype == null) || (override_graphtype.equals(\"null\"))) {\n            override_graphtype = \"none\";\n        }\n      \n        // Load report to view \n        Report report = null;\n        if (\"node\".equals(report_type)) {\n            report = getKscReportService().buildNodeReport(report_index);\n        } else if (\"domain\".equals(report_type)) {\n            report = getKscReportService().buildDomainReport(domain);\n        } else if (\"custom\".equals(report_type)) {\n            report = m_kscReportFactory.getReportByIndex(report_index);\n        } else {\n            throw new IllegalArgumentException(\"value to 'type' parameter of '\" + report_type + \"' is not supported.  Must be one of: node, domain, or custom\");\n        }\n      \n        if (report == null) {\n            throw new ServletException(\"Report does not exist\");\n        }\n      \n        // Define the possible graph options \n        PrefabGraph[] graph_options = new PrefabGraph[0];\n      \n        if (report.getGraphCount() > 0) {\n            Set<PrefabGraph> prefabGraphs = new HashSet<PrefabGraph>();\n            \n            for (int i = 0; i < report.getGraphCount(); i++) {\n                Graph graph = report.getGraph(i);\n                OnmsResource resource = getKscReportService().getResourceFromGraph(graph);\n                prefabGraphs.addAll(Arrays.asList(getResourceService().findPrefabGraphsForResource(resource)));\n            }\n            \n            graph_options = prefabGraphs.toArray(new PrefabGraph[prefabGraphs.size()]);\n\n            if (graph_options.length > 1) {\n                Arrays.sort(graph_options);\n            }\n\n            /*\n            if (\"custom\".equals(report_type) && \"node\".equals(resource.getResourceType().getName())) {\n                graph_options = getResourceService().findPrefabGraphsForChildResources(resource.getParent(), \"nodeSnmp\", \"interfaceSnmp\");\n            } else {\n                graph_options = getResourceService().findPrefabGraphsForChildResources(resource.getParent(), \"interfaceSnmp\");\n            }\n            */\n      \n            // Get default graph type from first element of graph_options\n            if ((\"node\".equals(report_type) || \"domain\".equals(report_type))\n                    && \"none\".equals(override_graphtype)\n                    && graph_options.length > 0) {\n                override_graphtype = graph_options[0].getName();\n                if (log().isDebugEnabled()) {\n                    log().debug(\"custom_view: setting default graph type to \"\n                                + override_graphtype);\n                }\n            }\n\n            /*\n            if (graph_options.length > 1) {\n                Arrays.sort(graph_options);\n            }\n            */\n        }\n        \n        \n        ArrayList<KscResultSet> resultSets = new ArrayList<KscResultSet>(report.getGraphCount());\n        for (int i = 0; i < report.getGraphCount(); i++) {\n            Graph current_graph = report.getGraph(i);\n            \n            OnmsResource resource = getKscReportService().getResourceFromGraph(current_graph);\n            promoteResourceAttributesIfNecessary(resource);\n\n            String display_graphtype = null;\n            if (\"none\".equals(override_graphtype)) {\n                display_graphtype = current_graph.getGraphtype();\n            } else {\n                display_graphtype = override_graphtype;\n            }\n            \n            PrefabGraph display_graph = getResourceService().getPrefabGraph(display_graphtype);\n            \n            // gather start/stop time information\n            String display_timespan = null;\n            if (\"none\".equals(override_timespan)) {\n                display_timespan = current_graph.getTimespan();\n            } else {\n                display_timespan = override_timespan;\n            }\n            Calendar begin_time = Calendar.getInstance();\n            Calendar end_time = Calendar.getInstance();\n            KSC_PerformanceReportFactory.getBeginEndTime(display_timespan, begin_time, end_time);\n            \n            KscResultSet resultSet = new KscResultSet(current_graph.getTitle(), begin_time.getTime(), end_time.getTime(), resource, display_graph);\n            resultSets.add(resultSet);\n        }\n        \n        ModelAndView modelAndView = new ModelAndView(\"KSC/customView\");\n\n        modelAndView.addObject(\"loggedIn\", request.getRemoteUser() != null);\n        modelAndView.addObject(\"reportType\", report_type);\n        if (report != null) {\n            modelAndView.addObject(\"report\", r_index);\n        }\n        if (domain != null) {\n            modelAndView.addObject(\"domain\", domain);\n        }\n        \n        modelAndView.addObject(\"title\", report.getTitle());\n        modelAndView.addObject(\"resultSets\", resultSets);\n        \n        if (report.getShow_timespan_button()) {\n            if (\"none\".equals(override_timespan) || !getKscReportService().getTimeSpans(true).containsKey(override_timespan)) {\n                modelAndView.addObject(\"timeSpan\", \"none\");\n            } else {\n                modelAndView.addObject(\"timeSpan\", override_timespan);\n            }\n            modelAndView.addObject(\"timeSpans\", getKscReportService().getTimeSpans(true));\n        } else {\n            // Make sure it's null so the pulldown list isn't shown\n            modelAndView.addObject(\"timeSpan\", null);\n        }\n\n        if (report.getShow_graphtype_button()) {\n            LinkedHashMap<String, String> graphTypes = new LinkedHashMap<String, String>();\n            graphTypes.put(\"none\", \"none\");\n            for (PrefabGraph graph_option : graph_options) {\n                graphTypes.put(graph_option.getName(), graph_option.getName());\n            }\n            \n            if (\"none\".equals(override_graphtype) || !graphTypes.containsKey(override_graphtype)) {\n                modelAndView.addObject(\"graphType\", \"none\");\n            } else {\n                modelAndView.addObject(\"graphType\", override_graphtype);\n            }\n            modelAndView.addObject(\"graphTypes\", graphTypes);\n        } else {\n            // Make sure it's null so the pulldown list isn't shown\n            modelAndView.addObject(\"graphType\", null);\n        }\n        \n        modelAndView.addObject(\"showCustomizeButton\", !request.isUserInRole(Authentication.READONLY_ROLE) && (request.getRemoteUser() != null));\n\n        if (report.getGraphs_per_line() > 0) {\n            modelAndView.addObject(\"graphsPerLine\", report.getGraphs_per_line());\n        } else {\n            modelAndView.addObject(\"graphsPerLine\", getDefaultGraphsPerLine());\n        }\n        \n        return modelAndView;\n    }","commit_id":"3d92e5e046d7c0fb564381a795840c30a23dba2b","url":"https://github.com/OpenNMS/opennms"},{"original_method":"@Override\n    protected ModelAndView handleRequestInternal(HttpServletRequest request, HttpServletResponse response) throws Exception {\n        String action = WebSecurityUtils.sanitizeString(request.getParameter(\"report_action\"));\n\n        if (action == null) {\n            throw new MissingParameterException(\"report_action\");\n        }\n\n        KscReportEditor editor = KscReportEditor.getFromSession(request.getSession(), false);\n        \n        if (action.equals(\"Customize\")) {\n            editor.loadWorkingReport(getKscReportFactory(), getReportIndex(request));\n            return new ModelAndView(\"redirect:/KSC/customReport.htm\");\n        } else if (action.equals(\"CreateFrom\")) {\n            editor.loadWorkingReportDuplicate(getKscReportFactory(), getReportIndex(request));\n            return new ModelAndView(\"redirect:/KSC/customReport.htm\");\n        } else if (action.equals(\"Delete\")) {\n            getKscReportFactory().deleteReportAndSave(getReportIndex(request)); \n            return new ModelAndView(\"redirect:/KSC/index.htm\");\n        } else if (action.equals(\"Create\")) {\n            editor.loadNewWorkingReport();\n            return new ModelAndView(\"redirect:/KSC/customReport.htm\");\n        } else if (action.equals(\"View\")) {\n            ModelAndView modelAndView = new ModelAndView(\"redirect:/KSC/customView.htm\");\n            modelAndView.addObject(\"report\", getReportIndex(request));\n            modelAndView.addObject(\"type\", \"custom\");\n            return modelAndView;\n        } else {\n            throw new ServletException (\"Invalid Parameter contents for report_action: \" + action);\n        }\n    }","id":55706,"modified_method":"@Override\n    protected ModelAndView handleRequestInternal(HttpServletRequest request, HttpServletResponse response) throws Exception {\n        String action = WebSecurityUtils.sanitizeString(request.getParameter(\"report_action\"));\n\n        if (action == null) {\n            throw new MissingParameterException(\"report_action\");\n        }\n\n        KscReportEditor editor = KscReportEditor.getFromSession(request.getSession(), false);\n\n        if (action.equals(\"View\")) {\n            ModelAndView modelAndView = new ModelAndView(\"redirect:/KSC/customView.htm\");\n            modelAndView.addObject(\"report\", getReportIndex(request));\n            modelAndView.addObject(\"type\", \"custom\");\n            return modelAndView;\n          \n        } else if (!request.isUserInRole(Authentication.READONLY_ROLE) && (request.getRemoteUser() != null)) {\n            if (action.equals(\"Customize\")) {\n                editor.loadWorkingReport(getKscReportFactory(), getReportIndex(request));\n                return new ModelAndView(\"redirect:/KSC/customReport.htm\");\n            } else if (action.equals(\"CreateFrom\")) {\n                editor.loadWorkingReportDuplicate(getKscReportFactory(), getReportIndex(request));\n                return new ModelAndView(\"redirect:/KSC/customReport.htm\");\n            } else if (action.equals(\"Delete\")) {\n                getKscReportFactory().deleteReportAndSave(getReportIndex(request)); \n                return new ModelAndView(\"redirect:/KSC/index.htm\");\n            } else if (action.equals(\"Create\")) {\n                editor.loadNewWorkingReport();\n               return new ModelAndView(\"redirect:/KSC/customReport.htm\");\n            }\n        }\n        throw new ServletException (\"Invalid Parameter contents for report_action: \" + action);\n    }","commit_id":"3d92e5e046d7c0fb564381a795840c30a23dba2b","url":"https://github.com/OpenNMS/opennms"},{"original_method":"@Override\n    protected ModelAndView handleRequestInternal(HttpServletRequest request, HttpServletResponse response) throws Exception {\n        String[] requiredParameters = new String[] {\n                \"resourceId\",\n                \"reports\"\n        };\n        \n        for (String requiredParameter : requiredParameters) {\n            if (request.getParameter(requiredParameter) == null) {\n                throw new MissingParameterException(requiredParameter,\n                                                    requiredParameters);\n            }\n        }\n\n        String[] resourceIds = WebSecurityUtils.sanitizeString(request.getParameterValues(\"resourceId\"));\n        String[] reports = WebSecurityUtils.sanitizeString(request.getParameterValues(\"reports\"));\n        \n        // see if the start and end time were explicitly set as params\n        String start = WebSecurityUtils.sanitizeString(request.getParameter(\"start\"));\n        String end = WebSecurityUtils.sanitizeString(request.getParameter(\"end\"));\n\n        String relativeTime = WebSecurityUtils.sanitizeString(request.getParameter(\"relativetime\"));\n        \n        String startMonth = WebSecurityUtils.sanitizeString(request.getParameter(\"startMonth\"));\n        String startDate = WebSecurityUtils.sanitizeString(request.getParameter(\"startDate\"));\n        String startYear = WebSecurityUtils.sanitizeString(request.getParameter(\"startYear\"));\n        String startHour = WebSecurityUtils.sanitizeString(request.getParameter(\"startHour\"));\n\n        String endMonth = WebSecurityUtils.sanitizeString(request.getParameter(\"endMonth\"));\n        String endDate = WebSecurityUtils.sanitizeString(request.getParameter(\"endDate\"));\n        String endYear = WebSecurityUtils.sanitizeString(request.getParameter(\"endYear\"));\n        String endHour = WebSecurityUtils.sanitizeString(request.getParameter(\"endHour\"));\n        \n        long startLong;\n        long endLong;\n\n        if (start != null || end != null) {\n            String[] ourRequiredParameters = new String[] {\n                    \"start\",\n                    \"end\"\n            };\n        \n            if (start == null) {\n                throw new MissingParameterException(\"start\",\n                                                    ourRequiredParameters);\n            }\n            \n            if (end == null) {\n                throw new MissingParameterException(\"end\",\n                                                    ourRequiredParameters);\n            }\n            \n            // XXX could use some error checking\n            startLong = WebSecurityUtils.safeParseLong(start);\n            endLong = WebSecurityUtils.safeParseLong(end);\n        } else if (startMonth != null || startDate != null \n                   || startYear != null || startHour != null\n                   || endMonth != null || endDate != null || endYear != null\n                   || endHour != null) {\n            \n            String[] ourRequiredParameters = new String[] {\n                    \"startMonth\",\n                    \"startDate\",\n                    \"startYear\",\n                    \"startHour\",\n                    \"endMonth\",\n                    \"endDate\",\n                    \"endYear\",\n                    \"endHour\"\n            };\n            \n            for (String requiredParameter : ourRequiredParameters) {\n                if (request.getParameter(requiredParameter) == null) {\n                    throw new MissingParameterException(requiredParameter,\n                                                        ourRequiredParameters);\n                }\n            }\n\n            Calendar startCal = Calendar.getInstance();\n            startCal.set(Calendar.MONTH, WebSecurityUtils.safeParseInt(startMonth));\n            startCal.set(Calendar.DATE, WebSecurityUtils.safeParseInt(startDate));\n            startCal.set(Calendar.YEAR, WebSecurityUtils.safeParseInt(startYear));\n            startCal.set(Calendar.HOUR_OF_DAY, WebSecurityUtils.safeParseInt(startHour));\n            startCal.set(Calendar.MINUTE, 0);\n            startCal.set(Calendar.SECOND, 0);\n            startCal.set(Calendar.MILLISECOND, 0);\n\n            Calendar endCal = Calendar.getInstance();\n            endCal.set(Calendar.MONTH, WebSecurityUtils.safeParseInt(endMonth));\n            endCal.set(Calendar.DATE, WebSecurityUtils.safeParseInt(endDate));\n            endCal.set(Calendar.YEAR, WebSecurityUtils.safeParseInt(endYear));\n            endCal.set(Calendar.HOUR_OF_DAY, WebSecurityUtils.safeParseInt(endHour));\n            endCal.set(Calendar.MINUTE, 0);\n            endCal.set(Calendar.SECOND, 0);\n            endCal.set(Calendar.MILLISECOND, 0);\n\n            startLong = startCal.getTime().getTime();\n            endLong = endCal.getTime().getTime();\n        } else {\n            if (relativeTime == null) {\n                relativeTime = s_periods[0].getId();\n            }\n\n            RelativeTimePeriod period = RelativeTimePeriod.getPeriodByIdOrDefault(\n                                                                                  s_periods,\n                                                                                  relativeTime,\n                                                                                  s_periods[0]);\n\n            long[] times = period.getStartAndEndTimes();\n            startLong = times[0];\n            endLong = times[1];\n        }\n        \n        GraphResults model =\n            m_graphResultsService.findResults(resourceIds,\n                                              reports, startLong,\n                                              endLong, relativeTime);\n\n        return new ModelAndView(\"/graph/results\", \"results\", model);\n    }","id":55707,"modified_method":"@Override\n    protected ModelAndView handleRequestInternal(HttpServletRequest request, HttpServletResponse response) throws Exception {\n        String[] requiredParameters = new String[] {\n                \"resourceId\",\n                \"reports\"\n        };\n        \n        for (String requiredParameter : requiredParameters) {\n            if (request.getParameter(requiredParameter) == null) {\n                throw new MissingParameterException(requiredParameter,\n                                                    requiredParameters);\n            }\n        }\n\n        String[] resourceIds = WebSecurityUtils.sanitizeString(request.getParameterValues(\"resourceId\"));\n        String[] reports = WebSecurityUtils.sanitizeString(request.getParameterValues(\"reports\"));\n        \n        // see if the start and end time were explicitly set as params\n        String start = WebSecurityUtils.sanitizeString(request.getParameter(\"start\"));\n        String end = WebSecurityUtils.sanitizeString(request.getParameter(\"end\"));\n\n        String relativeTime = WebSecurityUtils.sanitizeString(request.getParameter(\"relativetime\"));\n        \n        String startMonth = WebSecurityUtils.sanitizeString(request.getParameter(\"startMonth\"));\n        String startDate = WebSecurityUtils.sanitizeString(request.getParameter(\"startDate\"));\n        String startYear = WebSecurityUtils.sanitizeString(request.getParameter(\"startYear\"));\n        String startHour = WebSecurityUtils.sanitizeString(request.getParameter(\"startHour\"));\n\n        String endMonth = WebSecurityUtils.sanitizeString(request.getParameter(\"endMonth\"));\n        String endDate = WebSecurityUtils.sanitizeString(request.getParameter(\"endDate\"));\n        String endYear = WebSecurityUtils.sanitizeString(request.getParameter(\"endYear\"));\n        String endHour = WebSecurityUtils.sanitizeString(request.getParameter(\"endHour\"));\n        \n        long startLong;\n        long endLong;\n\n        if (start != null || end != null) {\n            String[] ourRequiredParameters = new String[] {\n                    \"start\",\n                    \"end\"\n            };\n        \n            if (start == null) {\n                throw new MissingParameterException(\"start\",\n                                                    ourRequiredParameters);\n            }\n            \n            if (end == null) {\n                throw new MissingParameterException(\"end\",\n                                                    ourRequiredParameters);\n            }\n            \n            // XXX could use some error checking\n            startLong = WebSecurityUtils.safeParseLong(start);\n            endLong = WebSecurityUtils.safeParseLong(end);\n        } else if (startMonth != null || startDate != null \n                   || startYear != null || startHour != null\n                   || endMonth != null || endDate != null || endYear != null\n                   || endHour != null) {\n            \n            String[] ourRequiredParameters = new String[] {\n                    \"startMonth\",\n                    \"startDate\",\n                    \"startYear\",\n                    \"startHour\",\n                    \"endMonth\",\n                    \"endDate\",\n                    \"endYear\",\n                    \"endHour\"\n            };\n            \n            for (String requiredParameter : ourRequiredParameters) {\n                if (request.getParameter(requiredParameter) == null) {\n                    throw new MissingParameterException(requiredParameter,\n                                                        ourRequiredParameters);\n                }\n            }\n\n            Calendar startCal = Calendar.getInstance();\n            startCal.set(Calendar.MONTH, WebSecurityUtils.safeParseInt(startMonth));\n            startCal.set(Calendar.DATE, WebSecurityUtils.safeParseInt(startDate));\n            startCal.set(Calendar.YEAR, WebSecurityUtils.safeParseInt(startYear));\n            startCal.set(Calendar.HOUR_OF_DAY, WebSecurityUtils.safeParseInt(startHour));\n            startCal.set(Calendar.MINUTE, 0);\n            startCal.set(Calendar.SECOND, 0);\n            startCal.set(Calendar.MILLISECOND, 0);\n\n            Calendar endCal = Calendar.getInstance();\n            endCal.set(Calendar.MONTH, WebSecurityUtils.safeParseInt(endMonth));\n            endCal.set(Calendar.DATE, WebSecurityUtils.safeParseInt(endDate));\n            endCal.set(Calendar.YEAR, WebSecurityUtils.safeParseInt(endYear));\n            endCal.set(Calendar.HOUR_OF_DAY, WebSecurityUtils.safeParseInt(endHour));\n            endCal.set(Calendar.MINUTE, 0);\n            endCal.set(Calendar.SECOND, 0);\n            endCal.set(Calendar.MILLISECOND, 0);\n\n            startLong = startCal.getTime().getTime();\n            endLong = endCal.getTime().getTime();\n        } else {\n            if (relativeTime == null) {\n                relativeTime = s_periods[0].getId();\n            }\n\n            RelativeTimePeriod period = RelativeTimePeriod.getPeriodByIdOrDefault(\n                                                                                  s_periods,\n                                                                                  relativeTime,\n                                                                                  s_periods[0]);\n\n            long[] times = period.getStartAndEndTimes();\n            startLong = times[0];\n            endLong = times[1];\n        }\n        \n        GraphResults model =\n            m_graphResultsService.findResults(resourceIds,\n                                              reports, startLong,\n                                              endLong, relativeTime);\n\n        ModelAndView modelAndView = new ModelAndView(\"/graph/results\", \"results\", model);\n\n        modelAndView.addObject(\"loggedIn\", request.getRemoteUser() != null);\n        \n        return modelAndView;\n    }","commit_id":"3d92e5e046d7c0fb564381a795840c30a23dba2b","url":"https://github.com/OpenNMS/opennms"},{"original_method":"@Override\n    protected ModelAndView handleRequestInternal(HttpServletRequest request, HttpServletResponse response) throws Exception {\n        ModelAndView modelAndView = new ModelAndView(\"KSC/index\");\n\n        modelAndView.addObject(\"showReportList\", !request.isUserInRole(Authentication.READONLY_ROLE));\n        modelAndView.addObject(\"reports\", getKscReportService().getReportList());\n        modelAndView.addObject(\"nodeResources\", getResourceService().findNodeResources());\n        modelAndView.addObject(\"domainResources\", getResourceService().findDomainResources());\n        \n        return modelAndView;\n    }","id":55708,"modified_method":"@Override\n    protected ModelAndView handleRequestInternal(HttpServletRequest request, HttpServletResponse response) throws Exception {\n        ModelAndView modelAndView = new ModelAndView(\"KSC/index\");\n\n        modelAndView.addObject(\"kscReadOnly\", (request.isUserInRole(Authentication.READONLY_ROLE)) || (request.getRemoteUser() == null));\n        modelAndView.addObject(\"reports\", getKscReportService().getReportList());\n        modelAndView.addObject(\"nodeResources\", getResourceService().findNodeResources());\n        modelAndView.addObject(\"domainResources\", getResourceService().findDomainResources());\n        \n        return modelAndView;\n    }","commit_id":"3d92e5e046d7c0fb564381a795840c30a23dba2b","url":"https://github.com/OpenNMS/opennms"},{"original_method":"public static boolean isNewXHTMLLayout(XFormsContainingDocument containingDocument) {\n        return getBooleanProperty(containingDocument, NEW_XHTML_LAYOUT);\n    }","id":55709,"modified_method":"public static boolean isNewXHTMLLayout(XFormsContainingDocument containingDocument) {\n        // Check both properties for backward compatibility\n        final String value = getStringProperty(containingDocument, XHTML_LAYOUT);\n        return XHTMLLayout.SPAN.toString().toLowerCase().equals(value) || getBooleanProperty(containingDocument, NEW_XHTML_LAYOUT);\n    }","commit_id":"561d29c8354f41d175507ce78f0497977c747757","url":"https://github.com/orbeon/orbeon-forms"},{"original_method":"@Override\n  public boolean canPutAt(@NotNull final VirtualFile file, final int line, @NotNull Project project) {\n    if (SystemProperties.getBooleanProperty(\"java.debugger.xBreakpoint\", false)) {\n      boolean result = doCanPutAt(PsiManager.getInstance(project).findFile(file));\n\n      // todo now applicable only if modules has facets, remove this check when java xbreakpoint will work\n      if (result && SystemProperties.getBooleanProperty(\"java.debugger.xBreakpoint.onlyIfHasFacets\", false)) {\n        Module module = ModuleUtilCore.findModuleForFile(file, project);\n        return module != null && FacetManager.getInstance(module).getAllFacets().length > 0;\n      }\n\n      return result;\n    }\n    return false;\n  }","id":55710,"modified_method":"@Override\n  public boolean canPutAt(@NotNull final VirtualFile file, final int line, @NotNull Project project) {\n    return SystemProperties.getBooleanProperty(\"java.debugger.xBreakpoint\", false) &&\n           doCanPutAt(PsiManager.getInstance(project).findFile(file));\n  }","commit_id":"5b7f60fb75d5646173dc80824b80d3bba2360ef1","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public boolean getNewDest(int tunnel) {\n        return getBooleanProperty(tunnel, \"i2cp.newDestOnResume\");\n    }","id":55711,"modified_method":"public boolean getNewDest(int tunnel) {\n        return getBooleanProperty(tunnel, \"i2cp.newDestOnResume\") &&\n               getBooleanProperty(tunnel, \"i2cp.closeOnIdle\") &&\n               !getBooleanProperty(tunnel, \"persistentClientKey\");\n    }","commit_id":"a8a0e2a91c31d28fb9c9ad7df752de7b1ac9f56a","url":"https://github.com/i2p/i2p.i2p"},{"original_method":"/**\n     * @param destinations comma delimited list of peers we target\n     * @throws IllegalArgumentException if the I2PTunnel does not contain\n     *                                  valid config to contact the router\n     */\n    public I2PTunnelClient(int localPort, String destinations, Logging l, \n                           boolean ownDest, EventDispatcher notifyThis, \n                           I2PTunnel tunnel, String pkf) throws IllegalArgumentException {\n        super(localPort, ownDest, l, notifyThis, \"SynSender\", tunnel, pkf);\n\n        if (waitEventValue(\"openBaseClientResult\").equals(\"error\")) {\n            notifyEvent(\"openClientResult\", \"error\");\n            return;\n        }\n\n        StringTokenizer tok = new StringTokenizer(destinations, \",\");\n        dests = new ArrayList(1);\n        while (tok.hasMoreTokens()) {\n            String destination = tok.nextToken();\n            try {\n                Destination destN = I2PTunnel.destFromName(destination);\n                if (destN == null)\n                    l.log(\"Could not resolve \" + destination);\n                else\n                    dests.add(destN);\n            } catch (DataFormatException dfe) {\n                l.log(\"Bad format parsing \\\"\" + destination + \"\\\"\");\n            }\n        }\n\n        if (dests.size() <= 0) {\n            l.log(\"No target destinations found\");\n            notifyEvent(\"openClientResult\", \"error\");\n            return;\n        }\n\n        setName(getLocalPort() + \" -> \" + destinations);\n\n        startRunning();\n\n        notifyEvent(\"openClientResult\", \"ok\");\n    }","id":55712,"modified_method":"/**\n     * @param destinations comma delimited list of peers we target\n     * @throws IllegalArgumentException if the I2PTunnel does not contain\n     *                                  valid config to contact the router\n     */\n    public I2PTunnelClient(int localPort, String destinations, Logging l, \n                           boolean ownDest, EventDispatcher notifyThis, \n                           I2PTunnel tunnel, String pkf) throws IllegalArgumentException {\n        super(localPort, ownDest, l, notifyThis, \"SynSender\", tunnel, pkf);\n\n        if (waitEventValue(\"openBaseClientResult\").equals(\"error\")) {\n            notifyEvent(\"openClientResult\", \"error\");\n            return;\n        }\n\n        StringTokenizer tok = new StringTokenizer(destinations, \", \");\n        dests = new ArrayList(1);\n        while (tok.hasMoreTokens()) {\n            String destination = tok.nextToken();\n            try {\n                Destination destN = I2PTunnel.destFromName(destination);\n                if (destN == null)\n                    l.log(\"Could not resolve \" + destination);\n                else\n                    dests.add(destN);\n            } catch (DataFormatException dfe) {\n                l.log(\"Bad format parsing \\\"\" + destination + \"\\\"\");\n            }\n        }\n\n        if (dests.size() <= 0) {\n            l.log(\"No target destinations found\");\n            notifyEvent(\"openClientResult\", \"error\");\n            return;\n        }\n\n        setName(getLocalPort() + \" -> \" + destinations);\n\n        startRunning();\n\n        notifyEvent(\"openClientResult\", \"ok\");\n    }","commit_id":"a8a0e2a91c31d28fb9c9ad7df752de7b1ac9f56a","url":"https://github.com/i2p/i2p.i2p"},{"original_method":"/**\n     * Create a new I2PSocket towards to the specified destination,\n     * adding it to the list of connections actually managed by this\n     * tunnel.\n     *\n     * @param dest The destination to connect to\n     * @return a new I2PSocket\n     */\n    public I2PSocket createI2PSocket(Destination dest) throws I2PException, ConnectException, NoRouteToHostException, InterruptedIOException {\n        if (sockMgr == null) {\n            // we need this before getDefaultOptions()\n            sockMgr = getSocketManager();\n        }\n        return createI2PSocket(dest, getDefaultOptions());\n    }","id":55713,"modified_method":"/**\n     * Create a new I2PSocket towards to the specified destination,\n     * adding it to the list of connections actually managed by this\n     * tunnel.\n     *\n     * @param dest The destination to connect to\n     * @return a new I2PSocket\n     */\n    public I2PSocket createI2PSocket(Destination dest) throws I2PException, ConnectException, NoRouteToHostException, InterruptedIOException {\n        if (sockMgr == null) {\n            // we need this before getDefaultOptions()\n            synchronized(sockLock) {\n                sockMgr = getSocketManager();\n            }\n        }\n        return createI2PSocket(dest, getDefaultOptions());\n    }","commit_id":"a8a0e2a91c31d28fb9c9ad7df752de7b1ac9f56a","url":"https://github.com/i2p/i2p.i2p"},{"original_method":"/**\n     * Create a new I2PSocket towards to the specified destination,\n     * adding it to the list of connections actually managed by this\n     * tunnel.\n     *\n     * @param dest The destination to connect to\n     * @param opt Option to be used to open when opening the socket\n     * @return a new I2PSocket\n     *\n     * @throws ConnectException if the peer refuses the connection\n     * @throws NoRouteToHostException if the peer is not found or not reachable\n     * @throws InterruptedIOException if the connection timeouts\n     * @throws I2PException if there is some other I2P-related problem\n     */\n    public I2PSocket createI2PSocket(Destination dest, I2PSocketOptions opt) throws I2PException, ConnectException, NoRouteToHostException, InterruptedIOException {\n        I2PSocket i2ps;\n\n        if (sockMgr == null) {\n            // delayed open - call get instead of build because the locking is up there\n            sockMgr = getSocketManager();\n        } else if (Boolean.valueOf(getTunnel().getClientOptions().getProperty(\"i2cp.newDestOnResume\")).booleanValue()) {\n            synchronized(sockMgr) {\n                I2PSocketManager oldSockMgr = sockMgr;\n                // This will build a new socket manager and a new dest if the session is closed.\n                sockMgr = getSocketManager();\n                if (oldSockMgr != sockMgr) {\n                    _log.warn(\"Built a new destination on resume\");\n                }\n            }\n        }  // else the old socket manager will reconnect the old session if necessary\n        i2ps = sockMgr.connect(dest, opt);\n        synchronized (sockLock) {\n            mySockets.add(i2ps);\n        }\n\n        return i2ps;\n    }","id":55714,"modified_method":"/**\n     * Create a new I2PSocket towards to the specified destination,\n     * adding it to the list of connections actually managed by this\n     * tunnel.\n     *\n     * @param dest The destination to connect to\n     * @param opt Option to be used to open when opening the socket\n     * @return a new I2PSocket\n     *\n     * @throws ConnectException if the peer refuses the connection\n     * @throws NoRouteToHostException if the peer is not found or not reachable\n     * @throws InterruptedIOException if the connection timeouts\n     * @throws I2PException if there is some other I2P-related problem\n     */\n    public I2PSocket createI2PSocket(Destination dest, I2PSocketOptions opt) throws I2PException, ConnectException, NoRouteToHostException, InterruptedIOException {\n        I2PSocket i2ps;\n\n        if (sockMgr == null) {\n            // delayed open - call get instead of build because the locking is up there\n            synchronized(sockLock) {\n                sockMgr = getSocketManager();\n            }\n        } else if (Boolean.valueOf(getTunnel().getClientOptions().getProperty(\"i2cp.closeOnIdle\")).booleanValue() &&\n                   Boolean.valueOf(getTunnel().getClientOptions().getProperty(\"i2cp.newDestOnResume\")).booleanValue()) {\n            synchronized(sockLock) {\n                I2PSocketManager oldSockMgr = sockMgr;\n                // This will build a new socket manager and a new dest if the session is closed.\n                sockMgr = getSocketManager();\n                if (oldSockMgr != sockMgr) {\n                    _log.warn(\"Built a new destination on resume\");\n                }\n            }\n        }  // else the old socket manager will reconnect the old session if necessary\n        i2ps = sockMgr.connect(dest, opt);\n        synchronized (sockLock) {\n            mySockets.add(i2ps);\n        }\n\n        return i2ps;\n    }","commit_id":"a8a0e2a91c31d28fb9c9ad7df752de7b1ac9f56a","url":"https://github.com/i2p/i2p.i2p"},{"original_method":"/** \n     * create the default options (using the default timeout, etc)\n     *\n     */\n    protected I2PSocketOptions getDefaultOptions(Properties overrides) {\n        Properties defaultOpts = getTunnel().getClientOptions();\n        defaultOpts.putAll(overrides);\n        if (!defaultOpts.contains(I2PSocketOptions.PROP_READ_TIMEOUT))\n            defaultOpts.setProperty(I2PSocketOptions.PROP_READ_TIMEOUT, \"\"+DEFAULT_READ_TIMEOUT);\n        if (!defaultOpts.contains(\"i2p.streaming.inactivityTimeout\"))\n            defaultOpts.setProperty(\"i2p.streaming.inactivityTimeout\", \"\"+DEFAULT_READ_TIMEOUT);\n        // delayed start\n        if (sockMgr == null)\n            sockMgr = getSocketManager();\n        I2PSocketOptions opts = sockMgr.buildOptions(defaultOpts);\n        if (!defaultOpts.containsKey(I2PSocketOptions.PROP_CONNECT_TIMEOUT))\n            opts.setConnectTimeout(DEFAULT_CONNECT_TIMEOUT);\n        return opts;\n    }","id":55715,"modified_method":"/** \n     * create the default options (using the default timeout, etc)\n     *\n     */\n    protected I2PSocketOptions getDefaultOptions(Properties overrides) {\n        Properties defaultOpts = getTunnel().getClientOptions();\n        defaultOpts.putAll(overrides);\n        if (!defaultOpts.contains(I2PSocketOptions.PROP_READ_TIMEOUT))\n            defaultOpts.setProperty(I2PSocketOptions.PROP_READ_TIMEOUT, \"\"+DEFAULT_READ_TIMEOUT);\n        if (!defaultOpts.contains(\"i2p.streaming.inactivityTimeout\"))\n            defaultOpts.setProperty(\"i2p.streaming.inactivityTimeout\", \"\"+DEFAULT_READ_TIMEOUT);\n        // delayed start\n        if (sockMgr == null) {\n            synchronized(sockLock) {\n                sockMgr = getSocketManager();\n            }\n        }\n        I2PSocketOptions opts = sockMgr.buildOptions(defaultOpts);\n        if (!defaultOpts.containsKey(I2PSocketOptions.PROP_CONNECT_TIMEOUT))\n            opts.setConnectTimeout(DEFAULT_CONNECT_TIMEOUT);\n        return opts;\n    }","commit_id":"a8a0e2a91c31d28fb9c9ad7df752de7b1ac9f56a","url":"https://github.com/i2p/i2p.i2p"},{"original_method":"public static WorkItem readWorkItem(MarshallerReaderContext context) throws IOException {\r\n        ObjectInputStream stream = context.stream;\r\n\r\n        WorkItemImpl workItem = new WorkItemImpl();\r\n        workItem.setId( stream.readLong() );\r\n        workItem.setProcessInstanceId( stream.readLong() );\r\n        workItem.setName( stream.readUTF() );\r\n        workItem.setState( stream.readInt() );\r\n\r\n        int nbParameters = stream.readInt();\r\n\r\n        for ( int i = 0; i < nbParameters; i++ ) {\r\n            String name = stream.readUTF();\r\n            try {\r\n                Object value = stream.readObject();\r\n                workItem.setParameter( name,\r\n                                       value );\r\n            } catch ( ClassNotFoundException e ) {\r\n                throw new IllegalArgumentException( \"Could not reload parameter \" + name );\r\n            }\r\n        }\r\n\r\n        return workItem;\r\n    }","id":55716,"modified_method":"public static WorkItem readWorkItem(MarshallerReaderContext context) throws IOException {\r\n       return readWorkItem(context, true);\r\n    }","commit_id":"4a66557d3addabe40e71d708b7eb5069266b1eda","url":"https://github.com/droolsjbpm/drools"},{"original_method":"public void completeWorkItem(long id, Map<String, Object> results) {\r\n        EntityManager em = (EntityManager) this.workingMemory.getEnvironment().get( EnvironmentName.ENTITY_MANAGER );\r\n        \r\n        WorkItemInfo workItemInfo = null;\r\n        if (this.workItems != null) {\r\n\t    \tworkItemInfo = this.workItems.get(id);\r\n\t    \tif (workItemInfo != null) {\r\n\t    \t\tworkItemInfo = em.merge(workItemInfo);\r\n\t    \t}\r\n    \t}\r\n        \r\n        if (workItemInfo == null) {\r\n        \tworkItemInfo = em.find(WorkItemInfo.class, id);\r\n        }\r\n        \r\n    \t// work item may have been aborted\r\n        if (workItemInfo != null) {\r\n    \t\tWorkItem workItem = (WorkItemImpl) workItemInfo.getWorkItem();\r\n            workItem.setResults(results);\r\n            ProcessInstance processInstance = workingMemory.getProcessInstance(workItem.getProcessInstanceId());\r\n            workItem.setState(WorkItem.COMPLETED);\r\n            // process instance may have finished already\r\n            if (processInstance != null) {\r\n                processInstance.signalEvent(\"workItemCompleted\", workItem);\r\n            }\r\n            em.remove(workItemInfo);\r\n            if (workItems != null) {\r\n            \tthis.workItems.remove(workItem.getId());\r\n            }\r\n            workingMemory.fireAllRules();\r\n    \t}\r\n    }","id":55717,"modified_method":"public void completeWorkItem(long id, Map<String, Object> results) {\r\n        Environment env = this.workingMemory.getEnvironment();\r\n        EntityManager em = (EntityManager) env.get(EnvironmentName.ENTITY_MANAGER);\r\n        \r\n        WorkItemInfo workItemInfo = null;\r\n        if (this.workItems != null) {\r\n\t    \tworkItemInfo = this.workItems.get(id);\r\n\t    \tif (workItemInfo != null) {\r\n\t    \t\tworkItemInfo = em.merge(workItemInfo);\r\n\t    \t}\r\n    \t}\r\n        \r\n        if (workItemInfo == null) {\r\n        \tworkItemInfo = em.find(WorkItemInfo.class, id);\r\n        }\r\n        \r\n    \t// work item may have been aborted\r\n        if (workItemInfo != null) {\r\n            WorkItem workItem = (WorkItemImpl) workItemInfo.getWorkItem(env);\r\n            workItem.setResults(results);\r\n            ProcessInstance processInstance = workingMemory.getProcessInstance(workItem.getProcessInstanceId());\r\n            workItem.setState(WorkItem.COMPLETED);\r\n            // process instance may have finished already\r\n            if (processInstance != null) {\r\n                processInstance.signalEvent(\"workItemCompleted\", workItem);\r\n            }\r\n            em.remove(workItemInfo);\r\n            if (workItems != null) {\r\n            \tthis.workItems.remove(workItem.getId());\r\n            }\r\n            workingMemory.fireAllRules();\r\n    \t}\r\n    }","commit_id":"4a66557d3addabe40e71d708b7eb5069266b1eda","url":"https://github.com/droolsjbpm/drools"},{"original_method":"public void internalExecuteWorkItem(WorkItem workItem) {\r\n\t    EntityManager em = (EntityManager) this.workingMemory.getEnvironment().get( EnvironmentName.ENTITY_MANAGER );\r\n\t    \r\n\t\tWorkItemInfo workItemInfo = new WorkItemInfo(workItem);\r\n        em.persist(workItemInfo);\r\n        ((WorkItemImpl) workItem).setId(workItemInfo.getId());\r\n        workItemInfo.update();\r\n        \r\n\t\tif (this.workItems == null) {\r\n        \tthis.workItems = new HashMap<Long, WorkItemInfo>();\r\n        }\r\n\t\tworkItems.put(workItem.getId(), workItemInfo);\r\n        \r\n        WorkItemHandler handler = (WorkItemHandler) this.workItemHandlers.get(workItem.getName());\r\n\t    if (handler != null) {\r\n\t        handler.executeWorkItem(workItem, this);\r\n\t    } else {\r\n\t        System.err.println(\"Could not find work item handler for \" + workItem.getName());\r\n\t    }\r\n\t}","id":55718,"modified_method":"public void internalExecuteWorkItem(WorkItem workItem) {\r\n        Environment env = this.workingMemory.getEnvironment();\r\n        EntityManager em = (EntityManager) env.get(EnvironmentName.ENTITY_MANAGER);\r\n\t    \r\n        WorkItemInfo workItemInfo = new WorkItemInfo(workItem, env);\r\n        em.persist(workItemInfo);\r\n        ((WorkItemImpl) workItem).setId(workItemInfo.getId());\r\n        workItemInfo.update();\r\n        \r\n\t\tif (this.workItems == null) {\r\n        \tthis.workItems = new HashMap<Long, WorkItemInfo>();\r\n        }\r\n\t\tworkItems.put(workItem.getId(), workItemInfo);\r\n        \r\n        WorkItemHandler handler = (WorkItemHandler) this.workItemHandlers.get(workItem.getName());\r\n\t    if (handler != null) {\r\n\t        handler.executeWorkItem(workItem, this);\r\n\t    } else {\r\n\t        System.err.println(\"Could not find work item handler for \" + workItem.getName());\r\n\t    }\r\n\t}","commit_id":"4a66557d3addabe40e71d708b7eb5069266b1eda","url":"https://github.com/droolsjbpm/drools"},{"original_method":"public void abortWorkItem(long id) {\r\n        EntityManager em = (EntityManager) this.workingMemory.getEnvironment().get( EnvironmentName.ENTITY_MANAGER );\r\n        \r\n        WorkItemInfo workItemInfo = null;\r\n        if (this.workItems != null) {\r\n\t    \tworkItemInfo = this.workItems.get(id);\r\n\t    \tem.merge(workItemInfo);\r\n    \t}\r\n        \r\n        if (workItemInfo == null) {\r\n        \tworkItemInfo = em.find(WorkItemInfo.class, id);\r\n        }\r\n        \r\n    \t// work item may have been aborted\r\n        if (workItemInfo != null) {\r\n    \t\tWorkItem workItem = (WorkItemImpl) workItemInfo.getWorkItem();\r\n            ProcessInstance processInstance = workingMemory.getProcessInstance(workItem.getProcessInstanceId());\r\n            workItem.setState(WorkItem.ABORTED);\r\n            // process instance may have finished already\r\n            if (processInstance != null) {\r\n                processInstance.signalEvent(\"workItemAborted\", workItem);\r\n            }\r\n            em.remove(workItemInfo);\r\n            if (workItems != null) {\r\n            \tworkItems.remove(workItem.getId());\r\n            }\r\n            workingMemory.fireAllRules();\r\n        }\r\n    }","id":55719,"modified_method":"public void abortWorkItem(long id) {\r\n        Environment env = this.workingMemory.getEnvironment();\r\n        EntityManager em = (EntityManager) env.get(EnvironmentName.ENTITY_MANAGER);\r\n        \r\n        WorkItemInfo workItemInfo = null;\r\n        if (this.workItems != null) {\r\n\t    \tworkItemInfo = this.workItems.get(id);\r\n\t    \tem.merge(workItemInfo);\r\n    \t}\r\n        \r\n        if (workItemInfo == null) {\r\n        \tworkItemInfo = em.find(WorkItemInfo.class, id);\r\n        }\r\n        \r\n    \t// work item may have been aborted\r\n        if (workItemInfo != null) {\r\n            WorkItem workItem = (WorkItemImpl) workItemInfo.getWorkItem(env);\r\n            ProcessInstance processInstance = workingMemory.getProcessInstance(workItem.getProcessInstanceId());\r\n            workItem.setState(WorkItem.ABORTED);\r\n            // process instance may have finished already\r\n            if (processInstance != null) {\r\n                processInstance.signalEvent(\"workItemAborted\", workItem);\r\n            }\r\n            em.remove(workItemInfo);\r\n            if (workItems != null) {\r\n            \tworkItems.remove(workItem.getId());\r\n            }\r\n            workingMemory.fireAllRules();\r\n        }\r\n    }","commit_id":"4a66557d3addabe40e71d708b7eb5069266b1eda","url":"https://github.com/droolsjbpm/drools"},{"original_method":"public void internalAbortWorkItem(long id) {\r\n\t    EntityManager em = (EntityManager) this.workingMemory.getEnvironment().get( EnvironmentName.ENTITY_MANAGER );\r\n\t    \r\n        WorkItemInfo workItemInfo = em.find(WorkItemInfo.class, id);\r\n        // work item may have been aborted\r\n        if (workItemInfo != null) {\r\n        \tWorkItemImpl workItem = (WorkItemImpl) workItemInfo.getWorkItem();\r\n            WorkItemHandler handler = (WorkItemHandler) this.workItemHandlers.get(workItem.getName());\r\n            if (handler != null) {\r\n                handler.abortWorkItem(workItem, this);\r\n            } else {\r\n                System.err.println(\"Could not find work item handler for \" + workItem.getName());\r\n            }\r\n            if (workItems != null) {\r\n            \tworkItems.remove(id);\r\n            }\r\n            em.remove(workItemInfo);\r\n        }\r\n\t}","id":55720,"modified_method":"public void internalAbortWorkItem(long id) {\r\n        Environment env = this.workingMemory.getEnvironment();\r\n        EntityManager em = (EntityManager) env.get(EnvironmentName.ENTITY_MANAGER);\r\n\t    \r\n        WorkItemInfo workItemInfo = em.find(WorkItemInfo.class, id);\r\n        // work item may have been aborted\r\n        if (workItemInfo != null) {\r\n            WorkItemImpl workItem = (WorkItemImpl) workItemInfo.getWorkItem(env);\r\n            WorkItemHandler handler = (WorkItemHandler) this.workItemHandlers.get(workItem.getName());\r\n            if (handler != null) {\r\n                handler.abortWorkItem(workItem, this);\r\n            } else {\r\n                System.err.println(\"Could not find work item handler for \" + workItem.getName());\r\n            }\r\n            if (workItems != null) {\r\n            \tworkItems.remove(id);\r\n            }\r\n            em.remove(workItemInfo);\r\n        }\r\n\t}","commit_id":"4a66557d3addabe40e71d708b7eb5069266b1eda","url":"https://github.com/droolsjbpm/drools"},{"original_method":"public WorkItem getWorkItem(long id) {\r\n        WorkItemInfo workItemInfo = null;\r\n        if (this.workItems != null) {\r\n\t    \tworkItemInfo = this.workItems.get(id);\r\n    \t}\r\n        \r\n        if (workItemInfo == null) {\r\n            EntityManager em = (EntityManager) this.workingMemory.getEnvironment().get( EnvironmentName.ENTITY_MANAGER );\r\n        \tworkItemInfo = em.find(WorkItemInfo.class, id);\r\n        }\r\n\r\n        if (workItemInfo == null) {\r\n            return null;\r\n        }\r\n        return workItemInfo.getWorkItem();\r\n\t}","id":55721,"modified_method":"public WorkItem getWorkItem(long id) {\r\n        Environment env = this.workingMemory.getEnvironment();\r\n        EntityManager em = (EntityManager) env.get(EnvironmentName.ENTITY_MANAGER);\r\n\r\n        WorkItemInfo workItemInfo = null;\r\n        if (this.workItems != null) {\r\n\t    \tworkItemInfo = this.workItems.get(id);\r\n    \t}\r\n        \r\n        if (workItemInfo == null && em != null) {\r\n\r\n        \tworkItemInfo = em.find(WorkItemInfo.class, id);\r\n        }\r\n\r\n        if (workItemInfo == null) {\r\n            return null;\r\n        }\r\n        return workItemInfo.getWorkItem(env);\r\n\t}","commit_id":"4a66557d3addabe40e71d708b7eb5069266b1eda","url":"https://github.com/droolsjbpm/drools"},{"original_method":"public static void writeWorkItem(MarshallerWriteContext context,\r\n                                     WorkItem workItem) throws IOException {\r\n        ObjectOutputStream stream = context.stream;\r\n        stream.writeLong( workItem.getId() );\r\n        stream.writeLong( workItem.getProcessInstanceId() );\r\n        stream.writeUTF( workItem.getName() );\r\n        stream.writeInt( workItem.getState() );\r\n        Map<String, Object> parameters = workItem.getParameters();\r\n        stream.writeInt( parameters.size() );\r\n        for ( Map.Entry<String, Object> entry : parameters.entrySet() ) {\r\n            stream.writeUTF( entry.getKey() );\r\n            stream.writeObject( entry.getValue() );\r\n        }\r\n    }","id":55722,"modified_method":"public static void writeWorkItem(MarshallerWriteContext context,\r\n                                     WorkItem workItem) throws IOException {\r\n         writeWorkItem(context, workItem, true);\r\n    }","commit_id":"4a66557d3addabe40e71d708b7eb5069266b1eda","url":"https://github.com/droolsjbpm/drools"},{"original_method":"public String toString() {\n    \treturn getClass().getName() + \" id=\" + id + \" name=\" + name + \" persister=\" + persister;\n    }","id":55723,"modified_method":"public String toString() {\n    \treturn getClass().getName() + \" id=\" + id + \" name=\" + name + \" \"\n                + \"persister=\" + persister + \"\"\n                + \" processInstanceId=\" + processInstanceId\n                + \" workItemId=\" + workItemId;\n    }","commit_id":"4a66557d3addabe40e71d708b7eb5069266b1eda","url":"https://github.com/droolsjbpm/drools"},{"original_method":"public WorkItemInfo(WorkItem workItem) {\r\n        this.workItem = workItem;\r\n        this.name = workItem.getName();\r\n        this.creationDate = new Date();\r\n        this.processInstanceId = workItem.getProcessInstanceId();\r\n    }","id":55724,"modified_method":"public WorkItemInfo(WorkItem workItem, Environment env) {\r\n        this.workItem = workItem;\r\n        this.name = workItem.getName();\r\n        this.creationDate = new Date();\r\n        this.processInstanceId = workItem.getProcessInstanceId();\r\n        this.env = env;\r\n    }","commit_id":"4a66557d3addabe40e71d708b7eb5069266b1eda","url":"https://github.com/droolsjbpm/drools"},{"original_method":"public WorkItem getWorkItem() {\r\n        if ( workItem == null ) {\r\n            try {\r\n                ByteArrayInputStream bais = new ByteArrayInputStream( workItemByteArray );\r\n                MarshallerReaderContext context = new MarshallerReaderContext( bais,\r\n                                                                               null,\r\n                                                                               null,\r\n                                                                               null );\r\n                workItem = InputMarshaller.readWorkItem( context );\r\n                context.close();\r\n            } catch ( IOException e ) {\r\n                e.printStackTrace();\r\n                throw new IllegalArgumentException( \"IOException while loading process instance: \" + e.getMessage() );\r\n            }\r\n        }\r\n        return workItem;\r\n    }","id":55725,"modified_method":"public WorkItem getWorkItem(Environment env) {\r\n        this.env = env;\r\n        if ( workItem == null ) {\r\n            try {\r\n                ByteArrayInputStream bais = new ByteArrayInputStream( workItemByteArray );\r\n                MarshallerReaderContext context = new MarshallerReaderContext( bais,\r\n                                                                               null,\r\n                                                                               null,\r\n                                                                               null );\r\n                workItem = InputMarshaller.readWorkItem( context, !externalVariables );\r\n                 if ( externalVariables ) {\r\n                    restoreVariables();\r\n                }\r\n                context.close();\r\n            } catch ( IOException e ) {\r\n                e.printStackTrace();\r\n                throw new IllegalArgumentException( \"IOException while loading process instance: \" + e.getMessage() );\r\n            }\r\n        }\r\n        return workItem;\r\n    }","commit_id":"4a66557d3addabe40e71d708b7eb5069266b1eda","url":"https://github.com/droolsjbpm/drools"},{"original_method":"@PreUpdate\r\n    public void update() {\r\n        this.state = workItem.getState();\r\n        ByteArrayOutputStream baos = new ByteArrayOutputStream();\r\n        try {\r\n            MarshallerWriteContext context = new MarshallerWriteContext( baos,\r\n                                                                         null,\r\n                                                                         null,\r\n                                                                         null,\r\n                                                                         null );\r\n            OutputMarshaller.writeWorkItem( context,\r\n                                            workItem );\r\n            context.close();\r\n            this.workItemByteArray = baos.toByteArray();\r\n        } catch ( IOException e ) {\r\n            throw new IllegalArgumentException( \"IOException while storing workItem \" + workItem.getId() + \": \" + e.getMessage() );\r\n        }\r\n    }","id":55726,"modified_method":"@PreUpdate\r\n    public void update() {\r\n        this.state = workItem.getState();\r\n        ByteArrayOutputStream baos = new ByteArrayOutputStream();\r\n        boolean variablesChanged = false;\r\n        try {\r\n            MarshallerWriteContext context = new MarshallerWriteContext( baos,\r\n                                                                         null,\r\n                                                                         null,\r\n                                                                         null,\r\n                                                                         null );\r\n            externalVariables = VariablePersistenceStrategyFactory.getVariablePersistenceStrategy().isEnabled();\r\n            OutputMarshaller.writeWorkItem( context,\r\n                                            workItem, !externalVariables );\r\n\r\n\r\n            if ( externalVariables ) {\r\n                variablesChanged = persistVariables();\r\n            }\r\n            context.close();\r\n            this.workItemByteArray = baos.toByteArray();\r\n        } catch ( IOException e ) {\r\n            throw new IllegalArgumentException( \"IOException while storing workItem \" + workItem.getId() + \": \" + e.getMessage() );\r\n        }\r\n    }","commit_id":"4a66557d3addabe40e71d708b7eb5069266b1eda","url":"https://github.com/droolsjbpm/drools"},{"original_method":"public void serialize(@NotNull GrMethodStub stub, @NotNull StubOutputStream dataStream) throws IOException {\n    dataStream.writeName(stub.getName());\n    GrStubUtils.writeStringArray(dataStream, stub.getAnnotations());\n    GrStubUtils.writeStringArray(dataStream, stub.getNamedParameters());\n    GrStubUtils.writeNullableString(dataStream, stub.getTypeText());\n    dataStream.writeByte(stub.getFlags());\n  }","id":55727,"modified_method":"public void serialize(@NotNull GrMethodStub stub, @NotNull StubOutputStream dataStream) throws IOException {\n    dataStream.writeName(stub.getName());\n    GrStubUtils.writeStringArray(dataStream, stub.getAnnotations());\n    final String[] namedParameters = stub.getNamedParameters();\n    GrStubUtils.writeStringArray(dataStream, namedParameters.length <= Byte.MAX_VALUE ? namedParameters : ArrayUtil.EMPTY_STRING_ARRAY);\n    GrStubUtils.writeNullableString(dataStream, stub.getTypeText());\n    dataStream.writeByte(stub.getFlags());\n  }","commit_id":"27d320f569e4fafe17e2ddab8ca0247935f20153","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@NotNull\n  public Map<String, NamedArgumentDescriptor> getNamedParameters() {\n    final GrFieldStub stub = getStub();\n    if (stub != null) {\n      Map<String, NamedArgumentDescriptor> result = Maps.newHashMap();\n      for (String parameter : stub.getNamedParameters()) {\n        result.put(parameter, NamedArgumentDescriptor.SIMPLE_ON_TOP);\n      }\n      return result;\n    }\n\n    return GrNamedArgumentSearchVisitor.find(this);\n  }","id":55728,"modified_method":"@NotNull\n  public Map<String, NamedArgumentDescriptor> getNamedParameters() {\n    final GrFieldStub stub = getStub();\n    if (stub != null) {\n      String[] namedParameters = stub.getNamedParameters();\n      if (namedParameters.length == 0) return Collections.emptyMap();\n\n      Map<String, NamedArgumentDescriptor> result = Maps.newHashMap();\n      for (String parameter : namedParameters) {\n        result.put(parameter, GrNamedArgumentSearchVisitor.CODE_NAMED_ARGUMENTS_DESCR);\n      }\n      return result;\n    }\n\n    return GrNamedArgumentSearchVisitor.find(this);\n  }","commit_id":"f22a87836dbcbf266c808863b94f694693ad3b4b","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@NotNull\n  public Map<String, NamedArgumentDescriptor> getNamedParameters() {\n    final GrMethodStub stub = getStub();\n    if (stub != null) {\n      Map<String, NamedArgumentDescriptor> result = Maps.newHashMap();\n      for (String parameter : stub.getNamedParameters()) {\n        result.put(parameter, NamedArgumentDescriptor.SIMPLE_ON_TOP);\n      }\n      return result;\n    }\n\n    GrOpenBlock body = getBlock();\n    if (body == null) return Collections.emptyMap();\n\n    GrParameter[] parameters = getParameters();\n    if (parameters.length == 0) return Collections.emptyMap();\n    GrParameter firstParameter = parameters[0];\n\n    PsiType type = firstParameter.getTypeGroovy();\n    GrTypeElement typeElement = firstParameter.getTypeElementGroovy();\n    //equalsToText can't be called here because of stub creating\n\n    if (type != null && typeElement != null && type.getPresentableText() != null && !type.getPresentableText().endsWith(\"Map\")) {\n      return Collections.emptyMap();\n    }\n\n    GrNamedArgumentSearchVisitor visitor = new GrNamedArgumentSearchVisitor(firstParameter.getNameIdentifierGroovy().getText());\n\n    body.accept(visitor);\n    return visitor.getResult();\n  }","id":55729,"modified_method":"@NotNull\n  public Map<String, NamedArgumentDescriptor> getNamedParameters() {\n    final GrMethodStub stub = getStub();\n    if (stub != null) {\n      String[] namedParameters = stub.getNamedParameters();\n      if (namedParameters.length == 0) return Collections.emptyMap();\n\n      Map<String, NamedArgumentDescriptor> result = Maps.newHashMap();\n\n      for (String parameter : namedParameters) {\n        result.put(parameter, GrNamedArgumentSearchVisitor.CODE_NAMED_ARGUMENTS_DESCR);\n      }\n      return result;\n    }\n\n    GrOpenBlock body = getBlock();\n    if (body == null) return Collections.emptyMap();\n\n    GrParameter[] parameters = getParameters();\n    if (parameters.length == 0) return Collections.emptyMap();\n    GrParameter firstParameter = parameters[0];\n\n    PsiType type = firstParameter.getTypeGroovy();\n    GrTypeElement typeElement = firstParameter.getTypeElementGroovy();\n    //equalsToText can't be called here because of stub creating\n\n    if (type != null && typeElement != null && type.getPresentableText() != null && !type.getPresentableText().endsWith(\"Map\")) {\n      return Collections.emptyMap();\n    }\n\n    GrNamedArgumentSearchVisitor visitor = new GrNamedArgumentSearchVisitor(firstParameter.getNameIdentifierGroovy().getText());\n\n    body.accept(visitor);\n    return visitor.getResult();\n  }","commit_id":"f22a87836dbcbf266c808863b94f694693ad3b4b","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private void add(String refName) {\n    myResult.put(refName, NamedArgumentDescriptor.SIMPLE_ON_TOP);\n  }","id":55730,"modified_method":"private void add(String refName) {\n    myResult.put(refName, CODE_NAMED_ARGUMENTS_DESCR);\n  }","commit_id":"f22a87836dbcbf266c808863b94f694693ad3b4b","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public Descriptor(HighlightDisplayKey key,\n                    InspectionProfile.ModifiableModel inspectionProfile) {\n    myText = HighlightDisplayKey.getDisplayNameByKey(key);\n    myGroup = \"General\";\n    myKey = key;\n    myConfig = null;\n    myEnabled = inspectionProfile.isToolEnabled(key);\n    myChooser = new InspectionToolsPanel.LevelChooser();\n    final HighlightDisplayLevel errorLevel = inspectionProfile.getErrorLevel(key);\n    myChooser.setLevel(errorLevel);\n    myLevel = errorLevel;\n  }","id":55731,"modified_method":"public Descriptor(HighlightDisplayKey key,\n                    InspectionProfile.ModifiableModel inspectionProfile) {\n    myText = HighlightDisplayKey.getDisplayNameByKey(key);\n    myGroup = \"General\";\n    myKey = key;\n    myConfig = null;\n    myEnabled = inspectionProfile.isToolEnabled(key);\n    myLevel = inspectionProfile.getErrorLevel(key);\n  }","commit_id":"c0b2056c5f555dccd7135bce8f7a8920214ffa33","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public Descriptor(InspectionTool tool, InspectionProfile.ModifiableModel inspectionProfile) {\n    Element config = new Element(\"options\");\n    try {\n      tool.writeExternal(config);\n    }\n    catch (WriteExternalException e) {\n      LOG.error(e);\n    }\n    myConfig = config;\n    myText = tool.getDisplayName();\n    myGroup = tool.getGroupDisplayName() != null && tool.getGroupDisplayName().length() == 0 ? \"General\" : tool.getGroupDisplayName();\n    myDescriptorFileName = tool.getDescriptionFileName();\n    myKey = HighlightDisplayKey.find(tool.getShortName());\n    if (myKey == null) {\n      myKey = HighlightDisplayKey.register(tool.getShortName());\n    }\n    myAdditionalConfigPanel = tool.createOptionsPanel();\n    myChooser = new InspectionToolsPanel.LevelChooser();\n    HighlightDisplayLevel level = inspectionProfile.getErrorLevel(myKey);\n    myChooser.setLevel(level);\n    myLevel = level;\n    myEnabled = inspectionProfile.isToolEnabled(myKey);\n    myTool = tool;\n  }","id":55732,"modified_method":"public Descriptor(InspectionTool tool, InspectionProfile.ModifiableModel inspectionProfile) {\n    Element config = new Element(\"options\");\n    try {\n      tool.writeExternal(config);\n    }\n    catch (WriteExternalException e) {\n      LOG.error(e);\n    }\n    myConfig = config;\n    myText = tool.getDisplayName();\n    myGroup = tool.getGroupDisplayName() != null && tool.getGroupDisplayName().length() == 0 ? \"General\" : tool.getGroupDisplayName();\n    myDescriptorFileName = tool.getDescriptionFileName();\n    myKey = HighlightDisplayKey.find(tool.getShortName());\n    if (myKey == null) {\n      myKey = HighlightDisplayKey.register(tool.getShortName());\n    }\n    myLevel = inspectionProfile.getErrorLevel(myKey);\n    myEnabled = inspectionProfile.isToolEnabled(myKey);\n    myTool = tool;\n  }","commit_id":"c0b2056c5f555dccd7135bce8f7a8920214ffa33","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public JComponent getAdditionalConfigPanel(InspectionProfile.ModifiableModel inspectionProfile) {\n    if (myKey.equals(HighlightDisplayKey.UNKNOWN_JAVADOC_TAG)){\n      myAdditionalConfigPanel = createAdditionalJavadocTagsPanel(inspectionProfile);\n    } else if (myKey.equals(HighlightDisplayKey.UNUSED_SYMBOL)){\n      myAdditionalConfigPanel = createUnusedSymbolSettingsPanel(inspectionProfile);\n    } else if (myAdditionalConfigPanel == null){\n      if (myKey.equals(HighlightDisplayKey.ILLEGAL_DEPENDENCY) ){\n        myAdditionalConfigPanel = createDependencyConigurationPanel();\n      }\n    }\n    return myAdditionalConfigPanel;\n  }","id":55733,"modified_method":"public JComponent getAdditionalConfigPanel(InspectionProfile.ModifiableModel inspectionProfile) {\n    if (myAdditionalConfigPanel == null && myTool != null){\n      myAdditionalConfigPanel = myTool.createOptionsPanel();\n      return myAdditionalConfigPanel;\n    }\n    if (myKey.equals(HighlightDisplayKey.UNKNOWN_JAVADOC_TAG)){\n      myAdditionalConfigPanel = createAdditionalJavadocTagsPanel(inspectionProfile);\n    } else if (myKey.equals(HighlightDisplayKey.UNUSED_SYMBOL)){\n      myAdditionalConfigPanel = createUnusedSymbolSettingsPanel(inspectionProfile);\n    } else if (myAdditionalConfigPanel == null){\n      if (myKey.equals(HighlightDisplayKey.ILLEGAL_DEPENDENCY) ){\n        myAdditionalConfigPanel = createDependencyConigurationPanel();\n      }\n    }\n    return myAdditionalConfigPanel;\n  }","commit_id":"c0b2056c5f555dccd7135bce8f7a8920214ffa33","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public InspectionToolsPanel.LevelChooser getChooser() {\n    return myChooser;\n  }","id":55734,"modified_method":"public InspectionToolsPanel.LevelChooser getChooser() {\n    if (myChooser == null){\n      myChooser = new InspectionToolsPanel.LevelChooser();\n      myChooser.setLevel(myLevel);\n    }\n    return myChooser;\n  }","commit_id":"c0b2056c5f555dccd7135bce8f7a8920214ffa33","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"protected void initDescriptors() {\n    super.initDescriptors();\n    addGeneralDescriptors();\n  }","id":55735,"modified_method":"protected void initDescriptors() {\n    super.initDescriptors();\n    InspectionTool[] tools = mySelectedProfile.getInspectionTools();\n    for (int i = 0; i < tools.length; i++) {\n      final InspectionTool tool = tools[i];\n      if (tool instanceof LocalInspectionToolWrapper) {\n        myDescriptors.add(new Descriptor(tool, mySelectedProfile));\n      }\n    }\n    addGeneralDescriptors();\n  }","commit_id":"c0b2056c5f555dccd7135bce8f7a8920214ffa33","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"/**\n         * Calculate the number of internal links from a specific document, denoted by the document ID.\n         * This is a very important attribute for the ranking computation because it is the dividend for the previous ranking attribute.\n         * The internalLinks value will be requested several times for the same id during the convergenceStep()-steps; therefore it should use a cache.\n         * This cache is part of the CRHost data structure.\n         * @param id\n         * @return the number of links from the document, denoted by the ID to documents within the same domain\n         */\n        public int getInternalLinks(final byte[] id) {\n            int il = (int) this.internal_links_counter.get(id);\n            if (il >= 0) return il;\n            try {\n                SolrDocument doc = this.segment.fulltext().getDefaultConnector().getDocumentById(ASCII.String(id), CollectionSchema.inboundlinkscount_i.getSolrFieldName());\n                if (doc == null) {\n                    this.internal_links_counter.put(id, 0);\n                    return 0;\n                }\n                Object x = doc.getFieldValue(CollectionSchema.inboundlinkscount_i.getSolrFieldName());\n                il = (x == null) ? 0 : (x instanceof Integer) ? ((Integer) x).intValue() : (x instanceof Long) ? ((Long) x).intValue() : 0;\n                this.internal_links_counter.put(id, il);\n                return il;\n            } catch (IOException e) {\n                ConcurrentLog.logException(e);\n            } catch (SpaceExceededException e) {\n                ConcurrentLog.logException(e);\n            }\n            try {this.internal_links_counter.put(id, 0);} catch (SpaceExceededException e) {}\n            return 0;\n        }","id":55736,"modified_method":"/**\n         * Calculate the number of internal links from a specific document, denoted by the document ID.\n         * This is a very important attribute for the ranking computation because it is the dividend for the previous ranking attribute.\n         * The internalLinks value will be requested several times for the same id during the convergenceStep()-steps; therefore it should use a cache.\n         * This cache is part of the CRHost data structure.\n         * @param id\n         * @return the number of links from the document, denoted by the ID to documents within the same domain\n         */\n        public int getInternalLinks(final byte[] id) {\n            int il = (int) this.internal_links_counter.get(id);\n            if (il >= 0) return il;\n            SolrConnector connector = this.segment.fulltext().getDefaultConnector();\n            if (connector == null) return 0;\n            try {\n                SolrDocument doc = connector.getDocumentById(ASCII.String(id), CollectionSchema.inboundlinkscount_i.getSolrFieldName());\n                if (doc == null) {\n                    this.internal_links_counter.put(id, 0);\n                    return 0;\n                }\n                Object x = doc.getFieldValue(CollectionSchema.inboundlinkscount_i.getSolrFieldName());\n                il = (x == null) ? 0 : (x instanceof Integer) ? ((Integer) x).intValue() : (x instanceof Long) ? ((Long) x).intValue() : 0;\n                this.internal_links_counter.put(id, il);\n                return il;\n            } catch (IOException e) {\n                ConcurrentLog.logException(e);\n            } catch (SpaceExceededException e) {\n                ConcurrentLog.logException(e);\n            }\n            try {this.internal_links_counter.put(id, 0);} catch (SpaceExceededException e) {}\n            return 0;\n        }","commit_id":"2f1ec8d4a2e69ee5ec64f5f2ef313778e7ec790d","url":"https://github.com/yacy/yacy_search_server"},{"original_method":"public DigestURL getURL(final byte[] urlhash) {\r\n        assert urlhash != null;\r\n        if (urlhash == null || urlhash.length == 0) {\r\n            return null;\r\n        }\r\n        DigestURL u = this.delegatedURL.get(ASCII.String(urlhash));\r\n        if (u != null) {\r\n            return u;\r\n        }\r\n        CollectionConfiguration.FailDoc ee = this.errorURL.get(ASCII.String(urlhash));\r\n        if (ee != null) {\r\n            return ee.getDigestURL();\r\n        }\r\n        for (final Loader w: this.workers.values()) {\r\n            if (Base64Order.enhancedCoder.equal(w.request.url().hash(), urlhash)) {\r\n                return w.request.url();\r\n            }\r\n        }\r\n        final Request ne = this.noticeURL.get(urlhash);\r\n        if (ne != null) {\r\n            return ne.url();\r\n        }\r\n        return null;\r\n    }","id":55737,"modified_method":"public DigestURL getURL(final byte[] urlhash) {\r\n        assert urlhash != null;\r\n        if (urlhash == null || urlhash.length == 0) {\r\n            return null;\r\n        }\r\n        DigestURL u = this.delegatedURL.get(ASCII.String(urlhash));\r\n        if (u != null) {\r\n            return u;\r\n        }\r\n        for (final Loader w: this.workers.values()) {\r\n            if (Base64Order.enhancedCoder.equal(w.request.url().hash(), urlhash)) {\r\n                return w.request.url();\r\n            }\r\n        }\r\n        final Request ne = this.noticeURL.get(urlhash);\r\n        if (ne != null) {\r\n            return ne.url();\r\n        }\r\n        return null;\r\n    }","commit_id":"ced1a96f9c11414debb298c42caffb2fb4507b0f","url":"https://github.com/yacy/yacy_search_server"},{"original_method":"public CollectionConfiguration.FailDoc get(final String urlhash) {\n        CollectionConfiguration.FailDoc failDoc = null;\n        synchronized (this.cache) {\n            failDoc = this.cache.get(urlhash);\n        }\n        if (failDoc != null) return failDoc;\n        try {\n            SolrDocument doc = this.fulltext.getDefaultConnector().getDocumentById(urlhash);\n            if (doc == null) return null;\n            return new CollectionConfiguration.FailDoc(doc);\n        } catch (final IOException e) {\n            ConcurrentLog.logException(e);\n            return null;\n        }\n    }","id":55738,"modified_method":"public CollectionConfiguration.FailDoc get(final String urlhash) {\n        CollectionConfiguration.FailDoc failDoc = null;\n        synchronized (this.cache) {\n            failDoc = this.cache.get(urlhash);\n        }\n        if (failDoc != null) return failDoc;\n        try {\n            final SolrDocumentList docs = this.fulltext.getDefaultConnector().getDocumentListByQuery(CollectionSchema.id + \":\\\"\" + urlhash + \"\\\" AND \" + CollectionSchema.failtype_s.getSolrFieldName() + \":[* TO *]\", 0, 1);\n            if (docs == null || docs.isEmpty()) return null;\n            SolrDocument doc = docs.get(0);\n            if (doc == null) return null;\n            return new CollectionConfiguration.FailDoc(doc);\n        } catch (final IOException e) {\n            ConcurrentLog.logException(e);\n            return null;\n        }\n    }","commit_id":"ced1a96f9c11414debb298c42caffb2fb4507b0f","url":"https://github.com/yacy/yacy_search_server"},{"original_method":"public SolrVector yacy2solr(\n            final Map<String, Pattern> collections, final ResponseHeader responseHeader,\n            final Document document, final Condenser condenser, final DigestURL referrerURL, final String language,\n            final WebgraphConfiguration webgraph, final String sourceName) {\n        // we use the SolrCell design as index schema\n        SolrVector doc = new SolrVector();\n        final DigestURL digestURL = document.dc_source();\n        final String id = ASCII.String(digestURL.hash());\n        boolean allAttr = this.isEmpty();\n        String url = addURIAttributes(doc, allAttr, digestURL, Response.docType(digestURL));\n        \n        Set<ProcessType> processTypes = new LinkedHashSet<ProcessType>();\n        String host = digestURL.getHost();\n        String us = digestURL.toNormalform(true);\n        \n        int crawldepth = document.getDepth();\n        if ((allAttr || contains(CollectionSchema.crawldepth_i))) {\n            CollectionSchema.crawldepth_i.add(doc, crawldepth);\n        }\n        \n        if (allAttr || (contains(CollectionSchema.cr_host_chance_d) && contains(CollectionSchema.cr_host_count_i) && contains(CollectionSchema.cr_host_norm_i))) {\n            processTypes.add(ProcessType.CITATION); // postprocessing needed\n        }\n        \n        if (allAttr || contains(CollectionSchema.collection_sxt) && collections != null && collections.size() > 0) {\n            List<String> cs = new ArrayList<String>();\n            for (Map.Entry<String, Pattern> e: collections.entrySet()) {\n                if (e.getValue().matcher(url).matches()) cs.add(e.getKey());\n            }\n            add(doc, CollectionSchema.collection_sxt, cs);\n        }\n        char doctype = Response.docType(responseHeader.getContentType());\n        List<String> titles = document.titles();\n        if (allAttr || contains(CollectionSchema.title)) {\n            if (doctype == Response.DT_IMAGE || doctype == Response.DT_AUDIO || doctype == Response.DT_MOVIE) {\n                String mediatitle = responseHeader.get(HeaderFramework.X_YACY_MEDIA_TITLE, \"\");\n                if (mediatitle.length() > 0) {\n                    if (titles.size() == 0) titles.add(mediatitle); else titles.set(0, mediatitle);\n                }\n            }\n            add(doc, CollectionSchema.title, titles);\n            if ((allAttr || contains(CollectionSchema.title_exact_signature_l)) && titles.size() > 0) {\n                add(doc, CollectionSchema.title_exact_signature_l, EnhancedTextProfileSignature.getSignatureLong(titles.get(0)));\n            }\n            \n        }\n        if (allAttr || contains(CollectionSchema.title_count_i)) add(doc, CollectionSchema.title_count_i, titles.size());\n        if (allAttr || contains(CollectionSchema.title_chars_val)) {\n            ArrayList<Integer> cv = new ArrayList<Integer>(titles.size());\n            for (String s: titles) cv.add(new Integer(s.length()));\n            add(doc, CollectionSchema.title_chars_val, cv);\n        }\n        if (allAttr || contains(CollectionSchema.title_words_val)) {\n            ArrayList<Integer> cv = new ArrayList<Integer>(titles.size());\n            for (String s: titles) cv.add(new Integer(CommonPattern.SPACE.split(s).length));\n            add(doc, CollectionSchema.title_words_val, cv);\n        }\n\n        String[] descriptions = document.dc_description();\n        if (allAttr || contains(CollectionSchema.description_txt)) {\n            add(doc, CollectionSchema.description_txt, descriptions);\n            if ((allAttr || contains(CollectionSchema.description_exact_signature_l)) && descriptions != null && descriptions.length > 0) {\n                add(doc, CollectionSchema.description_exact_signature_l, EnhancedTextProfileSignature.getSignatureLong(descriptions));\n            }\n        }\n        if (allAttr || contains(CollectionSchema.description_count_i)) add(doc, CollectionSchema.description_count_i, descriptions.length);\n        if (allAttr || contains(CollectionSchema.description_chars_val)) {\n            ArrayList<Integer> cv = new ArrayList<Integer>(descriptions.length);\n            for (String s: descriptions) cv.add(new Integer(s.length()));\n            add(doc, CollectionSchema.description_chars_val, cv);\n        }\n        if (allAttr || contains(CollectionSchema.description_words_val)) {\n            ArrayList<Integer> cv = new ArrayList<Integer>(descriptions.length);\n            for (String s: descriptions) cv.add(new Integer(CommonPattern.SPACE.split(s).length));\n            add(doc, CollectionSchema.description_words_val, cv);\n        }\n\n        if (allAttr || contains(CollectionSchema.author)) {\n            String author = document.dc_creator();\n            if (author == null || author.length() == 0) author = document.dc_publisher();\n            add(doc, CollectionSchema.author, author);\n        }\n        if (allAttr || contains(CollectionSchema.content_type)) add(doc, CollectionSchema.content_type, new String[]{document.dc_format()});\n        if (allAttr || contains(CollectionSchema.last_modified)) {\n            Date lastModified = responseHeader == null ? new Date() : responseHeader.lastModified();\n            if (lastModified == null) lastModified = new Date();\n            if (document.getDate().before(lastModified)) lastModified = document.getDate();\n            add(doc, CollectionSchema.last_modified, lastModified);\n        }\n        if (allAttr || contains(CollectionSchema.keywords)) {\n            String keywords = document.dc_subject(' ');\n            if (doctype == Response.DT_IMAGE || doctype == Response.DT_AUDIO || doctype == Response.DT_MOVIE) {\n                keywords = responseHeader.get(HeaderFramework.X_YACY_MEDIA_KEYWORDS, keywords);\n            }\n            add(doc, CollectionSchema.keywords, keywords);\n        }\n        if (allAttr || contains(CollectionSchema.synonyms_sxt)) {\n            List<String> synonyms = condenser.synonyms();\n            add(doc, CollectionSchema.synonyms_sxt, synonyms);\n        }\n\n        // unique-fields; these values must be corrected during postprocessing. (the following logic is !^ (not-xor) but I prefer to write it that way as it is)\n        add(doc, CollectionSchema.http_unique_b, UNIQUE_HEURISTIC_PREFER_HTTPS ? digestURL.isHTTPS() : digestURL.isHTTP()); // this must be corrected afterwards during storage!\n        add(doc, CollectionSchema.www_unique_b, host != null && (UNIQUE_HEURISTIC_PREFER_WWWPREFIX ? host.startsWith(\"www.\") : !host.startsWith(\"www.\"))); // this must be corrected afterwards during storage!\n        \n        add(doc, CollectionSchema.exact_signature_l, condenser.exactSignature());\n        add(doc, CollectionSchema.exact_signature_unique_b, true); // this must be corrected afterwards during storage!\n        add(doc, CollectionSchema.exact_signature_copycount_i, 0); // this must be corrected afterwards during postprocessing!\n        add(doc, CollectionSchema.fuzzy_signature_l, condenser.fuzzySignature());\n        add(doc, CollectionSchema.fuzzy_signature_text_t, condenser.fuzzySignatureText());\n        add(doc, CollectionSchema.fuzzy_signature_unique_b, true); // this must be corrected afterwards during storage!\n        add(doc, CollectionSchema.fuzzy_signature_copycount_i, 0); // this must be corrected afterwards during postprocessing!\n        if (this.contains(CollectionSchema.exact_signature_unique_b) || this.contains(CollectionSchema.exact_signature_copycount_i) ||\n            this.contains(CollectionSchema.fuzzy_signature_l) || this.contains(CollectionSchema.fuzzy_signature_copycount_i) ||\n            this.contains(CollectionSchema.http_unique_b) || this.contains(CollectionSchema.www_unique_b)) {\n            processTypes.add(ProcessType.UNIQUE); \n        }\n        \n        // get list of all links; they will be shrinked by urls that appear in other fields of the solr schema\n        LinkedHashMap<DigestURL,String> inboundLinks = document.inboundLinks();\n        LinkedHashMap<DigestURL,String> outboundLinks = document.outboundLinks();\n\n        Subgraph subgraph = new Subgraph(inboundLinks.size(), outboundLinks.size());\n        List<ImageEntry> images = new ArrayList<ImageEntry>();\n        int c = 0;\n        final Object parser = document.getParserObject();\n        boolean containsCanonical = false;\n        if (parser instanceof ContentScraper) {\n            final ContentScraper html = (ContentScraper) parser;\n            images = html.getImages();\n\n            // header tags\n            int h = 0;\n            int f = 1;\n            String[] hs;\n\n            hs = html.getHeadlines(1); h = h | (hs.length > 0 ? f : 0); f = f * 2; add(doc, CollectionSchema.h1_txt, hs); add(doc, CollectionSchema.h1_i, hs.length);\n            hs = html.getHeadlines(2); h = h | (hs.length > 0 ? f : 0); f = f * 2; add(doc, CollectionSchema.h2_txt, hs); add(doc, CollectionSchema.h2_i, hs.length);\n            hs = html.getHeadlines(3); h = h | (hs.length > 0 ? f : 0); f = f * 2; add(doc, CollectionSchema.h3_txt, hs); add(doc, CollectionSchema.h3_i, hs.length);\n            hs = html.getHeadlines(4); h = h | (hs.length > 0 ? f : 0); f = f * 2; add(doc, CollectionSchema.h4_txt, hs); add(doc, CollectionSchema.h4_i, hs.length);\n            hs = html.getHeadlines(5); h = h | (hs.length > 0 ? f : 0); f = f * 2; add(doc, CollectionSchema.h5_txt, hs); add(doc, CollectionSchema.h5_i, hs.length);\n            hs = html.getHeadlines(6); h = h | (hs.length > 0 ? f : 0); f = f * 2; add(doc, CollectionSchema.h6_txt, hs); add(doc, CollectionSchema.h6_i, hs.length);\n       \n            add(doc, CollectionSchema.htags_i, h);\n            add(doc, CollectionSchema.schema_org_breadcrumb_i, html.breadcrumbCount());\n\n            // meta tags: Open Graph properties\n            String og;\n            og = html.getMetas().get(\"og:title\"); if (og != null) add(doc, CollectionSchema.opengraph_title_t, og);\n            og = html.getMetas().get(\"og:type\"); if (og != null) add(doc, CollectionSchema.opengraph_type_s, og);\n            og = html.getMetas().get(\"og:url\"); if (og != null) add(doc, CollectionSchema.opengraph_url_s, og);\n            og = html.getMetas().get(\"og:image\"); if (og != null) add(doc, CollectionSchema.opengraph_image_s, og);\n\n            // noindex and nofollow attributes\n            // from HTML (meta-tag in HTML header: robots)\n            // and HTTP header (X-Robots-Tag property)\n            // coded as binary value:\n            // bit  0: \"all\" contained in html header meta\n            // bit  1: \"index\" contained in html header meta\n            // bit  2: \"follow\" contained in html header meta\n            // bit  3: \"noindex\" contained in html header meta\n            // bit  4: \"nofollow\" contained in html header meta\n            // bit  8: \"all\" contained in http header X-Robots-Tag\n            // bit  9: \"noindex\" contained in http header X-Robots-Tag\n            // bit 10: \"nofollow\" contained in http header X-Robots-Tag\n            // bit 11: \"noarchive\" contained in http header X-Robots-Tag\n            // bit 12: \"nosnippet\" contained in http header X-Robots-Tag\n            // bit 13: \"noodp\" contained in http header X-Robots-Tag\n            // bit 14: \"notranslate\" contained in http header X-Robots-Tag\n            // bit 15: \"noimageindex\" contained in http header X-Robots-Tag\n            // bit 16: \"unavailable_after\" contained in http header X-Robots-Tag\n            int b = 0;\n            final String robots_meta = html.getMetas().get(\"robots\");\n            // this tag may have values: all, index, noindex, nofollow; see http://www.robotstxt.org/meta.html\n            if (robots_meta != null) {\n                if (robots_meta.indexOf(\"all\",0) >= 0) b += 1;      // set bit 0\n                if (robots_meta.indexOf(\"index\",0) == 0 || robots_meta.indexOf(\" index\",0) >= 0 || robots_meta.indexOf(\",index\",0) >= 0 ) b += 2; // set bit 1\n                if (robots_meta.indexOf(\"follow\",0) == 0 || robots_meta.indexOf(\" follow\",0) >= 0 || robots_meta.indexOf(\",follow\",0) >= 0 ) b += 4; // set bit 2\n                if (robots_meta.indexOf(\"noindex\",0) >= 0) b += 8;  // set bit 3\n                if (robots_meta.indexOf(\"nofollow\",0) >= 0) b += 16; // set bit 4\n            }\n            String x_robots_tag = \"\";\n            if (responseHeader != null) {\n                x_robots_tag = responseHeader.get(HeaderFramework.X_ROBOTS_TAG, \"\");\n                if (x_robots_tag.isEmpty()) {\n                    x_robots_tag = responseHeader.get(HeaderFramework.X_ROBOTS, \"\");\n                }\n            }\n            if (!x_robots_tag.isEmpty()) {\n                // this tag may have values: all, noindex, nofollow, noarchive, nosnippet, noodp, notranslate, noimageindex, unavailable_after, none; see https://developers.google.com/webmasters/control-crawl-index/docs/robots_meta_tag?hl=de\n                if (x_robots_tag.indexOf(\"all\",0) >= 0) b += 1<<8;                // set bit 8\n                if (x_robots_tag.indexOf(\"noindex\",0) >= 0||x_robots_tag.indexOf(\"none\",0) >= 0) b += 1<<9;   // set bit 9\n                if (x_robots_tag.indexOf(\"nofollow\",0) >= 0||x_robots_tag.indexOf(\"none\",0) >= 0) b += 1<<10; // set bit 10\n                if (x_robots_tag.indexOf(\"noarchive\",0) >= 0) b += 1<<11;         // set bit 11\n                if (x_robots_tag.indexOf(\"nosnippet\",0) >= 0) b += 1<<12;         // set bit 12\n                if (x_robots_tag.indexOf(\"noodp\",0) >= 0) b += 1<<13;             // set bit 13\n                if (x_robots_tag.indexOf(\"notranslate\",0) >= 0) b += 1<<14;       // set bit 14\n                if (x_robots_tag.indexOf(\"noimageindex\",0) >= 0) b += 1<<15;      // set bit 15\n                if (x_robots_tag.indexOf(\"unavailable_after\",0) >= 0) b += 1<<16; // set bit 16\n            }\n            add(doc, CollectionSchema.robots_i, b);\n\n            // meta tags: generator\n            final String generator = html.getMetas().get(\"generator\");\n            if (generator != null) add(doc, CollectionSchema.metagenerator_t, generator);\n\n            // bold, italic\n            final String[] bold = html.getBold();\n            add(doc, CollectionSchema.boldcount_i, bold.length);\n            if (bold.length > 0) {\n                add(doc, CollectionSchema.bold_txt, bold);\n                if (allAttr || contains(CollectionSchema.bold_val)) {\n                    add(doc, CollectionSchema.bold_val, html.getBoldCount(bold));\n                }\n            }\n            final String[] italic = html.getItalic();\n            add(doc, CollectionSchema.italiccount_i, italic.length);\n            if (italic.length > 0) {\n                add(doc, CollectionSchema.italic_txt, italic);\n                if (allAttr || contains(CollectionSchema.italic_val)) {\n                    add(doc, CollectionSchema.italic_val, html.getItalicCount(italic));\n                }\n            }\n            final String[] underline = html.getUnderline();\n            add(doc, CollectionSchema.underlinecount_i, underline.length);\n            if (underline.length > 0) {\n                add(doc, CollectionSchema.underline_txt, underline);\n                if (allAttr || contains(CollectionSchema.underline_val)) {\n                    add(doc, CollectionSchema.underline_val, html.getUnderlineCount(underline));\n                }\n            }\n            final String[] li = html.getLi();\n            add(doc, CollectionSchema.licount_i, li.length);\n            if (li.length > 0) add(doc, CollectionSchema.li_txt, li);\n\n            // images\n            final ArrayList<String> imgprots = new ArrayList<String>(images.size());\n            final Integer[] imgheights = new Integer[images.size()];\n            final Integer[] imgwidths = new Integer[images.size()];\n            final Integer[] imgpixels = new Integer[images.size()];\n            final String[] imgstubs = new String[images.size()];\n            final String[] imgalts  = new String[images.size()];\n            int withalt = 0;\n            int i = 0;\n            LinkedHashSet<String> images_text_map = new LinkedHashSet<String>();\n            for (final ImageEntry ie: images) {\n                final MultiProtocolURL uri = ie.url();\n                inboundLinks.remove(uri);\n                outboundLinks.remove(uri);\n                imgheights[i] = ie.height();\n                imgwidths[i] = ie.width();\n                imgpixels[i] = ie.height() < 0 || ie.width() < 0 ? -1 : ie.height() * ie.width();\n                String protocol = uri.getProtocol();\n                imgprots.add(protocol);\n                imgstubs[i] = uri.toString().substring(protocol.length() + 3);\n                imgalts[i] = ie.alt();\n                for (String it: uri.toTokens().split(\" \")) images_text_map.add(it);\n                if (ie.alt() != null && ie.alt().length() > 0) {\n                    SentenceReader sr = new SentenceReader(ie.alt());\n                    while (sr.hasNext()) images_text_map.add(sr.next().toString());\n                    withalt++;\n                }\n                i++;\n            }\n            StringBuilder images_text = new StringBuilder(images_text_map.size() * 6 + 1);\n            for (String s: images_text_map) images_text.append(s.trim()).append(' ');\n            if (allAttr || contains(CollectionSchema.imagescount_i)) add(doc, CollectionSchema.imagescount_i, images.size());\n            if (allAttr || contains(CollectionSchema.images_protocol_sxt)) add(doc, CollectionSchema.images_protocol_sxt, protocolList2indexedList(imgprots));\n            if (allAttr || contains(CollectionSchema.images_urlstub_sxt)) add(doc, CollectionSchema.images_urlstub_sxt, imgstubs);\n            if (allAttr || contains(CollectionSchema.images_alt_sxt)) add(doc, CollectionSchema.images_alt_sxt, imgalts);\n            if (allAttr || contains(CollectionSchema.images_height_val)) add(doc, CollectionSchema.images_height_val, imgheights);\n            if (allAttr || contains(CollectionSchema.images_width_val)) add(doc, CollectionSchema.images_width_val, imgwidths);\n            if (allAttr || contains(CollectionSchema.images_pixel_val)) add(doc, CollectionSchema.images_pixel_val, imgpixels);\n            if (allAttr || contains(CollectionSchema.images_withalt_i)) add(doc, CollectionSchema.images_withalt_i, withalt);\n            if (allAttr || contains(CollectionSchema.images_text_t)) add(doc, CollectionSchema.images_text_t, images_text.toString().trim());\n\n            // style sheets\n            if (allAttr || contains(CollectionSchema.css_tag_sxt)) {\n                final Map<DigestURL, String> csss = html.getCSS();\n                final String[] css_tag = new String[csss.size()];\n                final String[] css_url = new String[csss.size()];\n                c = 0;\n                for (final Map.Entry<DigestURL, String> entry: csss.entrySet()) {\n                    final String cssurl = entry.getKey().toNormalform(false);\n                    inboundLinks.remove(cssurl);\n                    outboundLinks.remove(cssurl);\n                    css_tag[c] =\n                        \"<link rel=\\\"stylesheet\\\" type=\\\"text/css\\\" media=\\\"\" + entry.getValue() + \"\\\"\" +\n                        \" href=\\\"\"+ cssurl + \"\\\" />\";\n                    css_url[c] = cssurl;\n                    c++;\n                }\n                add(doc, CollectionSchema.csscount_i, css_tag.length);\n                if (css_tag.length > 0) add(doc, CollectionSchema.css_tag_sxt, css_tag);\n                if (css_url.length > 0) add(doc, CollectionSchema.css_url_sxt, css_url);\n            }\n\n            // Scripts\n            if (allAttr || contains(CollectionSchema.scripts_sxt)) {\n                final Set<DigestURL> scriptss = html.getScript();\n                final String[] scripts = new String[scriptss.size()];\n                c = 0;\n                for (final DigestURL u: scriptss) {\n                    inboundLinks.remove(u);\n                    outboundLinks.remove(u);\n                    scripts[c++] = u.toNormalform(false);\n                }\n                add(doc, CollectionSchema.scriptscount_i, scripts.length);\n                if (scripts.length > 0) add(doc, CollectionSchema.scripts_sxt, scripts);\n            }\n\n            // Frames\n            if (allAttr || contains(CollectionSchema.frames_sxt)) {\n                final Set<DigestURL> framess = html.getFrames();\n                final String[] frames = new String[framess.size()];\n                c = 0;\n                for (final DigestURL u: framess) {\n                    inboundLinks.remove(u);\n                    outboundLinks.remove(u);\n                    frames[c++] = u.toNormalform(false);\n                }\n                add(doc, CollectionSchema.framesscount_i, frames.length);\n                if (frames.length > 0) {\n                    add(doc, CollectionSchema.frames_sxt, frames);\n                    //webgraph.addEdges(subgraph, digestURI, responseHeader, collections, crawldepth, alllinks, images, true, framess, citations); // add here because links have been removed from remaining inbound/outbound\n                }\n            }\n\n            // IFrames\n            if (allAttr || contains(CollectionSchema.iframes_sxt)) {\n                final Set<DigestURL> iframess = html.getIFrames();\n                final String[] iframes = new String[iframess.size()];\n                c = 0;\n                for (final DigestURL u: iframess) {\n                    inboundLinks.remove(u);\n                    outboundLinks.remove(u);\n                    iframes[c++] = u.toNormalform(false);\n                }\n                add(doc, CollectionSchema.iframesscount_i, iframes.length);\n                if (iframes.length > 0) {\n                    add(doc, CollectionSchema.iframes_sxt, iframes);\n                    //webgraph.addEdges(subgraph, digestURI, responseHeader, collections, crawldepth, alllinks, images, true, iframess, citations); // add here because links have been removed from remaining inbound/outbound\n                }\n            }\n\n            // canonical tag\n            if (allAttr || contains(CollectionSchema.canonical_s)) {\n                DigestURL canonical = html.getCanonical();\n                // if there is no canonical in the html then look into the http header:\n                if (canonical == null) {\n                    String link = responseHeader.get(\"Link\", null);\n                    int p;\n                    if (link != null && ((p = link.indexOf(\"rel=\\\"canonical\\\"\")) > 0)) {\n                        link = link.substring(0, p).trim();\n                        p = link.indexOf('<');\n                        int q = link.lastIndexOf('>');\n                        if (p >= 0 && q > 0) {\n                            link = link.substring(p + 1, q);\n                            try {\n                                canonical = new DigestURL(link);\n                            } catch (MalformedURLException e) {}\n                        }\n                    }\n                }\n                if (canonical != null && !ASCII.String(canonical.hash()).equals(id)) {\n                    containsCanonical = true;\n                    inboundLinks.remove(canonical);\n                    outboundLinks.remove(canonical);\n                    add(doc, CollectionSchema.canonical_s, canonical.toNormalform(false));\n                    // set a flag if this is equal to sku\n                    if (contains(CollectionSchema.canonical_equal_sku_b)) {\n                        add(doc, CollectionSchema.canonical_equal_sku_b, canonical.equals(us));\n                    }\n                }\n            }\n\n            // meta refresh tag\n            if (allAttr || contains(CollectionSchema.refresh_s)) {\n                String refresh = html.getRefreshPath();\n                if (refresh != null && refresh.length() > 0) {\n                    MultiProtocolURL refreshURL;\n                    try {\n                        refreshURL = refresh.startsWith(\"http\") ? new MultiProtocolURL(html.getRefreshPath()) : new MultiProtocolURL(digestURL, html.getRefreshPath());\n                        if (refreshURL != null) {\n                            inboundLinks.remove(refreshURL);\n                            outboundLinks.remove(refreshURL);\n                            add(doc, CollectionSchema.refresh_s, refreshURL.toNormalform(false));\n                        }\n                    } catch (final MalformedURLException e) {\n                        add(doc, CollectionSchema.refresh_s, refresh);\n                    }\n                }\n            }\n\n            // flash embedded\n            if (allAttr || contains(CollectionSchema.flash_b)) {\n                MultiProtocolURL[] flashURLs = html.getFlash();\n                for (MultiProtocolURL u: flashURLs) {\n                    // remove all flash links from ibound/outbound links\n                    inboundLinks.remove(u);\n                    outboundLinks.remove(u);\n                }\n                add(doc, CollectionSchema.flash_b, flashURLs.length > 0);\n            }\n\n            // generic evaluation pattern\n            for (final String model: html.getEvaluationModelNames()) {\n                if (allAttr || contains(\"ext_\" + model + \"_txt\")) {\n                    final String[] scorenames = html.getEvaluationModelScoreNames(model);\n                    if (scorenames.length > 0) {\n                        add(doc, CollectionSchema.valueOf(\"ext_\" + model + \"_txt\"), scorenames);\n                        add(doc, CollectionSchema.valueOf(\"ext_\" + model + \"_val\"), html.getEvaluationModelScoreCounts(model, scorenames));\n                    }\n                }\n            }\n\n            // response time\n            add(doc, CollectionSchema.responsetime_i, responseHeader == null ? 0 : Integer.parseInt(responseHeader.get(HeaderFramework.RESPONSE_TIME_MILLIS, \"0\")));\n            \n            // hreflang link tag, see http://support.google.com/webmasters/bin/answer.py?hl=de&answer=189077\n            if (allAttr || (contains(CollectionSchema.hreflang_url_sxt) && contains(CollectionSchema.hreflang_cc_sxt))) {\n                final String[] ccs = new String[html.getHreflang().size()];\n                final String[] urls = new String[html.getHreflang().size()];\n                c = 0;\n                for (Map.Entry<String, DigestURL> e: html.getHreflang().entrySet()) {\n                    ccs[c] = e.getKey();\n                    urls[c] = e.getValue().toNormalform(true);\n                    c++;\n                }\n                add(doc, CollectionSchema.hreflang_cc_sxt, ccs);\n                add(doc, CollectionSchema.hreflang_url_sxt, urls);\n            }\n\n            // page navigation url, see http://googlewebmastercentral.blogspot.de/2011/09/pagination-with-relnext-and-relprev.html\n            if (allAttr || (contains(CollectionSchema.navigation_url_sxt) && contains(CollectionSchema.navigation_type_sxt))) {\n                final String[] navs = new String[html.getNavigation().size()];\n                final String[] urls = new String[html.getNavigation().size()];\n                c = 0;\n                for (Map.Entry<String, DigestURL> e: html.getNavigation().entrySet()) {\n                    navs[c] = e.getKey();\n                    urls[c] = e.getValue().toNormalform(true);\n                    c++;\n                }\n                add(doc, CollectionSchema.navigation_type_sxt, navs);\n                add(doc, CollectionSchema.navigation_url_sxt, urls);\n                \n            }\n\n            // publisher url as defined in http://support.google.com/plus/answer/1713826?hl=de\n            if (allAttr || contains(CollectionSchema.publisher_url_s) && html.getPublisherLink() != null) {\n                add(doc, CollectionSchema.publisher_url_s, html.getPublisherLink().toNormalform(true));\n            }\n        }\n\n        if (parser instanceof DCEntry) {\n            // the document was created with a surrogate parsing; overwrite all md: -entries to Solr\n            DCEntry dcentry = (DCEntry) parser;\n            for (Map.Entry<String, String[]> entry: dcentry.getMap().entrySet()) {\n                String tag = entry.getKey();\n                if (!tag.startsWith(\"md:\") || tag.length() < 4) continue;\n                CollectionSchema solr_field = CollectionSchema.valueOf(tag.substring(3));\n                if (solr_field == null) continue;\n                String[] values = entry.getValue();\n                if (values == null || values.length == 0) continue;\n                if (allAttr || contains(solr_field)) {\n                    add(doc, solr_field, values);\n                }\n            }\n        }\n        \n        String content = document.getTextString();\n        String tokens = digestURL.toTokens();\n        if (content == null || content.length() == 0) {\n            content = tokens;\n        } else {\n            String[] t = tokens.split(\" \");\n            for (String r: t) {\n                if (r.length() > 0 &&\n                    content.indexOf(\" \" + r + \" \") < 0 &&\n                    !content.startsWith(r + \" \") &&\n                    !content.endsWith(\" \" + r)) content += \" \" + r;\n            }\n        }\n        \n        if ((allAttr || contains(CollectionSchema.images_text_t)) && MultiProtocolURL.isImage(MultiProtocolURL.getFileExtension(digestURL.getFileName()))) {\n            add(doc, CollectionSchema.images_text_t, content); // the content may contain the exif data from the image parser\n            content = digestURL.toTokens(); // remove all other entry but the url tokens\n        }\n        \n        // content (must be written after special parser data, since this can influence the content)\n        if (allAttr || contains(CollectionSchema.text_t)) add(doc, CollectionSchema.text_t, content);\n        if (allAttr || contains(CollectionSchema.wordcount_i)) {\n            if (content.length() == 0) {\n                add(doc, CollectionSchema.wordcount_i, 0);\n            } else {\n                int contentwc = 1;\n                for (int i = content.length() - 1; i >= 0; i--) if (content.charAt(i) == ' ') contentwc++;\n                add(doc, CollectionSchema.wordcount_i, contentwc);\n            }\n        }\n        \n        // statistics about the links\n        if (allAttr || contains(CollectionSchema.linkscount_i)) add(doc, CollectionSchema.linkscount_i, inboundLinks.size() + outboundLinks.size());\n        if (allAttr || contains(CollectionSchema.linksnofollowcount_i)) add(doc, CollectionSchema.linksnofollowcount_i, document.inboundLinkNofollowCount() + document.outboundLinkNofollowCount());\n        if (allAttr || contains(CollectionSchema.inboundlinkscount_i)) add(doc, CollectionSchema.inboundlinkscount_i, inboundLinks.size());\n        if (allAttr || contains(CollectionSchema.inboundlinksnofollowcount_i)) add(doc, CollectionSchema.inboundlinksnofollowcount_i, document.inboundLinkNofollowCount());\n        if (allAttr || contains(CollectionSchema.outboundlinkscount_i)) add(doc, CollectionSchema.outboundlinkscount_i, outboundLinks.size());\n        if (allAttr || contains(CollectionSchema.outboundlinksnofollowcount_i)) add(doc, CollectionSchema.outboundlinksnofollowcount_i, document.outboundLinkNofollowCount());\n        \n        // create a subgraph\n        if (!containsCanonical && webgraph != null) {\n            // a document with canonical tag should not get a webgraph relation, because that belongs to the canonical document\n            List<SolrInputDocument> edges = webgraph.getEdges(subgraph, digestURL, responseHeader, collections, crawldepth, images, processTypes, document.getAnchors(), sourceName);\n            // this also enriched the subgraph\n            doc.webgraphDocuments.addAll(edges);\n        } else {\n            if (allAttr ||\n                contains(CollectionSchema.inboundlinks_protocol_sxt) ||\n                contains(CollectionSchema.inboundlinks_urlstub_sxt) ||\n                contains(CollectionSchema.inboundlinks_anchortext_txt) ||\n                contains(CollectionSchema.outboundlinks_protocol_sxt) ||\n                contains(CollectionSchema.outboundlinks_urlstub_sxt) ||\n                contains(CollectionSchema.outboundlinks_anchortext_txt)) {\n                for (final AnchorURL target_url: document.getAnchors()) {\n                    enrichSubgraph(subgraph, digestURL, target_url);\n                }\n            }\n        }\n            \n        // attach the subgraph content\n        if (allAttr || contains(CollectionSchema.inboundlinks_protocol_sxt)) add(doc, CollectionSchema.inboundlinks_protocol_sxt, protocolList2indexedList(subgraph.urlProtocols[0]));\n        if (allAttr || contains(CollectionSchema.inboundlinks_urlstub_sxt)) add(doc, CollectionSchema.inboundlinks_urlstub_sxt, subgraph.urlStubs[0]);\n        if (allAttr || contains(CollectionSchema.inboundlinks_anchortext_txt)) add(doc, CollectionSchema.inboundlinks_anchortext_txt, subgraph.urlAnchorTexts[0]);\n        if (allAttr || contains(CollectionSchema.outboundlinks_protocol_sxt)) add(doc, CollectionSchema.outboundlinks_protocol_sxt, protocolList2indexedList(subgraph.urlProtocols[1]));\n        if (allAttr || contains(CollectionSchema.outboundlinks_urlstub_sxt)) add(doc, CollectionSchema.outboundlinks_urlstub_sxt, subgraph.urlStubs[1]);\n        if (allAttr || contains(CollectionSchema.outboundlinks_anchortext_txt)) add(doc, CollectionSchema.outboundlinks_anchortext_txt, subgraph.urlAnchorTexts[1]);\n        \n        // charset\n        if (allAttr || contains(CollectionSchema.charset_s)) add(doc, CollectionSchema.charset_s, document.getCharset());\n\n        // coordinates\n        if (document.lat() != 0.0 && document.lon() != 0.0) {\n            if (allAttr || contains(CollectionSchema.coordinate_p)) add(doc, CollectionSchema.coordinate_p, Double.toString(document.lat()) + \",\" + Double.toString(document.lon()));\n        }\n        if (allAttr || contains(CollectionSchema.httpstatus_i)) add(doc, CollectionSchema.httpstatus_i, responseHeader == null ? 200 : responseHeader.getStatusCode());\n\n        // fields that were additionally in URIMetadataRow\n        Date loadDate = new Date();\n        Date modDate = responseHeader == null ? new Date() : responseHeader.lastModified();\n        if (modDate.getTime() > loadDate.getTime()) modDate = loadDate;\n        int size = (int) Math.max(document.dc_source().length(), responseHeader == null ? 0 : responseHeader.getContentLength());\n        if (allAttr || contains(CollectionSchema.load_date_dt)) add(doc, CollectionSchema.load_date_dt, loadDate);\n        if (allAttr || contains(CollectionSchema.fresh_date_dt)) add(doc, CollectionSchema.fresh_date_dt, new Date(loadDate.getTime() + Math.max(0, loadDate.getTime() - modDate.getTime()) / 2)); // freshdate, computed with Proxy-TTL formula\n        if ((allAttr || contains(CollectionSchema.referrer_id_s)) && referrerURL != null) add(doc, CollectionSchema.referrer_id_s, ASCII.String(referrerURL.hash()));\n        //if (allAttr || contains(SolrField.md5_s)) add(solrdoc, SolrField.md5_s, new byte[0]);\n        if (allAttr || contains(CollectionSchema.publisher_t)) add(doc, CollectionSchema.publisher_t, document.dc_publisher());\n        if ((allAttr || contains(CollectionSchema.language_s)) && language != null) add(doc, CollectionSchema.language_s, language);\n        if (allAttr || contains(CollectionSchema.size_i)) add(doc, CollectionSchema.size_i, size);\n        if (allAttr || contains(CollectionSchema.audiolinkscount_i)) add(doc, CollectionSchema.audiolinkscount_i, document.getAudiolinks().size());\n        if (allAttr || contains(CollectionSchema.videolinkscount_i)) add(doc, CollectionSchema.videolinkscount_i, document.getVideolinks().size());\n        if (allAttr || contains(CollectionSchema.applinkscount_i)) add(doc, CollectionSchema.applinkscount_i, document.getApplinks().size());\n\n        // write generic navigation\n        // there are no pre-defined solr fields for navigation because the vocabulary is generic\n        // we use dynamically allocated solr fields for this.\n        // It must be a multi-value string/token field, therefore we use _sxt extensions for the field names\n        for (Map.Entry<String, Set<String>> facet: document.getGenericFacets().entrySet()) {\n            String facetName = facet.getKey();\n            Set<String> facetValues = facet.getValue();\n            doc.setField(CollectionSchema.VOCABULARY_PREFIX + facetName + CollectionSchema.VOCABULARY_SUFFIX, facetValues.toArray(new String[facetValues.size()]));\n        }\n\n        if ((allAttr || contains(CollectionSchema.process_sxt)) && processTypes.size() > 0) {\n            List<String> p = new ArrayList<String>();\n            for (ProcessType t: processTypes) p.add(t.name());\n            add(doc, CollectionSchema.process_sxt, p);\n            if (allAttr || contains(CollectionSchema.harvestkey_s)) {\n                add(doc, CollectionSchema.harvestkey_s, sourceName);\n            }\n        }\n        return doc;\n    }","id":55739,"modified_method":"public SolrVector yacy2solr(\n            final Map<String, Pattern> collections, final ResponseHeader responseHeader,\n            final Document document, final Condenser condenser, final DigestURL referrerURL, final String language,\n            final WebgraphConfiguration webgraph, final String sourceName) {\n        // we use the SolrCell design as index schema\n        SolrVector doc = new SolrVector();\n        final DigestURL digestURL = document.dc_source();\n        boolean allAttr = this.isEmpty();\n        String url = addURIAttributes(doc, allAttr, digestURL, Response.docType(digestURL));\n        \n        Set<ProcessType> processTypes = new LinkedHashSet<ProcessType>();\n        String host = digestURL.getHost();\n        \n        int crawldepth = document.getDepth();\n        if ((allAttr || contains(CollectionSchema.crawldepth_i))) {\n            CollectionSchema.crawldepth_i.add(doc, crawldepth);\n        }\n        \n        if (allAttr || (contains(CollectionSchema.cr_host_chance_d) && contains(CollectionSchema.cr_host_count_i) && contains(CollectionSchema.cr_host_norm_i))) {\n            processTypes.add(ProcessType.CITATION); // postprocessing needed\n        }\n        \n        if (allAttr || contains(CollectionSchema.collection_sxt) && collections != null && collections.size() > 0) {\n            List<String> cs = new ArrayList<String>();\n            for (Map.Entry<String, Pattern> e: collections.entrySet()) {\n                if (e.getValue().matcher(url).matches()) cs.add(e.getKey());\n            }\n            add(doc, CollectionSchema.collection_sxt, cs);\n        }\n        char doctype = Response.docType(responseHeader.getContentType());\n        List<String> titles = document.titles();\n        if (allAttr || contains(CollectionSchema.title)) {\n            if (doctype == Response.DT_IMAGE || doctype == Response.DT_AUDIO || doctype == Response.DT_MOVIE) {\n                String mediatitle = responseHeader.get(HeaderFramework.X_YACY_MEDIA_TITLE, \"\");\n                if (mediatitle.length() > 0) {\n                    if (titles.size() == 0) titles.add(mediatitle); else titles.set(0, mediatitle);\n                }\n            }\n            add(doc, CollectionSchema.title, titles);\n            if ((allAttr || contains(CollectionSchema.title_exact_signature_l)) && titles.size() > 0) {\n                add(doc, CollectionSchema.title_exact_signature_l, EnhancedTextProfileSignature.getSignatureLong(titles.get(0)));\n            }\n            \n        }\n        if (allAttr || contains(CollectionSchema.title_count_i)) add(doc, CollectionSchema.title_count_i, titles.size());\n        if (allAttr || contains(CollectionSchema.title_chars_val)) {\n            ArrayList<Integer> cv = new ArrayList<Integer>(titles.size());\n            for (String s: titles) cv.add(new Integer(s.length()));\n            add(doc, CollectionSchema.title_chars_val, cv);\n        }\n        if (allAttr || contains(CollectionSchema.title_words_val)) {\n            ArrayList<Integer> cv = new ArrayList<Integer>(titles.size());\n            for (String s: titles) cv.add(new Integer(CommonPattern.SPACE.split(s).length));\n            add(doc, CollectionSchema.title_words_val, cv);\n        }\n\n        String[] descriptions = document.dc_description();\n        if (allAttr || contains(CollectionSchema.description_txt)) {\n            add(doc, CollectionSchema.description_txt, descriptions);\n            if ((allAttr || contains(CollectionSchema.description_exact_signature_l)) && descriptions != null && descriptions.length > 0) {\n                add(doc, CollectionSchema.description_exact_signature_l, EnhancedTextProfileSignature.getSignatureLong(descriptions));\n            }\n        }\n        if (allAttr || contains(CollectionSchema.description_count_i)) add(doc, CollectionSchema.description_count_i, descriptions.length);\n        if (allAttr || contains(CollectionSchema.description_chars_val)) {\n            ArrayList<Integer> cv = new ArrayList<Integer>(descriptions.length);\n            for (String s: descriptions) cv.add(new Integer(s.length()));\n            add(doc, CollectionSchema.description_chars_val, cv);\n        }\n        if (allAttr || contains(CollectionSchema.description_words_val)) {\n            ArrayList<Integer> cv = new ArrayList<Integer>(descriptions.length);\n            for (String s: descriptions) cv.add(new Integer(CommonPattern.SPACE.split(s).length));\n            add(doc, CollectionSchema.description_words_val, cv);\n        }\n\n        if (allAttr || contains(CollectionSchema.author)) {\n            String author = document.dc_creator();\n            if (author == null || author.length() == 0) author = document.dc_publisher();\n            add(doc, CollectionSchema.author, author);\n        }\n        if (allAttr || contains(CollectionSchema.content_type)) add(doc, CollectionSchema.content_type, new String[]{document.dc_format()});\n        if (allAttr || contains(CollectionSchema.last_modified)) {\n            Date lastModified = responseHeader == null ? new Date() : responseHeader.lastModified();\n            if (lastModified == null) lastModified = new Date();\n            if (document.getDate().before(lastModified)) lastModified = document.getDate();\n            add(doc, CollectionSchema.last_modified, lastModified);\n        }\n        if (allAttr || contains(CollectionSchema.keywords)) {\n            String keywords = document.dc_subject(' ');\n            if (doctype == Response.DT_IMAGE || doctype == Response.DT_AUDIO || doctype == Response.DT_MOVIE) {\n                keywords = responseHeader.get(HeaderFramework.X_YACY_MEDIA_KEYWORDS, keywords);\n            }\n            add(doc, CollectionSchema.keywords, keywords);\n        }\n        if (allAttr || contains(CollectionSchema.synonyms_sxt)) {\n            List<String> synonyms = condenser.synonyms();\n            add(doc, CollectionSchema.synonyms_sxt, synonyms);\n        }\n\n        // unique-fields; these values must be corrected during postprocessing. (the following logic is !^ (not-xor) but I prefer to write it that way as it is)\n        add(doc, CollectionSchema.http_unique_b, UNIQUE_HEURISTIC_PREFER_HTTPS ? digestURL.isHTTPS() : digestURL.isHTTP()); // this must be corrected afterwards during storage!\n        add(doc, CollectionSchema.www_unique_b, host != null && (UNIQUE_HEURISTIC_PREFER_WWWPREFIX ? host.startsWith(\"www.\") : !host.startsWith(\"www.\"))); // this must be corrected afterwards during storage!\n        \n        add(doc, CollectionSchema.exact_signature_l, condenser.exactSignature());\n        add(doc, CollectionSchema.exact_signature_unique_b, true); // this must be corrected afterwards during storage!\n        add(doc, CollectionSchema.exact_signature_copycount_i, 0); // this must be corrected afterwards during postprocessing!\n        add(doc, CollectionSchema.fuzzy_signature_l, condenser.fuzzySignature());\n        add(doc, CollectionSchema.fuzzy_signature_text_t, condenser.fuzzySignatureText());\n        add(doc, CollectionSchema.fuzzy_signature_unique_b, true); // this must be corrected afterwards during storage!\n        add(doc, CollectionSchema.fuzzy_signature_copycount_i, 0); // this must be corrected afterwards during postprocessing!\n        if (this.contains(CollectionSchema.exact_signature_unique_b) || this.contains(CollectionSchema.exact_signature_copycount_i) ||\n            this.contains(CollectionSchema.fuzzy_signature_l) || this.contains(CollectionSchema.fuzzy_signature_copycount_i) ||\n            this.contains(CollectionSchema.http_unique_b) || this.contains(CollectionSchema.www_unique_b)) {\n            processTypes.add(ProcessType.UNIQUE); \n        }\n        \n        // get list of all links; they will be shrinked by urls that appear in other fields of the solr schema\n        LinkedHashMap<DigestURL,String> inboundLinks = document.inboundLinks();\n        LinkedHashMap<DigestURL,String> outboundLinks = document.outboundLinks();\n\n        Subgraph subgraph = new Subgraph(inboundLinks.size(), outboundLinks.size());\n        List<ImageEntry> images = new ArrayList<ImageEntry>();\n        int c = 0;\n        final Object parser = document.getParserObject();\n        boolean containsCanonical = false;\n        if (parser instanceof ContentScraper) {\n            final ContentScraper html = (ContentScraper) parser;\n            images = html.getImages();\n\n            // header tags\n            int h = 0;\n            int f = 1;\n            String[] hs;\n\n            hs = html.getHeadlines(1); h = h | (hs.length > 0 ? f : 0); f = f * 2; add(doc, CollectionSchema.h1_txt, hs); add(doc, CollectionSchema.h1_i, hs.length);\n            hs = html.getHeadlines(2); h = h | (hs.length > 0 ? f : 0); f = f * 2; add(doc, CollectionSchema.h2_txt, hs); add(doc, CollectionSchema.h2_i, hs.length);\n            hs = html.getHeadlines(3); h = h | (hs.length > 0 ? f : 0); f = f * 2; add(doc, CollectionSchema.h3_txt, hs); add(doc, CollectionSchema.h3_i, hs.length);\n            hs = html.getHeadlines(4); h = h | (hs.length > 0 ? f : 0); f = f * 2; add(doc, CollectionSchema.h4_txt, hs); add(doc, CollectionSchema.h4_i, hs.length);\n            hs = html.getHeadlines(5); h = h | (hs.length > 0 ? f : 0); f = f * 2; add(doc, CollectionSchema.h5_txt, hs); add(doc, CollectionSchema.h5_i, hs.length);\n            hs = html.getHeadlines(6); h = h | (hs.length > 0 ? f : 0); f = f * 2; add(doc, CollectionSchema.h6_txt, hs); add(doc, CollectionSchema.h6_i, hs.length);\n       \n            add(doc, CollectionSchema.htags_i, h);\n            add(doc, CollectionSchema.schema_org_breadcrumb_i, html.breadcrumbCount());\n\n            // meta tags: Open Graph properties\n            String og;\n            og = html.getMetas().get(\"og:title\"); if (og != null) add(doc, CollectionSchema.opengraph_title_t, og);\n            og = html.getMetas().get(\"og:type\"); if (og != null) add(doc, CollectionSchema.opengraph_type_s, og);\n            og = html.getMetas().get(\"og:url\"); if (og != null) add(doc, CollectionSchema.opengraph_url_s, og);\n            og = html.getMetas().get(\"og:image\"); if (og != null) add(doc, CollectionSchema.opengraph_image_s, og);\n\n            // noindex and nofollow attributes\n            // from HTML (meta-tag in HTML header: robots)\n            // and HTTP header (X-Robots-Tag property)\n            // coded as binary value:\n            // bit  0: \"all\" contained in html header meta\n            // bit  1: \"index\" contained in html header meta\n            // bit  2: \"follow\" contained in html header meta\n            // bit  3: \"noindex\" contained in html header meta\n            // bit  4: \"nofollow\" contained in html header meta\n            // bit  8: \"all\" contained in http header X-Robots-Tag\n            // bit  9: \"noindex\" contained in http header X-Robots-Tag\n            // bit 10: \"nofollow\" contained in http header X-Robots-Tag\n            // bit 11: \"noarchive\" contained in http header X-Robots-Tag\n            // bit 12: \"nosnippet\" contained in http header X-Robots-Tag\n            // bit 13: \"noodp\" contained in http header X-Robots-Tag\n            // bit 14: \"notranslate\" contained in http header X-Robots-Tag\n            // bit 15: \"noimageindex\" contained in http header X-Robots-Tag\n            // bit 16: \"unavailable_after\" contained in http header X-Robots-Tag\n            int b = 0;\n            String robots_meta = html.getMetas().get(\"robots\");\n            // this tag may have values: all, index, noindex, nofollow; see http://www.robotstxt.org/meta.html\n            if (robots_meta != null) {\n                robots_meta = robots_meta.toLowerCase();\n                if (robots_meta.indexOf(\"all\",0) >= 0) b += 1;      // set bit 0\n                if (robots_meta.indexOf(\"index\",0) == 0 || robots_meta.indexOf(\" index\",0) >= 0 || robots_meta.indexOf(\",index\",0) >= 0 ) b += 2; // set bit 1\n                if (robots_meta.indexOf(\"follow\",0) == 0 || robots_meta.indexOf(\" follow\",0) >= 0 || robots_meta.indexOf(\",follow\",0) >= 0 ) b += 4; // set bit 2\n                if (robots_meta.indexOf(\"noindex\",0) >= 0) b += 8;  // set bit 3\n                if (robots_meta.indexOf(\"nofollow\",0) >= 0) b += 16; // set bit 4\n            }\n            String x_robots_tag = \"\";\n            if (responseHeader != null) {\n                x_robots_tag = responseHeader.get(HeaderFramework.X_ROBOTS_TAG, \"\");\n                if (x_robots_tag.isEmpty()) {\n                    x_robots_tag = responseHeader.get(HeaderFramework.X_ROBOTS, \"\");\n                }\n            }\n            if (!x_robots_tag.isEmpty()) {\n                x_robots_tag = x_robots_tag.toLowerCase();\n                // this tag may have values: all, noindex, nofollow, noarchive, nosnippet, noodp, notranslate, noimageindex, unavailable_after, none; see https://developers.google.com/webmasters/control-crawl-index/docs/robots_meta_tag?hl=de\n                if (x_robots_tag.indexOf(\"all\",0) >= 0) b += 1<<8;                // set bit 8\n                if (x_robots_tag.indexOf(\"noindex\",0) >= 0||x_robots_tag.indexOf(\"none\",0) >= 0) b += 1<<9;   // set bit 9\n                if (x_robots_tag.indexOf(\"nofollow\",0) >= 0||x_robots_tag.indexOf(\"none\",0) >= 0) b += 1<<10; // set bit 10\n                if (x_robots_tag.indexOf(\"noarchive\",0) >= 0) b += 1<<11;         // set bit 11\n                if (x_robots_tag.indexOf(\"nosnippet\",0) >= 0) b += 1<<12;         // set bit 12\n                if (x_robots_tag.indexOf(\"noodp\",0) >= 0) b += 1<<13;             // set bit 13\n                if (x_robots_tag.indexOf(\"notranslate\",0) >= 0) b += 1<<14;       // set bit 14\n                if (x_robots_tag.indexOf(\"noimageindex\",0) >= 0) b += 1<<15;      // set bit 15\n                if (x_robots_tag.indexOf(\"unavailable_after\",0) >= 0) b += 1<<16; // set bit 16\n            }\n            add(doc, CollectionSchema.robots_i, b);\n\n            // meta tags: generator\n            final String generator = html.getMetas().get(\"generator\");\n            if (generator != null) add(doc, CollectionSchema.metagenerator_t, generator);\n\n            // bold, italic\n            final String[] bold = html.getBold();\n            add(doc, CollectionSchema.boldcount_i, bold.length);\n            if (bold.length > 0) {\n                add(doc, CollectionSchema.bold_txt, bold);\n                if (allAttr || contains(CollectionSchema.bold_val)) {\n                    add(doc, CollectionSchema.bold_val, html.getBoldCount(bold));\n                }\n            }\n            final String[] italic = html.getItalic();\n            add(doc, CollectionSchema.italiccount_i, italic.length);\n            if (italic.length > 0) {\n                add(doc, CollectionSchema.italic_txt, italic);\n                if (allAttr || contains(CollectionSchema.italic_val)) {\n                    add(doc, CollectionSchema.italic_val, html.getItalicCount(italic));\n                }\n            }\n            final String[] underline = html.getUnderline();\n            add(doc, CollectionSchema.underlinecount_i, underline.length);\n            if (underline.length > 0) {\n                add(doc, CollectionSchema.underline_txt, underline);\n                if (allAttr || contains(CollectionSchema.underline_val)) {\n                    add(doc, CollectionSchema.underline_val, html.getUnderlineCount(underline));\n                }\n            }\n            final String[] li = html.getLi();\n            add(doc, CollectionSchema.licount_i, li.length);\n            if (li.length > 0) add(doc, CollectionSchema.li_txt, li);\n\n            // images\n            final ArrayList<String> imgprots = new ArrayList<String>(images.size());\n            final Integer[] imgheights = new Integer[images.size()];\n            final Integer[] imgwidths = new Integer[images.size()];\n            final Integer[] imgpixels = new Integer[images.size()];\n            final String[] imgstubs = new String[images.size()];\n            final String[] imgalts  = new String[images.size()];\n            int withalt = 0;\n            int i = 0;\n            LinkedHashSet<String> images_text_map = new LinkedHashSet<String>();\n            for (final ImageEntry ie: images) {\n                final MultiProtocolURL uri = ie.url();\n                inboundLinks.remove(uri);\n                outboundLinks.remove(uri);\n                imgheights[i] = ie.height();\n                imgwidths[i] = ie.width();\n                imgpixels[i] = ie.height() < 0 || ie.width() < 0 ? -1 : ie.height() * ie.width();\n                String protocol = uri.getProtocol();\n                imgprots.add(protocol);\n                imgstubs[i] = uri.toString().substring(protocol.length() + 3);\n                imgalts[i] = ie.alt();\n                for (String it: uri.toTokens().split(\" \")) images_text_map.add(it);\n                if (ie.alt() != null && ie.alt().length() > 0) {\n                    SentenceReader sr = new SentenceReader(ie.alt());\n                    while (sr.hasNext()) images_text_map.add(sr.next().toString());\n                    withalt++;\n                }\n                i++;\n            }\n            StringBuilder images_text = new StringBuilder(images_text_map.size() * 6 + 1);\n            for (String s: images_text_map) images_text.append(s.trim()).append(' ');\n            if (allAttr || contains(CollectionSchema.imagescount_i)) add(doc, CollectionSchema.imagescount_i, images.size());\n            if (allAttr || contains(CollectionSchema.images_protocol_sxt)) add(doc, CollectionSchema.images_protocol_sxt, protocolList2indexedList(imgprots));\n            if (allAttr || contains(CollectionSchema.images_urlstub_sxt)) add(doc, CollectionSchema.images_urlstub_sxt, imgstubs);\n            if (allAttr || contains(CollectionSchema.images_alt_sxt)) add(doc, CollectionSchema.images_alt_sxt, imgalts);\n            if (allAttr || contains(CollectionSchema.images_height_val)) add(doc, CollectionSchema.images_height_val, imgheights);\n            if (allAttr || contains(CollectionSchema.images_width_val)) add(doc, CollectionSchema.images_width_val, imgwidths);\n            if (allAttr || contains(CollectionSchema.images_pixel_val)) add(doc, CollectionSchema.images_pixel_val, imgpixels);\n            if (allAttr || contains(CollectionSchema.images_withalt_i)) add(doc, CollectionSchema.images_withalt_i, withalt);\n            if (allAttr || contains(CollectionSchema.images_text_t)) add(doc, CollectionSchema.images_text_t, images_text.toString().trim());\n\n            // style sheets\n            if (allAttr || contains(CollectionSchema.css_tag_sxt)) {\n                final Map<DigestURL, String> csss = html.getCSS();\n                final String[] css_tag = new String[csss.size()];\n                final String[] css_url = new String[csss.size()];\n                c = 0;\n                for (final Map.Entry<DigestURL, String> entry: csss.entrySet()) {\n                    final String cssurl = entry.getKey().toNormalform(false);\n                    inboundLinks.remove(cssurl);\n                    outboundLinks.remove(cssurl);\n                    css_tag[c] =\n                        \"<link rel=\\\"stylesheet\\\" type=\\\"text/css\\\" media=\\\"\" + entry.getValue() + \"\\\"\" +\n                        \" href=\\\"\"+ cssurl + \"\\\" />\";\n                    css_url[c] = cssurl;\n                    c++;\n                }\n                add(doc, CollectionSchema.csscount_i, css_tag.length);\n                if (css_tag.length > 0) add(doc, CollectionSchema.css_tag_sxt, css_tag);\n                if (css_url.length > 0) add(doc, CollectionSchema.css_url_sxt, css_url);\n            }\n\n            // Scripts\n            if (allAttr || contains(CollectionSchema.scripts_sxt)) {\n                final Set<DigestURL> scriptss = html.getScript();\n                final String[] scripts = new String[scriptss.size()];\n                c = 0;\n                for (final DigestURL u: scriptss) {\n                    inboundLinks.remove(u);\n                    outboundLinks.remove(u);\n                    scripts[c++] = u.toNormalform(false);\n                }\n                add(doc, CollectionSchema.scriptscount_i, scripts.length);\n                if (scripts.length > 0) add(doc, CollectionSchema.scripts_sxt, scripts);\n            }\n\n            // Frames\n            if (allAttr || contains(CollectionSchema.frames_sxt)) {\n                final Set<DigestURL> framess = html.getFrames();\n                final String[] frames = new String[framess.size()];\n                c = 0;\n                for (final DigestURL u: framess) {\n                    inboundLinks.remove(u);\n                    outboundLinks.remove(u);\n                    frames[c++] = u.toNormalform(false);\n                }\n                add(doc, CollectionSchema.framesscount_i, frames.length);\n                if (frames.length > 0) {\n                    add(doc, CollectionSchema.frames_sxt, frames);\n                    //webgraph.addEdges(subgraph, digestURI, responseHeader, collections, crawldepth, alllinks, images, true, framess, citations); // add here because links have been removed from remaining inbound/outbound\n                }\n            }\n\n            // IFrames\n            if (allAttr || contains(CollectionSchema.iframes_sxt)) {\n                final Set<DigestURL> iframess = html.getIFrames();\n                final String[] iframes = new String[iframess.size()];\n                c = 0;\n                for (final DigestURL u: iframess) {\n                    inboundLinks.remove(u);\n                    outboundLinks.remove(u);\n                    iframes[c++] = u.toNormalform(false);\n                }\n                add(doc, CollectionSchema.iframesscount_i, iframes.length);\n                if (iframes.length > 0) {\n                    add(doc, CollectionSchema.iframes_sxt, iframes);\n                    //webgraph.addEdges(subgraph, digestURI, responseHeader, collections, crawldepth, alllinks, images, true, iframess, citations); // add here because links have been removed from remaining inbound/outbound\n                }\n            }\n\n            // canonical tag\n            if (allAttr || contains(CollectionSchema.canonical_s)) {\n                DigestURL canonical = html.getCanonical();\n                // if there is no canonical in the html then look into the http header:\n                if (canonical == null) {\n                    String link = responseHeader.get(\"Link\", null);\n                    int p;\n                    if (link != null && ((p = link.indexOf(\"rel=\\\"canonical\\\"\")) > 0)) {\n                        link = link.substring(0, p).trim();\n                        p = link.indexOf('<');\n                        int q = link.lastIndexOf('>');\n                        if (p >= 0 && q > 0) {\n                            link = link.substring(p + 1, q);\n                            try {\n                                canonical = new DigestURL(link);\n                            } catch (MalformedURLException e) {}\n                        }\n                    }\n                }\n                if (canonical != null) {\n                    containsCanonical = true;\n                    inboundLinks.remove(canonical);\n                    outboundLinks.remove(canonical);\n                    add(doc, CollectionSchema.canonical_s, canonical.toNormalform(false));\n                    // set a flag if this is equal to sku\n                    if (contains(CollectionSchema.canonical_equal_sku_b)) {\n                        add(doc, CollectionSchema.canonical_equal_sku_b, canonical.equals(digestURL));\n                    }\n                }\n            }\n\n            // meta refresh tag\n            if (allAttr || contains(CollectionSchema.refresh_s)) {\n                String refresh = html.getRefreshPath();\n                if (refresh != null && refresh.length() > 0) {\n                    MultiProtocolURL refreshURL;\n                    try {\n                        refreshURL = refresh.startsWith(\"http\") ? new MultiProtocolURL(html.getRefreshPath()) : new MultiProtocolURL(digestURL, html.getRefreshPath());\n                        if (refreshURL != null) {\n                            inboundLinks.remove(refreshURL);\n                            outboundLinks.remove(refreshURL);\n                            add(doc, CollectionSchema.refresh_s, refreshURL.toNormalform(false));\n                        }\n                    } catch (final MalformedURLException e) {\n                        add(doc, CollectionSchema.refresh_s, refresh);\n                    }\n                }\n            }\n\n            // flash embedded\n            if (allAttr || contains(CollectionSchema.flash_b)) {\n                MultiProtocolURL[] flashURLs = html.getFlash();\n                for (MultiProtocolURL u: flashURLs) {\n                    // remove all flash links from ibound/outbound links\n                    inboundLinks.remove(u);\n                    outboundLinks.remove(u);\n                }\n                add(doc, CollectionSchema.flash_b, flashURLs.length > 0);\n            }\n\n            // generic evaluation pattern\n            for (final String model: html.getEvaluationModelNames()) {\n                if (allAttr || contains(\"ext_\" + model + \"_txt\")) {\n                    final String[] scorenames = html.getEvaluationModelScoreNames(model);\n                    if (scorenames.length > 0) {\n                        add(doc, CollectionSchema.valueOf(\"ext_\" + model + \"_txt\"), scorenames);\n                        add(doc, CollectionSchema.valueOf(\"ext_\" + model + \"_val\"), html.getEvaluationModelScoreCounts(model, scorenames));\n                    }\n                }\n            }\n\n            // response time\n            add(doc, CollectionSchema.responsetime_i, responseHeader == null ? 0 : Integer.parseInt(responseHeader.get(HeaderFramework.RESPONSE_TIME_MILLIS, \"0\")));\n            \n            // hreflang link tag, see http://support.google.com/webmasters/bin/answer.py?hl=de&answer=189077\n            if (allAttr || (contains(CollectionSchema.hreflang_url_sxt) && contains(CollectionSchema.hreflang_cc_sxt))) {\n                final String[] ccs = new String[html.getHreflang().size()];\n                final String[] urls = new String[html.getHreflang().size()];\n                c = 0;\n                for (Map.Entry<String, DigestURL> e: html.getHreflang().entrySet()) {\n                    ccs[c] = e.getKey();\n                    urls[c] = e.getValue().toNormalform(true);\n                    c++;\n                }\n                add(doc, CollectionSchema.hreflang_cc_sxt, ccs);\n                add(doc, CollectionSchema.hreflang_url_sxt, urls);\n            }\n\n            // page navigation url, see http://googlewebmastercentral.blogspot.de/2011/09/pagination-with-relnext-and-relprev.html\n            if (allAttr || (contains(CollectionSchema.navigation_url_sxt) && contains(CollectionSchema.navigation_type_sxt))) {\n                final String[] navs = new String[html.getNavigation().size()];\n                final String[] urls = new String[html.getNavigation().size()];\n                c = 0;\n                for (Map.Entry<String, DigestURL> e: html.getNavigation().entrySet()) {\n                    navs[c] = e.getKey();\n                    urls[c] = e.getValue().toNormalform(true);\n                    c++;\n                }\n                add(doc, CollectionSchema.navigation_type_sxt, navs);\n                add(doc, CollectionSchema.navigation_url_sxt, urls);\n                \n            }\n\n            // publisher url as defined in http://support.google.com/plus/answer/1713826?hl=de\n            if (allAttr || contains(CollectionSchema.publisher_url_s) && html.getPublisherLink() != null) {\n                add(doc, CollectionSchema.publisher_url_s, html.getPublisherLink().toNormalform(true));\n            }\n        }\n\n        if (parser instanceof DCEntry) {\n            // the document was created with a surrogate parsing; overwrite all md: -entries to Solr\n            DCEntry dcentry = (DCEntry) parser;\n            for (Map.Entry<String, String[]> entry: dcentry.getMap().entrySet()) {\n                String tag = entry.getKey();\n                if (!tag.startsWith(\"md:\") || tag.length() < 4) continue;\n                CollectionSchema solr_field = CollectionSchema.valueOf(tag.substring(3));\n                if (solr_field == null) continue;\n                String[] values = entry.getValue();\n                if (values == null || values.length == 0) continue;\n                if (allAttr || contains(solr_field)) {\n                    add(doc, solr_field, values);\n                }\n            }\n        }\n        \n        String content = document.getTextString();\n        String tokens = digestURL.toTokens();\n        if (content == null || content.length() == 0) {\n            content = tokens;\n        } else {\n            String[] t = tokens.split(\" \");\n            for (String r: t) {\n                if (r.length() > 0 &&\n                    content.indexOf(\" \" + r + \" \") < 0 &&\n                    !content.startsWith(r + \" \") &&\n                    !content.endsWith(\" \" + r)) content += \" \" + r;\n            }\n        }\n        \n        if ((allAttr || contains(CollectionSchema.images_text_t)) && MultiProtocolURL.isImage(MultiProtocolURL.getFileExtension(digestURL.getFileName()))) {\n            add(doc, CollectionSchema.images_text_t, content); // the content may contain the exif data from the image parser\n            content = digestURL.toTokens(); // remove all other entry but the url tokens\n        }\n        \n        // content (must be written after special parser data, since this can influence the content)\n        if (allAttr || contains(CollectionSchema.text_t)) add(doc, CollectionSchema.text_t, content);\n        if (allAttr || contains(CollectionSchema.wordcount_i)) {\n            if (content.length() == 0) {\n                add(doc, CollectionSchema.wordcount_i, 0);\n            } else {\n                int contentwc = 1;\n                for (int i = content.length() - 1; i >= 0; i--) if (content.charAt(i) == ' ') contentwc++;\n                add(doc, CollectionSchema.wordcount_i, contentwc);\n            }\n        }\n        \n        // statistics about the links\n        if (allAttr || contains(CollectionSchema.linkscount_i)) add(doc, CollectionSchema.linkscount_i, inboundLinks.size() + outboundLinks.size());\n        if (allAttr || contains(CollectionSchema.linksnofollowcount_i)) add(doc, CollectionSchema.linksnofollowcount_i, document.inboundLinkNofollowCount() + document.outboundLinkNofollowCount());\n        if (allAttr || contains(CollectionSchema.inboundlinkscount_i)) add(doc, CollectionSchema.inboundlinkscount_i, inboundLinks.size());\n        if (allAttr || contains(CollectionSchema.inboundlinksnofollowcount_i)) add(doc, CollectionSchema.inboundlinksnofollowcount_i, document.inboundLinkNofollowCount());\n        if (allAttr || contains(CollectionSchema.outboundlinkscount_i)) add(doc, CollectionSchema.outboundlinkscount_i, outboundLinks.size());\n        if (allAttr || contains(CollectionSchema.outboundlinksnofollowcount_i)) add(doc, CollectionSchema.outboundlinksnofollowcount_i, document.outboundLinkNofollowCount());\n        \n        // create a subgraph\n        if (!containsCanonical && webgraph != null) {\n            // a document with canonical tag should not get a webgraph relation, because that belongs to the canonical document\n            List<SolrInputDocument> edges = webgraph.getEdges(subgraph, digestURL, responseHeader, collections, crawldepth, images, processTypes, document.getAnchors(), sourceName);\n            // this also enriched the subgraph\n            doc.webgraphDocuments.addAll(edges);\n        } else {\n            if (allAttr ||\n                contains(CollectionSchema.inboundlinks_protocol_sxt) ||\n                contains(CollectionSchema.inboundlinks_urlstub_sxt) ||\n                contains(CollectionSchema.inboundlinks_anchortext_txt) ||\n                contains(CollectionSchema.outboundlinks_protocol_sxt) ||\n                contains(CollectionSchema.outboundlinks_urlstub_sxt) ||\n                contains(CollectionSchema.outboundlinks_anchortext_txt)) {\n                for (final AnchorURL target_url: document.getAnchors()) {\n                    enrichSubgraph(subgraph, digestURL, target_url);\n                }\n            }\n        }\n            \n        // attach the subgraph content\n        if (allAttr || contains(CollectionSchema.inboundlinks_protocol_sxt)) add(doc, CollectionSchema.inboundlinks_protocol_sxt, protocolList2indexedList(subgraph.urlProtocols[0]));\n        if (allAttr || contains(CollectionSchema.inboundlinks_urlstub_sxt)) add(doc, CollectionSchema.inboundlinks_urlstub_sxt, subgraph.urlStubs[0]);\n        if (allAttr || contains(CollectionSchema.inboundlinks_anchortext_txt)) add(doc, CollectionSchema.inboundlinks_anchortext_txt, subgraph.urlAnchorTexts[0]);\n        if (allAttr || contains(CollectionSchema.outboundlinks_protocol_sxt)) add(doc, CollectionSchema.outboundlinks_protocol_sxt, protocolList2indexedList(subgraph.urlProtocols[1]));\n        if (allAttr || contains(CollectionSchema.outboundlinks_urlstub_sxt)) add(doc, CollectionSchema.outboundlinks_urlstub_sxt, subgraph.urlStubs[1]);\n        if (allAttr || contains(CollectionSchema.outboundlinks_anchortext_txt)) add(doc, CollectionSchema.outboundlinks_anchortext_txt, subgraph.urlAnchorTexts[1]);\n        \n        // charset\n        if (allAttr || contains(CollectionSchema.charset_s)) add(doc, CollectionSchema.charset_s, document.getCharset());\n\n        // coordinates\n        if (document.lat() != 0.0 && document.lon() != 0.0) {\n            if (allAttr || contains(CollectionSchema.coordinate_p)) add(doc, CollectionSchema.coordinate_p, Double.toString(document.lat()) + \",\" + Double.toString(document.lon()));\n        }\n        if (allAttr || contains(CollectionSchema.httpstatus_i)) add(doc, CollectionSchema.httpstatus_i, responseHeader == null ? 200 : responseHeader.getStatusCode());\n\n        // fields that were additionally in URIMetadataRow\n        Date loadDate = new Date();\n        Date modDate = responseHeader == null ? new Date() : responseHeader.lastModified();\n        if (modDate.getTime() > loadDate.getTime()) modDate = loadDate;\n        int size = (int) Math.max(document.dc_source().length(), responseHeader == null ? 0 : responseHeader.getContentLength());\n        if (allAttr || contains(CollectionSchema.load_date_dt)) add(doc, CollectionSchema.load_date_dt, loadDate);\n        if (allAttr || contains(CollectionSchema.fresh_date_dt)) add(doc, CollectionSchema.fresh_date_dt, new Date(loadDate.getTime() + Math.max(0, loadDate.getTime() - modDate.getTime()) / 2)); // freshdate, computed with Proxy-TTL formula\n        if ((allAttr || contains(CollectionSchema.referrer_id_s)) && referrerURL != null) add(doc, CollectionSchema.referrer_id_s, ASCII.String(referrerURL.hash()));\n        //if (allAttr || contains(SolrField.md5_s)) add(solrdoc, SolrField.md5_s, new byte[0]);\n        if (allAttr || contains(CollectionSchema.publisher_t)) add(doc, CollectionSchema.publisher_t, document.dc_publisher());\n        if ((allAttr || contains(CollectionSchema.language_s)) && language != null) add(doc, CollectionSchema.language_s, language);\n        if (allAttr || contains(CollectionSchema.size_i)) add(doc, CollectionSchema.size_i, size);\n        if (allAttr || contains(CollectionSchema.audiolinkscount_i)) add(doc, CollectionSchema.audiolinkscount_i, document.getAudiolinks().size());\n        if (allAttr || contains(CollectionSchema.videolinkscount_i)) add(doc, CollectionSchema.videolinkscount_i, document.getVideolinks().size());\n        if (allAttr || contains(CollectionSchema.applinkscount_i)) add(doc, CollectionSchema.applinkscount_i, document.getApplinks().size());\n\n        // write generic navigation\n        // there are no pre-defined solr fields for navigation because the vocabulary is generic\n        // we use dynamically allocated solr fields for this.\n        // It must be a multi-value string/token field, therefore we use _sxt extensions for the field names\n        for (Map.Entry<String, Set<String>> facet: document.getGenericFacets().entrySet()) {\n            String facetName = facet.getKey();\n            Set<String> facetValues = facet.getValue();\n            doc.setField(CollectionSchema.VOCABULARY_PREFIX + facetName + CollectionSchema.VOCABULARY_SUFFIX, facetValues.toArray(new String[facetValues.size()]));\n        }\n\n        if ((allAttr || contains(CollectionSchema.process_sxt)) && processTypes.size() > 0) {\n            List<String> p = new ArrayList<String>();\n            for (ProcessType t: processTypes) p.add(t.name());\n            add(doc, CollectionSchema.process_sxt, p);\n            if (allAttr || contains(CollectionSchema.harvestkey_s)) {\n                add(doc, CollectionSchema.harvestkey_s, sourceName);\n            }\n        }\n        return doc;\n    }","commit_id":"b0d941626fb15caadbf20abc70fe46d31ee5d5a1","url":"https://github.com/yacy/yacy_search_server"},{"original_method":"public void postprocessing_doublecontent(Segment segment, Set<String> uniqueURLs, SolrInputDocument sid, DigestURL url) {\n        // FIND OUT IF THIS IS A DOUBLE DOCUMENT\n        String urlhash = ASCII.String(url.hash());\n        String hostid = url.hosthash();\n        uniquecheck: for (CollectionSchema[] checkfields: new CollectionSchema[][]{\n                {CollectionSchema.exact_signature_l, CollectionSchema.exact_signature_unique_b, CollectionSchema.exact_signature_copycount_i},\n                {CollectionSchema.fuzzy_signature_l, CollectionSchema.fuzzy_signature_unique_b, CollectionSchema.fuzzy_signature_copycount_i}}) {\n            CollectionSchema signaturefield = checkfields[0];\n            CollectionSchema uniquefield = checkfields[1];\n            CollectionSchema countfield = checkfields[2];\n            if (this.contains(signaturefield) && this.contains(uniquefield) && this.contains(countfield)) {\n                // lookup the document with the same signature\n                Long signature = (Long) sid.getField(signaturefield.getSolrFieldName()).getValue();\n                if (signature == null) continue uniquecheck;\n                try {\n                    SolrDocumentList docs = segment.fulltext().getDefaultConnector().getDocumentListByQuery(\"-\" + CollectionSchema.id.getSolrFieldName() + \":\\\"\" + urlhash + \"\\\" AND \" + CollectionSchema.host_id_s.getSolrFieldName() + \":\\\"\" + hostid + \"\\\" AND \" + signaturefield.getSolrFieldName() + \":\\\"\" + signature.toString() + \"\\\"\", null, 0, 100, CollectionSchema.id.getSolrFieldName());\n                    if (docs.getNumFound() == 0) {\n                        sid.setField(uniquefield.getSolrFieldName(), true);\n                        sid.setField(countfield.getSolrFieldName(), 1);\n                    } else {\n                        boolean firstappearance = true;\n                        for (SolrDocument d: docs) {if (uniqueURLs.contains(d.getFieldValue(CollectionSchema.id.getSolrFieldName()))) firstappearance = false; break;}\n                        sid.setField(uniquefield.getSolrFieldName(), firstappearance);\n                        sid.setField(countfield.getSolrFieldName(), docs.getNumFound() + 1); // the current url was excluded from search but is included in count\n                    }\n                } catch (final IOException e) {}\n            }\n        }\n        \n        // CHECK IF TITLE AND DESCRIPTION IS UNIQUE (this is by default not switched on)\n        // in case that the document has no status code 200, has a noindex attribute\n        // or a canonical tag which does not point to the document itself,\n        // then the unique-field is not written at all!\n        Integer robots_i = this.contains(CollectionSchema.robots_i) ? (Integer) sid.getFieldValue(CollectionSchema.robots_i.getSolrFieldName()) : null;\n        Integer httpstatus_i = this.contains(CollectionSchema.httpstatus_i) ? (Integer) sid.getFieldValue(CollectionSchema.httpstatus_i.getSolrFieldName()) : null;\n        String canonical_s = this.contains(CollectionSchema.canonical_s) ? (String) sid.getFieldValue(CollectionSchema.canonical_s.getSolrFieldName()) : null;\n        Boolean canonical_equal_sku_b = this.contains(CollectionSchema.canonical_equal_sku_b) ? (Boolean) sid.getFieldValue(CollectionSchema.canonical_equal_sku_b.getSolrFieldName()) : null;\n        if (segment.fulltext().getDefaultConfiguration().contains(CollectionSchema.host_id_s) &&\n            (robots_i == null || (robots_i.intValue() & (1 << 9)) == 0) &&\n            (canonical_s == null || canonical_s.length() == 0 || (canonical_equal_sku_b != null && canonical_equal_sku_b.booleanValue()) || url.toNormalform(true).equals(canonical_s)) &&\n            (httpstatus_i == null || httpstatus_i.intValue() == 200)) {\n            uniquecheck: for (CollectionSchema[] checkfields: new CollectionSchema[][] {\n                    {CollectionSchema.title, CollectionSchema.title_exact_signature_l, CollectionSchema.title_unique_b},\n                    {CollectionSchema.description_txt, CollectionSchema.description_exact_signature_l, CollectionSchema.description_unique_b}}) {\n                CollectionSchema checkfield = checkfields[0];\n                CollectionSchema signaturefield = checkfields[1];\n                CollectionSchema uniquefield = checkfields[2];\n                if (this.contains(checkfield) && this.contains(signaturefield) && this.contains(uniquefield)) {\n                    // lookup in the index within the same hosts for the same title or description\n                    //String checkstring = checkfield == CollectionSchema.title ? document.dc_title() : document.dc_description();\n                    Long signature = (Long) sid.getFieldValue(signaturefield.getSolrFieldName());\n                    if (signature == null) {\n                        continue uniquecheck;\n                    }\n                    try {\n                        SolrDocumentList docs = segment.fulltext().getDefaultConnector().getDocumentListByQuery(\"-\" + CollectionSchema.id.getSolrFieldName() + \":\\\"\" + urlhash + \"\\\" AND \" + CollectionSchema.host_id_s.getSolrFieldName() + \":\\\"\" + hostid + \"\\\" AND \" + signaturefield.getSolrFieldName() + \":\\\"\" + signature.toString() + \"\\\"\", null, 0, 100, CollectionSchema.id.getSolrFieldName());\n                        if (docs.getNumFound() == 0) {\n                            sid.setField(uniquefield.getSolrFieldName(), true);\n                        } else {\n                            boolean firstappearance = true;\n                            for (SolrDocument d: docs) {if (uniqueURLs.contains(d.getFieldValue(CollectionSchema.id.getSolrFieldName()))) firstappearance = false; break;}\n                            sid.setField(uniquefield.getSolrFieldName(), firstappearance);\n                        }\n                    } catch (final IOException e) {}\n                }\n            }\n        }\n        uniqueURLs.add(urlhash);\n    }","id":55740,"modified_method":"public void postprocessing_doublecontent(Segment segment, Set<String> uniqueURLs, SolrInputDocument sid, DigestURL url) {\n        // FIND OUT IF THIS IS A DOUBLE DOCUMENT\n        String urlhash = ASCII.String(url.hash());\n        String hostid = url.hosthash();\n        uniquecheck: for (CollectionSchema[] checkfields: new CollectionSchema[][]{\n                {CollectionSchema.exact_signature_l, CollectionSchema.exact_signature_unique_b, CollectionSchema.exact_signature_copycount_i},\n                {CollectionSchema.fuzzy_signature_l, CollectionSchema.fuzzy_signature_unique_b, CollectionSchema.fuzzy_signature_copycount_i}}) {\n            CollectionSchema signaturefield = checkfields[0];\n            CollectionSchema uniquefield = checkfields[1];\n            CollectionSchema countfield = checkfields[2];\n            if (this.contains(signaturefield) && this.contains(uniquefield) && this.contains(countfield)) {\n                // lookup the document with the same signature\n                Long signature = (Long) sid.getField(signaturefield.getSolrFieldName()).getValue();\n                if (signature == null) continue uniquecheck;\n                try {\n                    SolrDocumentList docs = segment.fulltext().getDefaultConnector().getDocumentListByQuery(\"-\" + CollectionSchema.id.getSolrFieldName() + \":\\\"\" + urlhash + \"\\\" AND \" + CollectionSchema.host_id_s.getSolrFieldName() + \":\\\"\" + hostid + \"\\\" AND \" + signaturefield.getSolrFieldName() + \":\\\"\" + signature.toString() + \"\\\"\", null, 0, 100, CollectionSchema.id.getSolrFieldName());\n                    if (docs.getNumFound() == 0) {\n                        sid.setField(uniquefield.getSolrFieldName(), true);\n                        sid.setField(countfield.getSolrFieldName(), 1);\n                    } else {\n                        boolean firstappearance = true;\n                        for (SolrDocument d: docs) {if (uniqueURLs.contains(d.getFieldValue(CollectionSchema.id.getSolrFieldName()))) firstappearance = false; break;}\n                        sid.setField(uniquefield.getSolrFieldName(), firstappearance);\n                        sid.setField(countfield.getSolrFieldName(), docs.getNumFound() + 1); // the current url was excluded from search but is included in count\n                    }\n                } catch (final IOException e) {}\n            }\n        }\n        \n        // CHECK IF TITLE AND DESCRIPTION IS UNIQUE (this is by default not switched on)\n        // in case that the document has no status code 200, has a noindex attribute\n        // or a canonical tag which does not point to the document itself,\n        // then the unique-field is not written at all!\n        Integer robots_i = this.contains(CollectionSchema.robots_i) ? (Integer) sid.getFieldValue(CollectionSchema.robots_i.getSolrFieldName()) : null;\n        Integer httpstatus_i = this.contains(CollectionSchema.httpstatus_i) ? (Integer) sid.getFieldValue(CollectionSchema.httpstatus_i.getSolrFieldName()) : null;\n        String canonical_s = this.contains(CollectionSchema.canonical_s) ? (String) sid.getFieldValue(CollectionSchema.canonical_s.getSolrFieldName()) : null;\n        Boolean canonical_equal_sku_b = this.contains(CollectionSchema.canonical_equal_sku_b) ? (Boolean) sid.getFieldValue(CollectionSchema.canonical_equal_sku_b.getSolrFieldName()) : null;\n        if (segment.fulltext().getDefaultConfiguration().contains(CollectionSchema.host_id_s) &&\n            (robots_i == null || (robots_i.intValue() & (1 << 9)) == 0 /*noindex in http X-ROBOTS*/ && (robots_i.intValue() & (1 << 3)) == 0 /*noindex in html metas*/ ) &&\n            (canonical_s == null || canonical_s.length() == 0 || (canonical_equal_sku_b != null && canonical_equal_sku_b.booleanValue()) || url.toNormalform(true).equals(canonical_s)) &&\n            (httpstatus_i == null || httpstatus_i.intValue() == 200)) {\n            uniquecheck: for (CollectionSchema[] checkfields: new CollectionSchema[][] {\n                    {CollectionSchema.title, CollectionSchema.title_exact_signature_l, CollectionSchema.title_unique_b},\n                    {CollectionSchema.description_txt, CollectionSchema.description_exact_signature_l, CollectionSchema.description_unique_b}}) {\n                CollectionSchema checkfield = checkfields[0];\n                CollectionSchema signaturefield = checkfields[1];\n                CollectionSchema uniquefield = checkfields[2];\n                if (this.contains(checkfield) && this.contains(signaturefield) && this.contains(uniquefield)) {\n                    // lookup in the index within the same hosts for the same title or description\n                    //String checkstring = checkfield == CollectionSchema.title ? document.dc_title() : document.dc_description();\n                    Long signature = (Long) sid.getFieldValue(signaturefield.getSolrFieldName());\n                    if (signature == null) {\n                        continue uniquecheck;\n                    }\n                    try {\n                        long doccount = segment.fulltext().getDefaultConnector().getCountByQuery(\"-\" + CollectionSchema.id.getSolrFieldName() + \":\\\"\" + urlhash + \"\\\" AND \" + CollectionSchema.host_id_s.getSolrFieldName() + \":\\\"\" + hostid + \"\\\" AND \" + signaturefield.getSolrFieldName() + \":\\\"\" + signature.toString() + \"\\\"\");\n                        sid.setField(uniquefield.getSolrFieldName(), doccount == 0);\n                    } catch (final IOException e) {}\n                }\n            }\n        }\n        uniqueURLs.add(urlhash);\n    }","commit_id":"b0d941626fb15caadbf20abc70fe46d31ee5d5a1","url":"https://github.com/yacy/yacy_search_server"},{"original_method":"@NotNull\n    public TypeInfoForCall getArgumentTypeInfo(\n            @Nullable JetExpression expression,\n            @NotNull CallResolutionContext context,\n            @NotNull ResolveArgumentsMode resolveFunctionArgumentBodies\n    ) {\n        if (expression == null) {\n            return TypeInfoForCall.create(null, context.dataFlowInfo);\n        }\n        if (expression instanceof JetFunctionLiteralExpression && resolveFunctionArgumentBodies == SKIP_FUNCTION_ARGUMENTS) {\n            JetType type = getFunctionLiteralType((JetFunctionLiteralExpression) expression, context.scope, context.trace);\n            return TypeInfoForCall.create(type, context.dataFlowInfo);\n        }\n        //todo deparenthesize\n        CallExpressionResolver callExpressionResolver = expressionTypingServices.getCallExpressionResolver();\n        TypeInfoForCall result = null;\n        if (expression instanceof JetCallExpression) {\n            result = callExpressionResolver.getCallExpressionExtendedTypeInfo(\n                    (JetCallExpression) expression, ReceiverValue.NO_RECEIVER, null, context, ResolveMode.INTERNAL);\n        }\n        if (expression instanceof JetQualifiedExpression) {\n            result = callExpressionResolver.getQualifiedExpressionExtendedTypeInfo((JetQualifiedExpression) expression, context, ResolveMode.INTERNAL);\n        }\n        if (result != null) {\n            recordExpressionType(expression, context, result.getTypeInfo());\n            return result;\n        }\n        return TypeInfoForCall.create(\n                expressionTypingServices.getTypeInfo(context.scope, expression, context.expectedType, context.dataFlowInfo, context.trace));\n    }","id":55741,"modified_method":"@NotNull\n    public TypeInfoForCall getArgumentTypeInfo(\n            @Nullable JetExpression expression,\n            @NotNull CallResolutionContext context,\n            @NotNull ResolveArgumentsMode resolveFunctionArgumentBodies\n    ) {\n        if (expression == null) {\n            return TypeInfoForCall.create(null, context.dataFlowInfo);\n        }\n        if (expression instanceof JetFunctionLiteralExpression && resolveFunctionArgumentBodies == SKIP_FUNCTION_ARGUMENTS) {\n            JetType type = getFunctionLiteralType((JetFunctionLiteralExpression) expression, context.scope, context.trace);\n            return TypeInfoForCall.create(type, context.dataFlowInfo);\n        }\n        //todo deparenthesize\n        CallExpressionResolver callExpressionResolver = expressionTypingServices.getCallExpressionResolver();\n        TypeInfoForCall result = null;\n        if (expression instanceof JetCallExpression) {\n            result = callExpressionResolver.getCallExpressionTypeInfoForCall(\n                    (JetCallExpression) expression, ReceiverValue.NO_RECEIVER, null, context, ResolveMode.INTERNAL);\n        }\n        if (expression instanceof JetQualifiedExpression) {\n            result = callExpressionResolver.getQualifiedExpressionExtendedTypeInfo((JetQualifiedExpression) expression, context, ResolveMode.INTERNAL);\n        }\n        if (result != null) {\n            recordExpressionType(expression, context, result.getTypeInfo());\n            return result;\n        }\n        return TypeInfoForCall.create(\n                expressionTypingServices.getTypeInfo(context.scope, expression, context.expectedType, context.dataFlowInfo, context.trace));\n    }","commit_id":"fe6616135208bf4b593090dd6595b1b3f26c06a4","url":"https://github.com/JetBrains/kotlin"},{"original_method":"@NotNull\n    public JetTypeInfo getCallExpressionTypeInfo(@NotNull JetCallExpression callExpression, @NotNull ReceiverValue receiver,\n            @Nullable ASTNode callOperationNode, @NotNull ResolutionContext context) {\n        JetTypeInfo typeInfo = getCallExpressionExtendedTypeInfoWithoutFinalTypeCheck(callExpression, receiver, callOperationNode, context, ResolveMode.NORMAL).getTypeInfo();\n        return DataFlowUtils.checkType(typeInfo.getType(), callExpression, context, typeInfo.getDataFlowInfo());\n    }","id":55742,"modified_method":"@NotNull\n    public JetTypeInfo getCallExpressionTypeInfo(@NotNull JetCallExpression callExpression, @NotNull ReceiverValue receiver,\n            @Nullable ASTNode callOperationNode, @NotNull ResolutionContext context) {\n        return getCallExpressionTypeInfoForCall(callExpression, receiver, callOperationNode, context, ResolveMode.NORMAL).getTypeInfo();\n    }","commit_id":"fe6616135208bf4b593090dd6595b1b3f26c06a4","url":"https://github.com/JetBrains/kotlin"},{"original_method":"@NotNull\n    public TypeInfoForCall getCallExpressionExtendedTypeInfo(\n            @NotNull JetCallExpression callExpression, @NotNull ReceiverValue receiver,\n            @Nullable ASTNode callOperationNode, @NotNull ResolutionContext context, @NotNull ResolveMode resolveMode\n    ) {\n        TypeInfoForCall typeInfoForCall = getCallExpressionExtendedTypeInfoWithoutFinalTypeCheck(callExpression, receiver, callOperationNode, context, resolveMode);\n        if (resolveMode == ResolveMode.NORMAL) {\n            DataFlowUtils.checkType(typeInfoForCall.getType(), callExpression, context, typeInfoForCall.getDataFlowInfo());\n        }\n        return typeInfoForCall;\n    }","id":55743,"modified_method":"@NotNull\n    public TypeInfoForCall getCallExpressionTypeInfoForCall(\n            @NotNull JetCallExpression callExpression, @NotNull ReceiverValue receiver,\n            @Nullable ASTNode callOperationNode, @NotNull ResolutionContext context, @NotNull ResolveMode resolveMode\n    ) {\n        TypeInfoForCall typeInfoForCall = getCallExpressionTypeInfoForCallWithoutFinalTypeCheck(callExpression, receiver, callOperationNode,\n                                                                                                context, resolveMode);\n        if (resolveMode == ResolveMode.NORMAL) {\n            DataFlowUtils.checkType(typeInfoForCall.getType(), callExpression, context, typeInfoForCall.getDataFlowInfo());\n        }\n        return typeInfoForCall;\n    }","commit_id":"fe6616135208bf4b593090dd6595b1b3f26c06a4","url":"https://github.com/JetBrains/kotlin"},{"original_method":"@NotNull\n    public TypeInfoForCall getCallExpressionExtendedTypeInfoWithoutFinalTypeCheck(\n            @NotNull JetCallExpression callExpression, @NotNull ReceiverValue receiver,\n            @Nullable ASTNode callOperationNode, @NotNull ResolutionContext context, @NotNull ResolveMode resolveMode\n    ) {\n        boolean[] result = new boolean[1];\n        Call call = CallMaker.makeCall(receiver, callOperationNode, callExpression);\n\n        TemporaryBindingTrace traceForFunction = TemporaryBindingTrace.create(context.trace, \"trace to resolve as function call\", callExpression);\n        ResolvedCall<FunctionDescriptor> resolvedCall = getResolvedCallForFunction(\n                call, callExpression, receiver, context.replaceBindingTrace(traceForFunction), resolveMode, result);\n        if (result[0]) {\n            FunctionDescriptor functionDescriptor = resolvedCall != null ? resolvedCall.getResultingDescriptor() : null;\n            traceForFunction.commit();\n            if (callExpression.getValueArgumentList() == null && callExpression.getFunctionLiteralArguments().isEmpty()) {\n                // there are only type arguments\n                boolean hasValueParameters = functionDescriptor == null || functionDescriptor.getValueParameters().size() > 0;\n                context.trace.report(FUNCTION_CALL_EXPECTED.on(callExpression, callExpression, hasValueParameters));\n            }\n            if (functionDescriptor == null) {\n                return TypeInfoForCall.create(null, context.dataFlowInfo);\n            }\n            JetType type = functionDescriptor.getReturnType();\n\n            return TypeInfoForCall.create(type, resolvedCall.getDataFlowInfo(), resolvedCall, call, context, resolveMode);\n        }\n\n        JetExpression calleeExpression = callExpression.getCalleeExpression();\n        if (calleeExpression instanceof JetSimpleNameExpression && callExpression.getTypeArgumentList() == null) {\n            TemporaryBindingTrace traceForVariable = TemporaryBindingTrace.create(\n                    context.trace, \"trace to resolve as variable with 'invoke' call\", callExpression);\n            JetType type = getVariableType((JetSimpleNameExpression) calleeExpression, receiver, callOperationNode,\n                                           context.replaceBindingTrace(traceForVariable), result);\n            if (result[0]) {\n                traceForVariable.commit();\n                context.trace.report(FUNCTION_EXPECTED.on((JetReferenceExpression) calleeExpression, calleeExpression,\n                                                          type != null ? type : ErrorUtils.createErrorType(\"\")));\n                return TypeInfoForCall.create(null, context.dataFlowInfo);\n            }\n        }\n        traceForFunction.commit();\n        return TypeInfoForCall.create(null, context.dataFlowInfo);\n    }","id":55744,"modified_method":"@NotNull\n    public TypeInfoForCall getCallExpressionTypeInfoForCallWithoutFinalTypeCheck(\n            @NotNull JetCallExpression callExpression, @NotNull ReceiverValue receiver,\n            @Nullable ASTNode callOperationNode, @NotNull ResolutionContext context, @NotNull ResolveMode resolveMode\n    ) {\n        boolean[] result = new boolean[1];\n        Call call = CallMaker.makeCall(receiver, callOperationNode, callExpression);\n\n        TemporaryBindingTrace traceForFunction = TemporaryBindingTrace.create(context.trace, \"trace to resolve as function call\", callExpression);\n        ResolvedCall<FunctionDescriptor> resolvedCall = getResolvedCallForFunction(\n                call, callExpression, receiver, context.replaceBindingTrace(traceForFunction), resolveMode, result);\n        if (result[0]) {\n            FunctionDescriptor functionDescriptor = resolvedCall != null ? resolvedCall.getResultingDescriptor() : null;\n            traceForFunction.commit();\n            if (callExpression.getValueArgumentList() == null && callExpression.getFunctionLiteralArguments().isEmpty()) {\n                // there are only type arguments\n                boolean hasValueParameters = functionDescriptor == null || functionDescriptor.getValueParameters().size() > 0;\n                context.trace.report(FUNCTION_CALL_EXPECTED.on(callExpression, callExpression, hasValueParameters));\n            }\n            if (functionDescriptor == null) {\n                return TypeInfoForCall.create(null, context.dataFlowInfo);\n            }\n            JetType type = functionDescriptor.getReturnType();\n\n            return TypeInfoForCall.create(type, resolvedCall.getDataFlowInfo(), resolvedCall, call, context, resolveMode);\n        }\n\n        JetExpression calleeExpression = callExpression.getCalleeExpression();\n        if (calleeExpression instanceof JetSimpleNameExpression && callExpression.getTypeArgumentList() == null) {\n            TemporaryBindingTrace traceForVariable = TemporaryBindingTrace.create(\n                    context.trace, \"trace to resolve as variable with 'invoke' call\", callExpression);\n            JetType type = getVariableType((JetSimpleNameExpression) calleeExpression, receiver, callOperationNode,\n                                           context.replaceBindingTrace(traceForVariable), result);\n            if (result[0]) {\n                traceForVariable.commit();\n                context.trace.report(FUNCTION_EXPECTED.on((JetReferenceExpression) calleeExpression, calleeExpression,\n                                                          type != null ? type : ErrorUtils.createErrorType(\"\")));\n                return TypeInfoForCall.create(null, context.dataFlowInfo);\n            }\n        }\n        traceForFunction.commit();\n        return TypeInfoForCall.create(null, context.dataFlowInfo);\n    }","commit_id":"fe6616135208bf4b593090dd6595b1b3f26c06a4","url":"https://github.com/JetBrains/kotlin"},{"original_method":"@NotNull\n    private TypeInfoForCall getSelectorReturnTypeInfo(\n            @NotNull ReceiverValue receiver,\n            @Nullable ASTNode callOperationNode,\n            @NotNull JetExpression selectorExpression,\n            @NotNull ResolutionContext context,\n            @NotNull ResolveMode resolveMode\n    ) {\n        if (selectorExpression instanceof JetCallExpression) {\n            return getCallExpressionExtendedTypeInfoWithoutFinalTypeCheck((JetCallExpression) selectorExpression, receiver,\n                                                                          callOperationNode, context, resolveMode);\n        }\n        else if (selectorExpression instanceof JetSimpleNameExpression) {\n            return TypeInfoForCall.create(\n                    getSimpleNameExpressionTypeInfo((JetSimpleNameExpression) selectorExpression, receiver, callOperationNode, context));\n        }\n        else if (selectorExpression instanceof JetQualifiedExpression) {\n            JetQualifiedExpression qualifiedExpression = (JetQualifiedExpression) selectorExpression;\n            JetExpression newReceiverExpression = qualifiedExpression.getReceiverExpression();\n            TypeInfoForCall newReceiverTypeInfo = getSelectorReturnTypeInfo(\n                    receiver, callOperationNode, newReceiverExpression, context.replaceExpectedType(NO_EXPECTED_TYPE), resolveMode);\n            JetType newReceiverType = newReceiverTypeInfo.getType();\n            DataFlowInfo newReceiverDataFlowInfo = newReceiverTypeInfo.getDataFlowInfo();\n            JetExpression newSelectorExpression = qualifiedExpression.getSelectorExpression();\n            if (newReceiverType != null && newSelectorExpression != null) {\n                ExpressionReceiver expressionReceiver = new ExpressionReceiver(newReceiverExpression, newReceiverType);\n                return getSelectorReturnTypeInfo(\n                        expressionReceiver, qualifiedExpression.getOperationTokenNode(),\n                        newSelectorExpression, context.replaceDataFlowInfo(newReceiverDataFlowInfo), resolveMode);\n            }\n        }\n        else {\n            context.trace.report(ILLEGAL_SELECTOR.on(selectorExpression, selectorExpression.getText()));\n        }\n        return TypeInfoForCall.create(null, context.dataFlowInfo);\n    }","id":55745,"modified_method":"@NotNull\n    private TypeInfoForCall getSelectorReturnTypeInfo(\n            @NotNull ReceiverValue receiver,\n            @Nullable ASTNode callOperationNode,\n            @NotNull JetExpression selectorExpression,\n            @NotNull ResolutionContext context,\n            @NotNull ResolveMode resolveMode\n    ) {\n        if (selectorExpression instanceof JetCallExpression) {\n            return getCallExpressionTypeInfoForCallWithoutFinalTypeCheck((JetCallExpression) selectorExpression, receiver,\n                                                                         callOperationNode, context, resolveMode);\n        }\n        else if (selectorExpression instanceof JetSimpleNameExpression) {\n            return TypeInfoForCall.create(\n                    getSimpleNameExpressionTypeInfo((JetSimpleNameExpression) selectorExpression, receiver, callOperationNode, context));\n        }\n        else if (selectorExpression instanceof JetQualifiedExpression) {\n            JetQualifiedExpression qualifiedExpression = (JetQualifiedExpression) selectorExpression;\n            JetExpression newReceiverExpression = qualifiedExpression.getReceiverExpression();\n            TypeInfoForCall newReceiverTypeInfo = getSelectorReturnTypeInfo(\n                    receiver, callOperationNode, newReceiverExpression, context.replaceExpectedType(NO_EXPECTED_TYPE), resolveMode);\n            JetType newReceiverType = newReceiverTypeInfo.getType();\n            DataFlowInfo newReceiverDataFlowInfo = newReceiverTypeInfo.getDataFlowInfo();\n            JetExpression newSelectorExpression = qualifiedExpression.getSelectorExpression();\n            if (newReceiverType != null && newSelectorExpression != null) {\n                ExpressionReceiver expressionReceiver = new ExpressionReceiver(newReceiverExpression, newReceiverType);\n                return getSelectorReturnTypeInfo(\n                        expressionReceiver, qualifiedExpression.getOperationTokenNode(),\n                        newSelectorExpression, context.replaceDataFlowInfo(newReceiverDataFlowInfo), resolveMode);\n            }\n        }\n        else {\n            context.trace.report(ILLEGAL_SELECTOR.on(selectorExpression, selectorExpression.getText()));\n        }\n        return TypeInfoForCall.create(null, context.dataFlowInfo);\n    }","commit_id":"fe6616135208bf4b593090dd6595b1b3f26c06a4","url":"https://github.com/JetBrains/kotlin"},{"original_method":"@NotNull\n    public JetTypeInfo getArgumentTypeInfo(\n            @Nullable JetExpression expression,\n            @NotNull CallResolutionContext<?> context,\n            @NotNull ResolveArgumentsMode resolveArgumentsMode,\n            @Nullable TemporaryBindingTrace traceToCommitForCall\n    ) {\n        if (expression == null) {\n            return JetTypeInfo.create(null, context.dataFlowInfo);\n        }\n        if (expression instanceof JetFunctionLiteralExpression) {\n            return getFunctionLiteralTypeInfo((JetFunctionLiteralExpression) expression, context, resolveArgumentsMode);\n        }\n        JetTypeInfo recordedTypeInfo = getRecordedTypeInfo(expression, context.trace.getBindingContext());\n        if (recordedTypeInfo != null) {\n            return recordedTypeInfo;\n        }\n        ResolutionContext newContext = context.replaceExpectedType(TypeUtils.UNKNOWN_EXPECTED_TYPE).replaceContextDependency(\n                ContextDependency.DEPENDENT);\n        JetTypeInfo result = expressionTypingServices.getTypeInfo(expression, newContext);\n\n        if (traceToCommitForCall != null) {\n            traceToCommitForCall.commit();\n        }\n        return result;\n    }","id":55746,"modified_method":"@NotNull\n    public JetTypeInfo getArgumentTypeInfo(\n            @Nullable JetExpression expression,\n            @NotNull CallResolutionContext<?> context,\n            @NotNull ResolveArgumentsMode resolveArgumentsMode\n    ) {\n        if (expression == null) {\n            return JetTypeInfo.create(null, context.dataFlowInfo);\n        }\n        if (expression instanceof JetFunctionLiteralExpression) {\n            return getFunctionLiteralTypeInfo((JetFunctionLiteralExpression) expression, context, resolveArgumentsMode);\n        }\n        JetTypeInfo recordedTypeInfo = getRecordedTypeInfo(expression, context.trace.getBindingContext());\n        if (recordedTypeInfo != null) {\n            return recordedTypeInfo;\n        }\n        ResolutionContext newContext = context.replaceExpectedType(TypeUtils.UNKNOWN_EXPECTED_TYPE).replaceContextDependency(\n                ContextDependency.DEPENDENT);\n\n        return expressionTypingServices.getTypeInfo(expression, newContext);\n    }","commit_id":"7fce75bc1f8cf33ed683c243eb3c742c9417eb65","url":"https://github.com/JetBrains/kotlin"},{"original_method":"private void addConstraintForValueArgument(\n            @NotNull ValueArgument valueArgument,\n            @NotNull ValueParameterDescriptor valueParameterDescriptor,\n            @NotNull TypeSubstitutor substitutor,\n            @NotNull ConstraintSystem constraintSystem,\n            @NotNull CallCandidateResolutionContext<?> context,\n            @Nullable boolean[] isErrorType,\n            @NotNull CallResolverUtil.ResolveArgumentsMode resolveFunctionArgumentBodies) {\n\n        JetType effectiveExpectedType = getEffectiveExpectedType(valueParameterDescriptor, valueArgument);\n        JetExpression argumentExpression = valueArgument.getArgumentExpression();\n\n        TemporaryBindingTrace traceToResolveArgument = TemporaryBindingTrace.create(\n                context.trace, \"transient trace to resolve argument\", argumentExpression);\n        JetType expectedType = substitutor.substitute(effectiveExpectedType, Variance.INVARIANT);\n        DataFlowInfo dataFlowInfoForArgument = context.candidateCall.getDataFlowInfoForArguments().getInfo(valueArgument);\n        CallResolutionContext<?> newContext = context.replaceBindingTrace(traceToResolveArgument)\n                .replaceExpectedType(expectedType).replaceDataFlowInfo(dataFlowInfoForArgument);\n\n        JetTypeInfo typeInfoForCall = argumentTypeResolver.getArgumentTypeInfo(\n                argumentExpression, newContext, resolveFunctionArgumentBodies, traceToResolveArgument);\n        context.candidateCall.getDataFlowInfoForArguments().updateInfo(valueArgument, typeInfoForCall.getDataFlowInfo());\n\n        JetType type = updateResultTypeForSmartCasts(typeInfoForCall.getType(), argumentExpression, dataFlowInfoForArgument, context.trace);\n        constraintSystem.addSubtypeConstraint(type, effectiveExpectedType, ConstraintPosition.getValueParameterPosition(\n                valueParameterDescriptor.getIndex()));\n        if (isErrorType != null) {\n            isErrorType[0] = type == null || ErrorUtils.isErrorType(type);\n        }\n    }","id":55747,"modified_method":"private void addConstraintForValueArgument(\n            @NotNull ValueArgument valueArgument,\n            @NotNull ValueParameterDescriptor valueParameterDescriptor,\n            @NotNull TypeSubstitutor substitutor,\n            @NotNull ConstraintSystem constraintSystem,\n            @NotNull CallCandidateResolutionContext<?> context,\n            @Nullable boolean[] isErrorType,\n            @NotNull CallResolverUtil.ResolveArgumentsMode resolveFunctionArgumentBodies) {\n\n        JetType effectiveExpectedType = getEffectiveExpectedType(valueParameterDescriptor, valueArgument);\n        JetExpression argumentExpression = valueArgument.getArgumentExpression();\n\n        JetType expectedType = substitutor.substitute(effectiveExpectedType, Variance.INVARIANT);\n        DataFlowInfo dataFlowInfoForArgument = context.candidateCall.getDataFlowInfoForArguments().getInfo(valueArgument);\n        CallResolutionContext<?> newContext = context.replaceExpectedType(expectedType).replaceDataFlowInfo(dataFlowInfoForArgument);\n\n        JetTypeInfo typeInfoForCall = argumentTypeResolver.getArgumentTypeInfo(\n                argumentExpression, newContext, resolveFunctionArgumentBodies);\n        context.candidateCall.getDataFlowInfoForArguments().updateInfo(valueArgument, typeInfoForCall.getDataFlowInfo());\n\n        JetType type = updateResultTypeForSmartCasts(typeInfoForCall.getType(), argumentExpression, dataFlowInfoForArgument, context.trace);\n        constraintSystem.addSubtypeConstraint(type, effectiveExpectedType, ConstraintPosition.getValueParameterPosition(\n                valueParameterDescriptor.getIndex()));\n        if (isErrorType != null) {\n            isErrorType[0] = type == null || ErrorUtils.isErrorType(type);\n        }\n    }","commit_id":"7fce75bc1f8cf33ed683c243eb3c742c9417eb65","url":"https://github.com/JetBrains/kotlin"},{"original_method":"private <D extends CallableDescriptor, C extends CallResolutionContext<C>> ValueArgumentsCheckingResult checkValueArgumentTypes(\n            @NotNull CallResolutionContext<C> context,\n            @NotNull ResolvedCallImpl<D> candidateCall,\n            @NotNull BindingTrace trace,\n            @NotNull CallResolverUtil.ResolveArgumentsMode resolveFunctionArgumentBodies) {\n        ResolutionStatus resultStatus = SUCCESS;\n        List<JetType> argumentTypes = Lists.newArrayList();\n        MutableDataFlowInfoForArguments infoForArguments = candidateCall.getDataFlowInfoForArguments();\n        for (Map.Entry<ValueParameterDescriptor, ResolvedValueArgument> entry : candidateCall.getValueArguments().entrySet()) {\n            ValueParameterDescriptor parameterDescriptor = entry.getKey();\n            ResolvedValueArgument resolvedArgument = entry.getValue();\n\n\n            for (ValueArgument argument : resolvedArgument.getArguments()) {\n                JetExpression expression = argument.getArgumentExpression();\n                if (expression == null) continue;\n\n                JetType expectedType = getEffectiveExpectedType(parameterDescriptor, argument);\n                if (TypeUtils.dependsOnTypeParameters(expectedType, candidateCall.getCandidateDescriptor().getTypeParameters())) {\n                    expectedType = NO_EXPECTED_TYPE;\n                }\n\n                CallResolutionContext<?> newContext = context.replaceDataFlowInfo(infoForArguments.getInfo(argument))\n                        .replaceBindingTrace(trace).replaceExpectedType(expectedType);\n                JetTypeInfo typeInfoForCall = argumentTypeResolver.getArgumentTypeInfo(\n                        expression, newContext, resolveFunctionArgumentBodies, null);\n                JetType type = typeInfoForCall.getType();\n                infoForArguments.updateInfo(argument, typeInfoForCall.getDataFlowInfo());\n\n                if (type == null || (ErrorUtils.isErrorType(type) && type != PLACEHOLDER_FUNCTION_TYPE)) {\n                    candidateCall.argumentHasNoType();\n                    argumentTypes.add(type);\n                }\n                else {\n                    JetType resultingType;\n                    if (noExpectedType(expectedType) || ArgumentTypeResolver.isSubtypeOfForArgumentType(type, expectedType)) {\n                        resultingType = type;\n                    }\n                    else {\n                        resultingType = autocastValueArgumentTypeIfPossible(expression, expectedType, type, newContext);\n                        if (resultingType == null) {\n                            resultingType = type;\n                            resultStatus = OTHER_ERROR;\n                        }\n                    }\n\n                    argumentTypes.add(resultingType);\n                }\n            }\n        }\n        return new ValueArgumentsCheckingResult(resultStatus, argumentTypes);\n    }","id":55748,"modified_method":"private <D extends CallableDescriptor, C extends CallResolutionContext<C>> ValueArgumentsCheckingResult checkValueArgumentTypes(\n            @NotNull CallResolutionContext<C> context,\n            @NotNull ResolvedCallImpl<D> candidateCall,\n            @NotNull BindingTrace trace,\n            @NotNull CallResolverUtil.ResolveArgumentsMode resolveFunctionArgumentBodies) {\n        ResolutionStatus resultStatus = SUCCESS;\n        List<JetType> argumentTypes = Lists.newArrayList();\n        MutableDataFlowInfoForArguments infoForArguments = candidateCall.getDataFlowInfoForArguments();\n        for (Map.Entry<ValueParameterDescriptor, ResolvedValueArgument> entry : candidateCall.getValueArguments().entrySet()) {\n            ValueParameterDescriptor parameterDescriptor = entry.getKey();\n            ResolvedValueArgument resolvedArgument = entry.getValue();\n\n\n            for (ValueArgument argument : resolvedArgument.getArguments()) {\n                JetExpression expression = argument.getArgumentExpression();\n                if (expression == null) continue;\n\n                JetType expectedType = getEffectiveExpectedType(parameterDescriptor, argument);\n                if (TypeUtils.dependsOnTypeParameters(expectedType, candidateCall.getCandidateDescriptor().getTypeParameters())) {\n                    expectedType = NO_EXPECTED_TYPE;\n                }\n\n                CallResolutionContext<?> newContext = context.replaceDataFlowInfo(infoForArguments.getInfo(argument))\n                        .replaceBindingTrace(trace).replaceExpectedType(expectedType);\n                JetTypeInfo typeInfoForCall = argumentTypeResolver.getArgumentTypeInfo(\n                        expression, newContext, resolveFunctionArgumentBodies);\n                JetType type = typeInfoForCall.getType();\n                infoForArguments.updateInfo(argument, typeInfoForCall.getDataFlowInfo());\n\n                if (type == null || (ErrorUtils.isErrorType(type) && type != PLACEHOLDER_FUNCTION_TYPE)) {\n                    candidateCall.argumentHasNoType();\n                    argumentTypes.add(type);\n                }\n                else {\n                    JetType resultingType;\n                    if (noExpectedType(expectedType) || ArgumentTypeResolver.isSubtypeOfForArgumentType(type, expectedType)) {\n                        resultingType = type;\n                    }\n                    else {\n                        resultingType = autocastValueArgumentTypeIfPossible(expression, expectedType, type, newContext);\n                        if (resultingType == null) {\n                            resultingType = type;\n                            resultStatus = OTHER_ERROR;\n                        }\n                    }\n\n                    argumentTypes.add(resultingType);\n                }\n            }\n        }\n        return new ValueArgumentsCheckingResult(resultStatus, argumentTypes);\n    }","commit_id":"7fce75bc1f8cf33ed683c243eb3c742c9417eb65","url":"https://github.com/JetBrains/kotlin"},{"original_method":"@Override\n    public KotlinTypeInfo visitParenthesizedExpression(@NotNull KtParenthesizedExpression expression, ExpressionTypingContext context) {\n        KtExpression innerExpression = expression.getExpression();\n        if (innerExpression == null) {\n            return TypeInfoFactoryKt.noTypeInfo(context);\n        }\n        KotlinTypeInfo result = facade.getTypeInfo(innerExpression, context.replaceScope(context.scope));\n        KotlinType resultType = result.getType();\n        if (resultType != null) {\n            DataFlowValue innerValue = DataFlowValueFactory.createDataFlowValue(innerExpression, resultType, context);\n            DataFlowValue resultValue = DataFlowValueFactory.createDataFlowValue(expression, resultType, context);\n            result = result.replaceDataFlowInfo(result.getDataFlowInfo().assign(resultValue, innerValue));\n        }\n        return result;\n    }","id":55749,"modified_method":"@Override\n    public KotlinTypeInfo visitParenthesizedExpression(@NotNull KtParenthesizedExpression expression, ExpressionTypingContext context) {\n        KtExpression innerExpression = expression.getExpression();\n        if (innerExpression == null) {\n            return TypeInfoFactoryKt.noTypeInfo(context);\n        }\n        return facade.getTypeInfo(innerExpression, context.replaceScope(context.scope));\n    }","commit_id":"e515d7f773e72e5c40f1eae7f4b6a13e1d328a25","url":"https://github.com/JetBrains/kotlin"},{"original_method":"@NotNull\n    private KotlinTypeInfo visitElvisExpression(\n            @NotNull KtBinaryExpression expression,\n            @NotNull ExpressionTypingContext contextWithExpectedType\n    ) {\n        ExpressionTypingContext context = contextWithExpectedType.replaceExpectedType(NO_EXPECTED_TYPE);\n        KtExpression left = expression.getLeft();\n        KtExpression right = expression.getRight();\n\n        if (left == null || right == null) {\n            getTypeInfoOrNullType(left, context, facade);\n            return TypeInfoFactoryKt.noTypeInfo(context);\n        }\n\n        Call call = createCallForSpecialConstruction(expression, expression.getOperationReference(), Lists.newArrayList(left, right));\n        ResolvedCall<FunctionDescriptor> resolvedCall = components.controlStructureTypingUtils.resolveSpecialConstructionAsCall(\n                call, ResolveConstruct.ELVIS, Lists.newArrayList(\"left\", \"right\"),\n                Lists.newArrayList(true, false), contextWithExpectedType, null);\n        KotlinTypeInfo leftTypeInfo = BindingContextUtils.getRecordedTypeInfo(left, context.trace.getBindingContext());\n        if (ArgumentTypeResolver.isFunctionLiteralArgument(left, context)) {\n            context.trace.report(USELESS_ELVIS_ON_LAMBDA_EXPRESSION.on(expression.getOperationReference()));\n            if (leftTypeInfo == null) return TypeInfoFactoryKt.noTypeInfo(context);\n        }\n        assert leftTypeInfo != null : \"Left expression was not processed: \" + expression;\n        KotlinType leftType = leftTypeInfo.getType();\n        if (leftType != null && isKnownToBeNotNull(left, leftType, context)) {\n            context.trace.report(USELESS_ELVIS.on(expression, leftType));\n        }\n        KotlinTypeInfo rightTypeInfo = BindingContextUtils.getRecordedTypeInfo(right, context.trace.getBindingContext());\n        if (rightTypeInfo == null && ArgumentTypeResolver.isFunctionLiteralArgument(right, context)) {\n            // the type is computed later in call completer according to the '?:' semantics as a function\n            return TypeInfoFactoryKt.noTypeInfo(context);\n        }\n        assert rightTypeInfo != null : \"Right expression was not processed: \" + expression;\n        boolean loopBreakContinuePossible = leftTypeInfo.getJumpOutPossible() || rightTypeInfo.getJumpOutPossible();\n        KotlinType rightType = rightTypeInfo.getType();\n\n        // Only left argument DFA is taken into account here: we cannot be sure that right argument is joined\n        // (we merge it with right DFA if right argument contains no jump outside)\n        DataFlowInfo dataFlowInfo = resolvedCall.getDataFlowInfoForArguments().getInfo(call.getValueArguments().get(1));\n\n        KotlinType type = resolvedCall.getResultingDescriptor().getReturnType();\n        if (type == null ||\n            rightType == null ||\n            leftType == null && KotlinBuiltIns.isNothing(rightType)) return TypeInfoFactoryKt.noTypeInfo(dataFlowInfo);\n\n        if (leftType != null) {\n            DataFlowValue leftValue = createDataFlowValue(left, leftType, context);\n            DataFlowInfo rightDataFlowInfo = resolvedCall.getDataFlowInfoForArguments().getResultInfo();\n            boolean jumpInRight = KotlinBuiltIns.isNothing(rightType);\n            DataFlowValue nullValue = DataFlowValue.nullValue(components.builtIns);\n            // left argument is considered not-null if it's not-null also in right part or if we have jump in right part\n            if (jumpInRight || !rightDataFlowInfo.getPredictableNullability(leftValue).canBeNull()) {\n                dataFlowInfo = dataFlowInfo.disequate(leftValue, nullValue);\n                if (left instanceof KtBinaryExpressionWithTypeRHS) {\n                    dataFlowInfo = establishSubtypingForTypeRHS((KtBinaryExpressionWithTypeRHS) left, dataFlowInfo, context);\n                }\n            }\n            DataFlowValue resultValue = DataFlowValueFactory.createDataFlowValue(expression, type, context);\n            dataFlowInfo = dataFlowInfo.assign(resultValue, leftValue).disequate(resultValue, nullValue);\n            if (!jumpInRight) {\n                DataFlowValue rightValue = DataFlowValueFactory.createDataFlowValue(right, rightType, context);\n                rightDataFlowInfo = rightDataFlowInfo.assign(resultValue, rightValue);\n                dataFlowInfo = dataFlowInfo.or(rightDataFlowInfo);\n            }\n        }\n\n        // Sometimes return type for special call for elvis operator might be nullable,\n        // but result is not nullable if the right type is not nullable\n        if (!TypeUtils.isNullableType(rightType) && TypeUtils.isNullableType(type)) {\n            type = TypeUtils.makeNotNullable(type);\n        }\n        if (context.contextDependency == DEPENDENT) {\n            return TypeInfoFactoryKt.createTypeInfo(type, dataFlowInfo);\n        }\n\n        // If break or continue was possible, take condition check info as the jump info\n        return TypeInfoFactoryKt.createTypeInfo(components.dataFlowAnalyzer.checkType(type, expression, contextWithExpectedType),\n                                                dataFlowInfo,\n                                                loopBreakContinuePossible,\n                                                context.dataFlowInfo);\n    }","id":55750,"modified_method":"@NotNull\n    private KotlinTypeInfo visitElvisExpression(\n            @NotNull KtBinaryExpression expression,\n            @NotNull ExpressionTypingContext contextWithExpectedType\n    ) {\n        ExpressionTypingContext context = contextWithExpectedType.replaceExpectedType(NO_EXPECTED_TYPE);\n        KtExpression left = expression.getLeft();\n        KtExpression right = expression.getRight();\n\n        if (left == null || right == null) {\n            getTypeInfoOrNullType(left, context, facade);\n            return TypeInfoFactoryKt.noTypeInfo(context);\n        }\n\n        Call call = createCallForSpecialConstruction(expression, expression.getOperationReference(), Lists.newArrayList(left, right));\n        ResolvedCall<FunctionDescriptor> resolvedCall = components.controlStructureTypingUtils.resolveSpecialConstructionAsCall(\n                call, ResolveConstruct.ELVIS, Lists.newArrayList(\"left\", \"right\"),\n                Lists.newArrayList(true, false), contextWithExpectedType, null);\n        KotlinTypeInfo leftTypeInfo = BindingContextUtils.getRecordedTypeInfo(left, context.trace.getBindingContext());\n        if (ArgumentTypeResolver.isFunctionLiteralArgument(left, context)) {\n            context.trace.report(USELESS_ELVIS_ON_LAMBDA_EXPRESSION.on(expression.getOperationReference()));\n            if (leftTypeInfo == null) return TypeInfoFactoryKt.noTypeInfo(context);\n        }\n        assert leftTypeInfo != null : \"Left expression was not processed: \" + expression;\n        KotlinType leftType = leftTypeInfo.getType();\n        if (leftType != null && isKnownToBeNotNull(left, leftType, context)) {\n            context.trace.report(USELESS_ELVIS.on(expression, leftType));\n        }\n        KotlinTypeInfo rightTypeInfo = BindingContextUtils.getRecordedTypeInfo(right, context.trace.getBindingContext());\n        if (rightTypeInfo == null && ArgumentTypeResolver.isFunctionLiteralArgument(right, context)) {\n            // the type is computed later in call completer according to the '?:' semantics as a function\n            return TypeInfoFactoryKt.noTypeInfo(context);\n        }\n        assert rightTypeInfo != null : \"Right expression was not processed: \" + expression;\n        boolean loopBreakContinuePossible = leftTypeInfo.getJumpOutPossible() || rightTypeInfo.getJumpOutPossible();\n        KotlinType rightType = rightTypeInfo.getType();\n\n        // Only left argument DFA is taken into account here: we cannot be sure that right argument is joined\n        // (we merge it with right DFA if right argument contains no jump outside)\n        DataFlowInfo dataFlowInfo = resolvedCall.getDataFlowInfoForArguments().getInfo(call.getValueArguments().get(1));\n\n        KotlinType type = resolvedCall.getResultingDescriptor().getReturnType();\n        if (type == null ||\n            rightType == null ||\n            leftType == null && KotlinBuiltIns.isNothing(rightType)) return TypeInfoFactoryKt.noTypeInfo(dataFlowInfo);\n\n        if (leftType != null) {\n            DataFlowValue leftValue = createDataFlowValue(left, leftType, context);\n            DataFlowInfo rightDataFlowInfo = resolvedCall.getDataFlowInfoForArguments().getResultInfo();\n            boolean jumpInRight = KotlinBuiltIns.isNothing(rightType);\n            DataFlowValue nullValue = DataFlowValue.nullValue(components.builtIns);\n            // left argument is considered not-null if it's not-null also in right part or if we have jump in right part\n            if (jumpInRight || !rightDataFlowInfo.getPredictableNullability(leftValue).canBeNull()) {\n                dataFlowInfo = dataFlowInfo.disequate(leftValue, nullValue);\n                if (left instanceof KtBinaryExpressionWithTypeRHS) {\n                    dataFlowInfo = establishSubtypingForTypeRHS((KtBinaryExpressionWithTypeRHS) left, dataFlowInfo, context);\n                }\n            }\n            DataFlowValue resultValue = DataFlowValueFactory.createDataFlowValue(expression, type, context);\n            dataFlowInfo = dataFlowInfo.disequate(resultValue, nullValue);\n            if (!jumpInRight) {\n                dataFlowInfo = dataFlowInfo.or(rightDataFlowInfo);\n            }\n        }\n\n        // Sometimes return type for special call for elvis operator might be nullable,\n        // but result is not nullable if the right type is not nullable\n        if (!TypeUtils.isNullableType(rightType) && TypeUtils.isNullableType(type)) {\n            type = TypeUtils.makeNotNullable(type);\n        }\n        if (context.contextDependency == DEPENDENT) {\n            return TypeInfoFactoryKt.createTypeInfo(type, dataFlowInfo);\n        }\n\n        // If break or continue was possible, take condition check info as the jump info\n        return TypeInfoFactoryKt.createTypeInfo(components.dataFlowAnalyzer.checkType(type, expression, contextWithExpectedType),\n                                                dataFlowInfo,\n                                                loopBreakContinuePossible,\n                                                context.dataFlowInfo);\n    }","commit_id":"e515d7f773e72e5c40f1eae7f4b6a13e1d328a25","url":"https://github.com/JetBrains/kotlin"},{"original_method":"public KotlinTypeInfo visitIfExpression(KtIfExpression ifExpression, ExpressionTypingContext contextWithExpectedType, boolean isStatement) {\n        components.dataFlowAnalyzer.recordExpectedType(contextWithExpectedType.trace, ifExpression, contextWithExpectedType.expectedType);\n\n        ExpressionTypingContext context = contextWithExpectedType.replaceExpectedType(NO_EXPECTED_TYPE);\n        KtExpression condition = ifExpression.getCondition();\n        DataFlowInfo conditionDataFlowInfo = checkCondition(context.scope, condition, context);\n        boolean loopBreakContinuePossibleInCondition = condition != null && containsJumpOutOfLoop(condition, context);\n\n        KtExpression elseBranch = ifExpression.getElse();\n        KtExpression thenBranch = ifExpression.getThen();\n\n        LexicalWritableScope thenScope = newWritableScopeImpl(context, LexicalScopeKind.THEN, components.overloadChecker);\n        LexicalWritableScope elseScope = newWritableScopeImpl(context, LexicalScopeKind.ELSE, components.overloadChecker);\n        DataFlowInfo thenInfo = components.dataFlowAnalyzer.extractDataFlowInfoFromCondition(condition, true, context).and(conditionDataFlowInfo);\n        DataFlowInfo elseInfo = components.dataFlowAnalyzer.extractDataFlowInfoFromCondition(condition, false, context).and(conditionDataFlowInfo);\n\n        if (elseBranch == null) {\n            if (thenBranch != null) {\n                KotlinTypeInfo result = getTypeInfoWhenOnlyOneBranchIsPresent(\n                        thenBranch, thenScope, thenInfo, elseInfo, contextWithExpectedType, ifExpression);\n                // If jump was possible, take condition check info as the jump info\n                return result.getJumpOutPossible()\n                       ? result.replaceJumpOutPossible(true).replaceJumpFlowInfo(conditionDataFlowInfo)\n                       : result;\n            }\n            return TypeInfoFactoryKt.createTypeInfo(components.builtIns.getUnitType(), thenInfo.or(elseInfo));\n        }\n        if (thenBranch == null) {\n            return getTypeInfoWhenOnlyOneBranchIsPresent(\n                    elseBranch, elseScope, elseInfo, thenInfo, contextWithExpectedType, ifExpression);\n        }\n        KtPsiFactory psiFactory = KtPsiFactoryKt.KtPsiFactory(ifExpression);\n        KtBlockExpression thenBlock = psiFactory.wrapInABlockWrapper(thenBranch);\n        KtBlockExpression elseBlock = psiFactory.wrapInABlockWrapper(elseBranch);\n        Call callForIf = createCallForSpecialConstruction(ifExpression, ifExpression, Lists.newArrayList(thenBlock, elseBlock));\n        MutableDataFlowInfoForArguments dataFlowInfoForArguments =\n                    createDataFlowInfoForArgumentsForIfCall(callForIf, conditionDataFlowInfo, thenInfo, elseInfo);\n        ResolvedCall<FunctionDescriptor> resolvedCall = components.controlStructureTypingUtils.resolveSpecialConstructionAsCall(\n                callForIf, ResolveConstruct.IF, Lists.newArrayList(\"thenBranch\", \"elseBranch\"),\n                Lists.newArrayList(false, false),\n                contextWithExpectedType, dataFlowInfoForArguments);\n\n        BindingContext bindingContext = context.trace.getBindingContext();\n        KotlinTypeInfo thenTypeInfo = BindingContextUtils.getRecordedTypeInfo(thenBranch, bindingContext);\n        KotlinTypeInfo elseTypeInfo = BindingContextUtils.getRecordedTypeInfo(elseBranch, bindingContext);\n        assert thenTypeInfo != null || elseTypeInfo != null : \"Both branches of if expression were not processed: \" + ifExpression.getText();\n\n        KotlinType resultType = resolvedCall.getResultingDescriptor().getReturnType();\n        boolean loopBreakContinuePossible = loopBreakContinuePossibleInCondition;\n        DataFlowInfo resultDataFlowInfo;\n\n        if (elseTypeInfo == null) {\n            loopBreakContinuePossible |= thenTypeInfo.getJumpOutPossible();\n            resultDataFlowInfo = thenTypeInfo.getDataFlowInfo();\n        }\n        else if (thenTypeInfo == null) {\n            loopBreakContinuePossible |= elseTypeInfo.getJumpOutPossible();\n            resultDataFlowInfo = elseTypeInfo.getDataFlowInfo();\n        }\n        else {\n            KotlinType thenType = thenTypeInfo.getType();\n            KotlinType elseType = elseTypeInfo.getType();\n            DataFlowInfo thenDataFlowInfo = thenTypeInfo.getDataFlowInfo();\n            DataFlowInfo elseDataFlowInfo = elseTypeInfo.getDataFlowInfo();\n            if (resultType != null && thenType != null && elseType != null) {\n                DataFlowValue resultValue = DataFlowValueFactory.createDataFlowValue(ifExpression, resultType, context);\n                DataFlowValue thenValue = DataFlowValueFactory.createDataFlowValue(thenBranch, thenType, context);\n                thenDataFlowInfo = thenDataFlowInfo.assign(resultValue, thenValue);\n                DataFlowValue elseValue = DataFlowValueFactory.createDataFlowValue(elseBranch, elseType, context);\n                elseDataFlowInfo = elseDataFlowInfo.assign(resultValue, elseValue);\n            }\n\n            loopBreakContinuePossible |= thenTypeInfo.getJumpOutPossible() || elseTypeInfo.getJumpOutPossible();\n\n            boolean jumpInThen = thenType != null && KotlinBuiltIns.isNothing(thenType);\n            boolean jumpInElse = elseType != null && KotlinBuiltIns.isNothing(elseType);\n\n            if (thenType == null && elseType == null) {\n                resultDataFlowInfo = thenDataFlowInfo.or(elseDataFlowInfo);\n            }\n            else if (thenType == null || (jumpInThen && !jumpInElse)) {\n                resultDataFlowInfo = elseDataFlowInfo;\n            }\n            else if (elseType == null || (jumpInElse && !jumpInThen)) {\n                resultDataFlowInfo = thenDataFlowInfo;\n            }\n            else {\n                resultDataFlowInfo = thenDataFlowInfo.or(elseDataFlowInfo);\n            }\n            if (thenType == null && jumpInElse ||\n                elseType == null && jumpInThen) {\n                return TypeInfoFactoryKt.noTypeInfo(resultDataFlowInfo);\n            }\n        }\n        // If break or continue was possible, take condition check info as the jump info\n        return TypeInfoFactoryKt.createTypeInfo(\n                components.dataFlowAnalyzer.checkType(resultType, ifExpression, contextWithExpectedType),\n                resultDataFlowInfo, loopBreakContinuePossible,\n                loopBreakContinuePossibleInCondition ? context.dataFlowInfo : conditionDataFlowInfo);\n    }","id":55751,"modified_method":"public KotlinTypeInfo visitIfExpression(KtIfExpression ifExpression, ExpressionTypingContext contextWithExpectedType, boolean isStatement) {\n        components.dataFlowAnalyzer.recordExpectedType(contextWithExpectedType.trace, ifExpression, contextWithExpectedType.expectedType);\n\n        ExpressionTypingContext context = contextWithExpectedType.replaceExpectedType(NO_EXPECTED_TYPE);\n        KtExpression condition = ifExpression.getCondition();\n        DataFlowInfo conditionDataFlowInfo = checkCondition(context.scope, condition, context);\n        boolean loopBreakContinuePossibleInCondition = condition != null && containsJumpOutOfLoop(condition, context);\n\n        KtExpression elseBranch = ifExpression.getElse();\n        KtExpression thenBranch = ifExpression.getThen();\n\n        LexicalWritableScope thenScope = newWritableScopeImpl(context, LexicalScopeKind.THEN, components.overloadChecker);\n        LexicalWritableScope elseScope = newWritableScopeImpl(context, LexicalScopeKind.ELSE, components.overloadChecker);\n        DataFlowInfo thenInfo = components.dataFlowAnalyzer.extractDataFlowInfoFromCondition(condition, true, context).and(conditionDataFlowInfo);\n        DataFlowInfo elseInfo = components.dataFlowAnalyzer.extractDataFlowInfoFromCondition(condition, false, context).and(conditionDataFlowInfo);\n\n        if (elseBranch == null) {\n            if (thenBranch != null) {\n                KotlinTypeInfo result = getTypeInfoWhenOnlyOneBranchIsPresent(\n                        thenBranch, thenScope, thenInfo, elseInfo, contextWithExpectedType, ifExpression);\n                // If jump was possible, take condition check info as the jump info\n                return result.getJumpOutPossible()\n                       ? result.replaceJumpOutPossible(true).replaceJumpFlowInfo(conditionDataFlowInfo)\n                       : result;\n            }\n            return TypeInfoFactoryKt.createTypeInfo(components.builtIns.getUnitType(), thenInfo.or(elseInfo));\n        }\n        if (thenBranch == null) {\n            return getTypeInfoWhenOnlyOneBranchIsPresent(\n                    elseBranch, elseScope, elseInfo, thenInfo, contextWithExpectedType, ifExpression);\n        }\n        KtPsiFactory psiFactory = KtPsiFactoryKt.KtPsiFactory(ifExpression);\n        KtBlockExpression thenBlock = psiFactory.wrapInABlockWrapper(thenBranch);\n        KtBlockExpression elseBlock = psiFactory.wrapInABlockWrapper(elseBranch);\n        Call callForIf = createCallForSpecialConstruction(ifExpression, ifExpression, Lists.newArrayList(thenBlock, elseBlock));\n        MutableDataFlowInfoForArguments dataFlowInfoForArguments =\n                    createDataFlowInfoForArgumentsForIfCall(callForIf, conditionDataFlowInfo, thenInfo, elseInfo);\n        ResolvedCall<FunctionDescriptor> resolvedCall = components.controlStructureTypingUtils.resolveSpecialConstructionAsCall(\n                callForIf, ResolveConstruct.IF, Lists.newArrayList(\"thenBranch\", \"elseBranch\"),\n                Lists.newArrayList(false, false),\n                contextWithExpectedType, dataFlowInfoForArguments);\n\n        BindingContext bindingContext = context.trace.getBindingContext();\n        KotlinTypeInfo thenTypeInfo = BindingContextUtils.getRecordedTypeInfo(thenBranch, bindingContext);\n        KotlinTypeInfo elseTypeInfo = BindingContextUtils.getRecordedTypeInfo(elseBranch, bindingContext);\n        assert thenTypeInfo != null || elseTypeInfo != null : \"Both branches of if expression were not processed: \" + ifExpression.getText();\n\n        KotlinType resultType = resolvedCall.getResultingDescriptor().getReturnType();\n        boolean loopBreakContinuePossible = loopBreakContinuePossibleInCondition;\n        DataFlowInfo resultDataFlowInfo;\n\n        if (elseTypeInfo == null) {\n            loopBreakContinuePossible |= thenTypeInfo.getJumpOutPossible();\n            resultDataFlowInfo = thenTypeInfo.getDataFlowInfo();\n        }\n        else if (thenTypeInfo == null) {\n            loopBreakContinuePossible |= elseTypeInfo.getJumpOutPossible();\n            resultDataFlowInfo = elseTypeInfo.getDataFlowInfo();\n        }\n        else {\n            KotlinType thenType = thenTypeInfo.getType();\n            KotlinType elseType = elseTypeInfo.getType();\n            DataFlowInfo thenDataFlowInfo = thenTypeInfo.getDataFlowInfo();\n            DataFlowInfo elseDataFlowInfo = elseTypeInfo.getDataFlowInfo();\n\n            loopBreakContinuePossible |= thenTypeInfo.getJumpOutPossible() || elseTypeInfo.getJumpOutPossible();\n\n            boolean jumpInThen = thenType != null && KotlinBuiltIns.isNothing(thenType);\n            boolean jumpInElse = elseType != null && KotlinBuiltIns.isNothing(elseType);\n\n            if (thenType == null && elseType == null) {\n                resultDataFlowInfo = thenDataFlowInfo.or(elseDataFlowInfo);\n            }\n            else if (thenType == null || (jumpInThen && !jumpInElse)) {\n                resultDataFlowInfo = elseDataFlowInfo;\n            }\n            else if (elseType == null || (jumpInElse && !jumpInThen)) {\n                resultDataFlowInfo = thenDataFlowInfo;\n            }\n            else {\n                resultDataFlowInfo = thenDataFlowInfo.or(elseDataFlowInfo);\n            }\n            if (thenType == null && jumpInElse ||\n                elseType == null && jumpInThen) {\n                return TypeInfoFactoryKt.noTypeInfo(resultDataFlowInfo);\n            }\n        }\n        // If break or continue was possible, take condition check info as the jump info\n        return TypeInfoFactoryKt.createTypeInfo(\n                components.dataFlowAnalyzer.checkType(resultType, ifExpression, contextWithExpectedType),\n                resultDataFlowInfo, loopBreakContinuePossible,\n                loopBreakContinuePossibleInCondition ? context.dataFlowInfo : conditionDataFlowInfo);\n    }","commit_id":"e515d7f773e72e5c40f1eae7f4b6a13e1d328a25","url":"https://github.com/JetBrains/kotlin"},{"original_method":"/**\n     * Visits block statements propagating data flow information from the first to the last.\n     * Determines block returned type and data flow information at the end of the block AND\n     * at the nearest jump point from the block beginning.\n     */\n    /*package*/ KotlinTypeInfo getBlockReturnedTypeWithWritableScope(\n            @NotNull LexicalWritableScope scope,\n            @NotNull List<? extends KtElement> block,\n            @NotNull CoercionStrategy coercionStrategyForLastExpression,\n            @NotNull ExpressionTypingContext context\n    ) {\n        if (block.isEmpty()) {\n            return TypeInfoFactoryKt.createTypeInfo(expressionTypingComponents.builtIns.getUnitType(), context);\n        }\n\n        ExpressionTypingInternals blockLevelVisitor = new ExpressionTypingVisitorDispatcher.ForBlock(\n                expressionTypingComponents, annotationChecker, scope);\n        ExpressionTypingContext newContext = context.replaceScope(scope).replaceExpectedType(NO_EXPECTED_TYPE);\n\n        KotlinTypeInfo result = TypeInfoFactoryKt.noTypeInfo(context);\n        // Jump point data flow info\n        DataFlowInfo beforeJumpInfo = newContext.dataFlowInfo;\n        boolean jumpOutPossible = false;\n        for (Iterator<? extends KtElement> iterator = block.iterator(); iterator.hasNext(); ) {\n            KtElement statement = iterator.next();\n            if (!(statement instanceof KtExpression)) {\n                continue;\n            }\n            KtExpression statementExpression = (KtExpression) statement;\n            if (!iterator.hasNext()) {\n                result = getTypeOfLastExpressionInBlock(\n                        statementExpression, newContext.replaceExpectedType(context.expectedType), coercionStrategyForLastExpression,\n                        blockLevelVisitor);\n                if (result.getType() != null && statementExpression.getParent() instanceof KtBlockExpression) {\n                    DataFlowValue lastExpressionValue = DataFlowValueFactory.createDataFlowValue(\n                            statementExpression, result.getType(), context);\n                    DataFlowValue blockExpressionValue = DataFlowValueFactory.createDataFlowValue(\n                            (KtBlockExpression) statementExpression.getParent(), result.getType(), context);\n                    result = result.replaceDataFlowInfo(result.getDataFlowInfo().assign(blockExpressionValue, lastExpressionValue));\n                }\n            }\n            else {\n                result = blockLevelVisitor\n                        .getTypeInfo(statementExpression, newContext.replaceContextDependency(ContextDependency.INDEPENDENT), true);\n            }\n\n            DataFlowInfo newDataFlowInfo = result.getDataFlowInfo();\n            // If jump is not possible, we take new data flow info before jump\n            if (!jumpOutPossible) {\n                beforeJumpInfo = result.getJumpFlowInfo();\n                jumpOutPossible = result.getJumpOutPossible();\n            }\n            if (newDataFlowInfo != context.dataFlowInfo) {\n                newContext = newContext.replaceDataFlowInfo(newDataFlowInfo);\n                // We take current data flow info if jump there is not possible\n            }\n            blockLevelVisitor = new ExpressionTypingVisitorDispatcher.ForBlock(expressionTypingComponents, annotationChecker, scope);\n        }\n        return result.replaceJumpOutPossible(jumpOutPossible).replaceJumpFlowInfo(beforeJumpInfo);\n    }","id":55752,"modified_method":"/**\n     * Visits block statements propagating data flow information from the first to the last.\n     * Determines block returned type and data flow information at the end of the block AND\n     * at the nearest jump point from the block beginning.\n     */\n    /*package*/ KotlinTypeInfo getBlockReturnedTypeWithWritableScope(\n            @NotNull LexicalWritableScope scope,\n            @NotNull List<? extends KtElement> block,\n            @NotNull CoercionStrategy coercionStrategyForLastExpression,\n            @NotNull ExpressionTypingContext context\n    ) {\n        if (block.isEmpty()) {\n            return TypeInfoFactoryKt.createTypeInfo(expressionTypingComponents.builtIns.getUnitType(), context);\n        }\n\n        ExpressionTypingInternals blockLevelVisitor = new ExpressionTypingVisitorDispatcher.ForBlock(\n                expressionTypingComponents, annotationChecker, scope);\n        ExpressionTypingContext newContext = context.replaceScope(scope).replaceExpectedType(NO_EXPECTED_TYPE);\n\n        KotlinTypeInfo result = TypeInfoFactoryKt.noTypeInfo(context);\n        // Jump point data flow info\n        DataFlowInfo beforeJumpInfo = newContext.dataFlowInfo;\n        boolean jumpOutPossible = false;\n        for (Iterator<? extends KtElement> iterator = block.iterator(); iterator.hasNext(); ) {\n            KtElement statement = iterator.next();\n            if (!(statement instanceof KtExpression)) {\n                continue;\n            }\n            KtExpression statementExpression = (KtExpression) statement;\n            if (!iterator.hasNext()) {\n                result = getTypeOfLastExpressionInBlock(\n                        statementExpression, newContext.replaceExpectedType(context.expectedType), coercionStrategyForLastExpression,\n                        blockLevelVisitor);\n            }\n            else {\n                result = blockLevelVisitor\n                        .getTypeInfo(statementExpression, newContext.replaceContextDependency(ContextDependency.INDEPENDENT), true);\n            }\n\n            DataFlowInfo newDataFlowInfo = result.getDataFlowInfo();\n            // If jump is not possible, we take new data flow info before jump\n            if (!jumpOutPossible) {\n                beforeJumpInfo = result.getJumpFlowInfo();\n                jumpOutPossible = result.getJumpOutPossible();\n            }\n            if (newDataFlowInfo != context.dataFlowInfo) {\n                newContext = newContext.replaceDataFlowInfo(newDataFlowInfo);\n                // We take current data flow info if jump there is not possible\n            }\n            blockLevelVisitor = new ExpressionTypingVisitorDispatcher.ForBlock(expressionTypingComponents, annotationChecker, scope);\n        }\n        return result.replaceJumpOutPossible(jumpOutPossible).replaceJumpFlowInfo(beforeJumpInfo);\n    }","commit_id":"e515d7f773e72e5c40f1eae7f4b6a13e1d328a25","url":"https://github.com/JetBrains/kotlin"},{"original_method":"TemplateItem(ProjectTemplate template, TemplatesGroup group) {\n      myTemplate = template;\n      myGroup = group;\n    }","id":55753,"modified_method":"TemplateItem(ProjectTemplate template, TemplatesGroup group, boolean firstInGroup) {\n      myTemplate = template;\n      myGroup = group;\n      myFirstInGroup = firstInGroup;\n    }","commit_id":"26c1ff466d4251dffe92797084b029bae6540c4a","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private List<? extends Item> buildItems(MultiMap<TemplatesGroup, ProjectTemplate> map) {\n    List<Item> items = new ArrayList<Item>();\n    List<TemplatesGroup> groups = new ArrayList<TemplatesGroup>(map.keySet());\n    Collections.sort(groups, new Comparator<TemplatesGroup>() {\n      @Override\n      public int compare(TemplatesGroup o1, TemplatesGroup o2) {\n        return o1.getName().compareTo(o2.getName());\n      }\n    });\n    for (TemplatesGroup group : groups) {\n      GroupItem groupItem = new GroupItem(group);\n      items.add(groupItem);\n      for (ProjectTemplate template : map.get(group)) {\n        TemplateItem templateItem = new TemplateItem(template, group);\n        items.add(templateItem);\n        groupItem.addChild(templateItem);\n      }\n    }\n    return items;\n  }","id":55754,"modified_method":"private List<? extends Item> buildItems(MultiMap<TemplatesGroup, ProjectTemplate> map) {\n    List<Item> items = new ArrayList<Item>();\n    List<TemplatesGroup> groups = new ArrayList<TemplatesGroup>(map.keySet());\n    Collections.sort(groups, new Comparator<TemplatesGroup>() {\n      @Override\n      public int compare(TemplatesGroup o1, TemplatesGroup o2) {\n        return o1.getName().compareTo(o2.getName());\n      }\n    });\n    for (TemplatesGroup group : groups) {\n      boolean firstInGroup = true;\n      for (ProjectTemplate template : map.get(group)) {\n        TemplateItem templateItem = new TemplateItem(template, group, firstInGroup);\n        firstInGroup = false;\n        items.add(templateItem);\n      }\n    }\n    return items;\n  }","commit_id":"26c1ff466d4251dffe92797084b029bae6540c4a","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public ProjectTypesList(JBList list, SearchTextField searchField, MultiMap<TemplatesGroup, ProjectTemplate> map) {\n    myList = list;\n    mySearchField = searchField;\n\n    CollectionListModel<Item> model = new CollectionListModel<Item>(buildItems(map));\n    myFilteringListModel = new FilteringListModel<Item>(model);\n\n    myList.setCellRenderer(new ColoredListCellRenderer() {\n      @Override\n      protected void customizeCellRenderer(JList list, Object value, int index, boolean selected, boolean hasFocus) {\n        Item item = (Item)value;\n        boolean group = item instanceof GroupItem;\n        append(item.getName(), group ? SimpleTextAttributes.REGULAR_BOLD_ATTRIBUTES : SimpleTextAttributes.REGULAR_ATTRIBUTES);\n        setIcon(item.getIcon());\n        setIpad(group ? new Insets(2, 2, 2, 2) : new Insets(2, 20, 2, 2));\n        //if (group && !selected) {\n        //  setBackground(UIUtil.getPanelBackground());\n        //}\n      }\n    });\n\n    myFilteringListModel.setFilter(new Condition<Item>() {\n      @Override\n      public boolean value(Item item) {\n        return item.getMatchingDegree() > Integer.MIN_VALUE;\n      }\n    });\n\n    myList.setModel(myFilteringListModel);\n    mySearchField.addDocumentListener(new DocumentAdapter() {\n      @Override\n      protected void textChanged(DocumentEvent e) {\n        String text = \"*\" + mySearchField.getText().trim();\n        myMatcher = NameUtil.buildMatcher(text, NameUtil.MatchingCaseSensitivity.NONE);\n\n        Item value = (Item)myList.getSelectedValue();\n        int degree = value == null ? Integer.MIN_VALUE : value.getMatchingDegree();\n        myBestMatch = Pair.create(degree > Integer.MIN_VALUE ? value : null, degree);\n\n        myFilteringListModel.refilter();\n        if (myBestMatch.first != null) {\n          myList.setSelectedValue(myBestMatch.first, true);\n        }\n      }\n    });\n\n    new AnAction() {\n      @Override\n      public void actionPerformed(AnActionEvent e) {\n        InputEvent event = e.getInputEvent();\n        if (event instanceof KeyEvent) {\n          int row = myList.getSelectedIndex();\n           int toSelect;\n           switch (((KeyEvent)event).getKeyCode()) {\n             case KeyEvent.VK_UP:\n               toSelect = row == 0 ? myList.getItemsCount() - 1 : row - 1;\n               myList.setSelectedIndex(toSelect);\n               myList.ensureIndexIsVisible(toSelect);\n               break;\n             case KeyEvent.VK_DOWN:\n               toSelect = row < myList.getItemsCount() - 1 ? row + 1 : 0;\n               myList.setSelectedIndex(toSelect);\n               myList.ensureIndexIsVisible(toSelect);\n               break;\n           }\n        }\n      }\n    }.registerCustomShortcutSet(new CustomShortcutSet(KeyEvent.VK_UP, KeyEvent.VK_DOWN), mySearchField);\n  }","id":55755,"modified_method":"public ProjectTypesList(JBList list, SearchTextField searchField, MultiMap<TemplatesGroup, ProjectTemplate> map) {\n    myList = list;\n    mySearchField = searchField;\n\n    CollectionListModel<Item> model = new CollectionListModel<Item>(buildItems(map));\n    myFilteringListModel = new FilteringListModel<Item>(model);\n\n    myList.setCellRenderer(new GroupedItemsListRenderer(new ListItemDescriptor() {\n      @Nullable\n      @Override\n      public String getTextFor(Object value) {\n        return ((Item)value).getName();\n      }\n\n      @Nullable\n      @Override\n      public String getTooltipFor(Object value) {\n        return null;\n      }\n\n      @Nullable\n      @Override\n      public Icon getIconFor(Object value) {\n        return ((Item)value).getIcon();\n      }\n\n      @Override\n      public boolean hasSeparatorAboveOf(Object value) {\n        return ((Item)value).isFirstInGroup();\n      }\n\n      @Nullable\n      @Override\n      public String getCaptionAboveOf(Object value) {\n        return ((Item)value).getGroupName();\n      }\n    }));\n\n    myFilteringListModel.setFilter(new Condition<Item>() {\n      @Override\n      public boolean value(Item item) {\n        return item.getMatchingDegree() > Integer.MIN_VALUE;\n      }\n    });\n\n    myList.setModel(myFilteringListModel);\n    mySearchField.addDocumentListener(new DocumentAdapter() {\n      @Override\n      protected void textChanged(DocumentEvent e) {\n        String text = \"*\" + mySearchField.getText().trim();\n        myMatcher = NameUtil.buildMatcher(text, NameUtil.MatchingCaseSensitivity.NONE);\n\n        Item value = (Item)myList.getSelectedValue();\n        int degree = value == null ? Integer.MIN_VALUE : value.getMatchingDegree();\n        myBestMatch = Pair.create(degree > Integer.MIN_VALUE ? value : null, degree);\n\n        myFilteringListModel.refilter();\n        if (myBestMatch.first != null) {\n          myList.setSelectedValue(myBestMatch.first, true);\n        }\n      }\n    });\n\n    new AnAction() {\n      @Override\n      public void actionPerformed(AnActionEvent e) {\n        InputEvent event = e.getInputEvent();\n        if (event instanceof KeyEvent) {\n          int row = myList.getSelectedIndex();\n           int toSelect;\n           switch (((KeyEvent)event).getKeyCode()) {\n             case KeyEvent.VK_UP:\n               toSelect = row == 0 ? myList.getItemsCount() - 1 : row - 1;\n               myList.setSelectedIndex(toSelect);\n               myList.ensureIndexIsVisible(toSelect);\n               break;\n             case KeyEvent.VK_DOWN:\n               toSelect = row < myList.getItemsCount() - 1 ? row + 1 : 0;\n               myList.setSelectedIndex(toSelect);\n               myList.ensureIndexIsVisible(toSelect);\n               break;\n           }\n        }\n      }\n    }.registerCustomShortcutSet(new CustomShortcutSet(KeyEvent.VK_UP, KeyEvent.VK_DOWN), mySearchField);\n  }","commit_id":"26c1ff466d4251dffe92797084b029bae6540c4a","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"String getGroupName() {\n      return myGroup.getName();\n    }","id":55756,"modified_method":"public String getGroupName() {\n      return myGroup.getName();\n    }","commit_id":"26c1ff466d4251dffe92797084b029bae6540c4a","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"protected JComponent createCenterPanel() {\n    JPanel panel = new MyPanel();\n\n    myUiUpdater = new MergingUpdateQueue(\"FileChooserUpdater\", 200, false, panel);\n    Disposer.register(myDisposable, myUiUpdater);\n    new UiNotifyConnector(panel, myUiUpdater);\n\n    panel.setBorder(BorderFactory.createEmptyBorder(0, 0, 0, 0));\n\n    createTree();\n\n    final DefaultActionGroup group = createActionGroup();\n    ActionToolbar toolBar = ActionManager.getInstance().createActionToolbar(ActionPlaces.UNKNOWN, group, true);\n\n    final JPanel toolbarPanel = new JPanel(new BorderLayout());\n    toolbarPanel.add(toolBar.getComponent(), BorderLayout.CENTER);\n\n    myTextFieldAction = new TextFieldAction();\n    toolbarPanel.add(myTextFieldAction, BorderLayout.EAST);\n\n    myPathTextFieldWrapper = new JPanel(new BorderLayout());\n    myPathTextFieldWrapper.setBorder(new EmptyBorder(0, 0, 2, 0));\n    myPathTextField = new FileTextFieldImpl.Vfs(myChooserDescriptor, myFileSystemTree.areHiddensShown(), myUiUpdater) {\n      protected void onTextChanged(final String newValue) {\n        updateTreeFromPath(newValue);\n      }\n    };\n    myDisposables.add(myPathTextField);\n    myPathTextFieldWrapper.add(myPathTextField.getField(), BorderLayout.CENTER);\n\n    myNorthPanel = new JPanel(new BorderLayout());\n    myNorthPanel.add(toolbarPanel, BorderLayout.NORTH);\n\n\n    updateTextFieldShowing();\n\n    panel.add(myNorthPanel, BorderLayout.NORTH);\n\n    registerMouseListener(group);\n\n    JScrollPane scrollPane = new JScrollPane(myFileSystemTree.getTree());\n    scrollPane.setBorder(BorderFactory.createLineBorder(new Color(148, 154, 156)));\n    panel.add(scrollPane, BorderLayout.CENTER);\n    panel.setPreferredSize(new Dimension(400, 400));\n\n\n    panel.add(new JLabel(\"<html><center><small><font color=gray>Drop files to the tree to quickly locate them there<\/font><\/small><\/center><\/html>\", JLabel.CENTER), BorderLayout.SOUTH);\n\n    return panel;\n  }","id":55757,"modified_method":"protected JComponent createCenterPanel() {\n    JPanel panel = new MyPanel();\n\n    myUiUpdater = new MergingUpdateQueue(\"FileChooserUpdater\", 200, false, panel);\n    Disposer.register(myDisposable, myUiUpdater);\n    new UiNotifyConnector(panel, myUiUpdater);\n\n    panel.setBorder(BorderFactory.createEmptyBorder(0, 0, 0, 0));\n\n    createTree();\n\n    final DefaultActionGroup group = createActionGroup();\n    ActionToolbar toolBar = ActionManager.getInstance().createActionToolbar(ActionPlaces.UNKNOWN, group, true);\n\n    final JPanel toolbarPanel = new JPanel(new BorderLayout());\n    toolbarPanel.add(toolBar.getComponent(), BorderLayout.CENTER);\n\n    myTextFieldAction = new TextFieldAction();\n    toolbarPanel.add(myTextFieldAction, BorderLayout.EAST);\n\n    myPathTextFieldWrapper = new JPanel(new BorderLayout());\n    myPathTextFieldWrapper.setBorder(new EmptyBorder(0, 0, 2, 0));\n    myPathTextField = new FileTextFieldImpl.Vfs(myChooserDescriptor, myFileSystemTree.areHiddensShown(), myUiUpdater) {\n      protected void onTextChanged(final String newValue) {\n        updateTreeFromPath(newValue);\n      }\n    };\n    myDisposables.add(myPathTextField);\n    myPathTextFieldWrapper.add(myPathTextField.getField(), BorderLayout.CENTER);\n\n    myNorthPanel = new JPanel(new BorderLayout());\n    myNorthPanel.add(toolbarPanel, BorderLayout.NORTH);\n\n\n    updateTextFieldShowing();\n\n    panel.add(myNorthPanel, BorderLayout.NORTH);\n\n    registerMouseListener(group);\n\n    JScrollPane scrollPane = new JScrollPane(myFileSystemTree.getTree());\n    //scrollPane.setBorder(BorderFactory.createLineBorder(new Color(148, 154, 156)));\n    panel.add(scrollPane, BorderLayout.CENTER);\n    panel.setPreferredSize(new Dimension(400, 400));\n\n\n    panel.add(new JLabel(\"<html><center><small><font color=gray>Drop files to the tree to quickly locate them there<\/font><\/small><\/center><\/html>\", JLabel.CENTER), BorderLayout.SOUTH);\n\n    return panel;\n  }","commit_id":"60f2cec75d33c4a981948a75c97cd8c2a87edcfa","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Nullable\n  public String getTextFieldText() {\n    final String text = myPathTextField.getText();\n    if (text == null) return null;\n    return text.trim();\n  }","id":55758,"modified_method":"@Nullable\n  public String getTextFieldText() {\n    final String text = myPathTextField.getText();\n    if (text == null) return null;\n    return text;\n  }","commit_id":"60f2cec75d33c4a981948a75c97cd8c2a87edcfa","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@SuppressWarnings(\"HardCodedStringLiteral\")\n  private void processListSelection(final KeyEvent e) {\n    if (togglePopup(e)) return;\n\n    if (!isPopupShowing()) return;\n\n    final Object action = getAction(e, myList);\n\n    if (\"selectNextRow\".equals(action)) {\n      ensureSelectionExists();\n      ListScrollingUtil.moveDown(myList, e.getModifiersEx());\n    }\n    else if (\"selectPreviousRow\".equals(action)) {\n      ListScrollingUtil.moveUp(myList, e.getModifiersEx());\n    }\n    else if (\"scrollDown\".equals(action)) {\n      ListScrollingUtil.movePageDown(myList);\n    }\n    else if (\"scrollUp\".equals(action)) {\n      ListScrollingUtil.movePageUp(myList);\n    }\n    else if (getSelectedFileFromCompletionPopup() != null && e.getKeyCode() == KeyEvent.VK_ENTER  || e.getKeyCode() == KeyEvent.VK_TAB) {\n      myCurrentPopup.cancel();\n      e.consume();\n      processChosenFromCompletion(true);\n    }\n  }","id":55759,"modified_method":"@SuppressWarnings(\"HardCodedStringLiteral\")\n  private void processListSelection(final KeyEvent e) {\n    if (togglePopup(e)) return;\n\n    if (!isPopupShowing()) return;\n\n    final Object action = getAction(e, myList);\n\n    if (\"selectNextRow\".equals(action)) {\n      if (ensureSelectionExists()) {\n        ListScrollingUtil.moveDown(myList, e.getModifiersEx());\n      }\n    }\n    else if (\"selectPreviousRow\".equals(action)) {\n      ListScrollingUtil.moveUp(myList, e.getModifiersEx());\n    }\n    else if (\"scrollDown\".equals(action)) {\n      ListScrollingUtil.movePageDown(myList);\n    }\n    else if (\"scrollUp\".equals(action)) {\n      ListScrollingUtil.movePageUp(myList);\n    }\n    else if (getSelectedFileFromCompletionPopup() != null && e.getKeyCode() == KeyEvent.VK_ENTER || e.getKeyCode() == KeyEvent.VK_TAB) {\n      myCurrentPopup.cancel();\n      e.consume();\n      processChosenFromCompletion(true);\n    }\n  }","commit_id":"60f2cec75d33c4a981948a75c97cd8c2a87edcfa","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void processCompletion(final CompletionResult result) {\n    result.myToComplete = new ArrayList<LookupFile>();\n    result.mySiblings = new ArrayList<LookupFile>();\n    result.myKidsAfterSeparator = new ArrayList<LookupFile>();\n    String typed = result.myCompletionBase;\n\n    final LookupFile current = getClosestParent(typed);\n    result.myClosestParent = current;\n\n    if (current == null) return;\n    if (typed == null || typed.length() == 0) return;\n\n    final String typedText = myFinder.normalize(typed);\n    final boolean currentParentMatch = typedText.equals(current.getAbsolutePath());\n\n    final boolean closedPath = typed.endsWith(myFinder.getSeparator()) && typedText.length() > myFinder.getSeparator().length();\n    final String currentParentText = current.getAbsolutePath();\n\n    if (!typedText.toUpperCase().startsWith(currentParentText.toUpperCase())) return;\n\n    String prefix = typedText.substring(currentParentText.length());\n    if (prefix.startsWith(myFinder.getSeparator())) {\n      prefix = prefix.substring(myFinder.getSeparator().length());\n    }\n    else if (typed.endsWith(myFinder.getSeparator())) {\n      prefix = \"\";\n    }\n\n    final String effectivePrefix = prefix.toUpperCase();\n\n    final LookupFile currentGrandparent = current.getParent();\n    final String[] grandparentPrefix = new String[1];\n    if (currentGrandparent != null && currentParentMatch && !closedPath) {\n      final String currentGrandparentText = currentGrandparent.getAbsolutePath();\n      if (typedText.startsWith(currentGrandparentText + myFinder.getSeparator())) {\n        grandparentPrefix[0] = currentParentText.substring(currentGrandparentText.length() + myFinder.getSeparator().length()).toUpperCase();\n      }\n    }\n\n    ApplicationManager.getApplication().runReadAction(new Runnable() {\n      public void run() {\n        result.myToComplete.addAll(current.getChildren(new LookupFilter() {\n          public boolean isAccepted(final LookupFile file) {\n            return myFilter.isAccepted(file) && file.getName().toUpperCase().startsWith(effectivePrefix);\n          }\n        }));\n\n        if (currentParentMatch && !closedPath) {\n          result.myKidsAfterSeparator.addAll(result.myToComplete);\n        }\n\n        if (grandparentPrefix[0] != null) {\n          final List<LookupFile> siblings = currentGrandparent.getChildren(new LookupFilter() {\n            public boolean isAccepted(final LookupFile file) {\n              return !file.equals(current) && myFilter.isAccepted(file) && file.getName().toUpperCase().startsWith(grandparentPrefix[0]);\n            }\n          });\n          result.myToComplete.addAll(siblings);\n          result.mySiblings.addAll(siblings);\n        }\n\n        int currentDiff = Integer.MIN_VALUE;\n        LookupFile toPreselect = result.myPreselected;\n\n        if (toPreselect == null || !result.myToComplete.contains(toPreselect)) {\n          if (effectivePrefix.length() > 0) {\n            for (LookupFile each : result.myToComplete) {\n              String eachName = each.getName().toUpperCase();\n              if (!eachName.startsWith(effectivePrefix)) continue;\n              int diff = effectivePrefix.compareTo(eachName);\n              currentDiff = Math.max(diff, currentDiff);\n              if (currentDiff == diff) {\n                toPreselect = each;\n              }\n            }\n          } else {\n            toPreselect = null;\n          }\n\n          if (toPreselect == null) {\n            if (result.myToComplete.size() == 1) {\n              toPreselect = result.myToComplete.get(0);\n            } else if (effectivePrefix.length() == 0) {\n              if (result.mySiblings.size() > 0) {\n                toPreselect = result.mySiblings.get(0);\n              }\n              if (!result.myToComplete.contains(toPreselect) && result.myToComplete.size() > 0) {\n                toPreselect = result.myToComplete.get(0);\n              }\n            }\n          }\n        }\n\n        result.myPreselected = toPreselect;\n      }\n    });\n  }","id":55760,"modified_method":"public void processCompletion(final CompletionResult result) {\n    result.myToComplete = new ArrayList<LookupFile>();\n    result.mySiblings = new ArrayList<LookupFile>();\n    result.myKidsAfterSeparator = new ArrayList<LookupFile>();\n    String typed = result.myCompletionBase;\n\n    final LookupFile current = getClosestParent(typed);\n    result.myClosestParent = current;\n\n    if (current == null) return;\n    if (typed == null || typed.length() == 0) return;\n\n    final String typedText = myFinder.normalize(typed);\n    final boolean currentParentMatch = SystemInfo.isFileSystemCaseSensitive\n                                       ? typedText.equals(current.getAbsolutePath())\n                                       : typedText.equalsIgnoreCase(current.getAbsolutePath());\n\n    final boolean closedPath = typed.endsWith(myFinder.getSeparator()) && typedText.length() > myFinder.getSeparator().length();\n    final String currentParentText = current.getAbsolutePath();\n\n    if (!typedText.toUpperCase().startsWith(currentParentText.toUpperCase())) return;\n\n    String prefix = typedText.substring(currentParentText.length());\n    if (prefix.startsWith(myFinder.getSeparator())) {\n      prefix = prefix.substring(myFinder.getSeparator().length());\n    }\n    else if (typed.endsWith(myFinder.getSeparator())) {\n      prefix = \"\";\n    }\n\n    final String effectivePrefix = prefix.toUpperCase();\n\n    final LookupFile currentGrandparent = current.getParent();\n    final String[] grandparentPrefix = new String[1];\n    if (currentGrandparent != null && currentParentMatch && !closedPath) {\n      final String currentGrandparentText = currentGrandparent.getAbsolutePath();\n      if (typedText.startsWith(currentGrandparentText + myFinder.getSeparator())) {\n        grandparentPrefix[0] =\n          currentParentText.substring(currentGrandparentText.length() + myFinder.getSeparator().length()).toUpperCase();\n      }\n    }\n\n    ApplicationManager.getApplication().runReadAction(new Runnable() {\n      public void run() {\n        result.myToComplete.addAll(current.getChildren(new LookupFilter() {\n          public boolean isAccepted(final LookupFile file) {\n            return myFilter.isAccepted(file) && file.getName().toUpperCase().startsWith(effectivePrefix);\n          }\n        }));\n\n        if (currentParentMatch && !closedPath) {\n          result.myKidsAfterSeparator.addAll(result.myToComplete);\n        }\n\n        if (grandparentPrefix[0] != null) {\n          final List<LookupFile> siblings = currentGrandparent.getChildren(new LookupFilter() {\n            public boolean isAccepted(final LookupFile file) {\n              return !file.equals(current) && myFilter.isAccepted(file) && file.getName().toUpperCase().startsWith(grandparentPrefix[0]);\n            }\n          });\n          result.myToComplete.addAll(0, siblings);\n          result.mySiblings.addAll(siblings);\n        }\n\n        int currentDiff = Integer.MIN_VALUE;\n        LookupFile toPreselect = result.myPreselected;\n\n        if (toPreselect == null || !result.myToComplete.contains(toPreselect)) {\n          if (effectivePrefix.length() > 0) {\n            for (LookupFile each : result.myToComplete) {\n              String eachName = each.getName().toUpperCase();\n              if (!eachName.startsWith(effectivePrefix)) continue;\n              int diff = effectivePrefix.compareTo(eachName);\n              currentDiff = Math.max(diff, currentDiff);\n              if (currentDiff == diff) {\n                toPreselect = each;\n              }\n            }\n          }\n          else {\n            toPreselect = null;\n          }\n\n          if (toPreselect == null) {\n            if (result.myToComplete.size() == 1) {\n              toPreselect = result.myToComplete.get(0);\n            }\n            else if (effectivePrefix.length() == 0) {\n              if (result.mySiblings.size() > 0) {\n                toPreselect = result.mySiblings.get(0);\n              }\n              if (!result.myToComplete.contains(toPreselect) && result.myToComplete.size() > 0) {\n                toPreselect = result.myToComplete.get(0);\n              }\n            }\n          }\n        }\n\n        if (currentParentMatch && result.mySiblings.size() > 0) {\n          toPreselect = null;\n        }\n\n        result.myPreselected = toPreselect;\n      }\n    });\n  }","commit_id":"60f2cec75d33c4a981948a75c97cd8c2a87edcfa","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private void showCompletionPopup(final CompletionResult result, int position) {\n    if (myList == null) {\n      myList = new JList();\n      myList.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);\n      myList.setCellRenderer(new ColoredListCellRenderer() {\n        protected void customizeCellRenderer(final JList list,\n                                             final Object value,\n                                             final int index,\n                                             final boolean selected,\n                                             final boolean hasFocus) {\n          clear();\n          final LookupFile file = (LookupFile)value;\n          final String text = (myCurrentCompletion != null && myCurrentCompletion.myKidsAfterSeparator.contains(file) ? myFinder.getSeparator(): \"\") +file.getName();\n          append(text, new SimpleTextAttributes(list.getFont().getStyle(), list.getForeground()));\n        }\n      });\n    }\n\n\n    if (myCurrentPopup != null) {\n      closePopup();\n    }\n\n    myCurrentCompletion = result;\n    myCurrentCompletionsPos = position;\n\n    if (myCurrentCompletion.myToComplete.size() == 0) return;\n    \n    myList.setModel(new AbstractListModel() {\n      public int getSize() {\n        return myCurrentCompletion.myToComplete.size();\n      }\n\n      public Object getElementAt(final int index) {\n        return myCurrentCompletion.myToComplete.get(index);\n      }\n    });\n    myList.getSelectionModel().clearSelection();\n    final PopupChooserBuilder builder = JBPopupFactory.getInstance().createListPopupBuilder(myList);\n    builder.addListener(new JBPopupListener() {\n      public void beforeShown(final Project project, final JBPopup popup) {\n        myPathTextField.registerKeyboardAction(myCancelAction, KeyStroke.getKeyStroke(KeyEvent.VK_ESCAPE, 0), JComponent.WHEN_IN_FOCUSED_WINDOW);\n      }\n\n      public void onClosed(final JBPopup popup) {\n        myPathTextField.unregisterKeyboardAction(KeyStroke.getKeyStroke(KeyEvent.VK_ESCAPE, 0));\n      }\n    });\n\n    myCurrentPopup = builder.setRequestFocus(false).setAutoSelectIfEmpty(false).setResizable(false).setCancelCalllback(new Computable<Boolean>() {\n      public Boolean compute() {\n        final int caret = myPathTextField.getCaretPosition();\n        myPathTextField.setSelectionStart(caret);\n        myPathTextField.setSelectionEnd(caret);\n        myPathTextField.setFocusTraversalKeysEnabled(true);\n        SwingUtilities.invokeLater(new Runnable() {\n          public void run() {\n            getField().requestFocus();\n          }\n        });\n        return Boolean.TRUE;\n      }\n    }).setItemChoosenCallback(new Runnable() {\n      public void run() {\n        processChosenFromCompletion(true);\n      }\n    }).setCancelKeyEnabled(false).setAlpha(0.75f).setFocusOwners(new Component[] {myPathTextField}).createPopup();\n\n\n    if (result.myPreselected != null) {\n      myList.setSelectedValue(result.myPreselected, false);\n    }\n\n    myPathTextField.setFocusTraversalKeysEnabled(false);\n\n    myCurrentPopup.showInScreenCoordinates(getField(), getLocationForCaret());\n  }","id":55761,"modified_method":"private void showCompletionPopup(final CompletionResult result, int position) {\n    if (myList == null) {\n      myList = new JList();\n      myList.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);\n\n      myList.setCellRenderer(new GroupedItemsListRenderer(new ListItemDescriptor() {\n        public String getTextFor(final Object value) {\n          final LookupFile file = (LookupFile)value;\n          return (myCurrentCompletion != null && myCurrentCompletion.myKidsAfterSeparator.contains(file) ? myFinder.getSeparator() : \"\") +\n                 file.getName();\n        }\n\n        public String getTooltipFor(final Object value) {\n          return null;\n        }\n\n        public Icon getIconFor(final Object value) {\n          return null;\n        }\n\n        public boolean hasSeparatorAboveOf(final Object value) {\n          return getCaptionAboveOf(value) != null;\n        }\n\n        public String getCaptionAboveOf(final Object value) {\n          if (myCurrentCompletion == null) return null;\n          final LookupFile file = (LookupFile)value;\n          if (myCurrentCompletion.myKidsAfterSeparator.indexOf(file) == 0 && myCurrentCompletion.mySiblings.size() > 0) {\n            final LookupFile parent = file.getParent();\n            return parent == null ? \"\" : parent.getName();\n          }\n          else {\n            return null;\n          }\n        }\n      }));\n    }\n\n\n    if (myCurrentPopup != null) {\n      closePopup();\n    }\n\n    myCurrentCompletion = result;\n    myCurrentCompletionsPos = position;\n\n    if (myCurrentCompletion.myToComplete.size() == 0) return;\n\n    myList.setModel(new AbstractListModel() {\n      public int getSize() {\n        return myCurrentCompletion.myToComplete.size();\n      }\n\n      public Object getElementAt(final int index) {\n        return myCurrentCompletion.myToComplete.get(index);\n      }\n    });\n    myList.getSelectionModel().clearSelection();\n    final PopupChooserBuilder builder = JBPopupFactory.getInstance().createListPopupBuilder(myList);\n    builder.addListener(new JBPopupListener() {\n      public void beforeShown(final Project project, final JBPopup popup) {\n        myPathTextField\n          .registerKeyboardAction(myCancelAction, KeyStroke.getKeyStroke(KeyEvent.VK_ESCAPE, 0), JComponent.WHEN_IN_FOCUSED_WINDOW);\n        for (Action each : myDisabledTextActions) {\n          each.setEnabled(false);\n        }\n      }\n\n      public void onClosed(final JBPopup popup) {\n        myPathTextField.unregisterKeyboardAction(KeyStroke.getKeyStroke(KeyEvent.VK_ESCAPE, 0));\n        for (Action each : myDisabledTextActions) {\n          each.setEnabled(true);\n        }\n      }\n    });\n\n    myCurrentPopup =\n      builder.setRequestFocus(false).setAutoSelectIfEmpty(false).setResizable(false).setCancelCalllback(new Computable<Boolean>() {\n        public Boolean compute() {\n          final int caret = myPathTextField.getCaretPosition();\n          myPathTextField.setSelectionStart(caret);\n          myPathTextField.setSelectionEnd(caret);\n          myPathTextField.setFocusTraversalKeysEnabled(true);\n          SwingUtilities.invokeLater(new Runnable() {\n            public void run() {\n              getField().requestFocus();\n            }\n          });\n          return Boolean.TRUE;\n        }\n      }).setItemChoosenCallback(new Runnable() {\n        public void run() {\n          processChosenFromCompletion(true);\n        }\n      }).setCancelKeyEnabled(false).setAlpha(0.75f).setFocusOwners(new Component[]{myPathTextField}).createPopup();\n\n\n    if (result.myPreselected != null) {\n      myList.setSelectedValue(result.myPreselected, false);\n    }\n\n    myPathTextField.setFocusTraversalKeysEnabled(false);\n\n    myCurrentPopup.showInScreenCoordinates(getField(), getLocationForCaret());\n  }","commit_id":"60f2cec75d33c4a981948a75c97cd8c2a87edcfa","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private void ensureSelectionExists() {\n    if (myList.getSelectedIndex() < 0 || myList.getSelectedIndex() >= myList.getModel().getSize()) {\n      if (myList.getModel().getSize() >= 0) {\n        myList.setSelectedIndex(0);\n      }\n    }\n  }","id":55762,"modified_method":"private boolean ensureSelectionExists() {\n    if (myList.getSelectedIndex() < 0 || myList.getSelectedIndex() >= myList.getModel().getSize()) {\n      if (myList.getModel().getSize() >= 0) {\n        myList.setSelectedIndex(0);\n        return false;\n      }\n    }\n\n    return true;\n  }","commit_id":"60f2cec75d33c4a981948a75c97cd8c2a87edcfa","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private void processTextChanged() {\n    if (!myAutopopup) return;\n\n    suggestCompletion(false, false);\n    onTextChanged(getTextFieldText());\n  }","id":55763,"modified_method":"private void processTextChanged() {\n    if (myAutopopup) {\n      suggestCompletion(false, false);\n    }\n\n    onTextChanged(getTextFieldText());\n  }","commit_id":"60f2cec75d33c4a981948a75c97cd8c2a87edcfa","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public FileTextFieldImpl(JTextField field, Finder finder, LookupFilter filter, MergingUpdateQueue uiUpdater) {\n    myPathTextField = field;\n\n    FileTextFieldImpl assigned = (FileTextFieldImpl)myPathTextField.getClientProperty(KEY);\n    if (assigned != null) {\n      assigned.myFinder = finder;\n      assigned.myFilter = filter;\n      return;\n    }\n\n    myPathTextField.putClientProperty(KEY, this);\n    final boolean headless = ApplicationManager.getApplication().isUnitTestMode();\n\n    if (uiUpdater == null) {\n      myUiUpdater = new MergingUpdateQueue(\"FileTextField.UiUpdater\", 200, false, myPathTextField);\n      if (!headless) {\n        new UiNotifyConnector(myPathTextField, myUiUpdater);\n        Disposer.register(this, myUiUpdater);\n      }\n    } else {\n      myUiUpdater = uiUpdater;\n    }\n\n    myFinder = finder;\n    myFilter = filter;\n\n    myFileSpitRegExp = myFinder.getSeparator().replaceAll(\"\\\\\\\\\", \"\\\\\\\\\\\\\\\\\");\n\n    myPathTextField.getDocument().addDocumentListener(new DocumentListener() {\n      public void insertUpdate(final DocumentEvent e) {\n        processTextChanged();\n      }\n\n      public void removeUpdate(final DocumentEvent e) {\n        processTextChanged();\n      }\n\n      public void changedUpdate(final DocumentEvent e) {\n        processTextChanged();\n      }\n    });\n\n    myPathTextField.addKeyListener(new KeyAdapter() {\n      public void keyPressed(final KeyEvent e) {\n        processListSelection(e);\n      }\n    });\n\n    myPathTextField.addFocusListener(new FocusAdapter() {\n      public void focusLost(final FocusEvent e) {\n        closePopup();\n      }\n    });\n\n    myCancelAction = new CancelAction();\n  }","id":55764,"modified_method":"public FileTextFieldImpl(JTextField field, Finder finder, LookupFilter filter, MergingUpdateQueue uiUpdater) {\n    myPathTextField = field;\n\n\n    final InputMap listMap = (InputMap)UIManager.getDefaults().get(\"List.focusInputMap\");\n    final KeyStroke[] listKeys = listMap.keys();\n    myDisabledTextActions = new HashSet<Action>();\n    for (KeyStroke eachListStroke : listKeys) {\n      final String listActionID = (String)listMap.get(eachListStroke);\n      if (\"selectNextRow\".equals(listActionID) || \"selectPreviousRow\".equals(listActionID)) {\n        final String textActionID = (String)field.getInputMap().get(eachListStroke);\n        if (textActionID != null) {\n          final Action textAction = field.getActionMap().get(textActionID);\n          if (textAction != null) {\n            myDisabledTextActions.add(textAction);\n          }\n        }\n      }\n    }\n\n\n    FileTextFieldImpl assigned = (FileTextFieldImpl)myPathTextField.getClientProperty(KEY);\n    if (assigned != null) {\n      assigned.myFinder = finder;\n      assigned.myFilter = filter;\n      return;\n    }\n\n    myPathTextField.putClientProperty(KEY, this);\n    final boolean headless = ApplicationManager.getApplication().isUnitTestMode();\n\n    if (uiUpdater == null) {\n      myUiUpdater = new MergingUpdateQueue(\"FileTextField.UiUpdater\", 200, false, myPathTextField);\n      if (!headless) {\n        new UiNotifyConnector(myPathTextField, myUiUpdater);\n        Disposer.register(this, myUiUpdater);\n      }\n    }\n    else {\n      myUiUpdater = uiUpdater;\n    }\n\n    myFinder = finder;\n    myFilter = filter;\n\n    myFileSpitRegExp = myFinder.getSeparator().replaceAll(\"\\\\\\\\\", \"\\\\\\\\\\\\\\\\\");\n\n    myPathTextField.getDocument().addDocumentListener(new DocumentListener() {\n      public void insertUpdate(final DocumentEvent e) {\n        processTextChanged();\n      }\n\n      public void removeUpdate(final DocumentEvent e) {\n        processTextChanged();\n      }\n\n      public void changedUpdate(final DocumentEvent e) {\n        processTextChanged();\n      }\n    });\n\n    myPathTextField.addKeyListener(new KeyAdapter() {\n      public void keyPressed(final KeyEvent e) {\n        processListSelection(e);\n      }\n    });\n\n    myPathTextField.addFocusListener(new FocusAdapter() {\n      public void focusLost(final FocusEvent e) {\n        closePopup();\n      }\n    });\n\n    myCancelAction = new CancelAction();\n  }","commit_id":"60f2cec75d33c4a981948a75c97cd8c2a87edcfa","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public String normalize(@NotNull final String path) {\n    return new File(path.trim()).getAbsolutePath();\n  }","id":55765,"modified_method":"public String normalize(@NotNull final String path) {\n    final File file = new File(path);\n    if (file.isAbsolute()) return file.getAbsolutePath();\n\n    return new File(System.getProperty(\"user.home\"), path).getAbsolutePath();\n  }","commit_id":"60f2cec75d33c4a981948a75c97cd8c2a87edcfa","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"/**\n     * Formats a name for a relation\n     *\n     * @param relation the relation\n     * @return the name\n     */\n    public String format(Relation relation) {\n        String name;\n        if (relation.isIncomplete()) {\n            name = tr(\"incomplete\");\n        } else {\n            name = relation.get(\"type\");\n            if (name == null) {\n                name = (relation.get(\"public_transport\") != null) ? tr(\"public transport\") : \"\";\n            }\n            if (name == null) {\n                name = tr(\"relation\");\n            }\n\n            name += \" (\";\n            String nameTag = null;\n            for (String n : getNamingtagsForRelations()) {\n                if (n.equals(\"name\")) {\n                    if (Main.pref.getBoolean(\"osm-primitives.localize-name\", true)) {\n                        nameTag = relation.getLocalName();\n                    } else {\n                        nameTag = relation.getName();\n                    }\n                } else if (n.equals(\":LocationCode\")) {\n                    for (String m : relation.keySet()) {\n                        if (m.endsWith(n)) {\n                            nameTag = relation.get(m);\n                            break;\n                        }\n                    }\n                } else {\n                    nameTag = relation.get(n);\n                }\n                if (nameTag != null) {\n                    break;\n                }\n            }\n            if (nameTag == null) {\n                name += Long.toString(relation.getId()) + \", \";\n            } else {\n                name += \"\\\"\" + nameTag + \"\\\", \";\n            }\n\n            int mbno = relation.getMembersCount();\n            name += trn(\"{0} member\", \"{0} members\", mbno, mbno) + \")\";\n        }\n        name = decorateNameWithId(name, relation);\n        return name;\n    }","id":55766,"modified_method":"/**\n     * Formats a name for a relation\n     *\n     * @param relation the relation\n     * @return the name\n     */\n    public String format(Relation relation) {\n        String name;\n        if (relation.isIncomplete()) {\n            name = tr(\"incomplete\");\n        } else {\n            name = relation.get(\"type\");\n            if (name == null) {\n                name = (relation.get(\"public_transport\") != null) ? tr(\"public transport\") : \"\";\n            }\n            if (name == null) {\n                name = tr(\"relation\");\n            }\n\n            name += \" (\";\n            String nameTag = null;\n            for (String n : getNamingtagsForRelations()) {\n                if (n.equals(\"name\")) {\n                    if (Main.pref.getBoolean(\"osm-primitives.localize-name\", true)) {\n                        nameTag = relation.getLocalName();\n                    } else {\n                        nameTag = relation.getName();\n                    }\n                } else if (n.equals(\":LocationCode\")) {\n                    for (String m : relation.keySet()) {\n                        if (m.endsWith(n)) {\n                            nameTag = relation.get(m);\n                            break;\n                        }\n                    }\n                } else {\n                    nameTag = relation.get(n);\n                }\n                if (nameTag != null) {\n                    break;\n                }\n            }\n            if (nameTag == null) {\n                name += Long.toString(relation.getId()) + \", \";\n            } else {\n                name += \"\\\"\" + nameTag + \"\\\", \";\n            }\n\n            int mbno = relation.getMembersCount();\n            name += trn(\"{0} member\", \"{0} members\", mbno, mbno);\n\n            boolean incomplete = false;\n            for (RelationMember m : relation.getMembers()) {\n                if (m.getMember().isIncomplete()) {\n                    incomplete = true;\n                    break;\n                }\n            }\n            if (incomplete) {\n                name += \", \"+tr(\"incomplete\");\n            }\n\n            name += \")\";\n        }\n        name = decorateNameWithId(name, relation);\n        return name;\n    }","commit_id":"7559ab11b1a3f6845011dd9b31139944b8f6a7ba","url":"https://github.com/openstreetmap/josm"},{"original_method":"/**\n     * Internal method that stuffs information into the rendering component\n     * provided that it's a kind of JLabel.\n     * @param def the rendering component\n     * @param value the OsmPrimtive to render\n     * @return the modified rendering component\n     */\n    private Component renderer(Component def, OsmPrimitive value) {\n        if (def != null && value != null && def instanceof JLabel) {\n            ((JLabel)def).setText(value.getDisplayName(DefaultNameFormatter.getInstance()));\n            ((JLabel)def).setIcon(ImageProvider.get(value.getType()));\n            ((JLabel)def).setToolTipText(formatter.buildDefaultToolTip(value));\n        }\n        return def;\n    }","id":55767,"modified_method":"/**\n     * Internal method that stuffs information into the rendering component\n     * provided that it's a kind of JLabel.\n     * @param def the rendering component\n     * @param value the OsmPrimtive to render\n     * @return the modified rendering component\n     */\n    private Component renderer(Component def, OsmPrimitive value) {\n        if (def != null && value != null && def instanceof JLabel) {\n            ((JLabel)def).setText(getComponentText(value));\n            ((JLabel)def).setIcon(ImageProvider.get(value.getType()));\n            ((JLabel)def).setToolTipText(getComponentToolTipText(value));\n        }\n        return def;\n    }","commit_id":"7559ab11b1a3f6845011dd9b31139944b8f6a7ba","url":"https://github.com/openstreetmap/josm"},{"original_method":"/**\n     * constructor\n     */\n    public RelationListDialog() {\n        super(tr(\"Relations\"), \"relationlist\", tr(\"Open a list of all relations.\"),\n                Shortcut.registerShortcut(\"subwindow:relations\", tr(\"Toggle: {0}\", tr(\"Relations\")), KeyEvent.VK_R, Shortcut.GROUP_LAYER), 150);\n\n        // create the list of relations\n        //\n        DefaultListSelectionModel selectionModel = new DefaultListSelectionModel();\n        model = new RelationListModel(selectionModel);\n        displaylist = new JList(model);\n        displaylist.setSelectionModel(selectionModel);\n        displaylist.setCellRenderer(new OsmPrimitivRenderer());\n        displaylist.setSelectionMode(ListSelectionModel.MULTIPLE_INTERVAL_SELECTION);\n        displaylist.addMouseListener(new MouseEventHandler());\n        add(new JScrollPane(displaylist), BorderLayout.CENTER);\n\n        // create the panel with buttons\n        //\n        JPanel tp = getButtonPanel(5);\n        // the new action\n        //\n        newAction = new NewAction();\n        tp.add(new SideButton(newAction, false));\n\n        // the edit action\n        //\n        editAction = new EditAction();\n        displaylist.addListSelectionListener(editAction);\n        tp.add(new SideButton(editAction, false));\n\n        // the duplicate action\n        //\n        DuplicateAction duplicateAction = new DuplicateAction();\n        displaylist.addListSelectionListener(duplicateAction);\n        tp.add(new SideButton(duplicateAction, false));\n\n        // the delete action\n        //\n        deleteAction = new DeleteAction();\n        displaylist.addListSelectionListener(deleteAction);\n        tp.add(new SideButton(deleteAction, false));\n\n        // the select action\n        //\n        SelectAction selectAction = new SelectAction();\n        displaylist.addListSelectionListener(selectAction);\n        tp.add(new SideButton(selectAction, false));\n\n        add(tp, BorderLayout.SOUTH);\n\n        // activate DEL in the list of relations\n        displaylist.getInputMap().put(KeyStroke.getKeyStroke(KeyEvent.VK_DELETE,0), \"deleteRelation\");\n        displaylist.getActionMap().put(\"deleteRelation\", deleteAction);\n\n        popupMenu = new RelationDialogPopupMenu();\n    }","id":55768,"modified_method":"/**\n     * constructor\n     */\n    public RelationListDialog() {\n        super(tr(\"Relations\"), \"relationlist\", tr(\"Open a list of all relations.\"),\n                Shortcut.registerShortcut(\"subwindow:relations\", tr(\"Toggle: {0}\", tr(\"Relations\")), KeyEvent.VK_R, Shortcut.GROUP_LAYER), 150);\n\n        // create the list of relations\n        //\n        DefaultListSelectionModel selectionModel = new DefaultListSelectionModel();\n        model = new RelationListModel(selectionModel);\n        displaylist = new JList(model);\n        displaylist.setSelectionModel(selectionModel);\n        displaylist.setCellRenderer(new OsmPrimitivRenderer() {\n            /**\n             * Don't show the default tooltip in the relation list.\n             */\n            @Override\n            protected String getComponentToolTipText(OsmPrimitive value) {\n                return null;\n            }\n        });\n        displaylist.setSelectionMode(ListSelectionModel.MULTIPLE_INTERVAL_SELECTION);\n        displaylist.addMouseListener(new MouseEventHandler());\n        add(new JScrollPane(displaylist), BorderLayout.CENTER);\n\n        // create the panel with buttons\n        //\n        JPanel tp = getButtonPanel(5);\n        // the new action\n        //\n        newAction = new NewAction();\n        tp.add(new SideButton(newAction, false));\n\n        // the edit action\n        //\n        editAction = new EditAction();\n        displaylist.addListSelectionListener(editAction);\n        tp.add(new SideButton(editAction, false));\n\n        // the duplicate action\n        //\n        DuplicateAction duplicateAction = new DuplicateAction();\n        displaylist.addListSelectionListener(duplicateAction);\n        tp.add(new SideButton(duplicateAction, false));\n\n        // the delete action\n        //\n        deleteAction = new DeleteAction();\n        displaylist.addListSelectionListener(deleteAction);\n        tp.add(new SideButton(deleteAction, false));\n\n        // the select action\n        //\n        SelectAction selectAction = new SelectAction();\n        displaylist.addListSelectionListener(selectAction);\n        tp.add(new SideButton(selectAction, false));\n\n        add(tp, BorderLayout.SOUTH);\n\n        // activate DEL in the list of relations\n        displaylist.getInputMap().put(KeyStroke.getKeyStroke(KeyEvent.VK_DELETE,0), \"deleteRelation\");\n        displaylist.getActionMap().put(\"deleteRelation\", deleteAction);\n\n        popupMenu = new RelationDialogPopupMenu();\n    }","commit_id":"7559ab11b1a3f6845011dd9b31139944b8f6a7ba","url":"https://github.com/openstreetmap/josm"},{"original_method":"private AbstractTreeNode[] createNode(DataContext dataContext) {\n    ArrayList<AbstractTreeNode> result = new ArrayList<AbstractTreeNode>();\n    Project project = (Project)dataContext.getData(DataConstants.PROJECT);\n    final FavoritesTreeViewConfiguration favoritesConfig = FavoritesTreeViewConfiguration.getInstance(project);\n    final PsiManager psiManager = PsiManager.getInstance(project);\n\n    final String currentViewId = ProjectView.getInstance(project).getCurrentViewId();\n    if (currentViewId == J2EEProjectViewPane.ID){\n      AbstractProjectViewPane pane = ProjectView.getInstance(project).getProjectViewPaneById(currentViewId);\n      J2EENodeDescriptor j2eeNodeDescriptor = (J2EENodeDescriptor)pane.getSelectedDescriptor();\n    }\n\n    //on psi element\n    PsiElement psiElement = (PsiElement)dataContext.getData(DataConstants.PSI_ELEMENT);\n    addPsiElementNode(psiElement, project, result, favoritesConfig);\n\n    //on psi elements\n    final PsiElement[] psiElements = (PsiElement[])dataContext.getData(DataConstantsEx.PSI_ELEMENT_ARRAY);\n    if (psiElements != null) {\n      for (int i = 0; i < psiElements.length; i++) {\n        addPsiElementNode(psiElements[i], project, result, favoritesConfig);\n      }\n    }\n\n    //on module node\n    Module module = (Module)dataContext.getData(DataConstants.MODULE);\n    if (module != null) {\n      if (currentViewId == PackageViewPane.ID) {\n        result.add(new PackageViewModuleNode(project, module, favoritesConfig));\n      }\n      else {\n        result.add(new ProjectViewModuleNode(project, module, favoritesConfig));\n      }\n    }\n\n    //on module nodes\n    Module[] modules = (Module[])dataContext.getData(DataConstants.MODULE_CONTEXT_ARRAY);\n    if (modules != null) {\n      for (int i = 0; i < modules.length; i++) {\n        if (currentViewId == PackageViewPane.ID) {\n          result.add(new PackageViewModuleNode(project, modules[i], favoritesConfig));\n        }\n        else {\n          result.add(new ProjectViewModuleNode(project, modules[i], favoritesConfig));\n        }\n      }\n    }\n\n    //on module groups\n    ModuleGroup[] moduleGroups = (ModuleGroup[])dataContext.getData(DataConstantsEx.MODULE_GROUP_ARRAY);\n    if (moduleGroups != null) {\n      boolean isPackageView = false;\n      if (currentViewId == PackageViewPane.ID) {\n        isPackageView = true;\n      }\n      for (int i = 0; i < moduleGroups.length; i++) {\n        ModuleGroup moduleGroup = moduleGroups[i];\n        if (isPackageView){\n          result.add(new PackageViewModuleGroupNode(project, moduleGroup, favoritesConfig));\n        } else {\n          result.add(new ProjectViewModuleGroupNode(project, moduleGroup, favoritesConfig));\n        }\n      }\n    }\n\n    //on form in editor\n    final VirtualFile vFile = (VirtualFile)dataContext.getData(DataConstants.VIRTUAL_FILE);\n    if (vFile != null) {\n      final FileType fileType = FileTypeManager.getInstance().getFileTypeByFile(vFile);\n      if (StdFileTypes.GUI_DESIGNER_FORM.equals(fileType)) {\n        final PsiFile formFile = psiManager.findFile(vFile);\n        String text = formFile.getText();\n        LwRootContainer container = null;\n        try {\n          container = Utils.getRootContainer(text, null);\n        }\n        catch (Exception e) {\n          return null;\n        }\n        final PsiClass classToBind = psiManager.findClass(container.getClassToBind(), GlobalSearchScope.allScope(project));\n        result.add(FormNode.constructFormNode(psiManager, classToBind, project, favoritesConfig));\n      }\n    }\n\n    //on form nodes\n    final Form[] forms = (Form[])dataContext.getData(DataConstantsEx.GUI_DESIGNER_FORM_ARRAY);\n    if (forms != null) {\n      Set<PsiClass> bindClasses = new HashSet<PsiClass>();\n      for (int i = 0; i < forms.length; i++) {\n        Form form = forms[i];\n        final PsiClass classToBind = form.getClassToBind();\n        if (bindClasses.contains(classToBind)) continue;\n        bindClasses.add(classToBind);\n        result.add(FormNode.constructFormNode(psiManager, classToBind, project, favoritesConfig));\n      }\n    }\n\n    //on library group node\n    final LibraryGroupElement[] libraryGroups = (LibraryGroupElement[])dataContext.getData(DataConstantsEx.LIBRARY_GROUP_ARRAY);\n    if (libraryGroups != null){\n      for (int i = 0; i < libraryGroups.length; i++) {\n        LibraryGroupElement libraryGroup = libraryGroups[i];\n        result.add(new LibraryGroupNode(project, libraryGroup, favoritesConfig));\n      }\n    }\n\n    //on named library node\n    final NamedLibraryElement[] namedLibraries = (NamedLibraryElement[])dataContext.getData(DataConstantsEx.NAMED_LIBRARY_ARRAY);\n    if (namedLibraries != null){\n      for (int i = 0; i < namedLibraries.length; i++) {\n        NamedLibraryElement namedLibrary = namedLibraries[i];\n        result.add(new NamedLibraryElementNode(project, namedLibrary, favoritesConfig));\n      }\n    }\n    return result.isEmpty() ? null : result.toArray(new AbstractTreeNode[result.size()]);\n  }","id":55769,"modified_method":"private AbstractTreeNode[] createNode(DataContext dataContext) {\n    ArrayList<AbstractTreeNode> result = new ArrayList<AbstractTreeNode>();\n    Project project = (Project)dataContext.getData(DataConstants.PROJECT);\n    final FavoritesTreeViewConfiguration favoritesConfig = FavoritesTreeViewConfiguration.getInstance(project);\n    final PsiManager psiManager = PsiManager.getInstance(project);\n\n    final String currentViewId = ProjectView.getInstance(project).getCurrentViewId();\n    AbstractProjectViewPane pane = ProjectView.getInstance(project).getProjectViewPaneById(currentViewId);\n    if (currentViewId == J2EEProjectViewPane.ID){\n      J2EENodeDescriptor j2eeNodeDescriptor = (J2EENodeDescriptor)pane.getSelectedDescriptor();\n    }\n\n    //on psi element\n    PsiElement psiElement = (PsiElement)dataContext.getData(DataConstants.PSI_ELEMENT);\n    if (psiElement != null){\n      Module containingModule = null;\n      if (ProjectView.getInstance(project).isShowModules(currentViewId)){\n        AbstractTreeNode abstractTreeNode = ((AbstractTreeNode)pane.getSelectedDescriptor().getElement());\n        while (abstractTreeNode != null && !(abstractTreeNode.getParent() instanceof AbstractModuleNode)){\n          abstractTreeNode = abstractTreeNode.getParent();\n        }\n        if (abstractTreeNode != null){\n          containingModule = (Module)((AbstractModuleNode)abstractTreeNode.getParent()).getValue();\n        }\n      }\n      addPsiElementNode(psiElement, project, result, favoritesConfig, containingModule);\n      return result.isEmpty() ? null : result.toArray(new AbstractTreeNode[result.size()]);\n    }\n    \n    //on psi elements\n    final PsiElement[] psiElements = (PsiElement[])dataContext.getData(DataConstantsEx.PSI_ELEMENT_ARRAY);\n    if (psiElements != null) {\n      for (int i = 0; i < psiElements.length; i++) {\n        addPsiElementNode(psiElements[i], project, result, favoritesConfig, (Module)dataContext.getData(DataConstants.MODULE_CONTEXT));\n      }\n      return result.isEmpty() ? null : result.toArray(new AbstractTreeNode[result.size()]);\n    }\n\n    //on module node\n    Module module = (Module)dataContext.getData(DataConstants.MODULE);\n    if (module != null) {\n      if (currentViewId == PackageViewPane.ID) {\n        result.add(new PackageViewModuleNode(project, module, favoritesConfig));\n      }\n      else {\n        result.add(new ProjectViewModuleNode(project, module, favoritesConfig));\n      }\n      return result.isEmpty() ? null : result.toArray(new AbstractTreeNode[result.size()]);\n    }\n\n    //on module nodes\n    Module[] modules = (Module[])dataContext.getData(DataConstants.MODULE_CONTEXT_ARRAY);\n    if (modules != null) {\n      for (int i = 0; i < modules.length; i++) {\n        if (currentViewId == PackageViewPane.ID) {\n          result.add(new PackageViewModuleNode(project, modules[i], favoritesConfig));\n        }\n        else {\n          result.add(new ProjectViewModuleNode(project, modules[i], favoritesConfig));\n        }\n      }\n      return result.isEmpty() ? null : result.toArray(new AbstractTreeNode[result.size()]);\n    }\n\n    //on module groups\n    ModuleGroup[] moduleGroups = (ModuleGroup[])dataContext.getData(DataConstantsEx.MODULE_GROUP_ARRAY);\n    if (moduleGroups != null) {\n      boolean isPackageView = false;\n      if (currentViewId == PackageViewPane.ID) {\n        isPackageView = true;\n      }\n      for (int i = 0; i < moduleGroups.length; i++) {\n        ModuleGroup moduleGroup = moduleGroups[i];\n        if (isPackageView){\n          result.add(new PackageViewModuleGroupNode(project, moduleGroup, favoritesConfig));\n        } else {\n          result.add(new ProjectViewModuleGroupNode(project, moduleGroup, favoritesConfig));\n        }\n      }\n      return result.isEmpty() ? null : result.toArray(new AbstractTreeNode[result.size()]);\n    }\n\n    //on form in editor\n    final VirtualFile vFile = (VirtualFile)dataContext.getData(DataConstants.VIRTUAL_FILE);\n    if (vFile != null) {\n      final FileType fileType = FileTypeManager.getInstance().getFileTypeByFile(vFile);\n      if (StdFileTypes.GUI_DESIGNER_FORM.equals(fileType)) {\n        final PsiFile formFile = psiManager.findFile(vFile);\n        String text = formFile.getText();\n        LwRootContainer container = null;\n        try {\n          container = Utils.getRootContainer(text, null);\n        }\n        catch (Exception e) {\n          return null;\n        }\n        final PsiClass classToBind = psiManager.findClass(container.getClassToBind(), GlobalSearchScope.allScope(project));\n        result.add(FormNode.constructFormNode(psiManager, classToBind, project, favoritesConfig));\n      }\n      return result.isEmpty() ? null : result.toArray(new AbstractTreeNode[result.size()]);\n    }\n\n    //on form nodes\n    final Form[] forms = (Form[])dataContext.getData(DataConstantsEx.GUI_DESIGNER_FORM_ARRAY);\n    if (forms != null) {\n      Set<PsiClass> bindClasses = new HashSet<PsiClass>();\n      for (int i = 0; i < forms.length; i++) {\n        Form form = forms[i];\n        final PsiClass classToBind = form.getClassToBind();\n        if (bindClasses.contains(classToBind)) continue;\n        bindClasses.add(classToBind);\n        result.add(FormNode.constructFormNode(psiManager, classToBind, project, favoritesConfig));\n      }\n      return result.isEmpty() ? null : result.toArray(new AbstractTreeNode[result.size()]);\n    }\n\n    //on library group node\n    final LibraryGroupElement[] libraryGroups = (LibraryGroupElement[])dataContext.getData(DataConstantsEx.LIBRARY_GROUP_ARRAY);\n    if (libraryGroups != null){\n      for (int i = 0; i < libraryGroups.length; i++) {\n        LibraryGroupElement libraryGroup = libraryGroups[i];\n        result.add(new LibraryGroupNode(project, libraryGroup, favoritesConfig));\n      }\n      return result.isEmpty() ? null : result.toArray(new AbstractTreeNode[result.size()]);\n    }\n\n    //on named library node\n    final NamedLibraryElement[] namedLibraries = (NamedLibraryElement[])dataContext.getData(DataConstantsEx.NAMED_LIBRARY_ARRAY);\n    if (namedLibraries != null){\n      for (int i = 0; i < namedLibraries.length; i++) {\n        NamedLibraryElement namedLibrary = namedLibraries[i];\n        result.add(new NamedLibraryElementNode(project, namedLibrary, favoritesConfig));\n      }\n      return result.isEmpty() ? null : result.toArray(new AbstractTreeNode[result.size()]);\n    }\n    return null;\n  }","commit_id":"ae5182c050cf43853d802f3a5bf79a0512a01c31","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private Object getPsiElementNodeValue(PsiElement psiElement, Project project){\n    if (psiElement instanceof PsiPackage){\n      final PsiPackage psiPackage = (PsiPackage)psiElement;\n      final PsiDirectory[] directories = psiPackage.getDirectories();\n      final VirtualFile firstDir = directories[0].getVirtualFile();\n      final boolean isLibraryRoot = PackageUtil.isLibraryRoot(firstDir, project);\n      return new PackageElement(null, psiPackage, isLibraryRoot);\n    }\n    return psiElement;\n  }","id":55770,"modified_method":"private Object getPsiElementNodeValue(PsiElement psiElement, Project project, Module module) {\n    if (psiElement instanceof PsiPackage){\n      final PsiPackage psiPackage = (PsiPackage)psiElement;\n      final PsiDirectory[] directories = psiPackage.getDirectories();\n      final VirtualFile firstDir = directories[0].getVirtualFile();\n      final boolean isLibraryRoot = PackageUtil.isLibraryRoot(firstDir, project);\n      return new PackageElement(module, psiPackage, isLibraryRoot);\n    }\n    return psiElement;\n  }","commit_id":"ae5182c050cf43853d802f3a5bf79a0512a01c31","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private void addPsiElementNode(final PsiElement psiElement,\n                                final Project project,\n                                final ArrayList<AbstractTreeNode> result,\n                                final FavoritesTreeViewConfiguration favoritesConfig) {\n    final Class <? extends AbstractTreeNode> klass;\n    final Object value;\n    if (psiElement != null) {\n      klass = getPsiElementNodeClass(psiElement);\n      value = getPsiElementNodeValue(psiElement, project);\n      try {\n        if (klass != null && value != null) {\n          result.add(ProjectViewNode.createTreeNode(klass, project, value, favoritesConfig));\n        }\n      }\n      catch (Exception e) {\n        LOG.error(e);\n      }\n    }\n  }","id":55771,"modified_method":"private void addPsiElementNode(final PsiElement psiElement,\n                                 final Project project,\n                                 final ArrayList<AbstractTreeNode> result,\n                                 final FavoritesTreeViewConfiguration favoritesConfig,\n                                 Module module) {\n    final Class <? extends AbstractTreeNode> klass = getPsiElementNodeClass(psiElement);\n    final Object value = getPsiElementNodeValue(psiElement, project, module);\n    try {\n      if (klass != null && value != null) {\n        result.add(ProjectViewNode.createTreeNode(klass, project, value, favoritesConfig));\n      }\n    }\n    catch (Exception e) {\n      LOG.error(e);\n    }\n  }","commit_id":"ae5182c050cf43853d802f3a5bf79a0512a01c31","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public boolean update() {\n    myElement.update();\n    myName = myElement.getPresentation().getPresentableText();\n    return true;\n  }","id":55772,"modified_method":"public boolean update() {\n    myElement.update();\n    myName = myElement.getPresentation().getPresentableText();\n    final Object value = myElement.getValue();\n    if (value instanceof PsiElement && ((PsiElement)value).getContainingFile() != null){\n      myColor = FileStatusManager.getInstance(myProject).getStatus(((PsiElement)value).getContainingFile().getVirtualFile()).getColor();\n    }\n    return true;\n  }","commit_id":"ae5182c050cf43853d802f3a5bf79a0512a01c31","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public FavoritesTreeViewPanel(Project project, String helpId) {\n    myProject = project;\n    myHelpId = helpId;\n    setLayout(new BorderLayout());\n\n    myAutoScrollToSourceHandler = new AutoScrollToSourceHandler(myProject) {\n      protected boolean isAutoScrollMode() {\n        return FavoritesTreeViewConfiguration.getInstance(myProject).IS_AUTOSCROLL_TO_SOURCE;\n      }\n\n      protected void setAutoScrollMode(boolean state) {\n        FavoritesTreeViewConfiguration.getInstance(myProject).IS_AUTOSCROLL_TO_SOURCE = state;\n      }\n    };\n\n    //JPanel myCenterPanel = new JPanel(new BorderLayout());\n\n    myFavoritesTreeStructure = FavoritesTreeStructure.getInstance(project);\n    DefaultMutableTreeNode root = new DefaultMutableTreeNode();\n    root.setUserObject(myFavoritesTreeStructure.getRootElement());\n    final DefaultTreeModel treeModel = new DefaultTreeModel(root);\n    myTree = new Tree(treeModel) {\n      public void setRowHeight(int i) {\n        super.setRowHeight(0);\n      }\n    };\n    myBuilder = new FavoritesViewTreeBuilder(myProject, myTree, treeModel, myFavoritesTreeStructure);\n\n    myAutoScrollToSourceHandler.install(myTree);\n    TreeUtil.installActions(myTree);\n    myTree.putClientProperty(\"JTree.lineStyle\", \"Angled\");\n    myTree.setRootVisible(false);\n    myTree.setShowsRootHandles(true);\n    myTree.setLargeModel(true);\n    myTree.setCellRenderer(new NodeRenderer());\n    JScrollPane scrollPane = ScrollPaneFactory.createScrollPane(myTree);\n    PopupHandler.installPopupHandler(myTree, (ActionGroup)ActionManager.getInstance().getAction(IdeActions.GROUP_FAVORITES_VIEW_POPUP),\n                                     ActionPlaces.FAVORITES_VIEW_POPUP, ActionManager.getInstance());\n\n\n   /* mySplitter = new Splitter(true);\n    mySplitter.setHonorComponentsMinimumSize(true);\n    mySplitter.setFirstComponent(myCenterPanel);\n    myStructurePanel = new JPanel(new BorderLayout());\n    myStructureViewWrapper = new MyStructureViewWrapper();\n    myStructureViewWrapper.setFileEditor(null);\n    myStructurePanel.add(myStructureViewWrapper.getComponent());\n    mySplitter.setSecondComponent(myStructurePanel);\n\n   */ add(scrollPane, BorderLayout.CENTER);\n    add(createActionsToolbar(), BorderLayout.NORTH);\n\n    EditSourceOnDoubleClickHandler.install(myTree);\n    myCopyPasteDelegator = new CopyPasteManagerEx.CopyPasteDelegator(myProject, this) {\n      protected PsiElement[] getSelectedElements() {\n        return getSelectedPsiElements();\n      }\n    };\n  }","id":55773,"modified_method":"public FavoritesTreeViewPanel(Project project, String helpId) {\n    myProject = project;\n    myHelpId = helpId;\n    setLayout(new BorderLayout());\n\n    myAutoScrollToSourceHandler = new AutoScrollToSourceHandler(myProject) {\n      protected boolean isAutoScrollMode() {\n        return FavoritesTreeViewConfiguration.getInstance(myProject).IS_AUTOSCROLL_TO_SOURCE;\n      }\n\n      protected void setAutoScrollMode(boolean state) {\n        FavoritesTreeViewConfiguration.getInstance(myProject).IS_AUTOSCROLL_TO_SOURCE = state;\n      }\n    };\n\n    //JPanel myCenterPanel = new JPanel(new BorderLayout());\n\n    myFavoritesTreeStructure = FavoritesTreeStructure.getInstance(project);\n    DefaultMutableTreeNode root = new DefaultMutableTreeNode();\n    root.setUserObject(myFavoritesTreeStructure.getRootElement());\n    final DefaultTreeModel treeModel = new DefaultTreeModel(root);\n    myTree = new Tree(treeModel) {\n      public void setRowHeight(int i) {\n        super.setRowHeight(0);\n      }\n    };\n    myBuilder = new FavoritesViewTreeBuilder(myProject, myTree, treeModel, myFavoritesTreeStructure);\n\n    myAutoScrollToSourceHandler.install(myTree);\n    TreeUtil.installActions(myTree);\n    myTree.putClientProperty(\"JTree.lineStyle\", \"Angled\");\n    myTree.setRootVisible(false);\n    myTree.setShowsRootHandles(true);\n    myTree.setLargeModel(true);\n    myTree.setCellRenderer(new NodeRenderer() {\n      public void customizeCellRenderer(JTree tree,\n                                        Object value,\n                                        boolean selected,\n                                        boolean expanded,\n                                        boolean leaf,\n                                        int row,\n                                        boolean hasFocus) {\n        super.customizeCellRenderer(tree, value, selected, expanded, leaf, row,\n                                    hasFocus);\n        if (value instanceof DefaultMutableTreeNode) {\n          DefaultMutableTreeNode node = (DefaultMutableTreeNode)value;\n          //only favorites roots to explain\n          if (node.getParent() == null || node.getParent().getParent() != null){\n            return;\n          }\n          Object userObject = node.getUserObject();\n\n          if (userObject instanceof FavoritesTreeNodeDescriptor) {\n            final FavoritesTreeNodeDescriptor favoritesTreeNodeDescriptor = ((FavoritesTreeNodeDescriptor)userObject);\n            AbstractTreeNode treeNode = favoritesTreeNodeDescriptor.getElement();\n            String locationString = treeNode.getPresentation().getLocationString();\n            if (locationString != null && locationString.length() > 0) {\n              append(\" (\" + locationString + \")\", SimpleTextAttributes.GRAY_ATTRIBUTES);\n            } else {\n              final String location = favoritesTreeNodeDescriptor.getLocation();\n              if (location != null && location.length() > 0){\n                append(\" (\" + location + \")\", SimpleTextAttributes.GRAY_ATTRIBUTES);\n              }\n            }\n          }\n        }\n      }\n    });\n    JScrollPane scrollPane = ScrollPaneFactory.createScrollPane(myTree);\n    PopupHandler.installPopupHandler(myTree, (ActionGroup)ActionManager.getInstance().getAction(IdeActions.GROUP_FAVORITES_VIEW_POPUP),\n                                     ActionPlaces.FAVORITES_VIEW_POPUP, ActionManager.getInstance());\n\n\n    /* mySplitter = new Splitter(true);\n     mySplitter.setHonorComponentsMinimumSize(true);\n     mySplitter.setFirstComponent(myCenterPanel);\n     myStructurePanel = new JPanel(new BorderLayout());\n     myStructureViewWrapper = new MyStructureViewWrapper();\n     myStructureViewWrapper.setFileEditor(null);\n     myStructurePanel.add(myStructureViewWrapper.getComponent());\n     mySplitter.setSecondComponent(myStructurePanel);\n\n    */ add(scrollPane,\n                                                                                                                                                                                                                                                                                                                                                                                                                                                BorderLayout.CENTER);\n    add(createActionsToolbar(), BorderLayout.NORTH);\n\n    EditSourceOnDoubleClickHandler.install(myTree);\n    myCopyPasteDelegator = new CopyPasteManagerEx.CopyPasteDelegator(myProject, this) {\n      protected PsiElement[] getSelectedElements() {\n        return getSelectedPsiElements();\n      }\n    };\n  }","commit_id":"ae5182c050cf43853d802f3a5bf79a0512a01c31","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private JComponent createActionsToolbar() {\n    final DefaultActionGroup group = new DefaultActionGroup();\n    group.removeAll();\n    final FavoritesTreeViewConfiguration favoritesConf = FavoritesTreeViewConfiguration.getInstance(myProject);\n    group.add(new ToggleAction(\"Flatten Packages\", \"Flatten Packages\", IconLoader.getIcon(\"/objectBrowser/flattenPackages.png\")) {\n      public boolean isSelected(AnActionEvent e) {\n        return favoritesConf.IS_FLATTEN_PACKAGES;\n      }\n\n      public void setSelected(AnActionEvent event, boolean flag) {\n        final SelectionInfo selectionInfo = new SelectionInfo();\n        favoritesConf.IS_FLATTEN_PACKAGES = flag;\n        myBuilder.updateTree();\n        selectionInfo.apply();\n      }\n    });\n\n    group.add(new ToggleAction(\"\") {\n      public boolean isSelected(AnActionEvent e) {\n        return favoritesConf.IS_HIDE_EMPTY_MIDDLE_PACKAGES;\n      }\n\n      public void setSelected(AnActionEvent event, boolean flag) {\n        final SelectionInfo selectionInfo = new SelectionInfo();\n        favoritesConf.IS_HIDE_EMPTY_MIDDLE_PACKAGES = flag;\n        myBuilder.updateTree();\n        selectionInfo.apply();\n      }\n\n      public void update(AnActionEvent e) {\n        super.update(e);\n        final Presentation presentation = e.getPresentation();\n        if (favoritesConf.IS_FLATTEN_PACKAGES) {\n          presentation.setText(\"Hide Empty Middle Packages\");\n          presentation.setDescription(\"Show/Hide Empty Middle Packages\");\n          presentation.setIcon(HIDE_EMPTY_MIDDLE_PACKAGES_ICON);\n        }\n        else {\n          presentation.setText(\"Compact Empty Middle Packages\");\n          presentation.setDescription(\"Show/Compact Empty Middle Packages\");\n          presentation.setIcon(COMPACT_EMPTY_MIDDLE_PACKAGES_ICON);\n        }\n      }\n    });\n    group.add(new ToggleAction(\"Abbreviate Qualified Package Names\", \"Abbreviate Qualified Package Names\",\n                               IconLoader.getIcon(\"/objectBrowser/abbreviatePackageNames.png\")) {\n      public boolean isSelected(AnActionEvent e) {\n        return favoritesConf.IS_ABBREVIATION_PACKAGE_NAMES;\n      }\n\n      public void setSelected(AnActionEvent e, boolean state) {\n        favoritesConf.IS_ABBREVIATION_PACKAGE_NAMES = state;\n        myBuilder.updateTree();\n      }\n\n      public void update(final AnActionEvent e) {\n        e.getPresentation().setEnabled(favoritesConf.IS_FLATTEN_PACKAGES);\n      }\n    });\n    group.add(new ToggleAction(\"Show Members\", \"Show/Hide Members\", IconLoader.getIcon(\"/objectBrowser/showMembers.png\")) {\n      public boolean isSelected(AnActionEvent e) {\n        return favoritesConf.IS_SHOW_MEMBERS;\n      }\n\n      public void setSelected(AnActionEvent e, boolean state) {\n        SelectionInfo selectionInfo = new SelectionInfo();\n        favoritesConf.IS_SHOW_MEMBERS = state;\n        myBuilder.updateTree();\n        selectionInfo.apply();\n      }\n    });\n    group.add(myAutoScrollToSourceHandler.createToggleAction());\n    //group.add(new ShowStructureAction());\n    return ActionManager.getInstance().createActionToolbar(ActionPlaces.FAVORITES_VIEW_TOOLBAR, group, true).getComponent();\n  }","id":55774,"modified_method":"private JComponent createActionsToolbar() {\n    final DefaultActionGroup group = new DefaultActionGroup();\n    group.removeAll();\n    final FavoritesTreeViewConfiguration favoritesConf = FavoritesTreeViewConfiguration.getInstance(myProject);\n    group.add(new ToggleAction(\"Flatten Packages\", \"Flatten Packages\", IconLoader.getIcon(\"/objectBrowser/flattenPackages.png\")) {\n      public boolean isSelected(AnActionEvent e) {\n        return favoritesConf.IS_FLATTEN_PACKAGES;\n      }\n\n      public void setSelected(AnActionEvent event, boolean flag) {\n        final SelectionInfo selectionInfo = new SelectionInfo();\n        favoritesConf.IS_FLATTEN_PACKAGES = flag;\n        myBuilder.updateTree();\n        selectionInfo.apply();\n      }\n    });\n\n    group.add(new ToggleAction(\"\") {\n      public boolean isSelected(AnActionEvent e) {\n        return favoritesConf.IS_HIDE_EMPTY_MIDDLE_PACKAGES;\n      }\n\n      public void setSelected(AnActionEvent event, boolean flag) {\n        final SelectionInfo selectionInfo = new SelectionInfo();\n        favoritesConf.IS_HIDE_EMPTY_MIDDLE_PACKAGES = flag;\n        myBuilder.updateTree();\n        selectionInfo.apply();\n      }\n\n      public void update(AnActionEvent e) {\n        super.update(e);\n        final Presentation presentation = e.getPresentation();\n        if (favoritesConf.IS_FLATTEN_PACKAGES) {\n          presentation.setText(\"Hide Empty Middle Packages\");\n          presentation.setDescription(\"Show/Hide Empty Middle Packages\");\n          presentation.setIcon(HIDE_EMPTY_MIDDLE_PACKAGES_ICON);\n        }\n        else {\n          presentation.setText(\"Compact Empty Middle Packages\");\n          presentation.setDescription(\"Show/Compact Empty Middle Packages\");\n          presentation.setIcon(COMPACT_EMPTY_MIDDLE_PACKAGES_ICON);\n        }\n      }\n    });\n    group.add(new ToggleAction(\"Abbreviate Qualified Package Names\", \"Abbreviate Qualified Package Names\",\n                               IconLoader.getIcon(\"/objectBrowser/abbreviatePackageNames.png\")) {\n      public boolean isSelected(AnActionEvent e) {\n        return favoritesConf.IS_ABBREVIATION_PACKAGE_NAMES;\n      }\n\n      public void setSelected(AnActionEvent e, boolean state) {\n        favoritesConf.IS_ABBREVIATION_PACKAGE_NAMES = state;\n        myBuilder.updateTree();\n      }\n\n      public void update(final AnActionEvent e) {\n        e.getPresentation().setEnabled(favoritesConf.IS_FLATTEN_PACKAGES);\n      }\n    });\n    group.add(new ToggleAction(\"Show Members\", \"Show/Hide Members\", IconLoader.getIcon(\"/objectBrowser/showMembers.png\")) {\n      public boolean isSelected(AnActionEvent e) {\n        return favoritesConf.IS_SHOW_MEMBERS;\n      }\n\n      public void setSelected(AnActionEvent e, boolean state) {\n        SelectionInfo selectionInfo = new SelectionInfo();\n        favoritesConf.IS_SHOW_MEMBERS = state;\n        myBuilder.updateTree();\n        selectionInfo.apply();\n      }\n    });\n    group.add(myAutoScrollToSourceHandler.createToggleAction());\n    //group.add(new ShowStructureAction());\n    group.add(ActionManager.getInstance().getAction(IdeActions.REMOVE_FROM_FAVORITES));\n    return ActionManager.getInstance().createActionToolbar(ActionPlaces.FAVORITES_VIEW_TOOLBAR, group, true).getComponent();\n  }","commit_id":"ae5182c050cf43853d802f3a5bf79a0512a01c31","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void projectOpened() {\n    if (!((ApplicationEx)ApplicationManager.getApplication()).isInternal()) return;\n    StartupManager.getInstance(myProject).registerPostStartupActivity(new Runnable() {\n      public void run() {\n        ToolWindowManager toolWindowManager = ToolWindowManager.getInstance(myProject);\n        ToolWindow toolWindow = toolWindowManager.registerToolWindow(ToolWindowId.FAVORITES_VIEW, getComponent(), ToolWindowAnchor.RIGHT);\n        toolWindow.setIcon(IconLoader.getIcon(\"/general/toolWindowMessages.png\"));\n        new ContentManagerWatcher(toolWindow, FavoritesViewImpl.this);\n        myFavoritesPanel = new FavoritesTreeViewPanel(myProject, null);\n        final Content favoritesContent = PeerFactory.getInstance().getContentFactory().createContent(myFavoritesPanel, \"Project \" + myProject.getName(), false);\n        addContent(favoritesContent);\n      }\n    });\n  }","id":55775,"modified_method":"public void projectOpened() {\n    if (!((ApplicationEx)ApplicationManager.getApplication()).isInternal()) return;\n    StartupManager.getInstance(myProject).registerPostStartupActivity(new Runnable() {\n      public void run() {\n        ToolWindowManager toolWindowManager = ToolWindowManager.getInstance(myProject);\n        ToolWindow toolWindow = toolWindowManager.registerToolWindow(ToolWindowId.FAVORITES_VIEW, getComponent(), ToolWindowAnchor.RIGHT);\n        toolWindow.setIcon(IconLoader.getIcon(\"/general/toolWindowMessages.png\"));\n        new ContentManagerWatcher(toolWindow, FavoritesViewImpl.this);\n        myFavoritesPanel = new FavoritesTreeViewPanel(myProject, null);\n        final Content favoritesContent = PeerFactory.getInstance().getContentFactory().createContent(myFavoritesPanel, myProject.getName(), false);\n        addContent(favoritesContent);\n      }\n    });\n  }","commit_id":"ae5182c050cf43853d802f3a5bf79a0512a01c31","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public RecognizedFileTypes() {\n      super(new BorderLayout());\n      add(myWholePanel, BorderLayout.CENTER);\n      myFileTypesList.setCellRenderer(new FileTypeRenderer());\n      myFileTypesList.setModel(new DefaultListModel());\n\n      if (getSchemesManager().isImportAvailable()) {\n        myImportButton.setVisible(true);\n      }\n\n      if (getSchemesManager().isExportAvailable()) {\n        myExportButton.setVisible(true);\n      }\n\n    }","id":55776,"modified_method":"public RecognizedFileTypes() {\n      super(new BorderLayout());\n      add(myWholePanel, BorderLayout.CENTER);\n      myFileTypesList.setCellRenderer(new FileTypeRenderer(new FileTypeRenderer.FileTypeListProvider(){\n        public Iterable<FileType> getCurrentFileTypeList() {\n          ArrayList<FileType> result = new ArrayList<FileType>();\n          for (int i = 0; i < myFileTypesList.getModel().getSize(); i++) {\n            result.add((FileType)myFileTypesList.getModel().getElementAt(i));\n          }\n          return result;\n        }\n      }));\n      myFileTypesList.setModel(new DefaultListModel());\n\n      if (getSchemesManager().isImportAvailable()) {\n        myImportButton.setVisible(true);\n      }\n\n      if (getSchemesManager().isExportAvailable()) {\n        myExportButton.setVisible(true);\n      }\n\n    }","commit_id":"71a88974881f4eccbc839e758b6a65131f450281","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public Component getListCellRendererComponent(JList list, Object value, int index, boolean isSelected, boolean cellHasFocus) {\n    super.getListCellRendererComponent(list, value, index, isSelected, cellHasFocus);\n    FileType type = (FileType)value;\n    LayeredIcon layeredIcon = new LayeredIcon(2);\n    layeredIcon.setIcon(EMPTY_ICON, 0);\n    final Icon icon = type.getIcon();\n    if (icon != null) {\n      layeredIcon.setIcon(icon, 1, (- icon.getIconWidth() + EMPTY_ICON.getIconWidth())/2, (EMPTY_ICON.getIconHeight() - icon.getIconHeight())/2);\n    }\n\n    setIcon(layeredIcon);\n    setText(type.getDescription() + \" (\" + type.getName() + \")\");\n    return this;\n  }","id":55777,"modified_method":"public Component getListCellRendererComponent(JList list, Object value, int index, boolean isSelected, boolean cellHasFocus) {\n    super.getListCellRendererComponent(list, value, index, isSelected, cellHasFocus);\n    FileType type = (FileType)value;\n    LayeredIcon layeredIcon = new LayeredIcon(2);\n    layeredIcon.setIcon(EMPTY_ICON, 0);\n    final Icon icon = type.getIcon();\n    if (icon != null) {\n      layeredIcon.setIcon(icon, 1, (- icon.getIconWidth() + EMPTY_ICON.getIconWidth())/2, (EMPTY_ICON.getIconHeight() - icon.getIconHeight())/2);\n    }\n\n    setIcon(layeredIcon);\n\n    if (isDuplicated(type.getDescription())) {\n      setText(type.getDescription() + \" (\" + type.getName() + \")\");\n\n    }\n    else {\n      setText(type.getDescription());\n    }\n    return this;\n  }","commit_id":"71a88974881f4eccbc839e758b6a65131f450281","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public FileStructurePopup(@NotNull Project project,\n                            @NotNull FileEditor fileEditor,\n                            @NotNull StructureView structureView,\n                            final boolean applySortAndFilter) {\n    myProject = project;\n    myFileEditor = fileEditor;\n    myStructureViewDelegate = structureView;\n\n    //Stop code analyzer to speedup EDT\n    DaemonCodeAnalyzer.getInstance(myProject).disableUpdateByTimer(this);\n    IdeFocusManager.getInstance(myProject).typeAheadUntil(myTreeHasBuilt);\n    Disposer.register(this, myStructureViewDelegate);\n\n    //long l = System.currentTimeMillis();\n    if (myFileEditor instanceof TextEditor) {\n      Editor e = ((TextEditor)myFileEditor).getEditor();\n      myPsiFile = PsiDocumentManager.getInstance(myProject).getPsiFile(e.getDocument());\n    }\n\n    //System.out.println(System.currentTimeMillis() - l);\n    if (myStructureViewDelegate instanceof StructureViewComposite) {\n      StructureViewComposite.StructureViewDescriptor[] views = ((StructureViewComposite)myStructureViewDelegate).getStructureViews();\n      myBaseTreeModel = new StructureViewCompositeModel(myPsiFile, views);\n      Disposer.register(this, (Disposable)myBaseTreeModel);\n    }\n    else {\n      myBaseTreeModel = myStructureViewDelegate.getTreeModel();\n    }\n\n    if (applySortAndFilter) {\n      myTreeActionsOwner = new TreeStructureActionsOwner(myBaseTreeModel);\n      myTreeModel = new TreeModelWrapper(myBaseTreeModel, myTreeActionsOwner);\n    }\n    else {\n      myTreeActionsOwner = null;\n      myTreeModel = myStructureViewDelegate.getTreeModel();\n    }\n\n    myTreeStructure = new SmartTreeStructure(project, myTreeModel) {\n      @Override\n      public void rebuildTree() {\n        if (ApplicationManager.getApplication().isUnitTestMode() || !myPopup.isDisposed()) {\n          super.rebuildTree();\n        }\n      }\n\n      @Override\n      public boolean isToBuildChildrenInBackground(final Object element) {\n        return getRootElement() == element;\n      }\n\n      @Override\n      protected TreeElementWrapper createTree() {\n        return new StructureViewComponent.StructureViewTreeElementWrapper(myProject, myModel.getRoot(), myModel);\n      }\n\n      @NonNls\n      @Override\n      public String toString() {\n        return \"structure view tree structure(model=\" + myTreeModel + \")\";\n      }\n    };\n\n    myTree = new FileStructureTree(myTreeStructure.getRootElement(), Registry.is(\"fast.tree.expand.in.structure.view\"));\n\n    myTree.setCellRenderer(new NodeRenderer() {\n      @Override\n      protected void doAppend(@NotNull @Nls String fragment,\n                              @NotNull SimpleTextAttributes attributes,\n                              boolean isMainText,\n                              boolean selected) {\n        if (!isMainText) {\n          super.doAppend(fragment, attributes, isMainText, selected);\n        }\n        else {\n          SpeedSearchUtil.appendFragmentsForSpeedSearch(myTree, fragment, attributes, selected, this);\n        }\n      }\n\n      @Override\n      public void doAppend(@NotNull String fragment, @NotNull SimpleTextAttributes attributes, boolean selected) {\n        SpeedSearchUtil.appendFragmentsForSpeedSearch(myTree, fragment, attributes, selected, this);\n      }\n\n      @Override\n      public void doAppend(String fragment, boolean selected) {\n        SpeedSearchUtil.appendFragmentsForSpeedSearch(myTree, fragment, SimpleTextAttributes.REGULAR_ATTRIBUTES, selected, this);\n      }\n    });\n\n    mySpeedSearch = new MyTreeSpeedSearch();\n    mySpeedSearch.setComparator(new SpeedSearchComparator(false, true));\n\n    final FileStructurePopupFilter filter = new FileStructurePopupFilter();\n    myFilteringStructure = new FilteringTreeStructure(filter, myTreeStructure, ApplicationManager.getApplication().isUnitTestMode());\n    myAbstractTreeBuilder = new FilteringTreeBuilder(myTree, filter, myFilteringStructure, null) {\n      @Override\n      public void initRootNode() {\n\n      }\n\n      @Override\n      protected boolean validateNode(Object child) {\n        return StructureViewComponent.isValid(child);\n      }\n\n      @Override\n      public void revalidateTree() {\n        //myTree.revalidate();\n        //myTree.repaint();\n      }\n\n      @Override\n      public boolean isToEnsureSelectionOnFocusGained() {\n        return false;\n      }\n    };\n\n    myTreeExpander = new DefaultTreeExpander(myTree);\n    final ModelListener modelListener = new ModelListener() {\n      @Override\n      public void onModelChanged() {\n        myAbstractTreeBuilder.queueUpdate();\n      }\n    };\n    myTreeModel.addModelListener(modelListener);\n    Disposer.register(this, new Disposable() {\n      @Override\n      public void dispose() {\n        myTreeModel.removeModelListener(modelListener);\n      }\n    });\n\n    //myAbstractTreeBuilder.getUi().setPassthroughMode(true);\n    myAbstractTreeBuilder.getUi().getUpdater().setDelay(1);\n    myInitialPsiElement = getCurrentElement(myPsiFile);\n    //myAbstractTreeBuilder.setCanYieldUpdate(true);\n    Disposer.register(this, myAbstractTreeBuilder);\n    TreeUtil.installActions(myTree);\n  }","id":55778,"modified_method":"public FileStructurePopup(@NotNull Project project,\n                            @NotNull FileEditor fileEditor,\n                            @NotNull StructureView structureView,\n                            final boolean applySortAndFilter) {\n    myProject = project;\n    myFileEditor = fileEditor;\n    myStructureViewDelegate = structureView;\n\n    //Stop code analyzer to speedup EDT\n    DaemonCodeAnalyzer.getInstance(myProject).disableUpdateByTimer(this);\n    IdeFocusManager.getInstance(myProject).typeAheadUntil(myTreeHasBuilt);\n    Disposer.register(this, myStructureViewDelegate);\n\n    //long l = System.currentTimeMillis();\n    if (myFileEditor instanceof TextEditor) {\n      Editor e = ((TextEditor)myFileEditor).getEditor();\n      myPsiFile = PsiDocumentManager.getInstance(myProject).getPsiFile(e.getDocument());\n    }\n\n    //System.out.println(System.currentTimeMillis() - l);\n    if (myStructureViewDelegate instanceof StructureViewComposite) {\n      StructureViewComposite.StructureViewDescriptor[] views = ((StructureViewComposite)myStructureViewDelegate).getStructureViews();\n      myBaseTreeModel = new StructureViewCompositeModel(myPsiFile, views);\n      Disposer.register(this, (Disposable)myBaseTreeModel);\n    }\n    else {\n      myBaseTreeModel = myStructureViewDelegate.getTreeModel();\n    }\n\n    if (applySortAndFilter) {\n      myTreeActionsOwner = new TreeStructureActionsOwner(myBaseTreeModel);\n      myTreeModel = new TreeModelWrapper(myBaseTreeModel, myTreeActionsOwner);\n    }\n    else {\n      myTreeActionsOwner = null;\n      myTreeModel = myStructureViewDelegate.getTreeModel();\n    }\n\n    myTreeStructure = new SmartTreeStructure(project, myTreeModel) {\n      @Override\n      public void rebuildTree() {\n        if (ApplicationManager.getApplication().isUnitTestMode() || !myPopup.isDisposed()) {\n          super.rebuildTree();\n        }\n      }\n\n      @Override\n      public boolean isToBuildChildrenInBackground(final Object element) {\n        return getRootElement() == element;\n      }\n\n      @Override\n      protected TreeElementWrapper createTree() {\n        return new StructureViewComponent.StructureViewTreeElementWrapper(myProject, myModel.getRoot(), myModel);\n      }\n\n      @NonNls\n      @Override\n      public String toString() {\n        return \"structure view tree structure(model=\" + myTreeModel + \")\";\n      }\n    };\n\n    myTree = new FileStructureTree(myTreeStructure.getRootElement(), Registry.is(\"fast.tree.expand.in.structure.view\"));\n\n    myTree.setCellRenderer(new NodeRenderer());\n\n    mySpeedSearch = new MyTreeSpeedSearch();\n    mySpeedSearch.setComparator(new SpeedSearchComparator(false, true));\n\n    final FileStructurePopupFilter filter = new FileStructurePopupFilter();\n    myFilteringStructure = new FilteringTreeStructure(filter, myTreeStructure, ApplicationManager.getApplication().isUnitTestMode());\n    myAbstractTreeBuilder = new FilteringTreeBuilder(myTree, filter, myFilteringStructure, null) {\n      @Override\n      public void initRootNode() {\n\n      }\n\n      @Override\n      protected boolean validateNode(Object child) {\n        return StructureViewComponent.isValid(child);\n      }\n\n      @Override\n      public void revalidateTree() {\n        //myTree.revalidate();\n        //myTree.repaint();\n      }\n\n      @Override\n      public boolean isToEnsureSelectionOnFocusGained() {\n        return false;\n      }\n    };\n\n    myTreeExpander = new DefaultTreeExpander(myTree);\n    final ModelListener modelListener = new ModelListener() {\n      @Override\n      public void onModelChanged() {\n        myAbstractTreeBuilder.queueUpdate();\n      }\n    };\n    myTreeModel.addModelListener(modelListener);\n    Disposer.register(this, new Disposable() {\n      @Override\n      public void dispose() {\n        myTreeModel.removeModelListener(modelListener);\n      }\n    });\n\n    //myAbstractTreeBuilder.getUi().setPassthroughMode(true);\n    myAbstractTreeBuilder.getUi().getUpdater().setDelay(1);\n    myInitialPsiElement = getCurrentElement(myPsiFile);\n    //myAbstractTreeBuilder.setCanYieldUpdate(true);\n    Disposer.register(this, myAbstractTreeBuilder);\n    TreeUtil.installActions(myTree);\n  }","commit_id":"67dbff6d5fada852d0e25abd9257cc752c1f6b8a","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Override\n  public void customizeCellRenderer(JTree tree, Object value, boolean selected, boolean expanded, boolean leaf, int row, boolean hasFocus) {\n    Color color = null;\n    NodeDescriptor descriptor = null;\n    if (value instanceof DefaultMutableTreeNode) {\n      DefaultMutableTreeNode node = (DefaultMutableTreeNode)value;\n      Object userObject = node.getUserObject();\n      if (userObject instanceof NodeDescriptor) {\n        descriptor = (NodeDescriptor)userObject;\n        color = descriptor.getColor();\n        setIcon(descriptor.getIcon());\n      }\n    }\n\n\n    if (descriptor instanceof PresentableNodeDescriptor) {\n      final PresentableNodeDescriptor node = (PresentableNodeDescriptor)descriptor;\n      final PresentationData presentation = node.getPresentation();\n\n      final List<PresentableNodeDescriptor.ColoredFragment> coloredText = presentation.getColoredText();\n      if (coloredText.isEmpty()) {\n        String text = tree.convertValueToText(value.toString(), selected, expanded, leaf, row, hasFocus);\n        SimpleTextAttributes simpleTextAttributes = getSimpleTextAttributes(node, presentation.getForcedTextForeground() != null ? presentation.getForcedTextForeground() : color);\n        doAppend(text, simpleTextAttributes, selected);\n      }\n      else {\n        boolean first = true;\n        for (PresentableNodeDescriptor.ColoredFragment each : coloredText) {\n          SimpleTextAttributes simpleTextAttributes = each.getAttributes();\n          if (each.getAttributes().getFgColor() == null && presentation.getForcedTextForeground() != null) {\n            simpleTextAttributes = addColorToSimpleTextAttributes(each.getAttributes(),\n              presentation.getForcedTextForeground() != null ? presentation.getForcedTextForeground() : color);\n          }\n          if (first) {\n            final TextAttributesKey textAttributesKey = presentation.getTextAttributesKey();\n            if (textAttributesKey != null) {\n              final TextAttributes forcedAttributes = getColorsScheme().getAttributes(textAttributesKey);\n              if (forcedAttributes != null) {\n                simpleTextAttributes = SimpleTextAttributes.merge(SimpleTextAttributes.fromTextAttributes(forcedAttributes), simpleTextAttributes);\n              }\n            }\n            first = false;\n          }\n          doAppend(each.getText(), simpleTextAttributes, true);\n        }\n      }\n\n      final String location = presentation.getLocationString();\n      if (!StringUtil.isEmpty(location)) {\n        doAppend(presentation.getLocationPrefix() + location + presentation.getLocationSuffix(),\n                 SimpleTextAttributes.GRAY_ATTRIBUTES, false, selected);\n      }\n\n      setToolTipText(presentation.getTooltip());\n    }\n    else if (value != null) {\n      String text = value.toString();\n      if (descriptor != null) {\n        text = descriptor.myName;\n      }\n      text = tree.convertValueToText(text, selected, expanded, leaf, row, hasFocus);\n      if (text == null) {\n        text = \"\";\n      }\n      doAppend(text, selected);\n      setToolTipText(null);\n    }\n  }","id":55779,"modified_method":"@Override\n  public void customizeCellRenderer(JTree tree, Object value, boolean selected, boolean expanded, boolean leaf, int row, boolean hasFocus) {\n    Color color = null;\n    NodeDescriptor descriptor = null;\n    if (value instanceof DefaultMutableTreeNode) {\n      DefaultMutableTreeNode node = (DefaultMutableTreeNode)value;\n      Object userObject = node.getUserObject();\n      if (userObject instanceof NodeDescriptor) {\n        descriptor = (NodeDescriptor)userObject;\n        color = descriptor.getColor();\n        setIcon(descriptor.getIcon());\n      }\n    }\n\n\n    if (descriptor instanceof PresentableNodeDescriptor) {\n      final PresentableNodeDescriptor node = (PresentableNodeDescriptor)descriptor;\n      final PresentationData presentation = node.getPresentation();\n\n      final List<PresentableNodeDescriptor.ColoredFragment> coloredText = presentation.getColoredText();\n      if (coloredText.isEmpty()) {\n        String text = tree.convertValueToText(value.toString(), selected, expanded, leaf, row, hasFocus);\n        SimpleTextAttributes simpleTextAttributes = getSimpleTextAttributes(node, presentation.getForcedTextForeground() != null ? presentation.getForcedTextForeground() : color);\n        append(text, simpleTextAttributes, selected);\n      }\n      else {\n        boolean first = true;\n        for (PresentableNodeDescriptor.ColoredFragment each : coloredText) {\n          SimpleTextAttributes simpleTextAttributes = each.getAttributes();\n          if (each.getAttributes().getFgColor() == null && presentation.getForcedTextForeground() != null) {\n            simpleTextAttributes = addColorToSimpleTextAttributes(each.getAttributes(),\n              presentation.getForcedTextForeground() != null ? presentation.getForcedTextForeground() : color);\n          }\n          if (first) {\n            final TextAttributesKey textAttributesKey = presentation.getTextAttributesKey();\n            if (textAttributesKey != null) {\n              final TextAttributes forcedAttributes = getColorsScheme().getAttributes(textAttributesKey);\n              if (forcedAttributes != null) {\n                simpleTextAttributes = SimpleTextAttributes.merge(SimpleTextAttributes.fromTextAttributes(forcedAttributes), simpleTextAttributes);\n              }\n            }\n            first = false;\n          }\n          // treat grayed text as non-main\n          boolean isMain = simpleTextAttributes != SimpleTextAttributes.GRAYED_ATTRIBUTES;\n          append(each.getText(), simpleTextAttributes, isMain);\n        }\n      }\n\n      final String location = presentation.getLocationString();\n      if (!StringUtil.isEmpty(location)) {\n        append(presentation.getLocationPrefix() + location + presentation.getLocationSuffix(), SimpleTextAttributes.GRAY_ATTRIBUTES, false);\n      }\n\n      setToolTipText(presentation.getTooltip());\n    }\n    else if (value != null) {\n      String text = value.toString();\n      if (descriptor != null) {\n        text = descriptor.myName;\n      }\n      text = tree.convertValueToText(text, selected, expanded, leaf, row, hasFocus);\n      if (text == null) {\n        text = \"\";\n      }\n      append(text);\n      setToolTipText(null);\n    }\n    if (!AbstractTreeUi.isLoadingNode(value)) {\n      SpeedSearchUtil.applySpeedSearchHighlighting(tree, this, true, selected);\n    }\n  }","commit_id":"67dbff6d5fada852d0e25abd9257cc752c1f6b8a","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public static void applySpeedSearchHighlighting(@NotNull JComponent speedSearchEnabledComponent,\n                                                  @NotNull SimpleColoredComponent coloredComponent,\n                                                  boolean mainOnly,\n                                                  boolean selected) {\n    SpeedSearchSupply speedSearch = SpeedSearchSupply.getSupply(speedSearchEnabledComponent);\n    Iterable<TextRange> ranges = speedSearch == null ? null : speedSearch.matchingFragments(coloredComponent.getCharSequence(mainOnly).toString());\n    Iterator<TextRange> rangesIterator = ranges != null ? ranges.iterator() : null;\n    if (rangesIterator == null || !rangesIterator.hasNext()) return;\n    Color bg = selected ? UIUtil.getTreeSelectionBackground() : UIUtil.getTreeTextBackground();\n\n    SimpleColoredComponent.ColoredIterator coloredIterator = coloredComponent.iterator();\n    TextRange range = rangesIterator.next();\n    main: while (coloredIterator.hasNext()) {\n      coloredIterator.next();\n      int offset = coloredIterator.getOffset();\n      int endOffset = coloredIterator.getEndOffset();\n      if (!range.intersectsStrict(offset, endOffset)) continue;\n      SimpleTextAttributes attributes = coloredIterator.getTextAttributes();\n      SimpleTextAttributes highlighted = new SimpleTextAttributes(bg, attributes.getFgColor(), null, attributes.getStyle() | SimpleTextAttributes.STYLE_SEARCH_MATCH);\n      if (range.getStartOffset() > offset) {\n        offset = coloredIterator.split(range.getStartOffset() - offset, attributes);\n      }\n      do {\n        if (range.getEndOffset() <= endOffset) {\n          offset = coloredIterator.split(range.getEndOffset() - offset, highlighted);\n          if (rangesIterator.hasNext()) {\n            range = rangesIterator.next();\n          }\n          else {\n            break main;\n          }\n        }\n        else {\n          coloredIterator.split(endOffset - offset, highlighted);\n          continue main;\n        }\n      }\n      while (range.intersectsStrict(offset, endOffset));\n    }\n  }","id":55780,"modified_method":"public static void applySpeedSearchHighlighting(@NotNull JComponent speedSearchEnabledComponent,\n                                                  @NotNull SimpleColoredComponent coloredComponent,\n                                                  boolean mainTextOnly,\n                                                  boolean selected) {\n    SpeedSearchSupply speedSearch = SpeedSearchSupply.getSupply(speedSearchEnabledComponent);\n    // The bad thing is that SpeedSearch model is decoupled from UI presentation so we don't know the real matched text.\n    // Our best guess is to get strgin from the ColoredComponent. We can only provide main-text-only option.\n    Iterable<TextRange> ranges = speedSearch == null ? null : speedSearch.matchingFragments(coloredComponent.getCharSequence(mainTextOnly).toString());\n    Iterator<TextRange> rangesIterator = ranges != null ? ranges.iterator() : null;\n    if (rangesIterator == null || !rangesIterator.hasNext()) return;\n    Color bg = selected ? UIUtil.getTreeSelectionBackground() : UIUtil.getTreeTextBackground();\n\n    SimpleColoredComponent.ColoredIterator coloredIterator = coloredComponent.iterator();\n    TextRange range = rangesIterator.next();\n    main: while (coloredIterator.hasNext()) {\n      coloredIterator.next();\n      int offset = coloredIterator.getOffset();\n      int endOffset = coloredIterator.getEndOffset();\n      if (!range.intersectsStrict(offset, endOffset)) continue;\n      SimpleTextAttributes attributes = coloredIterator.getTextAttributes();\n      SimpleTextAttributes highlighted = new SimpleTextAttributes(bg, attributes.getFgColor(), null, attributes.getStyle() | SimpleTextAttributes.STYLE_SEARCH_MATCH);\n      if (range.getStartOffset() > offset) {\n        offset = coloredIterator.split(range.getStartOffset() - offset, attributes);\n      }\n      do {\n        if (range.getEndOffset() <= endOffset) {\n          offset = coloredIterator.split(range.getEndOffset() - offset, highlighted);\n          if (rangesIterator.hasNext()) {\n            range = rangesIterator.next();\n          }\n          else {\n            break main;\n          }\n        }\n        else {\n          coloredIterator.split(endOffset - offset, highlighted);\n          continue main;\n        }\n      }\n      while (range.intersectsStrict(offset, endOffset));\n    }\n  }","commit_id":"67dbff6d5fada852d0e25abd9257cc752c1f6b8a","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public static void showChooser(final Editor editor, final List<PsiExpression> expressions, final Pass<PsiExpression> callback) {\n    final ScopeHighlighter highlighter = new ScopeHighlighter(editor);\n    final DefaultListModel model = new DefaultListModel();\n    for (PsiExpression expr : expressions) {\n      model.addElement(expr);\n    }\n    final JList list = new JList(model);\n    list.setCellRenderer(new DefaultListCellRenderer() {\n      void appendText(PsiExpression expr, StringBuffer buf) {\n        if (expr instanceof PsiNewExpression) {\n          final PsiAnonymousClass anonymousClass = ((PsiNewExpression)expr).getAnonymousClass();\n          final PsiExpressionList argumentList = ((PsiNewExpression)expr).getArgumentList();\n          if (argumentList == null) {\n            buf.append(expr.getText());\n          } else {\n            final String args = argumentList.getExpressions().length > 0 ? \"(...)\" : \"()\";\n            if (anonymousClass != null) {\n              buf.append(\"new \").append(anonymousClass.getBaseClassType().getPresentableText()).append(args).append(\" {...}\");\n            } else {\n              final PsiJavaCodeReferenceElement reference = ((PsiNewExpression)expr).getClassReference();\n              if (reference != null) {\n                buf.append(\"new \").append(reference.getText()).append(args);\n              } else {\n                buf.append(expr.getText());\n              }\n            }\n          }\n        } else if (expr instanceof PsiReferenceExpression) {\n          final PsiExpression qualifierExpression = ((PsiReferenceExpression)expr).getQualifierExpression();\n          if (qualifierExpression != null) {\n            appendText(qualifierExpression, buf);\n            buf.append(\".\");\n          }\n          buf.append(((PsiReferenceExpression)expr).getReferenceName());\n        } else if (expr instanceof PsiMethodCallExpression) {\n          appendText(((PsiMethodCallExpression)expr).getMethodExpression(), buf);\n          final PsiExpression[] args = ((PsiMethodCallExpression)expr).getArgumentList().getExpressions();\n          if (args.length > 0) {\n            buf.append(\"(...)\");\n          } else {\n            buf.append(\"()\");\n          }\n        } else if (expr instanceof PsiAssignmentExpression) {\n          final PsiAssignmentExpression assignmentExpression = (PsiAssignmentExpression)expr;\n          appendText(assignmentExpression.getLExpression(), buf);\n          buf.append(assignmentExpression.getOperationSign().getText());\n          appendText(assignmentExpression.getRExpression(), buf);\n        }\n        else if (expr instanceof PsiConditionalExpression) {\n          final PsiConditionalExpression conditionalExpression = (PsiConditionalExpression)expr;\n          appendText(conditionalExpression.getCondition(), buf);\n          buf.append(\" ? \");\n          appendText(conditionalExpression.getThenExpression(), buf);\n          buf.append(\" : \");\n          appendText(conditionalExpression.getElseExpression(), buf);\n        }\n        else if (expr instanceof PsiBinaryExpression) {\n          final PsiBinaryExpression binaryExpression = (PsiBinaryExpression)expr;\n          appendText(binaryExpression.getLOperand(), buf);\n          buf.append(binaryExpression.getOperationSign().getText());\n          appendText(binaryExpression.getROperand(), buf);\n        }\n        else if (expr instanceof PsiPostfixExpression) {\n          appendText(((PsiPostfixExpression)expr).getOperand(), buf);\n          buf.append(((PsiPostfixExpression)expr).getOperationSign().getText());\n        }\n        else if (expr instanceof PsiPrefixExpression) {\n          buf.append(((PsiPrefixExpression)expr).getOperationSign().getText());\n          appendText(((PsiPrefixExpression)expr).getOperand(), buf);\n        }\n        else if (expr != null) {\n          buf.append(expr.getText());\n        }\n      }\n\n      @Override\n      public Component getListCellRendererComponent(final JList list,\n                                                    final Object value,\n                                                    final int index,\n                                                    final boolean isSelected,\n                                                    final boolean cellHasFocus) {\n        final Component rendererComponent = super.getListCellRendererComponent(list, value, index, isSelected, cellHasFocus);\n\n        final StringBuffer buf = new StringBuffer();\n        appendText((PsiExpression)value, buf);\n        setText(buf.toString());\n        return rendererComponent;\n      }\n    });\n\n    list.addListSelectionListener(new ListSelectionListener() {\n      public void valueChanged(final ListSelectionEvent e) {\n        highlighter.dropHighlight();\n        final int index = list.getSelectedIndex();\n        if (index < 0 ) return;\n        final PsiExpression expr = (PsiExpression)model.get(index);\n        final ArrayList<PsiElement> toExtract = new ArrayList<PsiElement>();\n        toExtract.add(expr);\n        highlighter.highlight(expr, toExtract);\n      }\n    });\n\n    JBPopupFactory.getInstance().createListPopupBuilder(list)\n          .setTitle(\"Expressions\")\n          .setMovable(false)\n          .setResizable(false)\n          .setRequestFocus(true)\n          .setItemChoosenCallback(new Runnable() {\n                                    public void run() {\n                                      callback.pass((PsiExpression)list.getSelectedValue());\n                                    }\n                                  })\n          .addListener(new JBPopupAdapter() {\n                          @Override\n                          public void onClosed(JBPopup popup) {\n                            highlighter.dropHighlight();\n                          }\n                       })\n          .createPopup().showInBestPositionFor(editor);\n  }","id":55781,"modified_method":"public static void showChooser(final Editor editor, final List<PsiExpression> expressions, final Pass<PsiExpression> callback) {\n    final ScopeHighlighter highlighter = new ScopeHighlighter(editor);\n    final DefaultListModel model = new DefaultListModel();\n    for (PsiExpression expr : expressions) {\n      model.addElement(expr);\n    }\n    final JList list = new JList(model);\n    list.setCellRenderer(new DefaultListCellRenderer() {\n\n      @Override\n      public Component getListCellRendererComponent(final JList list,\n                                                    final Object value,\n                                                    final int index,\n                                                    final boolean isSelected,\n                                                    final boolean cellHasFocus) {\n        final Component rendererComponent = super.getListCellRendererComponent(list, value, index, isSelected, cellHasFocus);\n\n        final StringBuffer buf = new StringBuffer();\n        ((PsiExpression)value).accept(new PsiExpressionTrimRenderer(buf));\n        setText(buf.toString());\n        return rendererComponent;\n      }\n    });\n\n    list.addListSelectionListener(new ListSelectionListener() {\n      public void valueChanged(final ListSelectionEvent e) {\n        highlighter.dropHighlight();\n        final int index = list.getSelectedIndex();\n        if (index < 0 ) return;\n        final PsiExpression expr = (PsiExpression)model.get(index);\n        final ArrayList<PsiElement> toExtract = new ArrayList<PsiElement>();\n        toExtract.add(expr);\n        highlighter.highlight(expr, toExtract);\n      }\n    });\n\n    JBPopupFactory.getInstance().createListPopupBuilder(list)\n          .setTitle(\"Expressions\")\n          .setMovable(false)\n          .setResizable(false)\n          .setRequestFocus(true)\n          .setItemChoosenCallback(new Runnable() {\n                                    public void run() {\n                                      callback.pass((PsiExpression)list.getSelectedValue());\n                                    }\n                                  })\n          .addListener(new JBPopupAdapter() {\n                          @Override\n                          public void onClosed(JBPopup popup) {\n                            highlighter.dropHighlight();\n                          }\n                       })\n          .createPopup().showInBestPositionFor(editor);\n  }","commit_id":"08c4f8ffe0c831c12fc562a901e6b280cd8f0378","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public ImageryProvidersPanel(final PreferenceTabbedPane gui, ImageryLayerInfo layerInfoArg) {\n            super(new GridBagLayout());\n            this.gui = gui;\n            this.layerInfo = layerInfoArg;\n            this.model = new ImageryLayerTableModel();\n\n            listActive = new JTable(model) {\n                @Override\n                public String getToolTipText(MouseEvent e) {\n                    java.awt.Point p = e.getPoint();\n                    return model.getValueAt(rowAtPoint(p), columnAtPoint(p)).toString();\n                }\n            };\n\n            modeldef = new ImageryDefaultLayerTableModel();\n            listdef = new JTable(modeldef) {\n                @Override\n                public String getToolTipText(MouseEvent e) {\n                    java.awt.Point p = e.getPoint();\n                    return (String) modeldef.getValueAt(rowAtPoint(p), columnAtPoint(p));\n                }\n            };\n\n            modeldef.addTableModelListener(\n                new TableModelListener() {\n                    @Override\n                    public void tableChanged(TableModelEvent e) {\n                        listActive.repaint();\n                    }\n                }\n            );\n\n            model.addTableModelListener(\n                new TableModelListener() {\n                    @Override\n                    public void tableChanged(TableModelEvent e) {\n                        listdef.repaint();\n                    }\n                }\n            );\n\n            TableColumnModel mod = listdef.getColumnModel();\n            mod.getColumn(2).setPreferredWidth(800);\n            mod.getColumn(1).setPreferredWidth(400);\n            mod.getColumn(0).setPreferredWidth(50);\n\n            mod.getColumn(2).setCellRenderer(new DefaultTableCellRenderer() {\n                @Override\n                public Component getTableCellRendererComponent(JTable table,\n                Object value, boolean isSelected, boolean hasFocus, int row,\n                int column) {\n                    JLabel label = (JLabel) super.getTableCellRendererComponent(\n                    table, value, isSelected, hasFocus, row, column);\n                    String t = value.toString();\n                    label.setBackground(Main.pref.getUIColor(\"Table.background\"));\n                    for(ImageryInfo l : layerInfo.getLayers())\n                    {\n                        if(l.getExtendedUrl().equals(t)) {\n                            label.setBackground(Main.pref.getColor(\n                            marktr(\"Imagery Background: Default\"),\n                            new Color(200,255,200)));\n                            break;\n                        }\n                    }\n                    return label;\n                };\n            });\n\n            mod = listActive.getColumnModel();\n            mod.getColumn(1).setPreferredWidth(800);\n            mod.getColumn(0).setPreferredWidth(200);\n\n            mod.getColumn(1).setCellRenderer(new DefaultTableCellRenderer() {\n                @Override\n                public Component getTableCellRendererComponent(JTable table,\n                Object value, boolean isSelected, boolean hasFocus, int row,\n                int column) {\n                    JLabel label = (JLabel) super.getTableCellRendererComponent(\n                    table, value, isSelected, hasFocus, row, column);\n                    String t = value.toString();\n                    label.setBackground(Main.pref.getUIColor(\"Table.background\"));\n                    for(ImageryInfo l : layerInfo.getDefaultLayers())\n                    {\n                        if(l.getExtendedUrl().equals(t)) {\n                            label.setBackground(Main.pref.getColor(\n                            marktr(\"Imagery Background: Default\"),\n                            new Color(200,255,200)));\n                            break;\n                        }\n                    }\n                    return label;\n                };\n            });\n\n            RemoveEntryAction remove = new RemoveEntryAction();\n            listActive.getSelectionModel().addListSelectionListener(remove);\n\n            add(new JLabel(tr(\"Available default entries:\")), GBC.eol().insets(5, 5, 0, 0));\n            // Add default item list\n            JScrollPane scrolldef = new JScrollPane(listdef);\n            scrolldef.setPreferredSize(new Dimension(200, 200));\n            add(scrolldef, GBC.std().insets(0, 5, 0, 0).fill(GridBagConstraints.BOTH).weight(1.0, 0.6).insets(5, 0, 0, 0));\n\n            // Add default item map\n            map = new JMapViewer();\n            map.setZoomContolsVisible(false);\n            map.setMinimumSize(new Dimension(100, 200));\n            add(map, GBC.std().insets(5, 5, 0, 0).fill(GridBagConstraints.BOTH).weight(0.33, 0.6).insets(5, 0, 0, 0));\n\n            listdef.getSelectionModel().addListSelectionListener(new DefListSelectionListener());\n\n            JToolBar tb = new JToolBar(JToolBar.VERTICAL);\n            tb.setFloatable(false);\n            tb.setBorderPainted(false);\n            tb.setOpaque(false);\n            tb.add(new ReloadAction());\n            add(tb, GBC.eol().anchor(GBC.SOUTH).insets(0, 0, 5, 0));\n\n            ActivateAction activate = new ActivateAction();\n            listdef.getSelectionModel().addListSelectionListener(activate);\n            JButton btnActivate = new JButton(activate);\n\n            JToolBar tb2 = new JToolBar(JToolBar.VERTICAL);\n            tb2.setFloatable(false);\n            tb2.setBorderPainted(false);\n            tb2.setOpaque(false);\n            tb2.add(btnActivate);\n            add(tb2, GBC.eol().anchor(GBC.CENTER).insets(5, 15, 5, 0));\n\n            add(Box.createHorizontalGlue(), GBC.eol().fill(GridBagConstraints.HORIZONTAL));\n\n            add(new JLabel(tr(\"Selected entries:\")), GBC.eol().insets(5, 0, 0, 0));\n            JScrollPane scroll = new JScrollPane(listActive);\n            add(scroll, GBC.std().fill(GridBagConstraints.BOTH).span(GridBagConstraints.RELATIVE).weight(1.0, 0.4).insets(5, 0, 0, 5));\n            scroll.setPreferredSize(new Dimension(200, 200));\n\n            JToolBar sideButtonTB = new JToolBar(JToolBar.VERTICAL);\n            sideButtonTB.setFloatable(false);\n            sideButtonTB.setBorderPainted(false);\n            sideButtonTB.setOpaque(false);\n            sideButtonTB.add(new NewEntryAction());\n            //sideButtonTB.add(edit); TODO\n            sideButtonTB.add(remove);\n            add(sideButtonTB, GBC.eol().anchor(GBC.NORTH).insets(0, 0, 5, 5));\n\n        }","id":55782,"modified_method":"public ImageryProvidersPanel(final PreferenceTabbedPane gui, ImageryLayerInfo layerInfoArg) {\n            super(new GridBagLayout());\n            this.gui = gui;\n            this.layerInfo = layerInfoArg;\n            this.model = new ImageryLayerTableModel();\n\n            listActive = new JTable(model) {\n                @Override\n                public String getToolTipText(MouseEvent e) {\n                    java.awt.Point p = e.getPoint();\n                    return model.getValueAt(rowAtPoint(p), columnAtPoint(p)).toString();\n                }\n            };\n\n            modeldef = new ImageryDefaultLayerTableModel();\n            listdef = new JTable(modeldef) {\n                @Override\n                public String getToolTipText(MouseEvent e) {\n                    java.awt.Point p = e.getPoint();\n                    return (String) modeldef.getValueAt(rowAtPoint(p), columnAtPoint(p));\n                }\n            };\n\n            modeldef.addTableModelListener(\n                new TableModelListener() {\n                    @Override\n                    public void tableChanged(TableModelEvent e) {\n                        listActive.repaint();\n                    }\n                }\n            );\n\n            model.addTableModelListener(\n                new TableModelListener() {\n                    @Override\n                    public void tableChanged(TableModelEvent e) {\n                        listdef.repaint();\n                    }\n                }\n            );\n\n            TableColumnModel mod = listdef.getColumnModel();\n            mod.getColumn(2).setPreferredWidth(800);\n            mod.getColumn(2).setCellRenderer(new ImageryTableCellRenderer(layerInfo.getLayers()));\n            mod.getColumn(1).setPreferredWidth(400);\n            mod.getColumn(0).setPreferredWidth(50);\n\n            mod = listActive.getColumnModel();\n            mod.getColumn(1).setPreferredWidth(800);\n            mod.getColumn(1).setCellRenderer(new ImageryTableCellRenderer(layerInfo.getDefaultLayers()));\n            mod.getColumn(0).setPreferredWidth(200);\n\n            RemoveEntryAction remove = new RemoveEntryAction();\n            listActive.getSelectionModel().addListSelectionListener(remove);\n\n            add(new JLabel(tr(\"Available default entries:\")), GBC.eol().insets(5, 5, 0, 0));\n            // Add default item list\n            JScrollPane scrolldef = new JScrollPane(listdef);\n            scrolldef.setPreferredSize(new Dimension(200, 200));\n            add(scrolldef, GBC.std().insets(0, 5, 0, 0).fill(GridBagConstraints.BOTH).weight(1.0, 0.6).insets(5, 0, 0, 0));\n\n            // Add default item map\n            map = new JMapViewer();\n            map.setZoomContolsVisible(false);\n            map.setMinimumSize(new Dimension(100, 200));\n            add(map, GBC.std().insets(5, 5, 0, 0).fill(GridBagConstraints.BOTH).weight(0.33, 0.6).insets(5, 0, 0, 0));\n\n            listdef.getSelectionModel().addListSelectionListener(new DefListSelectionListener());\n\n            JToolBar tb = new JToolBar(JToolBar.VERTICAL);\n            tb.setFloatable(false);\n            tb.setBorderPainted(false);\n            tb.setOpaque(false);\n            tb.add(new ReloadAction());\n            add(tb, GBC.eol().anchor(GBC.SOUTH).insets(0, 0, 5, 0));\n\n            ActivateAction activate = new ActivateAction();\n            listdef.getSelectionModel().addListSelectionListener(activate);\n            JButton btnActivate = new JButton(activate);\n\n            JToolBar tb2 = new JToolBar(JToolBar.VERTICAL);\n            tb2.setFloatable(false);\n            tb2.setBorderPainted(false);\n            tb2.setOpaque(false);\n            tb2.add(btnActivate);\n            add(tb2, GBC.eol().anchor(GBC.CENTER).insets(5, 15, 5, 0));\n\n            add(Box.createHorizontalGlue(), GBC.eol().fill(GridBagConstraints.HORIZONTAL));\n\n            add(new JLabel(tr(\"Selected entries:\")), GBC.eol().insets(5, 0, 0, 0));\n            JScrollPane scroll = new JScrollPane(listActive);\n            add(scroll, GBC.std().fill(GridBagConstraints.BOTH).span(GridBagConstraints.RELATIVE).weight(1.0, 0.4).insets(5, 0, 0, 5));\n            scroll.setPreferredSize(new Dimension(200, 200));\n\n            JToolBar sideButtonTB = new JToolBar(JToolBar.VERTICAL);\n            sideButtonTB.setFloatable(false);\n            sideButtonTB.setBorderPainted(false);\n            sideButtonTB.setOpaque(false);\n            sideButtonTB.add(new NewEntryAction());\n            //sideButtonTB.add(edit); TODO\n            sideButtonTB.add(remove);\n            add(sideButtonTB, GBC.eol().anchor(GBC.NORTH).insets(0, 0, 5, 5));\n\n        }","commit_id":"135f514b81584968bfc473f3de5c2ec26e28c6d1","url":"https://github.com/openstreetmap/josm"},{"original_method":"private void updateSignature() {\n    if (mySignatureArea == null) return;\n    @NonNls StringBuffer buffer = new StringBuffer();\n    final String visibilityString = VisibilityUtil.getVisibilityString(myVisibilityPanel.getVisibility());\n    buffer.append(visibilityString);\n    if (buffer.length() > 0) {\n      buffer.append(\" \");\n    }\n    if (isMakeStatic()) {\n      buffer.append(\"static \");\n    }\n    if (myTypeParameterList != null) {\n      buffer.append(myTypeParameterList.getText());\n      buffer.append(\" \");\n    }\n\n    buffer.append(PsiFormatUtil.formatType(myReturnType, 0, PsiSubstitutor.EMPTY));\n    buffer.append(\" \");\n    buffer.append(myNameField.getText());\n    buffer.append(\"(\");\n    int count = 0;\n    final String INDENT = \"    \";\n    for (ParameterTablePanel.VariableData data : myVariableData) {\n      if (data.passAsParameter) {\n        //String typeAndModifiers = PsiFormatUtil.formatVariable(data.variable,\n        //  PsiFormatUtil.SHOW_MODIFIERS | PsiFormatUtil.SHOW_TYPE);\n        String type = PsiManager.getInstance(myProject).getElementFactory().createTypeElement(data.type).getText();\n        if (count > 0) {\n          buffer.append(\",\");\n        }\n        buffer.append(\"\\n\");\n        buffer.append(INDENT);\n        buffer.append(type);\n        buffer.append(\" \");\n        buffer.append(data.name);\n        count++;\n      }\n    }\n    if (count > 0) {\n      buffer.append(\"\\n\");\n    }\n    buffer.append(\")\");\n    if (myExceptions.length > 0) {\n      buffer.append(\"\\n\");\n      buffer.append(\"throws\\n\");\n      for (PsiType exception : myExceptions) {\n        buffer.append(INDENT);\n        buffer.append(PsiFormatUtil.formatType(exception, 0, PsiSubstitutor.EMPTY));\n        buffer.append(\"\\n\");\n      }\n    }\n    mySignatureArea.setText(buffer.toString());\n  }","id":55783,"modified_method":"private void updateSignature() {\n    if (mySignatureArea == null) return;\n    @NonNls StringBuffer buffer = new StringBuffer();\n    final String visibilityString = VisibilityUtil.getVisibilityString(myVisibilityPanel.getVisibility());\n    buffer.append(visibilityString);\n    if (buffer.length() > 0) {\n      buffer.append(\" \");\n    }\n    if (isMakeStatic()) {\n      buffer.append(\"static \");\n    }\n    if (myTypeParameterList != null) {\n      buffer.append(myTypeParameterList.getText());\n      buffer.append(\" \");\n    }\n\n    buffer.append(PsiFormatUtil.formatType(myReturnType, 0, PsiSubstitutor.EMPTY));\n    buffer.append(\" \");\n    buffer.append(myNameField.getText());\n    buffer.append(\"(\");\n    int count = 0;\n    final String INDENT = \"    \";\n    for (ParameterTablePanel.VariableData data : myVariableData) {\n      if (data.passAsParameter) {\n        //String typeAndModifiers = PsiFormatUtil.formatVariable(data.variable,\n        //  PsiFormatUtil.SHOW_MODIFIERS | PsiFormatUtil.SHOW_TYPE);\n        String type = data.type.getPresentableText();\n        if (count > 0) {\n          buffer.append(\",\");\n        }\n        buffer.append(\"\\n\");\n        buffer.append(INDENT);\n        buffer.append(type);\n        buffer.append(\" \");\n        buffer.append(data.name);\n        count++;\n      }\n    }\n    if (count > 0) {\n      buffer.append(\"\\n\");\n    }\n    buffer.append(\")\");\n    if (myExceptions.length > 0) {\n      buffer.append(\"\\n\");\n      buffer.append(\"throws\\n\");\n      for (PsiType exception : myExceptions) {\n        buffer.append(INDENT);\n        buffer.append(PsiFormatUtil.formatType(exception, 0, PsiSubstitutor.EMPTY));\n        buffer.append(\"\\n\");\n      }\n    }\n    mySignatureArea.setText(buffer.toString());\n  }","commit_id":"5491241c177f7676f3d7107b4509b1d1fd45f337","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private JComponent createParametersPanel() {\n    JPanel panel = new ParameterTablePanel(myProject, myVariableData) {\n      protected void updateSignature() {\n        ExtractMethodDialog.this.updateSignature();\n      }\n\n      protected void doEnterAction() {\n        ExtractMethodDialog.this.clickDefaultButton();\n      }\n\n      protected void doCancelAction() {\n        ExtractMethodDialog.this.doCancelAction();\n      }\n    };\n    panel.setBorder(IdeBorderFactory.createTitledBorder(RefactoringBundle.message(\"parameters.border.title\")));\n    return panel;\n  }","id":55784,"modified_method":"private JComponent createParametersPanel() {\n    JPanel panel = new ParameterTablePanel(myProject, myVariableData) {\n      protected void updateSignature() {\n        ExtractMethodDialog.this.updateSignature();\n      }\n\n      protected void doEnterAction() {\n        clickDefaultButton();\n      }\n\n      protected void doCancelAction() {\n        ExtractMethodDialog.this.doCancelAction();\n      }\n    };\n    panel.setBorder(IdeBorderFactory.createTitledBorder(RefactoringBundle.message(\"parameters.border.title\")));\n    return panel;\n  }","commit_id":"5491241c177f7676f3d7107b4509b1d1fd45f337","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public boolean isCellEditable(int rowIndex, int columnIndex) {\n      switch (columnIndex) {\n        case CHECKMARK_COLUMN :\n          return ParameterTablePanel.this.isEnabled();\n        case PARAMETER_COLUMN :\n          return ParameterTablePanel.this.isEnabled() && myVariableData[rowIndex].passAsParameter;\n        default:\n          return false;\n      }\n    }","id":55785,"modified_method":"public boolean isCellEditable(int rowIndex, int columnIndex) {\n      switch (columnIndex) {\n        case CHECKMARK_COLUMN:\n          return isEnabled();\n        case PARAMETER_NAME_COLUMN:\n          return isEnabled() && myVariableData[rowIndex].passAsParameter;\n        default:\n          return false;\n      }\n    }","commit_id":"5491241c177f7676f3d7107b4509b1d1fd45f337","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public Object getValueAt(int rowIndex, int columnIndex) {\n      switch (columnIndex) {\n        case CHECKMARK_COLUMN : {\n          return myVariableData[rowIndex].passAsParameter? Boolean.TRUE : Boolean.FALSE;\n        }\n        case PARAMETER_COLUMN : {\n          return myVariableData[rowIndex].name;\n        }\n      }\n      return null;\n    }","id":55786,"modified_method":"public Object getValueAt(int rowIndex, int columnIndex) {\n      switch (columnIndex) {\n        case CHECKMARK_COLUMN: {\n          return myVariableData[rowIndex].passAsParameter ? Boolean.TRUE : Boolean.FALSE;\n        }\n        case PARAMETER_NAME_COLUMN: {\n          return myVariableData[rowIndex].name;\n        }\n        case PARAMETER_TYPE_COLUMN: {\n          return myVariableData[rowIndex].type.getPresentableText();\n        }\n      }\n      return null;\n    }","commit_id":"5491241c177f7676f3d7107b4509b1d1fd45f337","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public ParameterTablePanel(Project project, VariableData[] variableData) {\n    super(new BorderLayout());\n    myProject = project;\n    myVariableData = variableData;\n\n    myTableModel = new MyTableModel();\n    myTable = new Table(myTableModel);\n    DefaultCellEditor defaultEditor=(DefaultCellEditor)myTable.getDefaultEditor(Object.class);\n    defaultEditor.setClickCountToStart(1);\n\n    myTable.setTableHeader(null);\n    myTable.getSelectionModel().setSelectionMode(ListSelectionModel.SINGLE_SELECTION);\n    myTable.getColumnModel().getColumn(myTableModel.CHECKMARK_COLUMN).setCellRenderer(new CheckBoxTableCellRenderer());\n    myTable.getColumnModel().getColumn(myTableModel.CHECKMARK_COLUMN).setMaxWidth(new JCheckBox().getPreferredSize().width);\n    myTable.getColumnModel().getColumn(myTableModel.PARAMETER_COLUMN).setCellRenderer(new ParameterTableCellRenderer());\n    myTable.setPreferredScrollableViewportSize(new Dimension(250, myTable.getRowHeight() * 5));\n    myTable.setShowGrid(false);\n    myTable.setIntercellSpacing(new Dimension(0, 0));\n    @NonNls final InputMap inputMap = myTable.getInputMap();\n    inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_SPACE, 0), \"enable_disable\");\n    @NonNls final ActionMap actionMap = myTable.getActionMap();\n    actionMap.put(\"enable_disable\", new AbstractAction() {\n      public void actionPerformed(ActionEvent e) {\n        if (myTable.isEditing()) return;\n        int[] rows = myTable.getSelectedRows();\n        if (rows.length > 0){\n          boolean valueToBeSet = false;\n          for (int row : rows) {\n            if (!myVariableData[row].passAsParameter) {\n              valueToBeSet = true;\n              break;\n            }\n          }\n          for (int row : rows) {\n            myVariableData[row].passAsParameter = valueToBeSet;\n          }\n          myTableModel.fireTableRowsUpdated(rows[0], rows[rows.length - 1]);\n          TableUtil.selectRows(myTable, rows);\n        }\n      }\n    });\n    // F2 should edit the name\n    inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_F2, 0), \"edit_parameter_name\");\n    actionMap.put(\"edit_parameter_name\", new AbstractAction() {\n      public void actionPerformed(ActionEvent e) {\n        if (!myTable.isEditing()){\n          int row = myTable.getSelectedRow();\n          if (row >=0 && row < myTableModel.getRowCount()) {\n            TableUtil.editCellAt(myTable, row, myTableModel.PARAMETER_COLUMN);\n          }\n        }\n      }\n    });\n\n    // make ENTER work when the table has focus\n    inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_ENTER, 0), \"invokeImpl\");\n    actionMap.put(\"invokeImpl\", new AbstractAction() {\n      public void actionPerformed(ActionEvent e) {\n        TableCellEditor editor = myTable.getCellEditor();\n        if (editor != null){\n          editor.stopCellEditing();\n        }\n        else{\n          doEnterAction();\n        }\n      }\n    });\n\n    // make ESCAPE work when the table has focus\n    actionMap.put(\"doCancel\", new AbstractAction() {\n      public void actionPerformed(ActionEvent e) {\n        TableCellEditor editor = myTable.getCellEditor();\n        if (editor != null){\n          editor.stopCellEditing();\n        }\n        else{\n          doCancelAction();\n        }\n      }\n    });\n\n    JPanel listPanel = new JPanel(new BorderLayout());\n    JScrollPane scrollPane = ScrollPaneFactory.createScrollPane(myTable);\n    listPanel.add(scrollPane, BorderLayout.CENTER);\n    listPanel.setBorder(BorderFactory.createEmptyBorder(4, 4, 4, 4));\n    this.add(listPanel, BorderLayout.CENTER);\n\n    JPanel buttonsPanel = new JPanel();\n    buttonsPanel.setBorder(BorderFactory.createEmptyBorder(4, 4, 4, 4));\n    this.add(buttonsPanel, BorderLayout.EAST);\n\n    buttonsPanel.setLayout(new GridBagLayout());\n    GridBagConstraints gbConstraints = new GridBagConstraints();\n    gbConstraints.gridwidth = GridBagConstraints.REMAINDER;\n    gbConstraints.fill = GridBagConstraints.HORIZONTAL;\n    gbConstraints.insets = new Insets(2, 4, 2, 4);\n\n    myUpButton = new JButton();\n    myUpButton.setText(RefactoringBundle.message(\"row.move.up\"));\n    myUpButton.setDefaultCapable(false);\n    buttonsPanel.add(myUpButton, gbConstraints);\n\n    myDownButton = new JButton();\n    myDownButton.setText(RefactoringBundle.message(\"row.move.down\"));\n    myDownButton.setDefaultCapable(false);\n    buttonsPanel.add(myDownButton, gbConstraints);\n\n    gbConstraints.weighty = 1;\n    buttonsPanel.add(new JPanel(), gbConstraints);\n\n    myUpButton.addActionListener(\n      new ActionListener() {\n        public void actionPerformed(ActionEvent e) {\n          if(myTable.isEditing()) {\n            final boolean isStopped = myTable.getCellEditor().stopCellEditing();\n            if(!isStopped) return;\n          }\n          moveSelectedItem(-1);\n          updateSignature();\n          myTable.requestFocus();\n        }\n      }\n    );\n\n    myDownButton.addActionListener(\n      new ActionListener() {\n        public void actionPerformed(ActionEvent e) {\n          if(myTable.isEditing()) {\n            final boolean isStopped = myTable.getCellEditor().stopCellEditing();\n            if(!isStopped) return;\n          }\n          moveSelectedItem(+1);\n          updateSignature();\n          myTable.requestFocus();\n        }\n      }\n    );\n\n    myTable.getSelectionModel().addListSelectionListener(\n      new ListSelectionListener() {\n        public void valueChanged(ListSelectionEvent e) {\n          updateMoveButtons();\n        }\n      }\n    );\n    if (myVariableData.length <= 1) {\n      myUpButton.setEnabled(false);\n      myDownButton.setEnabled(false);\n    }\n    else {\n      myTable.getSelectionModel().setSelectionInterval(0, 0);\n    }\n    updateMoveButtons();\n  }","id":55787,"modified_method":"public ParameterTablePanel(Project project, VariableData[] variableData) {\n    super(new BorderLayout());\n    myProject = project;\n    myVariableData = variableData;\n\n    myTableModel = new MyTableModel();\n    myTable = new Table(myTableModel);\n    DefaultCellEditor defaultEditor = (DefaultCellEditor)myTable.getDefaultEditor(Object.class);\n    defaultEditor.setClickCountToStart(1);\n\n    myTable.setTableHeader(null);\n    myTable.getSelectionModel().setSelectionMode(ListSelectionModel.SINGLE_SELECTION);\n    myTable.getColumnModel().getColumn(MyTableModel.CHECKMARK_COLUMN).setCellRenderer(new CheckBoxTableCellRenderer());\n    myTable.getColumnModel().getColumn(MyTableModel.CHECKMARK_COLUMN).setMaxWidth(new JCheckBox().getPreferredSize().width);\n    myTable.getColumnModel().getColumn(MyTableModel.PARAMETER_NAME_COLUMN).setCellRenderer(new DefaultTableCellRenderer() {\n      public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) {\n        super.getTableCellRendererComponent(table, value, isSelected, hasFocus, row, column);\n        VariableData data = myVariableData[row];\n        setText(data.name);\n        return this;\n      }\n    });\n\n    myTable.getColumnModel().getColumn(MyTableModel.PARAMETER_TYPE_COLUMN).setCellRenderer(new DefaultTableCellRenderer() {\n      public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) {\n        super.getTableCellRendererComponent(table, value, isSelected, hasFocus, row, column);\n        VariableData data = myVariableData[row];\n        setText(data.type.getPresentableText());\n        return this;\n      }\n    });\n\n    myTable.setPreferredScrollableViewportSize(new Dimension(250, myTable.getRowHeight() * 5));\n    myTable.setShowGrid(false);\n    myTable.setIntercellSpacing(new Dimension(0, 0));\n    @NonNls final InputMap inputMap = myTable.getInputMap();\n    inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_SPACE, 0), \"enable_disable\");\n    @NonNls final ActionMap actionMap = myTable.getActionMap();\n    actionMap.put(\"enable_disable\", new AbstractAction() {\n      public void actionPerformed(ActionEvent e) {\n        if (myTable.isEditing()) return;\n        int[] rows = myTable.getSelectedRows();\n        if (rows.length > 0) {\n          boolean valueToBeSet = false;\n          for (int row : rows) {\n            if (!myVariableData[row].passAsParameter) {\n              valueToBeSet = true;\n              break;\n            }\n          }\n          for (int row : rows) {\n            myVariableData[row].passAsParameter = valueToBeSet;\n          }\n          myTableModel.fireTableRowsUpdated(rows[0], rows[rows.length - 1]);\n          TableUtil.selectRows(myTable, rows);\n        }\n      }\n    });\n    // F2 should edit the name\n    inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_F2, 0), \"edit_parameter_name\");\n    actionMap.put(\"edit_parameter_name\", new AbstractAction() {\n      public void actionPerformed(ActionEvent e) {\n        if (!myTable.isEditing()) {\n          int row = myTable.getSelectedRow();\n          if (row >= 0 && row < myTableModel.getRowCount()) {\n            TableUtil.editCellAt(myTable, row, MyTableModel.PARAMETER_TYPE_COLUMN);\n          }\n        }\n      }\n    });\n\n    // make ENTER work when the table has focus\n    inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_ENTER, 0), \"invokeImpl\");\n    actionMap.put(\"invokeImpl\", new AbstractAction() {\n      public void actionPerformed(ActionEvent e) {\n        TableCellEditor editor = myTable.getCellEditor();\n        if (editor != null) {\n          editor.stopCellEditing();\n        }\n        else {\n          doEnterAction();\n        }\n      }\n    });\n\n    // make ESCAPE work when the table has focus\n    actionMap.put(\"doCancel\", new AbstractAction() {\n      public void actionPerformed(ActionEvent e) {\n        TableCellEditor editor = myTable.getCellEditor();\n        if (editor != null) {\n          editor.stopCellEditing();\n        }\n        else {\n          doCancelAction();\n        }\n      }\n    });\n\n    JPanel listPanel = new JPanel(new BorderLayout());\n    JScrollPane scrollPane = ScrollPaneFactory.createScrollPane(myTable);\n    listPanel.add(scrollPane, BorderLayout.CENTER);\n    listPanel.setBorder(BorderFactory.createEmptyBorder(4, 4, 4, 4));\n    add(listPanel, BorderLayout.CENTER);\n\n    JPanel buttonsPanel = new JPanel();\n    buttonsPanel.setBorder(BorderFactory.createEmptyBorder(4, 4, 4, 4));\n    add(buttonsPanel, BorderLayout.EAST);\n\n    buttonsPanel.setLayout(new GridBagLayout());\n    GridBagConstraints gbConstraints = new GridBagConstraints();\n    gbConstraints.gridwidth = GridBagConstraints.REMAINDER;\n    gbConstraints.fill = GridBagConstraints.HORIZONTAL;\n    gbConstraints.insets = new Insets(2, 4, 2, 4);\n\n    myUpButton = new JButton();\n    myUpButton.setText(RefactoringBundle.message(\"row.move.up\"));\n    myUpButton.setDefaultCapable(false);\n    buttonsPanel.add(myUpButton, gbConstraints);\n\n    myDownButton = new JButton();\n    myDownButton.setText(RefactoringBundle.message(\"row.move.down\"));\n    myDownButton.setDefaultCapable(false);\n    buttonsPanel.add(myDownButton, gbConstraints);\n\n    gbConstraints.weighty = 1;\n    buttonsPanel.add(new JPanel(), gbConstraints);\n\n    myUpButton.addActionListener(new ActionListener() {\n      public void actionPerformed(ActionEvent e) {\n        if (myTable.isEditing()) {\n          final boolean isStopped = myTable.getCellEditor().stopCellEditing();\n          if (!isStopped) return;\n        }\n        moveSelectedItem(-1);\n        updateSignature();\n        myTable.requestFocus();\n      }\n    });\n\n    myDownButton.addActionListener(new ActionListener() {\n      public void actionPerformed(ActionEvent e) {\n        if (myTable.isEditing()) {\n          final boolean isStopped = myTable.getCellEditor().stopCellEditing();\n          if (!isStopped) return;\n        }\n        moveSelectedItem(+1);\n        updateSignature();\n        myTable.requestFocus();\n      }\n    });\n\n    myTable.getSelectionModel().addListSelectionListener(new ListSelectionListener() {\n      public void valueChanged(ListSelectionEvent e) {\n        updateMoveButtons();\n      }\n    });\n    if (myVariableData.length <= 1) {\n      myUpButton.setEnabled(false);\n      myDownButton.setEnabled(false);\n    }\n    else {\n      myTable.getSelectionModel().setSelectionInterval(0, 0);\n    }\n    updateMoveButtons();\n  }","commit_id":"5491241c177f7676f3d7107b4509b1d1fd45f337","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void setValueAt(Object aValue, int rowIndex, int columnIndex) {\n      switch (columnIndex) {\n        case CHECKMARK_COLUMN : {\n          myVariableData[rowIndex].passAsParameter = ((Boolean)aValue).booleanValue();\n          fireTableRowsUpdated(rowIndex, rowIndex);\n          myTable.getSelectionModel().setSelectionInterval(rowIndex, rowIndex);\n          updateSignature();\n          break;\n        }\n        case PARAMETER_COLUMN : {\n          VariableData data = myVariableData[rowIndex];\n          String name = (String)aValue;\n          if (PsiManager.getInstance(myProject).getNameHelper().isIdentifier(name)) {\n            data.name = name;\n          }\n          updateSignature();\n          break;\n        }\n      }\n    }","id":55788,"modified_method":"public void setValueAt(Object aValue, int rowIndex, int columnIndex) {\n      switch (columnIndex) {\n        case CHECKMARK_COLUMN: {\n          myVariableData[rowIndex].passAsParameter = ((Boolean)aValue).booleanValue();\n          fireTableRowsUpdated(rowIndex, rowIndex);\n          myTable.getSelectionModel().setSelectionInterval(rowIndex, rowIndex);\n          updateSignature();\n          break;\n        }\n        case PARAMETER_NAME_COLUMN: {\n          VariableData data = myVariableData[rowIndex];\n          String name = (String)aValue;\n          if (PsiManager.getInstance(myProject).getNameHelper().isIdentifier(name)) {\n            data.name = name;\n          }\n          updateSignature();\n          break;\n        }\n        case PARAMETER_TYPE_COLUMN: {\n          assert false;\n          updateSignature();\n          break;\n        }\n      }\n    }","commit_id":"5491241c177f7676f3d7107b4509b1d1fd45f337","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public int getColumnCount() {\n      return 2;\n    }","id":55789,"modified_method":"public int getColumnCount() {\n      return 3;\n    }","commit_id":"5491241c177f7676f3d7107b4509b1d1fd45f337","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private ArrayList<PsiType> normalizeTypeList(final ArrayList<PsiType> typeList) {\n    ArrayList<PsiType> result = new ArrayList<PsiType>();\n    TypeListCreatingVisitor visitor = new TypeListCreatingVisitor(result, myFactory);\n    for (int i = 0; i < typeList.size(); i++) {\n      PsiType psiType = typeList.get(i);\n      visitor.visitType(psiType);\n    }\n\n    for (int index = 0; index < result.size(); index++) {\n      PsiType psiType = result.get(index);\n      if (psiType.equals(myDefaultType)) {\n        result.remove(index);\n        break;\n      }\n    }\n\n    final PsiPrimitiveType unboxedType = PsiPrimitiveType.getUnboxedType(myDefaultType);\n    if (unboxedType != null) {\n      result.remove(unboxedType);\n      result.add(0, unboxedType);\n    }\n    result.add(0, myDefaultType);\n    return result;\n  }","id":55790,"modified_method":"private ArrayList<PsiType> normalizeTypeList(final ArrayList<PsiType> typeList) {\n    ArrayList<PsiType> result = new ArrayList<PsiType>();\n    TypeListCreatingVisitor visitor = new TypeListCreatingVisitor(result, myFactory);\n    for (PsiType psiType : typeList) {\n      visitor.visitType(psiType);\n    }\n\n    for (int index = 0; index < result.size(); index++) {\n      PsiType psiType = result.get(index);\n      if (psiType.equals(myDefaultType)) {\n        result.remove(index);\n        break;\n      }\n    }\n\n    final PsiPrimitiveType unboxedType = PsiPrimitiveType.getUnboxedType(myDefaultType);\n    if (unboxedType != null) {\n      result.remove(unboxedType);\n      result.add(0, unboxedType);\n    }\n    result.add(0, myDefaultType);\n    return result;\n  }","commit_id":"5491241c177f7676f3d7107b4509b1d1fd45f337","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private ExpectedTypesProvider.ExpectedClassProvider createOccurrenceClassProvider() {\n    final Set<PsiClass> occurrenceClasses = new HashSet<PsiClass>();\n    for (final PsiExpression occurence : myOccurences) {\n      final PsiType occurrenceType = occurence.getType();\n      final PsiClass aClass = PsiUtil.resolveClassInType(occurrenceType);\n      if (aClass != null) {\n        occurrenceClasses.add(aClass);\n      }\n    }\n    final ExpectedTypesProvider.ExpectedClassProvider expectedClassProvider = new ExpectedTypeUtil.ExpectedClassesFromSetProvider(occurrenceClasses);\n    return expectedClassProvider;\n  }","id":55791,"modified_method":"private ExpectedTypesProvider.ExpectedClassProvider createOccurrenceClassProvider() {\n    final Set<PsiClass> occurrenceClasses = new HashSet<PsiClass>();\n    for (final PsiExpression occurence : myOccurences) {\n      final PsiType occurrenceType = occurence.getType();\n      final PsiClass aClass = PsiUtil.resolveClassInType(occurrenceType);\n      if (aClass != null) {\n        occurrenceClasses.add(aClass);\n      }\n    }\n    return new ExpectedTypeUtil.ExpectedClassesFromSetProvider(occurrenceClasses);\n  }","commit_id":"5491241c177f7676f3d7107b4509b1d1fd45f337","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private PsiType[] getTypesForMain() {\n    final ExpectedTypeInfo[] expectedTypes = myExpectedTypesProvider.getExpectedTypes(myMainOccurence, false, myOccurrenceClassProvider);\n    final ArrayList<PsiType> allowedTypes = new ArrayList<PsiType>();\n    RefactoringHierarchyUtil.processSuperTypes(myDefaultType, new RefactoringHierarchyUtil.SuperTypeVisitor() {\n      public void visitType(PsiType aType) {\n        checkIfAllowed(aType);\n      }\n\n      public void visitClass(PsiClass aClass) {\n        checkIfAllowed(myFactory.createType(aClass));\n      }\n\n      private void checkIfAllowed(PsiType type) {\n        if (expectedTypes.length > 0) {\n          final ExpectedTypeInfo\n              typeInfo = myExpectedTypesProvider.createInfo(type, ExpectedTypeInfo.TYPE_STRICTLY, type, TailType.NONE);\n          for (int i = 0; i < expectedTypes.length; i++) {\n            ExpectedTypeInfo expectedType = expectedTypes[i];\n            if (expectedType.intersect(typeInfo).length != 0) {\n              allowedTypes.add(type);\n              break;\n            }\n          }\n        }\n        else {\n          allowedTypes.add(type);\n        }\n      }\n    });\n\n    ArrayList<PsiType> result = normalizeTypeList(allowedTypes);\n    return result.toArray(new PsiType[result.size()]);\n  }","id":55792,"modified_method":"private PsiType[] getTypesForMain() {\n    final ExpectedTypeInfo[] expectedTypes = myExpectedTypesProvider.getExpectedTypes(myMainOccurence, false, myOccurrenceClassProvider);\n    final ArrayList<PsiType> allowedTypes = new ArrayList<PsiType>();\n    RefactoringHierarchyUtil.processSuperTypes(myDefaultType, new RefactoringHierarchyUtil.SuperTypeVisitor() {\n      public void visitType(PsiType aType) {\n        checkIfAllowed(aType);\n      }\n\n      public void visitClass(PsiClass aClass) {\n        checkIfAllowed(myFactory.createType(aClass));\n      }\n\n      private void checkIfAllowed(PsiType type) {\n        if (expectedTypes.length > 0) {\n          final ExpectedTypeInfo\n              typeInfo = myExpectedTypesProvider.createInfo(type, ExpectedTypeInfo.TYPE_STRICTLY, type, TailType.NONE);\n          for (ExpectedTypeInfo expectedType : expectedTypes) {\n            if (expectedType.intersect(typeInfo).length != 0) {\n              allowedTypes.add(type);\n              break;\n            }\n          }\n        }\n        else {\n          allowedTypes.add(type);\n        }\n      }\n    });\n\n    ArrayList<PsiType> result = normalizeTypeList(allowedTypes);\n    return result.toArray(new PsiType[result.size()]);\n  }","commit_id":"5491241c177f7676f3d7107b4509b1d1fd45f337","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public ScopesAndSeveritiesHintTable(final LinkedHashMap<String, HighlightSeverity> scopeToAverageSeverityMap) {\n    super(new MyModel(scopeToAverageSeverityMap));\n\n    final DefaultTableCellRenderer cellRenderer = new DefaultTableCellRenderer();\n    cellRenderer.setOpaque(false);\n    getColumnModel().getColumn(SCOPE_COLUMN).setCellRenderer(cellRenderer);\n\n    getColumnModel().getColumn(SEVERITY_COLUMN).setCellRenderer(new DefaultTableCellRenderer() {\n      @Override\n      public Component getTableCellRendererComponent(final JTable table,\n                                                     final Object value,\n                                                     final boolean isSelected,\n                                                     final boolean hasFocus,\n                                                     final int row,\n                                                     final int column) {\n        super.getTableCellRendererComponent(table, value, isSelected, hasFocus, row, column);\n        final HighlightSeverity severity = (HighlightSeverity)value;\n        setIcon(HighlightDisplayLevel.find(severity).getIcon());\n        setText(SingleInspectionProfilePanel.renderSeverity(severity));\n        setOpaque(false);\n        return this;\n      }\n    });\n    setShowGrid(false);\n    setRowSelectionAllowed(false);\n    setColumnSelectionAllowed(false);\n    setOpaque(false);\n  }","id":55793,"modified_method":"public ScopesAndSeveritiesHintTable(final LinkedHashMap<String, HighlightSeverity> scopeToAverageSeverityMap) {\n    super(new MyModel(scopeToAverageSeverityMap));\n\n    getColumnModel().getColumn(SCOPE_COLUMN).setCellRenderer(new DefaultTableCellRenderer() {\n      @Override\n      public Component getTableCellRendererComponent(JTable table,\n                                                     Object value,\n                                                     boolean isSelected,\n                                                     boolean hasFocus,\n                                                     int row,\n                                                     int column) {\n        super.getTableCellRendererComponent(table, value, isSelected, hasFocus, row, column);\n        setOpaque(false);\n        UIUtil.applyStyle(UIUtil.ComponentStyle.SMALL, this);\n        return this;\n      }\n    });\n\n    getColumnModel().getColumn(SEVERITY_COLUMN).setCellRenderer(new DefaultTableCellRenderer() {\n      @Override\n      public Component getTableCellRendererComponent(final JTable table,\n                                                     final Object value,\n                                                     final boolean isSelected,\n                                                     final boolean hasFocus,\n                                                     final int row,\n                                                     final int column) {\n        super.getTableCellRendererComponent(table, value, isSelected, hasFocus, row, column);\n        final HighlightSeverity severity = (HighlightSeverity)value;\n        setIcon(HighlightDisplayLevel.find(severity).getIcon());\n        setText(SingleInspectionProfilePanel.renderSeverity(severity));\n        setOpaque(false);\n        UIUtil.applyStyle(UIUtil.ComponentStyle.SMALL, this);\n        return this;\n      }\n    });\n    setShowGrid(false);\n    setRowSelectionAllowed(false);\n    setColumnSelectionAllowed(false);\n    setOpaque(false);\n\n    for (int i = 0; i < getColumnModel().getColumnCount(); i++) {\n      int w = 0;\n      final TableColumn column = getColumnModel().getColumn(i);\n      for (int j = 0; j < getModel().getRowCount(); j++) {\n        final Component component = prepareRenderer(column.getCellRenderer(), j, i);\n        w = Math.max(component.getPreferredSize().width, w);\n      }\n      column.setPreferredWidth(w);\n    }\n  }","commit_id":"a9a91e1edcd2822e8a0786ef7740e15b225f047c","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Override\n    public boolean ok() {\n        gpxPanel.savePreferences();\n        Main.pref.put(\"draw.data.area_outline_only\", outlineOnly.isSelected());\n        Main.pref.put(\"draw.segment.direction\", directionHint.isSelected());\n        Main.pref.put(\"draw.segment.head_only\", headArrow.isSelected());\n        Main.pref.put(\"draw.oneway\", onewayArrow.isSelected());\n        Main.pref.put(\"draw.segment.order_number\", segmentOrderNumber.isSelected());\n        Main.pref.put(\"draw.data.downloaded_area\", sourceBounds.isSelected());\n        Main.pref.put(\"draw.data.inactive_color\", inactive.isSelected());\n        Main.pref.put(\"mappaint.use-antialiasing\", useAntialiasing.isSelected());\n        Main.pref.put(\"mappaint.wireframe.use-antialiasing\", useWireframeAntialiasing.isSelected());\n        Main.pref.put(\"draw.target-highlight\", useHighlighting.isSelected());\n        Main.pref.put(\"draw.helper-line\", drawHelperLine.isSelected());\n        int vn = Main.pref.getInteger(\"mappaint.node.virtual-size\", 8);\n        if (virtualNodes.isSelected()) {\n            if (vn < 1) {\n                vn = 8;\n            }\n        }\n        else {\n            vn = 0;\n        }\n        Main.pref.putInteger(\"mappaint.node.virtual-size\", vn);\n        return false;\n    }","id":55794,"modified_method":"@Override\n    public boolean ok() {\n        gpxPanel.savePreferences();\n        Main.pref.put(\"draw.data.area_outline_only\", outlineOnly.isSelected());\n        Main.pref.put(\"draw.segment.direction\", directionHint.isSelected());\n        Main.pref.put(\"draw.segment.head_only\", headArrow.isSelected());\n        Main.pref.put(\"draw.oneway\", onewayArrow.isSelected());\n        Main.pref.put(\"draw.segment.order_number\", segmentOrderNumber.isSelected());\n        Main.pref.put(\"draw.data.downloaded_area\", sourceBounds.isSelected());\n        Main.pref.put(\"draw.data.inactive_color\", inactive.isSelected());\n        Main.pref.put(\"mappaint.use-antialiasing\", useAntialiasing.isSelected());\n        Main.pref.put(\"mappaint.wireframe.use-antialiasing\", useWireframeAntialiasing.isSelected());\n        Main.pref.put(\"draw.target-highlight\", useHighlighting.isSelected());\n        Main.pref.put(\"draw.helper-line\", drawHelperLine.isSelected());\n        Main.pref.put(\"display.discardable-keys\", discardableKeys.isSelected());\n        int vn = Main.pref.getInteger(\"mappaint.node.virtual-size\", 8);\n        if (virtualNodes.isSelected()) {\n            if (vn < 1) {\n                vn = 8;\n            }\n        }\n        else {\n            vn = 0;\n        }\n        Main.pref.putInteger(\"mappaint.node.virtual-size\", vn);\n        return false;\n    }","commit_id":"2095827529812aa36599f6b0ab886aa8ecbcf681","url":"https://github.com/openstreetmap/josm"},{"original_method":"@Override\n    public void addGui(PreferenceTabbedPane gui) {\n        gpxPanel = new GPXSettingsPanel();\n        gui.addValidationListener(gpxPanel);\n        JPanel panel = gpxPanel;\n\n        JScrollPane scrollpane = new JScrollPane(panel);\n        scrollpane.setBorder(BorderFactory.createEmptyBorder( 0, 0, 0, 0 ));\n        gui.getDisplayPreference().addSubTab(this, tr(\"GPS Points\"), scrollpane);\n        panel = new JPanel(new GridBagLayout());\n        panel.setBorder(BorderFactory.createEmptyBorder(5,5,5,5));\n\n        // directionHint\n        directionHint.addActionListener(new ActionListener(){\n            @Override\n            public void actionPerformed(ActionEvent e) {\n                if (directionHint.isSelected()){\n                    headArrow.setSelected(Main.pref.getBoolean(\"draw.segment.head_only\", false));\n                }else{\n                    headArrow.setSelected(false);\n                }\n                headArrow.setEnabled(directionHint.isSelected());\n            }\n        });\n        directionHint.setToolTipText(tr(\"Draw direction hints for way segments.\"));\n        directionHint.setSelected(Main.pref.getBoolean(\"draw.segment.direction\", false));\n\n        // only on the head of a way\n        headArrow.setToolTipText(tr(\"Only on the head of a way.\"));\n        headArrow.setSelected(Main.pref.getBoolean(\"draw.segment.head_only\", false));\n        headArrow.setEnabled(directionHint.isSelected());\n\n        // draw oneway arrows\n        onewayArrow.setToolTipText(tr(\"Draw arrows in the direction of oneways and other directed features.\"));\n        onewayArrow.setSelected(Main.pref.getBoolean(\"draw.oneway\", true));\n\n        // segment order number\n        segmentOrderNumber.setToolTipText(tr(\"Draw the order numbers of all segments within their way.\"));\n        segmentOrderNumber.setSelected(Main.pref.getBoolean(\"draw.segment.order_number\", false));\n\n        // downloaded area\n        sourceBounds.setToolTipText(tr(\"Draw the boundaries of data loaded from the server.\"));\n        sourceBounds.setSelected(Main.pref.getBoolean(\"draw.data.downloaded_area\", true));\n\n        // virtual nodes\n        virtualNodes.setToolTipText(tr(\"Draw virtual nodes in select mode for easy way modification.\"));\n        virtualNodes.setSelected(Main.pref.getInteger(\"mappaint.node.virtual-size\", 8) != 0);\n\n        // background layers in inactive color\n        inactive.setToolTipText(tr(\"Draw the inactive data layers in a different color.\"));\n        inactive.setSelected(Main.pref.getBoolean(\"draw.data.inactive_color\", true));\n\n        // antialiasing\n        useAntialiasing.setToolTipText(tr(\"Apply antialiasing to the map view resulting in a smoother appearance.\"));\n        useAntialiasing.setSelected(Main.pref.getBoolean(\"mappaint.use-antialiasing\", true));\n\n        // wireframe mode antialiasing\n        useWireframeAntialiasing.setToolTipText(tr(\"Apply antialiasing to the map view in wireframe mode resulting in a smoother appearance.\"));\n        useWireframeAntialiasing.setSelected(Main.pref.getBoolean(\"mappaint.wireframe.use-antialiasing\", false));\n\n        // highlighting\n        useHighlighting.setToolTipText(tr(\"Hightlight target nodes and ways while drawing or selecting\"));\n        useHighlighting.setSelected(Main.pref.getBoolean(\"draw.target-highlight\", true));\n\n        drawHelperLine.setToolTipText(tr(\"Draw rubber-band helper line\"));\n        drawHelperLine.setSelected(Main.pref.getBoolean(\"draw.helper-line\", true));\n\n        // outlineOnly\n        outlineOnly.setSelected(Main.pref.getBoolean(\"draw.data.area_outline_only\", false));\n        outlineOnly.setToolTipText(tr(\"This option suppresses the filling of areas, overriding anything specified in the selected style.\"));\n\n        JLabel performanceLabel = new JLabel(tr(\"Options that affect drawing performance\"));\n\n        panel.add(new JLabel(tr(\"Segment drawing options\")),\n                GBC.eop().insets(5,10,0,0));\n        panel.add(directionHint, GBC.eop().insets(20,0,0,0));\n        panel.add(headArrow, GBC.eop().insets(40, 0, 0, 0));\n        panel.add(onewayArrow, GBC.eop().insets(20,0,0,0));\n        panel.add(segmentOrderNumber, GBC.eop().insets(20,0,0,0));\n\n        panel.add(new JLabel(tr(\"Select and draw mode options\")),\n                GBC.eop().insets(5,10,0,0));\n        panel.add(virtualNodes, GBC.eop().insets(20,0,0,0));\n        panel.add(drawHelperLine, GBC.eop().insets(20, 0, 0, 0));\n\n        panel.add(performanceLabel, GBC.eop().insets(5,10,0,0));\n        panel.add(useAntialiasing, GBC.eop().insets(20,0,0,0));\n        panel.add(useWireframeAntialiasing, GBC.eop().insets(20, 0, 0, 0));\n        panel.add(useHighlighting, GBC.eop().insets(20,0,0,0));\n        panel.add(outlineOnly, GBC.eol().insets(20,0,0,0));\n\n        panel.add(new JLabel(tr(\"Other options\")),\n                GBC.eop().insets(5,10,0,0));\n        panel.add(sourceBounds, GBC.eop().insets(20,0,0,0));\n        panel.add(inactive, GBC.eop().insets(20,0,0,0));\n\n        ExpertToggleAction.addVisibilitySwitcher(performanceLabel);\n        ExpertToggleAction.addVisibilitySwitcher(useAntialiasing);\n        ExpertToggleAction.addVisibilitySwitcher(useWireframeAntialiasing);\n        ExpertToggleAction.addVisibilitySwitcher(useHighlighting);\n        ExpertToggleAction.addVisibilitySwitcher(outlineOnly);\n\n        panel.add(Box.createVerticalGlue(), GBC.eol().fill(GBC.BOTH));\n        scrollpane = new JScrollPane(panel);\n        scrollpane.setBorder(BorderFactory.createEmptyBorder( 0, 0, 0, 0 ));\n        gui.getDisplayPreference().addSubTab(this, tr(\"OSM Data\"), scrollpane);\n    }","id":55795,"modified_method":"@Override\n    public void addGui(PreferenceTabbedPane gui) {\n        gpxPanel = new GPXSettingsPanel();\n        gui.addValidationListener(gpxPanel);\n        JPanel panel = gpxPanel;\n\n        JScrollPane scrollpane = new JScrollPane(panel);\n        scrollpane.setBorder(BorderFactory.createEmptyBorder( 0, 0, 0, 0 ));\n        gui.getDisplayPreference().addSubTab(this, tr(\"GPS Points\"), scrollpane);\n        panel = new JPanel(new GridBagLayout());\n        panel.setBorder(BorderFactory.createEmptyBorder(5,5,5,5));\n\n        // directionHint\n        directionHint.addActionListener(new ActionListener(){\n            @Override\n            public void actionPerformed(ActionEvent e) {\n                if (directionHint.isSelected()){\n                    headArrow.setSelected(Main.pref.getBoolean(\"draw.segment.head_only\", false));\n                }else{\n                    headArrow.setSelected(false);\n                }\n                headArrow.setEnabled(directionHint.isSelected());\n            }\n        });\n        directionHint.setToolTipText(tr(\"Draw direction hints for way segments.\"));\n        directionHint.setSelected(Main.pref.getBoolean(\"draw.segment.direction\", false));\n\n        // only on the head of a way\n        headArrow.setToolTipText(tr(\"Only on the head of a way.\"));\n        headArrow.setSelected(Main.pref.getBoolean(\"draw.segment.head_only\", false));\n        headArrow.setEnabled(directionHint.isSelected());\n\n        // draw oneway arrows\n        onewayArrow.setToolTipText(tr(\"Draw arrows in the direction of oneways and other directed features.\"));\n        onewayArrow.setSelected(Main.pref.getBoolean(\"draw.oneway\", true));\n\n        // segment order number\n        segmentOrderNumber.setToolTipText(tr(\"Draw the order numbers of all segments within their way.\"));\n        segmentOrderNumber.setSelected(Main.pref.getBoolean(\"draw.segment.order_number\", false));\n\n        // downloaded area\n        sourceBounds.setToolTipText(tr(\"Draw the boundaries of data loaded from the server.\"));\n        sourceBounds.setSelected(Main.pref.getBoolean(\"draw.data.downloaded_area\", true));\n\n        // virtual nodes\n        virtualNodes.setToolTipText(tr(\"Draw virtual nodes in select mode for easy way modification.\"));\n        virtualNodes.setSelected(Main.pref.getInteger(\"mappaint.node.virtual-size\", 8) != 0);\n\n        // background layers in inactive color\n        inactive.setToolTipText(tr(\"Draw the inactive data layers in a different color.\"));\n        inactive.setSelected(Main.pref.getBoolean(\"draw.data.inactive_color\", true));\n\n        // antialiasing\n        useAntialiasing.setToolTipText(tr(\"Apply antialiasing to the map view resulting in a smoother appearance.\"));\n        useAntialiasing.setSelected(Main.pref.getBoolean(\"mappaint.use-antialiasing\", true));\n\n        // wireframe mode antialiasing\n        useWireframeAntialiasing.setToolTipText(tr(\"Apply antialiasing to the map view in wireframe mode resulting in a smoother appearance.\"));\n        useWireframeAntialiasing.setSelected(Main.pref.getBoolean(\"mappaint.wireframe.use-antialiasing\", false));\n\n        // highlighting\n        useHighlighting.setToolTipText(tr(\"Hightlight target nodes and ways while drawing or selecting\"));\n        useHighlighting.setSelected(Main.pref.getBoolean(\"draw.target-highlight\", true));\n\n        drawHelperLine.setToolTipText(tr(\"Draw rubber-band helper line\"));\n        drawHelperLine.setSelected(Main.pref.getBoolean(\"draw.helper-line\", true));\n\n        // outlineOnly\n        outlineOnly.setToolTipText(tr(\"This option suppresses the filling of areas, overriding anything specified in the selected style.\"));\n        outlineOnly.setSelected(Main.pref.getBoolean(\"draw.data.area_outline_only\", false));\n\n        // discardable keys\n        discardableKeys.setToolTipText(tr(\"Display keys which have been deemed uninteresting to the point that they can be silently removed.\"));\n        discardableKeys.setSelected(Main.pref.getBoolean(\"display.discardable-keys\", false));\n        \n        JLabel performanceLabel = new JLabel(tr(\"Options that affect drawing performance\"));\n\n        panel.add(new JLabel(tr(\"Segment drawing options\")),\n                GBC.eop().insets(5,10,0,0));\n        panel.add(directionHint, GBC.eop().insets(20,0,0,0));\n        panel.add(headArrow, GBC.eop().insets(40, 0, 0, 0));\n        panel.add(onewayArrow, GBC.eop().insets(20,0,0,0));\n        panel.add(segmentOrderNumber, GBC.eop().insets(20,0,0,0));\n\n        panel.add(new JLabel(tr(\"Select and draw mode options\")),\n                GBC.eop().insets(5,10,0,0));\n        panel.add(virtualNodes, GBC.eop().insets(20,0,0,0));\n        panel.add(drawHelperLine, GBC.eop().insets(20, 0, 0, 0));\n\n        panel.add(performanceLabel, GBC.eop().insets(5,10,0,0));\n        panel.add(useAntialiasing, GBC.eop().insets(20,0,0,0));\n        panel.add(useWireframeAntialiasing, GBC.eop().insets(20, 0, 0, 0));\n        panel.add(useHighlighting, GBC.eop().insets(20,0,0,0));\n        panel.add(outlineOnly, GBC.eol().insets(20,0,0,0));\n\n        panel.add(new JLabel(tr(\"Other options\")),\n                GBC.eop().insets(5,10,0,0));\n        panel.add(sourceBounds, GBC.eop().insets(20,0,0,0));\n        panel.add(inactive, GBC.eop().insets(20,0,0,0));\n        panel.add(discardableKeys, GBC.eop().insets(20,0,0,0));\n\n        ExpertToggleAction.addVisibilitySwitcher(performanceLabel);\n        ExpertToggleAction.addVisibilitySwitcher(useAntialiasing);\n        ExpertToggleAction.addVisibilitySwitcher(useWireframeAntialiasing);\n        ExpertToggleAction.addVisibilitySwitcher(useHighlighting);\n        ExpertToggleAction.addVisibilitySwitcher(outlineOnly);\n        ExpertToggleAction.addVisibilitySwitcher(discardableKeys);\n\n        panel.add(Box.createVerticalGlue(), GBC.eol().fill(GBC.BOTH));\n        scrollpane = new JScrollPane(panel);\n        scrollpane.setBorder(BorderFactory.createEmptyBorder( 0, 0, 0, 0 ));\n        gui.getDisplayPreference().addSubTab(this, tr(\"OSM Data\"), scrollpane);\n    }","commit_id":"2095827529812aa36599f6b0ab886aa8ecbcf681","url":"https://github.com/openstreetmap/josm"},{"original_method":"/**\n         * Execution function for the Collector.\n         */\n        @Override\n        public void run() {\n            registerListeners();\n            try {\n                for (;;) {\n\n                    final MouseState ms = new MouseState();\n                    synchronized (this) {\n                        // TODO Would be better if the timeout wasn't necessary\n                        try {\n                            wait(1000);\n                        } catch (InterruptedException e) {\n                            // Occurs frequently during JOSM shutdown, log set to debug only\n                            Main.debug(\"InterruptedException in \"+MapStatus.class.getSimpleName());\n                        }\n                        ms.modifiers = mouseState.modifiers;\n                        ms.mousePos = mouseState.mousePos;\n                    }\n                    if (parent != Main.map)\n                        return; // exit, if new parent.\n\n                    // Do nothing, if required data is missing\n                    if(ms.mousePos == null || mv.center == null) {\n                        continue;\n                    }\n\n                    try {\n                        EventQueue.invokeAndWait(new Runnable() {\n\n                            @Override\n                            public void run() {\n                                // Freeze display when holding down CTRL\n                                if ((ms.modifiers & MouseEvent.CTRL_DOWN_MASK) != 0) {\n                                    // update the information popup's labels though, because\n                                    // the selection might have changed from the outside\n                                    popupUpdateLabels();\n                                    return;\n                                }\n\n                                // This try/catch is a hack to stop the flooding bug reports about this.\n                                // The exception needed to handle with in the first place, means that this\n                                // access to the data need to be restarted, if the main thread modifies\n                                // the data.\n                                DataSet ds = null;\n                                // The popup != null check is required because a left-click\n                                // produces several events as well, which would make this\n                                // variable true. Of course we only want the popup to show\n                                // if the middle mouse button has been pressed in the first\n                                // place\n                                boolean mouseNotMoved = oldMousePos != null\n                                        && oldMousePos.equals(ms.mousePos);\n                                boolean isAtOldPosition = mouseNotMoved && popup != null;\n                                boolean middleMouseDown = (ms.modifiers & MouseEvent.BUTTON2_DOWN_MASK) != 0;\n                                try {\n                                    ds = mv.getCurrentDataSet();\n                                    if (ds != null) {\n                                        // This is not perfect, if current dataset was changed during execution, the lock would be useless\n                                        if(isAtOldPosition && middleMouseDown) {\n                                            // Write lock is necessary when selecting in popupCycleSelection\n                                            // locks can not be upgraded -> if do read lock here and write lock later (in OsmPrimitive.updateFlags)\n                                            // then always occurs deadlock (#5814)\n                                            ds.beginUpdate();\n                                        } else {\n                                            ds.getReadLock().lock();\n                                        }\n                                    }\n\n                                    // Set the text label in the bottom status bar\n                                    // \"if mouse moved only\" was added to stop heap growing\n                                    if (!mouseNotMoved) {\n                                        statusBarElementUpdate(ms);\n                                    }\n\n\n                                    // Popup Information\n                                    // display them if the middle mouse button is pressed and\n                                    // keep them until the mouse is moved\n                                    if (middleMouseDown || isAtOldPosition) {\n                                        Collection<OsmPrimitive> osms = mv.getAllNearest(ms.mousePos, OsmPrimitive.isUsablePredicate);\n\n                                        final JPanel c = new JPanel(new GridBagLayout());\n                                        final JLabel lbl = new JLabel(\n                                                \"<html>\"+tr(\"Middle click again to cycle through.<br>\"+\n                                                        \"Hold CTRL to select directly from this list with the mouse.<hr>\")+\"<\/html>\",\n                                                        null,\n                                                        JLabel.HORIZONTAL\n                                                );\n                                        lbl.setHorizontalAlignment(JLabel.LEFT);\n                                        c.add(lbl, GBC.eol().insets(2, 0, 2, 0));\n\n                                        // Only cycle if the mouse has not been moved and the\n                                        // middle mouse button has been pressed at least twice\n                                        // (the reason for this is the popup != null check for\n                                        // isAtOldPosition, see above. This is a nice side\n                                        // effect though, because it does not change selection\n                                        // of the first middle click)\n                                        if(isAtOldPosition && middleMouseDown) {\n                                            // Hand down mouse modifiers so the SHIFT mod can be\n                                            // handled correctly (see funcion)\n                                            popupCycleSelection(osms, ms.modifiers);\n                                        }\n\n                                        // These labels may need to be updated from the outside\n                                        // so collect them\n                                        List<JLabel> lbls = new ArrayList<JLabel>(osms.size());\n                                        for (final OsmPrimitive osm : osms) {\n                                            JLabel l = popupBuildPrimitiveLabels(osm);\n                                            lbls.add(l);\n                                            c.add(l, GBC.eol().fill(GBC.HORIZONTAL).insets(2, 0, 2, 2));\n                                        }\n\n                                        popupShowPopup(popupCreatePopup(c, ms), lbls);\n                                    } else {\n                                        popupHidePopup();\n                                    }\n\n                                    oldMousePos = ms.mousePos;\n                                } catch (ConcurrentModificationException x) {\n                                    Main.warn(x);\n                                } catch (NullPointerException x) {\n                                    Main.warn(x);\n                                } finally {\n                                    if (ds != null) {\n                                        if(isAtOldPosition && middleMouseDown) {\n                                            ds.endUpdate();\n                                        } else {\n                                            ds.getReadLock().unlock();\n                                        }\n                                    }\n                                }\n                            }\n                        });\n                    } catch (Exception e) {\n                        Main.warn(e);\n                    }\n                }\n            } finally {\n                unregisterListeners();\n            }\n        }","id":55796,"modified_method":"/**\n         * Execution function for the Collector.\n         */\n        @Override\n        public void run() {\n            registerListeners();\n            try {\n                for (;;) {\n\n                    final MouseState ms = new MouseState();\n                    synchronized (this) {\n                        // TODO Would be better if the timeout wasn't necessary\n                        try {\n                            wait(1000);\n                        } catch (InterruptedException e) {\n                            // Occurs frequently during JOSM shutdown, log set to debug only\n                            Main.debug(\"InterruptedException in \"+MapStatus.class.getSimpleName());\n                        }\n                        ms.modifiers = mouseState.modifiers;\n                        ms.mousePos = mouseState.mousePos;\n                    }\n                    if (parent != Main.map)\n                        return; // exit, if new parent.\n\n                    // Do nothing, if required data is missing\n                    if(ms.mousePos == null || mv.center == null) {\n                        continue;\n                    }\n\n                    try {\n                        EventQueue.invokeAndWait(new Runnable() {\n\n                            @Override\n                            public void run() {\n                                // Freeze display when holding down CTRL\n                                if ((ms.modifiers & MouseEvent.CTRL_DOWN_MASK) != 0) {\n                                    // update the information popup's labels though, because\n                                    // the selection might have changed from the outside\n                                    popupUpdateLabels();\n                                    return;\n                                }\n\n                                // This try/catch is a hack to stop the flooding bug reports about this.\n                                // The exception needed to handle with in the first place, means that this\n                                // access to the data need to be restarted, if the main thread modifies\n                                // the data.\n                                DataSet ds = null;\n                                // The popup != null check is required because a left-click\n                                // produces several events as well, which would make this\n                                // variable true. Of course we only want the popup to show\n                                // if the middle mouse button has been pressed in the first\n                                // place\n                                boolean mouseNotMoved = oldMousePos != null\n                                        && oldMousePos.equals(ms.mousePos);\n                                boolean isAtOldPosition = mouseNotMoved && popup != null;\n                                boolean middleMouseDown = (ms.modifiers & MouseEvent.BUTTON2_DOWN_MASK) != 0;\n                                try {\n                                    ds = mv.getCurrentDataSet();\n                                    if (ds != null) {\n                                        // This is not perfect, if current dataset was changed during execution, the lock would be useless\n                                        if(isAtOldPosition && middleMouseDown) {\n                                            // Write lock is necessary when selecting in popupCycleSelection\n                                            // locks can not be upgraded -> if do read lock here and write lock later (in OsmPrimitive.updateFlags)\n                                            // then always occurs deadlock (#5814)\n                                            ds.beginUpdate();\n                                        } else {\n                                            ds.getReadLock().lock();\n                                        }\n                                    }\n\n                                    // Set the text label in the bottom status bar\n                                    // \"if mouse moved only\" was added to stop heap growing\n                                    if (!mouseNotMoved) {\n                                        statusBarElementUpdate(ms);\n                                    }\n\n\n                                    // Popup Information\n                                    // display them if the middle mouse button is pressed and\n                                    // keep them until the mouse is moved\n                                    if (middleMouseDown || isAtOldPosition) {\n                                        Collection<OsmPrimitive> osms = mv.getAllNearest(ms.mousePos, OsmPrimitive.isUsablePredicate);\n\n                                        final JPanel c = new JPanel(new GridBagLayout());\n                                        final JLabel lbl = new JLabel(\n                                                \"<html>\"+tr(\"Middle click again to cycle through.<br>\"+\n                                                        \"Hold CTRL to select directly from this list with the mouse.<hr>\")+\"<\/html>\",\n                                                        null,\n                                                        JLabel.HORIZONTAL\n                                                );\n                                        lbl.setHorizontalAlignment(JLabel.LEFT);\n                                        c.add(lbl, GBC.eol().insets(2, 0, 2, 0));\n\n                                        // Only cycle if the mouse has not been moved and the\n                                        // middle mouse button has been pressed at least twice\n                                        // (the reason for this is the popup != null check for\n                                        // isAtOldPosition, see above. This is a nice side\n                                        // effect though, because it does not change selection\n                                        // of the first middle click)\n                                        if(isAtOldPosition && middleMouseDown) {\n                                            // Hand down mouse modifiers so the SHIFT mod can be\n                                            // handled correctly (see funcion)\n                                            popupCycleSelection(osms, ms.modifiers);\n                                        }\n\n                                        // These labels may need to be updated from the outside\n                                        // so collect them\n                                        List<JLabel> lbls = new ArrayList<JLabel>(osms.size());\n                                        for (final OsmPrimitive osm : osms) {\n                                            JLabel l = popupBuildPrimitiveLabels(osm);\n                                            lbls.add(l);\n                                            c.add(l, GBC.eol().fill(GBC.HORIZONTAL).insets(2, 0, 2, 2));\n                                        }\n\n                                        popupShowPopup(popupCreatePopup(c, ms), lbls);\n                                    } else {\n                                        popupHidePopup();\n                                    }\n\n                                    oldMousePos = ms.mousePos;\n                                } catch (ConcurrentModificationException x) {\n                                    Main.warn(x);\n                                } catch (NullPointerException x) {\n                                    Main.warn(x);\n                                } finally {\n                                    if (ds != null) {\n                                        if(isAtOldPosition && middleMouseDown) {\n                                            ds.endUpdate();\n                                        } else {\n                                            ds.getReadLock().unlock();\n                                        }\n                                    }\n                                }\n                            }\n                        });\n                    } catch (InterruptedException e) {\n                        // Occurs frequently during JOSM shutdown, log set to debug only\n                        Main.debug(\"InterruptedException in \"+MapStatus.class.getSimpleName());\n                    } catch (InvocationTargetException e) {\n                        Main.warn(e);\n                    }\n                }\n            } finally {\n                unregisterListeners();\n            }\n        }","commit_id":"2095827529812aa36599f6b0ab886aa8ecbcf681","url":"https://github.com/openstreetmap/josm"},{"original_method":"@Override\n    public void destroy() {\n        super.destroy();\n        for (JosmAction action : josmActions) {\n            action.destroy();\n        }\n        Container parent = pluginHook.getParent();\n        if (parent != null) {\n            parent.remove(pluginHook);\n        }\n    }","id":55797,"modified_method":"@Override\n    public void destroy() {\n        super.destroy();\n        Main.pref.removePreferenceChangeListener(this);\n        for (JosmAction action : josmActions) {\n            action.destroy();\n        }\n        Container parent = pluginHook.getParent();\n        if (parent != null) {\n            parent.remove(pluginHook);\n        }\n    }","commit_id":"2095827529812aa36599f6b0ab886aa8ecbcf681","url":"https://github.com/openstreetmap/josm"},{"original_method":"private void buildPropertiesTable() {\n        // setting up the properties table\n\n        propertyData.setColumnIdentifiers(new String[]{tr(\"Key\"),tr(\"Value\")});\n        propertyTable.setSelectionMode(ListSelectionModel.MULTIPLE_INTERVAL_SELECTION);\n        propertyTable.getTableHeader().setReorderingAllowed(false);\n\n        propertyTable.getColumnModel().getColumn(1).setCellRenderer(new DefaultTableCellRenderer(){\n            @Override public Component getTableCellRendererComponent(JTable table, Object value,\n                    boolean isSelected, boolean hasFocus, int row, int column) {\n                Component c = super.getTableCellRendererComponent(table, value, isSelected, false, row, column);\n                if (value == null)\n                    return this;\n                if (c instanceof JLabel) {\n                    String str = null;\n                    if (value instanceof String) {\n                        str = (String) value;\n                    } else if (value instanceof Map<?, ?>) {\n                        Map<?, ?> v = (Map<?, ?>) value;\n                        if (v.size() != 1) {\n                            str=tr(\"<different>\");\n                            c.setFont(c.getFont().deriveFont(Font.ITALIC));\n                        } else {\n                            final Map.Entry<?, ?> entry = v.entrySet().iterator().next();\n                            str = (String) entry.getKey();\n                        }\n                    }\n                    ((JLabel)c).putClientProperty(\"html.disable\", Boolean.TRUE); // Fix #8730\n                    ((JLabel)c).setText(str);\n                }\n                return c;\n            }\n        });\n    }","id":55798,"modified_method":"private void buildPropertiesTable() {\n        // setting up the properties table\n\n        propertyData.setColumnIdentifiers(new String[]{tr(\"Key\"),tr(\"Value\")});\n        propertyTable.setSelectionMode(ListSelectionModel.MULTIPLE_INTERVAL_SELECTION);\n        propertyTable.getTableHeader().setReorderingAllowed(false);\n\n        PropertiesCellRenderer cellRenderer = new PropertiesCellRenderer();\n        propertyTable.getColumnModel().getColumn(0).setCellRenderer(cellRenderer);\n        propertyTable.getColumnModel().getColumn(1).setCellRenderer(cellRenderer);\n    }","commit_id":"2095827529812aa36599f6b0ab886aa8ecbcf681","url":"https://github.com/openstreetmap/josm"},{"original_method":"/**\n     * Create a new PropertiesDialog\n     * @param mapFrame The parent map fram\n     */\n    public PropertiesDialog(MapFrame mapFrame) {\n        super(tr(\"Properties/Memberships\"), \"propertiesdialog\", tr(\"Properties for selected objects.\"),\n                Shortcut.registerShortcut(\"subwindow:properties\", tr(\"Toggle: {0}\", tr(\"Properties/Memberships\")), KeyEvent.VK_P,\n                        Shortcut.ALT_SHIFT), 150, true);\n\n        setupPropertiesMenu();\n        buildPropertiesTable();\n\n        setupMembershipMenu();\n        buildMembershipTable();\n\n        // combine both tables and wrap them in a scrollPane\n        JPanel bothTables = new JPanel();\n        boolean top = Main.pref.getBoolean(\"properties.presets.top\", true);\n        bothTables.setLayout(new GridBagLayout());\n        if(top) {\n            bothTables.add(presets, GBC.std().fill(GBC.HORIZONTAL).insets(5, 2, 5, 2).anchor(GBC.NORTHWEST));\n            double epsilon = Double.MIN_VALUE; // need to set a weight or else anchor value is ignored\n            bothTables.add(pluginHook, GBC.eol().insets(0,1,1,1).anchor(GBC.NORTHEAST).weight(epsilon, epsilon));\n        }\n        bothTables.add(selectSth, GBC.eol().fill().insets(10, 10, 10, 10));\n        bothTables.add(propertyTable.getTableHeader(), GBC.eol().fill(GBC.HORIZONTAL));\n        bothTables.add(propertyTable, GBC.eol().fill(GBC.BOTH));\n        bothTables.add(membershipTable.getTableHeader(), GBC.eol().fill(GBC.HORIZONTAL));\n        bothTables.add(membershipTable, GBC.eol().fill(GBC.BOTH));\n        if(!top) {\n            bothTables.add(presets, GBC.eol().fill(GBC.HORIZONTAL).insets(5, 2, 5, 2));\n        }\n\n        setupKeyboardShortcuts();\n\n        // Let the action know when selection in the tables change\n        propertyTable.getSelectionModel().addListSelectionListener(editAction);\n        membershipTable.getSelectionModel().addListSelectionListener(editAction);\n        propertyTable.getSelectionModel().addListSelectionListener(deleteAction);\n        membershipTable.getSelectionModel().addListSelectionListener(deleteAction);\n\n\n        JScrollPane scrollPane = (JScrollPane) createLayout(bothTables, true, Arrays.asList(new SideButton[] {\n                this.btnAdd, this.btnEdit, this.btnDel\n        }));\n\n        MouseClickWatch mouseClickWatch = new MouseClickWatch();\n        propertyTable.addMouseListener(mouseClickWatch);\n        membershipTable.addMouseListener(mouseClickWatch);\n        scrollPane.addMouseListener(mouseClickWatch);\n\n        selectSth.setPreferredSize(scrollPane.getSize());\n        presets.setSize(scrollPane.getSize());\n\n        editHelper.loadTagsIfNeeded();\n    }","id":55799,"modified_method":"/**\n     * Create a new PropertiesDialog\n     * @param mapFrame The parent map fram\n     */\n    public PropertiesDialog(MapFrame mapFrame) {\n        super(tr(\"Properties/Memberships\"), \"propertiesdialog\", tr(\"Properties for selected objects.\"),\n                Shortcut.registerShortcut(\"subwindow:properties\", tr(\"Toggle: {0}\", tr(\"Properties/Memberships\")), KeyEvent.VK_P,\n                        Shortcut.ALT_SHIFT), 150, true);\n\n        setupPropertiesMenu();\n        buildPropertiesTable();\n\n        setupMembershipMenu();\n        buildMembershipTable();\n\n        // combine both tables and wrap them in a scrollPane\n        JPanel bothTables = new JPanel();\n        boolean top = Main.pref.getBoolean(\"properties.presets.top\", true);\n        bothTables.setLayout(new GridBagLayout());\n        if(top) {\n            bothTables.add(presets, GBC.std().fill(GBC.HORIZONTAL).insets(5, 2, 5, 2).anchor(GBC.NORTHWEST));\n            double epsilon = Double.MIN_VALUE; // need to set a weight or else anchor value is ignored\n            bothTables.add(pluginHook, GBC.eol().insets(0,1,1,1).anchor(GBC.NORTHEAST).weight(epsilon, epsilon));\n        }\n        bothTables.add(selectSth, GBC.eol().fill().insets(10, 10, 10, 10));\n        bothTables.add(propertyTable.getTableHeader(), GBC.eol().fill(GBC.HORIZONTAL));\n        bothTables.add(propertyTable, GBC.eol().fill(GBC.BOTH));\n        bothTables.add(membershipTable.getTableHeader(), GBC.eol().fill(GBC.HORIZONTAL));\n        bothTables.add(membershipTable, GBC.eol().fill(GBC.BOTH));\n        if(!top) {\n            bothTables.add(presets, GBC.eol().fill(GBC.HORIZONTAL).insets(5, 2, 5, 2));\n        }\n\n        setupKeyboardShortcuts();\n\n        // Let the action know when selection in the tables change\n        propertyTable.getSelectionModel().addListSelectionListener(editAction);\n        membershipTable.getSelectionModel().addListSelectionListener(editAction);\n        propertyTable.getSelectionModel().addListSelectionListener(deleteAction);\n        membershipTable.getSelectionModel().addListSelectionListener(deleteAction);\n\n\n        JScrollPane scrollPane = (JScrollPane) createLayout(bothTables, true, Arrays.asList(new SideButton[] {\n                this.btnAdd, this.btnEdit, this.btnDel\n        }));\n\n        MouseClickWatch mouseClickWatch = new MouseClickWatch();\n        propertyTable.addMouseListener(mouseClickWatch);\n        membershipTable.addMouseListener(mouseClickWatch);\n        scrollPane.addMouseListener(mouseClickWatch);\n\n        selectSth.setPreferredSize(scrollPane.getSize());\n        presets.setSize(scrollPane.getSize());\n\n        editHelper.loadTagsIfNeeded();\n        \n        Main.pref.addPreferenceChangeListener(this);\n    }","commit_id":"2095827529812aa36599f6b0ab886aa8ecbcf681","url":"https://github.com/openstreetmap/josm"},{"original_method":"@Override\n    public void selectionChanged(Collection<? extends OsmPrimitive> newSelection) {\n        if (!isVisible())\n            return;\n        if (propertyTable == null)\n            return; // selection changed may be received in base class constructor before init\n        if (propertyTable.getCellEditor() != null) {\n            propertyTable.getCellEditor().cancelCellEditing();\n        }\n\n        String selectedTag;\n        Relation selectedRelation = null;\n        selectedTag = editHelper.getChangedKey(); // select last added or last edited key by default\n        if (selectedTag == null && propertyTable.getSelectedRowCount() == 1) {\n            selectedTag = (String)propertyData.getValueAt(propertyTable.getSelectedRow(), 0);\n        }\n        if (membershipTable.getSelectedRowCount() == 1) {\n            selectedRelation = (Relation)membershipData.getValueAt(membershipTable.getSelectedRow(), 0);\n        }\n\n        // re-load property data\n        propertyData.setRowCount(0);\n\n        final Map<String, Integer> keyCount = new HashMap<String, Integer>();\n        final Map<String, String> tags = new HashMap<String, String>();\n        valueCount.clear();\n        EnumSet<TaggingPresetType> types = EnumSet.noneOf(TaggingPresetType.class);\n        for (OsmPrimitive osm : newSelection) {\n            types.add(TaggingPresetType.forPrimitive(osm));\n            for (String key : osm.keySet()) {\n                String value = osm.get(key);\n                keyCount.put(key, keyCount.containsKey(key) ? keyCount.get(key) + 1 : 1);\n                if (valueCount.containsKey(key)) {\n                    Map<String, Integer> v = valueCount.get(key);\n                    v.put(value, v.containsKey(value) ? v.get(value) + 1 : 1);\n                } else {\n                    TreeMap<String, Integer> v = new TreeMap<String, Integer>();\n                    v.put(value, 1);\n                    valueCount.put(key, v);\n                }\n            }\n        }\n        for (Entry<String, Map<String, Integer>> e : valueCount.entrySet()) {\n            int count = 0;\n            for (Entry<String, Integer> e1 : e.getValue().entrySet()) {\n                count += e1.getValue();\n            }\n            if (count < newSelection.size()) {\n                e.getValue().put(\"\", newSelection.size() - count);\n            }\n            propertyData.addRow(new Object[]{e.getKey(), e.getValue()});\n            tags.put(e.getKey(), e.getValue().size() == 1\n                    ? e.getValue().keySet().iterator().next() : tr(\"<different>\"));\n        }\n\n        membershipData.setRowCount(0);\n\n        Map<Relation, MemberInfo> roles = new HashMap<Relation, MemberInfo>();\n        for (OsmPrimitive primitive: newSelection) {\n            for (OsmPrimitive ref: primitive.getReferrers()) {\n                if (ref instanceof Relation && !ref.isIncomplete() && !ref.isDeleted()) {\n                    Relation r = (Relation) ref;\n                    MemberInfo mi = roles.get(r);\n                    if(mi == null) {\n                        mi = new MemberInfo();\n                    }\n                    roles.put(r, mi);\n                    int i = 1;\n                    for (RelationMember m : r.getMembers()) {\n                        if (m.getMember() == primitive) {\n                            mi.add(m, i);\n                        }\n                        ++i;\n                    }\n                }\n            }\n        }\n\n        List<Relation> sortedRelations = new ArrayList<Relation>(roles.keySet());\n        Collections.sort(sortedRelations, new Comparator<Relation>() {\n            @Override public int compare(Relation o1, Relation o2) {\n                int comp = Boolean.valueOf(o1.isDisabledAndHidden()).compareTo(o2.isDisabledAndHidden());\n                if (comp == 0) {\n                    comp = o1.getDisplayName(DefaultNameFormatter.getInstance()).compareTo(o2.getDisplayName(DefaultNameFormatter.getInstance()));\n                }\n                return comp;\n            }}\n                );\n\n        for (Relation r: sortedRelations) {\n            membershipData.addRow(new Object[]{r, roles.get(r)});\n        }\n\n        presets.updatePresets(types, tags, presetHandler);\n\n        membershipTable.getTableHeader().setVisible(membershipData.getRowCount() > 0);\n        membershipTable.setVisible(membershipData.getRowCount() > 0);\n\n        boolean hasSelection = !newSelection.isEmpty();\n        boolean hasTags = hasSelection && propertyData.getRowCount() > 0;\n        boolean hasMemberships = hasSelection && membershipData.getRowCount() > 0;\n        btnAdd.setEnabled(hasSelection);\n        btnEdit.setEnabled(hasTags || hasMemberships);\n        btnDel.setEnabled(hasTags || hasMemberships);\n        propertyTable.setVisible(hasTags);\n        propertyTable.getTableHeader().setVisible(hasTags);\n        selectSth.setVisible(!hasSelection);\n        pluginHook.setVisible(hasSelection);\n\n        int selectedIndex;\n        if (selectedTag != null && (selectedIndex = findRow(propertyData, selectedTag)) != -1) {\n            propertyTable.changeSelection(selectedIndex, 0, false, false);\n        } else if (selectedRelation != null && (selectedIndex = findRow(membershipData, selectedRelation)) != -1) {\n            membershipTable.changeSelection(selectedIndex, 0, false, false);\n        } else if(hasTags) {\n            propertyTable.changeSelection(0, 0, false, false);\n        } else if(hasMemberships) {\n            membershipTable.changeSelection(0, 0, false, false);\n        }\n\n        if(propertyData.getRowCount() != 0 || membershipData.getRowCount() != 0) {\n            setTitle(tr(\"Properties: {0} / Memberships: {1}\",\n                    propertyData.getRowCount(), membershipData.getRowCount()));\n        } else {\n            setTitle(tr(\"Properties / Memberships\"));\n        }\n    }","id":55800,"modified_method":"@Override\n    public void selectionChanged(Collection<? extends OsmPrimitive> newSelection) {\n        if (!isVisible())\n            return;\n        if (propertyTable == null)\n            return; // selection changed may be received in base class constructor before init\n        if (propertyTable.getCellEditor() != null) {\n            propertyTable.getCellEditor().cancelCellEditing();\n        }\n\n        String selectedTag;\n        Relation selectedRelation = null;\n        selectedTag = editHelper.getChangedKey(); // select last added or last edited key by default\n        if (selectedTag == null && propertyTable.getSelectedRowCount() == 1) {\n            selectedTag = (String)propertyData.getValueAt(propertyTable.getSelectedRow(), 0);\n        }\n        if (membershipTable.getSelectedRowCount() == 1) {\n            selectedRelation = (Relation)membershipData.getValueAt(membershipTable.getSelectedRow(), 0);\n        }\n\n        // re-load property data\n        propertyData.setRowCount(0);\n\n        final boolean displayDiscardableKeys = Main.pref.getBoolean(\"display.discardable-keys\", false);\n        final Map<String, Integer> keyCount = new HashMap<String, Integer>();\n        final Map<String, String> tags = new HashMap<String, String>();\n        valueCount.clear();\n        EnumSet<TaggingPresetType> types = EnumSet.noneOf(TaggingPresetType.class);\n        for (OsmPrimitive osm : newSelection) {\n            types.add(TaggingPresetType.forPrimitive(osm));\n            for (String key : osm.keySet()) {\n                if (displayDiscardableKeys || !OsmPrimitive.getDiscardableKeys().contains(key)) {\n                    String value = osm.get(key);\n                    keyCount.put(key, keyCount.containsKey(key) ? keyCount.get(key) + 1 : 1);\n                    if (valueCount.containsKey(key)) {\n                        Map<String, Integer> v = valueCount.get(key);\n                        v.put(value, v.containsKey(value) ? v.get(value) + 1 : 1);\n                    } else {\n                        TreeMap<String, Integer> v = new TreeMap<String, Integer>();\n                        v.put(value, 1);\n                        valueCount.put(key, v);\n                    }\n                }\n            }\n        }\n        for (Entry<String, Map<String, Integer>> e : valueCount.entrySet()) {\n            int count = 0;\n            for (Entry<String, Integer> e1 : e.getValue().entrySet()) {\n                count += e1.getValue();\n            }\n            if (count < newSelection.size()) {\n                e.getValue().put(\"\", newSelection.size() - count);\n            }\n            propertyData.addRow(new Object[]{e.getKey(), e.getValue()});\n            tags.put(e.getKey(), e.getValue().size() == 1\n                    ? e.getValue().keySet().iterator().next() : tr(\"<different>\"));\n        }\n\n        membershipData.setRowCount(0);\n\n        Map<Relation, MemberInfo> roles = new HashMap<Relation, MemberInfo>();\n        for (OsmPrimitive primitive: newSelection) {\n            for (OsmPrimitive ref: primitive.getReferrers()) {\n                if (ref instanceof Relation && !ref.isIncomplete() && !ref.isDeleted()) {\n                    Relation r = (Relation) ref;\n                    MemberInfo mi = roles.get(r);\n                    if(mi == null) {\n                        mi = new MemberInfo();\n                    }\n                    roles.put(r, mi);\n                    int i = 1;\n                    for (RelationMember m : r.getMembers()) {\n                        if (m.getMember() == primitive) {\n                            mi.add(m, i);\n                        }\n                        ++i;\n                    }\n                }\n            }\n        }\n\n        List<Relation> sortedRelations = new ArrayList<Relation>(roles.keySet());\n        Collections.sort(sortedRelations, new Comparator<Relation>() {\n            @Override public int compare(Relation o1, Relation o2) {\n                int comp = Boolean.valueOf(o1.isDisabledAndHidden()).compareTo(o2.isDisabledAndHidden());\n                if (comp == 0) {\n                    comp = o1.getDisplayName(DefaultNameFormatter.getInstance()).compareTo(o2.getDisplayName(DefaultNameFormatter.getInstance()));\n                }\n                return comp;\n            }}\n                );\n\n        for (Relation r: sortedRelations) {\n            membershipData.addRow(new Object[]{r, roles.get(r)});\n        }\n\n        presets.updatePresets(types, tags, presetHandler);\n\n        membershipTable.getTableHeader().setVisible(membershipData.getRowCount() > 0);\n        membershipTable.setVisible(membershipData.getRowCount() > 0);\n\n        boolean hasSelection = !newSelection.isEmpty();\n        boolean hasTags = hasSelection && propertyData.getRowCount() > 0;\n        boolean hasMemberships = hasSelection && membershipData.getRowCount() > 0;\n        btnAdd.setEnabled(hasSelection);\n        btnEdit.setEnabled(hasTags || hasMemberships);\n        btnDel.setEnabled(hasTags || hasMemberships);\n        propertyTable.setVisible(hasTags);\n        propertyTable.getTableHeader().setVisible(hasTags);\n        selectSth.setVisible(!hasSelection);\n        pluginHook.setVisible(hasSelection);\n\n        int selectedIndex;\n        if (selectedTag != null && (selectedIndex = findRow(propertyData, selectedTag)) != -1) {\n            propertyTable.changeSelection(selectedIndex, 0, false, false);\n        } else if (selectedRelation != null && (selectedIndex = findRow(membershipData, selectedRelation)) != -1) {\n            membershipTable.changeSelection(selectedIndex, 0, false, false);\n        } else if(hasTags) {\n            propertyTable.changeSelection(0, 0, false, false);\n        } else if(hasMemberships) {\n            membershipTable.changeSelection(0, 0, false, false);\n        }\n\n        if(propertyData.getRowCount() != 0 || membershipData.getRowCount() != 0) {\n            setTitle(tr(\"Properties: {0} / Memberships: {1}\",\n                    propertyData.getRowCount(), membershipData.getRowCount()));\n        } else {\n            setTitle(tr(\"Properties / Memberships\"));\n        }\n    }","commit_id":"2095827529812aa36599f6b0ab886aa8ecbcf681","url":"https://github.com/openstreetmap/josm"},{"original_method":"@Override\n  public RequestStatus createResources(final Request request) throws SystemException,\n      UnsupportedPropertyException, ResourceAlreadyExistsException, NoSuchParentResourceException {\n    StackAdvisorRequest recommendationRequest = prepareStackAdvisorRequest(request);\n\n    final RecommendationResponse response;\n    try {\n      response = saHelper.recommend(recommendationRequest);\n    } catch (StackAdvisorException e) {\n      LOG.warn(\"Error occured during component-layout recommnedation\", e);\n      throw new WebApplicationException(Response.status(Status.BAD_REQUEST).entity(e.getMessage())\n          .build());\n    }\n\n    Resource recommendation = createResources(new Command<Resource>() {\n      @Override\n      public Resource invoke() throws AmbariException {\n\n        Resource resource = new ResourceImpl(Resource.Type.Recommendation);\n        setResourceProperty(resource, RECOMMENDATION_ID_PROPERTY_ID, response.getId(), getPropertyIds());\n        setResourceProperty(resource, STACK_NAME_PROPERTY_ID, response.getVersion().getStackName(),\n            getPropertyIds());\n        setResourceProperty(resource, STACK_VERSION_PROPERTY_ID, response.getVersion()\n            .getStackVersion(), getPropertyIds());\n        setResourceProperty(resource, HOSTS_PROPERTY_ID, response.getHosts(), getPropertyIds());\n        setResourceProperty(resource, SERVICES_PROPERTY_ID, response.getServices(),\n            getPropertyIds());\n        setResourceProperty(resource, BLUEPRINT_CONFIGURATIONS_PROPERTY_ID, response\n            .getRecommendations().getBlueprint().getConfigurations(), getPropertyIds());\n\n        Set<HostGroup> hostGroups = response.getRecommendations().getBlueprint().getHostGroups();\n        List<Map<String, Object>> listGroupProps = new ArrayList<Map<String, Object>>();\n        for (HostGroup hostGroup : hostGroups) {\n          Map<String, Object> mapGroupProps = new HashMap<String, Object>();\n          mapGroupProps.put(BLUEPRINT_HOST_GROUPS_NAME_PROPERTY_ID, hostGroup.getName());\n          mapGroupProps\n              .put(BLUEPRINT_HOST_GROUPS_COMPONENTS_PROPERTY_ID, hostGroup.getComponents());\n          listGroupProps.add(mapGroupProps);\n        }\n        setResourceProperty(resource, BLUEPRINT_HOST_GROUPS_PROPERTY_ID, listGroupProps,\n            getPropertyIds());\n\n        Set<BindingHostGroup> bindingHostGroups = response.getRecommendations()\n            .getBlueprintClusterBinding().getHostGroups();\n        List<Map<String, Object>> listBindingGroupProps = new ArrayList<Map<String, Object>>();\n        for (BindingHostGroup hostGroup : bindingHostGroups) {\n          Map<String, Object> mapGroupProps = new HashMap<String, Object>();\n          mapGroupProps.put(BINDING_HOST_GROUPS_NAME_PROPERTY_ID, hostGroup.getName());\n          mapGroupProps.put(BINDING_HOST_GROUPS_HOSTS_PROPERTY_ID, hostGroup.getHosts());\n          listBindingGroupProps.add(mapGroupProps);\n        }\n        setResourceProperty(resource, BINDING_HOST_GROUPS_PROPERTY_ID, listBindingGroupProps,\n            getPropertyIds());\n\n        return resource;\n      }\n    });\n    notifyCreate(Resource.Type.Recommendation, request);\n\n    Set<Resource> resources = new HashSet<Resource>(Arrays.asList(recommendation));\n    return new RequestStatusImpl(null, resources);\n  }","id":55801,"modified_method":"@Override\n  public RequestStatus createResources(final Request request) throws SystemException,\n      UnsupportedPropertyException, ResourceAlreadyExistsException, NoSuchParentResourceException {\n    StackAdvisorRequest recommendationRequest = prepareStackAdvisorRequest(request);\n\n    final RecommendationResponse response;\n    try {\n      response = saHelper.recommend(recommendationRequest);\n    } catch (StackAdvisorRequestException e) {\n      LOG.warn(\"Error occured during recommnedation\", e);\n      throw new WebApplicationException(Response.status(Status.BAD_REQUEST).entity(e.getMessage())\n          .build());\n    } catch (StackAdvisorException e) {\n      LOG.warn(\"Error occured during recommnedation\", e);\n      throw new WebApplicationException(Response.status(Status.INTERNAL_SERVER_ERROR).entity(e.getMessage())\n          .build());\n    }\n\n    Resource recommendation = createResources(new Command<Resource>() {\n      @Override\n      public Resource invoke() throws AmbariException {\n\n        Resource resource = new ResourceImpl(Resource.Type.Recommendation);\n        setResourceProperty(resource, RECOMMENDATION_ID_PROPERTY_ID, response.getId(), getPropertyIds());\n        setResourceProperty(resource, STACK_NAME_PROPERTY_ID, response.getVersion().getStackName(),\n            getPropertyIds());\n        setResourceProperty(resource, STACK_VERSION_PROPERTY_ID, response.getVersion()\n            .getStackVersion(), getPropertyIds());\n        setResourceProperty(resource, HOSTS_PROPERTY_ID, response.getHosts(), getPropertyIds());\n        setResourceProperty(resource, SERVICES_PROPERTY_ID, response.getServices(),\n            getPropertyIds());\n        setResourceProperty(resource, BLUEPRINT_CONFIGURATIONS_PROPERTY_ID, response\n            .getRecommendations().getBlueprint().getConfigurations(), getPropertyIds());\n\n        Set<HostGroup> hostGroups = response.getRecommendations().getBlueprint().getHostGroups();\n        List<Map<String, Object>> listGroupProps = new ArrayList<Map<String, Object>>();\n        for (HostGroup hostGroup : hostGroups) {\n          Map<String, Object> mapGroupProps = new HashMap<String, Object>();\n          mapGroupProps.put(BLUEPRINT_HOST_GROUPS_NAME_PROPERTY_ID, hostGroup.getName());\n          mapGroupProps\n              .put(BLUEPRINT_HOST_GROUPS_COMPONENTS_PROPERTY_ID, hostGroup.getComponents());\n          listGroupProps.add(mapGroupProps);\n        }\n        setResourceProperty(resource, BLUEPRINT_HOST_GROUPS_PROPERTY_ID, listGroupProps,\n            getPropertyIds());\n\n        Set<BindingHostGroup> bindingHostGroups = response.getRecommendations()\n            .getBlueprintClusterBinding().getHostGroups();\n        List<Map<String, Object>> listBindingGroupProps = new ArrayList<Map<String, Object>>();\n        for (BindingHostGroup hostGroup : bindingHostGroups) {\n          Map<String, Object> mapGroupProps = new HashMap<String, Object>();\n          mapGroupProps.put(BINDING_HOST_GROUPS_NAME_PROPERTY_ID, hostGroup.getName());\n          mapGroupProps.put(BINDING_HOST_GROUPS_HOSTS_PROPERTY_ID, hostGroup.getHosts());\n          listBindingGroupProps.add(mapGroupProps);\n        }\n        setResourceProperty(resource, BINDING_HOST_GROUPS_PROPERTY_ID, listBindingGroupProps,\n            getPropertyIds());\n\n        return resource;\n      }\n    });\n    notifyCreate(Resource.Type.Recommendation, request);\n\n    Set<Resource> resources = new HashSet<Resource>(Arrays.asList(recommendation));\n    return new RequestStatusImpl(null, resources);\n  }","commit_id":"d49c19645d9ef134491b0c225a9235def1a5ac99","url":"https://github.com/apache/ambari"},{"original_method":"public synchronized T invoke(StackAdvisorRequest request) throws StackAdvisorException {\n    validate(request);\n    String hostsJSON = getHostsInformation(request);\n    String servicesJSON = getServicesInformation(request);\n\n    StackAdvisorData adjusted = adjust(new StackAdvisorData(hostsJSON, servicesJSON), request);\n\n    try {\n      createRequestDirectory();\n\n      FileUtils.writeStringToFile(new File(requestDirectory, \"hosts.json\"), adjusted.hostsJSON);\n      FileUtils.writeStringToFile(new File(requestDirectory, \"services.json\"),\n          adjusted.servicesJSON);\n\n      boolean success = saRunner.runScript(stackAdvisorScript, getCommandType(), requestDirectory);\n      if (!success) {\n        String message = \"Stack advisor script finished with errors\";\n        LOG.warn(message);\n        throw new StackAdvisorException(message);\n      }\n\n      String result = FileUtils.readFileToString(new File(requestDirectory, getResultFileName()));\n\n      T response = this.mapper.readValue(result, this.type);\n      return updateResponse(request, setRequestId(response));\n    } catch (Exception e) {\n      String message = \"Error occured during stack advisor command invocation\";\n      LOG.warn(message, e);\n      throw new StackAdvisorException(message, e);\n    }\n  }","id":55802,"modified_method":"public synchronized T invoke(StackAdvisorRequest request) throws StackAdvisorException {\n    validate(request);\n    String hostsJSON = getHostsInformation(request);\n    String servicesJSON = getServicesInformation(request);\n\n    StackAdvisorData adjusted = adjust(new StackAdvisorData(hostsJSON, servicesJSON), request);\n\n    try {\n      createRequestDirectory();\n\n      FileUtils.writeStringToFile(new File(requestDirectory, \"hosts.json\"), adjusted.hostsJSON);\n      FileUtils.writeStringToFile(new File(requestDirectory, \"services.json\"),\n          adjusted.servicesJSON);\n\n      saRunner.runScript(stackAdvisorScript, getCommandType(), requestDirectory);\n      String result = FileUtils.readFileToString(new File(requestDirectory, getResultFileName()));\n\n      T response = this.mapper.readValue(result, this.type);\n      return updateResponse(request, setRequestId(response));\n    } catch (StackAdvisorException ex) {\n      throw ex;\n    } catch (Exception e) {\n      String message = \"Error occured during stack advisor command invocation: \";\n      LOG.warn(message, e);\n      throw new StackAdvisorException(message + e.getMessage());\n    }\n  }","commit_id":"d49c19645d9ef134491b0c225a9235def1a5ac99","url":"https://github.com/apache/ambari"},{"original_method":"@Test(expected = WebApplicationException.class)\n  public void testInvoke_adjustThrowsException_throwsException() throws StackAdvisorException {\n    File recommendationsDir = temp.newFolder(\"recommendationDir\");\n    String stackAdvisorScript = \"echo\";\n    int requestId = 0;\n    StackAdvisorRunner saRunner = mock(StackAdvisorRunner.class);\n    AmbariMetaInfo metaInfo = mock(AmbariMetaInfo.class);\n    doReturn(Collections.emptyList()).when(metaInfo).getStackParentVersions(anyString(), anyString());\n    StackAdvisorCommand<TestResource> command = spy(new TestStackAdvisorCommand(recommendationsDir,\n        stackAdvisorScript, requestId, saRunner, metaInfo));\n\n    StackAdvisorRequest request = StackAdvisorRequestBuilder.forStack(\"stackName\", \"stackVersion\")\n        .build();\n\n    doReturn(\"{\\\"hosts\\\" : \\\"localhost\\\"\").when(command).getHostsInformation(request);\n    doReturn(\"{\\\"services\\\" : \\\"HDFS\\\"\").when(command).getServicesInformation(request);\n    doThrow(new WebApplicationException()).when(command).adjust(any(StackAdvisorData.class),\n        any(StackAdvisorRequest.class));\n    when(saRunner.runScript(any(String.class), any(StackAdvisorCommandType.class), any(File.class)))\n        .thenReturn(false);\n    command.invoke(request);\n\n    assertTrue(false);\n  }","id":55803,"modified_method":"@Test(expected = WebApplicationException.class)\n  public void testInvoke_adjustThrowsException_throwsException() throws StackAdvisorException {\n    File recommendationsDir = temp.newFolder(\"recommendationDir\");\n    String stackAdvisorScript = \"echo\";\n    int requestId = 0;\n    StackAdvisorRunner saRunner = mock(StackAdvisorRunner.class);\n    AmbariMetaInfo metaInfo = mock(AmbariMetaInfo.class);\n    doReturn(Collections.emptyList()).when(metaInfo).getStackParentVersions(anyString(), anyString());\n    StackAdvisorCommand<TestResource> command = spy(new TestStackAdvisorCommand(recommendationsDir,\n        stackAdvisorScript, requestId, saRunner, metaInfo));\n\n    StackAdvisorRequest request = StackAdvisorRequestBuilder.forStack(\"stackName\", \"stackVersion\")\n        .build();\n\n    doReturn(\"{\\\"hosts\\\" : \\\"localhost\\\"\").when(command).getHostsInformation(request);\n    doReturn(\"{\\\"services\\\" : \\\"HDFS\\\"\").when(command).getServicesInformation(request);\n    doThrow(new WebApplicationException()).when(command).adjust(any(StackAdvisorData.class),\n        any(StackAdvisorRequest.class));\n    doThrow(new StackAdvisorException(\"error\")).when(saRunner)\n        .runScript(any(String.class), any(StackAdvisorCommandType.class), any(File.class));\n    command.invoke(request);\n\n    assertTrue(false);\n  }","commit_id":"d49c19645d9ef134491b0c225a9235def1a5ac99","url":"https://github.com/apache/ambari"},{"original_method":"@Test\n  public void testInvoke_success() throws StackAdvisorException {\n    String expected = \"success\";\n    final String testResourceString = String.format(\"{\\\"type\\\": \\\"%s\\\"}\", expected);\n    final File recommendationsDir = temp.newFolder(\"recommendationDir\");\n    String stackAdvisorScript = \"echo\";\n    final int requestId = 2;\n    StackAdvisorRunner saRunner = mock(StackAdvisorRunner.class);\n    AmbariMetaInfo metaInfo = mock(AmbariMetaInfo.class);\n    doReturn(Collections.emptyList()).when(metaInfo).getStackParentVersions(anyString(), anyString());\n    final StackAdvisorCommand<TestResource> command = spy(new TestStackAdvisorCommand(\n        recommendationsDir, stackAdvisorScript, requestId, saRunner, metaInfo));\n\n    StackAdvisorRequest request = StackAdvisorRequestBuilder.forStack(\"stackName\", \"stackVersion\")\n        .build();\n\n    String hostsJSON = \"{\\\"hosts\\\" : \\\"localhost\\\"\";\n    String servicesJSON = \"{\\\"services\\\" : \\\"HDFS\\\"\";\n    StackAdvisorData data = new StackAdvisorData(hostsJSON, servicesJSON);\n    doReturn(hostsJSON).when(command).getHostsInformation(request);\n    doReturn(servicesJSON).when(command).getServicesInformation(request);\n    doReturn(data).when(command)\n        .adjust(any(StackAdvisorData.class), any(StackAdvisorRequest.class));\n    when(saRunner.runScript(any(String.class), any(StackAdvisorCommandType.class), any(File.class)))\n        .thenAnswer(new Answer<Boolean>() {\n          public Boolean answer(InvocationOnMock invocation) throws Throwable {\n            String resultFilePath = String.format(\"%s/%s\", requestId, command.getResultFileName());\n            File resultFile = new File(recommendationsDir, resultFilePath);\n            resultFile.getParentFile().mkdirs();\n            FileUtils.writeStringToFile(resultFile, testResourceString);\n            return true;\n          }\n        });\n    TestResource result = command.invoke(request);\n\n    assertEquals(expected, result.getType());\n    assertEquals(requestId, result.getId());\n  }","id":55804,"modified_method":"@Test\n  public void testInvoke_success() throws StackAdvisorException {\n    String expected = \"success\";\n    final String testResourceString = String.format(\"{\\\"type\\\": \\\"%s\\\"}\", expected);\n    final File recommendationsDir = temp.newFolder(\"recommendationDir\");\n    String stackAdvisorScript = \"echo\";\n    final int requestId = 2;\n    StackAdvisorRunner saRunner = mock(StackAdvisorRunner.class);\n    AmbariMetaInfo metaInfo = mock(AmbariMetaInfo.class);\n    doReturn(Collections.emptyList()).when(metaInfo).getStackParentVersions(anyString(), anyString());\n    final StackAdvisorCommand<TestResource> command = spy(new TestStackAdvisorCommand(\n        recommendationsDir, stackAdvisorScript, requestId, saRunner, metaInfo));\n\n    StackAdvisorRequest request = StackAdvisorRequestBuilder.forStack(\"stackName\", \"stackVersion\")\n        .build();\n\n    String hostsJSON = \"{\\\"hosts\\\" : \\\"localhost\\\"\";\n    String servicesJSON = \"{\\\"services\\\" : \\\"HDFS\\\"\";\n    StackAdvisorData data = new StackAdvisorData(hostsJSON, servicesJSON);\n    doReturn(hostsJSON).when(command).getHostsInformation(request);\n    doReturn(servicesJSON).when(command).getServicesInformation(request);\n    doReturn(data).when(command)\n        .adjust(any(StackAdvisorData.class), any(StackAdvisorRequest.class));\n    doAnswer(new Answer() {\n      public Object answer(InvocationOnMock invocation) throws Throwable {\n        String resultFilePath = String.format(\"%s/%s\", requestId, command.getResultFileName());\n        File resultFile = new File(recommendationsDir, resultFilePath);\n        resultFile.getParentFile().mkdirs();\n        FileUtils.writeStringToFile(resultFile, testResourceString);\n        return null;\n      }\n    }).when(saRunner).runScript(any(String.class), any(StackAdvisorCommandType.class), any(File.class));\n    TestResource result = command.invoke(request);\n\n    assertEquals(expected, result.getType());\n    assertEquals(requestId, result.getId());\n  }","commit_id":"d49c19645d9ef134491b0c225a9235def1a5ac99","url":"https://github.com/apache/ambari"},{"original_method":"@Test(expected = StackAdvisorException.class)\n  public void testInvoke_saRunnerNotSucceed_throwsException() throws StackAdvisorException {\n    File recommendationsDir = temp.newFolder(\"recommendationDir\");\n    String stackAdvisorScript = \"echo\";\n    int requestId = 0;\n    StackAdvisorRunner saRunner = mock(StackAdvisorRunner.class);\n    AmbariMetaInfo metaInfo = mock(AmbariMetaInfo.class);\n    doReturn(Collections.emptyList()).when(metaInfo).getStackParentVersions(anyString(), anyString());\n    StackAdvisorCommand<TestResource> command = spy(new TestStackAdvisorCommand(recommendationsDir,\n        stackAdvisorScript, requestId, saRunner, metaInfo));\n\n    StackAdvisorRequest request = StackAdvisorRequestBuilder.forStack(\"stackName\", \"stackVersion\")\n        .build();\n\n    String hostsJSON = \"{\\\"hosts\\\" : \\\"localhost\\\"\";\n    String servicesJSON = \"{\\\"services\\\" : \\\"HDFS\\\"\";\n    StackAdvisorData data = new StackAdvisorData(hostsJSON, servicesJSON);\n    doReturn(hostsJSON).when(command).getHostsInformation(request);\n    doReturn(servicesJSON).when(command).getServicesInformation(request);\n    doReturn(data).when(command)\n        .adjust(any(StackAdvisorData.class), any(StackAdvisorRequest.class));\n    when(saRunner.runScript(any(String.class), any(StackAdvisorCommandType.class), any(File.class)))\n        .thenReturn(false);\n    command.invoke(request);\n\n    assertTrue(false);\n  }","id":55805,"modified_method":"@Test(expected = StackAdvisorException.class)\n  public void testInvoke_saRunnerNotSucceed_throwsException() throws StackAdvisorException {\n    File recommendationsDir = temp.newFolder(\"recommendationDir\");\n    String stackAdvisorScript = \"echo\";\n    int requestId = 0;\n    StackAdvisorRunner saRunner = mock(StackAdvisorRunner.class);\n    AmbariMetaInfo metaInfo = mock(AmbariMetaInfo.class);\n    doReturn(Collections.emptyList()).when(metaInfo).getStackParentVersions(anyString(), anyString());\n    StackAdvisorCommand<TestResource> command = spy(new TestStackAdvisorCommand(recommendationsDir,\n        stackAdvisorScript, requestId, saRunner, metaInfo));\n\n    StackAdvisorRequest request = StackAdvisorRequestBuilder.forStack(\"stackName\", \"stackVersion\")\n        .build();\n\n    String hostsJSON = \"{\\\"hosts\\\" : \\\"localhost\\\"\";\n    String servicesJSON = \"{\\\"services\\\" : \\\"HDFS\\\"\";\n    StackAdvisorData data = new StackAdvisorData(hostsJSON, servicesJSON);\n    doReturn(hostsJSON).when(command).getHostsInformation(request);\n    doReturn(servicesJSON).when(command).getServicesInformation(request);\n    doReturn(data).when(command)\n        .adjust(any(StackAdvisorData.class), any(StackAdvisorRequest.class));\n    doThrow(new StackAdvisorRequestException(\"error\")).when(saRunner)\n        .runScript(any(String.class), any(StackAdvisorCommandType.class), any(File.class));\n    command.invoke(request);\n\n    assertTrue(false);\n  }","commit_id":"d49c19645d9ef134491b0c225a9235def1a5ac99","url":"https://github.com/apache/ambari"},{"original_method":"StackAdvisorCommand<RecommendationResponse> createRecommendationCommand(\n      StackAdvisorRequestType requestType) throws StackAdvisorException {\n    StackAdvisorCommand<RecommendationResponse> command;\n    if (requestType == StackAdvisorRequestType.HOST_GROUPS) {\n      command = new GetComponentLayoutRecommnedationCommand(recommendationsDir, stackAdvisorScript,\n          requestId, saRunner, metaInfo);\n    } else if (requestType == StackAdvisorRequestType.CONFIGURATIONS) {\n      command = new GetConfigurationRecommnedationCommand(recommendationsDir, stackAdvisorScript,\n          requestId, saRunner, metaInfo);\n    } else {\n      throw new StackAdvisorException(String.format(\"Unsupported request type, type=%s\",\n          requestType));\n    }\n\n    return command;\n  }","id":55806,"modified_method":"StackAdvisorCommand<RecommendationResponse> createRecommendationCommand(\n      StackAdvisorRequestType requestType) throws StackAdvisorException {\n    StackAdvisorCommand<RecommendationResponse> command;\n    if (requestType == StackAdvisorRequestType.HOST_GROUPS) {\n      command = new GetComponentLayoutRecommnedationCommand(recommendationsDir, stackAdvisorScript,\n          requestId, saRunner, metaInfo);\n    } else if (requestType == StackAdvisorRequestType.CONFIGURATIONS) {\n      command = new GetConfigurationRecommnedationCommand(recommendationsDir, stackAdvisorScript,\n          requestId, saRunner, metaInfo);\n    } else {\n      throw new StackAdvisorRequestException(String.format(\"Unsupported request type, type=%s\",\n          requestType));\n    }\n\n    return command;\n  }","commit_id":"d49c19645d9ef134491b0c225a9235def1a5ac99","url":"https://github.com/apache/ambari"},{"original_method":"/**\n   * Returns validation (component-layout or configurations) result for the\n   * request.\n   * \n   * @param validationRequest the validation request\n   * @return {@link ValidationResponse} instance\n   * @throws StackAdvisorException in case of stack advisor script errors\n   */\n  public synchronized ValidationResponse validate(StackAdvisorRequest request)\n      throws StackAdvisorException {\n    requestId += 1;\n\n    StackAdvisorCommand<ValidationResponse> command = createValidationCommand(request\n        .getRequestType());\n\n    return command.invoke(request);\n  }","id":55807,"modified_method":"/**\n   * Returns validation (component-layout or configurations) result for the\n   * request.\n   * \n   * @param request the validation request\n   * @return {@link ValidationResponse} instance\n   * @throws StackAdvisorException in case of stack advisor script errors\n   */\n  public synchronized ValidationResponse validate(StackAdvisorRequest request)\n      throws StackAdvisorException {\n    requestId += 1;\n\n    StackAdvisorCommand<ValidationResponse> command = createValidationCommand(request\n        .getRequestType());\n\n    return command.invoke(request);\n  }","commit_id":"d49c19645d9ef134491b0c225a9235def1a5ac99","url":"https://github.com/apache/ambari"},{"original_method":"StackAdvisorCommand<ValidationResponse> createValidationCommand(\n      StackAdvisorRequestType requestType) throws StackAdvisorException {\n    StackAdvisorCommand<ValidationResponse> command;\n    if (requestType == StackAdvisorRequestType.HOST_GROUPS) {\n      command = new GetComponentLayoutValidationCommand(recommendationsDir, stackAdvisorScript,\n          requestId, saRunner, metaInfo);\n    } else if (requestType == StackAdvisorRequestType.CONFIGURATIONS) {\n      command = new GetConfigurationValidationCommand(recommendationsDir, stackAdvisorScript,\n          requestId, saRunner, metaInfo);\n    } else {\n      throw new StackAdvisorException(String.format(\"Unsupported request type, type=%s\",\n          requestType));\n    }\n\n    return command;\n  }","id":55808,"modified_method":"StackAdvisorCommand<ValidationResponse> createValidationCommand(\n      StackAdvisorRequestType requestType) throws StackAdvisorException {\n    StackAdvisorCommand<ValidationResponse> command;\n    if (requestType == StackAdvisorRequestType.HOST_GROUPS) {\n      command = new GetComponentLayoutValidationCommand(recommendationsDir, stackAdvisorScript,\n          requestId, saRunner, metaInfo);\n    } else if (requestType == StackAdvisorRequestType.CONFIGURATIONS) {\n      command = new GetConfigurationValidationCommand(recommendationsDir, stackAdvisorScript,\n          requestId, saRunner, metaInfo);\n    } else {\n      throw new StackAdvisorRequestException(String.format(\"Unsupported request type, type=%s\",\n          requestType));\n    }\n\n    return command;\n  }","commit_id":"d49c19645d9ef134491b0c225a9235def1a5ac99","url":"https://github.com/apache/ambari"},{"original_method":"/**\n   * Runs stack_advisor.py script in the specified {@code actionDirectory}.\n   * \n   * @param script stack advisor script\n   * @param saCommandType {@link StackAdvisorCommandType} to run.\n   * @param actionDirectory directory for the action\n   * @return {@code true} if script completed successfully, {@code false}\n   *         otherwise.\n   */\n  public boolean runScript(String script, StackAdvisorCommandType saCommandType, File actionDirectory) {\n    LOG.info(String.format(\"Script=%s, actionDirectory=%s, command=%s\", script, actionDirectory,\n        saCommandType));\n\n    String outputFile = actionDirectory + File.separator + \"stackadvisor.out\";\n    String errorFile = actionDirectory + File.separator + \"stackadvisor.err\";\n\n    ProcessBuilder builder = prepareShellCommand(script, saCommandType,\n        actionDirectory, outputFile,\n        errorFile);\n\n    try {\n      Process process = builder.start();\n\n      try {\n        LOG.info(\"Stack-advisor output={}, error={}\", outputFile, errorFile);\n\n        int exitCode = process.waitFor();\n        try {\n          String outMessage = FileUtils.readFileToString(new File(outputFile));\n          String errMessage = FileUtils.readFileToString(new File(errorFile));\n          LOG.info(\"Stack advisor output files\");\n          LOG.info(\"    advisor script stdout: {}\", outMessage);\n          LOG.info(\"    advisor script stderr: {}\", errMessage);\n        } catch (IOException io) {\n          LOG.error(\"Error in reading script log files\", io);\n        }\n\n        return exitCode == 0;\n      } finally {\n        process.destroy();\n      }\n    } catch (Exception ioe) {\n      LOG.error(\"Error executing stack advisor\", ioe);\n      return false;\n    }\n  }","id":55809,"modified_method":"/**\n   * Runs stack_advisor.py script in the specified {@code actionDirectory}.\n   * \n   * @param script stack advisor script\n   * @param saCommandType {@link StackAdvisorCommandType} to run.\n   * @param actionDirectory directory for the action\n   */\n  public void runScript(String script, StackAdvisorCommandType saCommandType, File actionDirectory)\n      throws StackAdvisorException {\n    LOG.info(String.format(\"Script=%s, actionDirectory=%s, command=%s\", script, actionDirectory,\n        saCommandType));\n\n    String outputFile = actionDirectory + File.separator + \"stackadvisor.out\";\n    String errorFile = actionDirectory + File.separator + \"stackadvisor.err\";\n\n    ProcessBuilder builder = prepareShellCommand(script, saCommandType,\n        actionDirectory, outputFile,\n        errorFile);\n\n    try {\n      Process process = builder.start();\n\n      try {\n        LOG.info(\"Stack-advisor output={}, error={}\", outputFile, errorFile);\n\n        int exitCode = process.waitFor();\n        String outMessage;\n        String errMessage = null;\n        try {\n          outMessage = FileUtils.readFileToString(new File(outputFile)).trim();\n          errMessage = FileUtils.readFileToString(new File(errorFile)).trim();\n          LOG.info(\"Stack advisor output files\");\n          LOG.info(\"    advisor script stdout: {}\", outMessage);\n          LOG.info(\"    advisor script stderr: {}\", errMessage);\n        } catch (IOException io) {\n          LOG.error(\"Error in reading script log files\", io);\n        }\n        if (exitCode > 0) {\n          String errorMessage;\n          if (errMessage != null) {\n            errorMessage = errMessage.substring(errMessage.lastIndexOf(\"\\n\"));\n          } else {\n            errorMessage = \"Error occurred during stack advisor execution\";\n          }\n          switch (exitCode) {\n            case 1:\n              throw new StackAdvisorRequestException(errorMessage);\n            case 2:\n              throw new StackAdvisorException(errorMessage);\n          }\n        }\n      } finally {\n        process.destroy();\n      }\n    } catch (StackAdvisorException ex) {\n      throw ex;\n    } catch (Exception ioe) {\n      String message = \"Error executing stack advisor: \";\n      LOG.error(message, ioe);\n      throw new StackAdvisorException(message + ioe.getMessage());\n    }\n  }","commit_id":"d49c19645d9ef134491b0c225a9235def1a5ac99","url":"https://github.com/apache/ambari"},{"original_method":"@Test\n  public void testRunScript_processExitCodeZero_returnTrue() throws IOException,\n      InterruptedException {\n    String script = \"echo\";\n    StackAdvisorCommandType saCommandType = StackAdvisorCommandType.RECOMMEND_COMPONENT_LAYOUT;\n    File actionDirectory = temp.newFolder(\"actionDir\");\n    ProcessBuilder processBuilder = createNiceMock(ProcessBuilder.class);\n    Process process = createNiceMock(Process.class);\n    StackAdvisorRunner saRunner = new StackAdvisorRunner();\n\n    stub(PowerMock.method(StackAdvisorRunner.class, \"prepareShellCommand\"))\n        .toReturn(processBuilder);\n    expect(processBuilder.start()).andReturn(process);\n    expect(process.waitFor()).andReturn(0);\n    replay(processBuilder, process);\n    boolean result = saRunner.runScript(script, saCommandType, actionDirectory);\n\n    assertEquals(true, result);\n  }","id":55810,"modified_method":"@Test\n  public void testRunScript_processExitCodeZero_returnTrue() throws Exception {\n    String script = \"echo\";\n    StackAdvisorCommandType saCommandType = StackAdvisorCommandType.RECOMMEND_COMPONENT_LAYOUT;\n    File actionDirectory = temp.newFolder(\"actionDir\");\n    ProcessBuilder processBuilder = createNiceMock(ProcessBuilder.class);\n    Process process = createNiceMock(Process.class);\n    StackAdvisorRunner saRunner = new StackAdvisorRunner();\n\n    stub(PowerMock.method(StackAdvisorRunner.class, \"prepareShellCommand\"))\n        .toReturn(processBuilder);\n    expect(processBuilder.start()).andReturn(process);\n    expect(process.waitFor()).andReturn(0);\n    replay(processBuilder, process);\n    try {\n      saRunner.runScript(script, saCommandType, actionDirectory);\n    } catch (StackAdvisorException ex) {\n      fail(\"Should not fail with StackAdvisorException\");\n    }\n  }","commit_id":"d49c19645d9ef134491b0c225a9235def1a5ac99","url":"https://github.com/apache/ambari"},{"original_method":"@Test\n  public void testRunScript_processStartThrowsException_returnFalse() throws IOException {\n    String script = \"echo\";\n    StackAdvisorCommandType saCommandType = StackAdvisorCommandType.RECOMMEND_COMPONENT_LAYOUT;\n    File actionDirectory = temp.newFolder(\"actionDir\");\n    ProcessBuilder processBuilder = createNiceMock(ProcessBuilder.class);\n    StackAdvisorRunner saRunner = new StackAdvisorRunner();\n\n    stub(PowerMock.method(StackAdvisorRunner.class, \"prepareShellCommand\"))\n        .toReturn(processBuilder);\n    expect(processBuilder.start()).andThrow(new IOException());\n    replay(processBuilder);\n    boolean result = saRunner.runScript(script, saCommandType, actionDirectory);\n\n    assertEquals(false, result);\n  }","id":55811,"modified_method":"@Test(expected = StackAdvisorException.class)\n  public void testRunScript_processStartThrowsException_returnFalse() throws Exception {\n    String script = \"echo\";\n    StackAdvisorCommandType saCommandType = StackAdvisorCommandType.RECOMMEND_COMPONENT_LAYOUT;\n    File actionDirectory = temp.newFolder(\"actionDir\");\n    ProcessBuilder processBuilder = createNiceMock(ProcessBuilder.class);\n    StackAdvisorRunner saRunner = new StackAdvisorRunner();\n\n    stub(PowerMock.method(StackAdvisorRunner.class, \"prepareShellCommand\"))\n        .toReturn(processBuilder);\n    expect(processBuilder.start()).andThrow(new IOException());\n    replay(processBuilder);\n    saRunner.runScript(script, saCommandType, actionDirectory);\n  }","commit_id":"d49c19645d9ef134491b0c225a9235def1a5ac99","url":"https://github.com/apache/ambari"},{"original_method":"@Test\n  public void testRunScript_processExitCodeNonZero_returnFalse() throws IOException,\n      InterruptedException {\n    String script = \"echo\";\n    StackAdvisorCommandType saCommandType = StackAdvisorCommandType.RECOMMEND_COMPONENT_LAYOUT;\n    File actionDirectory = temp.newFolder(\"actionDir\");\n    ProcessBuilder processBuilder = createNiceMock(ProcessBuilder.class);\n    Process process = createNiceMock(Process.class);\n    StackAdvisorRunner saRunner = new StackAdvisorRunner();\n\n    stub(PowerMock.method(StackAdvisorRunner.class, \"prepareShellCommand\"))\n        .toReturn(processBuilder);\n    expect(processBuilder.start()).andReturn(process);\n    expect(process.waitFor()).andReturn(1);\n    replay(processBuilder, process);\n    boolean result = saRunner.runScript(script, saCommandType, actionDirectory);\n\n    assertEquals(false, result);\n  }","id":55812,"modified_method":"@Test(expected = StackAdvisorRequestException.class)\n  public void testRunScript_processExitCode1_returnFalse() throws Exception {\n    String script = \"echo\";\n    StackAdvisorCommandType saCommandType = StackAdvisorCommandType.RECOMMEND_COMPONENT_LAYOUT;\n    File actionDirectory = temp.newFolder(\"actionDir\");\n    ProcessBuilder processBuilder = createNiceMock(ProcessBuilder.class);\n    Process process = createNiceMock(Process.class);\n    StackAdvisorRunner saRunner = new StackAdvisorRunner();\n\n    stub(PowerMock.method(StackAdvisorRunner.class, \"prepareShellCommand\"))\n        .toReturn(processBuilder);\n    expect(processBuilder.start()).andReturn(process);\n    expect(process.waitFor()).andReturn(1);\n    replay(processBuilder, process);\n    saRunner.runScript(script, saCommandType, actionDirectory);\n  }","commit_id":"d49c19645d9ef134491b0c225a9235def1a5ac99","url":"https://github.com/apache/ambari"},{"original_method":"@Override\n  public RequestStatus createResources(final Request request) throws SystemException,\n      UnsupportedPropertyException, ResourceAlreadyExistsException, NoSuchParentResourceException {\n    StackAdvisorRequest validationRequest = prepareStackAdvisorRequest(request);\n\n    final ValidationResponse response;\n    try {\n      response = saHelper.validate(validationRequest);\n    } catch (StackAdvisorException e) {\n      LOG.warn(\"Error occured during component-layout validation\", e);\n      throw new WebApplicationException(Response.status(Status.BAD_REQUEST).entity(e.getMessage())\n          .build());\n    }\n\n    Resource validation = createResources(new Command<Resource>() {\n      @Override\n      public Resource invoke() throws AmbariException {\n\n        Resource resource = new ResourceImpl(Resource.Type.Validation);\n        setResourceProperty(resource, VALIDATION_ID_PROPERTY_ID, response.getId(), getPropertyIds());\n        setResourceProperty(resource, STACK_NAME_PROPERTY_ID, response.getVersion().getStackName(), getPropertyIds());\n        setResourceProperty(resource, STACK_VERSION_PROPERTY_ID, response.getVersion().getStackVersion(), getPropertyIds());\n\n        List<Map<String, Object>> listItemProps = new ArrayList<Map<String, Object>>();\n\n        Set<ValidationItem> items = response.getItems();\n        for (ValidationItem item : items) {\n          Map<String, Object> mapItemProps = new HashMap<String, Object>();\n          mapItemProps.put(ITEMS_TYPE_PROPERTY_ID, item.getType());\n          mapItemProps.put(ITEMS_LEVE_PROPERTY_ID, item.getLevel());\n          mapItemProps.put(ITEMS_MESSAGE_PROPERTY_ID, item.getMessage());\n\n          if (item.getComponentName() != null) {\n            mapItemProps.put(ITEMS_COMPONENT_NAME_PROPERTY_ID, item.getComponentName());\n          }\n          if (item.getHost() != null) {\n            mapItemProps.put(ITEMS_HOST_PROPERTY_ID, item.getHost());\n          }\n          if (item.getConfigType() != null) {\n            mapItemProps.put(ITEMS_CONFIG_TYPE_PROPERTY_ID, item.getConfigType());\n            mapItemProps.put(ITEMS_CONFIG_NAME_PROPERTY_ID, item.getConfigName());\n          }\n          listItemProps.add(mapItemProps);\n        }\n        setResourceProperty(resource, ITEMS_PROPERTY_ID, listItemProps, getPropertyIds());\n\n        return resource;\n      }\n    });\n    notifyCreate(Resource.Type.Validation, request);\n\n    Set<Resource> resources = new HashSet<Resource>(Arrays.asList(validation));\n    return new RequestStatusImpl(null, resources);\n  }","id":55813,"modified_method":"@Override\n  public RequestStatus createResources(final Request request) throws SystemException,\n      UnsupportedPropertyException, ResourceAlreadyExistsException, NoSuchParentResourceException {\n    StackAdvisorRequest validationRequest = prepareStackAdvisorRequest(request);\n\n    final ValidationResponse response;\n    try {\n      response = saHelper.validate(validationRequest);\n    } catch (StackAdvisorRequestException e) {\n      LOG.warn(\"Error occurred during validation\", e);\n      throw new WebApplicationException(Response.status(Status.BAD_REQUEST).entity(e.getMessage())\n          .build());\n    } catch (StackAdvisorException e) {\n      LOG.warn(\"Error occurred during validation\", e);\n      throw new WebApplicationException(Response.status(Status.INTERNAL_SERVER_ERROR).entity(e.getMessage())\n          .build());\n    }\n\n    Resource validation = createResources(new Command<Resource>() {\n      @Override\n      public Resource invoke() throws AmbariException {\n\n        Resource resource = new ResourceImpl(Resource.Type.Validation);\n        setResourceProperty(resource, VALIDATION_ID_PROPERTY_ID, response.getId(), getPropertyIds());\n        setResourceProperty(resource, STACK_NAME_PROPERTY_ID, response.getVersion().getStackName(), getPropertyIds());\n        setResourceProperty(resource, STACK_VERSION_PROPERTY_ID, response.getVersion().getStackVersion(), getPropertyIds());\n\n        List<Map<String, Object>> listItemProps = new ArrayList<Map<String, Object>>();\n\n        Set<ValidationItem> items = response.getItems();\n        for (ValidationItem item : items) {\n          Map<String, Object> mapItemProps = new HashMap<String, Object>();\n          mapItemProps.put(ITEMS_TYPE_PROPERTY_ID, item.getType());\n          mapItemProps.put(ITEMS_LEVE_PROPERTY_ID, item.getLevel());\n          mapItemProps.put(ITEMS_MESSAGE_PROPERTY_ID, item.getMessage());\n\n          if (item.getComponentName() != null) {\n            mapItemProps.put(ITEMS_COMPONENT_NAME_PROPERTY_ID, item.getComponentName());\n          }\n          if (item.getHost() != null) {\n            mapItemProps.put(ITEMS_HOST_PROPERTY_ID, item.getHost());\n          }\n          if (item.getConfigType() != null) {\n            mapItemProps.put(ITEMS_CONFIG_TYPE_PROPERTY_ID, item.getConfigType());\n            mapItemProps.put(ITEMS_CONFIG_NAME_PROPERTY_ID, item.getConfigName());\n          }\n          listItemProps.add(mapItemProps);\n        }\n        setResourceProperty(resource, ITEMS_PROPERTY_ID, listItemProps, getPropertyIds());\n\n        return resource;\n      }\n    });\n    notifyCreate(Resource.Type.Validation, request);\n\n    Set<Resource> resources = new HashSet<Resource>(Arrays.asList(validation));\n    return new RequestStatusImpl(null, resources);\n  }","commit_id":"d49c19645d9ef134491b0c225a9235def1a5ac99","url":"https://github.com/apache/ambari"},{"original_method":"private void doComment() {\n    myLine1 = myDocument.getLineNumber(myStartOffset);\n    myLine2 = myDocument.getLineNumber(myEndOffset);\n\n    if (myLine2 > myLine1 && myDocument.getLineStartOffset(myLine2) == myEndOffset) {\n      myLine2--;\n    }\n\n    myStartOffsets = new int[myLine2 - myLine1 + 1];\n    myEndOffsets = new int[myLine2 - myLine1 + 1];\n    myCommenters = new Commenter[myLine2 - myLine1 + 1];\n    myAllLineComments = true;\n\n    CharSequence chars = myDocument.getCharsSequence();\n\n    for (int line = myLine1; line <= myLine2; line++) {\n      final Commenter commenter = findCommenter(line);\n      if (commenter == null) return;\n      if (commenter.getLineCommentPrefix() == null && (commenter.getBlockCommentPrefix() == null || commenter.getBlockCommentSuffix() == null)) return;\n      myCommenters[line - myLine1] = commenter;\n      if (!isLineCommented(line, chars, commenter)) {\n        myAllLineComments = false;\n        break;\n      }\n    }\n\n    if (!myAllLineComments) {\n      new CommentPerformer().perform();\n    }\n    else {\n      for (int line = myLine2; line >= myLine1; line--) {\n        int offset1 = myStartOffsets[line - myLine1];\n        int offset2 = myEndOffsets[line - myLine1];\n        Commenter commenter = myCommenters[line - myLine1];\n        if (offset2 >= 0) {\n          myDocument.deleteString(offset2 - commenter.getBlockCommentSuffix().length(), offset2);\n        }\n        if (offset1 >= 0) {\n          myDocument.deleteString(offset1, offset1 + commenter.getBlockCommentPrefix().length());\n        }\n      }\n    }\n  }","id":55814,"modified_method":"private void doComment() {\n    myLine1 = myDocument.getLineNumber(myStartOffset);\n    myLine2 = myDocument.getLineNumber(myEndOffset);\n\n    if (myLine2 > myLine1 && myDocument.getLineStartOffset(myLine2) == myEndOffset) {\n      myLine2--;\n    }\n\n    myStartOffsets = new int[myLine2 - myLine1 + 1];\n    myEndOffsets = new int[myLine2 - myLine1 + 1];\n    myCommenters = new Commenter[myLine2 - myLine1 + 1];\n    myAllLineComments = true;\n\n    CharSequence chars = myDocument.getCharsSequence();\n\n    for (int line = myLine1; line <= myLine2; line++) {\n      final Commenter commenter = findCommenter(line);\n      if (commenter == null) return;\n      if (commenter.getLineCommentPrefix() == null && (commenter.getBlockCommentPrefix() == null || commenter.getBlockCommentSuffix() == null)) return;\n      myCommenters[line - myLine1] = commenter;\n      if (!isLineCommented(line, chars, commenter)) {\n        myAllLineComments = false;\n        break;\n      }\n    }\n\n    if (!myAllLineComments) {\n      new CommentPerformer().perform();\n    }\n    else {\n      for (int line = myLine2; line >= myLine1; line--) {\n        int offset1 = myStartOffsets[line - myLine1];\n        int offset2 = myEndOffsets[line - myLine1];\n        Commenter commenter = myCommenters[line - myLine1];\n        if (offset2 >= 0) {\n          myDocument.deleteString(offset2 - commenter.getBlockCommentSuffix().length(), offset2);\n        }\n        if (offset1 >= 0) {\n          String prefix = commenter.getBlockCommentPrefix();\n          if (prefix == null || !myDocument.getText().substring(offset1, myDocument.getTextLength()).startsWith(prefix)) {\n            prefix = commenter.getLineCommentPrefix();\n          }\n          myDocument.deleteString(offset1, offset1 + prefix.length());\n        }\n      }\n    }\n  }","commit_id":"6dde71ba95ee1993949a59a95105f8e6d595b678","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private TextRange insertNestedComments(int startOffset,\n                                         int endOffset,\n                                         String commentPrefix,\n                                         String commentSuffix,\n                                         Commenter commenter) {\n    if (commenter instanceof SelfManagingCommenter) {\n      final SelfManagingCommenter selfManagingCommenter = (SelfManagingCommenter)commenter;\n      return selfManagingCommenter.insertBlockComment(\n        startOffset,\n        endOffset,\n        myDocument,\n        mySelfManagedCommenterData\n      );\n    }\n\n    String normalizedPrefix = commentPrefix.trim();\n    String normalizedSuffix = commentSuffix.trim();\n    IntArrayList nestedCommentPrefixes = new IntArrayList();\n    IntArrayList nestedCommentSuffixes = new IntArrayList();\n    String commentedPrefix = commenter.getCommentedBlockCommentPrefix();\n    String commentedSuffix = commenter.getCommentedBlockCommentSuffix();\n    CharSequence chars = myDocument.getCharsSequence();\n    for (int i = startOffset; i < endOffset; ++i) {\n      if (CharArrayUtil.regionMatches(chars, i, normalizedPrefix)) {\n        nestedCommentPrefixes.add(i);\n      }\n      else {\n        if (CharArrayUtil.regionMatches(chars, i, normalizedSuffix)) {\n          nestedCommentSuffixes.add(i);\n        }\n      }\n    }\n    int shift = 0;\n    if (!(commentedSuffix == null &&\n          !nestedCommentSuffixes.isEmpty() &&\n          nestedCommentSuffixes.get(nestedCommentSuffixes.size() - 1) + commentSuffix.length() == endOffset)) {\n      myDocument.insertString(endOffset, commentSuffix);\n      shift += commentSuffix.length();\n    }\n\n    // process nested comments in back order\n    int i = nestedCommentPrefixes.size() - 1;\n    int j = nestedCommentSuffixes.size() - 1;\n    final TextRange selection = new TextRange(startOffset, endOffset);\n    while (i >= 0 && j >= 0) {\n      final int prefixIndex = nestedCommentPrefixes.get(i);\n      final int suffixIndex = nestedCommentSuffixes.get(j);\n      if (prefixIndex > suffixIndex) {\n        shift += doBoundCommentingAndGetShift(prefixIndex, commentedPrefix, normalizedPrefix.length(), commentSuffix, false, selection);\n        --i;\n      }\n      else {\n        //if (insertPos < myDocument.getTextLength() && Character.isWhitespace(myDocument.getCharsSequence().charAt(insertPos))) {\n        //  insertPos = suffixIndex + commentSuffix.length();\n        //}\n        shift += doBoundCommentingAndGetShift(suffixIndex, commentedSuffix, normalizedSuffix.length(), commentPrefix, true, selection);\n        --j;\n      }\n    }\n    while (i >= 0) {\n      final int prefixIndex = nestedCommentPrefixes.get(i);\n      shift += doBoundCommentingAndGetShift(prefixIndex, commentedPrefix, normalizedPrefix.length(), commentSuffix, false, selection);\n      --i;\n    }\n    while (j >= 0) {\n      final int suffixIndex = nestedCommentSuffixes.get(j);\n      shift += doBoundCommentingAndGetShift(suffixIndex, commentedSuffix, normalizedSuffix.length(), commentPrefix, true, selection);\n      --j;\n    }\n    if (!(commentedPrefix == null && !nestedCommentPrefixes.isEmpty() && nestedCommentPrefixes.get(0) == startOffset)) {\n      myDocument.insertString(startOffset, commentPrefix);\n      shift += commentPrefix.length();\n    }\n\n    TextRange range = new TextRange(startOffset, endOffset + shift);\n    return processDocument(range, commenter, true);\n  }","id":55815,"modified_method":"private TextRange insertNestedComments(int startOffset,\n                                         int endOffset,\n                                         String commentPrefix,\n                                         String commentSuffix,\n                                         Commenter commenter) {\n    if (commenter instanceof SelfManagingCommenter) {\n      final SelfManagingCommenter selfManagingCommenter = (SelfManagingCommenter)commenter;\n      return selfManagingCommenter.insertBlockComment(\n        startOffset,\n        endOffset,\n        myDocument,\n        mySelfManagedCommenterData\n      );\n    }\n\n    String normalizedPrefix = commentPrefix.trim();\n    String normalizedSuffix = commentSuffix.trim();\n    IntArrayList nestedCommentPrefixes = new IntArrayList();\n    IntArrayList nestedCommentSuffixes = new IntArrayList();\n    String commentedPrefix = commenter.getCommentedBlockCommentPrefix();\n    String commentedSuffix = commenter.getCommentedBlockCommentSuffix();\n    CharSequence chars = myDocument.getCharsSequence();\n    for (int i = startOffset; i < endOffset; ++i) {\n      if (CharArrayUtil.regionMatches(chars, i, normalizedPrefix)) {\n        nestedCommentPrefixes.add(i);\n      }\n      else {\n        if (CharArrayUtil.regionMatches(chars, i, normalizedSuffix)) {\n          nestedCommentSuffixes.add(i);\n        }\n      }\n    }\n    int shift = 0;\n    if (!(commentedSuffix == null &&\n          !nestedCommentSuffixes.isEmpty() &&\n          nestedCommentSuffixes.get(nestedCommentSuffixes.size() - 1) + commentSuffix.length() == endOffset)) {\n      myDocument.insertString(endOffset, commentSuffix);\n      shift += commentSuffix.length();\n    }\n\n    // process nested comments in back order\n    int i = nestedCommentPrefixes.size() - 1;\n    int j = nestedCommentSuffixes.size() - 1;\n    final TextRange selection = new TextRange(startOffset, endOffset);\n    while (i >= 0 && j >= 0) {\n      final int prefixIndex = nestedCommentPrefixes.get(i);\n      final int suffixIndex = nestedCommentSuffixes.get(j);\n      if (prefixIndex > suffixIndex) {\n        shift += doBoundCommentingAndGetShift(prefixIndex, commentedPrefix, normalizedPrefix.length(), commentSuffix, false, selection);\n        --i;\n      }\n      else {\n        //if (insertPos < myDocument.getTextLength() && Character.isWhitespace(myDocument.getCharsSequence().charAt(insertPos))) {\n        //  insertPos = suffixIndex + commentSuffix.length();\n        //}\n        shift += doBoundCommentingAndGetShift(suffixIndex, commentedSuffix, normalizedSuffix.length(), commentPrefix, true, selection);\n        --j;\n      }\n    }\n    while (i >= 0) {\n      final int prefixIndex = nestedCommentPrefixes.get(i);\n      shift += doBoundCommentingAndGetShift(prefixIndex, commentedPrefix, normalizedPrefix.length(), commentSuffix, false, selection);\n      --i;\n    }\n    while (j >= 0) {\n      final int suffixIndex = nestedCommentSuffixes.get(j);\n      shift += doBoundCommentingAndGetShift(suffixIndex, commentedSuffix, normalizedSuffix.length(), commentPrefix, true, selection);\n      --j;\n    }\n    if (!(commentedPrefix == null && !nestedCommentPrefixes.isEmpty() && nestedCommentPrefixes.get(0) == startOffset)) {\n      myDocument.insertString(startOffset, commentPrefix);\n      shift += commentPrefix.length();\n    }\n\n    return processDocument(myDocument, myDocument.createRangeMarker(startOffset, endOffset + shift), commenter, true);\n  }","commit_id":"3088f5a567c9ee5028a6ec0c37d43154a37dca80","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void uncommentRange(TextRange range, String commentPrefix, String commentSuffix, Commenter commenter) {\n    if (commenter instanceof SelfManagingCommenter) {\n      final SelfManagingCommenter selfManagingCommenter = (SelfManagingCommenter)commenter;\n      selfManagingCommenter.uncommentBlockComment(\n        range.getStartOffset(),\n        range.getEndOffset(),\n        myDocument,\n        mySelfManagedCommenterData\n      );\n      return;\n    }\n\n    RangeMarker marker = myDocument.createRangeMarker(range);\n    String text = myDocument.getCharsSequence().subSequence(range.getStartOffset(), range.getEndOffset()).toString();\n    int startOffset = range.getStartOffset();\n    //boolean endsProperly = CharArrayUtil.regionMatches(chars, range.getEndOffset() - commentSuffix.length(), commentSuffix);\n    List<Couple<TextRange>> ranges = new ArrayList<Couple<TextRange>>();\n\n    int position = 0;\n    while (true) {\n      int start = getNearest(text, commentPrefix, position);\n      if (start == text.length()) {\n        break;\n      }\n      position = start;\n      int end = getNearest(text, commentSuffix, position + commentPrefix.length()) + commentSuffix.length();\n      position = end;\n      Couple<TextRange> pair =\n        findCommentBlock(new TextRange(start + startOffset, end + startOffset), commentPrefix, commentSuffix);\n      ranges.add(pair);\n    }\n\n    for (int i = ranges.size() - 1; i >= 0; i--) {\n      Couple<TextRange> toDelete = ranges.get(i);\n      myDocument.deleteString(toDelete.first.getStartOffset(), toDelete.first.getEndOffset());\n      int shift = toDelete.first.getEndOffset() - toDelete.first.getStartOffset();\n      myDocument.deleteString(toDelete.second.getStartOffset() - shift, toDelete.second.getEndOffset() - shift);\n      if (commenter.getCommentedBlockCommentPrefix() != null) {\n        commentNestedComments(myDocument, new TextRange(toDelete.first.getEndOffset() - shift, toDelete.second.getStartOffset() - shift),\n                              commenter);\n      }\n    }\n\n    processDocument(TextRange.create(marker.getStartOffset(), marker.getEndOffset()), commenter, false);\n  }","id":55816,"modified_method":"public void uncommentRange(TextRange range, String commentPrefix, String commentSuffix, Commenter commenter) {\n    if (commenter instanceof SelfManagingCommenter) {\n      final SelfManagingCommenter selfManagingCommenter = (SelfManagingCommenter)commenter;\n      selfManagingCommenter.uncommentBlockComment(\n        range.getStartOffset(),\n        range.getEndOffset(),\n        myDocument,\n        mySelfManagedCommenterData\n      );\n      return;\n    }\n\n    RangeMarker marker = myDocument.createRangeMarker(range);\n    String text = myDocument.getCharsSequence().subSequence(range.getStartOffset(), range.getEndOffset()).toString();\n    int startOffset = range.getStartOffset();\n    //boolean endsProperly = CharArrayUtil.regionMatches(chars, range.getEndOffset() - commentSuffix.length(), commentSuffix);\n    List<Couple<TextRange>> ranges = new ArrayList<Couple<TextRange>>();\n\n    int position = 0;\n    while (true) {\n      int start = getNearest(text, commentPrefix, position);\n      if (start == text.length()) {\n        break;\n      }\n      position = start;\n      int end = getNearest(text, commentSuffix, position + commentPrefix.length()) + commentSuffix.length();\n      position = end;\n      Couple<TextRange> pair =\n        findCommentBlock(new TextRange(start + startOffset, end + startOffset), commentPrefix, commentSuffix);\n      ranges.add(pair);\n    }\n\n    for (int i = ranges.size() - 1; i >= 0; i--) {\n      Couple<TextRange> toDelete = ranges.get(i);\n      myDocument.deleteString(toDelete.first.getStartOffset(), toDelete.first.getEndOffset());\n      int shift = toDelete.first.getEndOffset() - toDelete.first.getStartOffset();\n      myDocument.deleteString(toDelete.second.getStartOffset() - shift, toDelete.second.getEndOffset() - shift);\n      if (commenter.getCommentedBlockCommentPrefix() != null) {\n        commentNestedComments(myDocument, new TextRange(toDelete.first.getEndOffset() - shift, toDelete.second.getStartOffset() - shift),\n                              commenter);\n      }\n    }\n\n    processDocument(myDocument, marker, commenter, false);\n  }","commit_id":"3088f5a567c9ee5028a6ec0c37d43154a37dca80","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private TextRange processDocument(TextRange range, Commenter commenter, boolean escape) {\n    if (!(commenter instanceof EscapingCommenter)) return range;\n    RangeMarker marker = myDocument.createRangeMarker(range);\n    if (escape) {\n      ((EscapingCommenter)commenter).escape(myDocument, range);\n    }\n    else {\n      ((EscapingCommenter)commenter).unescape(myDocument, range);\n    }\n    return TextRange.create(marker.getStartOffset(), marker.getEndOffset());\n  }","id":55817,"modified_method":"static TextRange processDocument(Document document, RangeMarker marker, Commenter commenter, boolean escape) {\n    if (commenter instanceof EscapingCommenter) {\n      TextRange range = TextRange.create(marker.getStartOffset(), marker.getEndOffset());\n      if (escape) {\n        ((EscapingCommenter)commenter).escape(document, range);\n      }\n      else {\n        ((EscapingCommenter)commenter).unescape(document, range);\n      }\n    }\n    return TextRange.create(marker.getStartOffset(), marker.getEndOffset());\n  }","commit_id":"3088f5a567c9ee5028a6ec0c37d43154a37dca80","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private static void commentLine(Block block, int line, int offset) {\n    Commenter commenter = block.blockSuitableCommenter;\n    Document document = block.editor.getDocument();\n    if (commenter == null) commenter = findCommenter(block.editor, block.psiFile, line);\n    if (commenter == null) return;\n    if (commenter instanceof SelfManagingCommenter) {\n      final SelfManagingCommenter selfManagingCommenter = (SelfManagingCommenter)commenter;\n      selfManagingCommenter.commentLine(line, offset, document, block.commenterStateMap.get(selfManagingCommenter));\n      return;\n    }\n\n    String prefix = commenter.getLineCommentPrefix();\n    if (prefix != null) {\n      if (commenter instanceof CommenterWithLineSuffix) {\n        int endOffset = document.getLineEndOffset(line);\n        endOffset = CharArrayUtil.shiftBackward(document.getCharsSequence(), endOffset, \" \\t\");\n        int shiftedStartOffset = CharArrayUtil.shiftForward(document.getCharsSequence(), offset, \" \\t\");\n        String lineSuffix = ((CommenterWithLineSuffix)commenter).getLineCommentSuffix();\n        if (!CharArrayUtil.regionMatches(document.getCharsSequence(), shiftedStartOffset, prefix)) {\n          if (!CharArrayUtil.regionMatches(document.getCharsSequence(), endOffset - lineSuffix.length(), lineSuffix)) {\n            document.insertString(endOffset, lineSuffix);\n          }\n          document.insertString(offset, prefix);\n        }\n      }\n      else {\n        document.insertString(offset, prefix);\n      }\n    }\n    else {\n      prefix = commenter.getBlockCommentPrefix();\n      String suffix = commenter.getBlockCommentSuffix();\n      if (prefix == null || suffix == null) return;\n      int endOffset = document.getLineEndOffset(line);\n      if (endOffset == offset && block.startLine != block.endLine) return;\n      final int textLength = document.getTextLength();\n      final CharSequence chars = document.getCharsSequence();\n      offset = CharArrayUtil.shiftForward(chars, offset, \" \\t\");\n      if (endOffset == textLength) {\n        final int shifted = CharArrayUtil.shiftBackward(chars, textLength - 1, \" \\t\");\n        if (shifted < textLength - 1) endOffset = shifted;\n      }\n      else {\n        endOffset = CharArrayUtil.shiftBackward(chars, endOffset, \" \\t\");\n      }\n      if (endOffset < offset ||\n          offset == textLength - 1 && line != document.getLineCount() - 1) {\n        return;\n      }\n      final String text = chars.subSequence(offset, endOffset).toString();\n      final IntArrayList prefixes = new IntArrayList();\n      final IntArrayList suffixes = new IntArrayList();\n      final String commentedSuffix = commenter.getCommentedBlockCommentSuffix();\n      final String commentedPrefix = commenter.getCommentedBlockCommentPrefix();\n      for (int position = 0; position < text.length(); ) {\n        int nearestPrefix = text.indexOf(prefix, position);\n        if (nearestPrefix == -1) {\n          nearestPrefix = text.length();\n        }\n        int nearestSuffix = text.indexOf(suffix, position);\n        if (nearestSuffix == -1) {\n          nearestSuffix = text.length();\n        }\n        if (Math.min(nearestPrefix, nearestSuffix) == text.length()) {\n          break;\n        }\n        if (nearestPrefix < nearestSuffix) {\n          prefixes.add(nearestPrefix);\n          position = nearestPrefix + prefix.length();\n        }\n        else {\n          suffixes.add(nearestSuffix);\n          position = nearestSuffix + suffix.length();\n        }\n      }\n      if (!(commentedSuffix == null && !suffixes.isEmpty() && offset + suffixes.get(suffixes.size() - 1) + suffix.length() >= endOffset)) {\n        document.insertString(endOffset, suffix);\n      }\n      int nearestPrefix = prefixes.size() - 1;\n      int nearestSuffix = suffixes.size() - 1;\n      while (nearestPrefix >= 0 || nearestSuffix >= 0) {\n        if (nearestSuffix == -1 || nearestPrefix != -1 && prefixes.get(nearestPrefix) > suffixes.get(nearestSuffix)) {\n          final int position = prefixes.get(nearestPrefix);\n          nearestPrefix--;\n          if (commentedPrefix != null) {\n            document.replaceString(offset + position, offset + position + prefix.length(), commentedPrefix);\n          }\n          else if (position != 0) {\n            document.insertString(offset + position, suffix);\n          }\n        }\n        else {\n          final int position = suffixes.get(nearestSuffix);\n          nearestSuffix--;\n          if (commentedSuffix != null) {\n            document.replaceString(offset + position, offset + position + suffix.length(), commentedSuffix);\n          }\n          else if (offset + position + suffix.length() < endOffset) {\n            document.insertString(offset + position + suffix.length(), prefix);\n          }\n        }\n      }\n      if (!(commentedPrefix == null && !prefixes.isEmpty() && prefixes.get(0) == 0)) {\n        document.insertString(offset, prefix);\n      }\n    }\n  }","id":55818,"modified_method":"private static void commentLine(Block block, int line, int offset) {\n    Commenter commenter = block.blockSuitableCommenter;\n    Document document = block.editor.getDocument();\n    if (commenter == null) commenter = findCommenter(block.editor, block.psiFile, line);\n    if (commenter == null) return;\n    if (commenter instanceof SelfManagingCommenter) {\n      final SelfManagingCommenter selfManagingCommenter = (SelfManagingCommenter)commenter;\n      selfManagingCommenter.commentLine(line, offset, document, block.commenterStateMap.get(selfManagingCommenter));\n      return;\n    }\n\n    String prefix = commenter.getLineCommentPrefix();\n    int endOffset = document.getLineEndOffset(line);\n    RangeMarker marker = document.createRangeMarker(offset, endOffset);\n    if (prefix != null) {\n      if (commenter instanceof CommenterWithLineSuffix) {\n        endOffset = CharArrayUtil.shiftBackward(document.getCharsSequence(), endOffset, \" \\t\");\n        int shiftedStartOffset = CharArrayUtil.shiftForward(document.getCharsSequence(), offset, \" \\t\");\n        String lineSuffix = ((CommenterWithLineSuffix)commenter).getLineCommentSuffix();\n        if (!CharArrayUtil.regionMatches(document.getCharsSequence(), shiftedStartOffset, prefix)) {\n          if (!CharArrayUtil.regionMatches(document.getCharsSequence(), endOffset - lineSuffix.length(), lineSuffix)) {\n            document.insertString(endOffset, lineSuffix);\n          }\n          document.insertString(offset, prefix);\n        }\n      }\n      else {\n        document.insertString(offset, prefix);\n      }\n    }\n    else {\n      prefix = commenter.getBlockCommentPrefix();\n      String suffix = commenter.getBlockCommentSuffix();\n      if (prefix == null || suffix == null) return;\n      if (endOffset == offset && block.startLine != block.endLine) return;\n      final int textLength = document.getTextLength();\n      final CharSequence chars = document.getCharsSequence();\n      offset = CharArrayUtil.shiftForward(chars, offset, \" \\t\");\n      if (endOffset == textLength) {\n        final int shifted = CharArrayUtil.shiftBackward(chars, textLength - 1, \" \\t\");\n        if (shifted < textLength - 1) endOffset = shifted;\n      }\n      else {\n        endOffset = CharArrayUtil.shiftBackward(chars, endOffset, \" \\t\");\n      }\n      if (endOffset < offset ||\n          offset == textLength - 1 && line != document.getLineCount() - 1) {\n        return;\n      }\n      final String text = chars.subSequence(offset, endOffset).toString();\n      final IntArrayList prefixes = new IntArrayList();\n      final IntArrayList suffixes = new IntArrayList();\n      final String commentedSuffix = commenter.getCommentedBlockCommentSuffix();\n      final String commentedPrefix = commenter.getCommentedBlockCommentPrefix();\n      for (int position = 0; position < text.length(); ) {\n        int nearestPrefix = text.indexOf(prefix, position);\n        if (nearestPrefix == -1) {\n          nearestPrefix = text.length();\n        }\n        int nearestSuffix = text.indexOf(suffix, position);\n        if (nearestSuffix == -1) {\n          nearestSuffix = text.length();\n        }\n        if (Math.min(nearestPrefix, nearestSuffix) == text.length()) {\n          break;\n        }\n        if (nearestPrefix < nearestSuffix) {\n          prefixes.add(nearestPrefix);\n          position = nearestPrefix + prefix.length();\n        }\n        else {\n          suffixes.add(nearestSuffix);\n          position = nearestSuffix + suffix.length();\n        }\n      }\n      if (!(commentedSuffix == null && !suffixes.isEmpty() && offset + suffixes.get(suffixes.size() - 1) + suffix.length() >= endOffset)) {\n        document.insertString(endOffset, suffix);\n      }\n      int nearestPrefix = prefixes.size() - 1;\n      int nearestSuffix = suffixes.size() - 1;\n      while (nearestPrefix >= 0 || nearestSuffix >= 0) {\n        if (nearestSuffix == -1 || nearestPrefix != -1 && prefixes.get(nearestPrefix) > suffixes.get(nearestSuffix)) {\n          final int position = prefixes.get(nearestPrefix);\n          nearestPrefix--;\n          if (commentedPrefix != null) {\n            document.replaceString(offset + position, offset + position + prefix.length(), commentedPrefix);\n          }\n          else if (position != 0) {\n            document.insertString(offset + position, suffix);\n          }\n        }\n        else {\n          final int position = suffixes.get(nearestSuffix);\n          nearestSuffix--;\n          if (commentedSuffix != null) {\n            document.replaceString(offset + position, offset + position + suffix.length(), commentedSuffix);\n          }\n          else if (offset + position + suffix.length() < endOffset) {\n            document.insertString(offset + position + suffix.length(), prefix);\n          }\n        }\n      }\n      if (!(commentedPrefix == null && !prefixes.isEmpty() && prefixes.get(0) == 0)) {\n        document.insertString(offset, prefix);\n      }\n    }\n    CommentByBlockCommentHandler.processDocument(document, marker, commenter, true);\n  }","commit_id":"3088f5a567c9ee5028a6ec0c37d43154a37dca80","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private static void uncommentLine(Block block, int line) {\n    Document document = block.editor.getDocument();\n    Commenter commenter = block.commenters[line - block.startLine];\n    if (commenter == null) commenter = findCommenter(block.editor, block.psiFile, line);\n    if (commenter == null) return;\n\n    final int startOffset = block.startOffsets[line - block.startLine];\n\n    if (commenter instanceof SelfManagingCommenter) {\n      final SelfManagingCommenter selfManagingCommenter = (SelfManagingCommenter)commenter;\n      selfManagingCommenter.uncommentLine(line, startOffset, document, block.commenterStateMap.get(selfManagingCommenter));\n      return;\n    }\n\n    final int endOffset = block.endOffsets[line - block.startLine];\n    if (startOffset == endOffset) {\n      return;\n    }\n    String prefix = commenter.getLineCommentPrefix();\n    if (prefix != null) {\n      CharSequence chars = document.getCharsSequence();\n\n      if (commenter instanceof CommenterWithLineSuffix) {\n        CommenterWithLineSuffix commenterWithLineSuffix = (CommenterWithLineSuffix)commenter;\n        String suffix = commenterWithLineSuffix.getLineCommentSuffix();\n\n\n        int theEnd = endOffset > 0 ? endOffset : document.getLineEndOffset(line);\n        while (theEnd > startOffset && Character.isWhitespace(chars.charAt(theEnd - 1))) {\n          theEnd--;\n        }\n\n\n        String lineText = document.getText(new TextRange(startOffset, theEnd));\n        if (lineText.indexOf(suffix) != -1) {\n          int start = startOffset + lineText.indexOf(suffix);\n          document.deleteString(start, start + suffix.length());\n        }\n      }\n\n      boolean matchesTrimmed = false;\n      boolean commented = CharArrayUtil.regionMatches(chars, startOffset, prefix) ||\n                          (matchesTrimmed = prefix.endsWith(\" \") && CharArrayUtil.regionMatches(chars, startOffset, prefix.trim()));\n      assert commented;\n\n      int charsToDelete = matchesTrimmed ? prefix.trim().length() : prefix.length();\n      int theEnd = endOffset > 0 ? endOffset : chars.length();\n      // if there's exactly one space after line comment prefix and before the text that follows in the same line, delete the space too\n      if (startOffset + charsToDelete < theEnd - 1 && chars.charAt(startOffset + charsToDelete) == ' ') {\n        if (startOffset + charsToDelete == theEnd - 2 || chars.charAt(startOffset + charsToDelete + 1) != ' ') {\n          charsToDelete++;\n        }\n      }\n      document.deleteString(startOffset, startOffset + charsToDelete);\n      return;\n    }\n    String text = document.getCharsSequence().subSequence(startOffset, endOffset).toString();\n\n    prefix = commenter.getBlockCommentPrefix();\n    final String suffix = commenter.getBlockCommentSuffix();\n    if (prefix == null || suffix == null) {\n      return;\n    }\n\n    IntArrayList prefixes = new IntArrayList();\n    IntArrayList suffixes = new IntArrayList();\n    for (int position = 0; position < text.length(); ) {\n      int prefixPos = text.indexOf(prefix, position);\n      if (prefixPos == -1) {\n        break;\n      }\n      prefixes.add(prefixPos);\n      position = prefixPos + prefix.length();\n      int suffixPos = text.indexOf(suffix, position);\n      if (suffixPos == -1) {\n        suffixPos = text.length() - suffix.length();\n      }\n      suffixes.add(suffixPos);\n      position = suffixPos + suffix.length();\n    }\n\n    assert prefixes.size() == suffixes.size();\n\n    for (int i = prefixes.size() - 1; i >= 0; i--) {\n      uncommentRange(document, startOffset + prefixes.get(i), Math.min(startOffset + suffixes.get(i) + suffix.length(), endOffset), commenter);\n    }\n  }","id":55819,"modified_method":"private static void uncommentLine(Block block, int line) {\n    Document document = block.editor.getDocument();\n    Commenter commenter = block.commenters[line - block.startLine];\n    if (commenter == null) commenter = findCommenter(block.editor, block.psiFile, line);\n    if (commenter == null) return;\n\n    final int startOffset = block.startOffsets[line - block.startLine];\n\n    if (commenter instanceof SelfManagingCommenter) {\n      final SelfManagingCommenter selfManagingCommenter = (SelfManagingCommenter)commenter;\n      selfManagingCommenter.uncommentLine(line, startOffset, document, block.commenterStateMap.get(selfManagingCommenter));\n      return;\n    }\n\n    final int endOffset = block.endOffsets[line - block.startLine];\n    if (startOffset == endOffset) {\n      return;\n    }\n    RangeMarker marker = block.editor.getDocument().createRangeMarker(startOffset, endOffset);\n    String prefix = commenter.getLineCommentPrefix();\n    if (prefix != null) {\n      CharSequence chars = document.getCharsSequence();\n\n      if (commenter instanceof CommenterWithLineSuffix) {\n        CommenterWithLineSuffix commenterWithLineSuffix = (CommenterWithLineSuffix)commenter;\n        String suffix = commenterWithLineSuffix.getLineCommentSuffix();\n\n\n        int theEnd = endOffset > 0 ? endOffset : document.getLineEndOffset(line);\n        while (theEnd > startOffset && Character.isWhitespace(chars.charAt(theEnd - 1))) {\n          theEnd--;\n        }\n\n\n        String lineText = document.getText(new TextRange(startOffset, theEnd));\n        if (lineText.indexOf(suffix) != -1) {\n          int start = startOffset + lineText.indexOf(suffix);\n          document.deleteString(start, start + suffix.length());\n        }\n      }\n\n      boolean matchesTrimmed = false;\n      boolean commented = CharArrayUtil.regionMatches(chars, startOffset, prefix) ||\n                          (matchesTrimmed = prefix.endsWith(\" \") && CharArrayUtil.regionMatches(chars, startOffset, prefix.trim()));\n      assert commented;\n\n      int charsToDelete = matchesTrimmed ? prefix.trim().length() : prefix.length();\n      int theEnd = endOffset > 0 ? endOffset : chars.length();\n      // if there's exactly one space after line comment prefix and before the text that follows in the same line, delete the space too\n      if (startOffset + charsToDelete < theEnd - 1 && chars.charAt(startOffset + charsToDelete) == ' ') {\n        if (startOffset + charsToDelete == theEnd - 2 || chars.charAt(startOffset + charsToDelete + 1) != ' ') {\n          charsToDelete++;\n        }\n      }\n      document.deleteString(startOffset, startOffset + charsToDelete);\n      return;\n    }\n    String text = document.getCharsSequence().subSequence(startOffset, endOffset).toString();\n\n    prefix = commenter.getBlockCommentPrefix();\n    final String suffix = commenter.getBlockCommentSuffix();\n    if (prefix == null || suffix == null) {\n      return;\n    }\n\n    IntArrayList prefixes = new IntArrayList();\n    IntArrayList suffixes = new IntArrayList();\n    for (int position = 0; position < text.length(); ) {\n      int prefixPos = text.indexOf(prefix, position);\n      if (prefixPos == -1) {\n        break;\n      }\n      prefixes.add(prefixPos);\n      position = prefixPos + prefix.length();\n      int suffixPos = text.indexOf(suffix, position);\n      if (suffixPos == -1) {\n        suffixPos = text.length() - suffix.length();\n      }\n      suffixes.add(suffixPos);\n      position = suffixPos + suffix.length();\n    }\n\n    assert prefixes.size() == suffixes.size();\n\n    for (int i = prefixes.size() - 1; i >= 0; i--) {\n      uncommentRange(document, startOffset + prefixes.get(i), Math.min(startOffset + suffixes.get(i) + suffix.length(), endOffset), commenter);\n    }\n    CommentByBlockCommentHandler.processDocument(document, marker, commenter, false);\n  }","commit_id":"3088f5a567c9ee5028a6ec0c37d43154a37dca80","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Override\n  public void escape(Document document, TextRange range) {\n    for (int i = range.getEndOffset() - getBlockCommentSuffix().length() - DOUBLE_DASH.length();\n         i >= range.getStartOffset() + getBlockCommentPrefix().length();\n         i--) {\n      if (CharArrayUtil.regionMatches(document.getCharsSequence(), i, DOUBLE_DASH) &&\n          !CharArrayUtil.regionMatches(document.getCharsSequence(), i, getBlockCommentSuffix())) {\n        document.replaceString(i, i + DOUBLE_DASH.length(), ESCAPED);\n      }\n    }\n  }","id":55820,"modified_method":"@Override\n  public void escape(Document document, TextRange range) {\n    String prefix = getBlockCommentPrefix();\n    String suffix = getBlockCommentSuffix();\n\n    int start = range.getStartOffset();\n    if (CharArrayUtil.regionMatches(document.getCharsSequence(), start, prefix)) {\n      start += prefix.length();\n    }\n    int end = range.getEndOffset();\n    if (CharArrayUtil.regionMatches(document.getCharsSequence(), end - suffix.length(), suffix)) {\n      end -= suffix.length();\n    }\n    for (int i = end - DOUBLE_DASH.length(); i >= start; i--) {\n      if (CharArrayUtil.regionMatches(document.getCharsSequence(), i, DOUBLE_DASH) &&\n          !CharArrayUtil.regionMatches(document.getCharsSequence(), i, suffix) &&\n          !CharArrayUtil.regionMatches(document.getCharsSequence(), i - 2, prefix)) {\n        document.replaceString(i, i + DOUBLE_DASH.length(), ESCAPED);\n      }\n    }\n  }","commit_id":"3088f5a567c9ee5028a6ec0c37d43154a37dca80","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void invoke(Project project, Editor editor, PsiFile file) {\n    myProject = project;\n    myEditor = editor;\n    myFile = file;\n\n    myDocument = editor.getDocument();\n\n    if (!myFile.isWritable()) {\n      if (!FileDocumentManager.fileForDocumentCheckedOutSuccessfully(myDocument, project)) {\n        return;\n      }\n    }\n    FeatureUsageTracker.getInstance().triggerFeatureUsed(\"codeassists.comment.block\");\n    final Commenter commenter = getCommenter();\n    if (commenter == null) return;\n\n    final SelectionModel selectionModel = myEditor.getSelectionModel();\n\n    final String prefix = commenter.getBlockCommentPrefix();\n    final String suffix = commenter.getBlockCommentSuffix();\n    if (prefix == null || suffix == null) return;\n\n    TextRange commentedRange = findCommentedRange(commenter);\n    if (commentedRange != null) {\n      final int commentStart = commentedRange.getStartOffset();\n      final int commentEnd = commentedRange.getEndOffset();\n      int selectionStart = commentStart;\n      int selectionEnd = commentEnd;\n      if (selectionModel.hasSelection()) {\n        selectionStart = selectionModel.getSelectionStart();\n        selectionEnd = selectionModel.getSelectionEnd();\n      }\n      if ((commentStart < selectionStart || commentStart >= selectionEnd) && (commentEnd <= selectionStart || commentEnd > selectionEnd)) {\n        commentRange(selectionStart, selectionEnd, prefix, suffix);\n      }\n      else {\n        uncommentRange(commentedRange, prefix, suffix);\n      }\n    }\n    else {\n      if (selectionModel.hasBlockSelection()) {\n        final LogicalPosition start = selectionModel.getBlockStart();\n        final LogicalPosition end = selectionModel.getBlockEnd();\n        int startColumn = Math.min(start.column, end.column);\n        int endColumn = Math.max(start.column, end.column);\n        int startLine = Math.min(start.line, end.line);\n        int endLine = Math.max(start.line, end.line);\n\n        for (int i = startLine; i <= endLine; i++) {\n          editor.getCaretModel().moveToLogicalPosition(new LogicalPosition(i, endColumn));\n          EditorModificationUtil.insertStringAtCaret(editor, suffix, true, true);\n        }\n\n        for (int i = startLine; i <= endLine; i++) {\n          editor.getCaretModel().moveToLogicalPosition(new LogicalPosition(i, startColumn));\n          EditorModificationUtil.insertStringAtCaret(editor, prefix, true, true);\n        }\n      }\n      else if (selectionModel.hasSelection()) {\n        int selectionStart = selectionModel.getSelectionStart();\n        int selectionEnd = selectionModel.getSelectionEnd();\n        commentRange(selectionStart, selectionEnd, prefix, suffix);\n      }\n      else {\n        final LogicalPosition caretPosition = myEditor.getCaretModel().getLogicalPosition();\n        EditorUtil.fillVirtualSpaceUntil(editor, caretPosition.column, caretPosition.line);\n        int caretOffset = myEditor.getCaretModel().getOffset();\n        myDocument.insertString(caretOffset, prefix + suffix);\n        myEditor.getCaretModel().moveToOffset(caretOffset + prefix.length());\n      }\n    }\n  }","id":55821,"modified_method":"public void invoke(Project project, Editor editor, PsiFile file) {\n    myProject = project;\n    myEditor = editor;\n    myFile = file;\n\n    myDocument = editor.getDocument();\n\n    if (!myFile.isWritable()) {\n      if (!FileDocumentManager.fileForDocumentCheckedOutSuccessfully(myDocument, project)) {\n        return;\n      }\n    }\n    FeatureUsageTracker.getInstance().triggerFeatureUsed(\"codeassists.comment.block\");\n    final Commenter commenter = getCommenter();\n    if (commenter == null) return;\n\n    final SelectionModel selectionModel = myEditor.getSelectionModel();\n\n    final String prefix = commenter.getBlockCommentPrefix();\n    final String suffix = commenter.getBlockCommentSuffix();\n    if (prefix == null || suffix == null) return;\n\n    TextRange commentedRange = findCommentedRange(commenter);\n    if (commentedRange != null) {\n      final int commentStart = commentedRange.getStartOffset();\n      final int commentEnd = commentedRange.getEndOffset();\n      int selectionStart = commentStart;\n      int selectionEnd = commentEnd;\n      if (selectionModel.hasSelection()) {\n        selectionStart = selectionModel.getSelectionStart();\n        selectionEnd = selectionModel.getSelectionEnd();\n      }\n      if ((commentStart < selectionStart || commentStart >= selectionEnd) && (commentEnd <= selectionStart || commentEnd > selectionEnd)) {\n        commentRange(selectionStart, selectionEnd, prefix, suffix);\n      }\n      else {\n        uncommentRange(commentedRange, prefix, suffix);\n      }\n    }\n    else {\n      if (selectionModel.hasBlockSelection()) {\n        final LogicalPosition start = selectionModel.getBlockStart();\n        final LogicalPosition end = selectionModel.getBlockEnd();\n\n        assert start != null;\n        assert end != null;\n\n        int startColumn = Math.min(start.column, end.column);\n        int endColumn = Math.max(start.column, end.column);\n        int startLine = Math.min(start.line, end.line);\n        int endLine = Math.max(start.line, end.line);\n\n        for (int i = startLine; i <= endLine; i++) {\n          editor.getCaretModel().moveToLogicalPosition(new LogicalPosition(i, endColumn));\n          EditorModificationUtil.insertStringAtCaret(editor, suffix, true, true);\n        }\n\n        for (int i = startLine; i <= endLine; i++) {\n          editor.getCaretModel().moveToLogicalPosition(new LogicalPosition(i, startColumn));\n          EditorModificationUtil.insertStringAtCaret(editor, prefix, true, true);\n        }\n      }\n      else if (selectionModel.hasSelection()) {\n        int selectionStart = selectionModel.getSelectionStart();\n        int selectionEnd = selectionModel.getSelectionEnd();\n        commentRange(selectionStart, selectionEnd, prefix, suffix);\n      }\n      else {\n        final LogicalPosition caretPosition = myEditor.getCaretModel().getLogicalPosition();\n        EditorUtil.fillVirtualSpaceUntil(editor, caretPosition.column, caretPosition.line);\n        int caretOffset = myEditor.getCaretModel().getOffset();\n        myDocument.insertString(caretOffset, prefix + suffix);\n        myEditor.getCaretModel().moveToOffset(caretOffset + prefix.length());\n      }\n    }\n  }","commit_id":"e5734dc5b0ec9da431475480ec81010cffa513bb","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private TextRange findCommentedRange(final Commenter commenter) {\n    final CharSequence text = myDocument.getCharsSequence();\n    final FileType fileType = myFile.getFileType();\n    if (fileType instanceof AbstractFileType) {\n      Lexer lexer = new CustomFileTypeLexer(((AbstractFileType)fileType).getSyntaxTable());\n      final int caretOffset = myEditor.getCaretModel().getOffset();\n      int commentStart = CharArrayUtil.lastIndexOf(text, commenter.getBlockCommentPrefix(), caretOffset);\n      if (commentStart == -1) return null;\n\n      lexer.start(text, commentStart, text.length(),0);\n      if (lexer.getTokenType() == CustomHighlighterTokenType.MULTI_LINE_COMMENT && lexer.getTokenEnd() >= caretOffset) {\n        return new TextRange(commentStart, lexer.getTokenEnd());\n      }\n      return null;\n    }\n\n    final String prefix = commenter.getBlockCommentPrefix();\n    final String suffix = commenter.getBlockCommentSuffix();\n    TextRange commentedRange = null;\n    PsiElement comment = findCommentAtCaret();\n    if (comment != null) {\n      String commentText = comment.getText();\n      if (!commentText.startsWith(prefix) || !commentText.endsWith(suffix)) {\n        return null;\n      }\n      commentedRange = comment.getTextRange();\n    }\n    else {\n      final SelectionModel selectionModel = myEditor.getSelectionModel();\n      if (selectionModel.hasSelection()) {\n        int selectionStart = selectionModel.getSelectionStart();\n        int selectionEnd = selectionModel.getSelectionEnd();\n        if (selectionEnd - selectionStart >= prefix.length() + suffix.length() &&\n            CharArrayUtil.regionMatches(text, selectionStart, prefix) &&\n            CharArrayUtil.regionMatches(text, selectionEnd - suffix.length(), suffix)) {\n          commentedRange = new TextRange(selectionStart, selectionEnd);\n        }\n      }\n    }\n    return commentedRange;\n  }","id":55822,"modified_method":"@Nullable\n  private TextRange findCommentedRange(final Commenter commenter) {\n    final CharSequence text = myDocument.getCharsSequence();\n    final FileType fileType = myFile.getFileType();\n    if (fileType instanceof AbstractFileType) {\n      Lexer lexer = new CustomFileTypeLexer(((AbstractFileType)fileType).getSyntaxTable());\n      final int caretOffset = myEditor.getCaretModel().getOffset();\n      int commentStart = CharArrayUtil.lastIndexOf(text, commenter.getBlockCommentPrefix(), caretOffset);\n      if (commentStart == -1) return null;\n\n      lexer.start(text, commentStart, text.length(),0);\n      if (lexer.getTokenType() == CustomHighlighterTokenType.MULTI_LINE_COMMENT && lexer.getTokenEnd() >= caretOffset) {\n        return new TextRange(commentStart, lexer.getTokenEnd());\n      }\n      return null;\n    }\n\n    final String prefix = trim(commenter.getBlockCommentPrefix());\n    final String suffix = trim(commenter.getBlockCommentSuffix());\n    if (prefix == null || suffix == null) return null;\n\n    TextRange commentedRange = null;\n    PsiElement comment = findCommentAtCaret();\n    if (comment != null) {\n      String commentText = comment.getText();\n      if (!commentText.startsWith(prefix) || !commentText.endsWith(suffix)) {\n        return null;\n      }\n      commentedRange = comment.getTextRange();\n    }\n    else {\n      final SelectionModel selectionModel = myEditor.getSelectionModel();\n      if (selectionModel.hasSelection()) {\n        int selectionStart = selectionModel.getSelectionStart();\n        int selectionEnd = selectionModel.getSelectionEnd();\n        if (selectionEnd - selectionStart >= prefix.length() + suffix.length() &&\n            CharArrayUtil.regionMatches(text, selectionStart, prefix) &&\n            CharArrayUtil.regionMatches(text, selectionEnd - suffix.length(), suffix)) {\n          commentedRange = new TextRange(selectionStart, selectionEnd);\n        }\n      }\n    }\n    return commentedRange;\n  }","commit_id":"e5734dc5b0ec9da431475480ec81010cffa513bb","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void recalculateWidth() {\n      myLeftWidth = 16;\n      ListModel model = myList.getModel();\n      myTitle.setIcon(EmptyIcon.ICON_16);\n      myTitle.setFont(getTitleFont());\n      int index = 0;\n      while (index < model.getSize()) {\n        Object el = model.getElementAt(index);\n        Object prev = index == 0 ? null : model.getElementAt(index - 1);\n        String title = myTitleIndexes.getTitle(index);\n        if (title != null) {\n          myTitle.setText(title);\n          myLeftWidth = Math.max(myLeftWidth, myTitle.getPreferredSize().width);\n        }\n        index++;\n      }\n\n      myLeftWidth += 10;\n      myTitle.setForeground(Gray._122);\n      myTitle.setAlignmentY(BOTTOM_ALIGNMENT);\n      myLeftPanel.setBorder(new CompoundBorder(new CustomLineBorder(getSeparatorColor(), 0, 0, 0, 1), new EmptyBorder(0, 0, 0, 5)));\n    }","id":55823,"modified_method":"public void recalculateWidth() {\n      myLeftWidth = 16;\n      ListModel model = myList.getModel();\n      myTitle.setIcon(EmptyIcon.ICON_16);\n      myTitle.setFont(getTitleFont());\n      int index = 0;\n      while (index < model.getSize()) {\n        Object el = model.getElementAt(index);\n        Object prev = index == 0 ? null : model.getElementAt(index - 1);\n        String title = myTitleIndexes.getTitle(index);\n        if (title != null) {\n          myTitle.setText(title);\n          myLeftWidth = Math.max(myLeftWidth, myTitle.getPreferredSize().width);\n        }\n        index++;\n      }\n\n      //myLeftWidth += 10;\n      myTitle.setForeground(Gray._122);\n      myTitle.setAlignmentY(BOTTOM_ALIGNMENT);\n      myLeftPanel.setBorder(new CompoundBorder(new CustomLineBorder(getSeparatorColor(), 0, 0, 0, 1), new EmptyBorder(0, 0, 0, 5)));\n    }","commit_id":"e36607b4bfbf32905810824a9ba54f0225b2562d","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private void rebuildList(final String pattern) {\n    if (myCalcThread != null) {\n      myCalcThread.cancel();\n    }\n    final Project project = PlatformDataKeys.PROJECT.getData(DataManager.getInstance().getDataContext(field.getTextEditor()));\n\n    assert project != null;\n    myCalcThread = new CalcThread(project, pattern);\n    myCalcThread.start();\n  }","id":55824,"modified_method":"private void rebuildList(final String pattern) {\n    if (myCalcThread != null) {\n      myCalcThread.cancel();\n    }\n    final Project project = PlatformDataKeys.PROJECT.getData(DataManager.getInstance().getDataContext(field.getTextEditor()));\n\n    assert project != null;\n    myRenderer.myProject = project;\n    myCalcThread = new CalcThread(project, pattern);\n    myCalcThread.start();\n  }","commit_id":"e36607b4bfbf32905810824a9ba54f0225b2562d","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@SuppressWarnings(\"SSBasedInspection\")\n    private void updatePopup() {\n      SwingUtilities.invokeLater(new Runnable() {\n        @Override\n        public void run() {\n          myListModel.update();\n          myList.revalidate();\n          myList.repaint();\n\n          myRenderer.recalculateWidth();\n          if (myPopup == null || !myPopup.isVisible()) {\n            final ActionCallback callback = ListDelegationUtil.installKeyboardDelegation(field.getTextEditor(), myList);\n            final ComponentPopupBuilder builder = JBPopupFactory.getInstance().createComponentPopupBuilder(new JBScrollPane(myList), null);\n            myPopup = builder.setRequestFocus(false).createPopup();\n            Disposer.register(myPopup, new Disposable() {\n              @Override\n              public void dispose() {\n                callback.setDone();\n              }\n            });\n            myPopup.showUnderneathOf(field);\n            ActionManager.getInstance().addAnActionListener(new AnActionListener.Adapter() {\n              @Override\n              public void beforeActionPerformed(AnAction action, DataContext dataContext, AnActionEvent event) {\n                myPopup.cancel();\n              }\n            }, myPopup);\n          }\n          else {\n            myList.revalidate();\n            myList.repaint();\n          }\n          ListScrollingUtil.ensureSelectionExists(myList);\n          if (myList.getModel().getSize() == 0) {\n            //rebuildList(\"\");\n          }\n          else {\n            final Dimension size = myList.getPreferredSize();\n            Dimension sz = new Dimension(Math.max(field.getWidth(), size.width), size.height);\n            if (sz.width > 800 || sz.height > 800) {\n              final int extra = new JBScrollPane().getVerticalScrollBar().getWidth();\n              sz = new Dimension(Math.min(800, Math.max(field.getWidth(), size.width + extra)), Math.min(800, size.height + extra));\n              sz.width += 16;\n            }\n            else {\n              sz.height++;\n              sz.height++;\n              sz.width++;\n              sz.width++;\n            }\n            sz.width = 600;\n            sz.height = 800;\n            myPopup.setSize(sz);\n            final Point screen = field.getLocationOnScreen();\n            final int x = screen.x + field.getWidth() - myPopup.getSize().width;\n\n            myPopup.setLocation(new Point(x, myPopup.getLocationOnScreen().y));\n          }\n        }\n      });\n    }","id":55825,"modified_method":"@SuppressWarnings(\"SSBasedInspection\")\n    private void updatePopup() {\n      myProgressIndicator.checkCanceled();\n      SwingUtilities.invokeLater(new Runnable() {\n        @Override\n        public void run() {\n          myProgressIndicator.checkCanceled();\n          myListModel.update();\n          myList.revalidate();\n          myList.repaint();\n\n          myRenderer.recalculateWidth();\n          if (myPopup == null || !myPopup.isVisible()) {\n            final ActionCallback callback = ListDelegationUtil.installKeyboardDelegation(field.getTextEditor(), myList);\n            final ComponentPopupBuilder builder = JBPopupFactory.getInstance().createComponentPopupBuilder(new JBScrollPane(myList), null);\n            myPopup = builder.setRequestFocus(false).createPopup();\n            Disposer.register(myPopup, new Disposable() {\n              @Override\n              public void dispose() {\n                callback.setDone();\n              }\n            });\n            myPopup.showUnderneathOf(field);\n            ActionManager.getInstance().addAnActionListener(new AnActionListener.Adapter() {\n              @Override\n              public void beforeActionPerformed(AnAction action, DataContext dataContext, AnActionEvent event) {\n                myPopup.cancel();\n              }\n            }, myPopup);\n          }\n          else {\n            myList.revalidate();\n            myList.repaint();\n          }\n          ListScrollingUtil.ensureSelectionExists(myList);\n          if (myList.getModel().getSize() == 0) {\n            //rebuildList(\"\");\n          }\n          else {\n            final Dimension size = myList.getPreferredSize();\n            Dimension sz = new Dimension(Math.max(field.getWidth(), size.width), size.height);\n            if (sz.width > 800 || sz.height > 800) {\n              final int extra = new JBScrollPane().getVerticalScrollBar().getWidth();\n              sz = new Dimension(Math.min(800, Math.max(field.getWidth(), size.width + extra)), Math.min(800, size.height + extra));\n              sz.width += 16;\n            }\n            else {\n              sz.height++;\n              sz.height++;\n              sz.width++;\n              sz.width++;\n            }\n            sz.width = Math.max(600, sz.width);\n            sz.height = Math.max(800, sz.height);\n            myPopup.setSize(sz);\n            final Point screen = field.getLocationOnScreen();\n            final int x = screen.x + field.getWidth() - myPopup.getSize().width;\n\n            myPopup.setLocation(new Point(x, myPopup.getLocationOnScreen().y));\n          }\n        }\n      });\n    }","commit_id":"e36607b4bfbf32905810824a9ba54f0225b2562d","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Override\n    public Component getListCellRendererComponent(JList list, Object value, int index, boolean isSelected, boolean cellHasFocus) {\n      Component cmp = super.getListCellRendererComponent(list, value, index, isSelected, cellHasFocus);\n      if (myLocationString != null || value instanceof BooleanOptionDescription) {\n        final JPanel panel = new JPanel(new BorderLayout());\n        panel.add(cmp, BorderLayout.CENTER);\n        final Component rightComponent;\n        if (value instanceof BooleanOptionDescription) {\n          final OnOffButton button = new OnOffButton();\n          button.setSelected(((BooleanOptionDescription)value).isOptionEnabled());\n          rightComponent = button;\n        }\n        else {\n          rightComponent = myLocation.getListCellRendererComponent(list, value, index, isSelected, cellHasFocus);\n        }\n        panel.add(rightComponent, BorderLayout.EAST);\n        cmp = panel;\n      }\n\n      cmp.setBackground(isSelected ? UIUtil.getListSelectionBackground() : getRightBackground());\n      String title = myTitleIndexes.getTitle(index);\n      myTitle.setText(title == null ? \"\" : title);\n      myLeftPanel.removeAll();\n      myLeftPanel.setBackground(getTitlePanelBackground());\n      myMainPanel.removeAll();\n      myLeftPanel.add(myTitle, BorderLayout.EAST);\n      myMainPanel.add(myLeftPanel, BorderLayout.WEST);\n      myMainPanel.add(cmp, BorderLayout.CENTER);\n      return myMainPanel;\n    }","id":55826,"modified_method":"@Override\n    public Component getListCellRendererComponent(JList list, Object value, int index, boolean isSelected, boolean cellHasFocus) {\n      Component cmp;\n      PsiFile file;\n      myLocationString = null;\n      if (value instanceof VirtualFile && myProject != null && (file = PsiManager.getInstance(myProject).findFile((VirtualFile)value)) != null) {\n          cmp = new GotoFileCellRenderer(list.getWidth()).getListCellRendererComponent(list, file, index, isSelected, cellHasFocus);\n      } else if (value instanceof PsiElement) {\n        cmp = myPsiRenderer.getListCellRendererComponent(list, value, index, isSelected, cellHasFocus);\n      } else {\n        cmp = super.getListCellRendererComponent(list, value, index, isSelected, cellHasFocus);\n      }\n      if (myLocationString != null || value instanceof BooleanOptionDescription) {\n        final JPanel panel = new JPanel(new BorderLayout());\n        panel.add(cmp, BorderLayout.CENTER);\n        final Component rightComponent;\n        if (value instanceof BooleanOptionDescription) {\n          final OnOffButton button = new OnOffButton();\n          button.setSelected(((BooleanOptionDescription)value).isOptionEnabled());\n          rightComponent = button;\n        }\n        else {\n          rightComponent = myLocation.getListCellRendererComponent(list, value, index, isSelected, cellHasFocus);\n        }\n        panel.add(rightComponent, BorderLayout.EAST);\n        cmp = panel;\n      }\n\n      cmp.setBackground(isSelected ? UIUtil.getListSelectionBackground() : getRightBackground());\n      String title = myTitleIndexes.getTitle(index);\n      myTitle.setText(title == null ? \"\" : title);\n      myLeftPanel.removeAll();\n      myLeftPanel.setBackground(getTitlePanelBackground());\n      myMainPanel.removeAll();\n      myLeftPanel.add(myTitle, BorderLayout.EAST);\n      myMainPanel.add(myLeftPanel, BorderLayout.WEST);\n      myMainPanel.add(cmp, BorderLayout.CENTER);\n      return myMainPanel;\n    }","commit_id":"e36607b4bfbf32905810824a9ba54f0225b2562d","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Override\n    public Component getListCellRendererComponent(JList list, Object value, int index, boolean isSelected, boolean cellHasFocus) {\n      Component cmp = super.getListCellRendererComponent(list, value, index, isSelected, cellHasFocus);\n      if (myLocationString != null) {\n        final JPanel panel = new JPanel(new BorderLayout());\n        panel.setBackground(UIUtil.getListBackground());\n        panel.add(cmp, BorderLayout.CENTER);\n        panel.add(myLocation.getListCellRendererComponent(list, value, index, isSelected, cellHasFocus), BorderLayout.EAST);\n        cmp = panel;\n      }\n\n      String title = getTitle(index, value, index == 0 ? null : list.getModel().getElementAt(index -1));\n      if (title == null) {\n        return cmp;\n      } else {\n        JPanel titlePanel = new JPanel(new BorderLayout());\n        JBLabel titleLabel = new JBLabel();\n        titlePanel.add(titleLabel, BorderLayout.NORTH);\n        titlePanel.add(cmp, BorderLayout.CENTER);\n        titlePanel.setBackground(UIUtil.getListBackground());\n        titleLabel.setFont(UIUtil.getLabelFont().deriveFont(Font.BOLD, UIUtil.getFontSize(UIUtil.FontSize.SMALL)));\n        titleLabel.setForeground(UIUtil.getLabelDisabledForeground());\n        titleLabel.setText(\" \" + title);\n        return titlePanel;\n      }\n    }","id":55827,"modified_method":"@Override\n    public Component getListCellRendererComponent(JList list, Object value, int index, boolean isSelected, boolean cellHasFocus) {\n      Component cmp = super.getListCellRendererComponent(list, value, index, isSelected, cellHasFocus);\n      if (myLocationString != null || value instanceof BooleanOptionDescription) {\n        final JPanel panel = new JPanel(new BorderLayout());\n        panel.setBackground(UIUtil.getListBackground(isSelected));\n        panel.add(cmp, BorderLayout.CENTER);\n        final Component rightComponent;\n        if (value instanceof BooleanOptionDescription) {\n          final OnOffButton button = new OnOffButton();\n          button.setSelected(((BooleanOptionDescription)value).isOptionEnabled());\n          rightComponent = button;\n        } else {\n          rightComponent = myLocation.getListCellRendererComponent(list, value, index, isSelected, cellHasFocus);\n        }\n        panel.add(rightComponent, BorderLayout.EAST);\n        cmp = panel;\n      }\n\n      String title = getTitle(index, value, index == 0 ? null : list.getModel().getElementAt(index -1));\n      if (title == null) {\n        return cmp;\n      } else {\n        JPanel titlePanel = new JPanel(new BorderLayout());\n        JBLabel titleLabel = new JBLabel();\n        titlePanel.add(titleLabel, BorderLayout.NORTH);\n        titlePanel.add(cmp, BorderLayout.CENTER);\n        titlePanel.setBackground(UIUtil.getListBackground());\n        titleLabel.setFont(UIUtil.getLabelFont().deriveFont(Font.BOLD, UIUtil.getFontSize(UIUtil.FontSize.SMALL)));\n        titleLabel.setForeground(UIUtil.getLabelDisabledForeground());\n        titleLabel.setText(\" \" + title);\n        return titlePanel;\n      }\n    }","commit_id":"5bbb2796a9f967f3593f8dc07b25f2e05e710f70","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Override\n    public Component getListCellRendererComponent(JList list, Object value, int index, boolean isSelected, boolean cellHasFocus) {\n      return super.getListCellRendererComponent(list, value, index, isSelected, cellHasFocus);\n    }","id":55828,"modified_method":"@Override\n    public Component getListCellRendererComponent(JList list, Object value, int index, boolean isSelected, boolean cellHasFocus) {\n      Component cmp = super.getListCellRendererComponent(list, value, index, isSelected, cellHasFocus);\n\n      String title = getTitle(value, index == 0 ? null : list.getModel().getElementAt(index -1));\n      if (title == null) {\n        return cmp;\n      } else {\n        JPanel titlePanel = new JPanel(new BorderLayout());\n        JBLabel titleLabel = new JBLabel();\n        titlePanel.add(titleLabel, BorderLayout.NORTH);\n        titlePanel.add(this, BorderLayout.CENTER);\n        titlePanel.setBackground(UIUtil.getListBackground());\n        titleLabel.setFont(UIUtil.getLabelFont().deriveFont(Font.ITALIC, UIUtil.getFontSize(UIUtil.FontSize.SMALL)));\n        titleLabel.setForeground(UIUtil.getLabelDisabledForeground());\n        titleLabel.setText(\" \" + title);\n        return titlePanel;\n      }\n    }","commit_id":"7f972b6d436371782a79ca6f3909484b16973f4f","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public SearchEverywhereAction() {\n    createSearchField();\n    LafManager.getInstance().addLafManagerListener(new LafManagerListener() {\n      @Override\n      public void lookAndFeelChanged(LafManager source) {\n        createSearchField();\n      }\n    });\n    myList.setCellRenderer(new MyListRenderer());\n  }","id":55829,"modified_method":"public SearchEverywhereAction() {\n    createSearchField();\n    LafManager.getInstance().addLafManagerListener(new LafManagerListener() {\n      @Override\n      public void lookAndFeelChanged(LafManager source) {\n        createSearchField();\n      }\n    });\n    myList.setCellRenderer(new MyListRenderer());\n    //noinspection SSBasedInspection\n    SwingUtilities.invokeLater(new Runnable() {\n      public void run() {\n        onFocusLost(field.getTextEditor());\n      }\n    });\n  }","commit_id":"7f972b6d436371782a79ca6f3909484b16973f4f","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Override\n  public void actionPerformed(AnActionEvent e) {\n    IdeFocusManager.getInstance(e.getProject()).requestFocus(field.getTextEditor(), true);\n  }","id":55830,"modified_method":"@Override\n  public void actionPerformed(AnActionEvent e) {\n    IdeFocusManager focusManager = IdeFocusManager.getInstance(e.getProject());\n    focusManager.requestFocus(field.getTextEditor(), true);\n  }","commit_id":"7f972b6d436371782a79ca6f3909484b16973f4f","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private void rebuildList(String pattern) {\n    if (myClassModel == null) {\n      final Project project = PlatformDataKeys.PROJECT.getData(DataManager.getInstance().getDataContext(field.getTextEditor()));\n\n      assert project != null;\n\n      myClassModel = new GotoClassModel2(project);\n      myFileModel = new GotoFileModel(project);\n      myActionModel = new GotoActionModel(project, myFocusComponent);\n      myClasses = myClassModel.getNames(true);\n      myFiles = myFileModel.getNames(true);\n      myActions = myActionModel.getNames(true);\n    }\n    final AccessToken token = ApplicationManager.getApplication().acquireReadActionLock();\n    try {\n      List<MatchResult> classes = ContainerUtil.getFirstItems(collectResults(pattern, myClasses, myClassModel), 30);\n      List<MatchResult> files = ContainerUtil.getFirstItems(collectResults(pattern, myFiles, myFileModel), 30);\n      List<MatchResult> actions = ContainerUtil.getFirstItems(collectResults(pattern, myActions, myActionModel), 30);\n      final DefaultListModel listModel = new DefaultListModel();\n      Set<VirtualFile> alreadyAddedFiles = new HashSet<VirtualFile>();\n      for (MatchResult o : classes) {\n        Object[] objects = myClassModel.getElementsByName(o.elementName, true, pattern);\n        for (Object object : objects) {\n          if (!listModel.contains(object)) {\n            listModel.addElement(object);\n            if (object instanceof PsiElement) {\n              VirtualFile file = PsiUtilCore.getVirtualFile((PsiElement)object);\n              if (file != null) {\n                alreadyAddedFiles.add(file);\n              }\n            }\n          }\n        }\n      }\n      for (MatchResult o : files) {\n        Object[] objects = myFileModel.getElementsByName(o.elementName, true, pattern);\n        for (Object object : objects) {\n          if (!listModel.contains(object)) {\n            if (object instanceof PsiFile) {\n              object = ((PsiFile)object).getVirtualFile();\n            }\n            if (!alreadyAddedFiles.contains(object)) {\n              listModel.addElement(object);\n            }\n          }\n        }\n      }\n      for (MatchResult o : actions) {\n        Object[] objects = myActionModel.getElementsByName(o.elementName, true, pattern);\n        for (Object object : objects) {\n          listModel.addElement(object);\n        }\n      }\n\n      //noinspection SSBasedInspection\n      SwingUtilities.invokeLater(new Runnable() {\n        @Override\n        public void run() {\n          myList.setModel(listModel);\n          ListScrollingUtil.ensureSelectionExists(myList);\n          if (myPopup == null || !myPopup.isVisible()) {\n            final ActionCallback callback = ListDelegationUtil.installKeyboardDelegation(field.getTextEditor(), myList);\n            myPopup = JBPopupFactory.getInstance()\n              .createListPopupBuilder(myList)\n              .setRequestFocus(false)\n              .createPopup();\n            Disposer.register(myPopup, new Disposable() {\n              @Override\n              public void dispose() {\n                callback.setDone();\n              }\n            });\n            myPopup.showUnderneathOf(field);\n          } else {\n            myList.revalidate();\n            myList.repaint();\n          }\n\n          if (myList.getModel().getSize() == 0) {\n            myPopup.cancel();\n          } else {\n            final Dimension size = myList.getPreferredSize();\n            myPopup.setSize(new Dimension(Math.min(400, Math.max(field.getWidth(), size.width + 2)), Math.min(600, size.height + 2)));\n            final Point screen = field.getLocationOnScreen();\n            final int x = screen.x + field.getWidth() - myPopup.getSize().width;\n\n            myPopup.setLocation(new Point(x, myPopup.getLocationOnScreen().y));\n          }\n        }\n      });\n    }\n    finally {\n      token.finish();\n    }\n  }","id":55831,"modified_method":"private void rebuildList(String pattern) {\n    if (myClassModel == null) {\n      final Project project = PlatformDataKeys.PROJECT.getData(DataManager.getInstance().getDataContext(field.getTextEditor()));\n\n      assert project != null;\n\n      myClassModel = new GotoClassModel2(project);\n      myFileModel = new GotoFileModel(project);\n      myActionModel = new GotoActionModel(project, myFocusComponent);\n      myClasses = myClassModel.getNames(false);\n      myFiles = myFileModel.getNames(false);\n      myActions = myActionModel.getNames(true);\n    }\n    final AccessToken token = ApplicationManager.getApplication().acquireReadActionLock();\n    try {\n      List<MatchResult> classes = collectResults(pattern, myClasses, myClassModel);\n      List<MatchResult> files = collectResults(pattern, myFiles, myFileModel);\n      List<MatchResult> actions = collectResults(pattern, myActions, myActionModel);\n      final DefaultListModel listModel = new DefaultListModel();\n      Set<VirtualFile> alreadyAddedFiles = new HashSet<VirtualFile>();\n\n      for (MatchResult o : classes) {\n        Object[] objects = myClassModel.getElementsByName(o.elementName, false, pattern);\n        for (Object object : objects) {\n          if (!listModel.contains(object)) {\n            listModel.addElement(object);\n            if (object instanceof PsiElement) {\n              VirtualFile file = PsiUtilCore.getVirtualFile((PsiElement)object);\n              if (file != null) {\n                alreadyAddedFiles.add(file);\n              }\n            }\n          }\n        }\n      }\n      for (MatchResult o : files) {\n        Object[] objects = myFileModel.getElementsByName(o.elementName, false, pattern);\n        for (Object object : objects) {\n          if (!listModel.contains(object)) {\n            if (object instanceof PsiFile) {\n              object = ((PsiFile)object).getVirtualFile();\n            }\n            if (!alreadyAddedFiles.contains(object)) {\n              listModel.addElement(object);\n            }\n          }\n        }\n      }\n      for (MatchResult o : actions) {\n        Object[] objects = myActionModel.getElementsByName(o.elementName, true, pattern);\n        for (Object object : objects) {\n          listModel.addElement(object);\n        }\n      }\n\n      //noinspection SSBasedInspection\n      SwingUtilities.invokeLater(new Runnable() {\n        @Override\n        public void run() {\n          myList.setModel(listModel);\n          if (myPopup == null || !myPopup.isVisible()) {\n            final ActionCallback callback = ListDelegationUtil.installKeyboardDelegation(field.getTextEditor(), myList);\n            myPopup = JBPopupFactory.getInstance()\n              .createListPopupBuilder(myList)\n              .setRequestFocus(false)\n              .createPopup();\n            Disposer.register(myPopup, new Disposable() {\n              @Override\n              public void dispose() {\n                callback.setDone();\n              }\n            });\n            myPopup.showUnderneathOf(field);\n          } else {\n            myList.revalidate();\n            myList.repaint();\n          }\n          ListScrollingUtil.ensureSelectionExists(myList);\n          if (myList.getModel().getSize() == 0) {\n            myPopup.cancel();\n          } else {\n            final Dimension size = myList.getPreferredSize();\n            myPopup.setSize(new Dimension(Math.min(600, Math.max(field.getWidth(), size.width + 2)), Math.min(600, size.height + 2)));\n            final Point screen = field.getLocationOnScreen();\n            final int x = screen.x + field.getWidth() - myPopup.getSize().width;\n\n            myPopup.setLocation(new Point(x, myPopup.getLocationOnScreen().y));\n          }\n        }\n      });\n    }\n    finally {\n      token.finish();\n    }\n  }","commit_id":"7f972b6d436371782a79ca6f3909484b16973f4f","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private void createSearchField() {\n    field = new MySearchTextField();\n    int columns = 20;\n    if (UIUtil.isUnderDarcula() || UIUtil.isUnderAquaLookAndFeel()) {\n      columns = 7;\n    }\n\n    final JTextField editor = field.getTextEditor();\n    editor.setColumns(columns);\n    editor.getDocument().addDocumentListener(new DocumentAdapter() {\n      @Override\n      protected void textChanged(DocumentEvent e) {\n        final String pattern = editor.getText();\n        myAlarm.cancelAllRequests();\n        myAlarm.addRequest(new Runnable() {\n          @Override\n          public void run() {\n            if (StringUtil.isEmpty(pattern)) {\n              //noinspection SSBasedInspection\n              SwingUtilities.invokeLater(new Runnable() {\n                @Override\n                public void run() {\n                  myPopup.cancel();\n                }\n              });\n              return;\n            }\n            rebuildList(pattern);\n          }\n        }, 300);\n      }\n    });\n    editor.addFocusListener(new FocusAdapter() {\n      @Override\n      public void focusGained(FocusEvent e) {\n        final Project project = PlatformDataKeys.PROJECT.getData(DataManager.getInstance().getDataContext(editor));\n\n        editor.setColumns(25);\n        myFocusComponent = e.getOppositeComponent();\n        //noinspection SSBasedInspection\n        SwingUtilities.invokeLater(new Runnable() {\n          @Override\n          public void run() {\n            final JComponent parent = (JComponent)editor.getParent();\n            parent.revalidate();\n            parent.repaint();\n          }\n        });\n      }\n\n      @Override\n      public void focusLost(FocusEvent e) {\n        editor.setColumns(7);\n        myAlarm.cancelAllRequests();\n        myList.setModel(new DefaultListModel());\n\n        //noinspection SSBasedInspection\n        SwingUtilities.invokeLater(new Runnable() {\n          @Override\n          public void run() {\n            final JComponent parent = (JComponent)editor.getParent();\n            parent.revalidate();\n            parent.repaint();\n          }\n        });\n      }\n    });\n  }","id":55832,"modified_method":"private void createSearchField() {\n    field = new MySearchTextField();\n\n    final JTextField editor = field.getTextEditor();\n    onFocusLost(editor);\n    editor.getDocument().addDocumentListener(new DocumentAdapter() {\n      @Override\n      protected void textChanged(DocumentEvent e) {\n        final String pattern = editor.getText();\n        myAlarm.cancelAllRequests();\n        myAlarm.addRequest(new Runnable() {\n          @Override\n          public void run() {\n            if (StringUtil.isEmpty(pattern)) {\n              //noinspection SSBasedInspection\n              SwingUtilities.invokeLater(new Runnable() {\n                @Override\n                public void run() {\n                  if (myPopup != null && myPopup.isVisible()) {\n                    myPopup.cancel();\n                  }\n                }\n              });\n              return;\n            }\n            rebuildList(pattern);\n          }\n        }, 300);\n      }\n    });\n    editor.addFocusListener(new FocusAdapter() {\n      @Override\n      public void focusGained(FocusEvent e) {\n        final Project project = PlatformDataKeys.PROJECT.getData(DataManager.getInstance().getDataContext(editor));\n        field.setText(\"\");\n        field.getTextEditor().setForeground(UIUtil.getLabelForeground());\n\n        editor.setColumns(25);\n        myFocusComponent = e.getOppositeComponent();\n        //noinspection SSBasedInspection\n        SwingUtilities.invokeLater(new Runnable() {\n          @Override\n          public void run() {\n            final JComponent parent = (JComponent)editor.getParent();\n            parent.revalidate();\n            parent.repaint();\n          }\n        });\n      }\n\n      @Override\n      public void focusLost(FocusEvent e) {\n        onFocusLost(editor);\n      }\n    });\n\n    editor.addKeyListener(new KeyAdapter() {\n      @Override\n      public void keyPressed(KeyEvent e) {\n        int keyCode = e.getKeyCode();\n        if (keyCode == KeyEvent.VK_ESCAPE && StringUtil.isEmpty(editor.getText())) {\n          IdeFocusManager focusManager = IdeFocusManager.findInstanceByComponent(editor);\n          focusManager.requestDefaultFocus(true);\n        } else if (keyCode == KeyEvent.VK_ENTER) {\n          doNavigate();\n        }\n      }\n    });\n  }","commit_id":"7f972b6d436371782a79ca6f3909484b16973f4f","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Override\n    protected void customizeCellRenderer(JList list, Object value, int index, boolean selected, boolean hasFocus) {\n      AccessToken token = ApplicationManager.getApplication().acquireReadActionLock();\n      try {\n        if (value instanceof PsiNamedElement) {\n          String name = ((PsiNamedElement)value).getName();\n          assert name != null;\n          append(name);\n        }\n        else if (value instanceof VirtualFile) {\n          append(((VirtualFile)value).getName());\n        }\n        else {\n          append(value.toString());\n        }\n      }\n      finally {\n        token.finish();\n      }\n    }","id":55833,"modified_method":"@Override\n    protected void customizeCellRenderer(JList list, Object value, int index, boolean selected, boolean hasFocus) {\n      AccessToken token = ApplicationManager.getApplication().acquireReadActionLock();\n      try {\n        if (value instanceof PsiElement) {\n          String name = myClassModel.getElementName(value);\n          assert name != null;\n          append(\"    \" + name);\n        }\n        else if (value instanceof VirtualFile) {\n          append(\"    \" + ((VirtualFile)value).getName());\n        }\n        else {\n          append(\"    \" + value.toString());\n        }\n      }\n      finally {\n        token.finish();\n      }\n    }","commit_id":"7f972b6d436371782a79ca6f3909484b16973f4f","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public MySearchTextField() {\n      super(false);\n    }","id":55834,"modified_method":"public MySearchTextField() {\n      super(false);\n      setOpaque(false);\n      getTextEditor().setOpaque(false);\n    }","commit_id":"7f972b6d436371782a79ca6f3909484b16973f4f","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@NotNull\n  private static String getLambdaDescription(@NotNull PsiLambdaExpression e) {\n    boolean isDumb = DumbService.isDumb(e.getProject());\n    StringBuilder sb = new StringBuilder(\"lambda\");\n    PsiType functionalInterfaceType = isDumb ? null : e.getFunctionalInterfaceType();\n    if (functionalInterfaceType != null) {\n      String shortClassName = PsiNameHelper.getShortClassName(functionalInterfaceType.getCanonicalText());\n      sb.append(\" \").append(StringUtil.htmlEmphasize(shortClassName));\n    }\n    PsiParameter[] parameters = e.getParameterList().getParameters();\n    if (parameters.length > 0) {\n      sb.append(\" (\");\n      for (int i = 0; i < parameters.length; i++) {\n        if (i > 0) sb.append(\", \");\n        String str = isDumb ? null : PsiNameHelper.getShortClassName(parameters[i].getType().getCanonicalText());\n        if (StringUtil.isEmpty(str)) str = StringUtil.notNullize(parameters[i].getName());\n        sb.append(StringUtil.htmlEmphasize(str));\n      }\n      sb.append(\")\");\n    }\n    return sb.toString();\n  }","id":55835,"modified_method":"@NotNull\n  private static String getLambdaDescription(@NotNull PsiLambdaExpression e) {\n    boolean isDumb = DumbService.isDumb(e.getProject());\n    StringBuilder sb = new StringBuilder(\"lambda\");\n    PsiType functionalInterfaceType = isDumb ? null : e.getFunctionalInterfaceType();\n    if (functionalInterfaceType != null) {\n      String shortClassName = getShortClassName(functionalInterfaceType.getCanonicalText(false));\n      sb.append(\" \").append(htmlEmphasize(shortClassName));\n    }\n    appendParameters(e, sb, true, isDumb);\n    return sb.toString();\n  }","commit_id":"71f0e6f390ece64dd3aa031e4bf2434aea80f35f","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@NotNull\n  @Override\n  public String getElementInfo(@NotNull PsiElement e) {\n    if (e instanceof PsiLambdaExpression) {\n      PsiType type = DumbService.isDumb(e.getProject()) ? null : ((PsiFunctionalExpression)e).getFunctionalInterfaceType();\n      return type == null ? \"<lambda>\" : \"lambda \" + PsiNameHelper.getShortClassName(type.getCanonicalText());\n    }\n    return ElementDescriptionUtil.getElementDescription(e, UsageViewShortNameLocation.INSTANCE);\n  }","id":55836,"modified_method":"@NotNull\n  @Override\n  public String getElementInfo(@NotNull PsiElement e) {\n    if (e instanceof PsiLambdaExpression) {\n      PsiType type = DumbService.isDumb(e.getProject()) ? null : ((PsiFunctionalExpression)e).getFunctionalInterfaceType();\n      return type == null ? \"<lambda>\" : \"lambda \" + getShortClassName(type.getCanonicalText());\n    }\n    String description = ElementDescriptionUtil.getElementDescription(e, UsageViewShortNameLocation.INSTANCE);\n    String suffix = e instanceof PsiParameterListOwner? \"()\" :\n                    //e instanceof PsiAnonymousClass || e instanceof PsiClassInitializer ? \" {}\" :\n                    null;\n    return suffix != null ? description + suffix : description;\n  }","commit_id":"71f0e6f390ece64dd3aa031e4bf2434aea80f35f","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Nullable\n  @Override\n  public String getElementTooltip(@NotNull PsiElement e) {\n    if (e instanceof PsiLambdaExpression) return getLambdaDescription((PsiLambdaExpression)e);\n    return ElementDescriptionUtil.getElementDescription(e, RefactoringDescriptionLocation.WITH_PARENT);\n  }","id":55837,"modified_method":"@Nullable\n  @Override\n  public String getElementTooltip(@NotNull PsiElement e) {\n    if (e instanceof PsiLambdaExpression) return getLambdaDescription((PsiLambdaExpression)e);\n    if (e instanceof PsiMethod) return getMethodPresentableText((PsiMethod)e);\n    return ElementDescriptionUtil.getElementDescription(e, RefactoringDescriptionLocation.WITH_PARENT);\n  }","commit_id":"71f0e6f390ece64dd3aa031e4bf2434aea80f35f","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public static String getType(@NotNull PsiElement psiElement) {\n    if (psiElement instanceof PsiMetaOwner) {\n      final PsiMetaData metaData = ((PsiMetaOwner)psiElement).getMetaData();\n      if (metaData instanceof PsiPresentableMetaData) {\n        return ((PsiPresentableMetaData)metaData).getTypeName();\n      }\n    }\n\n    if (psiElement instanceof PsiFile) {\n      return LangBundle.message(\"terms.file\");\n    }\n    if (psiElement instanceof PsiDirectory) {\n      return LangBundle.message(\"terms.directory\");\n    }\n\n    final Language lang = psiElement.getLanguage();\n    FindUsagesProvider provider = LanguageFindUsages.INSTANCE.forLanguage(lang);\n    final String type = provider.getType(psiElement);\n    if (StringUtil.isNotEmpty(type)) {\n      return type;\n    }\n\n    return TypeNameManager.getTypeName(psiElement.getClass());\n  }","id":55838,"modified_method":"public static String getType(@NotNull PsiElement psiElement) {\n    return ElementDescriptionUtil.getElementDescription(psiElement, UsageViewTypeLocation.INSTANCE);\n  }","commit_id":"a5aa7765d552dba6c668cd76199f59ab3e3be57f","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public static String getLongName(final PsiElement psiElement) {\n    LOG.assertTrue(psiElement.isValid());\n    final String desc = ElementDescriptionUtil.getElementDescription(psiElement, UsageViewLongNameLocation.INSTANCE);\n    return desc == null ? \"\" : desc;\n  }","id":55839,"modified_method":"public static String getLongName(final PsiElement psiElement) {\n    LOG.assertTrue(psiElement.isValid());\n    return ElementDescriptionUtil.getElementDescription(psiElement, UsageViewLongNameLocation.INSTANCE);\n  }","commit_id":"a5aa7765d552dba6c668cd76199f59ab3e3be57f","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public static String getShortName(final PsiElement psiElement) {\n    LOG.assertTrue(psiElement.isValid());\n    final String name = ElementDescriptionUtil.getElementDescription(psiElement, UsageViewShortNameLocation.INSTANCE);\n    return name == null ? \"\" : name;\n  }","id":55840,"modified_method":"public static String getShortName(final PsiElement psiElement) {\n    LOG.assertTrue(psiElement.isValid());\n    return ElementDescriptionUtil.getElementDescription(psiElement, UsageViewShortNameLocation.INSTANCE);\n  }","commit_id":"a5aa7765d552dba6c668cd76199f59ab3e3be57f","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private Rule toRule(String repositoryKey, Class clazz, org.sonar.check.Rule ruleAnnotation) {\n    String ruleKey = StringUtils.defaultIfEmpty(ruleAnnotation.key(), clazz.getCanonicalName());\n    Rule rule = Rule.create(repositoryKey, ruleKey, ruleAnnotation.name());\n    rule.setDescription(ruleAnnotation.description());\n    rule.setRulesCategory(RulesCategory.fromIsoCategory(ruleAnnotation.isoCategory()));\n    rule.setPriority(RulePriority.fromCheckPriority(ruleAnnotation.priority()));\n    rule.setCardinality(ruleAnnotation.cardinality());\n\n    Field[] fields = clazz.getDeclaredFields();\n    if (fields != null) {\n      for (Field field : fields) {\n        addRuleProperty(rule, field);\n      }\n    }\n\n    return rule;\n  }","id":55841,"modified_method":"private Rule toRule(String repositoryKey, Class clazz, org.sonar.check.Rule ruleAnnotation) {\n    String ruleKey = StringUtils.defaultIfEmpty(ruleAnnotation.key(), clazz.getCanonicalName());\n    String ruleName = StringUtils.defaultIfEmpty(ruleAnnotation.name(), ruleKey);\n    Rule rule = Rule.create(repositoryKey, ruleKey, ruleName);\n    rule.setDescription(ruleAnnotation.description());\n    rule.setRulesCategory(RulesCategory.fromIsoCategory(ruleAnnotation.isoCategory()));\n    rule.setPriority(RulePriority.fromCheckPriority(ruleAnnotation.priority()));\n    rule.setCardinality(ruleAnnotation.cardinality());\n\n    Field[] fields = clazz.getDeclaredFields();\n    if (fields != null) {\n      for (Field field : fields) {\n        addRuleProperty(rule, field);\n      }\n    }\n\n    return rule;\n  }","commit_id":"f295fab3f8650f33dd132fa6060d69f3c0306671","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"private Rule toRule(String repositoryKey, Class clazz, Check checkAnnotation) {\n    String ruleKey = StringUtils.defaultIfEmpty(checkAnnotation.key(), clazz.getCanonicalName());\n    Rule rule = Rule.create(repositoryKey, ruleKey, checkAnnotation.title());\n    rule.setDescription(checkAnnotation.description());\n    rule.setRulesCategory(RulesCategory.fromIsoCategory(checkAnnotation.isoCategory()));\n    rule.setPriority(RulePriority.fromCheckPriority(checkAnnotation.priority()));\n\n    Field[] fields = clazz.getDeclaredFields();\n    if (fields != null) {\n      for (Field field : fields) {\n        addCheckProperty(rule, field);\n      }\n    }\n    return rule;\n  }","id":55842,"modified_method":"private Rule toRule(String repositoryKey, Class clazz, Check checkAnnotation) {\n    String ruleKey = StringUtils.defaultIfEmpty(checkAnnotation.key(), clazz.getCanonicalName());\n    String ruleName = StringUtils.defaultIfEmpty(checkAnnotation.title(), ruleKey);\n    Rule rule = Rule.create(repositoryKey, ruleKey, ruleName);\n    rule.setDescription(checkAnnotation.description());\n    rule.setRulesCategory(RulesCategory.fromIsoCategory(checkAnnotation.isoCategory()));\n    rule.setPriority(RulePriority.fromCheckPriority(checkAnnotation.priority()));\n\n    Field[] fields = clazz.getDeclaredFields();\n    if (fields != null) {\n      for (Field field : fields) {\n        addCheckProperty(rule, field);\n      }\n    }\n    return rule;\n  }","commit_id":"f295fab3f8650f33dd132fa6060d69f3c0306671","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"private void innerHandleMethodGET(URI uri, HTTPRequest httprequest, ToadletContext ctx, int recursion)\n\t\t\tthrows ToadletContextClosedException, IOException, RedirectException {\n\n\t\tString ks = uri.getPath();\n\t\t\n\t\tMultiValueTable<String,String> headers = ctx.getHeaders();\n\t\tfinal String ua = headers.get(\"user-agent\");\n\t\tfinal String accept = headers.get(\"accept\");\n\t\tif(logMINOR) Logger.minor(this, \"UA = \"+ua+\" accept = \"+accept);\n\t\tfinal boolean canSendProgress =\n\t\t\tisBrowser(ua) && !ctx.disableProgressPage() && (accept == null || accept.indexOf(\"text/html\") > -1) && !httprequest.isParameterSet(\"forcedownload\");\n\n\t\tlong defaultMaxSize = canSendProgress ? MAX_LENGTH_WITH_PROGRESS : MAX_LENGTH_NO_PROGRESS;\n\t\t\n\t\t// max-retries\n\t\t// Less than -1 = use default.\n\t\t// 0 = one try only, don't retry\n\t\t// 1 = two tries\n\t\t// 2 = three tries\n\t\t// 3 or more = GO INTO COOLDOWN EVERY 3 TRIES! TAKES *MUCH* LONGER!!! STRONGLY NOT RECOMMENDED!!!\n\t\tint maxRetries = httprequest.getIntParam(\"max-retries\", -2);\n\t\t\n\t\tlong maxSize;\n\t\tlong maxSizeDownload;\n\n\t\tboolean restricted = (container.publicGatewayMode() && !ctx.isAllowedFullAccess());\n\n\t\tboolean overrideSize = false;\n\t\tmaxSize = defaultMaxSize;\n\t\tmaxSizeDownload = MAX_LENGTH_WITH_PROGRESS;\n\t\tif(!restricted) {\n\t\t\tif(httprequest.isParameterSet(\"max-size\")) {\n\t\t\t\tmaxSize = maxSizeDownload = httprequest.getLongParam(\"max-size\", defaultMaxSize);\n\t\t\t\toverrideSize = true;\n\t\t\t}\n\t\t}\n\n\t\tif (ks.equals(\"/\")) {\n\t\t\tif (httprequest.isParameterSet(\"key\")) {\n\t\t\t\tString k = httprequest.getParam(\"key\");\n\t\t\t\tFreenetURI newURI;\n\t\t\t\ttry {\n\t\t\t\t\tnewURI = new FreenetURI(k);\n\t\t\t\t} catch (MalformedURLException e) {\n\t\t\t\t\tLogger.normal(this, \"Invalid key: \"+e+\" for \"+k, e);\n\t\t\t\t\tsendErrorPage(ctx, 404, l10n(\"notFoundTitle\"), NodeL10n.getBase().getString(\"FProxyToadlet.invalidKeyWithReason\", new String[] { \"reason\" }, new String[] { e.toString() }));\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif(logMINOR) Logger.minor(this, \"Redirecting to FreenetURI: \"+newURI);\n\t\t\t\tString requestedMimeType = httprequest.getParam(\"type\");\n\t\t\t\tString location = getLink(newURI, requestedMimeType, maxSize, httprequest.getParam(\"force\", null), httprequest.isParameterSet(\"forcedownload\"), maxRetries, overrideSize);\n\t\t\t\twriteTemporaryRedirect(ctx, null, location);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tString querystring = uri.getQuery();\n\n\t\t\t\tif (querystring == null) {\n\t\t\t\t\tthrow new RedirectException(welcome);\n\t\t\t\t} else {\n\t\t\t\t\t// TODP possibly a proper URLEncode method\n\t\t\t\t\tquerystring = querystring.replace(' ', '+');\n\t\t\t\t\tthrow new RedirectException(\"/welcome/?\" + querystring);\n\t\t\t\t}\n\t\t\t} catch (URISyntaxException e) {\n\t\t\t\t// HUH!?!\n\t\t\t}\n\t\t}else if(ks.equals(\"/favicon.ico\")){\n\t\t\tbyte[] buf = new byte[1024];\n\t\t\tint len;\n\t\t\tInputStream strm = getClass().getResourceAsStream(\"staticfiles/favicon.ico\");\n\n\t\t\ttry {\n\t\t\t\tif (strm == null) {\n\t\t\t\t\tthis.sendErrorPage(ctx, 404, l10n(\"pathNotFoundTitle\"), l10n(\"pathNotFound\"));\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tctx.sendReplyHeaders(200, \"OK\", null, \"image/x-icon\", strm.available());\n\n\t\t\t\twhile ( (len = strm.read(buf)) > 0) {\n\t\t\t\t\tctx.writeData(buf, 0, len);\n\t\t\t\t}\n\t\t\t} finally {\n\t\t\t\tCloser.close(strm);\n\t\t\t}\n\t\t\treturn;\n\t\t} else if(ks.startsWith(\"/feed/\") || ks.equals(\"/feed\")) {\n\t\t\t//TODO Better way to find the host. Find if https is used?\n\t\t\tString host = ctx.getHeaders().get(\"host\");\n\t\t\tString atom = core.alerts.getAtom(\"http://\" + host);\n\t\t\tbyte[] buf = atom.getBytes(\"UTF-8\");\n\t\t\tctx.sendReplyHeaders(200, \"OK\", null, \"application/atom+xml\", buf.length);\n\t\t\tctx.writeData(buf, 0, buf.length);\n\t\t\treturn;\n\t\t}else if(ks.equals(\"/robots.txt\") && ctx.doRobots()){\n\t\t\tthis.writeTextReply(ctx, 200, \"Ok\", \"User-agent: *\\nDisallow: /\");\n\t\t\treturn;\n\t\t}else if(ks.startsWith(\"/darknet/\") || ks.equals(\"/darknet\")) { //TODO (pre-build 1045 url format) remove when obsolete\n\t\t\twritePermanentRedirect(ctx, \"obsoleted\", \"/friends/\");\n\t\t\treturn;\n\t\t}else if(ks.startsWith(\"/opennet/\") || ks.equals(\"/opennet\")) { //TODO (pre-build 1045 url format) remove when obsolete\n\t\t\twritePermanentRedirect(ctx, \"obsoleted\", \"/strangers/\");\n\t\t\treturn;\n\t\t} else if(ks.startsWith(\"/queue/\")) {\n\t\t\twritePermanentRedirect(ctx, \"obsoleted\", \"/downloads/\");\n\t\t\treturn;\n\t\t} else if(ks.startsWith(\"/config/\")) {\n\t\t\twritePermanentRedirect(ctx, \"obsoleted\", \"/config/node\");\n\t\t\treturn;\n\t\t}\n\n\t\tif(ks.startsWith(\"/\"))\n\t\t\tks = ks.substring(1);\n\n\t\t//first check of httprange before get\n\t\t// only valid number format is checked here\n\t\tString rangeStr = ctx.getHeaders().get(\"range\");\n\t\tif (rangeStr != null) {\n\t\t\ttry {\n\t\t\t\tparseRange(rangeStr);\n\t\t\t} catch (HTTPRangeException e) {\n\t\t\t\tLogger.normal(this, \"Invalid Range Header: \"+rangeStr, e);\n\t\t\t\tctx.sendReplyHeaders(416, \"Requested Range Not Satisfiable\", null, null, 0);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\tFreenetURI key;\n\t\ttry {\n\t\t\tkey = new FreenetURI(ks);\n\t\t} catch (MalformedURLException e) {\n\t\t\tPageNode page = ctx.getPageMaker().getPageNode(l10n(\"invalidKeyTitle\"), ctx);\n\t\t\tHTMLNode pageNode = page.outer;\n\t\t\tHTMLNode contentNode = page.content;\n\n\t\t\tHTMLNode errorInfobox = contentNode.addChild(\"div\", \"class\", \"infobox infobox-error\");\n\t\t\terrorInfobox.addChild(\"div\", \"class\", \"infobox-header\", NodeL10n.getBase().getString(\"FProxyToadlet.invalidKeyWithReason\", new String[] { \"reason\" }, new String[] { e.toString() }));\n\t\t\tHTMLNode errorContent = errorInfobox.addChild(\"div\", \"class\", \"infobox-content\");\n\t\t\terrorContent.addChild(\"#\", l10n(\"expectedKeyButGot\"));\n\t\t\terrorContent.addChild(\"code\", ks);\n\t\t\terrorContent.addChild(\"br\");\n\t\t\terrorContent.addChild(ctx.getPageMaker().createBackLink(ctx, l10n(\"goBack\")));\n\t\t\terrorContent.addChild(\"br\");\n\t\t\taddHomepageLink(errorContent);\n\n\t\t\tthis.writeHTMLReply(ctx, 400, l10n(\"invalidKeyTitle\"), pageNode.generate());\n\t\t\treturn;\n\t\t}\n\n\t\tFetchContext fctx = getFetchContext(maxSize);\n\t\t// max-size=-1 => use default\n\t\tmaxSize = fctx.maxOutputLength;\n\n\t\t//We should run the ContentFilter by default\n\t\tString forceString = httprequest.getParam(\"force\");\n\t\tlong now = System.currentTimeMillis();\n\t\tboolean force = false;\n\t\tif(forceString != null) {\n\t\t\tif(forceString.equals(getForceValue(key, now)) ||\n\t\t\t\t\tforceString.equals(getForceValue(key, now-FORCE_GRAIN_INTERVAL)))\n\t\t\t\tforce = true;\n\t\t}\n\t\tif(restricted)\n\t\t\tmaxRetries = -2;\n\t\tif(maxRetries >= -1) {\n\t\t\tfctx.maxNonSplitfileRetries = maxRetries;\n\t\t\tfctx.maxSplitfileBlockRetries = maxRetries;\n\t\t}\n\t\tif (!force && !httprequest.isParameterSet(\"forcedownload\")) fctx.filterData = true;\n\t\telse if(logMINOR) Logger.minor(this, \"Content filter disabled via request parameter\");\n\t\t//Load the fetch context with the callbacks needed for web-pushing, if enabled\n\t\tif(container.enableInlinePrefetch()) {\n\t\t\tfctx.prefetchHook = new FoundURICallback() {\n\n\t\t\t\tList<FreenetURI> uris = new ArrayList<FreenetURI>();\n\t\t\t\t\n\t\t\t\t@Override\n\t\t\t\tpublic void foundURI(FreenetURI uri) {\n\t\t\t\t\t// Ignore\n\t\t\t\t}\n\n\t\t\t\t@Override\n\t\t\t\tpublic void foundURI(FreenetURI uri, boolean inline) {\n\t\t\t\t\tif(!inline) return;\n\t\t\t\t\tif(logMINOR) Logger.minor(this, \"Prefetching \"+uri);\n\t\t\t\t\tsynchronized(this) {\n\t\t\t\t\t\tif(uris.size() < MAX_PREFETCH)\n\t\t\t\t\t\t\t// FIXME Maybe we should do this randomly, but since it's a DoS protection (in an obscure feature), if so we should do it in constant space!\n\t\t\t\t\t\t\turis.add(uri);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t@Override\n\t\t\t\tpublic void onText(String text, String type, URI baseURI) {\n\t\t\t\t\t// Ignore\n\t\t\t\t}\n\n\t\t\t\t@Override\n\t\t\t\tpublic void onFinishedPage() {\n\t\t\t\t\tcore.node.executor.execute(new Runnable() {\n\n\t\t\t\t\t\t@Override\n\t\t\t\t\t\tpublic void run() {\n\t\t\t\t\t\t\tfor(FreenetURI uri : uris) {\n\t\t\t\t\t\t\t\tclient.prefetch(uri, 60*1000, 512*1024, prefetchAllowedTypes);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t};\n\n\t\t}\n\t\tif(container.isFProxyWebPushingEnabled()) fctx.tagReplacer = new PushingTagReplacerCallback(core.getFProxy().fetchTracker, defaultMaxSize, ctx);\n\n\t\tString requestedMimeType = httprequest.getParam(\"type\", null);\n\t\tfctx.overrideMIME = requestedMimeType;\n\t\tString override = (requestedMimeType == null) ? \"\" : \"?type=\"+URLEncoder.encode(requestedMimeType,true);\n\t\tString maybeCharset = httprequest.isParameterSet(\"maybecharset\") ? httprequest.getParam(\"maybecharset\", null) : null;\n\t\tfctx.charset = maybeCharset;\n\t\tif(override.equals(\"\") && maybeCharset != null)\n\t\t\toverride = \"?maybecharset=\"+URLEncoder.encode(maybeCharset, true);\n\t\t// No point passing ?force= across a redirect, since the key will change.\n\t\t// However, there is every point in passing ?forcedownload.\n\t\tif(httprequest.isParameterSet(\"forcedownload\")) {\n\t\t\tif(override.length() == 0) override = \"?forcedownload\";\n\t\t\telse override = override+\"&forcedownload\";\n\t\t}\n\n\t\tBucket data = null;\n\t\tString mimeType = null;\n\t\tString referer = sanitizeReferer(ctx);\n\t\tFetchException fe = null;\n\n\n\t\tFProxyFetchResult fr = null;\n\n\t\t\tFProxyFetchWaiter fetch = null;\n\t\t\ttry {\n\t\t\t\tfetch = fetchTracker.makeFetcher(key, maxSize, fctx, ctx.getReFilterPolicy());\n\t\t\t} catch (FetchException e) {\n\t\t\t\tfe = fr.failed;\n\t\t\t}\n\t\t\tif(fetch != null)\n\t\t\twhile(true) {\n\t\t\tfr = fetch.getResult(!canSendProgress);\n\t\t\tif(fr.hasData()) {\n\n\t\t\t\tif(fr.getFetchCount() > 1 && !fr.hasWaited() && fr.getFetchCount() > 1 && key.isUSK() && context.uskManager.lookupKnownGood(USK.create(key)) > key.getSuggestedEdition()) {\n\t\t\t\t\tLogger.normal(this, \"Loading later edition...\");\n\t\t\t\t\tfetch.progress.requestImmediateCancel();\n\t\t\t\t\tfr = null;\n\t\t\t\t\tfetch = null;\n\t\t\t\t\ttry {\n\t\t\t\t\t\tfetch = fetchTracker.makeFetcher(key, maxSize, fctx, ctx.getReFilterPolicy());\n\t\t\t\t\t} catch (FetchException e) {\n\t\t\t\t\t\tfe = fr.failed;\n\t\t\t\t\t}\n\t\t\t\t\tif(fetch == null) break;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tif(logMINOR) Logger.minor(this, \"Found data\");\n\t\t\t\tdata = new NoFreeBucket(fr.data);\n\t\t\t\tmimeType = fr.mimeType;\n\t\t\t\tfetch.close(); // Not waiting any more, but still locked the results until sent\n\t\t\t\tbreak;\n\t\t\t} else if(fr.failed != null) {\n\t\t\t\tif(logMINOR) Logger.minor(this, \"Request failed\");\n\t\t\t\tfe = fr.failed;\n\t\t\t\tfetch.close(); // Not waiting any more, but still locked the results until sent\n\t\t\t\tbreak;\n\t\t\t} else if(canSendProgress) {\n\t\t\t\tif(logMINOR) Logger.minor(this, \"Still in progress\");\n\t\t\t\t// Still in progress\n\t\t\t\tboolean isJsEnabled=ctx.getContainer().isFProxyJavascriptEnabled() && ua != null && !ua.contains(\"AppleWebKit/\");\n\t\t\t\tboolean isWebPushingEnabled = false;\n\t\t\t\tPageNode page = ctx.getPageMaker().getPageNode(l10n(\"fetchingPageTitle\"), ctx);\n\t\t\t\tHTMLNode pageNode = page.outer;\n\t\t\t\tString location = getLink(key, requestedMimeType, maxSize, httprequest.getParam(\"force\", null), httprequest.isParameterSet(\"forcedownload\"), maxRetries, overrideSize);\n\t\t\t\tHTMLNode headNode=page.headNode;\n\t\t\t\tif(isJsEnabled){\n\t\t\t\t\t//If the user has enabled javascript, we add a <noscript> http refresh(if he has disabled it in the browser)\n\t\t\t\t\theadNode.addChild(\"noscript\").addChild(\"meta\", \"http-equiv\", \"Refresh\").addAttribute(\"content\", \"2;URL=\" + location);\n\t\t\t\t\t\t// If pushing is disabled, but js is enabled, then we add the original progresspage.js\n\t\t\t\t\t\tif ((isWebPushingEnabled = ctx.getContainer().isFProxyWebPushingEnabled()) == false) {\n\t\t\t\t\t\t\tHTMLNode scriptNode = headNode.addChild(\"script\", \"//abc\");\n\t\t\t\t\t\t\tscriptNode.addAttribute(\"type\", \"text/javascript\");\n\t\t\t\t\t\t\tscriptNode.addAttribute(\"src\", \"/static/js/progresspage.js\");\n\t\t\t\t\t\t}\n\t\t\t\t}else{\n\t\t\t\t\t//If he disabled it, we just put the http refresh meta, without the noscript\n\t\t\t\t\theadNode.addChild(\"meta\", \"http-equiv\", \"Refresh\").addAttribute(\"content\", \"2;URL=\" + location);\n\t\t\t\t}\n\t\t\t\tHTMLNode contentNode = page.content;\n\t\t\t\tHTMLNode infobox = contentNode.addChild(\"div\", \"class\", \"infobox infobox-information\");\n\t\t\t\tinfobox.addChild(\"div\", \"class\", \"infobox-header\", l10n(\"fetchingPageBox\"));\n\t\t\t\tHTMLNode infoboxContent = infobox.addChild(\"div\", \"class\", \"infobox-content\");\n\t\t\t\tinfoboxContent.addAttribute(\"id\", \"infoContent\");\n\t\t\t\tinfoboxContent.addChild(new ProgressInfoElement(fetchTracker, key, fctx, maxSize, core.isAdvancedModeEnabled(), ctx, isWebPushingEnabled));\n\n\n\t\t\t\tHTMLNode table = infoboxContent.addChild(\"table\", \"border\", \"0\");\n\t\t\t\tHTMLNode progressCell = table.addChild(\"tr\").addChild(\"td\", \"class\", \"request-progress\");\n\t\t\t\tif(fr.totalBlocks <= 0)\n\t\t\t\t\tprogressCell.addChild(\"#\", NodeL10n.getBase().getString(\"QueueToadlet.unknown\"));\n\t\t\t\telse {\n\t\t\t\t\tprogressCell.addChild(new ProgressBarElement(fetchTracker,key,fctx,maxSize,ctx, isWebPushingEnabled));\n\t\t\t\t}\n\n\t\t\t\tinfobox = contentNode.addChild(\"div\", \"class\", \"infobox infobox-information\");\n\t\t\t\tinfobox.addChild(\"div\", \"class\", \"infobox-header\", l10n(\"fetchingPageOptions\"));\n\t\t\t\tinfoboxContent = infobox.addChild(\"div\", \"class\", \"infobox-content\");\n\n\t\t\t\tHTMLNode optionList = infoboxContent.addChild(\"ul\");\n\t\t\t\toptionList.addChild(\"li\").addChild(\"p\", l10n(\"progressOptionZero\"));\n\n\t\t\t\taddDownloadOptions(ctx, optionList, key, mimeType, false, false, core);\n\n\t\t\t\toptionList.addChild(\"li\").addChild(ctx.getPageMaker().createBackLink(ctx, l10n(\"goBackToPrev\")));\n\t\t\t\toptionList.addChild(\"li\").addChild(\"a\", new String[] { \"href\", \"title\" },\n\t\t\t\t\t\tnew String[] { \"/\", NodeL10n.getBase().getString(\"Toadlet.homepage\") }, l10n(\"abortToHomepage\"));\n\n\t\t\t\tMultiValueTable<String, String> retHeaders = new MultiValueTable<String, String>();\n\t\t\t\t//retHeaders.put(\"Refresh\", \"2; url=\"+location);\n\t\t\t\twriteHTMLReply(ctx, 200, \"OK\", retHeaders, pageNode.generate());\n\t\t\t\tfr.close();\n\t\t\t\tfetch.close();\n\t\t\t\treturn;\n\t\t\t} else if(fr != null)\n\t\t\t\tfr.close();\n\t\t\t}\n\n\t\ttry {\n\t\t\tif(logMINOR)\n\t\t\t\tLogger.minor(this, \"FProxy fetching \"+key+\" (\"+maxSize+ ')');\n\t\t\tif(data == null && fe == null) {\n\t\t\t\tboolean needsFetch=true;\n\t\t\t\t//If we don't have the data, then check if an FProxyFetchInProgress has. It can happen when one FetchInProgress downloaded an image\n\t\t\t\t//asynchronously, then loads it. This way a FetchInprogress will have the full image, and no need to block.\n\t\t\t\tFProxyFetchInProgress progress=fetchTracker.getFetchInProgress(key, maxSize, fctx);\n\t\t\t\tif(progress!=null){\n\t\t\t\t\tFProxyFetchWaiter waiter=null;\n\t\t\t\t\tFProxyFetchResult result=null;\n\t\t\t\t\ttry{\n\t\t\t\t\t\twaiter=progress.getWaiter();\n\t\t\t\t\t\tresult=waiter.getResult(false);\n\t\t\t\t\t\tif(result.failed==null && result.data!=null){\n\t\t\t\t\t\t\tmimeType=result.mimeType;\n\t\t\t\t\t\t\tdata=result.data;\n\t\t\t\t\t\t\tdata=ctx.getBucketFactory().makeBucket(result.data.size());\n\t\t\t\t\t\t\tBucketTools.copy(result.data, data);\n\t\t\t\t\t\t\tneedsFetch=false;\n\t\t\t\t\t\t}\n\t\t\t\t\t}finally{\n\t\t\t\t\t\tif(waiter!=null){\n\t\t\t\t\t\t\tprogress.close(waiter);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif(result!=null){\n\t\t\t\t\t\t\tprogress.close(result);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif(needsFetch){\n\t\t\t\t\t//If we don't have the data, then we need to fetch it and block until it is available\n\t\t\t\t\tFetchResult result = fetch(key, maxSize, new RequestClient() {\n\t\t\t\t\t\t@Override\n\t\t\t\t\t\tpublic boolean persistent() {\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t@Override\n\t\t\t\t\t\tpublic void removeFrom(ObjectContainer container) {\n\t\t\t\t\t\t\tthrow new UnsupportedOperationException();\n\t\t\t\t\t\t}\n\t\t\t\t\t\t@Override\n\t\t\t\t\t\tpublic boolean realTimeFlag() {\n\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t} }, fctx);\n\n\t\t\t\t\t// Now, is it safe?\n\n\t\t\t\t\tdata = result.asBucket();\n\t\t\t\t\tmimeType = result.getMimeType();\n\t\t\t\t}\n\t\t\t} else if(fe != null) throw fe;\n\n\t\t\thandleDownload(ctx, data, ctx.getBucketFactory(), mimeType, requestedMimeType, forceString, httprequest.isParameterSet(\"forcedownload\"), \"/\", key, \"&max-size=\"+maxSizeDownload, referer, true, ctx, core, fr != null, maybeCharset);\n\t\t} catch (FetchException e) {\n\t\t\t//Handle exceptions thrown from the ContentFilter\n\t\t\tString msg = e.getMessage();\n\t\t\tif(logMINOR) {\n\t\t\t\tLogger.minor(this, \"Failed to fetch \"+uri+\" : \"+e);\n\t\t\t}\n\t\t\tif(e.newURI != null) {\n\t\t\t\tif(accept != null && (accept.startsWith(\"text/css\") || accept.startsWith(\"image/\")) && recursion++ < MAX_RECURSION) {\n\t\t\t\t\t// If it's an image or a CSS fetch, auto-follow the redirect, up to a limit.\n\t\t\t\t\tString link = getLink(e.newURI, requestedMimeType, maxSize, httprequest.getParam(\"force\", null), httprequest.isParameterSet(\"forcedownload\"), maxRetries, overrideSize);\n\t\t\t\t\ttry {\n\t\t\t\t\t\turi = new URI(link);\n\t\t\t\t\t\tinnerHandleMethodGET(uri, httprequest, ctx, recursion);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t} catch (URISyntaxException e1) {\n\t\t\t\t\t\tLogger.error(this, \"Caught \"+e1+\" parsing new link \"+link, e1);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tToadlet.writePermanentRedirect(ctx, msg,\n\t\t\t\t\tgetLink(e.newURI, requestedMimeType, maxSize, httprequest.getParam(\"force\", null), httprequest.isParameterSet(\"forcedownload\"), maxRetries, overrideSize));\n\t\t\t} else if(e.mode == FetchException.TOO_BIG) {\n\t\t\t\tPageNode page = ctx.getPageMaker().getPageNode(l10n(\"fileInformationTitle\"), ctx);\n\t\t\t\tHTMLNode pageNode = page.outer;\n\t\t\t\tHTMLNode contentNode = page.content;\n\n\t\t\t\tHTMLNode infobox = contentNode.addChild(\"div\", \"class\", \"infobox infobox-information\");\n\t\t\t\tinfobox.addChild(\"div\", \"class\", \"infobox-header\", l10n(\"largeFile\"));\n\t\t\t\tHTMLNode infoboxContent = infobox.addChild(\"div\", \"class\", \"infobox-content\");\n\t\t\t\tHTMLNode fileInformationList = infoboxContent.addChild(\"ul\");\n\t\t\t\tHTMLNode option = fileInformationList.addChild(\"li\");\n\t\t\t\toption.addChild(\"#\", (l10n(\"filenameLabel\") + ' '));\n\t\t\t\toption.addChild(\"a\", \"href\", '/' + key.toString(), getFilename(key, e.getExpectedMimeType()));\n\n\t\t\t\tString mime = writeSizeAndMIME(fileInformationList, e);\n\n\t\t\t\tinfobox = contentNode.addChild(\"div\", \"class\", \"infobox infobox-information\");\n\t\t\t\tinfobox.addChild(\"div\", \"class\", \"infobox-header\", l10n(\"explanationTitle\"));\n\t\t\t\tinfoboxContent = infobox.addChild(\"div\", \"class\", \"infobox-content\");\n\t\t\t\tinfoboxContent.addChild(\"#\", l10n(\"largeFileExplanationAndOptions\"));\n\t\t\t\tHTMLNode optionList = infoboxContent.addChild(\"ul\");\n\t\t\t\t//HTMLNode optionTable = infoboxContent.addChild(\"table\", \"border\", \"0\");\n\t\t\t\tif(!restricted) {\n\t\t\t\t\toption = optionList.addChild(\"li\");\n\t\t\t\t\tHTMLNode optionForm = option.addChild(\"form\", new String[] { \"action\", \"method\" }, new String[] {'/' + key.toString(), \"get\" });\n\t\t\t\t\toptionForm.addChild(\"input\", new String[] { \"type\", \"name\", \"value\" }, new String[] { \"hidden\", \"max-size\", String.valueOf(e.expectedSize == -1 ? Long.MAX_VALUE : e.expectedSize*2) });\n\t\t\t\t\tif (requestedMimeType != null)\n\t\t\t\t\t\toptionForm.addChild(\"input\", new String[] { \"type\", \"name\", \"value\" }, new String[] { \"hidden\", \"type\", requestedMimeType });\n\t\t\t\t\tif(maxRetries >= -1)\n\t\t\t\t\t\toptionForm.addChild(\"input\", new String[] { \"type\", \"name\", \"value\" }, new String[] { \"hidden\", \"max-retries\", Integer.toString(maxRetries) });\n\t\t\t\t\toptionForm.addChild(\"input\", new String[] { \"type\", \"name\", \"value\" }, new String[] { \"submit\", \"fetch\", l10n(\"fetchLargeFileAnywayAndDisplayButton\") });\n\t\t\t\t\toptionForm.addChild(\"#\", \" - \" + l10n(\"fetchLargeFileAnywayAndDisplay\"));\n\t\t\t\t\taddDownloadOptions(ctx, optionList, key, mime, false, false, core);\n\t\t\t\t}\n\n\n\t\t\t\t//optionTable.addChild(\"tr\").addChild(\"td\", \"colspan\", \"2\").addChild(\"a\", new String[] { \"href\", \"title\" }, new String[] { \"/\", NodeL10n.getBase().getString(\"Toadlet.homepage\") }, l10n(\"abortToHomepage\"));\n\t\t\t\toptionList.addChild(\"li\").addChild(\"a\", new String[] { \"href\", \"title\" }, new String[] { \"/\", NodeL10n.getBase().getString(\"Toadlet.homepage\") }, l10n(\"abortToHomepage\"));\n\n\t\t\t\t//option = optionTable.addChild(\"tr\").addChild(\"td\", \"colspan\", \"2\");\n\t\t\t\toptionList.addChild(\"li\").addChild(ctx.getPageMaker().createBackLink(ctx, l10n(\"goBackToPrev\")));\n\n\t\t\t\twriteHTMLReply(ctx, 200, \"OK\", pageNode.generate());\n\t\t\t} else {\n\t\t\t\tPageNode page = ctx.getPageMaker().getPageNode(e.getShortMessage(), ctx);\n\t\t\t\tHTMLNode pageNode = page.outer;\n\t\t\t\tHTMLNode contentNode = page.content;\n\n\t\t\t\tHTMLNode infobox = contentNode.addChild(\"div\", \"class\", \"infobox infobox-error\");\n\t\t\t\tinfobox.addChild(\"div\", \"class\", \"infobox-header\", l10n(\"errorWithReason\", \"error\", e.getShortMessage()));\n\t\t\t\tHTMLNode infoboxContent = infobox.addChild(\"div\", \"class\", \"infobox-content\");\n\t\t\t\tHTMLNode fileInformationList = infoboxContent.addChild(\"ul\");\n\t\t\t\tHTMLNode option = fileInformationList.addChild(\"li\");\n\t\t\t\toption.addChild(\"#\", (l10n(\"filenameLabel\") + ' '));\n\t\t\t\toption.addChild(\"a\", \"href\", '/' + key.toString(), getFilename(key, e.getExpectedMimeType()));\n\n\t\t\t\tString mime = writeSizeAndMIME(fileInformationList, e);\n\t\t\t\tinfobox = contentNode.addChild(\"div\", \"class\", \"infobox infobox-error\");\n\t\t\t\tinfobox.addChild(\"div\", \"class\", \"infobox-header\", l10n(\"explanationTitle\"));\n\t\t\t\tinfoboxContent = infobox.addChild(\"div\", \"class\", \"infobox-content\");\n\t\t\t\tinfoboxContent.addChild(\"p\", l10n(\"unableToRetrieve\"));\n\t\t\t\tUnsafeContentTypeException filterException = null;\n\t\t\t\tif(e.getCause() != null && e.getCause() instanceof UnsafeContentTypeException) {\n\t\t\t\t\tfilterException = (UnsafeContentTypeException)e.getCause();\n\t\t\t\t}\n\t\t\t\tif(e.isFatal() && filterException == null)\n\t\t\t\t\tinfoboxContent.addChild(\"p\", l10n(\"errorIsFatal\"));\n\t\t\t\tinfoboxContent.addChild(\"p\", msg);\n\t\t\t\tif(filterException != null) {\n\t\t\t\t\tif(filterException.details() != null) {\n\t\t\t\t\t\tHTMLNode detailList = infoboxContent.addChild(\"ul\");\n\t\t\t\t\t\tfor(String detail : filterException.details()) {\n\t\t\t\t\t\t\tdetailList.addChild(\"li\", detail);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif(e.errorCodes != null) {\n\t\t\t\t\tinfoboxContent.addChild(\"p\").addChild(\"pre\").addChild(\"#\", e.errorCodes.toVerboseString());\n\t\t\t\t}\n\n\t\t\t\tinfobox = contentNode.addChild(\"div\", \"class\", \"infobox infobox-error\");\n\t\t\t\tinfobox.addChild(\"div\", \"class\", \"infobox-header\", l10n(\"options\"));\n\t\t\t\tinfoboxContent = infobox.addChild(\"div\", \"class\", \"infobox-content\");\n\n\t\t\t\tHTMLNode optionList = infoboxContent.addChild(\"ul\");\n\n\t\t\t\tPluginInfoWrapper keyUtil;\n\t\t\t\tif((e.mode == FetchException.NOT_IN_ARCHIVE || e.mode == FetchException.NOT_ENOUGH_PATH_COMPONENTS)) {\n\t\t\t\t\t// first look for the newest version\n\t\t\t\t\tif ((keyUtil = core.node.pluginManager.getPluginInfo(\"plugins.KeyUtils.KeyUtilsPlugin\")) != null) {\n\t\t\t\t\t\toption = optionList.addChild(\"li\");\n\t\t\t\t\t\tif (keyUtil.getPluginLongVersion() < 5010)\n\t\t\t\t\t\t\tNodeL10n.getBase().addL10nSubstitution(option, \"FProxyToadlet.openWithKeyExplorer\", new String[] { \"link\" }, new HTMLNode[] { HTMLNode.link(\"/KeyUtils/?automf=true&key=\" + key.toString()) });\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tNodeL10n.getBase().addL10nSubstitution(option, \"FProxyToadlet.openWithKeyExplorer\", new String[] { \"link\" }, new HTMLNode[] { HTMLNode.link(\"/KeyUtils/?key=\" + key.toString()) });\n\t\t\t\t\t\t\toption = optionList.addChild(\"li\");\n\t\t\t\t\t\t\tNodeL10n.getBase().addL10nSubstitution(option, \"FProxyToadlet.openWithSiteExplorer\", new String[] { \"link\" }, new HTMLNode[] { HTMLNode.link(\"/KeyUtils/Site?key=\" + key.toString()) });\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if ((keyUtil = core.node.pluginManager.getPluginInfo(\"plugins.KeyExplorer.KeyExplorer\")) != null) {\n\t\t\t\t\t\toption = optionList.addChild(\"li\");\n\t\t\t\t\t\tif (keyUtil.getPluginLongVersion() > 4999)\n\t\t\t\t\t\t\tNodeL10n.getBase().addL10nSubstitution(option, \"FProxyToadlet.openWithKeyExplorer\", new String[] { \"link\" }, new HTMLNode[] { HTMLNode.link(\"/KeyExplorer/?automf=true&key=\" + key.toString())});\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\tNodeL10n.getBase().addL10nSubstitution(option, \"FProxyToadlet.openWithKeyExplorer\", new String[] { \"link\" }, new HTMLNode[] { HTMLNode.link(\"/plugins/plugins.KeyExplorer.KeyExplorer/?key=\" + key.toString())});\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif(filterException != null) {\n\t\t\t\t\tif((mime.equals(\"application/x-freenet-index\")) && (core.node.pluginManager.isPluginLoaded(\"plugins.ThawIndexBrowser.ThawIndexBrowser\"))) {\n\t\t\t\t\t\toption = optionList.addChild(\"li\");\n\t\t\t\t\t\tNodeL10n.getBase().addL10nSubstitution(option, \"FProxyToadlet.openAsThawIndex\", new String[] { \"link\" }, new HTMLNode[] { HTMLNode.link(\"/plugins/plugins.ThawIndexBrowser.ThawIndexBrowser/?key=\" + key.toString()).addChild(\"b\") });\n\t\t\t\t\t}\n\t\t\t\t\toption = optionList.addChild(\"li\");\n\t\t\t\t\t// FIXME: is this safe? See bug #131\n\t\t\t\t\tMediaType textMediaType = new MediaType(\"text/plain\");\n\t\t\t\t\ttextMediaType.setParameter(\"charset\", (e.getExpectedMimeType() != null) ? MediaType.getCharsetRobust(e.getExpectedMimeType()) : null);\n\t\t\t\t\tNodeL10n.getBase().addL10nSubstitution(option, \"FProxyToadlet.openAsText\", new String[] { \"link\" }, new HTMLNode[] { HTMLNode.link(getLink(key, textMediaType.toString(), maxSize, null, false, maxRetries, overrideSize)) });\n\t\t\t\t\toption = optionList.addChild(\"li\");\n\t\t\t\t\tNodeL10n.getBase().addL10nSubstitution(option, \"FProxyToadlet.openForceDisk\", new String[] { \"link\" }, new HTMLNode[] { HTMLNode.link(getLink(key, mime, maxSize, null, true, maxRetries, overrideSize)) });\n\t\t\t\t\tif(!(mime.equals(\"application/octet-stream\") || mime.equals(\"application/x-msdownload\") || !DefaultMIMETypes.isPlausibleMIMEType(mime))) {\n\t\t\t\t\t\toption = optionList.addChild(\"li\");\n\t\t\t\t\t\tNodeL10n.getBase().addL10nSubstitution(option, \"FProxyToadlet.openForce\", new String[] { \"link\", \"mime\" }, new HTMLNode[] { HTMLNode.link(getLink(key, mime, maxSize, getForceValue(key, now), false, maxRetries, overrideSize)), HTMLNode.text(HTMLEncoder.encode(mime))});\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif((!e.isFatal() || filterException != null) && (ctx.isAllowedFullAccess() || !container.publicGatewayMode())) {\n\t\t\t\t\taddDownloadOptions(ctx, optionList, key, mimeType, filterException != null, filterException != null, core);\n\t\t\t\t\tif(filterException == null)\n\t\t\t\t\t\toptionList.addChild(\"li\").\n\t\t\t\t\t\t\taddChild(\"a\", \"href\", getLink(key, requestedMimeType, maxSize, httprequest.getParam(\"force\", null),\n\t\t\t\t\t\t\t\t\thttprequest.isParameterSet(\"forcedownload\"), maxRetries, overrideSize)).addChild(\"#\", l10n(\"retryNow\"));\n\t\t\t\t}\n\n\t\t\t\toptionList.addChild(\"li\").addChild(\"a\", new String[] { \"href\", \"title\" }, new String[] { \"/\", NodeL10n.getBase().\n\t\t\t\t\t\tgetString(\"Toadlet.homepage\") }, l10n(\"abortToHomepage\"));\n\n\t\t\t\toptionList.addChild(\"li\").addChild(ctx.getPageMaker().createBackLink(ctx, l10n(\"goBackToPrev\")));\n\t\t\t\tthis.writeHTMLReply(ctx, (e.mode == 10) ? 404 : 500 /* close enough - FIXME probably should depend on status code */,\n\t\t\t\t\t\t\"Internal Error\", pageNode.generate());\n\t\t\t}\n\t\t} catch (SocketException e) {\n\t\t\t// Probably irrelevant\n\t\t\tif(e.getMessage().equals(\"Broken pipe\")) {\n\t\t\t\tif(logMINOR)\n\t\t\t\t\tLogger.minor(this, \"Caught \"+e+\" while handling GET\", e);\n\t\t\t} else {\n\t\t\t\tLogger.normal(this, \"Caught \"+e);\n\t\t\t}\n\t\t\tthrow e;\n\t\t} catch (Throwable t) {\n\t\t\twriteInternalError(t, ctx);\n\t\t} finally {\n\t\t\tif(fr == null && data != null) data.free();\n\t\t\tif(fr != null) fr.close();\n\t\t}\n\t}","id":55843,"modified_method":"private void innerHandleMethodGET(URI uri, HTTPRequest httprequest, ToadletContext ctx, int recursion)\n\t\t\tthrows ToadletContextClosedException, IOException, RedirectException {\n\n\t\tString ks = uri.getPath();\n\t\t\n\t\tMultiValueTable<String,String> headers = ctx.getHeaders();\n\t\tfinal String ua = headers.get(\"user-agent\");\n\t\tfinal String accept = headers.get(\"accept\");\n\t\tif(logMINOR) Logger.minor(this, \"UA = \"+ua+\" accept = \"+accept);\n\t\tfinal boolean canSendProgress =\n\t\t\tisBrowser(ua) && !ctx.disableProgressPage() && (accept == null || accept.indexOf(\"text/html\") > -1) && !httprequest.isParameterSet(\"forcedownload\");\n\n\t\tlong defaultMaxSize = canSendProgress ? MAX_LENGTH_WITH_PROGRESS : MAX_LENGTH_NO_PROGRESS;\n\t\t\n\t\t// max-retries\n\t\t// Less than -1 = use default.\n\t\t// 0 = one try only, don't retry\n\t\t// 1 = two tries\n\t\t// 2 = three tries\n\t\t// 3 or more = GO INTO COOLDOWN EVERY 3 TRIES! TAKES *MUCH* LONGER!!! STRONGLY NOT RECOMMENDED!!!\n\t\tint maxRetries = httprequest.getIntParam(\"max-retries\", -2);\n\t\t\n\t\tlong maxSize;\n\t\tlong maxSizeDownload;\n\n\t\tboolean restricted = (container.publicGatewayMode() && !ctx.isAllowedFullAccess());\n\n\t\tboolean overrideSize = false;\n\t\tmaxSize = defaultMaxSize;\n\t\tmaxSizeDownload = MAX_LENGTH_WITH_PROGRESS;\n\t\tif(!restricted) {\n\t\t\tif(httprequest.isParameterSet(\"max-size\")) {\n\t\t\t\tmaxSize = maxSizeDownload = httprequest.getLongParam(\"max-size\", defaultMaxSize);\n\t\t\t\toverrideSize = true;\n\t\t\t}\n\t\t}\n\n\t\tif (ks.equals(\"/\")) {\n\t\t\tif (httprequest.isParameterSet(\"key\")) {\n\t\t\t\tString k = httprequest.getParam(\"key\");\n\t\t\t\tFreenetURI newURI;\n\t\t\t\ttry {\n\t\t\t\t\tnewURI = new FreenetURI(k);\n\t\t\t\t} catch (MalformedURLException e) {\n\t\t\t\t\tLogger.normal(this, \"Invalid key: \"+e+\" for \"+k, e);\n\t\t\t\t\tsendErrorPage(ctx, 404, l10n(\"notFoundTitle\"), NodeL10n.getBase().getString(\"FProxyToadlet.invalidKeyWithReason\", new String[] { \"reason\" }, new String[] { e.toString() }));\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif(logMINOR) Logger.minor(this, \"Redirecting to FreenetURI: \"+newURI);\n\t\t\t\tString requestedMimeType = httprequest.getParam(\"type\");\n\t\t\t\tString location = getLink(newURI, requestedMimeType, maxSize, httprequest.getParam(\"force\", null), httprequest.isParameterSet(\"forcedownload\"), maxRetries, overrideSize);\n\t\t\t\twriteTemporaryRedirect(ctx, null, location);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t/*\n\t\t\t * Redirect to the welcome page because no key was specified.\n\t\t\t */\n\t\t\ttry {\n\t\t\t\tthrow new RedirectException(new URI(uri.getScheme(), uri.getUserInfo(), uri.getHost(), uri.getPort(), welcome.getPath(), uri.getQuery(), uri.getFragment()));\n\t\t\t} catch (URISyntaxException e) {\n\t\t\t\t/*\n\t\t\t\t * This shouldn't happen because all the inputs to the URI constructor come from getters\n\t\t\t\t * of existing URIs.\n\t\t\t\t */\n\t\t\t\tLogger.error(FProxyToadlet.class, \"Unexpected syntax error in URI: \" + e);\n\t\t\t\twriteTemporaryRedirect(ctx, \"Internal error. Please check logs and report.\", WelcomeToadlet.PATH);\n\t\t\t}\n\t\t}else if(ks.equals(\"/favicon.ico\")){\n\t\t\tbyte[] buf = new byte[1024];\n\t\t\tint len;\n\t\t\tInputStream strm = getClass().getResourceAsStream(\"staticfiles/favicon.ico\");\n\n\t\t\ttry {\n\t\t\t\tif (strm == null) {\n\t\t\t\t\tthis.sendErrorPage(ctx, 404, l10n(\"pathNotFoundTitle\"), l10n(\"pathNotFound\"));\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tctx.sendReplyHeaders(200, \"OK\", null, \"image/x-icon\", strm.available());\n\n\t\t\t\twhile ( (len = strm.read(buf)) > 0) {\n\t\t\t\t\tctx.writeData(buf, 0, len);\n\t\t\t\t}\n\t\t\t} finally {\n\t\t\t\tCloser.close(strm);\n\t\t\t}\n\t\t\treturn;\n\t\t} else if(ks.startsWith(\"/feed/\") || ks.equals(\"/feed\")) {\n\t\t\t//TODO Better way to find the host. Find if https is used?\n\t\t\tString host = ctx.getHeaders().get(\"host\");\n\t\t\tString atom = core.alerts.getAtom(\"http://\" + host);\n\t\t\tbyte[] buf = atom.getBytes(\"UTF-8\");\n\t\t\tctx.sendReplyHeaders(200, \"OK\", null, \"application/atom+xml\", buf.length);\n\t\t\tctx.writeData(buf, 0, buf.length);\n\t\t\treturn;\n\t\t}else if(ks.equals(\"/robots.txt\") && ctx.doRobots()){\n\t\t\tthis.writeTextReply(ctx, 200, \"Ok\", \"User-agent: *\\nDisallow: /\");\n\t\t\treturn;\n\t\t}else if(ks.startsWith(\"/darknet/\") || ks.equals(\"/darknet\")) { //TODO (pre-build 1045 url format) remove when obsolete\n\t\t\twritePermanentRedirect(ctx, \"obsoleted\", \"/friends/\");\n\t\t\treturn;\n\t\t}else if(ks.startsWith(\"/opennet/\") || ks.equals(\"/opennet\")) { //TODO (pre-build 1045 url format) remove when obsolete\n\t\t\twritePermanentRedirect(ctx, \"obsoleted\", \"/strangers/\");\n\t\t\treturn;\n\t\t} else if(ks.startsWith(\"/queue/\")) {\n\t\t\twritePermanentRedirect(ctx, \"obsoleted\", \"/downloads/\");\n\t\t\treturn;\n\t\t} else if(ks.startsWith(\"/config/\")) {\n\t\t\twritePermanentRedirect(ctx, \"obsoleted\", \"/config/node\");\n\t\t\treturn;\n\t\t}\n\n\t\tif(ks.startsWith(\"/\"))\n\t\t\tks = ks.substring(1);\n\n\t\t//first check of httprange before get\n\t\t// only valid number format is checked here\n\t\tString rangeStr = ctx.getHeaders().get(\"range\");\n\t\tif (rangeStr != null) {\n\t\t\ttry {\n\t\t\t\tparseRange(rangeStr);\n\t\t\t} catch (HTTPRangeException e) {\n\t\t\t\tLogger.normal(this, \"Invalid Range Header: \"+rangeStr, e);\n\t\t\t\tctx.sendReplyHeaders(416, \"Requested Range Not Satisfiable\", null, null, 0);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\tFreenetURI key;\n\t\ttry {\n\t\t\tkey = new FreenetURI(ks);\n\t\t} catch (MalformedURLException e) {\n\t\t\tPageNode page = ctx.getPageMaker().getPageNode(l10n(\"invalidKeyTitle\"), ctx);\n\t\t\tHTMLNode pageNode = page.outer;\n\t\t\tHTMLNode contentNode = page.content;\n\n\t\t\tHTMLNode errorInfobox = contentNode.addChild(\"div\", \"class\", \"infobox infobox-error\");\n\t\t\terrorInfobox.addChild(\"div\", \"class\", \"infobox-header\", NodeL10n.getBase().getString(\"FProxyToadlet.invalidKeyWithReason\", new String[] { \"reason\" }, new String[] { e.toString() }));\n\t\t\tHTMLNode errorContent = errorInfobox.addChild(\"div\", \"class\", \"infobox-content\");\n\t\t\terrorContent.addChild(\"#\", l10n(\"expectedKeyButGot\"));\n\t\t\terrorContent.addChild(\"code\", ks);\n\t\t\terrorContent.addChild(\"br\");\n\t\t\terrorContent.addChild(ctx.getPageMaker().createBackLink(ctx, l10n(\"goBack\")));\n\t\t\terrorContent.addChild(\"br\");\n\t\t\taddHomepageLink(errorContent);\n\n\t\t\tthis.writeHTMLReply(ctx, 400, l10n(\"invalidKeyTitle\"), pageNode.generate());\n\t\t\treturn;\n\t\t}\n\n\t\tFetchContext fctx = getFetchContext(maxSize);\n\t\t// max-size=-1 => use default\n\t\tmaxSize = fctx.maxOutputLength;\n\n\t\t//We should run the ContentFilter by default\n\t\tString forceString = httprequest.getParam(\"force\");\n\t\tlong now = System.currentTimeMillis();\n\t\tboolean force = false;\n\t\tif(forceString != null) {\n\t\t\tif(forceString.equals(getForceValue(key, now)) ||\n\t\t\t\t\tforceString.equals(getForceValue(key, now-FORCE_GRAIN_INTERVAL)))\n\t\t\t\tforce = true;\n\t\t}\n\t\tif(restricted)\n\t\t\tmaxRetries = -2;\n\t\tif(maxRetries >= -1) {\n\t\t\tfctx.maxNonSplitfileRetries = maxRetries;\n\t\t\tfctx.maxSplitfileBlockRetries = maxRetries;\n\t\t}\n\t\tif (!force && !httprequest.isParameterSet(\"forcedownload\")) fctx.filterData = true;\n\t\telse if(logMINOR) Logger.minor(this, \"Content filter disabled via request parameter\");\n\t\t//Load the fetch context with the callbacks needed for web-pushing, if enabled\n\t\tif(container.enableInlinePrefetch()) {\n\t\t\tfctx.prefetchHook = new FoundURICallback() {\n\n\t\t\t\tList<FreenetURI> uris = new ArrayList<FreenetURI>();\n\t\t\t\t\n\t\t\t\t@Override\n\t\t\t\tpublic void foundURI(FreenetURI uri) {\n\t\t\t\t\t// Ignore\n\t\t\t\t}\n\n\t\t\t\t@Override\n\t\t\t\tpublic void foundURI(FreenetURI uri, boolean inline) {\n\t\t\t\t\tif(!inline) return;\n\t\t\t\t\tif(logMINOR) Logger.minor(this, \"Prefetching \"+uri);\n\t\t\t\t\tsynchronized(this) {\n\t\t\t\t\t\tif(uris.size() < MAX_PREFETCH)\n\t\t\t\t\t\t\t// FIXME Maybe we should do this randomly, but since it's a DoS protection (in an obscure feature), if so we should do it in constant space!\n\t\t\t\t\t\t\turis.add(uri);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t@Override\n\t\t\t\tpublic void onText(String text, String type, URI baseURI) {\n\t\t\t\t\t// Ignore\n\t\t\t\t}\n\n\t\t\t\t@Override\n\t\t\t\tpublic void onFinishedPage() {\n\t\t\t\t\tcore.node.executor.execute(new Runnable() {\n\n\t\t\t\t\t\t@Override\n\t\t\t\t\t\tpublic void run() {\n\t\t\t\t\t\t\tfor(FreenetURI uri : uris) {\n\t\t\t\t\t\t\t\tclient.prefetch(uri, 60*1000, 512*1024, prefetchAllowedTypes);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t};\n\n\t\t}\n\t\tif(container.isFProxyWebPushingEnabled()) fctx.tagReplacer = new PushingTagReplacerCallback(core.getFProxy().fetchTracker, defaultMaxSize, ctx);\n\n\t\tString requestedMimeType = httprequest.getParam(\"type\", null);\n\t\tfctx.overrideMIME = requestedMimeType;\n\t\tString override = (requestedMimeType == null) ? \"\" : \"?type=\"+URLEncoder.encode(requestedMimeType,true);\n\t\tString maybeCharset = httprequest.isParameterSet(\"maybecharset\") ? httprequest.getParam(\"maybecharset\", null) : null;\n\t\tfctx.charset = maybeCharset;\n\t\tif(override.equals(\"\") && maybeCharset != null)\n\t\t\toverride = \"?maybecharset=\"+URLEncoder.encode(maybeCharset, true);\n\t\t// No point passing ?force= across a redirect, since the key will change.\n\t\t// However, there is every point in passing ?forcedownload.\n\t\tif(httprequest.isParameterSet(\"forcedownload\")) {\n\t\t\tif(override.length() == 0) override = \"?forcedownload\";\n\t\t\telse override = override+\"&forcedownload\";\n\t\t}\n\n\t\tBucket data = null;\n\t\tString mimeType = null;\n\t\tString referer = sanitizeReferer(ctx);\n\t\tFetchException fe = null;\n\n\n\t\tFProxyFetchResult fr = null;\n\n\t\t\tFProxyFetchWaiter fetch = null;\n\t\t\ttry {\n\t\t\t\tfetch = fetchTracker.makeFetcher(key, maxSize, fctx, ctx.getReFilterPolicy());\n\t\t\t} catch (FetchException e) {\n\t\t\t\tfe = fr.failed;\n\t\t\t}\n\t\t\tif(fetch != null)\n\t\t\twhile(true) {\n\t\t\tfr = fetch.getResult(!canSendProgress);\n\t\t\tif(fr.hasData()) {\n\n\t\t\t\tif(fr.getFetchCount() > 1 && !fr.hasWaited() && fr.getFetchCount() > 1 && key.isUSK() && context.uskManager.lookupKnownGood(USK.create(key)) > key.getSuggestedEdition()) {\n\t\t\t\t\tLogger.normal(this, \"Loading later edition...\");\n\t\t\t\t\tfetch.progress.requestImmediateCancel();\n\t\t\t\t\tfr = null;\n\t\t\t\t\tfetch = null;\n\t\t\t\t\ttry {\n\t\t\t\t\t\tfetch = fetchTracker.makeFetcher(key, maxSize, fctx, ctx.getReFilterPolicy());\n\t\t\t\t\t} catch (FetchException e) {\n\t\t\t\t\t\tfe = fr.failed;\n\t\t\t\t\t}\n\t\t\t\t\tif(fetch == null) break;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tif(logMINOR) Logger.minor(this, \"Found data\");\n\t\t\t\tdata = new NoFreeBucket(fr.data);\n\t\t\t\tmimeType = fr.mimeType;\n\t\t\t\tfetch.close(); // Not waiting any more, but still locked the results until sent\n\t\t\t\tbreak;\n\t\t\t} else if(fr.failed != null) {\n\t\t\t\tif(logMINOR) Logger.minor(this, \"Request failed\");\n\t\t\t\tfe = fr.failed;\n\t\t\t\tfetch.close(); // Not waiting any more, but still locked the results until sent\n\t\t\t\tbreak;\n\t\t\t} else if(canSendProgress) {\n\t\t\t\tif(logMINOR) Logger.minor(this, \"Still in progress\");\n\t\t\t\t// Still in progress\n\t\t\t\tboolean isJsEnabled=ctx.getContainer().isFProxyJavascriptEnabled() && ua != null && !ua.contains(\"AppleWebKit/\");\n\t\t\t\tboolean isWebPushingEnabled = false;\n\t\t\t\tPageNode page = ctx.getPageMaker().getPageNode(l10n(\"fetchingPageTitle\"), ctx);\n\t\t\t\tHTMLNode pageNode = page.outer;\n\t\t\t\tString location = getLink(key, requestedMimeType, maxSize, httprequest.getParam(\"force\", null), httprequest.isParameterSet(\"forcedownload\"), maxRetries, overrideSize);\n\t\t\t\tHTMLNode headNode=page.headNode;\n\t\t\t\tif(isJsEnabled){\n\t\t\t\t\t//If the user has enabled javascript, we add a <noscript> http refresh(if he has disabled it in the browser)\n\t\t\t\t\theadNode.addChild(\"noscript\").addChild(\"meta\", \"http-equiv\", \"Refresh\").addAttribute(\"content\", \"2;URL=\" + location);\n\t\t\t\t\t\t// If pushing is disabled, but js is enabled, then we add the original progresspage.js\n\t\t\t\t\t\tif ((isWebPushingEnabled = ctx.getContainer().isFProxyWebPushingEnabled()) == false) {\n\t\t\t\t\t\t\tHTMLNode scriptNode = headNode.addChild(\"script\", \"//abc\");\n\t\t\t\t\t\t\tscriptNode.addAttribute(\"type\", \"text/javascript\");\n\t\t\t\t\t\t\tscriptNode.addAttribute(\"src\", \"/static/js/progresspage.js\");\n\t\t\t\t\t\t}\n\t\t\t\t}else{\n\t\t\t\t\t//If he disabled it, we just put the http refresh meta, without the noscript\n\t\t\t\t\theadNode.addChild(\"meta\", \"http-equiv\", \"Refresh\").addAttribute(\"content\", \"2;URL=\" + location);\n\t\t\t\t}\n\t\t\t\tHTMLNode contentNode = page.content;\n\t\t\t\tHTMLNode infobox = contentNode.addChild(\"div\", \"class\", \"infobox infobox-information\");\n\t\t\t\tinfobox.addChild(\"div\", \"class\", \"infobox-header\", l10n(\"fetchingPageBox\"));\n\t\t\t\tHTMLNode infoboxContent = infobox.addChild(\"div\", \"class\", \"infobox-content\");\n\t\t\t\tinfoboxContent.addAttribute(\"id\", \"infoContent\");\n\t\t\t\tinfoboxContent.addChild(new ProgressInfoElement(fetchTracker, key, fctx, maxSize, core.isAdvancedModeEnabled(), ctx, isWebPushingEnabled));\n\n\n\t\t\t\tHTMLNode table = infoboxContent.addChild(\"table\", \"border\", \"0\");\n\t\t\t\tHTMLNode progressCell = table.addChild(\"tr\").addChild(\"td\", \"class\", \"request-progress\");\n\t\t\t\tif(fr.totalBlocks <= 0)\n\t\t\t\t\tprogressCell.addChild(\"#\", NodeL10n.getBase().getString(\"QueueToadlet.unknown\"));\n\t\t\t\telse {\n\t\t\t\t\tprogressCell.addChild(new ProgressBarElement(fetchTracker,key,fctx,maxSize,ctx, isWebPushingEnabled));\n\t\t\t\t}\n\n\t\t\t\tinfobox = contentNode.addChild(\"div\", \"class\", \"infobox infobox-information\");\n\t\t\t\tinfobox.addChild(\"div\", \"class\", \"infobox-header\", l10n(\"fetchingPageOptions\"));\n\t\t\t\tinfoboxContent = infobox.addChild(\"div\", \"class\", \"infobox-content\");\n\n\t\t\t\tHTMLNode optionList = infoboxContent.addChild(\"ul\");\n\t\t\t\toptionList.addChild(\"li\").addChild(\"p\", l10n(\"progressOptionZero\"));\n\n\t\t\t\taddDownloadOptions(ctx, optionList, key, mimeType, false, false, core);\n\n\t\t\t\toptionList.addChild(\"li\").addChild(ctx.getPageMaker().createBackLink(ctx, l10n(\"goBackToPrev\")));\n\t\t\t\toptionList.addChild(\"li\").addChild(\"a\", new String[] { \"href\", \"title\" },\n\t\t\t\t\t\tnew String[] { \"/\", NodeL10n.getBase().getString(\"Toadlet.homepage\") }, l10n(\"abortToHomepage\"));\n\n\t\t\t\tMultiValueTable<String, String> retHeaders = new MultiValueTable<String, String>();\n\t\t\t\t//retHeaders.put(\"Refresh\", \"2; url=\"+location);\n\t\t\t\twriteHTMLReply(ctx, 200, \"OK\", retHeaders, pageNode.generate());\n\t\t\t\tfr.close();\n\t\t\t\tfetch.close();\n\t\t\t\treturn;\n\t\t\t} else if(fr != null)\n\t\t\t\tfr.close();\n\t\t\t}\n\n\t\ttry {\n\t\t\tif(logMINOR)\n\t\t\t\tLogger.minor(this, \"FProxy fetching \"+key+\" (\"+maxSize+ ')');\n\t\t\tif(data == null && fe == null) {\n\t\t\t\tboolean needsFetch=true;\n\t\t\t\t//If we don't have the data, then check if an FProxyFetchInProgress has. It can happen when one FetchInProgress downloaded an image\n\t\t\t\t//asynchronously, then loads it. This way a FetchInprogress will have the full image, and no need to block.\n\t\t\t\tFProxyFetchInProgress progress=fetchTracker.getFetchInProgress(key, maxSize, fctx);\n\t\t\t\tif(progress!=null){\n\t\t\t\t\tFProxyFetchWaiter waiter=null;\n\t\t\t\t\tFProxyFetchResult result=null;\n\t\t\t\t\ttry{\n\t\t\t\t\t\twaiter=progress.getWaiter();\n\t\t\t\t\t\tresult=waiter.getResult(false);\n\t\t\t\t\t\tif(result.failed==null && result.data!=null){\n\t\t\t\t\t\t\tmimeType=result.mimeType;\n\t\t\t\t\t\t\tdata=result.data;\n\t\t\t\t\t\t\tdata=ctx.getBucketFactory().makeBucket(result.data.size());\n\t\t\t\t\t\t\tBucketTools.copy(result.data, data);\n\t\t\t\t\t\t\tneedsFetch=false;\n\t\t\t\t\t\t}\n\t\t\t\t\t}finally{\n\t\t\t\t\t\tif(waiter!=null){\n\t\t\t\t\t\t\tprogress.close(waiter);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif(result!=null){\n\t\t\t\t\t\t\tprogress.close(result);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif(needsFetch){\n\t\t\t\t\t//If we don't have the data, then we need to fetch it and block until it is available\n\t\t\t\t\tFetchResult result = fetch(key, maxSize, new RequestClient() {\n\t\t\t\t\t\t@Override\n\t\t\t\t\t\tpublic boolean persistent() {\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t@Override\n\t\t\t\t\t\tpublic void removeFrom(ObjectContainer container) {\n\t\t\t\t\t\t\tthrow new UnsupportedOperationException();\n\t\t\t\t\t\t}\n\t\t\t\t\t\t@Override\n\t\t\t\t\t\tpublic boolean realTimeFlag() {\n\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t} }, fctx);\n\n\t\t\t\t\t// Now, is it safe?\n\n\t\t\t\t\tdata = result.asBucket();\n\t\t\t\t\tmimeType = result.getMimeType();\n\t\t\t\t}\n\t\t\t} else if(fe != null) throw fe;\n\n\t\t\thandleDownload(ctx, data, ctx.getBucketFactory(), mimeType, requestedMimeType, forceString, httprequest.isParameterSet(\"forcedownload\"), \"/\", key, \"&max-size=\"+maxSizeDownload, referer, true, ctx, core, fr != null, maybeCharset);\n\t\t} catch (FetchException e) {\n\t\t\t//Handle exceptions thrown from the ContentFilter\n\t\t\tString msg = e.getMessage();\n\t\t\tif(logMINOR) {\n\t\t\t\tLogger.minor(this, \"Failed to fetch \"+uri+\" : \"+e);\n\t\t\t}\n\t\t\tif(e.newURI != null) {\n\t\t\t\tif(accept != null && (accept.startsWith(\"text/css\") || accept.startsWith(\"image/\")) && recursion++ < MAX_RECURSION) {\n\t\t\t\t\t// If it's an image or a CSS fetch, auto-follow the redirect, up to a limit.\n\t\t\t\t\tString link = getLink(e.newURI, requestedMimeType, maxSize, httprequest.getParam(\"force\", null), httprequest.isParameterSet(\"forcedownload\"), maxRetries, overrideSize);\n\t\t\t\t\ttry {\n\t\t\t\t\t\turi = new URI(link);\n\t\t\t\t\t\tinnerHandleMethodGET(uri, httprequest, ctx, recursion);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t} catch (URISyntaxException e1) {\n\t\t\t\t\t\tLogger.error(this, \"Caught \"+e1+\" parsing new link \"+link, e1);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tToadlet.writePermanentRedirect(ctx, msg,\n\t\t\t\t\tgetLink(e.newURI, requestedMimeType, maxSize, httprequest.getParam(\"force\", null), httprequest.isParameterSet(\"forcedownload\"), maxRetries, overrideSize));\n\t\t\t} else if(e.mode == FetchException.TOO_BIG) {\n\t\t\t\tPageNode page = ctx.getPageMaker().getPageNode(l10n(\"fileInformationTitle\"), ctx);\n\t\t\t\tHTMLNode pageNode = page.outer;\n\t\t\t\tHTMLNode contentNode = page.content;\n\n\t\t\t\tHTMLNode infobox = contentNode.addChild(\"div\", \"class\", \"infobox infobox-information\");\n\t\t\t\tinfobox.addChild(\"div\", \"class\", \"infobox-header\", l10n(\"largeFile\"));\n\t\t\t\tHTMLNode infoboxContent = infobox.addChild(\"div\", \"class\", \"infobox-content\");\n\t\t\t\tHTMLNode fileInformationList = infoboxContent.addChild(\"ul\");\n\t\t\t\tHTMLNode option = fileInformationList.addChild(\"li\");\n\t\t\t\toption.addChild(\"#\", (l10n(\"filenameLabel\") + ' '));\n\t\t\t\toption.addChild(\"a\", \"href\", '/' + key.toString(), getFilename(key, e.getExpectedMimeType()));\n\n\t\t\t\tString mime = writeSizeAndMIME(fileInformationList, e);\n\n\t\t\t\tinfobox = contentNode.addChild(\"div\", \"class\", \"infobox infobox-information\");\n\t\t\t\tinfobox.addChild(\"div\", \"class\", \"infobox-header\", l10n(\"explanationTitle\"));\n\t\t\t\tinfoboxContent = infobox.addChild(\"div\", \"class\", \"infobox-content\");\n\t\t\t\tinfoboxContent.addChild(\"#\", l10n(\"largeFileExplanationAndOptions\"));\n\t\t\t\tHTMLNode optionList = infoboxContent.addChild(\"ul\");\n\t\t\t\t//HTMLNode optionTable = infoboxContent.addChild(\"table\", \"border\", \"0\");\n\t\t\t\tif(!restricted) {\n\t\t\t\t\toption = optionList.addChild(\"li\");\n\t\t\t\t\tHTMLNode optionForm = option.addChild(\"form\", new String[] { \"action\", \"method\" }, new String[] {'/' + key.toString(), \"get\" });\n\t\t\t\t\toptionForm.addChild(\"input\", new String[] { \"type\", \"name\", \"value\" }, new String[] { \"hidden\", \"max-size\", String.valueOf(e.expectedSize == -1 ? Long.MAX_VALUE : e.expectedSize*2) });\n\t\t\t\t\tif (requestedMimeType != null)\n\t\t\t\t\t\toptionForm.addChild(\"input\", new String[] { \"type\", \"name\", \"value\" }, new String[] { \"hidden\", \"type\", requestedMimeType });\n\t\t\t\t\tif(maxRetries >= -1)\n\t\t\t\t\t\toptionForm.addChild(\"input\", new String[] { \"type\", \"name\", \"value\" }, new String[] { \"hidden\", \"max-retries\", Integer.toString(maxRetries) });\n\t\t\t\t\toptionForm.addChild(\"input\", new String[] { \"type\", \"name\", \"value\" }, new String[] { \"submit\", \"fetch\", l10n(\"fetchLargeFileAnywayAndDisplayButton\") });\n\t\t\t\t\toptionForm.addChild(\"#\", \" - \" + l10n(\"fetchLargeFileAnywayAndDisplay\"));\n\t\t\t\t\taddDownloadOptions(ctx, optionList, key, mime, false, false, core);\n\t\t\t\t}\n\n\n\t\t\t\t//optionTable.addChild(\"tr\").addChild(\"td\", \"colspan\", \"2\").addChild(\"a\", new String[] { \"href\", \"title\" }, new String[] { \"/\", NodeL10n.getBase().getString(\"Toadlet.homepage\") }, l10n(\"abortToHomepage\"));\n\t\t\t\toptionList.addChild(\"li\").addChild(\"a\", new String[] { \"href\", \"title\" }, new String[] { \"/\", NodeL10n.getBase().getString(\"Toadlet.homepage\") }, l10n(\"abortToHomepage\"));\n\n\t\t\t\t//option = optionTable.addChild(\"tr\").addChild(\"td\", \"colspan\", \"2\");\n\t\t\t\toptionList.addChild(\"li\").addChild(ctx.getPageMaker().createBackLink(ctx, l10n(\"goBackToPrev\")));\n\n\t\t\t\twriteHTMLReply(ctx, 200, \"OK\", pageNode.generate());\n\t\t\t} else {\n\t\t\t\tPageNode page = ctx.getPageMaker().getPageNode(e.getShortMessage(), ctx);\n\t\t\t\tHTMLNode pageNode = page.outer;\n\t\t\t\tHTMLNode contentNode = page.content;\n\n\t\t\t\tHTMLNode infobox = contentNode.addChild(\"div\", \"class\", \"infobox infobox-error\");\n\t\t\t\tinfobox.addChild(\"div\", \"class\", \"infobox-header\", l10n(\"errorWithReason\", \"error\", e.getShortMessage()));\n\t\t\t\tHTMLNode infoboxContent = infobox.addChild(\"div\", \"class\", \"infobox-content\");\n\t\t\t\tHTMLNode fileInformationList = infoboxContent.addChild(\"ul\");\n\t\t\t\tHTMLNode option = fileInformationList.addChild(\"li\");\n\t\t\t\toption.addChild(\"#\", (l10n(\"filenameLabel\") + ' '));\n\t\t\t\toption.addChild(\"a\", \"href\", '/' + key.toString(), getFilename(key, e.getExpectedMimeType()));\n\n\t\t\t\tString mime = writeSizeAndMIME(fileInformationList, e);\n\t\t\t\tinfobox = contentNode.addChild(\"div\", \"class\", \"infobox infobox-error\");\n\t\t\t\tinfobox.addChild(\"div\", \"class\", \"infobox-header\", l10n(\"explanationTitle\"));\n\t\t\t\tinfoboxContent = infobox.addChild(\"div\", \"class\", \"infobox-content\");\n\t\t\t\tinfoboxContent.addChild(\"p\", l10n(\"unableToRetrieve\"));\n\t\t\t\tUnsafeContentTypeException filterException = null;\n\t\t\t\tif(e.getCause() != null && e.getCause() instanceof UnsafeContentTypeException) {\n\t\t\t\t\tfilterException = (UnsafeContentTypeException)e.getCause();\n\t\t\t\t}\n\t\t\t\tif(e.isFatal() && filterException == null)\n\t\t\t\t\tinfoboxContent.addChild(\"p\", l10n(\"errorIsFatal\"));\n\t\t\t\tinfoboxContent.addChild(\"p\", msg);\n\t\t\t\tif(filterException != null) {\n\t\t\t\t\tif(filterException.details() != null) {\n\t\t\t\t\t\tHTMLNode detailList = infoboxContent.addChild(\"ul\");\n\t\t\t\t\t\tfor(String detail : filterException.details()) {\n\t\t\t\t\t\t\tdetailList.addChild(\"li\", detail);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif(e.errorCodes != null) {\n\t\t\t\t\tinfoboxContent.addChild(\"p\").addChild(\"pre\").addChild(\"#\", e.errorCodes.toVerboseString());\n\t\t\t\t}\n\n\t\t\t\tinfobox = contentNode.addChild(\"div\", \"class\", \"infobox infobox-error\");\n\t\t\t\tinfobox.addChild(\"div\", \"class\", \"infobox-header\", l10n(\"options\"));\n\t\t\t\tinfoboxContent = infobox.addChild(\"div\", \"class\", \"infobox-content\");\n\n\t\t\t\tHTMLNode optionList = infoboxContent.addChild(\"ul\");\n\n\t\t\t\tPluginInfoWrapper keyUtil;\n\t\t\t\tif((e.mode == FetchException.NOT_IN_ARCHIVE || e.mode == FetchException.NOT_ENOUGH_PATH_COMPONENTS)) {\n\t\t\t\t\t// first look for the newest version\n\t\t\t\t\tif ((keyUtil = core.node.pluginManager.getPluginInfo(\"plugins.KeyUtils.KeyUtilsPlugin\")) != null) {\n\t\t\t\t\t\toption = optionList.addChild(\"li\");\n\t\t\t\t\t\tif (keyUtil.getPluginLongVersion() < 5010)\n\t\t\t\t\t\t\tNodeL10n.getBase().addL10nSubstitution(option, \"FProxyToadlet.openWithKeyExplorer\", new String[] { \"link\" }, new HTMLNode[] { HTMLNode.link(\"/KeyUtils/?automf=true&key=\" + key.toString()) });\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tNodeL10n.getBase().addL10nSubstitution(option, \"FProxyToadlet.openWithKeyExplorer\", new String[] { \"link\" }, new HTMLNode[] { HTMLNode.link(\"/KeyUtils/?key=\" + key.toString()) });\n\t\t\t\t\t\t\toption = optionList.addChild(\"li\");\n\t\t\t\t\t\t\tNodeL10n.getBase().addL10nSubstitution(option, \"FProxyToadlet.openWithSiteExplorer\", new String[] { \"link\" }, new HTMLNode[] { HTMLNode.link(\"/KeyUtils/Site?key=\" + key.toString()) });\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if ((keyUtil = core.node.pluginManager.getPluginInfo(\"plugins.KeyExplorer.KeyExplorer\")) != null) {\n\t\t\t\t\t\toption = optionList.addChild(\"li\");\n\t\t\t\t\t\tif (keyUtil.getPluginLongVersion() > 4999)\n\t\t\t\t\t\t\tNodeL10n.getBase().addL10nSubstitution(option, \"FProxyToadlet.openWithKeyExplorer\", new String[] { \"link\" }, new HTMLNode[] { HTMLNode.link(\"/KeyExplorer/?automf=true&key=\" + key.toString())});\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\tNodeL10n.getBase().addL10nSubstitution(option, \"FProxyToadlet.openWithKeyExplorer\", new String[] { \"link\" }, new HTMLNode[] { HTMLNode.link(\"/plugins/plugins.KeyExplorer.KeyExplorer/?key=\" + key.toString())});\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif(filterException != null) {\n\t\t\t\t\tif((mime.equals(\"application/x-freenet-index\")) && (core.node.pluginManager.isPluginLoaded(\"plugins.ThawIndexBrowser.ThawIndexBrowser\"))) {\n\t\t\t\t\t\toption = optionList.addChild(\"li\");\n\t\t\t\t\t\tNodeL10n.getBase().addL10nSubstitution(option, \"FProxyToadlet.openAsThawIndex\", new String[] { \"link\" }, new HTMLNode[] { HTMLNode.link(\"/plugins/plugins.ThawIndexBrowser.ThawIndexBrowser/?key=\" + key.toString()).addChild(\"b\") });\n\t\t\t\t\t}\n\t\t\t\t\toption = optionList.addChild(\"li\");\n\t\t\t\t\t// FIXME: is this safe? See bug #131\n\t\t\t\t\tMediaType textMediaType = new MediaType(\"text/plain\");\n\t\t\t\t\ttextMediaType.setParameter(\"charset\", (e.getExpectedMimeType() != null) ? MediaType.getCharsetRobust(e.getExpectedMimeType()) : null);\n\t\t\t\t\tNodeL10n.getBase().addL10nSubstitution(option, \"FProxyToadlet.openAsText\", new String[] { \"link\" }, new HTMLNode[] { HTMLNode.link(getLink(key, textMediaType.toString(), maxSize, null, false, maxRetries, overrideSize)) });\n\t\t\t\t\toption = optionList.addChild(\"li\");\n\t\t\t\t\tNodeL10n.getBase().addL10nSubstitution(option, \"FProxyToadlet.openForceDisk\", new String[] { \"link\" }, new HTMLNode[] { HTMLNode.link(getLink(key, mime, maxSize, null, true, maxRetries, overrideSize)) });\n\t\t\t\t\tif(!(mime.equals(\"application/octet-stream\") || mime.equals(\"application/x-msdownload\") || !DefaultMIMETypes.isPlausibleMIMEType(mime))) {\n\t\t\t\t\t\toption = optionList.addChild(\"li\");\n\t\t\t\t\t\tNodeL10n.getBase().addL10nSubstitution(option, \"FProxyToadlet.openForce\", new String[] { \"link\", \"mime\" }, new HTMLNode[] { HTMLNode.link(getLink(key, mime, maxSize, getForceValue(key, now), false, maxRetries, overrideSize)), HTMLNode.text(HTMLEncoder.encode(mime))});\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif((!e.isFatal() || filterException != null) && (ctx.isAllowedFullAccess() || !container.publicGatewayMode())) {\n\t\t\t\t\taddDownloadOptions(ctx, optionList, key, mimeType, filterException != null, filterException != null, core);\n\t\t\t\t\tif(filterException == null)\n\t\t\t\t\t\toptionList.addChild(\"li\").\n\t\t\t\t\t\t\taddChild(\"a\", \"href\", getLink(key, requestedMimeType, maxSize, httprequest.getParam(\"force\", null),\n\t\t\t\t\t\t\t\t\thttprequest.isParameterSet(\"forcedownload\"), maxRetries, overrideSize)).addChild(\"#\", l10n(\"retryNow\"));\n\t\t\t\t}\n\n\t\t\t\toptionList.addChild(\"li\").addChild(\"a\", new String[] { \"href\", \"title\" }, new String[] { \"/\", NodeL10n.getBase().\n\t\t\t\t\t\tgetString(\"Toadlet.homepage\") }, l10n(\"abortToHomepage\"));\n\n\t\t\t\toptionList.addChild(\"li\").addChild(ctx.getPageMaker().createBackLink(ctx, l10n(\"goBackToPrev\")));\n\t\t\t\tthis.writeHTMLReply(ctx, (e.mode == 10) ? 404 : 500 /* close enough - FIXME probably should depend on status code */,\n\t\t\t\t\t\t\"Internal Error\", pageNode.generate());\n\t\t\t}\n\t\t} catch (SocketException e) {\n\t\t\t// Probably irrelevant\n\t\t\tif(e.getMessage().equals(\"Broken pipe\")) {\n\t\t\t\tif(logMINOR)\n\t\t\t\t\tLogger.minor(this, \"Caught \"+e+\" while handling GET\", e);\n\t\t\t} else {\n\t\t\t\tLogger.normal(this, \"Caught \"+e);\n\t\t\t}\n\t\t\tthrow e;\n\t\t} catch (Throwable t) {\n\t\t\twriteInternalError(t, ctx);\n\t\t} finally {\n\t\t\tif(fr == null && data != null) data.free();\n\t\t\tif(fr != null) fr.close();\n\t\t}\n\t}","commit_id":"3094955affc257ccd34f2d8ae3458f74ae9f3ea3","url":"https://github.com/freenet/fred"},{"original_method":"private void innerHandleMethodGET(URI uri, HTTPRequest httprequest, ToadletContext ctx, int recursion)\n\t\t\tthrows ToadletContextClosedException, IOException, RedirectException {\n\n\t\tString ks = uri.getPath();\n\t\t\n\t\tMultiValueTable<String,String> headers = ctx.getHeaders();\n\t\tfinal String ua = headers.get(\"user-agent\");\n\t\tfinal String accept = headers.get(\"accept\");\n\t\tif(logMINOR) Logger.minor(this, \"UA = \"+ua+\" accept = \"+accept);\n\t\tfinal boolean canSendProgress =\n\t\t\tisBrowser(ua) && !ctx.disableProgressPage() && (accept == null || accept.indexOf(\"text/html\") > -1) && !httprequest.isParameterSet(\"forcedownload\");\n\n\t\tlong defaultMaxSize = canSendProgress ? MAX_LENGTH_WITH_PROGRESS : MAX_LENGTH_NO_PROGRESS;\n\t\t\n\t\t// max-retries\n\t\t// Less than -1 = use default.\n\t\t// 0 = one try only, don't retry\n\t\t// 1 = two tries\n\t\t// 2 = three tries\n\t\t// 3 or more = GO INTO COOLDOWN EVERY 3 TRIES! TAKES *MUCH* LONGER!!! STRONGLY NOT RECOMMENDED!!!\n\t\tint maxRetries = httprequest.getIntParam(\"max-retries\", -2);\n\t\t\n\t\tlong maxSize;\n\t\tlong maxSizeDownload;\n\n\t\tboolean restricted = (container.publicGatewayMode() && !ctx.isAllowedFullAccess());\n\n\t\tboolean overrideSize = false;\n\t\tmaxSize = defaultMaxSize;\n\t\tmaxSizeDownload = MAX_LENGTH_WITH_PROGRESS;\n\t\tif(!restricted) {\n\t\t\tif(httprequest.isParameterSet(\"max-size\")) {\n\t\t\t\tmaxSize = maxSizeDownload = httprequest.getLongParam(\"max-size\", defaultMaxSize);\n\t\t\t\toverrideSize = true;\n\t\t\t}\n\t\t}\n\n\t\tif (ks.equals(\"/\")) {\n\t\t\tif (httprequest.isParameterSet(\"key\")) {\n\t\t\t\tString k = httprequest.getParam(\"key\");\n\t\t\t\tFreenetURI newURI;\n\t\t\t\ttry {\n\t\t\t\t\tnewURI = new FreenetURI(k);\n\t\t\t\t} catch (MalformedURLException e) {\n\t\t\t\t\tLogger.normal(this, \"Invalid key: \"+e+\" for \"+k, e);\n\t\t\t\t\tsendErrorPage(ctx, 404, l10n(\"notFoundTitle\"), NodeL10n.getBase().getString(\"FProxyToadlet.invalidKeyWithReason\", new String[] { \"reason\" }, new String[] { e.toString() }));\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif(logMINOR) Logger.minor(this, \"Redirecting to FreenetURI: \"+newURI);\n\t\t\t\tString requestedMimeType = httprequest.getParam(\"type\");\n\t\t\t\tString location = getLink(newURI, requestedMimeType, maxSize, httprequest.getParam(\"force\", null), httprequest.isParameterSet(\"forcedownload\"), maxRetries, overrideSize);\n\t\t\t\twriteTemporaryRedirect(ctx, null, location);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tString querystring = uri.getQuery();\n\n\t\t\t\tif (querystring == null) {\n\t\t\t\t\tthrow new RedirectException(welcome);\n\t\t\t\t} else {\n\t\t\t\t\t// TODP possibly a proper URLEncode method\n\t\t\t\t\tquerystring = querystring.replace(' ', '+');\n\t\t\t\t\tthrow new RedirectException(\"/welcome/?\" + querystring);\n\t\t\t\t}\n\t\t\t} catch (URISyntaxException e) {\n\t\t\t\t// HUH!?!\n\t\t\t}\n\t\t}else if(ks.equals(\"/favicon.ico\")){\n\t\t\tbyte[] buf = new byte[1024];\n\t\t\tint len;\n\t\t\tInputStream strm = getClass().getResourceAsStream(\"staticfiles/favicon.ico\");\n\n\t\t\ttry {\n\t\t\t\tif (strm == null) {\n\t\t\t\t\tthis.sendErrorPage(ctx, 404, l10n(\"pathNotFoundTitle\"), l10n(\"pathNotFound\"));\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tctx.sendReplyHeaders(200, \"OK\", null, \"image/x-icon\", strm.available());\n\n\t\t\t\twhile ( (len = strm.read(buf)) > 0) {\n\t\t\t\t\tctx.writeData(buf, 0, len);\n\t\t\t\t}\n\t\t\t} finally {\n\t\t\t\tCloser.close(strm);\n\t\t\t}\n\t\t\treturn;\n\t\t} else if(ks.startsWith(\"/feed/\") || ks.equals(\"/feed\")) {\n\t\t\t//TODO Better way to find the host. Find if https is used?\n\t\t\tString host = ctx.getHeaders().get(\"host\");\n\t\t\tString atom = core.alerts.getAtom(\"http://\" + host);\n\t\t\tbyte[] buf = atom.getBytes(\"UTF-8\");\n\t\t\tctx.sendReplyHeaders(200, \"OK\", null, \"application/atom+xml\", buf.length);\n\t\t\tctx.writeData(buf, 0, buf.length);\n\t\t\treturn;\n\t\t}else if(ks.equals(\"/robots.txt\") && ctx.doRobots()){\n\t\t\tthis.writeTextReply(ctx, 200, \"Ok\", \"User-agent: *\\nDisallow: /\");\n\t\t\treturn;\n\t\t}else if(ks.startsWith(\"/darknet/\") || ks.equals(\"/darknet\")) { //TODO (pre-build 1045 url format) remove when obsolete\n\t\t\twritePermanentRedirect(ctx, \"obsoleted\", \"/friends/\");\n\t\t\treturn;\n\t\t}else if(ks.startsWith(\"/opennet/\") || ks.equals(\"/opennet\")) { //TODO (pre-build 1045 url format) remove when obsolete\n\t\t\twritePermanentRedirect(ctx, \"obsoleted\", \"/strangers/\");\n\t\t\treturn;\n\t\t} else if(ks.startsWith(\"/queue/\")) {\n\t\t\twritePermanentRedirect(ctx, \"obsoleted\", \"/downloads/\");\n\t\t\treturn;\n\t\t} else if(ks.startsWith(\"/config/\")) {\n\t\t\twritePermanentRedirect(ctx, \"obsoleted\", \"/config/node\");\n\t\t\treturn;\n\t\t}\n\n\t\tif(ks.startsWith(\"/\"))\n\t\t\tks = ks.substring(1);\n\n\t\t//first check of httprange before get\n\t\t// only valid number format is checked here\n\t\tString rangeStr = ctx.getHeaders().get(\"range\");\n\t\tif (rangeStr != null) {\n\t\t\ttry {\n\t\t\t\tparseRange(rangeStr);\n\t\t\t} catch (HTTPRangeException e) {\n\t\t\t\tLogger.normal(this, \"Invalid Range Header: \"+rangeStr, e);\n\t\t\t\tctx.sendReplyHeaders(416, \"Requested Range Not Satisfiable\", null, null, 0);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\tFreenetURI key;\n\t\ttry {\n\t\t\tkey = new FreenetURI(ks);\n\t\t} catch (MalformedURLException e) {\n\t\t\tPageNode page = ctx.getPageMaker().getPageNode(l10n(\"invalidKeyTitle\"), ctx);\n\t\t\tHTMLNode pageNode = page.outer;\n\t\t\tHTMLNode contentNode = page.content;\n\n\t\t\tHTMLNode errorInfobox = contentNode.addChild(\"div\", \"class\", \"infobox infobox-error\");\n\t\t\terrorInfobox.addChild(\"div\", \"class\", \"infobox-header\", NodeL10n.getBase().getString(\"FProxyToadlet.invalidKeyWithReason\", new String[] { \"reason\" }, new String[] { e.toString() }));\n\t\t\tHTMLNode errorContent = errorInfobox.addChild(\"div\", \"class\", \"infobox-content\");\n\t\t\terrorContent.addChild(\"#\", l10n(\"expectedKeyButGot\"));\n\t\t\terrorContent.addChild(\"code\", ks);\n\t\t\terrorContent.addChild(\"br\");\n\t\t\terrorContent.addChild(ctx.getPageMaker().createBackLink(ctx, l10n(\"goBack\")));\n\t\t\terrorContent.addChild(\"br\");\n\t\t\taddHomepageLink(errorContent);\n\n\t\t\tthis.writeHTMLReply(ctx, 400, l10n(\"invalidKeyTitle\"), pageNode.generate());\n\t\t\treturn;\n\t\t}\n\n\t\tFetchContext fctx = getFetchContext(maxSize);\n\t\t// max-size=-1 => use default\n\t\tmaxSize = fctx.maxOutputLength;\n\n\t\t//We should run the ContentFilter by default\n\t\tString forceString = httprequest.getParam(\"force\");\n\t\tlong now = System.currentTimeMillis();\n\t\tboolean force = false;\n\t\tif(forceString != null) {\n\t\t\tif(forceString.equals(getForceValue(key, now)) ||\n\t\t\t\t\tforceString.equals(getForceValue(key, now-FORCE_GRAIN_INTERVAL)))\n\t\t\t\tforce = true;\n\t\t}\n\t\tif(restricted)\n\t\t\tmaxRetries = -2;\n\t\tif(maxRetries >= -1) {\n\t\t\tfctx.maxNonSplitfileRetries = maxRetries;\n\t\t\tfctx.maxSplitfileBlockRetries = maxRetries;\n\t\t}\n\t\tif (!force && !httprequest.isParameterSet(\"forcedownload\")) fctx.filterData = true;\n\t\telse if(logMINOR) Logger.minor(this, \"Content filter disabled via request parameter\");\n\t\t//Load the fetch context with the callbacks needed for web-pushing, if enabled\n\t\tif(container.enableInlinePrefetch()) {\n\t\t\tfctx.prefetchHook = new FoundURICallback() {\n\n\t\t\t\tList<FreenetURI> uris = new ArrayList<FreenetURI>();\n\t\t\t\t\n\t\t\t\t@Override\n\t\t\t\tpublic void foundURI(FreenetURI uri) {\n\t\t\t\t\t// Ignore\n\t\t\t\t}\n\n\t\t\t\t@Override\n\t\t\t\tpublic void foundURI(FreenetURI uri, boolean inline) {\n\t\t\t\t\tif(!inline) return;\n\t\t\t\t\tif(logMINOR) Logger.minor(this, \"Prefetching \"+uri);\n\t\t\t\t\tsynchronized(this) {\n\t\t\t\t\t\tif(uris.size() < MAX_PREFETCH)\n\t\t\t\t\t\t\t// FIXME Maybe we should do this randomly, but since it's a DoS protection (in an obscure feature), if so we should do it in constant space!\n\t\t\t\t\t\t\turis.add(uri);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t@Override\n\t\t\t\tpublic void onText(String text, String type, URI baseURI) {\n\t\t\t\t\t// Ignore\n\t\t\t\t}\n\n\t\t\t\t@Override\n\t\t\t\tpublic void onFinishedPage() {\n\t\t\t\t\tcore.node.executor.execute(new Runnable() {\n\n\t\t\t\t\t\t@Override\n\t\t\t\t\t\tpublic void run() {\n\t\t\t\t\t\t\tfor(FreenetURI uri : uris) {\n\t\t\t\t\t\t\t\tclient.prefetch(uri, 60*1000, 512*1024, prefetchAllowedTypes);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t};\n\n\t\t}\n\t\tif(container.isFProxyWebPushingEnabled()) fctx.tagReplacer = new PushingTagReplacerCallback(core.getFProxy().fetchTracker, defaultMaxSize, ctx);\n\n\t\tString requestedMimeType = httprequest.getParam(\"type\", null);\n\t\tfctx.overrideMIME = requestedMimeType;\n\t\tString override = (requestedMimeType == null) ? \"\" : \"?type=\"+URLEncoder.encode(requestedMimeType,true);\n\t\tString maybeCharset = httprequest.isParameterSet(\"maybecharset\") ? httprequest.getParam(\"maybecharset\", null) : null;\n\t\tfctx.charset = maybeCharset;\n\t\tif(override.equals(\"\") && maybeCharset != null)\n\t\t\toverride = \"?maybecharset=\"+URLEncoder.encode(maybeCharset, true);\n\t\t// No point passing ?force= across a redirect, since the key will change.\n\t\t// However, there is every point in passing ?forcedownload.\n\t\tif(httprequest.isParameterSet(\"forcedownload\")) {\n\t\t\tif(override.length() == 0) override = \"?forcedownload\";\n\t\t\telse override = override+\"&forcedownload\";\n\t\t}\n\n\t\tBucket data = null;\n\t\tString mimeType = null;\n\t\tString referer = sanitizeReferer(ctx);\n\t\tFetchException fe = null;\n\n\n\t\tFProxyFetchResult fr = null;\n\n\t\t\tFProxyFetchWaiter fetch = null;\n\t\t\ttry {\n\t\t\t\tfetch = fetchTracker.makeFetcher(key, maxSize, fctx, ctx.getReFilterPolicy());\n\t\t\t} catch (FetchException e) {\n\t\t\t\tfe = fr.failed;\n\t\t\t}\n\t\t\tif(fetch != null)\n\t\t\twhile(true) {\n\t\t\tfr = fetch.getResult(!canSendProgress);\n\t\t\tif(fr.hasData()) {\n\n\t\t\t\tif(fr.getFetchCount() > 1 && !fr.hasWaited() && fr.getFetchCount() > 1 && key.isUSK() && context.uskManager.lookupKnownGood(USK.create(key)) > key.getSuggestedEdition()) {\n\t\t\t\t\tLogger.normal(this, \"Loading later edition...\");\n\t\t\t\t\tfetch.progress.requestImmediateCancel();\n\t\t\t\t\tfr = null;\n\t\t\t\t\tfetch = null;\n\t\t\t\t\ttry {\n\t\t\t\t\t\tfetch = fetchTracker.makeFetcher(key, maxSize, fctx, ctx.getReFilterPolicy());\n\t\t\t\t\t} catch (FetchException e) {\n\t\t\t\t\t\tfe = fr.failed;\n\t\t\t\t\t}\n\t\t\t\t\tif(fetch == null) break;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tif(logMINOR) Logger.minor(this, \"Found data\");\n\t\t\t\tdata = new NoFreeBucket(fr.data);\n\t\t\t\tmimeType = fr.mimeType;\n\t\t\t\tfetch.close(); // Not waiting any more, but still locked the results until sent\n\t\t\t\tbreak;\n\t\t\t} else if(fr.failed != null) {\n\t\t\t\tif(logMINOR) Logger.minor(this, \"Request failed\");\n\t\t\t\tfe = fr.failed;\n\t\t\t\tfetch.close(); // Not waiting any more, but still locked the results until sent\n\t\t\t\tbreak;\n\t\t\t} else if(canSendProgress) {\n\t\t\t\tif(logMINOR) Logger.minor(this, \"Still in progress\");\n\t\t\t\t// Still in progress\n\t\t\t\tboolean isJsEnabled=ctx.getContainer().isFProxyJavascriptEnabled() && ua != null && !ua.contains(\"AppleWebKit/\");\n\t\t\t\tboolean isWebPushingEnabled = false;\n\t\t\t\tPageNode page = ctx.getPageMaker().getPageNode(l10n(\"fetchingPageTitle\"), ctx);\n\t\t\t\tHTMLNode pageNode = page.outer;\n\t\t\t\tString location = getLink(key, requestedMimeType, maxSize, httprequest.getParam(\"force\", null), httprequest.isParameterSet(\"forcedownload\"), maxRetries, overrideSize);\n\t\t\t\tHTMLNode headNode=page.headNode;\n\t\t\t\tif(isJsEnabled){\n\t\t\t\t\t//If the user has enabled javascript, we add a <noscript> http refresh(if he has disabled it in the browser)\n\t\t\t\t\theadNode.addChild(\"noscript\").addChild(\"meta\", \"http-equiv\", \"Refresh\").addAttribute(\"content\", \"2;URL=\" + location);\n\t\t\t\t\t\t// If pushing is disabled, but js is enabled, then we add the original progresspage.js\n\t\t\t\t\t\tif ((isWebPushingEnabled = ctx.getContainer().isFProxyWebPushingEnabled()) == false) {\n\t\t\t\t\t\t\tHTMLNode scriptNode = headNode.addChild(\"script\", \"//abc\");\n\t\t\t\t\t\t\tscriptNode.addAttribute(\"type\", \"text/javascript\");\n\t\t\t\t\t\t\tscriptNode.addAttribute(\"src\", \"/static/js/progresspage.js\");\n\t\t\t\t\t\t}\n\t\t\t\t}else{\n\t\t\t\t\t//If he disabled it, we just put the http refresh meta, without the noscript\n\t\t\t\t\theadNode.addChild(\"meta\", \"http-equiv\", \"Refresh\").addAttribute(\"content\", \"2;URL=\" + location);\n\t\t\t\t}\n\t\t\t\tHTMLNode contentNode = page.content;\n\t\t\t\tHTMLNode infobox = contentNode.addChild(\"div\", \"class\", \"infobox infobox-information\");\n\t\t\t\tinfobox.addChild(\"div\", \"class\", \"infobox-header\", l10n(\"fetchingPageBox\"));\n\t\t\t\tHTMLNode infoboxContent = infobox.addChild(\"div\", \"class\", \"infobox-content\");\n\t\t\t\tinfoboxContent.addAttribute(\"id\", \"infoContent\");\n\t\t\t\tinfoboxContent.addChild(new ProgressInfoElement(fetchTracker, key, fctx, maxSize, core.isAdvancedModeEnabled(), ctx, isWebPushingEnabled));\n\n\n\t\t\t\tHTMLNode table = infoboxContent.addChild(\"table\", \"border\", \"0\");\n\t\t\t\tHTMLNode progressCell = table.addChild(\"tr\").addChild(\"td\", \"class\", \"request-progress\");\n\t\t\t\tif(fr.totalBlocks <= 0)\n\t\t\t\t\tprogressCell.addChild(\"#\", NodeL10n.getBase().getString(\"QueueToadlet.unknown\"));\n\t\t\t\telse {\n\t\t\t\t\tprogressCell.addChild(new ProgressBarElement(fetchTracker,key,fctx,maxSize,ctx, isWebPushingEnabled));\n\t\t\t\t}\n\n\t\t\t\tinfobox = contentNode.addChild(\"div\", \"class\", \"infobox infobox-information\");\n\t\t\t\tinfobox.addChild(\"div\", \"class\", \"infobox-header\", l10n(\"fetchingPageOptions\"));\n\t\t\t\tinfoboxContent = infobox.addChild(\"div\", \"class\", \"infobox-content\");\n\n\t\t\t\tHTMLNode optionList = infoboxContent.addChild(\"ul\");\n\t\t\t\toptionList.addChild(\"li\").addChild(\"p\", l10n(\"progressOptionZero\"));\n\n\t\t\t\taddDownloadOptions(ctx, optionList, key, mimeType, false, false, core);\n\n\t\t\t\toptionList.addChild(\"li\").addChild(ctx.getPageMaker().createBackLink(ctx, l10n(\"goBackToPrev\")));\n\t\t\t\toptionList.addChild(\"li\").addChild(\"a\", new String[] { \"href\", \"title\" },\n\t\t\t\t\t\tnew String[] { \"/\", NodeL10n.getBase().getString(\"Toadlet.homepage\") }, l10n(\"abortToHomepage\"));\n\n\t\t\t\tMultiValueTable<String, String> retHeaders = new MultiValueTable<String, String>();\n\t\t\t\t//retHeaders.put(\"Refresh\", \"2; url=\"+location);\n\t\t\t\twriteHTMLReply(ctx, 200, \"OK\", retHeaders, pageNode.generate());\n\t\t\t\tfr.close();\n\t\t\t\tfetch.close();\n\t\t\t\treturn;\n\t\t\t} else if(fr != null)\n\t\t\t\tfr.close();\n\t\t\t}\n\n\t\ttry {\n\t\t\tif(logMINOR)\n\t\t\t\tLogger.minor(this, \"FProxy fetching \"+key+\" (\"+maxSize+ ')');\n\t\t\tif(data == null && fe == null) {\n\t\t\t\tboolean needsFetch=true;\n\t\t\t\t//If we don't have the data, then check if an FProxyFetchInProgress has. It can happen when one FetchInProgress downloaded an image\n\t\t\t\t//asynchronously, then loads it. This way a FetchInprogress will have the full image, and no need to block.\n\t\t\t\tFProxyFetchInProgress progress=fetchTracker.getFetchInProgress(key, maxSize, fctx);\n\t\t\t\tif(progress!=null){\n\t\t\t\t\tFProxyFetchWaiter waiter=null;\n\t\t\t\t\tFProxyFetchResult result=null;\n\t\t\t\t\ttry{\n\t\t\t\t\t\twaiter=progress.getWaiter();\n\t\t\t\t\t\tresult=waiter.getResult(false);\n\t\t\t\t\t\tif(result.failed==null && result.data!=null){\n\t\t\t\t\t\t\tmimeType=result.mimeType;\n\t\t\t\t\t\t\tdata=result.data;\n\t\t\t\t\t\t\tdata=ctx.getBucketFactory().makeBucket(result.data.size());\n\t\t\t\t\t\t\tBucketTools.copy(result.data, data);\n\t\t\t\t\t\t\tneedsFetch=false;\n\t\t\t\t\t\t}\n\t\t\t\t\t}finally{\n\t\t\t\t\t\tif(waiter!=null){\n\t\t\t\t\t\t\tprogress.close(waiter);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif(result!=null){\n\t\t\t\t\t\t\tprogress.close(result);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif(needsFetch){\n\t\t\t\t\t//If we don't have the data, then we need to fetch it and block until it is available\n\t\t\t\t\tFetchResult result = fetch(key, maxSize, new RequestClient() {\n\t\t\t\t\t\t@Override\n\t\t\t\t\t\tpublic boolean persistent() {\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t@Override\n\t\t\t\t\t\tpublic void removeFrom(ObjectContainer container) {\n\t\t\t\t\t\t\tthrow new UnsupportedOperationException();\n\t\t\t\t\t\t}\n\t\t\t\t\t\t@Override\n\t\t\t\t\t\tpublic boolean realTimeFlag() {\n\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t} }, fctx);\n\n\t\t\t\t\t// Now, is it safe?\n\n\t\t\t\t\tdata = result.asBucket();\n\t\t\t\t\tmimeType = result.getMimeType();\n\t\t\t\t}\n\t\t\t} else if(fe != null) throw fe;\n\n\t\t\thandleDownload(ctx, data, ctx.getBucketFactory(), mimeType, requestedMimeType, forceString, httprequest.isParameterSet(\"forcedownload\"), \"/\", key, \"&max-size=\"+maxSizeDownload, referer, true, ctx, core, fr != null, maybeCharset);\n\t\t} catch (FetchException e) {\n\t\t\t//Handle exceptions thrown from the ContentFilter\n\t\t\tString msg = e.getMessage();\n\t\t\tif(logMINOR) {\n\t\t\t\tLogger.minor(this, \"Failed to fetch \"+uri+\" : \"+e);\n\t\t\t}\n\t\t\tif(e.newURI != null) {\n\t\t\t\tif(accept != null && (accept.startsWith(\"text/css\") || accept.startsWith(\"image/\")) && recursion++ < MAX_RECURSION) {\n\t\t\t\t\t// If it's an image or a CSS fetch, auto-follow the redirect, up to a limit.\n\t\t\t\t\tString link = getLink(e.newURI, requestedMimeType, maxSize, httprequest.getParam(\"force\", null), httprequest.isParameterSet(\"forcedownload\"), maxRetries, overrideSize);\n\t\t\t\t\ttry {\n\t\t\t\t\t\turi = new URI(link);\n\t\t\t\t\t\tinnerHandleMethodGET(uri, httprequest, ctx, recursion);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t} catch (URISyntaxException e1) {\n\t\t\t\t\t\tLogger.error(this, \"Caught \"+e1+\" parsing new link \"+link, e1);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tToadlet.writePermanentRedirect(ctx, msg,\n\t\t\t\t\tgetLink(e.newURI, requestedMimeType, maxSize, httprequest.getParam(\"force\", null), httprequest.isParameterSet(\"forcedownload\"), maxRetries, overrideSize));\n\t\t\t} else if(e.mode == FetchException.TOO_BIG) {\n\t\t\t\tPageNode page = ctx.getPageMaker().getPageNode(l10n(\"fileInformationTitle\"), ctx);\n\t\t\t\tHTMLNode pageNode = page.outer;\n\t\t\t\tHTMLNode contentNode = page.content;\n\n\t\t\t\tHTMLNode infobox = contentNode.addChild(\"div\", \"class\", \"infobox infobox-information\");\n\t\t\t\tinfobox.addChild(\"div\", \"class\", \"infobox-header\", l10n(\"largeFile\"));\n\t\t\t\tHTMLNode infoboxContent = infobox.addChild(\"div\", \"class\", \"infobox-content\");\n\t\t\t\tHTMLNode fileInformationList = infoboxContent.addChild(\"ul\");\n\t\t\t\tHTMLNode option = fileInformationList.addChild(\"li\");\n\t\t\t\toption.addChild(\"#\", (l10n(\"filenameLabel\") + ' '));\n\t\t\t\toption.addChild(\"a\", \"href\", '/' + key.toString(), getFilename(key, e.getExpectedMimeType()));\n\n\t\t\t\tString mime = writeSizeAndMIME(fileInformationList, e);\n\n\t\t\t\tinfobox = contentNode.addChild(\"div\", \"class\", \"infobox infobox-information\");\n\t\t\t\tinfobox.addChild(\"div\", \"class\", \"infobox-header\", l10n(\"explanationTitle\"));\n\t\t\t\tinfoboxContent = infobox.addChild(\"div\", \"class\", \"infobox-content\");\n\t\t\t\tinfoboxContent.addChild(\"#\", l10n(\"largeFileExplanationAndOptions\"));\n\t\t\t\tHTMLNode optionList = infoboxContent.addChild(\"ul\");\n\t\t\t\t//HTMLNode optionTable = infoboxContent.addChild(\"table\", \"border\", \"0\");\n\t\t\t\tif(!restricted) {\n\t\t\t\t\toption = optionList.addChild(\"li\");\n\t\t\t\t\tHTMLNode optionForm = option.addChild(\"form\", new String[] { \"action\", \"method\" }, new String[] {'/' + key.toString(), \"get\" });\n\t\t\t\t\toptionForm.addChild(\"input\", new String[] { \"type\", \"name\", \"value\" }, new String[] { \"hidden\", \"max-size\", String.valueOf(e.expectedSize == -1 ? Long.MAX_VALUE : e.expectedSize*2) });\n\t\t\t\t\tif (requestedMimeType != null)\n\t\t\t\t\t\toptionForm.addChild(\"input\", new String[] { \"type\", \"name\", \"value\" }, new String[] { \"hidden\", \"type\", requestedMimeType });\n\t\t\t\t\tif(maxRetries >= -1)\n\t\t\t\t\t\toptionForm.addChild(\"input\", new String[] { \"type\", \"name\", \"value\" }, new String[] { \"hidden\", \"max-retries\", Integer.toString(maxRetries) });\n\t\t\t\t\toptionForm.addChild(\"input\", new String[] { \"type\", \"name\", \"value\" }, new String[] { \"submit\", \"fetch\", l10n(\"fetchLargeFileAnywayAndDisplayButton\") });\n\t\t\t\t\toptionForm.addChild(\"#\", \" - \" + l10n(\"fetchLargeFileAnywayAndDisplay\"));\n\t\t\t\t\taddDownloadOptions(ctx, optionList, key, mime, false, false, core);\n\t\t\t\t}\n\n\n\t\t\t\t//optionTable.addChild(\"tr\").addChild(\"td\", \"colspan\", \"2\").addChild(\"a\", new String[] { \"href\", \"title\" }, new String[] { \"/\", NodeL10n.getBase().getString(\"Toadlet.homepage\") }, l10n(\"abortToHomepage\"));\n\t\t\t\toptionList.addChild(\"li\").addChild(\"a\", new String[] { \"href\", \"title\" }, new String[] { \"/\", NodeL10n.getBase().getString(\"Toadlet.homepage\") }, l10n(\"abortToHomepage\"));\n\n\t\t\t\t//option = optionTable.addChild(\"tr\").addChild(\"td\", \"colspan\", \"2\");\n\t\t\t\toptionList.addChild(\"li\").addChild(ctx.getPageMaker().createBackLink(ctx, l10n(\"goBackToPrev\")));\n\n\t\t\t\twriteHTMLReply(ctx, 200, \"OK\", pageNode.generate());\n\t\t\t} else {\n\t\t\t\tPageNode page = ctx.getPageMaker().getPageNode(e.getShortMessage(), ctx);\n\t\t\t\tHTMLNode pageNode = page.outer;\n\t\t\t\tHTMLNode contentNode = page.content;\n\n\t\t\t\tHTMLNode infobox = contentNode.addChild(\"div\", \"class\", \"infobox infobox-error\");\n\t\t\t\tinfobox.addChild(\"div\", \"class\", \"infobox-header\", l10n(\"errorWithReason\", \"error\", e.getShortMessage()));\n\t\t\t\tHTMLNode infoboxContent = infobox.addChild(\"div\", \"class\", \"infobox-content\");\n\t\t\t\tHTMLNode fileInformationList = infoboxContent.addChild(\"ul\");\n\t\t\t\tHTMLNode option = fileInformationList.addChild(\"li\");\n\t\t\t\toption.addChild(\"#\", (l10n(\"filenameLabel\") + ' '));\n\t\t\t\toption.addChild(\"a\", \"href\", '/' + key.toString(), getFilename(key, e.getExpectedMimeType()));\n\n\t\t\t\tString mime = writeSizeAndMIME(fileInformationList, e);\n\t\t\t\tinfobox = contentNode.addChild(\"div\", \"class\", \"infobox infobox-error\");\n\t\t\t\tinfobox.addChild(\"div\", \"class\", \"infobox-header\", l10n(\"explanationTitle\"));\n\t\t\t\tinfoboxContent = infobox.addChild(\"div\", \"class\", \"infobox-content\");\n\t\t\t\tinfoboxContent.addChild(\"p\", l10n(\"unableToRetrieve\"));\n\t\t\t\tUnsafeContentTypeException filterException = null;\n\t\t\t\tif(e.getCause() != null && e.getCause() instanceof UnsafeContentTypeException) {\n\t\t\t\t\tfilterException = (UnsafeContentTypeException)e.getCause();\n\t\t\t\t}\n\t\t\t\tif(e.isFatal() && filterException == null)\n\t\t\t\t\tinfoboxContent.addChild(\"p\", l10n(\"errorIsFatal\"));\n\t\t\t\tinfoboxContent.addChild(\"p\", msg);\n\t\t\t\tif(filterException != null) {\n\t\t\t\t\tif(filterException.details() != null) {\n\t\t\t\t\t\tHTMLNode detailList = infoboxContent.addChild(\"ul\");\n\t\t\t\t\t\tfor(String detail : filterException.details()) {\n\t\t\t\t\t\t\tdetailList.addChild(\"li\", detail);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif(e.errorCodes != null) {\n\t\t\t\t\tinfoboxContent.addChild(\"p\").addChild(\"pre\").addChild(\"#\", e.errorCodes.toVerboseString());\n\t\t\t\t}\n\n\t\t\t\tinfobox = contentNode.addChild(\"div\", \"class\", \"infobox infobox-error\");\n\t\t\t\tinfobox.addChild(\"div\", \"class\", \"infobox-header\", l10n(\"options\"));\n\t\t\t\tinfoboxContent = infobox.addChild(\"div\", \"class\", \"infobox-content\");\n\n\t\t\t\tHTMLNode optionList = infoboxContent.addChild(\"ul\");\n\n\t\t\t\tPluginInfoWrapper keyUtil;\n\t\t\t\tif((e.mode == FetchException.NOT_IN_ARCHIVE || e.mode == FetchException.NOT_ENOUGH_PATH_COMPONENTS)) {\n\t\t\t\t\t// first look for the newest version\n\t\t\t\t\tif ((keyUtil = core.node.pluginManager.getPluginInfo(\"plugins.KeyUtils.KeyUtilsPlugin\")) != null) {\n\t\t\t\t\t\toption = optionList.addChild(\"li\");\n\t\t\t\t\t\tif (keyUtil.getPluginLongVersion() < 5010)\n\t\t\t\t\t\t\tNodeL10n.getBase().addL10nSubstitution(option, \"FProxyToadlet.openWithKeyExplorer\", new String[] { \"link\" }, new HTMLNode[] { HTMLNode.link(\"/KeyUtils/?automf=true&key=\" + key.toString()) });\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tNodeL10n.getBase().addL10nSubstitution(option, \"FProxyToadlet.openWithKeyExplorer\", new String[] { \"link\" }, new HTMLNode[] { HTMLNode.link(\"/KeyUtils/?key=\" + key.toString()) });\n\t\t\t\t\t\t\toption = optionList.addChild(\"li\");\n\t\t\t\t\t\t\tNodeL10n.getBase().addL10nSubstitution(option, \"FProxyToadlet.openWithSiteExplorer\", new String[] { \"link\" }, new HTMLNode[] { HTMLNode.link(\"/KeyUtils/Site?key=\" + key.toString()) });\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if ((keyUtil = core.node.pluginManager.getPluginInfo(\"plugins.KeyExplorer.KeyExplorer\")) != null) {\n\t\t\t\t\t\toption = optionList.addChild(\"li\");\n\t\t\t\t\t\tif (keyUtil.getPluginLongVersion() > 4999)\n\t\t\t\t\t\t\tNodeL10n.getBase().addL10nSubstitution(option, \"FProxyToadlet.openWithKeyExplorer\", new String[] { \"link\" }, new HTMLNode[] { HTMLNode.link(\"/KeyExplorer/?automf=true&key=\" + key.toString())});\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\tNodeL10n.getBase().addL10nSubstitution(option, \"FProxyToadlet.openWithKeyExplorer\", new String[] { \"link\" }, new HTMLNode[] { HTMLNode.link(\"/plugins/plugins.KeyExplorer.KeyExplorer/?key=\" + key.toString())});\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif(filterException != null) {\n\t\t\t\t\tif((mime.equals(\"application/x-freenet-index\")) && (core.node.pluginManager.isPluginLoaded(\"plugins.ThawIndexBrowser.ThawIndexBrowser\"))) {\n\t\t\t\t\t\toption = optionList.addChild(\"li\");\n\t\t\t\t\t\tNodeL10n.getBase().addL10nSubstitution(option, \"FProxyToadlet.openAsThawIndex\", new String[] { \"link\" }, new HTMLNode[] { HTMLNode.link(\"/plugins/plugins.ThawIndexBrowser.ThawIndexBrowser/?key=\" + key.toString()).addChild(\"b\") });\n\t\t\t\t\t}\n\t\t\t\t\toption = optionList.addChild(\"li\");\n\t\t\t\t\t// FIXME: is this safe? See bug #131\n\t\t\t\t\tMediaType textMediaType = new MediaType(\"text/plain\");\n\t\t\t\t\ttextMediaType.setParameter(\"charset\", (e.getExpectedMimeType() != null) ? MediaType.getCharsetRobust(e.getExpectedMimeType()) : null);\n\t\t\t\t\tNodeL10n.getBase().addL10nSubstitution(option, \"FProxyToadlet.openAsText\", new String[] { \"link\" }, new HTMLNode[] { HTMLNode.link(getLink(key, textMediaType.toString(), maxSize, null, false, maxRetries, overrideSize)) });\n\t\t\t\t\toption = optionList.addChild(\"li\");\n\t\t\t\t\tNodeL10n.getBase().addL10nSubstitution(option, \"FProxyToadlet.openForceDisk\", new String[] { \"link\" }, new HTMLNode[] { HTMLNode.link(getLink(key, mime, maxSize, null, true, maxRetries, overrideSize)) });\n\t\t\t\t\tif(!(mime.equals(\"application/octet-stream\") || mime.equals(\"application/x-msdownload\") || !DefaultMIMETypes.isPlausibleMIMEType(mime))) {\n\t\t\t\t\t\toption = optionList.addChild(\"li\");\n\t\t\t\t\t\tNodeL10n.getBase().addL10nSubstitution(option, \"FProxyToadlet.openForce\", new String[] { \"link\", \"mime\" }, new HTMLNode[] { HTMLNode.link(getLink(key, mime, maxSize, getForceValue(key, now), false, maxRetries, overrideSize)), HTMLNode.text(HTMLEncoder.encode(mime))});\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif((!e.isFatal() || filterException != null) && (ctx.isAllowedFullAccess() || !container.publicGatewayMode())) {\n\t\t\t\t\taddDownloadOptions(ctx, optionList, key, mimeType, filterException != null, filterException != null, core);\n\t\t\t\t\tif(filterException == null)\n\t\t\t\t\t\toptionList.addChild(\"li\").\n\t\t\t\t\t\t\taddChild(\"a\", \"href\", getLink(key, requestedMimeType, maxSize, httprequest.getParam(\"force\", null),\n\t\t\t\t\t\t\t\t\thttprequest.isParameterSet(\"forcedownload\"), maxRetries, overrideSize)).addChild(\"#\", l10n(\"retryNow\"));\n\t\t\t\t}\n\n\t\t\t\toptionList.addChild(\"li\").addChild(\"a\", new String[] { \"href\", \"title\" }, new String[] { \"/\", NodeL10n.getBase().\n\t\t\t\t\t\tgetString(\"Toadlet.homepage\") }, l10n(\"abortToHomepage\"));\n\n\t\t\t\toptionList.addChild(\"li\").addChild(ctx.getPageMaker().createBackLink(ctx, l10n(\"goBackToPrev\")));\n\t\t\t\tthis.writeHTMLReply(ctx, (e.mode == 10) ? 404 : 500 /* close enough - FIXME probably should depend on status code */,\n\t\t\t\t\t\t\"Internal Error\", pageNode.generate());\n\t\t\t}\n\t\t} catch (SocketException e) {\n\t\t\t// Probably irrelevant\n\t\t\tif(e.getMessage().equals(\"Broken pipe\")) {\n\t\t\t\tif(logMINOR)\n\t\t\t\t\tLogger.minor(this, \"Caught \"+e+\" while handling GET\", e);\n\t\t\t} else {\n\t\t\t\tLogger.normal(this, \"Caught \"+e);\n\t\t\t}\n\t\t\tthrow e;\n\t\t} catch (Throwable t) {\n\t\t\twriteInternalError(t, ctx);\n\t\t} finally {\n\t\t\tif(fr == null && data != null) data.free();\n\t\t\tif(fr != null) fr.close();\n\t\t}\n\t}","id":55844,"modified_method":"private void innerHandleMethodGET(URI uri, HTTPRequest httprequest, ToadletContext ctx, int recursion)\n\t\t\tthrows ToadletContextClosedException, IOException, RedirectException {\n\n\t\tString ks = uri.getPath();\n\t\t\n\t\tMultiValueTable<String,String> headers = ctx.getHeaders();\n\t\tfinal String ua = headers.get(\"user-agent\");\n\t\tfinal String accept = headers.get(\"accept\");\n\t\tif(logMINOR) Logger.minor(this, \"UA = \"+ua+\" accept = \"+accept);\n\t\tfinal boolean canSendProgress =\n\t\t\tisBrowser(ua) && !ctx.disableProgressPage() && (accept == null || accept.indexOf(\"text/html\") > -1) && !httprequest.isParameterSet(\"forcedownload\");\n\n\t\tlong defaultMaxSize = canSendProgress ? MAX_LENGTH_WITH_PROGRESS : MAX_LENGTH_NO_PROGRESS;\n\t\t\n\t\t// max-retries\n\t\t// Less than -1 = use default.\n\t\t// 0 = one try only, don't retry\n\t\t// 1 = two tries\n\t\t// 2 = three tries\n\t\t// 3 or more = GO INTO COOLDOWN EVERY 3 TRIES! TAKES *MUCH* LONGER!!! STRONGLY NOT RECOMMENDED!!!\n\t\tint maxRetries = httprequest.getIntParam(\"max-retries\", -2);\n\t\t\n\t\tlong maxSize;\n\t\tlong maxSizeDownload;\n\n\t\tboolean restricted = (container.publicGatewayMode() && !ctx.isAllowedFullAccess());\n\n\t\tboolean overrideSize = false;\n\t\tmaxSize = defaultMaxSize;\n\t\tmaxSizeDownload = MAX_LENGTH_WITH_PROGRESS;\n\t\tif(!restricted) {\n\t\t\tif(httprequest.isParameterSet(\"max-size\")) {\n\t\t\t\tmaxSize = maxSizeDownload = httprequest.getLongParam(\"max-size\", defaultMaxSize);\n\t\t\t\toverrideSize = true;\n\t\t\t}\n\t\t}\n\n\t\tif (ks.equals(\"/\")) {\n\t\t\tif (httprequest.isParameterSet(\"key\")) {\n\t\t\t\tString k = httprequest.getParam(\"key\");\n\t\t\t\tFreenetURI newURI;\n\t\t\t\ttry {\n\t\t\t\t\tnewURI = new FreenetURI(k);\n\t\t\t\t} catch (MalformedURLException e) {\n\t\t\t\t\tLogger.normal(this, \"Invalid key: \"+e+\" for \"+k, e);\n\t\t\t\t\tsendErrorPage(ctx, 404, l10n(\"notFoundTitle\"), NodeL10n.getBase().getString(\"FProxyToadlet.invalidKeyWithReason\", new String[] { \"reason\" }, new String[] { e.toString() }));\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif(logMINOR) Logger.minor(this, \"Redirecting to FreenetURI: \"+newURI);\n\t\t\t\tString requestedMimeType = httprequest.getParam(\"type\");\n\t\t\t\tString location = getLink(newURI, requestedMimeType, maxSize, httprequest.getParam(\"force\", null), httprequest.isParameterSet(\"forcedownload\"), maxRetries, overrideSize);\n\t\t\t\twriteTemporaryRedirect(ctx, null, location);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t/*\n\t\t\t * Redirect to the welcome page because no key was specified.\n\t\t\t */\n\t\t\ttry {\n\t\t\t\tthrow new RedirectException(new URI(uri.getScheme(), uri.getUserInfo(), uri.getHost(), uri.getPort(), welcome.getPath(), uri.getQuery(), uri.getFragment()));\n\t\t\t} catch (URISyntaxException e) {\n\t\t\t\t/*\n\t\t\t\t * This shouldn't happen because all the inputs to the URI constructor come from getters\n\t\t\t\t * of existing URIs.\n\t\t\t\t */\n\t\t\t\tLogger.error(FProxyToadlet.class, \"Unexpected syntax error in URI: \" + e);\n\t\t\t\twriteTemporaryRedirect(ctx, \"Internal error. Please check logs and report.\", WelcomeToadlet.PATH);\n\t\t\t}\n\t\t}else if(ks.equals(\"/favicon.ico\")){\n\t\t\tbyte[] buf = new byte[1024];\n\t\t\tint len;\n\t\t\tInputStream strm = getClass().getResourceAsStream(\"staticfiles/favicon.ico\");\n\n\t\t\ttry {\n\t\t\t\tif (strm == null) {\n\t\t\t\t\tthis.sendErrorPage(ctx, 404, l10n(\"pathNotFoundTitle\"), l10n(\"pathNotFound\"));\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tctx.sendReplyHeaders(200, \"OK\", null, \"image/x-icon\", strm.available());\n\n\t\t\t\twhile ( (len = strm.read(buf)) > 0) {\n\t\t\t\t\tctx.writeData(buf, 0, len);\n\t\t\t\t}\n\t\t\t} finally {\n\t\t\t\tCloser.close(strm);\n\t\t\t}\n\t\t\treturn;\n\t\t} else if(ks.startsWith(\"/feed/\") || ks.equals(\"/feed\")) {\n\t\t\t//TODO Better way to find the host. Find if https is used?\n\t\t\tString host = ctx.getHeaders().get(\"host\");\n\t\t\tString atom = core.alerts.getAtom(\"http://\" + host);\n\t\t\tbyte[] buf = atom.getBytes(\"UTF-8\");\n\t\t\tctx.sendReplyHeaders(200, \"OK\", null, \"application/atom+xml\", buf.length);\n\t\t\tctx.writeData(buf, 0, buf.length);\n\t\t\treturn;\n\t\t}else if(ks.equals(\"/robots.txt\") && ctx.doRobots()){\n\t\t\tthis.writeTextReply(ctx, 200, \"Ok\", \"User-agent: *\\nDisallow: /\");\n\t\t\treturn;\n\t\t}else if(ks.startsWith(\"/darknet/\") || ks.equals(\"/darknet\")) { //TODO (pre-build 1045 url format) remove when obsolete\n\t\t\twritePermanentRedirect(ctx, \"obsoleted\", \"/friends/\");\n\t\t\treturn;\n\t\t}else if(ks.startsWith(\"/opennet/\") || ks.equals(\"/opennet\")) { //TODO (pre-build 1045 url format) remove when obsolete\n\t\t\twritePermanentRedirect(ctx, \"obsoleted\", \"/strangers/\");\n\t\t\treturn;\n\t\t} else if(ks.startsWith(\"/queue/\")) {\n\t\t\twritePermanentRedirect(ctx, \"obsoleted\", \"/downloads/\");\n\t\t\treturn;\n\t\t} else if(ks.startsWith(\"/config/\")) {\n\t\t\twritePermanentRedirect(ctx, \"obsoleted\", \"/config/node\");\n\t\t\treturn;\n\t\t}\n\n\t\tif(ks.startsWith(\"/\"))\n\t\t\tks = ks.substring(1);\n\n\t\t//first check of httprange before get\n\t\t// only valid number format is checked here\n\t\tString rangeStr = ctx.getHeaders().get(\"range\");\n\t\tif (rangeStr != null) {\n\t\t\ttry {\n\t\t\t\tparseRange(rangeStr);\n\t\t\t} catch (HTTPRangeException e) {\n\t\t\t\tLogger.normal(this, \"Invalid Range Header: \"+rangeStr, e);\n\t\t\t\tctx.sendReplyHeaders(416, \"Requested Range Not Satisfiable\", null, null, 0);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\tFreenetURI key;\n\t\ttry {\n\t\t\tkey = new FreenetURI(ks);\n\t\t} catch (MalformedURLException e) {\n\t\t\tPageNode page = ctx.getPageMaker().getPageNode(l10n(\"invalidKeyTitle\"), ctx);\n\t\t\tHTMLNode pageNode = page.outer;\n\t\t\tHTMLNode contentNode = page.content;\n\n\t\t\tHTMLNode errorInfobox = contentNode.addChild(\"div\", \"class\", \"infobox infobox-error\");\n\t\t\terrorInfobox.addChild(\"div\", \"class\", \"infobox-header\", NodeL10n.getBase().getString(\"FProxyToadlet.invalidKeyWithReason\", new String[] { \"reason\" }, new String[] { e.toString() }));\n\t\t\tHTMLNode errorContent = errorInfobox.addChild(\"div\", \"class\", \"infobox-content\");\n\t\t\terrorContent.addChild(\"#\", l10n(\"expectedKeyButGot\"));\n\t\t\terrorContent.addChild(\"code\", ks);\n\t\t\terrorContent.addChild(\"br\");\n\t\t\terrorContent.addChild(ctx.getPageMaker().createBackLink(ctx, l10n(\"goBack\")));\n\t\t\terrorContent.addChild(\"br\");\n\t\t\taddHomepageLink(errorContent);\n\n\t\t\tthis.writeHTMLReply(ctx, 400, l10n(\"invalidKeyTitle\"), pageNode.generate());\n\t\t\treturn;\n\t\t}\n\n\t\tFetchContext fctx = getFetchContext(maxSize);\n\t\t// max-size=-1 => use default\n\t\tmaxSize = fctx.maxOutputLength;\n\n\t\t//We should run the ContentFilter by default\n\t\tString forceString = httprequest.getParam(\"force\");\n\t\tlong now = System.currentTimeMillis();\n\t\tboolean force = false;\n\t\tif(forceString != null) {\n\t\t\tif(forceString.equals(getForceValue(key, now)) ||\n\t\t\t\t\tforceString.equals(getForceValue(key, now-FORCE_GRAIN_INTERVAL)))\n\t\t\t\tforce = true;\n\t\t}\n\t\tif(restricted)\n\t\t\tmaxRetries = -2;\n\t\tif(maxRetries >= -1) {\n\t\t\tfctx.maxNonSplitfileRetries = maxRetries;\n\t\t\tfctx.maxSplitfileBlockRetries = maxRetries;\n\t\t}\n\t\tif (!force && !httprequest.isParameterSet(\"forcedownload\")) fctx.filterData = true;\n\t\telse if(logMINOR) Logger.minor(this, \"Content filter disabled via request parameter\");\n\t\t//Load the fetch context with the callbacks needed for web-pushing, if enabled\n\t\tif(container.enableInlinePrefetch()) {\n\t\t\tfctx.prefetchHook = new FoundURICallback() {\n\n\t\t\t\tList<FreenetURI> uris = new ArrayList<FreenetURI>();\n\t\t\t\t\n\t\t\t\t@Override\n\t\t\t\tpublic void foundURI(FreenetURI uri) {\n\t\t\t\t\t// Ignore\n\t\t\t\t}\n\n\t\t\t\t@Override\n\t\t\t\tpublic void foundURI(FreenetURI uri, boolean inline) {\n\t\t\t\t\tif(!inline) return;\n\t\t\t\t\tif(logMINOR) Logger.minor(this, \"Prefetching \"+uri);\n\t\t\t\t\tsynchronized(this) {\n\t\t\t\t\t\tif(uris.size() < MAX_PREFETCH)\n\t\t\t\t\t\t\t// FIXME Maybe we should do this randomly, but since it's a DoS protection (in an obscure feature), if so we should do it in constant space!\n\t\t\t\t\t\t\turis.add(uri);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t@Override\n\t\t\t\tpublic void onText(String text, String type, URI baseURI) {\n\t\t\t\t\t// Ignore\n\t\t\t\t}\n\n\t\t\t\t@Override\n\t\t\t\tpublic void onFinishedPage() {\n\t\t\t\t\tcore.node.executor.execute(new Runnable() {\n\n\t\t\t\t\t\t@Override\n\t\t\t\t\t\tpublic void run() {\n\t\t\t\t\t\t\tfor(FreenetURI uri : uris) {\n\t\t\t\t\t\t\t\tclient.prefetch(uri, 60*1000, 512*1024, prefetchAllowedTypes);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t};\n\n\t\t}\n\t\tif(container.isFProxyWebPushingEnabled()) fctx.tagReplacer = new PushingTagReplacerCallback(core.getFProxy().fetchTracker, defaultMaxSize, ctx);\n\n\t\tString requestedMimeType = httprequest.getParam(\"type\", null);\n\t\tfctx.overrideMIME = requestedMimeType;\n\t\tString override = (requestedMimeType == null) ? \"\" : \"?type=\"+URLEncoder.encode(requestedMimeType,true);\n\t\tString maybeCharset = httprequest.isParameterSet(\"maybecharset\") ? httprequest.getParam(\"maybecharset\", null) : null;\n\t\tfctx.charset = maybeCharset;\n\t\tif(override.equals(\"\") && maybeCharset != null)\n\t\t\toverride = \"?maybecharset=\"+URLEncoder.encode(maybeCharset, true);\n\t\t// No point passing ?force= across a redirect, since the key will change.\n\t\t// However, there is every point in passing ?forcedownload.\n\t\tif(httprequest.isParameterSet(\"forcedownload\")) {\n\t\t\tif(override.length() == 0) override = \"?forcedownload\";\n\t\t\telse override = override+\"&forcedownload\";\n\t\t}\n\n\t\tBucket data = null;\n\t\tString mimeType = null;\n\t\tString referer = sanitizeReferer(ctx);\n\t\tFetchException fe = null;\n\n\n\t\tFProxyFetchResult fr = null;\n\n\t\t\tFProxyFetchWaiter fetch = null;\n\t\t\ttry {\n\t\t\t\tfetch = fetchTracker.makeFetcher(key, maxSize, fctx, ctx.getReFilterPolicy());\n\t\t\t} catch (FetchException e) {\n\t\t\t\tfe = fr.failed;\n\t\t\t}\n\t\t\tif(fetch != null)\n\t\t\twhile(true) {\n\t\t\tfr = fetch.getResult(!canSendProgress);\n\t\t\tif(fr.hasData()) {\n\n\t\t\t\tif(fr.getFetchCount() > 1 && !fr.hasWaited() && fr.getFetchCount() > 1 && key.isUSK() && context.uskManager.lookupKnownGood(USK.create(key)) > key.getSuggestedEdition()) {\n\t\t\t\t\tLogger.normal(this, \"Loading later edition...\");\n\t\t\t\t\tfetch.progress.requestImmediateCancel();\n\t\t\t\t\tfr = null;\n\t\t\t\t\tfetch = null;\n\t\t\t\t\ttry {\n\t\t\t\t\t\tfetch = fetchTracker.makeFetcher(key, maxSize, fctx, ctx.getReFilterPolicy());\n\t\t\t\t\t} catch (FetchException e) {\n\t\t\t\t\t\tfe = fr.failed;\n\t\t\t\t\t}\n\t\t\t\t\tif(fetch == null) break;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tif(logMINOR) Logger.minor(this, \"Found data\");\n\t\t\t\tdata = new NoFreeBucket(fr.data);\n\t\t\t\tmimeType = fr.mimeType;\n\t\t\t\tfetch.close(); // Not waiting any more, but still locked the results until sent\n\t\t\t\tbreak;\n\t\t\t} else if(fr.failed != null) {\n\t\t\t\tif(logMINOR) Logger.minor(this, \"Request failed\");\n\t\t\t\tfe = fr.failed;\n\t\t\t\tfetch.close(); // Not waiting any more, but still locked the results until sent\n\t\t\t\tbreak;\n\t\t\t} else if(canSendProgress) {\n\t\t\t\tif(logMINOR) Logger.minor(this, \"Still in progress\");\n\t\t\t\t// Still in progress\n\t\t\t\tboolean isJsEnabled=ctx.getContainer().isFProxyJavascriptEnabled() && ua != null && !ua.contains(\"AppleWebKit/\");\n\t\t\t\tboolean isWebPushingEnabled = false;\n\t\t\t\tPageNode page = ctx.getPageMaker().getPageNode(l10n(\"fetchingPageTitle\"), ctx);\n\t\t\t\tHTMLNode pageNode = page.outer;\n\t\t\t\tString location = getLink(key, requestedMimeType, maxSize, httprequest.getParam(\"force\", null), httprequest.isParameterSet(\"forcedownload\"), maxRetries, overrideSize);\n\t\t\t\tHTMLNode headNode=page.headNode;\n\t\t\t\tif(isJsEnabled){\n\t\t\t\t\t//If the user has enabled javascript, we add a <noscript> http refresh(if he has disabled it in the browser)\n\t\t\t\t\theadNode.addChild(\"noscript\").addChild(\"meta\", \"http-equiv\", \"Refresh\").addAttribute(\"content\", \"2;URL=\" + location);\n\t\t\t\t\t\t// If pushing is disabled, but js is enabled, then we add the original progresspage.js\n\t\t\t\t\t\tif ((isWebPushingEnabled = ctx.getContainer().isFProxyWebPushingEnabled()) == false) {\n\t\t\t\t\t\t\tHTMLNode scriptNode = headNode.addChild(\"script\", \"//abc\");\n\t\t\t\t\t\t\tscriptNode.addAttribute(\"type\", \"text/javascript\");\n\t\t\t\t\t\t\tscriptNode.addAttribute(\"src\", \"/static/js/progresspage.js\");\n\t\t\t\t\t\t}\n\t\t\t\t}else{\n\t\t\t\t\t//If he disabled it, we just put the http refresh meta, without the noscript\n\t\t\t\t\theadNode.addChild(\"meta\", \"http-equiv\", \"Refresh\").addAttribute(\"content\", \"2;URL=\" + location);\n\t\t\t\t}\n\t\t\t\tHTMLNode contentNode = page.content;\n\t\t\t\tHTMLNode infobox = contentNode.addChild(\"div\", \"class\", \"infobox infobox-information\");\n\t\t\t\tinfobox.addChild(\"div\", \"class\", \"infobox-header\", l10n(\"fetchingPageBox\"));\n\t\t\t\tHTMLNode infoboxContent = infobox.addChild(\"div\", \"class\", \"infobox-content\");\n\t\t\t\tinfoboxContent.addAttribute(\"id\", \"infoContent\");\n\t\t\t\tinfoboxContent.addChild(new ProgressInfoElement(fetchTracker, key, fctx, maxSize, core.isAdvancedModeEnabled(), ctx, isWebPushingEnabled));\n\n\n\t\t\t\tHTMLNode table = infoboxContent.addChild(\"table\", \"border\", \"0\");\n\t\t\t\tHTMLNode progressCell = table.addChild(\"tr\").addChild(\"td\", \"class\", \"request-progress\");\n\t\t\t\tif(fr.totalBlocks <= 0)\n\t\t\t\t\tprogressCell.addChild(\"#\", NodeL10n.getBase().getString(\"QueueToadlet.unknown\"));\n\t\t\t\telse {\n\t\t\t\t\tprogressCell.addChild(new ProgressBarElement(fetchTracker,key,fctx,maxSize,ctx, isWebPushingEnabled));\n\t\t\t\t}\n\n\t\t\t\tinfobox = contentNode.addChild(\"div\", \"class\", \"infobox infobox-information\");\n\t\t\t\tinfobox.addChild(\"div\", \"class\", \"infobox-header\", l10n(\"fetchingPageOptions\"));\n\t\t\t\tinfoboxContent = infobox.addChild(\"div\", \"class\", \"infobox-content\");\n\n\t\t\t\tHTMLNode optionList = infoboxContent.addChild(\"ul\");\n\t\t\t\toptionList.addChild(\"li\").addChild(\"p\", l10n(\"progressOptionZero\"));\n\n\t\t\t\taddDownloadOptions(ctx, optionList, key, mimeType, false, false, core);\n\n\t\t\t\toptionList.addChild(\"li\").addChild(ctx.getPageMaker().createBackLink(ctx, l10n(\"goBackToPrev\")));\n\t\t\t\toptionList.addChild(\"li\").addChild(\"a\", new String[] { \"href\", \"title\" },\n\t\t\t\t\t\tnew String[] { \"/\", NodeL10n.getBase().getString(\"Toadlet.homepage\") }, l10n(\"abortToHomepage\"));\n\n\t\t\t\tMultiValueTable<String, String> retHeaders = new MultiValueTable<String, String>();\n\t\t\t\t//retHeaders.put(\"Refresh\", \"2; url=\"+location);\n\t\t\t\twriteHTMLReply(ctx, 200, \"OK\", retHeaders, pageNode.generate());\n\t\t\t\tfr.close();\n\t\t\t\tfetch.close();\n\t\t\t\treturn;\n\t\t\t} else if(fr != null)\n\t\t\t\tfr.close();\n\t\t\t}\n\n\t\ttry {\n\t\t\tif(logMINOR)\n\t\t\t\tLogger.minor(this, \"FProxy fetching \"+key+\" (\"+maxSize+ ')');\n\t\t\tif(data == null && fe == null) {\n\t\t\t\tboolean needsFetch=true;\n\t\t\t\t//If we don't have the data, then check if an FProxyFetchInProgress has. It can happen when one FetchInProgress downloaded an image\n\t\t\t\t//asynchronously, then loads it. This way a FetchInprogress will have the full image, and no need to block.\n\t\t\t\tFProxyFetchInProgress progress=fetchTracker.getFetchInProgress(key, maxSize, fctx);\n\t\t\t\tif(progress!=null){\n\t\t\t\t\tFProxyFetchWaiter waiter=null;\n\t\t\t\t\tFProxyFetchResult result=null;\n\t\t\t\t\ttry{\n\t\t\t\t\t\twaiter=progress.getWaiter();\n\t\t\t\t\t\tresult=waiter.getResult(false);\n\t\t\t\t\t\tif(result.failed==null && result.data!=null){\n\t\t\t\t\t\t\tmimeType=result.mimeType;\n\t\t\t\t\t\t\tdata=result.data;\n\t\t\t\t\t\t\tdata=ctx.getBucketFactory().makeBucket(result.data.size());\n\t\t\t\t\t\t\tBucketTools.copy(result.data, data);\n\t\t\t\t\t\t\tneedsFetch=false;\n\t\t\t\t\t\t}\n\t\t\t\t\t}finally{\n\t\t\t\t\t\tif(waiter!=null){\n\t\t\t\t\t\t\tprogress.close(waiter);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif(result!=null){\n\t\t\t\t\t\t\tprogress.close(result);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif(needsFetch){\n\t\t\t\t\t//If we don't have the data, then we need to fetch it and block until it is available\n\t\t\t\t\tFetchResult result = fetch(key, maxSize, new RequestClient() {\n\t\t\t\t\t\t@Override\n\t\t\t\t\t\tpublic boolean persistent() {\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t@Override\n\t\t\t\t\t\tpublic void removeFrom(ObjectContainer container) {\n\t\t\t\t\t\t\tthrow new UnsupportedOperationException();\n\t\t\t\t\t\t}\n\t\t\t\t\t\t@Override\n\t\t\t\t\t\tpublic boolean realTimeFlag() {\n\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t} }, fctx);\n\n\t\t\t\t\t// Now, is it safe?\n\n\t\t\t\t\tdata = result.asBucket();\n\t\t\t\t\tmimeType = result.getMimeType();\n\t\t\t\t}\n\t\t\t} else if(fe != null) throw fe;\n\n\t\t\thandleDownload(ctx, data, ctx.getBucketFactory(), mimeType, requestedMimeType, forceString, httprequest.isParameterSet(\"forcedownload\"), \"/\", key, \"&max-size=\"+maxSizeDownload, referer, true, ctx, core, fr != null, maybeCharset);\n\t\t} catch (FetchException e) {\n\t\t\t//Handle exceptions thrown from the ContentFilter\n\t\t\tString msg = e.getMessage();\n\t\t\tif(logMINOR) {\n\t\t\t\tLogger.minor(this, \"Failed to fetch \"+uri+\" : \"+e);\n\t\t\t}\n\t\t\tif(e.newURI != null) {\n\t\t\t\tif(accept != null && (accept.startsWith(\"text/css\") || accept.startsWith(\"image/\")) && recursion++ < MAX_RECURSION) {\n\t\t\t\t\t// If it's an image or a CSS fetch, auto-follow the redirect, up to a limit.\n\t\t\t\t\tString link = getLink(e.newURI, requestedMimeType, maxSize, httprequest.getParam(\"force\", null), httprequest.isParameterSet(\"forcedownload\"), maxRetries, overrideSize);\n\t\t\t\t\ttry {\n\t\t\t\t\t\turi = new URI(link);\n\t\t\t\t\t\tinnerHandleMethodGET(uri, httprequest, ctx, recursion);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t} catch (URISyntaxException e1) {\n\t\t\t\t\t\tLogger.error(this, \"Caught \"+e1+\" parsing new link \"+link, e1);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tToadlet.writePermanentRedirect(ctx, msg,\n\t\t\t\t\tgetLink(e.newURI, requestedMimeType, maxSize, httprequest.getParam(\"force\", null), httprequest.isParameterSet(\"forcedownload\"), maxRetries, overrideSize));\n\t\t\t} else if(e.mode == FetchException.TOO_BIG) {\n\t\t\t\tPageNode page = ctx.getPageMaker().getPageNode(l10n(\"fileInformationTitle\"), ctx);\n\t\t\t\tHTMLNode pageNode = page.outer;\n\t\t\t\tHTMLNode contentNode = page.content;\n\n\t\t\t\tHTMLNode infobox = contentNode.addChild(\"div\", \"class\", \"infobox infobox-information\");\n\t\t\t\tinfobox.addChild(\"div\", \"class\", \"infobox-header\", l10n(\"largeFile\"));\n\t\t\t\tHTMLNode infoboxContent = infobox.addChild(\"div\", \"class\", \"infobox-content\");\n\t\t\t\tHTMLNode fileInformationList = infoboxContent.addChild(\"ul\");\n\t\t\t\tHTMLNode option = fileInformationList.addChild(\"li\");\n\t\t\t\toption.addChild(\"#\", (l10n(\"filenameLabel\") + ' '));\n\t\t\t\toption.addChild(\"a\", \"href\", '/' + key.toString(), getFilename(key, e.getExpectedMimeType()));\n\n\t\t\t\tString mime = writeSizeAndMIME(fileInformationList, e);\n\n\t\t\t\tinfobox = contentNode.addChild(\"div\", \"class\", \"infobox infobox-information\");\n\t\t\t\tinfobox.addChild(\"div\", \"class\", \"infobox-header\", l10n(\"explanationTitle\"));\n\t\t\t\tinfoboxContent = infobox.addChild(\"div\", \"class\", \"infobox-content\");\n\t\t\t\tinfoboxContent.addChild(\"#\", l10n(\"largeFileExplanationAndOptions\"));\n\t\t\t\tHTMLNode optionList = infoboxContent.addChild(\"ul\");\n\t\t\t\t//HTMLNode optionTable = infoboxContent.addChild(\"table\", \"border\", \"0\");\n\t\t\t\tif(!restricted) {\n\t\t\t\t\toption = optionList.addChild(\"li\");\n\t\t\t\t\tHTMLNode optionForm = option.addChild(\"form\", new String[] { \"action\", \"method\" }, new String[] {'/' + key.toString(), \"get\" });\n\t\t\t\t\toptionForm.addChild(\"input\", new String[] { \"type\", \"name\", \"value\" }, new String[] { \"hidden\", \"max-size\", String.valueOf(e.expectedSize == -1 ? Long.MAX_VALUE : e.expectedSize*2) });\n\t\t\t\t\tif (requestedMimeType != null)\n\t\t\t\t\t\toptionForm.addChild(\"input\", new String[] { \"type\", \"name\", \"value\" }, new String[] { \"hidden\", \"type\", requestedMimeType });\n\t\t\t\t\tif(maxRetries >= -1)\n\t\t\t\t\t\toptionForm.addChild(\"input\", new String[] { \"type\", \"name\", \"value\" }, new String[] { \"hidden\", \"max-retries\", Integer.toString(maxRetries) });\n\t\t\t\t\toptionForm.addChild(\"input\", new String[] { \"type\", \"name\", \"value\" }, new String[] { \"submit\", \"fetch\", l10n(\"fetchLargeFileAnywayAndDisplayButton\") });\n\t\t\t\t\toptionForm.addChild(\"#\", \" - \" + l10n(\"fetchLargeFileAnywayAndDisplay\"));\n\t\t\t\t\taddDownloadOptions(ctx, optionList, key, mime, false, false, core);\n\t\t\t\t}\n\n\n\t\t\t\t//optionTable.addChild(\"tr\").addChild(\"td\", \"colspan\", \"2\").addChild(\"a\", new String[] { \"href\", \"title\" }, new String[] { \"/\", NodeL10n.getBase().getString(\"Toadlet.homepage\") }, l10n(\"abortToHomepage\"));\n\t\t\t\toptionList.addChild(\"li\").addChild(\"a\", new String[] { \"href\", \"title\" }, new String[] { \"/\", NodeL10n.getBase().getString(\"Toadlet.homepage\") }, l10n(\"abortToHomepage\"));\n\n\t\t\t\t//option = optionTable.addChild(\"tr\").addChild(\"td\", \"colspan\", \"2\");\n\t\t\t\toptionList.addChild(\"li\").addChild(ctx.getPageMaker().createBackLink(ctx, l10n(\"goBackToPrev\")));\n\n\t\t\t\twriteHTMLReply(ctx, 200, \"OK\", pageNode.generate());\n\t\t\t} else {\n\t\t\t\tPageNode page = ctx.getPageMaker().getPageNode(e.getShortMessage(), ctx);\n\t\t\t\tHTMLNode pageNode = page.outer;\n\t\t\t\tHTMLNode contentNode = page.content;\n\n\t\t\t\tHTMLNode infobox = contentNode.addChild(\"div\", \"class\", \"infobox infobox-error\");\n\t\t\t\tinfobox.addChild(\"div\", \"class\", \"infobox-header\", l10n(\"errorWithReason\", \"error\", e.getShortMessage()));\n\t\t\t\tHTMLNode infoboxContent = infobox.addChild(\"div\", \"class\", \"infobox-content\");\n\t\t\t\tHTMLNode fileInformationList = infoboxContent.addChild(\"ul\");\n\t\t\t\tHTMLNode option = fileInformationList.addChild(\"li\");\n\t\t\t\toption.addChild(\"#\", (l10n(\"filenameLabel\") + ' '));\n\t\t\t\toption.addChild(\"a\", \"href\", '/' + key.toString(), getFilename(key, e.getExpectedMimeType()));\n\n\t\t\t\tString mime = writeSizeAndMIME(fileInformationList, e);\n\t\t\t\tinfobox = contentNode.addChild(\"div\", \"class\", \"infobox infobox-error\");\n\t\t\t\tinfobox.addChild(\"div\", \"class\", \"infobox-header\", l10n(\"explanationTitle\"));\n\t\t\t\tinfoboxContent = infobox.addChild(\"div\", \"class\", \"infobox-content\");\n\t\t\t\tinfoboxContent.addChild(\"p\", l10n(\"unableToRetrieve\"));\n\t\t\t\tUnsafeContentTypeException filterException = null;\n\t\t\t\tif(e.getCause() != null && e.getCause() instanceof UnsafeContentTypeException) {\n\t\t\t\t\tfilterException = (UnsafeContentTypeException)e.getCause();\n\t\t\t\t}\n\t\t\t\tif(e.isFatal() && filterException == null)\n\t\t\t\t\tinfoboxContent.addChild(\"p\", l10n(\"errorIsFatal\"));\n\t\t\t\tinfoboxContent.addChild(\"p\", msg);\n\t\t\t\tif(filterException != null) {\n\t\t\t\t\tif(filterException.details() != null) {\n\t\t\t\t\t\tHTMLNode detailList = infoboxContent.addChild(\"ul\");\n\t\t\t\t\t\tfor(String detail : filterException.details()) {\n\t\t\t\t\t\t\tdetailList.addChild(\"li\", detail);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif(e.errorCodes != null) {\n\t\t\t\t\tinfoboxContent.addChild(\"p\").addChild(\"pre\").addChild(\"#\", e.errorCodes.toVerboseString());\n\t\t\t\t}\n\n\t\t\t\tinfobox = contentNode.addChild(\"div\", \"class\", \"infobox infobox-error\");\n\t\t\t\tinfobox.addChild(\"div\", \"class\", \"infobox-header\", l10n(\"options\"));\n\t\t\t\tinfoboxContent = infobox.addChild(\"div\", \"class\", \"infobox-content\");\n\n\t\t\t\tHTMLNode optionList = infoboxContent.addChild(\"ul\");\n\n\t\t\t\tPluginInfoWrapper keyUtil;\n\t\t\t\tif((e.mode == FetchException.NOT_IN_ARCHIVE || e.mode == FetchException.NOT_ENOUGH_PATH_COMPONENTS)) {\n\t\t\t\t\t// first look for the newest version\n\t\t\t\t\tif ((keyUtil = core.node.pluginManager.getPluginInfo(\"plugins.KeyUtils.KeyUtilsPlugin\")) != null) {\n\t\t\t\t\t\toption = optionList.addChild(\"li\");\n\t\t\t\t\t\tif (keyUtil.getPluginLongVersion() < 5010)\n\t\t\t\t\t\t\tNodeL10n.getBase().addL10nSubstitution(option, \"FProxyToadlet.openWithKeyExplorer\", new String[] { \"link\" }, new HTMLNode[] { HTMLNode.link(\"/KeyUtils/?automf=true&key=\" + key.toString()) });\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tNodeL10n.getBase().addL10nSubstitution(option, \"FProxyToadlet.openWithKeyExplorer\", new String[] { \"link\" }, new HTMLNode[] { HTMLNode.link(\"/KeyUtils/?key=\" + key.toString()) });\n\t\t\t\t\t\t\toption = optionList.addChild(\"li\");\n\t\t\t\t\t\t\tNodeL10n.getBase().addL10nSubstitution(option, \"FProxyToadlet.openWithSiteExplorer\", new String[] { \"link\" }, new HTMLNode[] { HTMLNode.link(\"/KeyUtils/Site?key=\" + key.toString()) });\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if ((keyUtil = core.node.pluginManager.getPluginInfo(\"plugins.KeyExplorer.KeyExplorer\")) != null) {\n\t\t\t\t\t\toption = optionList.addChild(\"li\");\n\t\t\t\t\t\tif (keyUtil.getPluginLongVersion() > 4999)\n\t\t\t\t\t\t\tNodeL10n.getBase().addL10nSubstitution(option, \"FProxyToadlet.openWithKeyExplorer\", new String[] { \"link\" }, new HTMLNode[] { HTMLNode.link(\"/KeyExplorer/?automf=true&key=\" + key.toString())});\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\tNodeL10n.getBase().addL10nSubstitution(option, \"FProxyToadlet.openWithKeyExplorer\", new String[] { \"link\" }, new HTMLNode[] { HTMLNode.link(\"/plugins/plugins.KeyExplorer.KeyExplorer/?key=\" + key.toString())});\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif(filterException != null) {\n\t\t\t\t\tif((mime.equals(\"application/x-freenet-index\")) && (core.node.pluginManager.isPluginLoaded(\"plugins.ThawIndexBrowser.ThawIndexBrowser\"))) {\n\t\t\t\t\t\toption = optionList.addChild(\"li\");\n\t\t\t\t\t\tNodeL10n.getBase().addL10nSubstitution(option, \"FProxyToadlet.openAsThawIndex\", new String[] { \"link\" }, new HTMLNode[] { HTMLNode.link(\"/plugins/plugins.ThawIndexBrowser.ThawIndexBrowser/?key=\" + key.toString()).addChild(\"b\") });\n\t\t\t\t\t}\n\t\t\t\t\toption = optionList.addChild(\"li\");\n\t\t\t\t\t// FIXME: is this safe? See bug #131\n\t\t\t\t\tMediaType textMediaType = new MediaType(\"text/plain\");\n\t\t\t\t\ttextMediaType.setParameter(\"charset\", (e.getExpectedMimeType() != null) ? MediaType.getCharsetRobust(e.getExpectedMimeType()) : null);\n\t\t\t\t\tNodeL10n.getBase().addL10nSubstitution(option, \"FProxyToadlet.openAsText\", new String[] { \"link\" }, new HTMLNode[] { HTMLNode.link(getLink(key, textMediaType.toString(), maxSize, null, false, maxRetries, overrideSize)) });\n\t\t\t\t\toption = optionList.addChild(\"li\");\n\t\t\t\t\tNodeL10n.getBase().addL10nSubstitution(option, \"FProxyToadlet.openForceDisk\", new String[] { \"link\" }, new HTMLNode[] { HTMLNode.link(getLink(key, mime, maxSize, null, true, maxRetries, overrideSize)) });\n\t\t\t\t\tif(!(mime.equals(\"application/octet-stream\") || mime.equals(\"application/x-msdownload\") || !DefaultMIMETypes.isPlausibleMIMEType(mime))) {\n\t\t\t\t\t\toption = optionList.addChild(\"li\");\n\t\t\t\t\t\tNodeL10n.getBase().addL10nSubstitution(option, \"FProxyToadlet.openForce\", new String[] { \"link\", \"mime\" }, new HTMLNode[] { HTMLNode.link(getLink(key, mime, maxSize, getForceValue(key, now), false, maxRetries, overrideSize)), HTMLNode.text(HTMLEncoder.encode(mime))});\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif((!e.isFatal() || filterException != null) && (ctx.isAllowedFullAccess() || !container.publicGatewayMode())) {\n\t\t\t\t\taddDownloadOptions(ctx, optionList, key, mimeType, filterException != null, filterException != null, core);\n\t\t\t\t\tif(filterException == null)\n\t\t\t\t\t\toptionList.addChild(\"li\").\n\t\t\t\t\t\t\taddChild(\"a\", \"href\", getLink(key, requestedMimeType, maxSize, httprequest.getParam(\"force\", null),\n\t\t\t\t\t\t\t\t\thttprequest.isParameterSet(\"forcedownload\"), maxRetries, overrideSize)).addChild(\"#\", l10n(\"retryNow\"));\n\t\t\t\t}\n\n\t\t\t\toptionList.addChild(\"li\").addChild(\"a\", new String[] { \"href\", \"title\" }, new String[] { \"/\", NodeL10n.getBase().\n\t\t\t\t\t\tgetString(\"Toadlet.homepage\") }, l10n(\"abortToHomepage\"));\n\n\t\t\t\toptionList.addChild(\"li\").addChild(ctx.getPageMaker().createBackLink(ctx, l10n(\"goBackToPrev\")));\n\t\t\t\tthis.writeHTMLReply(ctx, (e.mode == 10) ? 404 : 500 /* close enough - FIXME probably should depend on status code */,\n\t\t\t\t\t\t\"Internal Error\", pageNode.generate());\n\t\t\t}\n\t\t} catch (SocketException e) {\n\t\t\t// Probably irrelevant\n\t\t\tif(e.getMessage().equals(\"Broken pipe\")) {\n\t\t\t\tif(logMINOR)\n\t\t\t\t\tLogger.minor(this, \"Caught \"+e+\" while handling GET\", e);\n\t\t\t} else {\n\t\t\t\tLogger.normal(this, \"Caught \"+e);\n\t\t\t}\n\t\t\tthrow e;\n\t\t} catch (Throwable t) {\n\t\t\twriteInternalError(t, ctx);\n\t\t} finally {\n\t\t\tif(fr == null && data != null) data.free();\n\t\t\tif(fr != null) fr.close();\n\t\t}\n\t}","commit_id":"536438187f6e37ce0eb3a0822d283bd623c9893b","url":"https://github.com/freenet/fred"},{"original_method":"@Inject\n    public RiversRouter(Settings settings, Client client, ClusterService clusterService, RiverClusterService riverClusterService) {\n        super(settings);\n        this.riverIndexName = RiverIndexName.Conf.indexName(settings);\n        this.riverClusterService = riverClusterService;\n        this.client = client;\n        clusterService.add(this);\n    }","id":55845,"modified_method":"@Inject\n    public RiversRouter(Settings settings, Client client, ClusterService clusterService, RiverClusterService riverClusterService, ThreadPool threadPool) {\n        super(settings);\n        this.riverIndexName = RiverIndexName.Conf.indexName(settings);\n        this.riverClusterService = riverClusterService;\n        this.client = client;\n        this.threadPool = threadPool;\n        clusterService.add(this);\n    }","commit_id":"b7cc378aeb85dbb5d31f2fe5ae5c4d06414de6c9","url":"https://github.com/elastic/elasticsearch"},{"original_method":"@Override\n    public void clusterChanged(final ClusterChangedEvent event) {\n        if (!event.localNodeMaster()) {\n            return;\n        }\n        riverClusterService.submitStateUpdateTask(\"reroute_rivers_node_changed\", new RiverClusterStateUpdateTask() {\n            @Override\n            public RiverClusterState execute(RiverClusterState currentState) {\n                if (!event.state().metaData().hasIndex(riverIndexName)) {\n                    // if there are routings, publish an empty one (so it will be deleted on nodes), otherwise, return the same state\n                    if (!currentState.routing().isEmpty()) {\n                        return RiverClusterState.builder().state(currentState).routing(RiversRouting.builder()).build();\n                    }\n                    return currentState;\n                }\n\n                RiversRouting.Builder routingBuilder = RiversRouting.builder().routing(currentState.routing());\n                boolean dirty = false;\n\n                IndexMetaData indexMetaData = event.state().metaData().index(riverIndexName);\n                // go over and create new river routing (with no node) for new types (rivers names)\n                for (MappingMetaData mappingMd : indexMetaData.mappings().values()) {\n                    String mappingType = mappingMd.type(); // mapping type is the name of the river\n                    if (!currentState.routing().hasRiverByName(mappingType)) {\n                        // no river, we need to add it to the routing with no node allocation\n                        try {\n                            GetResponse getResponse = client.prepareGet(riverIndexName, mappingType, \"_meta\").execute().actionGet();\n                            if (getResponse.isExists()) {\n                                String riverType = XContentMapValues.nodeStringValue(getResponse.getSourceAsMap().get(\"type\"), null);\n                                if (riverType == null) {\n                                    logger.warn(\"no river type provided for [{}], ignoring...\", riverIndexName);\n                                } else {\n                                    routingBuilder.put(new RiverRouting(new RiverName(riverType, mappingType), null));\n                                    dirty = true;\n                                }\n                            }\n                        } catch (NoShardAvailableActionException e) {\n                            // ignore, we will get it next time...\n                        } catch (ClusterBlockException e) {\n                            // ignore, we will get it next time\n                        } catch (IndexMissingException e) {\n                            // ignore, we will get it next time\n                        } catch (IllegalIndexShardStateException e) {\n                            // ignore, we will get it next time\n                        } catch (Exception e) {\n                            logger.warn(\"failed to get/parse _meta for [{}]\", e, mappingType);\n                        }\n                    }\n                }\n                // now, remove routings that were deleted\n                // also, apply nodes that were removed and rivers were running on\n                for (RiverRouting routing : currentState.routing()) {\n                    if (!indexMetaData.mappings().containsKey(routing.riverName().name())) {\n                        routingBuilder.remove(routing);\n                        dirty = true;\n                    } else if (routing.node() != null && !event.state().nodes().nodeExists(routing.node().id())) {\n                        routingBuilder.remove(routing);\n                        routingBuilder.put(new RiverRouting(routing.riverName(), null));\n                        dirty = true;\n                    }\n                }\n\n                // build a list from nodes to rivers\n                Map<DiscoveryNode, List<RiverRouting>> nodesToRivers = Maps.newHashMap();\n\n                for (DiscoveryNode node : event.state().nodes()) {\n                    if (RiverNodeHelper.isRiverNode(node)) {\n                        nodesToRivers.put(node, Lists.<RiverRouting>newArrayList());\n                    }\n                }\n\n                List<RiverRouting> unassigned = Lists.newArrayList();\n                for (RiverRouting routing : routingBuilder.build()) {\n                    if (routing.node() == null) {\n                        unassigned.add(routing);\n                    } else {\n                        List<RiverRouting> l = nodesToRivers.get(routing.node());\n                        if (l == null) {\n                            l = Lists.newArrayList();\n                            nodesToRivers.put(routing.node(), l);\n                        }\n                        l.add(routing);\n                    }\n                }\n                for (Iterator<RiverRouting> it = unassigned.iterator(); it.hasNext(); ) {\n                    RiverRouting routing = it.next();\n                    DiscoveryNode smallest = null;\n                    int smallestSize = Integer.MAX_VALUE;\n                    for (Map.Entry<DiscoveryNode, List<RiverRouting>> entry : nodesToRivers.entrySet()) {\n                        if (RiverNodeHelper.isRiverNode(entry.getKey(), routing.riverName())) {\n                            if (entry.getValue().size() < smallestSize) {\n                                smallestSize = entry.getValue().size();\n                                smallest = entry.getKey();\n                            }\n                        }\n                    }\n                    if (smallest != null) {\n                        dirty = true;\n                        it.remove();\n                        routing.node(smallest);\n                        nodesToRivers.get(smallest).add(routing);\n                    }\n                }\n\n\n                // add relocation logic...\n\n                if (dirty) {\n                    return RiverClusterState.builder().state(currentState).routing(routingBuilder).build();\n                }\n                return currentState;\n            }\n        });\n    }","id":55846,"modified_method":"@Override\n    public void clusterChanged(final ClusterChangedEvent event) {\n        if (!event.localNodeMaster()) {\n            return;\n        }\n        final String source = \"reroute_rivers_node_changed\";\n        //we'll try again a few times if we don't find the river _meta document while the type is there\n        final CountDown countDown = new CountDown(RIVER_START_MAX_RETRIES);\n        riverClusterService.submitStateUpdateTask(source, new RiverClusterStateUpdateTask() {\n            @Override\n            public RiverClusterState execute(RiverClusterState currentState) {\n                return updateRiverClusterState(source, currentState, event.state(), countDown);\n            }\n        });\n    }","commit_id":"b7cc378aeb85dbb5d31f2fe5ae5c4d06414de6c9","url":"https://github.com/elastic/elasticsearch"},{"original_method":"@Override public <T extends FieldData> T cache(Class<T> type, IndexReader reader, String fieldName) throws IOException {\n        ConcurrentMap<String, FieldData> fieldDataCache = cache.get(reader.getFieldCacheKey());\n        if (fieldDataCache == null) {\n            synchronized (creationMutex) {\n                fieldDataCache = cache.get(reader.getFieldCacheKey());\n                if (fieldDataCache == null) {\n                    fieldDataCache = ConcurrentCollections.newConcurrentMap();\n                    cache.put(reader.getFieldCacheKey(), fieldDataCache);\n                }\n            }\n        }\n        T fieldData = (T) fieldDataCache.get(fieldName);\n        if (fieldData == null) {\n            synchronized (fieldDataCache) {\n                fieldData = (T) fieldDataCache.get(fieldName);\n                if (fieldData == null) {\n                    fieldData = FieldData.load(type, reader, fieldName);\n                    fieldDataCache.put(fieldName, fieldData);\n                }\n            }\n        }\n        return fieldData;\n    }","id":55847,"modified_method":"@Override public <T extends FieldData> T cache(Class<T> type, IndexReader reader, String fieldName) throws IOException {\n        ConcurrentMap<String, FieldData> fieldDataCache = cache.get(reader.getFieldCacheKey());\n        if (fieldDataCache == null) {\n            synchronized (creationMutex) {\n                fieldDataCache = cache.get(reader.getFieldCacheKey());\n                if (fieldDataCache == null) {\n                    fieldDataCache = buildFilterMap();\n                    cache.put(reader.getFieldCacheKey(), fieldDataCache);\n                }\n            }\n        }\n        T fieldData = (T) fieldDataCache.get(fieldName);\n        if (fieldData == null) {\n            synchronized (fieldDataCache) {\n                fieldData = (T) fieldDataCache.get(fieldName);\n                if (fieldData == null) {\n                    fieldData = FieldData.load(type, reader, fieldName);\n                    fieldDataCache.put(fieldName, fieldData);\n                }\n            }\n        }\n        return fieldData;\n    }","commit_id":"08d7125cd52d9eb33a6e8c27c2007193f83373ea","url":"https://github.com/elastic/elasticsearch"},{"original_method":"protected AbstractIndexerComponent(IndexerName indexerName, @IndexerSettings Settings indexSettings, String prefixSettings) {\n        this.indexerName = indexerName;\n        this.indexSettings = indexSettings;\n        this.componentSettings = indexSettings.getComponentSettings(prefixSettings, getClass());\n\n        this.logger = Loggers.getLogger(getClass(), indexSettings, indexerName);\n    }","id":55848,"modified_method":"protected AbstractIndexerComponent(IndexerName indexerName, Settings settings, @IndexerSettings Map<String, Object> indexerSettings) {\n        this.indexerName = indexerName;\n        this.settings = settings;\n        this.indexerSettings = indexerSettings;\n\n        this.logger = Loggers.getLogger(getClass(), settings, indexerName);\n    }","commit_id":"08d7125cd52d9eb33a6e8c27c2007193f83373ea","url":"https://github.com/elastic/elasticsearch"},{"original_method":"public String nodeName() {\n        return indexSettings.get(\"name\", \"\");\n    }","id":55849,"modified_method":"public String nodeName() {\n        return settings.get(\"name\", \"\");\n    }","commit_id":"08d7125cd52d9eb33a6e8c27c2007193f83373ea","url":"https://github.com/elastic/elasticsearch"},{"original_method":"@Inject public DummyIndexer(IndexerName indexerName, @IndexerSettings Settings indexSettings) {\n        super(indexerName, indexSettings);\n        logger.info(\"created\");\n    }","id":55850,"modified_method":"public DummyIndexer(IndexerName indexerName, Settings settings, @IndexerSettings Map<String, Object> indexerSettings) {\n        super(indexerName, settings, indexerSettings);\n        logger.info(\"created\");\n    }","commit_id":"08d7125cd52d9eb33a6e8c27c2007193f83373ea","url":"https://github.com/elastic/elasticsearch"},{"original_method":"public IndexerClusterState(long version, IndexerClusterState state) {\n        this.version = version;\n        this.metaData = state.metaData();\n        this.routing = state.routing();\n    }","id":55851,"modified_method":"public IndexerClusterState(long version, IndexerClusterState state) {\n        this.version = version;\n        this.routing = state.routing();\n    }","commit_id":"08d7125cd52d9eb33a6e8c27c2007193f83373ea","url":"https://github.com/elastic/elasticsearch"},{"original_method":"public static void writeTo(IndexerClusterState clusterState, StreamOutput out) throws IOException {\n            out.writeVLong(clusterState.version);\n            IndexersMetaData.Builder.writeTo(clusterState.metaData, out);\n            IndexersRouting.Builder.writeTo(clusterState.routing, out);\n        }","id":55852,"modified_method":"public static void writeTo(IndexerClusterState clusterState, StreamOutput out) throws IOException {\n            out.writeVLong(clusterState.version);\n            IndexersRouting.Builder.writeTo(clusterState.routing, out);\n        }","commit_id":"08d7125cd52d9eb33a6e8c27c2007193f83373ea","url":"https://github.com/elastic/elasticsearch"},{"original_method":"public Builder state(IndexerClusterState state) {\n            this.version = state.version();\n            this.metaData = state.metaData();\n            this.routing = state.routing();\n            return this;\n        }","id":55853,"modified_method":"public Builder state(IndexerClusterState state) {\n            this.version = state.version();\n            this.routing = state.routing();\n            return this;\n        }","commit_id":"08d7125cd52d9eb33a6e8c27c2007193f83373ea","url":"https://github.com/elastic/elasticsearch"},{"original_method":"IndexerClusterState(long version, IndexersMetaData metaData, IndexersRouting routing) {\n        this.version = version;\n        this.metaData = metaData;\n        this.routing = routing;\n    }","id":55854,"modified_method":"IndexerClusterState(long version, IndexersRouting routing) {\n        this.version = version;\n        this.routing = routing;\n    }","commit_id":"08d7125cd52d9eb33a6e8c27c2007193f83373ea","url":"https://github.com/elastic/elasticsearch"},{"original_method":"public IndexerClusterState build() {\n            return new IndexerClusterState(version, metaData, routing);\n        }","id":55855,"modified_method":"public IndexerClusterState build() {\n            return new IndexerClusterState(version, routing);\n        }","commit_id":"08d7125cd52d9eb33a6e8c27c2007193f83373ea","url":"https://github.com/elastic/elasticsearch"},{"original_method":"public static IndexerClusterState readFrom(StreamInput in, @Nullable Settings settings) throws IOException {\n            Builder builder = new Builder();\n            builder.version = in.readVLong();\n            builder.metaData = IndexersMetaData.Builder.readFrom(in, settings);\n            builder.routing = IndexersRouting.Builder.readFrom(in);\n            return builder.build();\n        }","id":55856,"modified_method":"public static IndexerClusterState readFrom(StreamInput in) throws IOException {\n            Builder builder = new Builder();\n            builder.version = in.readVLong();\n            builder.routing = IndexersRouting.Builder.readFrom(in);\n            return builder.build();\n        }","commit_id":"08d7125cd52d9eb33a6e8c27c2007193f83373ea","url":"https://github.com/elastic/elasticsearch"},{"original_method":"@Override protected void doStop() throws ElasticSearchException {\n        clusterService.stop();\n        indexersService.stop();\n    }","id":55857,"modified_method":"@Override protected void doStop() throws ElasticSearchException {\n        indexersRouter.stop();\n        clusterService.stop();\n        indexersService.stop();\n    }","commit_id":"08d7125cd52d9eb33a6e8c27c2007193f83373ea","url":"https://github.com/elastic/elasticsearch"},{"original_method":"@Override protected void doClose() throws ElasticSearchException {\n        clusterService.close();\n        indexersService.close();\n    }","id":55858,"modified_method":"@Override protected void doClose() throws ElasticSearchException {\n        indexersRouter.close();\n        clusterService.close();\n        indexersService.close();\n    }","commit_id":"08d7125cd52d9eb33a6e8c27c2007193f83373ea","url":"https://github.com/elastic/elasticsearch"},{"original_method":"@Inject public IndexerManager(Settings settings, IndexersService indexersService, IndexerClusterService clusterService) {\n        super(settings);\n        this.indexersService = indexersService;\n        this.clusterService = clusterService;\n    }","id":55859,"modified_method":"@Inject public IndexerManager(Settings settings, IndexersService indexersService, IndexerClusterService clusterService, IndexersRouter indexersRouter) {\n        super(settings);\n        this.indexersService = indexersService;\n        this.clusterService = clusterService;\n        this.indexersRouter = indexersRouter;\n    }","commit_id":"08d7125cd52d9eb33a6e8c27c2007193f83373ea","url":"https://github.com/elastic/elasticsearch"},{"original_method":"@Override protected void doStart() throws ElasticSearchException {\n        indexersService.start();\n        clusterService.start();\n    }","id":55860,"modified_method":"@Override protected void doStart() throws ElasticSearchException {\n        indexersRouter.start();\n        indexersService.start();\n        clusterService.start();\n    }","commit_id":"08d7125cd52d9eb33a6e8c27c2007193f83373ea","url":"https://github.com/elastic/elasticsearch"},{"original_method":"@Override public Iterable<? extends Module> spawnModules() {\n        String type = settings.get(\"indexer.type\");\n        if (type == null) {\n            return ImmutableList.of(Modules.createModule(loadTypeModule(indexerName.type(), \"org.elasticsearch.indexer.\", \"IndexerModule\"), settings));\n        } else {\n            return ImmutableList.of(Modules.createModule(settings.getAsClass(\"indexer.type\", Module.class, \"org.elasticsearch.indexer.\", \"IndexerModule\"), settings));\n        }\n    }","id":55861,"modified_method":"@Override public Iterable<? extends Module> spawnModules() {\n        return ImmutableList.of(Modules.createModule(loadTypeModule(indexerName.type(), \"org.elasticsearch.indexer.\", \"IndexerModule\"), globalSettings));\n    }","commit_id":"08d7125cd52d9eb33a6e8c27c2007193f83373ea","url":"https://github.com/elastic/elasticsearch"},{"original_method":"public IndexerModule(IndexerName indexerName, Settings settings) {\n        this.indexerName = indexerName;\n        this.settings = settings;\n    }","id":55862,"modified_method":"public IndexerModule(IndexerName indexerName, Map<String, Object> settings, Settings globalSettings) {\n        this.indexerName = indexerName;\n        this.globalSettings = globalSettings;\n        this.settings = settings;\n    }","commit_id":"08d7125cd52d9eb33a6e8c27c2007193f83373ea","url":"https://github.com/elastic/elasticsearch"},{"original_method":"private Class<? extends Module> loadTypeModule(String type, String prefixPackage, String suffixClassName) {\n        String fullClassName = type;\n        try {\n            return (Class<? extends Module>) settings.getClassLoader().loadClass(fullClassName);\n        } catch (ClassNotFoundException e) {\n            fullClassName = prefixPackage + Strings.capitalize(toCamelCase(type)) + suffixClassName;\n            try {\n                return (Class<? extends Module>) settings.getClassLoader().loadClass(fullClassName);\n            } catch (ClassNotFoundException e1) {\n                fullClassName = prefixPackage + toCamelCase(type) + \".\" + Strings.capitalize(toCamelCase(type)) + suffixClassName;\n                try {\n                    return (Class<? extends Module>) settings.getClassLoader().loadClass(fullClassName);\n                } catch (ClassNotFoundException e2) {\n                    fullClassName = prefixPackage + toCamelCase(type).toLowerCase() + \".\" + Strings.capitalize(toCamelCase(type)) + suffixClassName;\n                    try {\n                        return (Class<? extends Module>) settings.getClassLoader().loadClass(fullClassName);\n                    } catch (ClassNotFoundException e3) {\n                        throw new NoClassSettingsException(\"Failed to load class with value [\" + type + \"]\", e);\n                    }\n                }\n            }\n        }\n    }","id":55863,"modified_method":"private Class<? extends Module> loadTypeModule(String type, String prefixPackage, String suffixClassName) {\n        String fullClassName = type;\n        try {\n            return (Class<? extends Module>) globalSettings.getClassLoader().loadClass(fullClassName);\n        } catch (ClassNotFoundException e) {\n            fullClassName = prefixPackage + Strings.capitalize(toCamelCase(type)) + suffixClassName;\n            try {\n                return (Class<? extends Module>) globalSettings.getClassLoader().loadClass(fullClassName);\n            } catch (ClassNotFoundException e1) {\n                fullClassName = prefixPackage + toCamelCase(type) + \".\" + Strings.capitalize(toCamelCase(type)) + suffixClassName;\n                try {\n                    return (Class<? extends Module>) globalSettings.getClassLoader().loadClass(fullClassName);\n                } catch (ClassNotFoundException e2) {\n                    fullClassName = prefixPackage + toCamelCase(type).toLowerCase() + \".\" + Strings.capitalize(toCamelCase(type)) + suffixClassName;\n                    try {\n                        return (Class<? extends Module>) globalSettings.getClassLoader().loadClass(fullClassName);\n                    } catch (ClassNotFoundException e3) {\n                        throw new NoClassSettingsException(\"Failed to load class with value [\" + type + \"]\", e);\n                    }\n                }\n            }\n        }\n    }","commit_id":"08d7125cd52d9eb33a6e8c27c2007193f83373ea","url":"https://github.com/elastic/elasticsearch"},{"original_method":"@Override protected void configure() {\n\n    }","id":55864,"modified_method":"@Override protected void configure() {\n        bind(Map.class).annotatedWith(IndexerSettings.class).toInstance(settings);\n    }","commit_id":"08d7125cd52d9eb33a6e8c27c2007193f83373ea","url":"https://github.com/elastic/elasticsearch"},{"original_method":"IndexerRouting(IndexerName indexerName, DiscoveryNode node) {\n        this.indexerName = indexerName;\n        this.node = node;\n    }","id":55865,"modified_method":"IndexerRouting(IndexerName indexerName, IndexerRoutingState state, DiscoveryNode node) {\n        this.indexerName = indexerName;\n        this.state = state;\n        this.node = node;\n    }","commit_id":"08d7125cd52d9eb33a6e8c27c2007193f83373ea","url":"https://github.com/elastic/elasticsearch"},{"original_method":"public DiscoveryNode node() {\n        return node;\n    }","id":55866,"modified_method":"/**\n     * The node the indexer is allocated to, <tt>null<\/tt> if its not allocated.\n     */\n    public DiscoveryNode node() {\n        return node;\n    }","commit_id":"08d7125cd52d9eb33a6e8c27c2007193f83373ea","url":"https://github.com/elastic/elasticsearch"},{"original_method":"@Override protected void configure() {\n        bind(IndexersService.class).asEagerSingleton();\n        bind(IndexerClusterService.class).asEagerSingleton();\n        bind(IndexerManager.class).asEagerSingleton();\n    }","id":55867,"modified_method":"@Override protected void configure() {\n        bind(String.class).annotatedWith(IndexerIndexName.class).toInstance(settings.get(\"indexer.index_name\", \"indexer\"));\n        bind(IndexersService.class).asEagerSingleton();\n        bind(IndexerClusterService.class).asEagerSingleton();\n        bind(IndexersRouter.class).asEagerSingleton();\n        bind(IndexerManager.class).asEagerSingleton();\n    }","commit_id":"08d7125cd52d9eb33a6e8c27c2007193f83373ea","url":"https://github.com/elastic/elasticsearch"},{"original_method":"@Inject public IndexersRouter(Settings settings, ClusterService clusterService, IndexerClusterService indexerClusterService) {\n        super(settings);\n        this.indexerClusterService = indexerClusterService;\n        clusterService.add(this);\n    }","id":55868,"modified_method":"@Inject public IndexersRouter(Settings settings, Client client, ClusterService clusterService, IndexerClusterService indexerClusterService) {\n        super(settings);\n        this.indexerIndexName = settings.get(\"indexer.index_name\", \"indexer\");\n        this.indexerClusterService = indexerClusterService;\n        this.client = client;\n        clusterService.add(this);\n    }","commit_id":"08d7125cd52d9eb33a6e8c27c2007193f83373ea","url":"https://github.com/elastic/elasticsearch"},{"original_method":"@Override public void clusterChanged(final ClusterChangedEvent event) {\n        if (event.nodesChanged()) {\n            indexerClusterService.submitStateUpdateTask(\"reroute_indexers_node_changed\", new IndexerClusterStateUpdateTask() {\n                @Override public IndexerClusterState execute(IndexerClusterState currentState) {\n                    return null;  //To change body of implemented methods use File | Settings | File Templates.\n                }\n            });\n        }\n    }","id":55869,"modified_method":"@Override public void clusterChanged(final ClusterChangedEvent event) {\n        if (!event.localNodeMaster()) {\n            return;\n        }\n        if (event.nodesChanged() || event.metaDataChanged()) {\n            indexerClusterService.submitStateUpdateTask(\"reroute_indexers_node_changed\", new IndexerClusterStateUpdateTask() {\n                @Override public IndexerClusterState execute(IndexerClusterState currentState) {\n                    if (!event.state().metaData().hasIndex(indexerIndexName)) {\n                        // if there are routings, publish an empty one (so it will be deleted on nodes), otherwise, return the same state\n                        if (!currentState.routing().isEmpty()) {\n                            return IndexerClusterState.builder().state(currentState).routing(IndexersRouting.builder()).build();\n                        }\n                        return currentState;\n                    }\n\n                    IndexersRouting.Builder routingBuilder = IndexersRouting.builder().routing(currentState.routing());\n                    boolean dirty = false;\n\n                    IndexMetaData indexMetaData = event.state().metaData().index(indexerIndexName);\n                    // go over and create new indexer routing (with no node) for new types (indexers names)\n                    for (Map.Entry<String, CompressedString> entry : indexMetaData.mappings().entrySet()) {\n                        String mappingType = entry.getKey(); // mapping type is the name of the indexer\n                        if (!currentState.routing().hasIndexerByName(mappingType)) {\n                            // no indexer, we need to add it to the routing with no node allocation\n                            try {\n                                GetResponse getResponse = client.prepareGet(indexerIndexName, mappingType, \"_meta\").execute().actionGet();\n                                if (getResponse.exists()) {\n                                    String indexerType = XContentMapValues.nodeStringValue(getResponse.sourceAsMap().get(\"type\"), null);\n                                    if (indexerType == null) {\n                                        logger.warn(\"no indexer type provided for [{}], ignoring...\", indexerIndexName);\n                                    } else {\n                                        routingBuilder.put(new IndexerRouting(new IndexerName(mappingType, indexerType), IndexerRoutingState.UNASSIGNED, null));\n                                        dirty = true;\n                                    }\n                                }\n                            } catch (Exception e) {\n                                logger.warn(\"failed to get/parse _meta for [{}]\", mappingType);\n                            }\n                        }\n                    }\n                    // now, remove routings that were deleted\n                    for (IndexerRouting routing : currentState.routing()) {\n                        if (!indexMetaData.mappings().containsKey(routing.indexerName().name())) {\n                            routingBuilder.remove(routing);\n                            dirty = true;\n                        }\n                    }\n\n                    // now, allocate indexers\n\n                    // see if we can relocate indexers (we can simply first unassign then, then publish) and then, next round, they will be assigned\n                    // but, we need to make sure that there will *be* next round of this is the logic\n\n\n                    if (dirty) {\n                        return IndexerClusterState.builder().state(currentState).routing(routingBuilder).build();\n                    }\n                    return currentState;\n                }\n            });\n        }\n    }","commit_id":"08d7125cd52d9eb33a6e8c27c2007193f83373ea","url":"https://github.com/elastic/elasticsearch"},{"original_method":"public static void writeTo(IndexersRouting routing, StreamOutput out) throws IOException {\n            out.writeVInt(routing.indexers.size());\n            for (IndexerRouting indexerRouting : routing) {\n                out.writeUTF(indexerRouting.indexerName().type());\n                out.writeUTF(indexerRouting.indexerName().name());\n\n                indexerRouting.node().writeTo(out);\n            }\n        }","id":55870,"modified_method":"public static void writeTo(IndexersRouting routing, StreamOutput out) throws IOException {\n            out.writeVInt(routing.indexers.size());\n            for (IndexerRouting indexerRouting : routing) {\n                indexerRouting.writeTo(out);\n            }\n        }","commit_id":"08d7125cd52d9eb33a6e8c27c2007193f83373ea","url":"https://github.com/elastic/elasticsearch"},{"original_method":"public static IndexersRouting readFrom(StreamInput in) throws IOException {\n            Builder builder = new Builder();\n            int size = in.readVInt();\n            for (int i = 0; i < size; i++) {\n                builder.put(new IndexerRouting(new IndexerName(in.readUTF(), in.readUTF()), DiscoveryNode.readNode(in)));\n            }\n            return builder.build();\n        }","id":55871,"modified_method":"public static IndexersRouting readFrom(StreamInput in) throws IOException {\n            Builder builder = new Builder();\n            int size = in.readVInt();\n            for (int i = 0; i < size; i++) {\n                builder.put(IndexerRouting.readIndexerRouting(in));\n            }\n            return builder.build();\n        }","commit_id":"08d7125cd52d9eb33a6e8c27c2007193f83373ea","url":"https://github.com/elastic/elasticsearch"},{"original_method":"public synchronized Indexer createIndexer(IndexerName indexerName, Settings settings) throws ElasticSearchException {\n        if (indexersInjectors.containsKey(indexerName)) {\n            throw new IndexerException(indexerName, \"indexer already exists\");\n        }\n\n        logger.debug(\"creating indexer [{}][{}]\", indexerName.type(), indexerName.name());\n\n        Settings indexerSettings = settingsBuilder()\n                .put(this.settings)\n                .put(settings)\n                .classLoader(settings.getClassLoader())\n                .globalSettings(settings.getGlobalSettings())\n                .build();\n\n        ModulesBuilder modules = new ModulesBuilder();\n        modules.add(new IndexerNameModule(indexerName));\n        modules.add(new IndexerSettingsModule(indexerSettings));\n        modules.add(new IndexerModule(indexerName, indexerSettings));\n\n        Injector indexInjector = modules.createChildInjector(injector);\n        indexersInjectors.put(indexerName, indexInjector);\n        Indexer indexer = indexInjector.getInstance(Indexer.class);\n        indexers = MapBuilder.newMapBuilder(indexers).put(indexerName, indexer).immutableMap();\n        return indexer;\n    }","id":55872,"modified_method":"public synchronized Indexer createIndexer(IndexerName indexerName, Map<String, Object> settings) throws ElasticSearchException {\n        if (indexersInjectors.containsKey(indexerName)) {\n            throw new IndexerException(indexerName, \"indexer already exists\");\n        }\n\n        logger.debug(\"creating indexer [{}][{}]\", indexerName.type(), indexerName.name());\n\n        ModulesBuilder modules = new ModulesBuilder();\n        modules.add(new IndexerNameModule(indexerName));\n        modules.add(new IndexerModule(indexerName, settings, this.settings));\n\n        Injector indexInjector = modules.createChildInjector(injector);\n        indexersInjectors.put(indexerName, indexInjector);\n        Indexer indexer = indexInjector.getInstance(Indexer.class);\n        indexers = MapBuilder.newMapBuilder(indexers).put(indexerName, indexer).immutableMap();\n        return indexer;\n    }","commit_id":"08d7125cd52d9eb33a6e8c27c2007193f83373ea","url":"https://github.com/elastic/elasticsearch"},{"original_method":"@Inject public IndexersService(Settings settings, ThreadPool threadPool, ClusterService clusterService, IndexerClusterService indexerClusterService, Injector injector) {\n        super(settings);\n        this.threadPool = threadPool;\n        this.clusterService = clusterService;\n        this.injector = injector;\n        indexerClusterService.add(new ApplyIndexers());\n    }","id":55873,"modified_method":"@Inject public IndexersService(Settings settings, Client client, ThreadPool threadPool, ClusterService clusterService, IndexerClusterService indexerClusterService, Injector injector) {\n        super(settings);\n        this.indexerIndexName = settings.get(\"indexer.index_name\", \"indexer\");\n        this.client = client;\n        this.threadPool = threadPool;\n        this.clusterService = clusterService;\n        this.injector = injector;\n        indexerClusterService.add(new ApplyIndexers());\n    }","commit_id":"08d7125cd52d9eb33a6e8c27c2007193f83373ea","url":"https://github.com/elastic/elasticsearch"},{"original_method":"@Override public void indexerClusterChanged(IndexerClusterChangedEvent event) {\n            DiscoveryNode localNode = clusterService.localNode();\n            IndexerClusterState state = event.state();\n\n            // first, go over and delete ones that either don't exists or are not allocated\n            for (IndexerName indexerName : indexers.keySet()) {\n                // if its not on the metadata, it was deleted, delete it\n                IndexerMetaData indexerMetaData = state.metaData().indexer(indexerName);\n                if (indexerMetaData == null) {\n                    deleteIndexer(indexerName);\n                }\n\n                IndexerRouting routing = state.routing().routing(indexerName);\n                if (routing == null || !localNode.equals(routing.node())) {\n                    // not routed at all, and not allocated here, clean it (we delete the relevant ones before)\n                    cleanIndexer(indexerName);\n                }\n            }\n\n            for (IndexerRouting routing : state.routing()) {\n                // only apply changes to the local node\n                if (!routing.node().equals(localNode)) {\n                    continue;\n                }\n\n                IndexerMetaData indexerMetaData = state.metaData().indexer(routing.indexerName());\n\n                createIndexer(indexerMetaData.indexerName(), indexerMetaData.settings());\n            }\n        }","id":55874,"modified_method":"@Override public void indexerClusterChanged(IndexerClusterChangedEvent event) {\n            DiscoveryNode localNode = clusterService.localNode();\n            IndexerClusterState state = event.state();\n\n            // first, go over and delete ones that either don't exists or are not allocated\n            for (IndexerName indexerName : indexers.keySet()) {\n                IndexerRouting routing = state.routing().routing(indexerName);\n                if (routing == null || !localNode.equals(routing.node())) {\n                    // not routed at all, and not allocated here, clean it (we delete the relevant ones before)\n                    cleanIndexer(indexerName);\n                }\n            }\n\n            for (final IndexerRouting routing : state.routing()) {\n                // not allocated\n                if (routing.node() == null) {\n                    continue;\n                }\n                // only apply changes to the local node\n                if (!routing.node().equals(localNode)) {\n                    continue;\n                }\n                client.prepareGet(indexerIndexName, routing.indexerName().name(), \"_meta\").execute(new ActionListener<GetResponse>() {\n                    @Override public void onResponse(GetResponse getResponse) {\n                        if (getResponse.exists()) {\n                            // only create the indexer if it exists, otherwise, the indexing meta data has not been visible yet... \n                            createIndexer(routing.indexerName(), getResponse.sourceAsMap());\n                        }\n                    }\n\n                    @Override public void onFailure(Throwable e) {\n                        logger.warn(\"failed to get _meta from [{}]/[{}]\", routing.indexerName().type(), routing.indexerName().name());\n                    }\n                });\n            }\n        }","commit_id":"08d7125cd52d9eb33a6e8c27c2007193f83373ea","url":"https://github.com/elastic/elasticsearch"},{"original_method":"@Override public void readFrom(StreamInput in) throws IOException {\n            clusterState = IndexerClusterState.Builder.readFrom(in, settings);\n        }","id":55875,"modified_method":"@Override public void readFrom(StreamInput in) throws IOException {\n            clusterState = IndexerClusterState.Builder.readFrom(in);\n        }","commit_id":"08d7125cd52d9eb33a6e8c27c2007193f83373ea","url":"https://github.com/elastic/elasticsearch"},{"original_method":"/**\n     * Ensures that the mapping in the cluster state is the same as the mapping\n     * in our mapper service. If the mapping is not in sync, sends a request\n     * to update it in the cluster state and blocks until it has finished\n     * being updated.\n     */\n    private void updateMappingOnMaster() {\n        // we test that the cluster state is in sync with our in memory mapping stored by the mapperService\n        // we have to do it under the \"cluster state update\" thread to make sure that one doesn't modify it\n        // while we're checking\n        final BlockingQueue<DocumentMapper> documentMappersToUpdate = ConcurrentCollections.newBlockingQueue();\n        final CountDownLatch latch = new CountDownLatch(1);\n        final AtomicReference<Throwable> mappingCheckException = new AtomicReference<>();\n        // we use immediate as this is a very light weight check and we don't wait to delay recovery\n        clusterService.submitStateUpdateTask(\"recovery_mapping_check\", Priority.IMMEDIATE, new TimeoutClusterStateUpdateTask() {\n\n            @Override\n            public boolean runOnlyOnMaster() {\n                return false;\n            }\n\n            @Override\n            public TimeValue timeout() {\n                return recoverySettings.internalActionTimeout();\n            }\n\n            @Override\n            public void clusterStateProcessed(String source, ClusterState oldState, ClusterState newState) {\n                latch.countDown();\n            }\n\n            @Override\n            public ClusterState execute(ClusterState currentState) throws Exception {\n                IndexMetaData indexMetaData = clusterService.state().metaData().getIndices().get(indexService.index().getName());\n                ImmutableOpenMap<String, MappingMetaData> metaDataMappings = null;\n                if (indexMetaData != null) {\n                    metaDataMappings = indexMetaData.getMappings();\n                }\n                // default mapping should not be sent back, it can only be updated by put mapping API, and its\n                // a full in place replace, we don't want to override a potential update coming it\n                for (DocumentMapper documentMapper : indexService.mapperService().docMappers(false)) {\n\n                    MappingMetaData mappingMetaData = metaDataMappings == null ? null : metaDataMappings.get(documentMapper.type());\n                    if (mappingMetaData == null || !documentMapper.refreshSource().equals(mappingMetaData.source())) {\n                        // not on master yet in the right form\n                        documentMappersToUpdate.add(documentMapper);\n                    }\n                }\n                return currentState;\n            }\n\n            @Override\n            public void onFailure(String source, Throwable t) {\n                mappingCheckException.set(t);\n                latch.countDown();\n            }\n        });\n        cancellableThreads.execute(new Interruptable() {\n            @Override\n            public void run() throws InterruptedException {\n                latch.await();\n            }\n        });\n        if (mappingCheckException.get() != null) {\n            logger.warn(\"error during mapping check, failing recovery\", mappingCheckException.get());\n            throw new ElasticsearchException(\"error during mapping check\", mappingCheckException.get());\n        }\n        if (documentMappersToUpdate.isEmpty()) {\n            return;\n        }\n        final CountDownLatch updatedOnMaster = new CountDownLatch(documentMappersToUpdate.size());\n        MappingUpdatedAction.MappingUpdateListener listener = new MappingUpdatedAction.MappingUpdateListener() {\n            @Override\n            public void onMappingUpdate() {\n                updatedOnMaster.countDown();\n            }\n\n            @Override\n            public void onFailure(Throwable t) {\n                logger.debug(\"{} recovery to {}: failed to update mapping on master\", request.shardId(), request.targetNode(), t);\n                updatedOnMaster.countDown();\n            }\n        };\n        for (DocumentMapper documentMapper : documentMappersToUpdate) {\n            mappingUpdatedAction.updateMappingOnMaster(indexService.index().getName(), documentMapper, indexService.indexUUID(), listener);\n        }\n        cancellableThreads.execute(new Interruptable() {\n            @Override\n            public void run() throws InterruptedException {\n                try {\n                    if (!updatedOnMaster.await(recoverySettings.internalActionTimeout().millis(), TimeUnit.MILLISECONDS)) {\n                        logger.debug(\"[{}][{}] recovery [phase2] to {}: waiting on pending mapping update timed out. waited [{}]\",\n                                indexName, shardId, request.targetNode(), recoverySettings.internalActionTimeout());\n                    }\n                } catch (InterruptedException e) {\n                    Thread.currentThread().interrupt();\n                    logger.debug(\"interrupted while waiting for mapping to update on master\");\n                }\n            }\n        });\n    }","id":55876,"modified_method":"/**\n     * Ensures that the mapping in the cluster state is the same as the mapping\n     * in our mapper service. If the mapping is not in sync, sends a request\n     * to update it in the cluster state and blocks until it has finished\n     * being updated.\n     */\n    private void updateMappingOnMaster() {\n        // we test that the cluster state is in sync with our in memory mapping stored by the mapperService\n        // we have to do it under the \"cluster state update\" thread to make sure that one doesn't modify it\n        // while we're checking\n        final BlockingQueue<DocumentMapper> documentMappersToUpdate = ConcurrentCollections.newBlockingQueue();\n        final CountDownLatch latch = new CountDownLatch(1);\n        final AtomicReference<Throwable> mappingCheckException = new AtomicReference<>();\n\n        // we use immediate as this is a very light weight check and we don't wait to delay recovery\n        clusterService.submitStateUpdateTask(\"recovery_mapping_check\", Priority.IMMEDIATE, new MappingUpdateTask(clusterService, indexService, recoverySettings, latch, documentMappersToUpdate, mappingCheckException, this.cancellableThreads));\n        cancellableThreads.execute(new Interruptable() {\n            @Override\n            public void run() throws InterruptedException {\n                latch.await();\n            }\n        });\n        if (mappingCheckException.get() != null) {\n            logger.warn(\"error during mapping check, failing recovery\", mappingCheckException.get());\n            throw new ElasticsearchException(\"error during mapping check\", mappingCheckException.get());\n        }\n        if (documentMappersToUpdate.isEmpty()) {\n            return;\n        }\n        final CountDownLatch updatedOnMaster = new CountDownLatch(documentMappersToUpdate.size());\n        MappingUpdatedAction.MappingUpdateListener listener = new MappingUpdatedAction.MappingUpdateListener() {\n            @Override\n            public void onMappingUpdate() {\n                updatedOnMaster.countDown();\n            }\n\n            @Override\n            public void onFailure(Throwable t) {\n                logger.debug(\"{} recovery to {}: failed to update mapping on master\", request.shardId(), request.targetNode(), t);\n                updatedOnMaster.countDown();\n            }\n        };\n        for (DocumentMapper documentMapper : documentMappersToUpdate) {\n            mappingUpdatedAction.updateMappingOnMaster(indexService.index().getName(), documentMapper, indexService.indexUUID(), listener);\n        }\n        cancellableThreads.execute(new Interruptable() {\n            @Override\n            public void run() throws InterruptedException {\n                try {\n                    if (!updatedOnMaster.await(recoverySettings.internalActionTimeout().millis(), TimeUnit.MILLISECONDS)) {\n                        logger.debug(\"[{}][{}] recovery [phase2] to {}: waiting on pending mapping update timed out. waited [{}]\",\n                                indexName, shardId, request.targetNode(), recoverySettings.internalActionTimeout());\n                    }\n                } catch (InterruptedException e) {\n                    Thread.currentThread().interrupt();\n                    logger.debug(\"interrupted while waiting for mapping to update on master\");\n                }\n            }\n        });\n    }","commit_id":"b3b1a11a64f9ba4222a74355e77bfdebd6fa711d","url":"https://github.com/elastic/elasticsearch"},{"original_method":"/**\n     * {@inheritDoc}\n     * \n     * @see KeyboardListener#onKeyPress(Widget, char, int)\n     */\n    public void onKeyPress(Widget sender, char keyCode, int modifiers)\n    {\n        // Make sure the sender is the listened text area and an image is selected\n        if (!(sender == textArea && textArea.getCommandManager().isExecuted(Command.INSERT_IMAGE))) {\n            return;\n        }\n        // If it's a modified key (ctrl or alt), let it execute\n        if (textArea.getCurrentEvent().getCtrlKey() || textArea.getCurrentEvent().getAltKey()) {\n            return;\n        }\n        // If it's in the defined list of allowed keys, let it execute\n        if (ALLOWED_KEYS.contains((int) keyCode)) {\n            return;\n        }\n        // block everything else\n        textArea.getCurrentEvent().xPreventDefault();\n    }","id":55877,"modified_method":"/**\n     * {@inheritDoc}\n     * \n     * @see KeyboardListener#onKeyPress(Widget, char, int)\n     */\n    public void onKeyPress(Widget sender, char keyCode, int modifiers)\n    {\n        // If we're blocking this key, prevent the default behavior for this key\n        if (this.blocking) {\n            textArea.getCurrentEvent().xPreventDefault();\n        }\n    }","commit_id":"0c0892165d83a62816e816a986ef381a6bf430dc","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"/**\n     * {@inheritDoc}\n     * \n     * @see KeyboardListener#onKeyDown(Widget, char, int)\n     */\n    public void onKeyDown(Widget sender, char keyCode, int modifiers)\n    {\n        // nothing\n    }","id":55878,"modified_method":"/**\n     * {@inheritDoc}\n     * \n     * @see KeyboardListener#onKeyDown(Widget, char, int)\n     */\n    public void onKeyDown(Widget sender, char keyCode, int modifiers)\n    {\n        // Test the current input and set the blocking flag.\n        this.blocking = needsBlocking(sender, keyCode, modifiers);\n        // If we're blocking this key, prevent the default behavior for this key\n        if (this.blocking) {\n            textArea.getCurrentEvent().xPreventDefault();\n        }\n    }","commit_id":"0c0892165d83a62816e816a986ef381a6bf430dc","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"/**\n     * {@inheritDoc}\n     * \n     * @see KeyboardListener#onKeyUp(Widget, char, int)\n     */\n    public void onKeyUp(Widget sender, char keyCode, int modifiers)\n    {\n        // nothing\n    }","id":55879,"modified_method":"/**\n     * {@inheritDoc}\n     * \n     * @see KeyboardListener#onKeyUp(Widget, char, int)\n     */\n    public void onKeyUp(Widget sender, char keyCode, int modifiers)\n    {\n        // If we're blocking this key, prevent the default behavior for this key\n        if (this.blocking) {\n            textArea.getCurrentEvent().xPreventDefault();\n        }\n    }","commit_id":"0c0892165d83a62816e816a986ef381a6bf430dc","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"/**\n     * Handles the delete key inside a list item, such that it meets the following behavior when hit at the end of a\n     * list item:\n     * <ul>\n     * <li>The list item in which the delete button is hit is never deleted, if there is another list item following it.\n     * On internet explorer, this may happen when the list item's entire content is deleted.<\/li>\n     * <li>The next list item is found (if any) and moved in the current list item in which the delete button has been\n     * hit<\/li>\n     * <\/ul>\n     * \n     * @param li the list item in which the delete key is hit\n     */\n    protected void onDelete(Element li)\n    {\n        // check if we're at the end of the list item and, if so, move the next list item into this one\n        Range range = getTextArea().getDocument().getSelection().getRangeAt(0);\n        // only handle collapsed ranges. Selection will be deleted as the default browser implementation dictates and\n        // resulting list will be cleaned on key up\n        if (!range.isCollapsed()) {\n            return;\n        }\n        // check if the selection is at the end of a list item text, either just before an embedded ul / ol.\n        Node endContainer = range.getEndContainer();\n        if (endContainer.getNodeType() == Node.TEXT_NODE\n            && DOMUtils.getInstance().getLength(endContainer) != range.getEndOffset()) {\n            // nothing, there are still things to delete\n            return;\n        }\n        // else, get the next leaf and check if it still is in this li or not\n        Node nextLeaf = DOMUtils.getInstance().getNextLeaf(range);\n        if (nextLeaf == null) {\n            // don't allow delete in the last list item in the document, because it could lead to deleting the list\n            // item, depending on the browser.\n            getTextArea().getCurrentEvent().xPreventDefault();\n            return;\n        }\n        // get first li ancestor of nextLeaf\n        Element nextLeafAncestorLi = (Element) DOMUtils.getInstance().getFirstAncestor(nextLeaf, LIST_ITEM_TAG);\n        // if the next leaf is an empty element placeholder in the same list item as the caret, don't let it be deleted,\n        // run the algo for the next leaf\n        Node nextEmptyItemPlacehodlerLeaf = null;\n        if (nextLeafAncestorLi == li && isEmptyListItemPlaceholder(nextLeaf)) {\n            nextEmptyItemPlacehodlerLeaf = nextLeaf;\n            nextLeaf = DOMUtils.getInstance().getNextLeaf(nextLeaf);\n            if (nextLeaf == null) {\n                // if there is no other leaf after the placeholder, don't allow to delete the placeholder: this would\n                // lead to deleting the whole item, and if it's the last in the document, we don't want that.\n                getTextArea().getCurrentEvent().xPreventDefault();\n                return;\n            }\n            nextLeafAncestorLi = (Element) DOMUtils.getInstance().getFirstAncestor(nextLeaf, LIST_ITEM_TAG);\n        }\n        // if we're in the same list item, we still have things to delete, so fall to default behaviour\n        if (nextLeafAncestorLi == li || nextLeafAncestorLi == null) {\n            return;\n        }\n\n        // execute the delete\n        executeDelete(li, nextLeafAncestorLi, nextEmptyItemPlacehodlerLeaf, range);\n        getTextArea().getCurrentEvent().xPreventDefault();\n    }","id":55880,"modified_method":"/**\n     * Handles the delete key inside a list item, such that it meets the following behavior when hit at the end of a\n     * list item:\n     * <ul>\n     * <li>The list item in which the delete button is hit is never deleted, if there is another list item following it.\n     * On internet explorer, this may happen when the list item's entire content is deleted.<\/li>\n     * <li>The next list item is found (if any) and moved in the current list item in which the delete button has been\n     * hit<\/li>\n     * <\/ul>\n     * \n     * @param li the list item in which the delete key is hit\n     */\n    protected void onDelete(Element li)\n    {\n        // check if we're at the end of the list item and, if so, move the next list item into this one\n        Range range = getTextArea().getDocument().getSelection().getRangeAt(0);\n        // only handle collapsed ranges. Selection will be deleted as the default browser implementation dictates and\n        // resulting list will be cleaned on key up\n        if (!range.isCollapsed()) {\n            return;\n        }\n        // check if the selection is at the end of a list item text, either just before an embedded ul / ol.\n        Node endContainer = range.getEndContainer();\n        if (endContainer.getNodeType() == Node.TEXT_NODE\n            && DOMUtils.getInstance().getLength(endContainer) != range.getEndOffset()) {\n            // nothing, there are still things to delete\n            return;\n        }\n        // else, get the next leaf and check if it still is in this li or not\n        Node nextLeaf = DOMUtils.getInstance().getNextLeaf(range);\n        if (nextLeaf == null) {\n            // don't allow delete in the last list item in the document, because it could lead to deleting the list\n            // item, depending on the browser.\n            getTextArea().getCurrentEvent().xPreventDefault();\n            return;\n        }\n        // get first li ancestor of nextLeaf\n        Element nextLeafAncestorLi = (Element) DOMUtils.getInstance().getFirstAncestor(nextLeaf, LIST_ITEM_TAG);\n        // if the next leaf is an empty element placeholder in the same list item as the caret, don't let it be deleted,\n        // run the algo for the next leaf\n        Node nextEmptyItemPlacehodlerLeaf = null;\n        if (nextLeafAncestorLi == li && isEmptyListItemPlaceholder(nextLeaf)) {\n            nextEmptyItemPlacehodlerLeaf = nextLeaf;\n            nextLeaf = DOMUtils.getInstance().getNextLeaf(nextLeaf);\n            if (nextLeaf == null) {\n                // if there is no other leaf after the placeholder, don't allow to delete the placeholder: this would\n                // lead to deleting the whole item, and if it's the last in the document, we don't want that.\n                getTextArea().getCurrentEvent().xPreventDefault();\n                return;\n            }\n            nextLeafAncestorLi = (Element) DOMUtils.getInstance().getFirstAncestor(nextLeaf, LIST_ITEM_TAG);\n        }\n        // if the next leaf is not in a list item, fallback on default behavior\n        if (nextLeafAncestorLi == null) {\n            return;\n        }\n\n        if (needsDeleteAdjustment(nextLeafAncestorLi, li)) {\n            // execute the delete\n            executeDelete(range.getEndContainer(), nextLeafAncestorLi, nextEmptyItemPlacehodlerLeaf, range);\n            getTextArea().getCurrentEvent().xPreventDefault();\n        }\n        // else browser default\n    }","commit_id":"a82a99e6d57ff2af0a2fd008c4521934dc47e62b","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"/**\n     * {@inheritDoc}\n     * \n     * @see CommandListener#onCommand(CommandManager, Command, String)\n     */\n    public void onCommand(CommandManager sender, Command command, String param)\n    {\n        // clean up the lists in the document on the delete command\n        if (command == Command.DELETE || command == Command.INDENT || command == Command.OUTDENT) {\n            cleanUp(getTextArea().getDocument().getDocumentElement());\n        }\n    }","id":55881,"modified_method":"/**\n     * {@inheritDoc}\n     * \n     * @see CommandListener#onCommand(CommandManager, Command, String)\n     */\n    public void onCommand(CommandManager sender, Command command, String param)\n    {\n        // clean up the lists in the document on delete, indent, outdent and reset\n        if (command == Command.DELETE || command == Command.INDENT || command == Command.OUTDENT\n            || command.equals(RESET_COMMAND)) {\n            cleanUp(getTextArea().getDocument().getDocumentElement());\n        }\n    }","commit_id":"a82a99e6d57ff2af0a2fd008c4521934dc47e62b","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"/**\n     * Handles the backspace key inside a list item, such that it meets the following behavior when hit at the beginning\n     * of a list item:\n     * <ul>\n     * <li>The list item in which the delete backspace button is hit is always deleted, if there is another list item\n     * preceeding it. Backspace never acts as unindent, for this, the unindent command should be used.<\/li>\n     * <li>The previous list item is found (if any) and the current list item is moved at the end of it<\/li>\n     * <\/ul>\n     * \n     * @param li the list item in which the backspace key is hit\n     */\n    protected void onBackspace(Element li)\n    {\n        // check if we're at the end of the list item and, if so, move the next list item into this one\n        Range range = getTextArea().getDocument().getSelection().getRangeAt(0);\n        // only handle collapsed ranges. Selection will be deleted as the default browser implementation dictates and\n        // resulting list will be cleaned on key up\n        if (!range.isCollapsed()) {\n            return;\n        }\n        // check if the selection is at the beginning of the list item. Look for the previous leaf\n        Node startContainer = range.getStartContainer();\n        if (startContainer.getNodeType() == Node.TEXT_NODE && range.getStartOffset() != 0) {\n            // we are in a text node and still have elements to delete before, with a backspace\n            return;\n        }\n        // check the previous leaf\n        Node previousLeaf = DOMUtils.getInstance().getPreviousLeaf(range);\n        // if there is no previous leaf, return\n        if (previousLeaf == null) {\n            return;\n        }\n        // get list item parent of the previous leaf\n        Element previousLeafAncestorLi = (Element) DOMUtils.getInstance().getFirstAncestor(previousLeaf, LIST_ITEM_TAG);\n        // check if the previous leaf is an empty list item placeholder in the same list item. if it is, it needs to be\n        // skipped and looked for the leaf before\n        Node previousEmptyItemPlacehodlerLeaf = null;\n\n        // if the leaf is still in this list item (there are more things to delete) or it's not in a list item, return\n        if (previousLeafAncestorLi == li || previousLeafAncestorLi == null) {\n            return;\n        }\n\n        // setup the range before move, put it in a convenient place: if the leaf is an empty placeholder,\n        // put it before the leaf, and set the placeholder as the skipped item to delete on move\n        if (isEmptyListItemPlaceholder(previousLeaf)) {\n            range.setEndBefore(previousLeaf);\n            previousEmptyItemPlacehodlerLeaf = previousLeaf;\n        } else if (previousLeaf.getNodeName().equalsIgnoreCase(LIST_ITEM_TAG)) {\n            // if the previousLeaf is an empty list item (<li />)\n            range.setEnd(previousLeafAncestorLi, 0);\n        } else {\n            range.setEndAfter(previousLeaf);\n        }\n\n        // effectively execute the move\n        executeDelete(previousLeafAncestorLi, li, previousEmptyItemPlacehodlerLeaf, range);\n        getTextArea().getCurrentEvent().xPreventDefault();\n    }","id":55882,"modified_method":"/**\n     * Handles the backspace key inside a list item, such that it meets the following behavior when hit at the beginning\n     * of a list item:\n     * <ul>\n     * <li>The list item in which the delete backspace button is hit is always deleted, if there is another list item\n     * preceeding it. Backspace never acts as unindent, for this, the unindent command should be used.<\/li>\n     * <li>The previous list item is found (if any) and the current list item is moved at the end of it<\/li>\n     * <\/ul>\n     * \n     * @param li the list item in which the backspace key is hit\n     */\n    protected void onBackspace(Element li)\n    {\n        // check if we're at the end of the list item and, if so, move the next list item into this one\n        Range range = getTextArea().getDocument().getSelection().getRangeAt(0);\n        // only handle collapsed ranges. Selection will be deleted as the default browser implementation dictates and\n        // resulting list will be cleaned on key up\n        if (!range.isCollapsed()) {\n            return;\n        }\n        // check if the selection is at the beginning of the list item. Look for the previous leaf\n        Node startContainer = range.getStartContainer();\n        if (startContainer.getNodeType() == Node.TEXT_NODE && range.getStartOffset() != 0) {\n            // we are in a text node and still have elements to delete before, with a backspace\n            return;\n        }\n        // check the previous leaf\n        Node previousLeaf = DOMUtils.getInstance().getPreviousLeaf(range);\n        // if there is no previous leaf, return\n        if (previousLeaf == null) {\n            return;\n        }\n        // get list item parent of the previous leaf\n        Element previousLeafAncestorLi = (Element) DOMUtils.getInstance().getFirstAncestor(previousLeaf, LIST_ITEM_TAG);\n        // check if the previous leaf is an empty list item placeholder in the same list item. if it is, it needs to be\n        // skipped and looked for the leaf before\n        Node previousEmptyItemPlacehodlerLeaf = null;\n\n        // if the previous leaf is not in a list item, return\n        if (previousLeafAncestorLi == null) {\n            return;\n        }\n\n        if (needsDeleteAdjustment(li, previousLeafAncestorLi)) {\n            // setup the range before move, put it in a convenient place: if the leaf is an empty placeholder,\n            // put it before the leaf, and set the placeholder as the skipped item to delete on move\n            if (isEmptyListItemPlaceholder(previousLeaf)) {\n                range.setEndBefore(previousLeaf);\n                previousEmptyItemPlacehodlerLeaf = previousLeaf;\n            } else if (previousLeaf.getNodeName().equalsIgnoreCase(LIST_ITEM_TAG)) {\n                // if the previousLeaf is an empty list item (<li />)\n                range.setEnd(previousLeafAncestorLi, 0);\n            } else {\n                range.setEndAfter(previousLeaf);\n            }\n            // effectively execute the move\n            executeDelete(previousLeaf, li, previousEmptyItemPlacehodlerLeaf, range);\n            getTextArea().getCurrentEvent().xPreventDefault();\n        }\n        // else browser default\n    }","commit_id":"a82a99e6d57ff2af0a2fd008c4521934dc47e62b","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"/**\n     * Effectively executes the delete operation at the end of a list item by moving the next list item in this one, for\n     * the passed parameters.\n     * \n     * @param li the list item in which the delete was hit\n     * @param nextLi the next list item after the current list item end, to move in the current list item\n     * @param range the selection range for which this operation is executed, used to determine where the {@code nextLi}\n     *            needs to be inserted and how selection needs to be restored\n     * @param skippedEmptyPlaceHolder the first empty list item placeholder that was skipped by the next leaf lookup\n     *            algorithm in this delete operation, and which needs to be removed with the execution of the delete\n     */\n    protected void executeDelete(Element li, Element nextLi, Node skippedEmptyPlaceHolder, Range range)\n    {\n        // save the position of the cursor to restore it after insert\n        int endOffset = range.getEndOffset();\n        Node endContainer = range.getEndContainer();\n\n        // else get the next leaf's li from its parent and put it here\n        Node extractedLi =\n            DOMUtils.getInstance().extractNodeContents(nextLi, 0, DOMUtils.getInstance().getLength(nextLi));\n        // insert the content of the found next list item, with the li as a parent\n        if (endContainer == li) {\n            DOMUtils.getInstance().insertAt(li, extractedLi, range.getEndOffset());\n        } else {\n            Node insertAfter = DOMUtils.getInstance().getChild(li, endContainer);\n            DOMUtils.getInstance().insertAfter(extractedLi, insertAfter);\n        }\n\n        // restore the position of the cursor\n        range.setEnd(endContainer, endOffset);\n        getTextArea().getDocument().getSelection().removeAllRanges();\n        getTextArea().getDocument().getSelection().addRange(range);\n\n        Element liParentElt = (Element) nextLi.getParentElement();\n        liParentElt.removeChild(nextLi);\n        // if the li from which we moved the li is an empty one, remove it\n        if (liParentElt.getChildNodes().getLength() == 0) {\n            // remove the list from its parent\n            liParentElt.getParentElement().removeChild(liParentElt);\n        }\n        // delete the empty element placeholder in this li which we skipped, if any\n        if (skippedEmptyPlaceHolder != null) {\n            skippedEmptyPlaceHolder.getParentNode().removeChild(skippedEmptyPlaceHolder);\n        }\n    }","id":55883,"modified_method":"/**\n     * Effectively executes the delete operation at the end of a list item by moving the next list item in this one, for\n     * the passed parameters.\n     * \n     * @param reference the reference element, to move the content of the {@code nextLi} after it\n     * @param nextLi the next list item after the current list item end, to move in the current list item\n     * @param range the selection range for which this operation is executed, used to determine where the {@code nextLi}\n     *            needs to be inserted and how selection needs to be restored\n     * @param skippedEmptyPlaceHolder the first empty list item placeholder that was skipped by the next leaf lookup\n     *            algorithm in this delete operation, and which needs to be removed with the execution of the delete\n     */\n    protected void executeDelete(Node reference, Element nextLi, Node skippedEmptyPlaceHolder, Range range)\n    {\n        // save the position of the cursor to restore it after insert\n        int endOffset = range.getEndOffset();\n        Node endContainer = range.getEndContainer();\n\n        // else get the next leaf's li from its parent and put it here\n        Node extractedLi =\n            DOMUtils.getInstance().extractNodeContents(nextLi, 0, DOMUtils.getInstance().getLength(nextLi));\n        // insert the content of the found next list item, after the reference node\n        DOMUtils.getInstance().insertAfter(extractedLi, reference);\n\n        // restore the position of the cursor\n        range.setEnd(endContainer, endOffset);\n        getTextArea().getDocument().getSelection().removeAllRanges();\n        getTextArea().getDocument().getSelection().addRange(range);\n\n        Element liParentElt = (Element) nextLi.getParentElement();\n        liParentElt.removeChild(nextLi);\n        // if the li from which we moved the li is an empty one, remove it\n        if (liParentElt.getChildNodes().getLength() == 0) {\n            // remove the list from its parent\n            liParentElt.getParentElement().removeChild(liParentElt);\n        }\n        // delete the empty element placeholder in this li which we skipped, if any\n        if (skippedEmptyPlaceHolder != null) {\n            skippedEmptyPlaceHolder.getParentNode().removeChild(skippedEmptyPlaceHolder);\n        }\n    }","commit_id":"a82a99e6d57ff2af0a2fd008c4521934dc47e62b","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"/**\n     * {@inheritDoc}\n     * \n     * @see AbstractStatefulPlugin#init(Wysiwyg, RichTextArea, Config)\n     */\n    public void init(Wysiwyg wysiwyg, RichTextArea textArea, Config config)\n    {\n        super.init(wysiwyg, textArea, config);\n\n        // Register custom executables in order to handle valid HTML lists.\n        getTextArea().getCommandManager().registerCommand(Command.INSERT_ORDERED_LIST, new ListExecutable(true));\n        getTextArea().getCommandManager().registerCommand(Command.INSERT_UNORDERED_LIST, new ListExecutable(false));\n\n        addFeature(\"orderedlist\", Command.INSERT_ORDERED_LIST, Images.INSTANCE.ol().createImage(), Strings.INSTANCE\n            .ol());\n        addFeature(\"unorderedlist\", Command.INSERT_UNORDERED_LIST, Images.INSTANCE.ul().createImage(), Strings.INSTANCE\n            .ul());\n\n        if (toolBarExtension.getFeatures().length > 0) {\n            getTextArea().addMouseListener(this);\n            getTextArea().addKeyboardListener(this);\n            getTextArea().getCommandManager().addCommandListener(this);\n            getUIExtensionList().add(toolBarExtension);\n\n            // Initialize the behavior adjuster and set it up with this text area\n            behaviorAdjuster = (ListBehaviorAdjuster) GWT.create(ListBehaviorAdjuster.class);\n            behaviorAdjuster.setTextArea(getTextArea());\n            // handle all list item elements in the loaded document\n            behaviorAdjuster.onInnerHTMLChange(Element.as(getTextArea().getDocument().getBody()));\n            // add key listener to the rta\n            getTextArea().addKeyboardListener(behaviorAdjuster);\n            getTextArea().getCommandManager().addCommandListener(behaviorAdjuster);\n        }\n    }","id":55884,"modified_method":"/**\n     * {@inheritDoc}\n     * \n     * @see AbstractStatefulPlugin#init(Wysiwyg, RichTextArea, Config)\n     */\n    public void init(Wysiwyg wysiwyg, RichTextArea textArea, Config config)\n    {\n        super.init(wysiwyg, textArea, config);\n\n        // Register custom executables in order to handle valid HTML lists.\n        getTextArea().getCommandManager().registerCommand(Command.INSERT_ORDERED_LIST, new ListExecutable(true));\n        getTextArea().getCommandManager().registerCommand(Command.INSERT_UNORDERED_LIST, new ListExecutable(false));\n\n        addFeature(\"orderedlist\", Command.INSERT_ORDERED_LIST, Images.INSTANCE.ol().createImage(), Strings.INSTANCE\n            .ol());\n        addFeature(\"unorderedlist\", Command.INSERT_UNORDERED_LIST, Images.INSTANCE.ul().createImage(), Strings.INSTANCE\n            .ul());\n\n        if (toolBarExtension.getFeatures().length > 0) {\n            getTextArea().addMouseListener(this);\n            getTextArea().addKeyboardListener(this);\n            getTextArea().getCommandManager().addCommandListener(this);\n            getUIExtensionList().add(toolBarExtension);\n\n            // Initialize the behavior adjuster and set it up with this text area\n            behaviorAdjuster = (ListBehaviorAdjuster) GWT.create(ListBehaviorAdjuster.class);\n            behaviorAdjuster.setTextArea(getTextArea());\n            // fake a reset command to handle the loaded document\n            behaviorAdjuster.onCommand(getTextArea().getCommandManager(), new Command(\"reset\"), null);\n            // add key listener to the rta\n            getTextArea().addKeyboardListener(behaviorAdjuster);\n            getTextArea().getCommandManager().addCommandListener(behaviorAdjuster);\n        }\n    }","commit_id":"a82a99e6d57ff2af0a2fd008c4521934dc47e62b","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"/**\n   * Create content assist proposals at the given caret offset. This document read operation\n   * is scheduled with higher priority, so currently running operations may be canceled.\n   * The document processing is rescheduled as background work afterwards.\n   */\n  public ContentAssistResult createProposals(final XtextWebDocumentAccess document, final ITextRegion selection, final int offset, final int proposalsLimit) throws InvalidRequestException {\n    ContentAssistContextFactory _get = this.contextFactoryProvider.get();\n    final Procedure1<ContentAssistContextFactory> _function = new Procedure1<ContentAssistContextFactory>() {\n      @Override\n      public void apply(final ContentAssistContextFactory it) {\n        it.setPool(ContentAssistService.this.executorService);\n      }\n    };\n    final ContentAssistContextFactory contextFactory = ObjectExtensions.<ContentAssistContextFactory>operator_doubleArrow(_get, _function);\n    final String[] stateIdWrapper = new String[1];\n    final CancelableUnitOfWork<ContentAssistContext[], IXtextWebDocument> _function_1 = new CancelableUnitOfWork<ContentAssistContext[], IXtextWebDocument>() {\n      @Override\n      public ContentAssistContext[] exec(final IXtextWebDocument it, final CancelIndicator cancelIndicator) throws Exception {\n        ContentAssistContext[] _xblockexpression = null;\n        {\n          String _stateId = it.getStateId();\n          stateIdWrapper[0] = _stateId;\n          String _text = it.getText();\n          XtextResource _resource = it.getResource();\n          _xblockexpression = contextFactory.create(_text, selection, offset, _resource);\n        }\n        return _xblockexpression;\n      }\n    };\n    final ContentAssistContext[] contexts = document.<ContentAssistContext[]>priorityReadOnly(_function_1);\n    String _get_1 = stateIdWrapper[0];\n    return this.createProposals(((List<ContentAssistContext>)Conversions.doWrapArray(contexts)), _get_1, proposalsLimit);\n  }","id":55885,"modified_method":"/**\n   * Create content assist proposals at the given caret offset. This document read operation\n   * is scheduled with higher priority, so currently running operations may be canceled.\n   * The document processing is rescheduled as background work afterwards.\n   */\n  public ContentAssistResult createProposals(final XtextWebDocumentAccess document, final ITextRegion selection, final int caretOffset, final int proposalsLimit) throws InvalidRequestException {\n    final String[] stateIdWrapper = new String[1];\n    final CancelableUnitOfWork<ContentAssistContext[], IXtextWebDocument> _function = new CancelableUnitOfWork<ContentAssistContext[], IXtextWebDocument>() {\n      @Override\n      public ContentAssistContext[] exec(final IXtextWebDocument it, final CancelIndicator cancelIndicator) throws Exception {\n        ContentAssistContext[] _xblockexpression = null;\n        {\n          String _stateId = it.getStateId();\n          stateIdWrapper[0] = _stateId;\n          _xblockexpression = ContentAssistService.this.getContexts(it, selection, caretOffset);\n        }\n        return _xblockexpression;\n      }\n    };\n    final ContentAssistContext[] contexts = document.<ContentAssistContext[]>priorityReadOnly(_function);\n    String _get = stateIdWrapper[0];\n    return this.createProposals(((List<ContentAssistContext>)Conversions.doWrapArray(contexts)), _get, proposalsLimit);\n  }","commit_id":"055e4ee9ff32628908eda03d9cccba7b872b0f8b","url":"https://github.com/eclipse/xtext"},{"original_method":"/**\n   * Apply a text update and then create content assist proposals. This document read operation\n   * is scheduled with higher priority, so currently running operations may be canceled.\n   * The document processing is rescheduled as background work afterwards.\n   */\n  public ContentAssistResult createProposalsWithUpdate(final XtextWebDocumentAccess document, final String deltaText, final int deltaOffset, final int deltaReplaceLength, final ITextRegion textSelection, final int caretOffset, final int proposalsLimit) throws InvalidRequestException {\n    ContentAssistContextFactory _get = this.contextFactoryProvider.get();\n    final Procedure1<ContentAssistContextFactory> _function = new Procedure1<ContentAssistContextFactory>() {\n      @Override\n      public void apply(final ContentAssistContextFactory it) {\n        it.setPool(ContentAssistService.this.executorService);\n      }\n    };\n    final ContentAssistContextFactory contextFactory = ObjectExtensions.<ContentAssistContextFactory>operator_doubleArrow(_get, _function);\n    final String[] stateIdWrapper = new String[1];\n    final CancelableUnitOfWork<ContentAssistContext[], IXtextWebDocument> _function_1 = new CancelableUnitOfWork<ContentAssistContext[], IXtextWebDocument>() {\n      @Override\n      public ContentAssistContext[] exec(final IXtextWebDocument it, final CancelIndicator cancelIndicator) throws Exception {\n        ContentAssistContext[] _xblockexpression = null;\n        {\n          it.setDirty(true);\n          it.createNewStateId();\n          String _stateId = it.getStateId();\n          stateIdWrapper[0] = _stateId;\n          it.updateText(deltaText, deltaOffset, deltaReplaceLength);\n          String _text = it.getText();\n          XtextResource _resource = it.getResource();\n          _xblockexpression = contextFactory.create(_text, textSelection, caretOffset, _resource);\n        }\n        return _xblockexpression;\n      }\n    };\n    final ContentAssistContext[] contexts = document.<ContentAssistContext[]>modify(_function_1);\n    String _get_1 = stateIdWrapper[0];\n    return this.createProposals(((List<ContentAssistContext>)Conversions.doWrapArray(contexts)), _get_1, proposalsLimit);\n  }","id":55886,"modified_method":"/**\n   * Apply a text update and then create content assist proposals. This document read operation\n   * is scheduled with higher priority, so currently running operations may be canceled.\n   * The document processing is rescheduled as background work afterwards.\n   */\n  public ContentAssistResult createProposalsWithUpdate(final XtextWebDocumentAccess document, final String deltaText, final int deltaOffset, final int deltaReplaceLength, final ITextRegion selection, final int caretOffset, final int proposalsLimit) throws InvalidRequestException {\n    final String[] stateIdWrapper = new String[1];\n    final CancelableUnitOfWork<ContentAssistContext[], IXtextWebDocument> _function = new CancelableUnitOfWork<ContentAssistContext[], IXtextWebDocument>() {\n      @Override\n      public ContentAssistContext[] exec(final IXtextWebDocument it, final CancelIndicator cancelIndicator) throws Exception {\n        ContentAssistContext[] _xblockexpression = null;\n        {\n          it.setDirty(true);\n          it.createNewStateId();\n          String _stateId = it.getStateId();\n          stateIdWrapper[0] = _stateId;\n          it.updateText(deltaText, deltaOffset, deltaReplaceLength);\n          _xblockexpression = ContentAssistService.this.getContexts(it, selection, caretOffset);\n        }\n        return _xblockexpression;\n      }\n    };\n    final ContentAssistContext[] contexts = document.<ContentAssistContext[]>modify(_function);\n    String _get = stateIdWrapper[0];\n    return this.createProposals(((List<ContentAssistContext>)Conversions.doWrapArray(contexts)), _get, proposalsLimit);\n  }","commit_id":"055e4ee9ff32628908eda03d9cccba7b872b0f8b","url":"https://github.com/eclipse/xtext"},{"original_method":"@Test\n  public void testCustomTerminal() {\n    StringConcatenation _builder = new StringConcatenation();\n    _builder.append(\"ContentAssistResult [\");\n    _builder.newLine();\n    _builder.append(\"  \");\n    _builder.append(\"stateId = \\\"-80000000\\\"\");\n    _builder.newLine();\n    _builder.append(\"  \");\n    _builder.append(\"entries = ArrayList (\");\n    _builder.newLine();\n    _builder.append(\"    \");\n    _builder.append(\"ContentAssistEntry [\");\n    _builder.newLine();\n    _builder.append(\"      \");\n    _builder.append(\"prefix = \\\"\\\"\");\n    _builder.newLine();\n    _builder.append(\"      \");\n    _builder.append(\"proposal = \\\"false\\\"\");\n    _builder.newLine();\n    _builder.append(\"      \");\n    _builder.append(\"textReplacements = ArrayList ()\");\n    _builder.newLine();\n    _builder.append(\"      \");\n    _builder.append(\"editPositions = ArrayList ()\");\n    _builder.newLine();\n    _builder.append(\"    \");\n    _builder.append(\"],\");\n    _builder.newLine();\n    _builder.append(\"    \");\n    _builder.append(\"ContentAssistEntry [\");\n    _builder.newLine();\n    _builder.append(\"      \");\n    _builder.append(\"prefix = \\\"\\\"\");\n    _builder.newLine();\n    _builder.append(\"      \");\n    _builder.append(\"proposal = \\\"true\\\"\");\n    _builder.newLine();\n    _builder.append(\"      \");\n    _builder.append(\"textReplacements = ArrayList ()\");\n    _builder.newLine();\n    _builder.append(\"      \");\n    _builder.append(\"editPositions = ArrayList ()\");\n    _builder.newLine();\n    _builder.append(\"    \");\n    _builder.append(\"]\");\n    _builder.newLine();\n    _builder.append(\"  \");\n    _builder.append(\")\");\n    _builder.newLine();\n    _builder.append(\"]\");\n    this.assertContentAssistResult(\"output signal x state foo set x = | end\", _builder);\n  }","id":55887,"modified_method":"@Test\n  public void testCustomTerminal() {\n    StringConcatenation _builder = new StringConcatenation();\n    _builder.append(\"output signal x\");\n    _builder.newLine();\n    _builder.append(\"state foo\");\n    _builder.newLine();\n    _builder.append(\"\\t\");\n    _builder.append(\"set x = |\");\n    _builder.newLine();\n    _builder.append(\"end\");\n    _builder.newLine();\n    StringConcatenation _builder_1 = new StringConcatenation();\n    _builder_1.append(\"ContentAssistResult [\");\n    _builder_1.newLine();\n    _builder_1.append(\"  \");\n    _builder_1.append(\"stateId = \\\"-80000000\\\"\");\n    _builder_1.newLine();\n    _builder_1.append(\"  \");\n    _builder_1.append(\"entries = ArrayList (\");\n    _builder_1.newLine();\n    _builder_1.append(\"    \");\n    _builder_1.append(\"ContentAssistEntry [\");\n    _builder_1.newLine();\n    _builder_1.append(\"      \");\n    _builder_1.append(\"prefix = \\\"\\\"\");\n    _builder_1.newLine();\n    _builder_1.append(\"      \");\n    _builder_1.append(\"proposal = \\\"false\\\"\");\n    _builder_1.newLine();\n    _builder_1.append(\"      \");\n    _builder_1.append(\"textReplacements = ArrayList ()\");\n    _builder_1.newLine();\n    _builder_1.append(\"      \");\n    _builder_1.append(\"editPositions = ArrayList ()\");\n    _builder_1.newLine();\n    _builder_1.append(\"    \");\n    _builder_1.append(\"],\");\n    _builder_1.newLine();\n    _builder_1.append(\"    \");\n    _builder_1.append(\"ContentAssistEntry [\");\n    _builder_1.newLine();\n    _builder_1.append(\"      \");\n    _builder_1.append(\"prefix = \\\"\\\"\");\n    _builder_1.newLine();\n    _builder_1.append(\"      \");\n    _builder_1.append(\"proposal = \\\"true\\\"\");\n    _builder_1.newLine();\n    _builder_1.append(\"      \");\n    _builder_1.append(\"textReplacements = ArrayList ()\");\n    _builder_1.newLine();\n    _builder_1.append(\"      \");\n    _builder_1.append(\"editPositions = ArrayList ()\");\n    _builder_1.newLine();\n    _builder_1.append(\"    \");\n    _builder_1.append(\"]\");\n    _builder_1.newLine();\n    _builder_1.append(\"  \");\n    _builder_1.append(\")\");\n    _builder_1.newLine();\n    _builder_1.append(\"]\");\n    this.assertContentAssistResult(_builder, _builder_1);\n  }","commit_id":"055e4ee9ff32628908eda03d9cccba7b872b0f8b","url":"https://github.com/eclipse/xtext"},{"original_method":"@Test\n  public void testCustomCrossref() {\n    StringConcatenation _builder = new StringConcatenation();\n    _builder.append(\"ContentAssistResult [\");\n    _builder.newLine();\n    _builder.append(\"  \");\n    _builder.append(\"stateId = \\\"-80000000\\\"\");\n    _builder.newLine();\n    _builder.append(\"  \");\n    _builder.append(\"entries = ArrayList (\");\n    _builder.newLine();\n    _builder.append(\"    \");\n    _builder.append(\"ContentAssistEntry [\");\n    _builder.newLine();\n    _builder.append(\"      \");\n    _builder.append(\"prefix = \\\"\\\"\");\n    _builder.newLine();\n    _builder.append(\"      \");\n    _builder.append(\"proposal = \\\"x\\\"\");\n    _builder.newLine();\n    _builder.append(\"      \");\n    _builder.append(\"description = \\\"input signal\\\"\");\n    _builder.newLine();\n    _builder.append(\"      \");\n    _builder.append(\"textReplacements = ArrayList ()\");\n    _builder.newLine();\n    _builder.append(\"      \");\n    _builder.append(\"editPositions = ArrayList ()\");\n    _builder.newLine();\n    _builder.append(\"    \");\n    _builder.append(\"]\");\n    _builder.newLine();\n    _builder.append(\"  \");\n    _builder.append(\")\");\n    _builder.newLine();\n    _builder.append(\"]\");\n    this.assertContentAssistResult(\"input signal x state foo if | == true goto foo end\", _builder);\n  }","id":55888,"modified_method":"@Test\n  public void testCustomCrossref() {\n    StringConcatenation _builder = new StringConcatenation();\n    _builder.append(\"input signal x\");\n    _builder.newLine();\n    _builder.append(\"state foo\");\n    _builder.newLine();\n    _builder.append(\"\\t\");\n    _builder.append(\"if | == true goto foo\");\n    _builder.newLine();\n    _builder.append(\"end\");\n    _builder.newLine();\n    StringConcatenation _builder_1 = new StringConcatenation();\n    _builder_1.append(\"ContentAssistResult [\");\n    _builder_1.newLine();\n    _builder_1.append(\"  \");\n    _builder_1.append(\"stateId = \\\"-80000000\\\"\");\n    _builder_1.newLine();\n    _builder_1.append(\"  \");\n    _builder_1.append(\"entries = ArrayList (\");\n    _builder_1.newLine();\n    _builder_1.append(\"    \");\n    _builder_1.append(\"ContentAssistEntry [\");\n    _builder_1.newLine();\n    _builder_1.append(\"      \");\n    _builder_1.append(\"prefix = \\\"\\\"\");\n    _builder_1.newLine();\n    _builder_1.append(\"      \");\n    _builder_1.append(\"proposal = \\\"x\\\"\");\n    _builder_1.newLine();\n    _builder_1.append(\"      \");\n    _builder_1.append(\"description = \\\"input signal\\\"\");\n    _builder_1.newLine();\n    _builder_1.append(\"      \");\n    _builder_1.append(\"textReplacements = ArrayList ()\");\n    _builder_1.newLine();\n    _builder_1.append(\"      \");\n    _builder_1.append(\"editPositions = ArrayList ()\");\n    _builder_1.newLine();\n    _builder_1.append(\"    \");\n    _builder_1.append(\"]\");\n    _builder_1.newLine();\n    _builder_1.append(\"  \");\n    _builder_1.append(\")\");\n    _builder_1.newLine();\n    _builder_1.append(\"]\");\n    this.assertContentAssistResult(_builder, _builder_1);\n  }","commit_id":"055e4ee9ff32628908eda03d9cccba7b872b0f8b","url":"https://github.com/eclipse/xtext"},{"original_method":"/**\n   * Compute a hover result at the given offset in the document.\n   */\n  public HoverResult getHover(final XtextWebDocumentAccess document, final int offset) {\n    final CancelableUnitOfWork<HoverResult, IXtextWebDocument> _function = new CancelableUnitOfWork<HoverResult, IXtextWebDocument>() {\n      @Override\n      public HoverResult exec(final IXtextWebDocument it, final CancelIndicator cancelIndicator) throws Exception {\n        XtextResource _resource = it.getResource();\n        final EObject element = HoverService.this._elementAtOffsetUtil.getElementAt(_resource, offset);\n        String _nameLabel = null;\n        if (element!=null) {\n          _nameLabel=HoverService.this._iNameLabelProvider.getNameLabel(element);\n        }\n        String _surroundWithDiv = null;\n        if (_nameLabel!=null) {\n          _surroundWithDiv=HoverService.this.surroundWithDiv(_nameLabel, \"element-name\");\n        }\n        final String nameLabel = _surroundWithDiv;\n        boolean _notEquals = (!Objects.equal(nameLabel, null));\n        if (_notEquals) {\n          HoverService.this._operationCanceledManager.checkCanceled(cancelIndicator);\n          IImageDescription _imageDescription = HoverService.this._iImageDescriptionProvider.getImageDescription(element);\n          String _addIconDivs = HoverService.this.addIconDivs(_imageDescription, nameLabel);\n          final String titleHtml = HoverService.this.surroundWithDiv(_addIconDivs, \"xtext-hover\");\n          HoverService.this._operationCanceledManager.checkCanceled(cancelIndicator);\n          String _elvis = null;\n          String _documentation = HoverService.this._iEObjectDocumentationProvider.getDocumentation(element);\n          if (_documentation != null) {\n            _elvis = _documentation;\n          } else {\n            _elvis = \"\";\n          }\n          final String bodyHtml = HoverService.this.surroundWithDiv(_elvis, \"xtext-hover\");\n          String _stateId = it.getStateId();\n          return new HoverResult(_stateId, titleHtml, bodyHtml);\n        } else {\n          String _stateId_1 = it.getStateId();\n          return new HoverResult(_stateId_1);\n        }\n      }\n    };\n    return document.<HoverResult>readOnly(_function);\n  }","id":55889,"modified_method":"/**\n   * Compute a hover result at the given offset in the document.\n   */\n  public HoverResult getHover(final XtextWebDocumentAccess document, final int offset) throws InvalidRequestException {\n    final CancelableUnitOfWork<HoverResult, IXtextWebDocument> _function = new CancelableUnitOfWork<HoverResult, IXtextWebDocument>() {\n      @Override\n      public HoverResult exec(final IXtextWebDocument it, final CancelIndicator cancelIndicator) throws Exception {\n        HoverResult _xblockexpression = null;\n        {\n          XtextResource _resource = it.getResource();\n          final EObject element = HoverService.this._elementAtOffsetUtil.getElementAt(_resource, offset);\n          String _stateId = it.getStateId();\n          _xblockexpression = HoverService.this.createHover(element, _stateId, cancelIndicator);\n        }\n        return _xblockexpression;\n      }\n    };\n    return document.<HoverResult>readOnly(_function);\n  }","commit_id":"055e4ee9ff32628908eda03d9cccba7b872b0f8b","url":"https://github.com/eclipse/xtext"},{"original_method":"@Test\n  public void testUnDocumentedElement() {\n    StringConcatenation _builder = new StringConcatenation();\n    _builder.append(\"state #foo\");\n    _builder.newLine();\n    HoverResult _hover = this.getHover(_builder);\n    StringConcatenation _builder_1 = new StringConcatenation();\n    _builder_1.append(\"<div class=\\\"xtext-hover\\\">\");\n    _builder_1.newLine();\n    _builder_1.append(\"<\/div>\");\n    _builder_1.newLine();\n    HoverResult _assertContent = this.assertContent(_hover, _builder_1.toString());\n    StringConcatenation _builder_2 = new StringConcatenation();\n    _builder_2.append(\"<div class=\\\"xtext-hover\\\">\");\n    _builder_2.newLine();\n    _builder_2.append(\"\\t\");\n    _builder_2.append(\"<div class=\\\"State-icon default-icon\\\">\");\n    _builder_2.newLine();\n    _builder_2.append(\"\\t\\t\");\n    _builder_2.append(\"<div class=\\\"element-name\\\">\");\n    _builder_2.newLine();\n    _builder_2.append(\"\\t\\t\\t\");\n    _builder_2.append(\"foo\");\n    _builder_2.newLine();\n    _builder_2.append(\"\\t\\t\");\n    _builder_2.append(\"<\/div>\");\n    _builder_2.newLine();\n    _builder_2.append(\"\\t\");\n    _builder_2.append(\"<\/div>\");\n    _builder_2.newLine();\n    _builder_2.append(\"<\/div>\");\n    _builder_2.newLine();\n    this.assertTitle(_assertContent, _builder_2.toString());\n  }","id":55890,"modified_method":"@Test\n  public void testUndocumentedElement() {\n    StringConcatenation _builder = new StringConcatenation();\n    _builder.append(\"state #foo\");\n    _builder.newLine();\n    HoverResult _hover = this.getHover(_builder);\n    StringConcatenation _builder_1 = new StringConcatenation();\n    HoverResult _assertContent = this.assertContent(_hover, _builder_1.toString());\n    StringConcatenation _builder_2 = new StringConcatenation();\n    _builder_2.append(\"<div class=\\\"xtext-hover\\\">\");\n    _builder_2.newLine();\n    _builder_2.append(\"\\t\");\n    _builder_2.append(\"<div class=\\\"State-icon default-icon\\\">\");\n    _builder_2.newLine();\n    _builder_2.append(\"\\t\\t\");\n    _builder_2.append(\"<div class=\\\"element-name\\\">\");\n    _builder_2.newLine();\n    _builder_2.append(\"\\t\\t\\t\");\n    _builder_2.append(\"foo\");\n    _builder_2.newLine();\n    _builder_2.append(\"\\t\\t\");\n    _builder_2.append(\"<\/div>\");\n    _builder_2.newLine();\n    _builder_2.append(\"\\t\");\n    _builder_2.append(\"<\/div>\");\n    _builder_2.newLine();\n    _builder_2.append(\"<\/div>\");\n    _builder_2.newLine();\n    this.assertTitle(_assertContent, _builder_2.toString());\n  }","commit_id":"055e4ee9ff32628908eda03d9cccba7b872b0f8b","url":"https://github.com/eclipse/xtext"},{"original_method":"/**\n   * Create content assist proposals and pass them to the given acceptor.\n   */\n  public void createProposals(final List<ContentAssistContext> contexts, final IIdeContentProposalAcceptor acceptor) {\n    ContentAssistContext selectedContext = null;\n    for (final ContentAssistContext context : contexts) {\n      boolean _or = false;\n      if ((selectedContext == null)) {\n        _or = true;\n      } else {\n        boolean _and = false;\n        boolean _isAcceptable = this.isAcceptable(context);\n        if (!_isAcceptable) {\n          _and = false;\n        } else {\n          boolean _or_1 = false;\n          String _prefix = context.getPrefix();\n          int _length = _prefix.length();\n          String _prefix_1 = selectedContext.getPrefix();\n          int _length_1 = _prefix_1.length();\n          boolean _greaterThan = (_length > _length_1);\n          if (_greaterThan) {\n            _or_1 = true;\n          } else {\n            boolean _isAcceptable_1 = this.isAcceptable(selectedContext);\n            boolean _not = (!_isAcceptable_1);\n            _or_1 = _not;\n          }\n          _and = _or_1;\n        }\n        _or = _and;\n      }\n      if (_or) {\n        selectedContext = context;\n      }\n    }\n    for (final ContentAssistContext context_1 : contexts) {\n      boolean _or_2 = false;\n      if ((context_1 == selectedContext)) {\n        _or_2 = true;\n      } else {\n        boolean _and_1 = false;\n        String _prefix_2 = context_1.getPrefix();\n        String _prefix_3 = selectedContext.getPrefix();\n        boolean _equals = Objects.equal(_prefix_2, _prefix_3);\n        if (!_equals) {\n          _and_1 = false;\n        } else {\n          boolean _isAcceptable_2 = this.isAcceptable(context_1);\n          _and_1 = _isAcceptable_2;\n        }\n        _or_2 = _and_1;\n      }\n      if (_or_2) {\n        ImmutableList<AbstractElement> _firstSetGrammarElements = context_1.getFirstSetGrammarElements();\n        for (final AbstractElement element : _firstSetGrammarElements) {\n          {\n            boolean _canAcceptMoreProposals = acceptor.canAcceptMoreProposals();\n            boolean _not_1 = (!_canAcceptMoreProposals);\n            if (_not_1) {\n              return;\n            }\n            this.createProposals(element, context_1, acceptor);\n          }\n        }\n      }\n    }\n  }","id":55891,"modified_method":"/**\n   * Create content assist proposals and pass them to the given acceptor.\n   */\n  public void createProposals(final Collection<ContentAssistContext> contexts, final IIdeContentProposalAcceptor acceptor) {\n    Iterable<ContentAssistContext> _filteredContexts = this.getFilteredContexts(contexts);\n    for (final ContentAssistContext context : _filteredContexts) {\n      ImmutableList<AbstractElement> _firstSetGrammarElements = context.getFirstSetGrammarElements();\n      for (final AbstractElement element : _firstSetGrammarElements) {\n        {\n          boolean _canAcceptMoreProposals = acceptor.canAcceptMoreProposals();\n          boolean _not = (!_canAcceptMoreProposals);\n          if (_not) {\n            return;\n          }\n          this.createProposals(element, context, acceptor);\n        }\n      }\n    }\n  }","commit_id":"055e4ee9ff32628908eda03d9cccba7b872b0f8b","url":"https://github.com/eclipse/xtext"},{"original_method":"protected void _createProposals(final Assignment assignment, final ContentAssistContext context, final IIdeContentProposalAcceptor acceptor) {\n    final AbstractElement terminal = assignment.getTerminal();\n    if ((terminal instanceof CrossReference)) {\n      AbstractElement _terminal = assignment.getTerminal();\n      this.createProposals(_terminal, context, acceptor);\n    } else {\n      if ((terminal instanceof RuleCall)) {\n        final AbstractRule rule = ((RuleCall)terminal).getRule();\n        boolean _and = false;\n        if (!(rule instanceof TerminalRule)) {\n          _and = false;\n        } else {\n          String _prefix = context.getPrefix();\n          boolean _isEmpty = _prefix.isEmpty();\n          _and = _isEmpty;\n        }\n        if (_and) {\n          ContentAssistEntry _contentAssistEntry = new ContentAssistEntry();\n          final Procedure1<ContentAssistEntry> _function = new Procedure1<ContentAssistEntry>() {\n            @Override\n            public void apply(final ContentAssistEntry it) {\n              String _prefix = context.getPrefix();\n              it.setPrefix(_prefix);\n              String _name = rule.getName();\n              boolean _equals = Objects.equal(_name, \"STRING\");\n              if (_equals) {\n                String _feature = assignment.getFeature();\n                String _plus = (\"\\\"\" + _feature);\n                String _plus_1 = (_plus + \"\\\"\");\n                it.setProposal(_plus_1);\n                ArrayList<TextRegion> _editPositions = it.getEditPositions();\n                int _offset = context.getOffset();\n                int _plus_2 = (_offset + 1);\n                String _proposal = it.getProposal();\n                int _length = _proposal.length();\n                int _minus = (_length - 2);\n                TextRegion _textRegion = new TextRegion(_plus_2, _minus);\n                _editPositions.add(_textRegion);\n              } else {\n                String _feature_1 = assignment.getFeature();\n                it.setProposal(_feature_1);\n                ArrayList<TextRegion> _editPositions_1 = it.getEditPositions();\n                int _offset_1 = context.getOffset();\n                String _proposal_1 = it.getProposal();\n                int _length_1 = _proposal_1.length();\n                TextRegion _textRegion_1 = new TextRegion(_offset_1, _length_1);\n                _editPositions_1.add(_textRegion_1);\n              }\n              String _name_1 = rule.getName();\n              it.setDescription(_name_1);\n            }\n          };\n          final ContentAssistEntry entry = ObjectExtensions.<ContentAssistEntry>operator_doubleArrow(_contentAssistEntry, _function);\n          int _defaultPriority = this.proposalPriorities.getDefaultPriority(entry);\n          acceptor.accept(entry, _defaultPriority);\n        }\n      }\n    }\n  }","id":55892,"modified_method":"protected void _createProposals(final Assignment assignment, final ContentAssistContext context, final IIdeContentProposalAcceptor acceptor) {\n    final AbstractElement terminal = assignment.getTerminal();\n    if ((terminal instanceof CrossReference)) {\n      this.createProposals(terminal, context, acceptor);\n    } else {\n      if ((terminal instanceof RuleCall)) {\n        final AbstractRule rule = ((RuleCall)terminal).getRule();\n        boolean _and = false;\n        if (!(rule instanceof TerminalRule)) {\n          _and = false;\n        } else {\n          String _prefix = context.getPrefix();\n          boolean _isEmpty = _prefix.isEmpty();\n          _and = _isEmpty;\n        }\n        if (_and) {\n          ContentAssistEntry _contentAssistEntry = new ContentAssistEntry();\n          final Procedure1<ContentAssistEntry> _function = new Procedure1<ContentAssistEntry>() {\n            @Override\n            public void apply(final ContentAssistEntry it) {\n              String _prefix = context.getPrefix();\n              it.setPrefix(_prefix);\n              String _name = rule.getName();\n              boolean _equals = Objects.equal(_name, \"STRING\");\n              if (_equals) {\n                String _feature = assignment.getFeature();\n                String _plus = (\"\\\"\" + _feature);\n                String _plus_1 = (_plus + \"\\\"\");\n                it.setProposal(_plus_1);\n                ArrayList<TextRegion> _editPositions = it.getEditPositions();\n                int _offset = context.getOffset();\n                int _plus_2 = (_offset + 1);\n                String _proposal = it.getProposal();\n                int _length = _proposal.length();\n                int _minus = (_length - 2);\n                TextRegion _textRegion = new TextRegion(_plus_2, _minus);\n                _editPositions.add(_textRegion);\n              } else {\n                String _feature_1 = assignment.getFeature();\n                it.setProposal(_feature_1);\n                ArrayList<TextRegion> _editPositions_1 = it.getEditPositions();\n                int _offset_1 = context.getOffset();\n                String _proposal_1 = it.getProposal();\n                int _length_1 = _proposal_1.length();\n                TextRegion _textRegion_1 = new TextRegion(_offset_1, _length_1);\n                _editPositions_1.add(_textRegion_1);\n              }\n              String _name_1 = rule.getName();\n              it.setDescription(_name_1);\n            }\n          };\n          final ContentAssistEntry entry = ObjectExtensions.<ContentAssistEntry>operator_doubleArrow(_contentAssistEntry, _function);\n          int _defaultPriority = this.proposalPriorities.getDefaultPriority(entry);\n          acceptor.accept(entry, _defaultPriority);\n        }\n      }\n    }\n  }","commit_id":"055e4ee9ff32628908eda03d9cccba7b872b0f8b","url":"https://github.com/eclipse/xtext"},{"original_method":"protected void _createProposals(final CrossReference reference, final ContentAssistContext context, final IIdeContentProposalAcceptor acceptor) {\n    final EClassifier type = this._currentTypeFinder.findCurrentTypeAfter(reference);\n    if ((type instanceof EClass)) {\n      final EReference ereference = GrammarUtil.getReference(reference, ((EClass)type));\n      if ((ereference != null)) {\n        EObject _currentModel = context.getCurrentModel();\n        final IScope scope = this.scopeProvider.getScope(_currentModel, ereference);\n        Predicate<IEObjectDescription> _alwaysTrue = Predicates.<IEObjectDescription>alwaysTrue();\n        this.crossrefProposalProvider.lookupCrossReference(scope, reference, context, acceptor, _alwaysTrue);\n      }\n    }\n  }","id":55893,"modified_method":"protected void _createProposals(final CrossReference reference, final ContentAssistContext context, final IIdeContentProposalAcceptor acceptor) {\n    final EClassifier type = this._currentTypeFinder.findCurrentTypeAfter(reference);\n    if ((type instanceof EClass)) {\n      final EReference ereference = GrammarUtil.getReference(reference, ((EClass)type));\n      if ((ereference != null)) {\n        EObject _currentModel = context.getCurrentModel();\n        final IScope scope = this.scopeProvider.getScope(_currentModel, ereference);\n        Predicate<IEObjectDescription> _crossrefFilter = this.getCrossrefFilter(reference, context);\n        this.crossrefProposalProvider.lookupCrossReference(scope, reference, context, acceptor, _crossrefFilter);\n      }\n    }\n  }","commit_id":"055e4ee9ff32628908eda03d9cccba7b872b0f8b","url":"https://github.com/eclipse/xtext"},{"original_method":"protected ContentAssistEntry createProposal(final IEObjectDescription candidate, final CrossReference crossRef, final ContentAssistContext context) {\n    ContentAssistEntry _contentAssistEntry = new ContentAssistEntry();\n    final Procedure1<ContentAssistEntry> _function = new Procedure1<ContentAssistEntry>() {\n      @Override\n      public void apply(final ContentAssistEntry it) {\n        String _prefix = context.getPrefix();\n        it.setPrefix(_prefix);\n        QualifiedName _name = candidate.getName();\n        String _string = IdeCrossrefProposalProvider.this.qualifiedNameConverter.toString(_name);\n        it.setProposal(_string);\n        EClass _eClass = candidate.getEClass();\n        String _name_1 = null;\n        if (_eClass!=null) {\n          _name_1=_eClass.getName();\n        }\n        it.setDescription(_name_1);\n      }\n    };\n    return ObjectExtensions.<ContentAssistEntry>operator_doubleArrow(_contentAssistEntry, _function);\n  }","id":55894,"modified_method":"protected ContentAssistEntry createProposal(final IEObjectDescription candidate, final CrossReference crossRef, final ContentAssistContext context) {\n    ContentAssistEntry _contentAssistEntry = new ContentAssistEntry();\n    final Procedure1<ContentAssistEntry> _function = new Procedure1<ContentAssistEntry>() {\n      @Override\n      public void apply(final ContentAssistEntry it) {\n        it.setSource(candidate);\n        String _prefix = context.getPrefix();\n        it.setPrefix(_prefix);\n        QualifiedName _name = candidate.getName();\n        String _string = IdeCrossrefProposalProvider.this.qualifiedNameConverter.toString(_name);\n        it.setProposal(_string);\n        EClass _eClass = candidate.getEClass();\n        String _name_1 = null;\n        if (_eClass!=null) {\n          _name_1=_eClass.getName();\n        }\n        it.setDescription(_name_1);\n      }\n    };\n    return ObjectExtensions.<ContentAssistEntry>operator_doubleArrow(_contentAssistEntry, _function);\n  }","commit_id":"055e4ee9ff32628908eda03d9cccba7b872b0f8b","url":"https://github.com/eclipse/xtext"},{"original_method":"public void lookupCrossReference(final IScope scope, final CrossReference crossReference, final ContentAssistContext context, final IIdeContentProposalAcceptor acceptor, final Predicate<IEObjectDescription> filter) {\n    try {\n      Iterable<IEObjectDescription> _queryScope = this.queryScope(scope, crossReference, context);\n      for (final IEObjectDescription candidate : _queryScope) {\n        boolean _apply = filter.apply(candidate);\n        if (_apply) {\n          final ContentAssistEntry entry = this.createProposal(candidate, crossReference, context);\n          int _crossRefPriority = this.proposalPriorities.getCrossRefPriority(candidate, entry);\n          acceptor.accept(entry, _crossRefPriority);\n        }\n      }\n    } catch (final Throwable _t) {\n      if (_t instanceof UnsupportedOperationException) {\n        final UnsupportedOperationException uoe = (UnsupportedOperationException)_t;\n        IdeCrossrefProposalProvider.LOG.error(\"Failed to create content assist proposals for cross-reference.\", uoe);\n      } else {\n        throw Exceptions.sneakyThrow(_t);\n      }\n    }\n  }","id":55895,"modified_method":"public void lookupCrossReference(final IScope scope, final CrossReference crossReference, final ContentAssistContext context, final IIdeContentProposalAcceptor acceptor, final Predicate<IEObjectDescription> filter) {\n    try {\n      Iterable<IEObjectDescription> _queryScope = this.queryScope(scope, crossReference, context);\n      for (final IEObjectDescription candidate : _queryScope) {\n        {\n          boolean _canAcceptMoreProposals = acceptor.canAcceptMoreProposals();\n          boolean _not = (!_canAcceptMoreProposals);\n          if (_not) {\n            return;\n          }\n          boolean _apply = filter.apply(candidate);\n          if (_apply) {\n            final ContentAssistEntry entry = this.createProposal(candidate, crossReference, context);\n            int _crossRefPriority = this.proposalPriorities.getCrossRefPriority(candidate, entry);\n            acceptor.accept(entry, _crossRefPriority);\n          }\n        }\n      }\n    } catch (final Throwable _t) {\n      if (_t instanceof UnsupportedOperationException) {\n        final UnsupportedOperationException uoe = (UnsupportedOperationException)_t;\n        IdeCrossrefProposalProvider.LOG.error(\"Failed to create content assist proposals for cross-reference.\", uoe);\n      } else {\n        throw Exceptions.sneakyThrow(_t);\n      }\n    }\n  }","commit_id":"055e4ee9ff32628908eda03d9cccba7b872b0f8b","url":"https://github.com/eclipse/xtext"},{"original_method":"@Override\n  protected void _createProposals(final Assignment assignment, final ContentAssistContext context, final IIdeContentProposalAcceptor acceptor) {\n    boolean _matched = false;\n    if (!_matched) {\n      StatemachineGrammarAccess.EventElements _eventAccess = this._statemachineGrammarAccess.getEventAccess();\n      Assignment _signalAssignment_0 = _eventAccess.getSignalAssignment_0();\n      if (Objects.equal(assignment, _signalAssignment_0)) {\n        _matched=true;\n        IScopeProvider _scopeProvider = this.getScopeProvider();\n        EObject _currentModel = context.getCurrentModel();\n        final IScope scope = _scopeProvider.getScope(_currentModel, StatemachinePackage.Literals.EVENT__SIGNAL);\n        Iterable<IEObjectDescription> _allElements = scope.getAllElements();\n        final Function1<IEObjectDescription, Boolean> _function = new Function1<IEObjectDescription, Boolean>() {\n          @Override\n          public Boolean apply(final IEObjectDescription it) {\n            EClass _eClass = it.getEClass();\n            return Boolean.valueOf(Objects.equal(_eClass, StatemachinePackage.Literals.INPUT_SIGNAL));\n          }\n        };\n        Iterable<IEObjectDescription> _filter = IterableExtensions.<IEObjectDescription>filter(_allElements, _function);\n        for (final IEObjectDescription description : _filter) {\n          {\n            ContentAssistEntry _contentAssistEntry = new ContentAssistEntry();\n            final Procedure1<ContentAssistEntry> _function_1 = new Procedure1<ContentAssistEntry>() {\n              @Override\n              public void apply(final ContentAssistEntry it) {\n                String _prefix = context.getPrefix();\n                it.setPrefix(_prefix);\n                QualifiedName _name = description.getName();\n                String _string = _name.toString();\n                it.setProposal(_string);\n                it.setDescription(\"input signal\");\n              }\n            };\n            final ContentAssistEntry entry = ObjectExtensions.<ContentAssistEntry>operator_doubleArrow(_contentAssistEntry, _function_1);\n            IdeContentProposalPriorities _proposalPriorities = this.getProposalPriorities();\n            int _crossRefPriority = _proposalPriorities.getCrossRefPriority(description, entry);\n            acceptor.accept(entry, _crossRefPriority);\n          }\n        }\n      }\n    }\n    if (!_matched) {\n      StatemachineGrammarAccess.CommandElements _commandAccess = this._statemachineGrammarAccess.getCommandAccess();\n      Assignment _signalAssignment_1 = _commandAccess.getSignalAssignment_1();\n      if (Objects.equal(assignment, _signalAssignment_1)) {\n        _matched=true;\n        IScopeProvider _scopeProvider_1 = this.getScopeProvider();\n        EObject _currentModel_1 = context.getCurrentModel();\n        final IScope scope_1 = _scopeProvider_1.getScope(_currentModel_1, StatemachinePackage.Literals.COMMAND__SIGNAL);\n        Iterable<IEObjectDescription> _allElements_1 = scope_1.getAllElements();\n        final Function1<IEObjectDescription, Boolean> _function_1 = new Function1<IEObjectDescription, Boolean>() {\n          @Override\n          public Boolean apply(final IEObjectDescription it) {\n            EClass _eClass = it.getEClass();\n            return Boolean.valueOf(Objects.equal(_eClass, StatemachinePackage.Literals.OUTPUT_SIGNAL));\n          }\n        };\n        Iterable<IEObjectDescription> _filter_1 = IterableExtensions.<IEObjectDescription>filter(_allElements_1, _function_1);\n        for (final IEObjectDescription description_1 : _filter_1) {\n          {\n            ContentAssistEntry _contentAssistEntry = new ContentAssistEntry();\n            final Procedure1<ContentAssistEntry> _function_2 = new Procedure1<ContentAssistEntry>() {\n              @Override\n              public void apply(final ContentAssistEntry it) {\n                String _prefix = context.getPrefix();\n                it.setPrefix(_prefix);\n                QualifiedName _name = description_1.getName();\n                String _string = _name.toString();\n                it.setProposal(_string);\n                it.setDescription(\"output signal\");\n              }\n            };\n            final ContentAssistEntry entry = ObjectExtensions.<ContentAssistEntry>operator_doubleArrow(_contentAssistEntry, _function_2);\n            IdeContentProposalPriorities _proposalPriorities = this.getProposalPriorities();\n            int _crossRefPriority = _proposalPriorities.getCrossRefPriority(description_1, entry);\n            acceptor.accept(entry, _crossRefPriority);\n          }\n        }\n      }\n    }\n    if (!_matched) {\n      StatemachineGrammarAccess.EventElements _eventAccess_1 = this._statemachineGrammarAccess.getEventAccess();\n      Assignment _valueAssignment_2 = _eventAccess_1.getValueAssignment_2();\n      if (Objects.equal(assignment, _valueAssignment_2)) {\n        _matched=true;\n      }\n      if (!_matched) {\n        StatemachineGrammarAccess.CommandElements _commandAccess_1 = this._statemachineGrammarAccess.getCommandAccess();\n        Assignment _newValueAssignment_3 = _commandAccess_1.getNewValueAssignment_3();\n        if (Objects.equal(assignment, _newValueAssignment_3)) {\n          _matched=true;\n        }\n      }\n      if (_matched) {\n      }\n    }\n    if (!_matched) {\n      super._createProposals(assignment, context, acceptor);\n    }\n  }","id":55896,"modified_method":"@Override\n  protected void _createProposals(final Assignment assignment, final ContentAssistContext context, final IIdeContentProposalAcceptor acceptor) {\n    boolean _matched = false;\n    if (!_matched) {\n      StatemachineGrammarAccess.EventElements _eventAccess = this._statemachineGrammarAccess.getEventAccess();\n      Assignment _signalAssignment_0 = _eventAccess.getSignalAssignment_0();\n      if (Objects.equal(assignment, _signalAssignment_0)) {\n        _matched=true;\n        IScopeProvider _scopeProvider = this.getScopeProvider();\n        EObject _currentModel = context.getCurrentModel();\n        final IScope scope = _scopeProvider.getScope(_currentModel, StatemachinePackage.Literals.EVENT__SIGNAL);\n        Iterable<IEObjectDescription> _allElements = scope.getAllElements();\n        final Function1<IEObjectDescription, Boolean> _function = new Function1<IEObjectDescription, Boolean>() {\n          @Override\n          public Boolean apply(final IEObjectDescription it) {\n            EClass _eClass = it.getEClass();\n            return Boolean.valueOf(Objects.equal(_eClass, StatemachinePackage.Literals.INPUT_SIGNAL));\n          }\n        };\n        Iterable<IEObjectDescription> _filter = IterableExtensions.<IEObjectDescription>filter(_allElements, _function);\n        for (final IEObjectDescription description : _filter) {\n          {\n            ContentAssistEntry _contentAssistEntry = new ContentAssistEntry();\n            final Procedure1<ContentAssistEntry> _function_1 = new Procedure1<ContentAssistEntry>() {\n              @Override\n              public void apply(final ContentAssistEntry it) {\n                it.setSource(description);\n                String _prefix = context.getPrefix();\n                it.setPrefix(_prefix);\n                QualifiedName _name = description.getName();\n                String _string = _name.toString();\n                it.setProposal(_string);\n                it.setDescription(\"input signal\");\n              }\n            };\n            final ContentAssistEntry entry = ObjectExtensions.<ContentAssistEntry>operator_doubleArrow(_contentAssistEntry, _function_1);\n            IdeContentProposalPriorities _proposalPriorities = this.getProposalPriorities();\n            int _crossRefPriority = _proposalPriorities.getCrossRefPriority(description, entry);\n            acceptor.accept(entry, _crossRefPriority);\n          }\n        }\n      }\n    }\n    if (!_matched) {\n      StatemachineGrammarAccess.CommandElements _commandAccess = this._statemachineGrammarAccess.getCommandAccess();\n      Assignment _signalAssignment_1 = _commandAccess.getSignalAssignment_1();\n      if (Objects.equal(assignment, _signalAssignment_1)) {\n        _matched=true;\n        IScopeProvider _scopeProvider_1 = this.getScopeProvider();\n        EObject _currentModel_1 = context.getCurrentModel();\n        final IScope scope_1 = _scopeProvider_1.getScope(_currentModel_1, StatemachinePackage.Literals.COMMAND__SIGNAL);\n        Iterable<IEObjectDescription> _allElements_1 = scope_1.getAllElements();\n        final Function1<IEObjectDescription, Boolean> _function_1 = new Function1<IEObjectDescription, Boolean>() {\n          @Override\n          public Boolean apply(final IEObjectDescription it) {\n            EClass _eClass = it.getEClass();\n            return Boolean.valueOf(Objects.equal(_eClass, StatemachinePackage.Literals.OUTPUT_SIGNAL));\n          }\n        };\n        Iterable<IEObjectDescription> _filter_1 = IterableExtensions.<IEObjectDescription>filter(_allElements_1, _function_1);\n        for (final IEObjectDescription description_1 : _filter_1) {\n          {\n            ContentAssistEntry _contentAssistEntry = new ContentAssistEntry();\n            final Procedure1<ContentAssistEntry> _function_2 = new Procedure1<ContentAssistEntry>() {\n              @Override\n              public void apply(final ContentAssistEntry it) {\n                it.setSource(description_1);\n                String _prefix = context.getPrefix();\n                it.setPrefix(_prefix);\n                QualifiedName _name = description_1.getName();\n                String _string = _name.toString();\n                it.setProposal(_string);\n                it.setDescription(\"output signal\");\n              }\n            };\n            final ContentAssistEntry entry = ObjectExtensions.<ContentAssistEntry>operator_doubleArrow(_contentAssistEntry, _function_2);\n            IdeContentProposalPriorities _proposalPriorities = this.getProposalPriorities();\n            int _crossRefPriority = _proposalPriorities.getCrossRefPriority(description_1, entry);\n            acceptor.accept(entry, _crossRefPriority);\n          }\n        }\n      }\n    }\n    if (!_matched) {\n      StatemachineGrammarAccess.EventElements _eventAccess_1 = this._statemachineGrammarAccess.getEventAccess();\n      Assignment _valueAssignment_2 = _eventAccess_1.getValueAssignment_2();\n      if (Objects.equal(assignment, _valueAssignment_2)) {\n        _matched=true;\n      }\n      if (!_matched) {\n        StatemachineGrammarAccess.CommandElements _commandAccess_1 = this._statemachineGrammarAccess.getCommandAccess();\n        Assignment _newValueAssignment_3 = _commandAccess_1.getNewValueAssignment_3();\n        if (Objects.equal(assignment, _newValueAssignment_3)) {\n          _matched=true;\n        }\n      }\n      if (_matched) {\n      }\n    }\n    if (!_matched) {\n      super._createProposals(assignment, context, acceptor);\n    }\n  }","commit_id":"055e4ee9ff32628908eda03d9cccba7b872b0f8b","url":"https://github.com/eclipse/xtext"},{"original_method":"@Override\n  protected void _createProposals(final Assignment assignment, final ContentAssistContext context, final IIdeContentProposalAcceptor acceptor) {\n    boolean _matched = false;\n    if (!_matched) {\n      StatemachineGrammarAccess.EventElements _eventAccess = this._statemachineGrammarAccess.getEventAccess();\n      Assignment _signalAssignment_0 = _eventAccess.getSignalAssignment_0();\n      if (Objects.equal(assignment, _signalAssignment_0)) {\n        _matched=true;\n        IScopeProvider _scopeProvider = this.getScopeProvider();\n        EObject _currentModel = context.getCurrentModel();\n        final IScope scope = _scopeProvider.getScope(_currentModel, StatemachinePackage.Literals.EVENT__SIGNAL);\n        Iterable<IEObjectDescription> _allElements = scope.getAllElements();\n        final Function1<IEObjectDescription, Boolean> _function = new Function1<IEObjectDescription, Boolean>() {\n          @Override\n          public Boolean apply(final IEObjectDescription it) {\n            EClass _eClass = it.getEClass();\n            return Boolean.valueOf(Objects.equal(_eClass, StatemachinePackage.Literals.INPUT_SIGNAL));\n          }\n        };\n        Iterable<IEObjectDescription> _filter = IterableExtensions.<IEObjectDescription>filter(_allElements, _function);\n        for (final IEObjectDescription description : _filter) {\n          {\n            ContentAssistEntry _contentAssistEntry = new ContentAssistEntry();\n            final Procedure1<ContentAssistEntry> _function_1 = new Procedure1<ContentAssistEntry>() {\n              @Override\n              public void apply(final ContentAssistEntry it) {\n                String _prefix = context.getPrefix();\n                it.setPrefix(_prefix);\n                QualifiedName _name = description.getName();\n                String _string = _name.toString();\n                it.setProposal(_string);\n                it.setDescription(\"input signal\");\n              }\n            };\n            final ContentAssistEntry entry = ObjectExtensions.<ContentAssistEntry>operator_doubleArrow(_contentAssistEntry, _function_1);\n            IdeContentProposalPriorities _proposalPriorities = this.getProposalPriorities();\n            int _crossRefPriority = _proposalPriorities.getCrossRefPriority(description, entry);\n            acceptor.accept(entry, _crossRefPriority);\n          }\n        }\n      }\n    }\n    if (!_matched) {\n      StatemachineGrammarAccess.CommandElements _commandAccess = this._statemachineGrammarAccess.getCommandAccess();\n      Assignment _signalAssignment_1 = _commandAccess.getSignalAssignment_1();\n      if (Objects.equal(assignment, _signalAssignment_1)) {\n        _matched=true;\n        IScopeProvider _scopeProvider_1 = this.getScopeProvider();\n        EObject _currentModel_1 = context.getCurrentModel();\n        final IScope scope_1 = _scopeProvider_1.getScope(_currentModel_1, StatemachinePackage.Literals.COMMAND__SIGNAL);\n        Iterable<IEObjectDescription> _allElements_1 = scope_1.getAllElements();\n        final Function1<IEObjectDescription, Boolean> _function_1 = new Function1<IEObjectDescription, Boolean>() {\n          @Override\n          public Boolean apply(final IEObjectDescription it) {\n            EClass _eClass = it.getEClass();\n            return Boolean.valueOf(Objects.equal(_eClass, StatemachinePackage.Literals.OUTPUT_SIGNAL));\n          }\n        };\n        Iterable<IEObjectDescription> _filter_1 = IterableExtensions.<IEObjectDescription>filter(_allElements_1, _function_1);\n        for (final IEObjectDescription description_1 : _filter_1) {\n          {\n            ContentAssistEntry _contentAssistEntry = new ContentAssistEntry();\n            final Procedure1<ContentAssistEntry> _function_2 = new Procedure1<ContentAssistEntry>() {\n              @Override\n              public void apply(final ContentAssistEntry it) {\n                String _prefix = context.getPrefix();\n                it.setPrefix(_prefix);\n                QualifiedName _name = description_1.getName();\n                String _string = _name.toString();\n                it.setProposal(_string);\n                it.setDescription(\"output signal\");\n              }\n            };\n            final ContentAssistEntry entry = ObjectExtensions.<ContentAssistEntry>operator_doubleArrow(_contentAssistEntry, _function_2);\n            IdeContentProposalPriorities _proposalPriorities = this.getProposalPriorities();\n            int _crossRefPriority = _proposalPriorities.getCrossRefPriority(description_1, entry);\n            acceptor.accept(entry, _crossRefPriority);\n          }\n        }\n      }\n    }\n    if (!_matched) {\n      StatemachineGrammarAccess.EventElements _eventAccess_1 = this._statemachineGrammarAccess.getEventAccess();\n      Assignment _valueAssignment_2 = _eventAccess_1.getValueAssignment_2();\n      if (Objects.equal(assignment, _valueAssignment_2)) {\n        _matched=true;\n      }\n      if (!_matched) {\n        StatemachineGrammarAccess.CommandElements _commandAccess_1 = this._statemachineGrammarAccess.getCommandAccess();\n        Assignment _newValueAssignment_3 = _commandAccess_1.getNewValueAssignment_3();\n        if (Objects.equal(assignment, _newValueAssignment_3)) {\n          _matched=true;\n        }\n      }\n      if (_matched) {\n      }\n    }\n    if (!_matched) {\n      super._createProposals(assignment, context, acceptor);\n    }\n  }","id":55897,"modified_method":"@Override\n  protected void _createProposals(final Assignment assignment, final ContentAssistContext context, final IIdeContentProposalAcceptor acceptor) {\n    boolean _matched = false;\n    if (!_matched) {\n      StatemachineGrammarAccess.EventElements _eventAccess = this._statemachineGrammarAccess.getEventAccess();\n      Assignment _signalAssignment_0 = _eventAccess.getSignalAssignment_0();\n      if (Objects.equal(assignment, _signalAssignment_0)) {\n        _matched=true;\n        IScopeProvider _scopeProvider = this.getScopeProvider();\n        EObject _currentModel = context.getCurrentModel();\n        final IScope scope = _scopeProvider.getScope(_currentModel, StatemachinePackage.Literals.EVENT__SIGNAL);\n        Iterable<IEObjectDescription> _allElements = scope.getAllElements();\n        final Function1<IEObjectDescription, Boolean> _function = new Function1<IEObjectDescription, Boolean>() {\n          @Override\n          public Boolean apply(final IEObjectDescription it) {\n            EClass _eClass = it.getEClass();\n            return Boolean.valueOf(Objects.equal(_eClass, StatemachinePackage.Literals.INPUT_SIGNAL));\n          }\n        };\n        Iterable<IEObjectDescription> _filter = IterableExtensions.<IEObjectDescription>filter(_allElements, _function);\n        for (final IEObjectDescription description : _filter) {\n          {\n            ContentAssistEntry _contentAssistEntry = new ContentAssistEntry();\n            final Procedure1<ContentAssistEntry> _function_1 = new Procedure1<ContentAssistEntry>() {\n              @Override\n              public void apply(final ContentAssistEntry it) {\n                it.setSource(description);\n                String _prefix = context.getPrefix();\n                it.setPrefix(_prefix);\n                QualifiedName _name = description.getName();\n                String _string = _name.toString();\n                it.setProposal(_string);\n                it.setDescription(\"input signal\");\n              }\n            };\n            final ContentAssistEntry entry = ObjectExtensions.<ContentAssistEntry>operator_doubleArrow(_contentAssistEntry, _function_1);\n            IdeContentProposalPriorities _proposalPriorities = this.getProposalPriorities();\n            int _crossRefPriority = _proposalPriorities.getCrossRefPriority(description, entry);\n            acceptor.accept(entry, _crossRefPriority);\n          }\n        }\n      }\n    }\n    if (!_matched) {\n      StatemachineGrammarAccess.CommandElements _commandAccess = this._statemachineGrammarAccess.getCommandAccess();\n      Assignment _signalAssignment_1 = _commandAccess.getSignalAssignment_1();\n      if (Objects.equal(assignment, _signalAssignment_1)) {\n        _matched=true;\n        IScopeProvider _scopeProvider_1 = this.getScopeProvider();\n        EObject _currentModel_1 = context.getCurrentModel();\n        final IScope scope_1 = _scopeProvider_1.getScope(_currentModel_1, StatemachinePackage.Literals.COMMAND__SIGNAL);\n        Iterable<IEObjectDescription> _allElements_1 = scope_1.getAllElements();\n        final Function1<IEObjectDescription, Boolean> _function_1 = new Function1<IEObjectDescription, Boolean>() {\n          @Override\n          public Boolean apply(final IEObjectDescription it) {\n            EClass _eClass = it.getEClass();\n            return Boolean.valueOf(Objects.equal(_eClass, StatemachinePackage.Literals.OUTPUT_SIGNAL));\n          }\n        };\n        Iterable<IEObjectDescription> _filter_1 = IterableExtensions.<IEObjectDescription>filter(_allElements_1, _function_1);\n        for (final IEObjectDescription description_1 : _filter_1) {\n          {\n            ContentAssistEntry _contentAssistEntry = new ContentAssistEntry();\n            final Procedure1<ContentAssistEntry> _function_2 = new Procedure1<ContentAssistEntry>() {\n              @Override\n              public void apply(final ContentAssistEntry it) {\n                it.setSource(description_1);\n                String _prefix = context.getPrefix();\n                it.setPrefix(_prefix);\n                QualifiedName _name = description_1.getName();\n                String _string = _name.toString();\n                it.setProposal(_string);\n                it.setDescription(\"output signal\");\n              }\n            };\n            final ContentAssistEntry entry = ObjectExtensions.<ContentAssistEntry>operator_doubleArrow(_contentAssistEntry, _function_2);\n            IdeContentProposalPriorities _proposalPriorities = this.getProposalPriorities();\n            int _crossRefPriority = _proposalPriorities.getCrossRefPriority(description_1, entry);\n            acceptor.accept(entry, _crossRefPriority);\n          }\n        }\n      }\n    }\n    if (!_matched) {\n      StatemachineGrammarAccess.EventElements _eventAccess_1 = this._statemachineGrammarAccess.getEventAccess();\n      Assignment _valueAssignment_2 = _eventAccess_1.getValueAssignment_2();\n      if (Objects.equal(assignment, _valueAssignment_2)) {\n        _matched=true;\n      }\n      if (!_matched) {\n        StatemachineGrammarAccess.CommandElements _commandAccess_1 = this._statemachineGrammarAccess.getCommandAccess();\n        Assignment _newValueAssignment_3 = _commandAccess_1.getNewValueAssignment_3();\n        if (Objects.equal(assignment, _newValueAssignment_3)) {\n          _matched=true;\n        }\n      }\n      if (_matched) {\n      }\n    }\n    if (!_matched) {\n      super._createProposals(assignment, context, acceptor);\n    }\n  }","commit_id":"055e4ee9ff32628908eda03d9cccba7b872b0f8b","url":"https://github.com/eclipse/xtext"},{"original_method":"protected XtextServiceDispatcher.ServiceDescriptor getContentAssistService(final IRequestData request, final ISessionStore sessionStore) throws InvalidRequestException {\n    XtextServiceDispatcher.ServiceDescriptor _xblockexpression = null;\n    {\n      Optional<Integer> _of = Optional.<Integer>of(Integer.valueOf(0));\n      final int offset = this.getInt(request, \"caretOffset\", _of);\n      final XtextWebDocumentAccess document = this.getDocumentAccess(request, sessionStore);\n      Optional<Integer> _of_1 = Optional.<Integer>of(Integer.valueOf(ContentAssistService.DEFAULT_PROPOSALS_LIMIT));\n      final int proposalsLimit = this.getInt(request, \"proposalsLimit\", _of_1);\n      if ((proposalsLimit <= 0)) {\n        throw new InvalidRequestException.InvalidParametersException(\"The parameter \\'proposalsLimit\\' must contain a positive integer.\");\n      }\n      Optional<Integer> _of_2 = Optional.<Integer>of(Integer.valueOf(offset));\n      final int selectionStart = this.getInt(request, \"selectionStart\", _of_2);\n      Optional<Integer> _of_3 = Optional.<Integer>of(Integer.valueOf(selectionStart));\n      final int selectionEnd = this.getInt(request, \"selectionEnd\", _of_3);\n      int _max = Math.max((selectionEnd - selectionStart), 0);\n      final TextRegion selection = new TextRegion(selectionStart, _max);\n      final String deltaText = request.getParameter(\"deltaText\");\n      XtextServiceDispatcher.ServiceDescriptor _xifexpression = null;\n      if ((deltaText == null)) {\n        XtextServiceDispatcher.ServiceDescriptor _serviceDescriptor = new XtextServiceDispatcher.ServiceDescriptor();\n        final Procedure1<XtextServiceDispatcher.ServiceDescriptor> _function = new Procedure1<XtextServiceDispatcher.ServiceDescriptor>() {\n          @Override\n          public void apply(final XtextServiceDispatcher.ServiceDescriptor it) {\n            final Function0<IServiceResult> _function = new Function0<IServiceResult>() {\n              @Override\n              public IServiceResult apply() {\n                IServiceResult _xtrycatchfinallyexpression = null;\n                try {\n                  _xtrycatchfinallyexpression = XtextServiceDispatcher.this.contentAssistService.createProposals(document, selection, offset, proposalsLimit);\n                } catch (final Throwable _t) {\n                  if (_t instanceof Throwable) {\n                    final Throwable throwable = (Throwable)_t;\n                    _xtrycatchfinallyexpression = XtextServiceDispatcher.this.handleError(it, throwable);\n                  } else {\n                    throw Exceptions.sneakyThrow(_t);\n                  }\n                }\n                return _xtrycatchfinallyexpression;\n              }\n            };\n            it.service = _function;\n            Set<String> _parameterKeys = request.getParameterKeys();\n            boolean _contains = _parameterKeys.contains(\"fullText\");\n            it.hasTextInput = _contains;\n          }\n        };\n        _xifexpression = ObjectExtensions.<XtextServiceDispatcher.ServiceDescriptor>operator_doubleArrow(_serviceDescriptor, _function);\n      } else {\n        XtextServiceDispatcher.ServiceDescriptor _xblockexpression_1 = null;\n        {\n          Set<String> _parameterKeys = request.getParameterKeys();\n          boolean _contains = _parameterKeys.contains(\"fullText\");\n          if (_contains) {\n            throw new InvalidRequestException.InvalidParametersException(\"The parameters \\'deltaText\\' and \\'fullText\\' cannot be set in the same request.\");\n          }\n          Optional<Integer> _absent = Optional.<Integer>absent();\n          final int deltaOffset = this.getInt(request, \"deltaOffset\", _absent);\n          if ((deltaOffset < 0)) {\n            throw new InvalidRequestException.InvalidParametersException(\"The parameter \\'deltaOffset\\' must not be negative.\");\n          }\n          Optional<Integer> _absent_1 = Optional.<Integer>absent();\n          final int deltaReplaceLength = this.getInt(request, \"deltaReplaceLength\", _absent_1);\n          if ((deltaReplaceLength < 0)) {\n            throw new InvalidRequestException.InvalidParametersException(\"The parameter \\'deltaReplaceLength\\' must not be negative.\");\n          }\n          XtextServiceDispatcher.ServiceDescriptor _serviceDescriptor_1 = new XtextServiceDispatcher.ServiceDescriptor();\n          final Procedure1<XtextServiceDispatcher.ServiceDescriptor> _function_1 = new Procedure1<XtextServiceDispatcher.ServiceDescriptor>() {\n            @Override\n            public void apply(final XtextServiceDispatcher.ServiceDescriptor it) {\n              final Function0<IServiceResult> _function = new Function0<IServiceResult>() {\n                @Override\n                public IServiceResult apply() {\n                  IServiceResult _xtrycatchfinallyexpression = null;\n                  try {\n                    _xtrycatchfinallyexpression = XtextServiceDispatcher.this.contentAssistService.createProposalsWithUpdate(document, deltaText, deltaOffset, deltaReplaceLength, selection, offset, proposalsLimit);\n                  } catch (final Throwable _t) {\n                    if (_t instanceof Throwable) {\n                      final Throwable throwable = (Throwable)_t;\n                      _xtrycatchfinallyexpression = XtextServiceDispatcher.this.handleError(it, throwable);\n                    } else {\n                      throw Exceptions.sneakyThrow(_t);\n                    }\n                  }\n                  return _xtrycatchfinallyexpression;\n                }\n              };\n              it.service = _function;\n              it.hasSideEffects = true;\n              it.hasTextInput = true;\n            }\n          };\n          _xblockexpression_1 = ObjectExtensions.<XtextServiceDispatcher.ServiceDescriptor>operator_doubleArrow(_serviceDescriptor_1, _function_1);\n        }\n        _xifexpression = _xblockexpression_1;\n      }\n      _xblockexpression = _xifexpression;\n    }\n    return _xblockexpression;\n  }","id":55898,"modified_method":"protected XtextServiceDispatcher.ServiceDescriptor getContentAssistService(final IRequestData request, final ISessionStore sessionStore) throws InvalidRequestException {\n    XtextServiceDispatcher.ServiceDescriptor _xblockexpression = null;\n    {\n      Optional<Integer> _of = Optional.<Integer>of(Integer.valueOf(0));\n      final int offset = this.getInt(request, \"caretOffset\", _of);\n      if ((offset < 0)) {\n        throw new InvalidRequestException.InvalidParametersException(\"The parameter \\'offset\\' must not be negative.\");\n      }\n      final XtextWebDocumentAccess document = this.getDocumentAccess(request, sessionStore);\n      Optional<Integer> _of_1 = Optional.<Integer>of(Integer.valueOf(ContentAssistService.DEFAULT_PROPOSALS_LIMIT));\n      final int proposalsLimit = this.getInt(request, \"proposalsLimit\", _of_1);\n      if ((proposalsLimit <= 0)) {\n        throw new InvalidRequestException.InvalidParametersException(\"The parameter \\'proposalsLimit\\' must contain a positive integer.\");\n      }\n      Optional<Integer> _of_2 = Optional.<Integer>of(Integer.valueOf(offset));\n      final int selectionStart = this.getInt(request, \"selectionStart\", _of_2);\n      Optional<Integer> _of_3 = Optional.<Integer>of(Integer.valueOf(selectionStart));\n      final int selectionEnd = this.getInt(request, \"selectionEnd\", _of_3);\n      int _max = Math.max((selectionEnd - selectionStart), 0);\n      final TextRegion selection = new TextRegion(selectionStart, _max);\n      final String deltaText = request.getParameter(\"deltaText\");\n      XtextServiceDispatcher.ServiceDescriptor _xifexpression = null;\n      if ((deltaText == null)) {\n        XtextServiceDispatcher.ServiceDescriptor _serviceDescriptor = new XtextServiceDispatcher.ServiceDescriptor();\n        final Procedure1<XtextServiceDispatcher.ServiceDescriptor> _function = new Procedure1<XtextServiceDispatcher.ServiceDescriptor>() {\n          @Override\n          public void apply(final XtextServiceDispatcher.ServiceDescriptor it) {\n            final Function0<IServiceResult> _function = new Function0<IServiceResult>() {\n              @Override\n              public IServiceResult apply() {\n                IServiceResult _xtrycatchfinallyexpression = null;\n                try {\n                  _xtrycatchfinallyexpression = XtextServiceDispatcher.this.contentAssistService.createProposals(document, selection, offset, proposalsLimit);\n                } catch (final Throwable _t) {\n                  if (_t instanceof Throwable) {\n                    final Throwable throwable = (Throwable)_t;\n                    _xtrycatchfinallyexpression = XtextServiceDispatcher.this.handleError(it, throwable);\n                  } else {\n                    throw Exceptions.sneakyThrow(_t);\n                  }\n                }\n                return _xtrycatchfinallyexpression;\n              }\n            };\n            it.service = _function;\n            Set<String> _parameterKeys = request.getParameterKeys();\n            boolean _contains = _parameterKeys.contains(\"fullText\");\n            it.hasTextInput = _contains;\n          }\n        };\n        _xifexpression = ObjectExtensions.<XtextServiceDispatcher.ServiceDescriptor>operator_doubleArrow(_serviceDescriptor, _function);\n      } else {\n        XtextServiceDispatcher.ServiceDescriptor _xblockexpression_1 = null;\n        {\n          Set<String> _parameterKeys = request.getParameterKeys();\n          boolean _contains = _parameterKeys.contains(\"fullText\");\n          if (_contains) {\n            throw new InvalidRequestException.InvalidParametersException(\"The parameters \\'deltaText\\' and \\'fullText\\' cannot be set in the same request.\");\n          }\n          Optional<Integer> _absent = Optional.<Integer>absent();\n          final int deltaOffset = this.getInt(request, \"deltaOffset\", _absent);\n          if ((deltaOffset < 0)) {\n            throw new InvalidRequestException.InvalidParametersException(\"The parameter \\'deltaOffset\\' must not be negative.\");\n          }\n          Optional<Integer> _absent_1 = Optional.<Integer>absent();\n          final int deltaReplaceLength = this.getInt(request, \"deltaReplaceLength\", _absent_1);\n          if ((deltaReplaceLength < 0)) {\n            throw new InvalidRequestException.InvalidParametersException(\"The parameter \\'deltaReplaceLength\\' must not be negative.\");\n          }\n          XtextServiceDispatcher.ServiceDescriptor _serviceDescriptor_1 = new XtextServiceDispatcher.ServiceDescriptor();\n          final Procedure1<XtextServiceDispatcher.ServiceDescriptor> _function_1 = new Procedure1<XtextServiceDispatcher.ServiceDescriptor>() {\n            @Override\n            public void apply(final XtextServiceDispatcher.ServiceDescriptor it) {\n              final Function0<IServiceResult> _function = new Function0<IServiceResult>() {\n                @Override\n                public IServiceResult apply() {\n                  IServiceResult _xtrycatchfinallyexpression = null;\n                  try {\n                    _xtrycatchfinallyexpression = XtextServiceDispatcher.this.contentAssistService.createProposalsWithUpdate(document, deltaText, deltaOffset, deltaReplaceLength, selection, offset, proposalsLimit);\n                  } catch (final Throwable _t) {\n                    if (_t instanceof Throwable) {\n                      final Throwable throwable = (Throwable)_t;\n                      _xtrycatchfinallyexpression = XtextServiceDispatcher.this.handleError(it, throwable);\n                    } else {\n                      throw Exceptions.sneakyThrow(_t);\n                    }\n                  }\n                  return _xtrycatchfinallyexpression;\n                }\n              };\n              it.service = _function;\n              it.hasSideEffects = true;\n              it.hasTextInput = true;\n            }\n          };\n          _xblockexpression_1 = ObjectExtensions.<XtextServiceDispatcher.ServiceDescriptor>operator_doubleArrow(_serviceDescriptor_1, _function_1);\n        }\n        _xifexpression = _xblockexpression_1;\n      }\n      _xblockexpression = _xifexpression;\n    }\n    return _xblockexpression;\n  }","commit_id":"055e4ee9ff32628908eda03d9cccba7b872b0f8b","url":"https://github.com/eclipse/xtext"},{"original_method":"protected XtextServiceDispatcher.ServiceDescriptor getHoverService(final IRequestData request, final ISessionStore sessionStore) throws InvalidRequestException {\n    XtextServiceDispatcher.ServiceDescriptor _xblockexpression = null;\n    {\n      final XtextWebDocumentAccess document = this.getDocumentAccess(request, sessionStore);\n      Optional<Integer> _of = Optional.<Integer>of(Integer.valueOf(0));\n      final int offset = this.getInt(request, \"caretOffset\", _of);\n      XtextServiceDispatcher.ServiceDescriptor _serviceDescriptor = new XtextServiceDispatcher.ServiceDescriptor();\n      final Procedure1<XtextServiceDispatcher.ServiceDescriptor> _function = new Procedure1<XtextServiceDispatcher.ServiceDescriptor>() {\n        @Override\n        public void apply(final XtextServiceDispatcher.ServiceDescriptor it) {\n          final Function0<IServiceResult> _function = new Function0<IServiceResult>() {\n            @Override\n            public IServiceResult apply() {\n              IServiceResult _xtrycatchfinallyexpression = null;\n              try {\n                _xtrycatchfinallyexpression = XtextServiceDispatcher.this.hoverService.getHover(document, offset);\n              } catch (final Throwable _t) {\n                if (_t instanceof Throwable) {\n                  final Throwable throwable = (Throwable)_t;\n                  _xtrycatchfinallyexpression = XtextServiceDispatcher.this.handleError(it, throwable);\n                } else {\n                  throw Exceptions.sneakyThrow(_t);\n                }\n              }\n              return _xtrycatchfinallyexpression;\n            }\n          };\n          it.service = _function;\n          Set<String> _parameterKeys = request.getParameterKeys();\n          boolean _contains = _parameterKeys.contains(\"fullText\");\n          it.hasTextInput = _contains;\n        }\n      };\n      _xblockexpression = ObjectExtensions.<XtextServiceDispatcher.ServiceDescriptor>operator_doubleArrow(_serviceDescriptor, _function);\n    }\n    return _xblockexpression;\n  }","id":55899,"modified_method":"protected XtextServiceDispatcher.ServiceDescriptor getHoverService(final IRequestData request, final ISessionStore sessionStore) throws InvalidRequestException {\n    XtextServiceDispatcher.ServiceDescriptor _xblockexpression = null;\n    {\n      final XtextWebDocumentAccess document = this.getDocumentAccess(request, sessionStore);\n      Optional<Integer> _of = Optional.<Integer>of(Integer.valueOf(0));\n      final int offset = this.getInt(request, \"caretOffset\", _of);\n      if ((offset < 0)) {\n        throw new InvalidRequestException.InvalidParametersException(\"The parameter \\'offset\\' must not be negative.\");\n      }\n      Optional<Integer> _of_1 = Optional.<Integer>of(Integer.valueOf(offset));\n      final int selectionStart = this.getInt(request, \"selectionStart\", _of_1);\n      Optional<Integer> _of_2 = Optional.<Integer>of(Integer.valueOf(selectionStart));\n      final int selectionEnd = this.getInt(request, \"selectionEnd\", _of_2);\n      int _max = Math.max((selectionEnd - selectionStart), 0);\n      final TextRegion selection = new TextRegion(selectionStart, _max);\n      final String proposal = request.getParameter(\"proposal\");\n      XtextServiceDispatcher.ServiceDescriptor _serviceDescriptor = new XtextServiceDispatcher.ServiceDescriptor();\n      final Procedure1<XtextServiceDispatcher.ServiceDescriptor> _function = new Procedure1<XtextServiceDispatcher.ServiceDescriptor>() {\n        @Override\n        public void apply(final XtextServiceDispatcher.ServiceDescriptor it) {\n          final Function0<IServiceResult> _function = new Function0<IServiceResult>() {\n            @Override\n            public IServiceResult apply() {\n              IServiceResult _xtrycatchfinallyexpression = null;\n              try {\n                HoverResult _xifexpression = null;\n                boolean _isNullOrEmpty = StringExtensions.isNullOrEmpty(proposal);\n                if (_isNullOrEmpty) {\n                  _xifexpression = XtextServiceDispatcher.this.hoverService.getHover(document, offset);\n                } else {\n                  _xifexpression = XtextServiceDispatcher.this.hoverService.getHover(document, proposal, selection, offset);\n                }\n                _xtrycatchfinallyexpression = _xifexpression;\n              } catch (final Throwable _t) {\n                if (_t instanceof Throwable) {\n                  final Throwable throwable = (Throwable)_t;\n                  _xtrycatchfinallyexpression = XtextServiceDispatcher.this.handleError(it, throwable);\n                } else {\n                  throw Exceptions.sneakyThrow(_t);\n                }\n              }\n              return _xtrycatchfinallyexpression;\n            }\n          };\n          it.service = _function;\n          Set<String> _parameterKeys = request.getParameterKeys();\n          boolean _contains = _parameterKeys.contains(\"fullText\");\n          it.hasTextInput = _contains;\n        }\n      };\n      _xblockexpression = ObjectExtensions.<XtextServiceDispatcher.ServiceDescriptor>operator_doubleArrow(_serviceDescriptor, _function);\n    }\n    return _xblockexpression;\n  }","commit_id":"055e4ee9ff32628908eda03d9cccba7b872b0f8b","url":"https://github.com/eclipse/xtext"},{"original_method":"protected XtextServiceDispatcher.ServiceDescriptor getOccurrencesService(final IRequestData request, final ISessionStore sessionStore) throws InvalidRequestException {\n    XtextServiceDispatcher.ServiceDescriptor _xblockexpression = null;\n    {\n      final XtextWebDocumentAccess document = this.getDocumentAccess(request, sessionStore);\n      Optional<Integer> _of = Optional.<Integer>of(Integer.valueOf(0));\n      final int offset = this.getInt(request, \"caretOffset\", _of);\n      XtextServiceDispatcher.ServiceDescriptor _serviceDescriptor = new XtextServiceDispatcher.ServiceDescriptor();\n      final Procedure1<XtextServiceDispatcher.ServiceDescriptor> _function = new Procedure1<XtextServiceDispatcher.ServiceDescriptor>() {\n        @Override\n        public void apply(final XtextServiceDispatcher.ServiceDescriptor it) {\n          final Function0<IServiceResult> _function = new Function0<IServiceResult>() {\n            @Override\n            public IServiceResult apply() {\n              IServiceResult _xtrycatchfinallyexpression = null;\n              try {\n                _xtrycatchfinallyexpression = XtextServiceDispatcher.this.occurrencesService.findOccurrences(document, offset);\n              } catch (final Throwable _t) {\n                if (_t instanceof Throwable) {\n                  final Throwable throwable = (Throwable)_t;\n                  _xtrycatchfinallyexpression = XtextServiceDispatcher.this.handleError(it, throwable);\n                } else {\n                  throw Exceptions.sneakyThrow(_t);\n                }\n              }\n              return _xtrycatchfinallyexpression;\n            }\n          };\n          it.service = _function;\n          Set<String> _parameterKeys = request.getParameterKeys();\n          boolean _contains = _parameterKeys.contains(\"fullText\");\n          it.hasTextInput = _contains;\n        }\n      };\n      _xblockexpression = ObjectExtensions.<XtextServiceDispatcher.ServiceDescriptor>operator_doubleArrow(_serviceDescriptor, _function);\n    }\n    return _xblockexpression;\n  }","id":55900,"modified_method":"protected XtextServiceDispatcher.ServiceDescriptor getOccurrencesService(final IRequestData request, final ISessionStore sessionStore) throws InvalidRequestException {\n    XtextServiceDispatcher.ServiceDescriptor _xblockexpression = null;\n    {\n      final XtextWebDocumentAccess document = this.getDocumentAccess(request, sessionStore);\n      Optional<Integer> _of = Optional.<Integer>of(Integer.valueOf(0));\n      final int offset = this.getInt(request, \"caretOffset\", _of);\n      if ((offset < 0)) {\n        throw new InvalidRequestException.InvalidParametersException(\"The parameter \\'offset\\' must not be negative.\");\n      }\n      XtextServiceDispatcher.ServiceDescriptor _serviceDescriptor = new XtextServiceDispatcher.ServiceDescriptor();\n      final Procedure1<XtextServiceDispatcher.ServiceDescriptor> _function = new Procedure1<XtextServiceDispatcher.ServiceDescriptor>() {\n        @Override\n        public void apply(final XtextServiceDispatcher.ServiceDescriptor it) {\n          final Function0<IServiceResult> _function = new Function0<IServiceResult>() {\n            @Override\n            public IServiceResult apply() {\n              IServiceResult _xtrycatchfinallyexpression = null;\n              try {\n                _xtrycatchfinallyexpression = XtextServiceDispatcher.this.occurrencesService.findOccurrences(document, offset);\n              } catch (final Throwable _t) {\n                if (_t instanceof Throwable) {\n                  final Throwable throwable = (Throwable)_t;\n                  _xtrycatchfinallyexpression = XtextServiceDispatcher.this.handleError(it, throwable);\n                } else {\n                  throw Exceptions.sneakyThrow(_t);\n                }\n              }\n              return _xtrycatchfinallyexpression;\n            }\n          };\n          it.service = _function;\n          Set<String> _parameterKeys = request.getParameterKeys();\n          boolean _contains = _parameterKeys.contains(\"fullText\");\n          it.hasTextInput = _contains;\n        }\n      };\n      _xblockexpression = ObjectExtensions.<XtextServiceDispatcher.ServiceDescriptor>operator_doubleArrow(_serviceDescriptor, _function);\n    }\n    return _xblockexpression;\n  }","commit_id":"055e4ee9ff32628908eda03d9cccba7b872b0f8b","url":"https://github.com/eclipse/xtext"},{"original_method":"protected void _createProposals(final Assignment assignment, final ContentAssistContext context, final IIdeContentProposalAcceptor acceptor) {\n    AbstractElement _terminal = assignment.getTerminal();\n    if ((_terminal instanceof CrossReference)) {\n      AbstractElement _terminal_1 = assignment.getTerminal();\n      this.createProposals(_terminal_1, context, acceptor);\n    }\n  }","id":55901,"modified_method":"protected void _createProposals(final Assignment assignment, final ContentAssistContext context, final IIdeContentProposalAcceptor acceptor) {\n    final AbstractElement terminal = assignment.getTerminal();\n    if ((terminal instanceof CrossReference)) {\n      AbstractElement _terminal = assignment.getTerminal();\n      this.createProposals(_terminal, context, acceptor);\n    } else {\n      if ((terminal instanceof RuleCall)) {\n        final AbstractRule rule = ((RuleCall)terminal).getRule();\n        boolean _and = false;\n        if (!(rule instanceof TerminalRule)) {\n          _and = false;\n        } else {\n          String _prefix = context.getPrefix();\n          boolean _isEmpty = _prefix.isEmpty();\n          _and = _isEmpty;\n        }\n        if (_and) {\n          ContentAssistEntry _contentAssistEntry = new ContentAssistEntry();\n          final Procedure1<ContentAssistEntry> _function = new Procedure1<ContentAssistEntry>() {\n            @Override\n            public void apply(final ContentAssistEntry it) {\n              String _prefix = context.getPrefix();\n              it.setPrefix(_prefix);\n              String _name = rule.getName();\n              boolean _equals = Objects.equal(_name, \"STRING\");\n              if (_equals) {\n                String _feature = assignment.getFeature();\n                String _plus = (\"\\\"\" + _feature);\n                String _plus_1 = (_plus + \"\\\"\");\n                it.setProposal(_plus_1);\n                ArrayList<TextRegion> _editPositions = it.getEditPositions();\n                int _offset = context.getOffset();\n                int _plus_2 = (_offset + 1);\n                String _proposal = it.getProposal();\n                int _length = _proposal.length();\n                int _minus = (_length - 2);\n                TextRegion _textRegion = new TextRegion(_plus_2, _minus);\n                _editPositions.add(_textRegion);\n              } else {\n                String _feature_1 = assignment.getFeature();\n                it.setProposal(_feature_1);\n                ArrayList<TextRegion> _editPositions_1 = it.getEditPositions();\n                int _offset_1 = context.getOffset();\n                String _proposal_1 = it.getProposal();\n                int _length_1 = _proposal_1.length();\n                TextRegion _textRegion_1 = new TextRegion(_offset_1, _length_1);\n                _editPositions_1.add(_textRegion_1);\n              }\n              String _name_1 = rule.getName();\n              it.setDescription(_name_1);\n            }\n          };\n          final ContentAssistEntry entry = ObjectExtensions.<ContentAssistEntry>operator_doubleArrow(_contentAssistEntry, _function);\n          int _defaultPriority = this.proposalPriorities.getDefaultPriority(entry);\n          acceptor.accept(entry, _defaultPriority);\n        }\n      }\n    }\n  }","commit_id":"3f589736df4db8df1d33fc722c0f3256452e680d","url":"https://github.com/eclipse/xtext"},{"original_method":"protected void _createProposals(final RuleCall ruleCall, final ContentAssistContext context, final IIdeContentProposalAcceptor acceptor) {\n    boolean _and = false;\n    AbstractRule _rule = ruleCall.getRule();\n    if (!(_rule instanceof TerminalRule)) {\n      _and = false;\n    } else {\n      String _prefix = context.getPrefix();\n      boolean _isEmpty = _prefix.isEmpty();\n      _and = _isEmpty;\n    }\n    if (_and) {\n      ContentAssistEntry _contentAssistEntry = new ContentAssistEntry();\n      final Procedure1<ContentAssistEntry> _function = new Procedure1<ContentAssistEntry>() {\n        @Override\n        public void apply(final ContentAssistEntry it) {\n          String _prefix = context.getPrefix();\n          it.setPrefix(_prefix);\n          AbstractRule _rule = ruleCall.getRule();\n          String _name = _rule.getName();\n          boolean _equals = Objects.equal(_name, \"STRING\");\n          if (_equals) {\n            final EObject container = ruleCall.eContainer();\n            if ((container instanceof Assignment)) {\n              String _feature = ((Assignment)container).getFeature();\n              String _plus = (\"\\\"\" + _feature);\n              String _plus_1 = (_plus + \"\\\"\");\n              it.setProposal(_plus_1);\n              AbstractRule _rule_1 = ruleCall.getRule();\n              String _name_1 = _rule_1.getName();\n              it.setDescription(_name_1);\n            } else {\n              AbstractRule _rule_2 = ruleCall.getRule();\n              String _name_2 = _rule_2.getName();\n              String _plus_2 = (\"\\\"\" + _name_2);\n              String _plus_3 = (_plus_2 + \"\\\"\");\n              it.setProposal(_plus_3);\n            }\n            ArrayList<TextRegion> _editPositions = it.getEditPositions();\n            int _offset = context.getOffset();\n            int _plus_4 = (_offset + 1);\n            String _proposal = it.getProposal();\n            int _length = _proposal.length();\n            int _minus = (_length - 2);\n            TextRegion _textRegion = new TextRegion(_plus_4, _minus);\n            _editPositions.add(_textRegion);\n          } else {\n            final EObject container_1 = ruleCall.eContainer();\n            if ((container_1 instanceof Assignment)) {\n              String _feature_1 = ((Assignment)container_1).getFeature();\n              it.setProposal(_feature_1);\n              AbstractRule _rule_3 = ruleCall.getRule();\n              String _name_3 = _rule_3.getName();\n              it.setDescription(_name_3);\n            } else {\n              AbstractRule _rule_4 = ruleCall.getRule();\n              String _name_4 = _rule_4.getName();\n              it.setProposal(_name_4);\n            }\n            ArrayList<TextRegion> _editPositions_1 = it.getEditPositions();\n            int _offset_1 = context.getOffset();\n            String _proposal_1 = it.getProposal();\n            int _length_1 = _proposal_1.length();\n            TextRegion _textRegion_1 = new TextRegion(_offset_1, _length_1);\n            _editPositions_1.add(_textRegion_1);\n          }\n        }\n      };\n      final ContentAssistEntry entry = ObjectExtensions.<ContentAssistEntry>operator_doubleArrow(_contentAssistEntry, _function);\n      int _defaultPriority = this.proposalPriorities.getDefaultPriority(entry);\n      acceptor.accept(entry, _defaultPriority);\n    }\n  }","id":55902,"modified_method":"protected void _createProposals(final RuleCall ruleCall, final ContentAssistContext context, final IIdeContentProposalAcceptor acceptor) {\n  }","commit_id":"3f589736df4db8df1d33fc722c0f3256452e680d","url":"https://github.com/eclipse/xtext"},{"original_method":"@Override\n  protected void _createProposals(final Assignment assignment, final ContentAssistContext context, final IIdeContentProposalAcceptor acceptor) {\n    boolean _matched = false;\n    if (!_matched) {\n      StatemachineGrammarAccess.EventElements _eventAccess = this._statemachineGrammarAccess.getEventAccess();\n      Assignment _signalAssignment_0 = _eventAccess.getSignalAssignment_0();\n      if (Objects.equal(assignment, _signalAssignment_0)) {\n        _matched=true;\n        IScopeProvider _scopeProvider = this.getScopeProvider();\n        EObject _currentModel = context.getCurrentModel();\n        final IScope scope = _scopeProvider.getScope(_currentModel, StatemachinePackage.Literals.EVENT__SIGNAL);\n        Iterable<IEObjectDescription> _allElements = scope.getAllElements();\n        final Function1<IEObjectDescription, Boolean> _function = new Function1<IEObjectDescription, Boolean>() {\n          @Override\n          public Boolean apply(final IEObjectDescription it) {\n            EClass _eClass = it.getEClass();\n            return Boolean.valueOf(Objects.equal(_eClass, StatemachinePackage.Literals.INPUT_SIGNAL));\n          }\n        };\n        Iterable<IEObjectDescription> _filter = IterableExtensions.<IEObjectDescription>filter(_allElements, _function);\n        for (final IEObjectDescription description : _filter) {\n          {\n            ContentAssistEntry _contentAssistEntry = new ContentAssistEntry();\n            final Procedure1<ContentAssistEntry> _function_1 = new Procedure1<ContentAssistEntry>() {\n              @Override\n              public void apply(final ContentAssistEntry it) {\n                String _prefix = context.getPrefix();\n                it.setPrefix(_prefix);\n                QualifiedName _name = description.getName();\n                String _string = _name.toString();\n                it.setProposal(_string);\n                it.setDescription(\"input signal\");\n              }\n            };\n            final ContentAssistEntry entry = ObjectExtensions.<ContentAssistEntry>operator_doubleArrow(_contentAssistEntry, _function_1);\n            IdeContentProposalPriorities _proposalPriorities = this.getProposalPriorities();\n            int _crossRefPriority = _proposalPriorities.getCrossRefPriority(description, entry);\n            acceptor.accept(entry, _crossRefPriority);\n          }\n        }\n      }\n    }\n    if (!_matched) {\n      StatemachineGrammarAccess.CommandElements _commandAccess = this._statemachineGrammarAccess.getCommandAccess();\n      Assignment _signalAssignment_1 = _commandAccess.getSignalAssignment_1();\n      if (Objects.equal(assignment, _signalAssignment_1)) {\n        _matched=true;\n        IScopeProvider _scopeProvider_1 = this.getScopeProvider();\n        EObject _currentModel_1 = context.getCurrentModel();\n        final IScope scope_1 = _scopeProvider_1.getScope(_currentModel_1, StatemachinePackage.Literals.COMMAND__SIGNAL);\n        Iterable<IEObjectDescription> _allElements_1 = scope_1.getAllElements();\n        final Function1<IEObjectDescription, Boolean> _function_1 = new Function1<IEObjectDescription, Boolean>() {\n          @Override\n          public Boolean apply(final IEObjectDescription it) {\n            EClass _eClass = it.getEClass();\n            return Boolean.valueOf(Objects.equal(_eClass, StatemachinePackage.Literals.OUTPUT_SIGNAL));\n          }\n        };\n        Iterable<IEObjectDescription> _filter_1 = IterableExtensions.<IEObjectDescription>filter(_allElements_1, _function_1);\n        for (final IEObjectDescription description_1 : _filter_1) {\n          {\n            ContentAssistEntry _contentAssistEntry = new ContentAssistEntry();\n            final Procedure1<ContentAssistEntry> _function_2 = new Procedure1<ContentAssistEntry>() {\n              @Override\n              public void apply(final ContentAssistEntry it) {\n                String _prefix = context.getPrefix();\n                it.setPrefix(_prefix);\n                QualifiedName _name = description_1.getName();\n                String _string = _name.toString();\n                it.setProposal(_string);\n                it.setDescription(\"output signal\");\n              }\n            };\n            final ContentAssistEntry entry = ObjectExtensions.<ContentAssistEntry>operator_doubleArrow(_contentAssistEntry, _function_2);\n            IdeContentProposalPriorities _proposalPriorities = this.getProposalPriorities();\n            int _crossRefPriority = _proposalPriorities.getCrossRefPriority(description_1, entry);\n            acceptor.accept(entry, _crossRefPriority);\n          }\n        }\n      }\n    }\n    if (!_matched) {\n      super._createProposals(assignment, context, acceptor);\n    }\n  }","id":55903,"modified_method":"@Override\n  protected void _createProposals(final Assignment assignment, final ContentAssistContext context, final IIdeContentProposalAcceptor acceptor) {\n    boolean _matched = false;\n    if (!_matched) {\n      StatemachineGrammarAccess.EventElements _eventAccess = this._statemachineGrammarAccess.getEventAccess();\n      Assignment _signalAssignment_0 = _eventAccess.getSignalAssignment_0();\n      if (Objects.equal(assignment, _signalAssignment_0)) {\n        _matched=true;\n        IScopeProvider _scopeProvider = this.getScopeProvider();\n        EObject _currentModel = context.getCurrentModel();\n        final IScope scope = _scopeProvider.getScope(_currentModel, StatemachinePackage.Literals.EVENT__SIGNAL);\n        Iterable<IEObjectDescription> _allElements = scope.getAllElements();\n        final Function1<IEObjectDescription, Boolean> _function = new Function1<IEObjectDescription, Boolean>() {\n          @Override\n          public Boolean apply(final IEObjectDescription it) {\n            EClass _eClass = it.getEClass();\n            return Boolean.valueOf(Objects.equal(_eClass, StatemachinePackage.Literals.INPUT_SIGNAL));\n          }\n        };\n        Iterable<IEObjectDescription> _filter = IterableExtensions.<IEObjectDescription>filter(_allElements, _function);\n        for (final IEObjectDescription description : _filter) {\n          {\n            ContentAssistEntry _contentAssistEntry = new ContentAssistEntry();\n            final Procedure1<ContentAssistEntry> _function_1 = new Procedure1<ContentAssistEntry>() {\n              @Override\n              public void apply(final ContentAssistEntry it) {\n                String _prefix = context.getPrefix();\n                it.setPrefix(_prefix);\n                QualifiedName _name = description.getName();\n                String _string = _name.toString();\n                it.setProposal(_string);\n                it.setDescription(\"input signal\");\n              }\n            };\n            final ContentAssistEntry entry = ObjectExtensions.<ContentAssistEntry>operator_doubleArrow(_contentAssistEntry, _function_1);\n            IdeContentProposalPriorities _proposalPriorities = this.getProposalPriorities();\n            int _crossRefPriority = _proposalPriorities.getCrossRefPriority(description, entry);\n            acceptor.accept(entry, _crossRefPriority);\n          }\n        }\n      }\n    }\n    if (!_matched) {\n      StatemachineGrammarAccess.CommandElements _commandAccess = this._statemachineGrammarAccess.getCommandAccess();\n      Assignment _signalAssignment_1 = _commandAccess.getSignalAssignment_1();\n      if (Objects.equal(assignment, _signalAssignment_1)) {\n        _matched=true;\n        IScopeProvider _scopeProvider_1 = this.getScopeProvider();\n        EObject _currentModel_1 = context.getCurrentModel();\n        final IScope scope_1 = _scopeProvider_1.getScope(_currentModel_1, StatemachinePackage.Literals.COMMAND__SIGNAL);\n        Iterable<IEObjectDescription> _allElements_1 = scope_1.getAllElements();\n        final Function1<IEObjectDescription, Boolean> _function_1 = new Function1<IEObjectDescription, Boolean>() {\n          @Override\n          public Boolean apply(final IEObjectDescription it) {\n            EClass _eClass = it.getEClass();\n            return Boolean.valueOf(Objects.equal(_eClass, StatemachinePackage.Literals.OUTPUT_SIGNAL));\n          }\n        };\n        Iterable<IEObjectDescription> _filter_1 = IterableExtensions.<IEObjectDescription>filter(_allElements_1, _function_1);\n        for (final IEObjectDescription description_1 : _filter_1) {\n          {\n            ContentAssistEntry _contentAssistEntry = new ContentAssistEntry();\n            final Procedure1<ContentAssistEntry> _function_2 = new Procedure1<ContentAssistEntry>() {\n              @Override\n              public void apply(final ContentAssistEntry it) {\n                String _prefix = context.getPrefix();\n                it.setPrefix(_prefix);\n                QualifiedName _name = description_1.getName();\n                String _string = _name.toString();\n                it.setProposal(_string);\n                it.setDescription(\"output signal\");\n              }\n            };\n            final ContentAssistEntry entry = ObjectExtensions.<ContentAssistEntry>operator_doubleArrow(_contentAssistEntry, _function_2);\n            IdeContentProposalPriorities _proposalPriorities = this.getProposalPriorities();\n            int _crossRefPriority = _proposalPriorities.getCrossRefPriority(description_1, entry);\n            acceptor.accept(entry, _crossRefPriority);\n          }\n        }\n      }\n    }\n    if (!_matched) {\n      StatemachineGrammarAccess.EventElements _eventAccess_1 = this._statemachineGrammarAccess.getEventAccess();\n      Assignment _valueAssignment_2 = _eventAccess_1.getValueAssignment_2();\n      if (Objects.equal(assignment, _valueAssignment_2)) {\n        _matched=true;\n      }\n      if (!_matched) {\n        StatemachineGrammarAccess.CommandElements _commandAccess_1 = this._statemachineGrammarAccess.getCommandAccess();\n        Assignment _newValueAssignment_3 = _commandAccess_1.getNewValueAssignment_3();\n        if (Objects.equal(assignment, _newValueAssignment_3)) {\n          _matched=true;\n        }\n      }\n      if (_matched) {\n      }\n    }\n    if (!_matched) {\n      super._createProposals(assignment, context, acceptor);\n    }\n  }","commit_id":"3f589736df4db8df1d33fc722c0f3256452e680d","url":"https://github.com/eclipse/xtext"},{"original_method":"@Override\n  protected void _createProposals(final Assignment assignment, final ContentAssistContext context, final IIdeContentProposalAcceptor acceptor) {\n    boolean _matched = false;\n    if (!_matched) {\n      StatemachineGrammarAccess.EventElements _eventAccess = this._statemachineGrammarAccess.getEventAccess();\n      Assignment _signalAssignment_0 = _eventAccess.getSignalAssignment_0();\n      if (Objects.equal(assignment, _signalAssignment_0)) {\n        _matched=true;\n        IScopeProvider _scopeProvider = this.getScopeProvider();\n        EObject _currentModel = context.getCurrentModel();\n        final IScope scope = _scopeProvider.getScope(_currentModel, StatemachinePackage.Literals.EVENT__SIGNAL);\n        Iterable<IEObjectDescription> _allElements = scope.getAllElements();\n        final Function1<IEObjectDescription, Boolean> _function = new Function1<IEObjectDescription, Boolean>() {\n          @Override\n          public Boolean apply(final IEObjectDescription it) {\n            EClass _eClass = it.getEClass();\n            return Boolean.valueOf(Objects.equal(_eClass, StatemachinePackage.Literals.INPUT_SIGNAL));\n          }\n        };\n        Iterable<IEObjectDescription> _filter = IterableExtensions.<IEObjectDescription>filter(_allElements, _function);\n        for (final IEObjectDescription description : _filter) {\n          {\n            ContentAssistEntry _contentAssistEntry = new ContentAssistEntry();\n            final Procedure1<ContentAssistEntry> _function_1 = new Procedure1<ContentAssistEntry>() {\n              @Override\n              public void apply(final ContentAssistEntry it) {\n                String _prefix = context.getPrefix();\n                it.setPrefix(_prefix);\n                QualifiedName _name = description.getName();\n                String _string = _name.toString();\n                it.setProposal(_string);\n                it.setDescription(\"input signal\");\n              }\n            };\n            final ContentAssistEntry entry = ObjectExtensions.<ContentAssistEntry>operator_doubleArrow(_contentAssistEntry, _function_1);\n            IdeContentProposalPriorities _proposalPriorities = this.getProposalPriorities();\n            int _crossRefPriority = _proposalPriorities.getCrossRefPriority(description, entry);\n            acceptor.accept(entry, _crossRefPriority);\n          }\n        }\n      }\n    }\n    if (!_matched) {\n      StatemachineGrammarAccess.CommandElements _commandAccess = this._statemachineGrammarAccess.getCommandAccess();\n      Assignment _signalAssignment_1 = _commandAccess.getSignalAssignment_1();\n      if (Objects.equal(assignment, _signalAssignment_1)) {\n        _matched=true;\n        IScopeProvider _scopeProvider_1 = this.getScopeProvider();\n        EObject _currentModel_1 = context.getCurrentModel();\n        final IScope scope_1 = _scopeProvider_1.getScope(_currentModel_1, StatemachinePackage.Literals.COMMAND__SIGNAL);\n        Iterable<IEObjectDescription> _allElements_1 = scope_1.getAllElements();\n        final Function1<IEObjectDescription, Boolean> _function_1 = new Function1<IEObjectDescription, Boolean>() {\n          @Override\n          public Boolean apply(final IEObjectDescription it) {\n            EClass _eClass = it.getEClass();\n            return Boolean.valueOf(Objects.equal(_eClass, StatemachinePackage.Literals.OUTPUT_SIGNAL));\n          }\n        };\n        Iterable<IEObjectDescription> _filter_1 = IterableExtensions.<IEObjectDescription>filter(_allElements_1, _function_1);\n        for (final IEObjectDescription description_1 : _filter_1) {\n          {\n            ContentAssistEntry _contentAssistEntry = new ContentAssistEntry();\n            final Procedure1<ContentAssistEntry> _function_2 = new Procedure1<ContentAssistEntry>() {\n              @Override\n              public void apply(final ContentAssistEntry it) {\n                String _prefix = context.getPrefix();\n                it.setPrefix(_prefix);\n                QualifiedName _name = description_1.getName();\n                String _string = _name.toString();\n                it.setProposal(_string);\n                it.setDescription(\"output signal\");\n              }\n            };\n            final ContentAssistEntry entry = ObjectExtensions.<ContentAssistEntry>operator_doubleArrow(_contentAssistEntry, _function_2);\n            IdeContentProposalPriorities _proposalPriorities = this.getProposalPriorities();\n            int _crossRefPriority = _proposalPriorities.getCrossRefPriority(description_1, entry);\n            acceptor.accept(entry, _crossRefPriority);\n          }\n        }\n      }\n    }\n    if (!_matched) {\n      super._createProposals(assignment, context, acceptor);\n    }\n  }","id":55904,"modified_method":"@Override\n  protected void _createProposals(final Assignment assignment, final ContentAssistContext context, final IIdeContentProposalAcceptor acceptor) {\n    boolean _matched = false;\n    if (!_matched) {\n      StatemachineGrammarAccess.EventElements _eventAccess = this._statemachineGrammarAccess.getEventAccess();\n      Assignment _signalAssignment_0 = _eventAccess.getSignalAssignment_0();\n      if (Objects.equal(assignment, _signalAssignment_0)) {\n        _matched=true;\n        IScopeProvider _scopeProvider = this.getScopeProvider();\n        EObject _currentModel = context.getCurrentModel();\n        final IScope scope = _scopeProvider.getScope(_currentModel, StatemachinePackage.Literals.EVENT__SIGNAL);\n        Iterable<IEObjectDescription> _allElements = scope.getAllElements();\n        final Function1<IEObjectDescription, Boolean> _function = new Function1<IEObjectDescription, Boolean>() {\n          @Override\n          public Boolean apply(final IEObjectDescription it) {\n            EClass _eClass = it.getEClass();\n            return Boolean.valueOf(Objects.equal(_eClass, StatemachinePackage.Literals.INPUT_SIGNAL));\n          }\n        };\n        Iterable<IEObjectDescription> _filter = IterableExtensions.<IEObjectDescription>filter(_allElements, _function);\n        for (final IEObjectDescription description : _filter) {\n          {\n            ContentAssistEntry _contentAssistEntry = new ContentAssistEntry();\n            final Procedure1<ContentAssistEntry> _function_1 = new Procedure1<ContentAssistEntry>() {\n              @Override\n              public void apply(final ContentAssistEntry it) {\n                String _prefix = context.getPrefix();\n                it.setPrefix(_prefix);\n                QualifiedName _name = description.getName();\n                String _string = _name.toString();\n                it.setProposal(_string);\n                it.setDescription(\"input signal\");\n              }\n            };\n            final ContentAssistEntry entry = ObjectExtensions.<ContentAssistEntry>operator_doubleArrow(_contentAssistEntry, _function_1);\n            IdeContentProposalPriorities _proposalPriorities = this.getProposalPriorities();\n            int _crossRefPriority = _proposalPriorities.getCrossRefPriority(description, entry);\n            acceptor.accept(entry, _crossRefPriority);\n          }\n        }\n      }\n    }\n    if (!_matched) {\n      StatemachineGrammarAccess.CommandElements _commandAccess = this._statemachineGrammarAccess.getCommandAccess();\n      Assignment _signalAssignment_1 = _commandAccess.getSignalAssignment_1();\n      if (Objects.equal(assignment, _signalAssignment_1)) {\n        _matched=true;\n        IScopeProvider _scopeProvider_1 = this.getScopeProvider();\n        EObject _currentModel_1 = context.getCurrentModel();\n        final IScope scope_1 = _scopeProvider_1.getScope(_currentModel_1, StatemachinePackage.Literals.COMMAND__SIGNAL);\n        Iterable<IEObjectDescription> _allElements_1 = scope_1.getAllElements();\n        final Function1<IEObjectDescription, Boolean> _function_1 = new Function1<IEObjectDescription, Boolean>() {\n          @Override\n          public Boolean apply(final IEObjectDescription it) {\n            EClass _eClass = it.getEClass();\n            return Boolean.valueOf(Objects.equal(_eClass, StatemachinePackage.Literals.OUTPUT_SIGNAL));\n          }\n        };\n        Iterable<IEObjectDescription> _filter_1 = IterableExtensions.<IEObjectDescription>filter(_allElements_1, _function_1);\n        for (final IEObjectDescription description_1 : _filter_1) {\n          {\n            ContentAssistEntry _contentAssistEntry = new ContentAssistEntry();\n            final Procedure1<ContentAssistEntry> _function_2 = new Procedure1<ContentAssistEntry>() {\n              @Override\n              public void apply(final ContentAssistEntry it) {\n                String _prefix = context.getPrefix();\n                it.setPrefix(_prefix);\n                QualifiedName _name = description_1.getName();\n                String _string = _name.toString();\n                it.setProposal(_string);\n                it.setDescription(\"output signal\");\n              }\n            };\n            final ContentAssistEntry entry = ObjectExtensions.<ContentAssistEntry>operator_doubleArrow(_contentAssistEntry, _function_2);\n            IdeContentProposalPriorities _proposalPriorities = this.getProposalPriorities();\n            int _crossRefPriority = _proposalPriorities.getCrossRefPriority(description_1, entry);\n            acceptor.accept(entry, _crossRefPriority);\n          }\n        }\n      }\n    }\n    if (!_matched) {\n      StatemachineGrammarAccess.EventElements _eventAccess_1 = this._statemachineGrammarAccess.getEventAccess();\n      Assignment _valueAssignment_2 = _eventAccess_1.getValueAssignment_2();\n      if (Objects.equal(assignment, _valueAssignment_2)) {\n        _matched=true;\n      }\n      if (!_matched) {\n        StatemachineGrammarAccess.CommandElements _commandAccess_1 = this._statemachineGrammarAccess.getCommandAccess();\n        Assignment _newValueAssignment_3 = _commandAccess_1.getNewValueAssignment_3();\n        if (Objects.equal(assignment, _newValueAssignment_3)) {\n          _matched=true;\n        }\n      }\n      if (_matched) {\n      }\n    }\n    if (!_matched) {\n      super._createProposals(assignment, context, acceptor);\n    }\n  }","commit_id":"3f589736df4db8df1d33fc722c0f3256452e680d","url":"https://github.com/eclipse/xtext"},{"original_method":"@Override\n\tpublic Session getSession() throws PortalException {\n\t\tMap<String, String> parameters = new HashMap<>();\n\n\t\tparameters.put(\n\t\t\tSessionParameter.ATOMPUB_URL,\n\t\t\tgetTypeSettingsValue(\n\t\t\t\tCMISRepositoryConstants.CMIS_ATOMPUB_URL_PARAMETER));\n\t\tparameters.put(\n\t\t\tSessionParameter.BINDING_TYPE, BindingType.ATOMPUB.value());\n\t\tparameters.put(SessionParameter.COMPRESSION, Boolean.TRUE.toString());\n\n\t\tLocale locale = LocaleUtil.getSiteDefault();\n\n\t\tparameters.put(\n\t\t\tSessionParameter.LOCALE_ISO3166_COUNTRY, locale.getCountry());\n\t\tparameters.put(\n\t\t\tSessionParameter.LOCALE_ISO639_LANGUAGE, locale.getLanguage());\n\n\t\tString login = getLogin();\n\t\tString password = null;\n\n\t\tif (Validator.isNotNull(login)) {\n\t\t\tpassword = PrincipalThreadLocal.getPassword();\n\t\t}\n\t\telse {\n\t\t\tlogin = _DL_REPOSITORY_GUEST_USERNAME;\n\t\t\tpassword = _DL_REPOSITORY_GUEST_PASSWORD;\n\t\t}\n\n\t\tparameters.put(SessionParameter.PASSWORD, password);\n\t\tparameters.put(SessionParameter.USER, login);\n\n\t\tClassLoader contextClassLoader =\n\t\t\tThread.currentThread().getContextClassLoader();\n\n\t\tThread.currentThread().setContextClassLoader(\n\t\t\tgetClass().getClassLoader());\n\n\t\tCMISRepositoryUtil.checkRepository(\n\t\t\tgetRepositoryId(), parameters, getTypeSettingsProperties(),\n\t\t\tCMISRepositoryConstants.CMIS_ATOMPUB_REPOSITORY_ID_PARAMETER);\n\n\t\tSession session = CMISRepositoryUtil.createSession(parameters);\n\n\t\tThread.currentThread().setContextClassLoader(contextClassLoader);\n\n\t\treturn session;\n\t}","id":55905,"modified_method":"@Override\n\tpublic Session getSession() throws PortalException {\n\t\tMap<String, String> parameters = new HashMap<>();\n\n\t\tparameters.put(\n\t\t\tSessionParameter.ATOMPUB_URL,\n\t\t\tgetTypeSettingsValue(\n\t\t\t\tCMISRepositoryConstants.CMIS_ATOMPUB_URL_PARAMETER));\n\t\tparameters.put(\n\t\t\tSessionParameter.BINDING_TYPE, BindingType.ATOMPUB.value());\n\t\tparameters.put(SessionParameter.COMPRESSION, Boolean.TRUE.toString());\n\n\t\tLocale locale = LocaleUtil.getSiteDefault();\n\n\t\tparameters.put(\n\t\t\tSessionParameter.LOCALE_ISO3166_COUNTRY, locale.getCountry());\n\t\tparameters.put(\n\t\t\tSessionParameter.LOCALE_ISO639_LANGUAGE, locale.getLanguage());\n\n\t\tString login = getLogin();\n\t\tString password = null;\n\n\t\tif (Validator.isNotNull(login)) {\n\t\t\tpassword = PrincipalThreadLocal.getPassword();\n\t\t}\n\t\telse {\n\t\t\tlogin = _DL_REPOSITORY_GUEST_USERNAME;\n\t\t\tpassword = _DL_REPOSITORY_GUEST_PASSWORD;\n\t\t}\n\n\t\tparameters.put(SessionParameter.PASSWORD, password);\n\t\tparameters.put(SessionParameter.USER, login);\n\n\t\tThread thread = Thread.currentThread();\n\n\t\tClassLoader contextClassLoader = thread.getContextClassLoader();\n\n\t\tClassLoader classLoader = getClass().getClassLoader();\n\n\t\tthread.setContextClassLoader(classLoader);\n\n\t\ttry {\n\t\t\tCMISRepositoryUtil.checkRepository(\n\t\t\t\tgetRepositoryId(), parameters, getTypeSettingsProperties(),\n\t\t\t\tCMISRepositoryConstants.CMIS_ATOMPUB_REPOSITORY_ID_PARAMETER);\n\n\t\t\treturn CMISRepositoryUtil.createSession(parameters);\n\t\t}\n\t\tfinally {\n\t\t\tthread.setContextClassLoader(contextClassLoader);\n\t\t}\n\t}","commit_id":"1c508f76d8d99401579cfcfebb32091f604a04ec","url":"https://github.com/liferay/liferay-portal"},{"original_method":"@Override\n  public void update(@NotNull AnActionEvent e) {\n    Presentation presentation = e.getPresentation();\n    presentation.setText(\"\");\n    presentation.setVisible(false);\n    presentation.setEnabled(false);\n\n    final ConfigurationContext context = ConfigurationContext.getFromContext(e.getDataContext());\n    Location location = context.getLocation();\n    if (location == null) {\n      return;\n    }\n    PsiElement psiElement = location.getPsiElement();\n    PsiFile psiFile = psiElement.getContainingFile();\n    Project project = e.getProject();\n    if (project == null || psiFile == null) {\n      presentation.setVisible(false);\n      presentation.setEnabled(false);\n      return;\n    }\n    final CCProjectService service = CCProjectService.getInstance(project);\n    final Course course = service.getCourse();\n    final PsiDirectory taskDir = psiFile.getContainingDirectory();\n    final PsiDirectory lessonDir = taskDir.getParent();\n    if (lessonDir == null) return;\n    if (course == null) return;\n    final Lesson lesson = course.getLesson(lessonDir.getName());\n    if (lesson == null) return;\n    final Task task = lesson.getTask(taskDir.getName());\n    if (task == null) {\n      presentation.setVisible(false);\n      presentation.setEnabled(false);\n      return;\n    }\n    TaskFile taskFile = service.getTaskFile(psiFile.getVirtualFile());\n    if (taskFile == null) {\n      LOG.info(\"could not find task file\");\n      presentation.setVisible(false);\n      presentation.setEnabled(false);\n      return;\n    }\n    if (psiFile.getName().contains(\".answer\")) {\n      presentation.setEnabled(true);\n      presentation.setVisible(true);\n      presentation.setText(\"Run tests from '\" + psiFile.getName() + \"'\");\n    }\n    else {\n      presentation.setEnabled(false);\n      presentation.setVisible(false);\n    }\n  }","id":55906,"modified_method":"@Override\n  public void update(@NotNull AnActionEvent e) {\n    if (!CCProjectService.setCCActionAvailable(e)) {\n      EduUtils.enableAction(e, false);\n      return;\n    }\n\n    Presentation presentation = e.getPresentation();\n    presentation.setText(\"\");\n    presentation.setVisible(false);\n    presentation.setEnabled(false);\n\n    final ConfigurationContext context = ConfigurationContext.getFromContext(e.getDataContext());\n    Location location = context.getLocation();\n    if (location == null) {\n      return;\n    }\n    PsiElement psiElement = location.getPsiElement();\n    PsiFile psiFile = psiElement.getContainingFile();\n    Project project = e.getProject();\n    if (project == null || psiFile == null) {\n      presentation.setVisible(false);\n      presentation.setEnabled(false);\n      return;\n    }\n    final CCProjectService service = CCProjectService.getInstance(project);\n    final Course course = service.getCourse();\n    final PsiDirectory taskDir = psiFile.getContainingDirectory();\n    final PsiDirectory lessonDir = taskDir.getParent();\n    if (lessonDir == null) return;\n    if (course == null) return;\n    final Lesson lesson = course.getLesson(lessonDir.getName());\n    if (lesson == null) return;\n    final Task task = lesson.getTask(taskDir.getName());\n    if (task == null) {\n      presentation.setVisible(false);\n      presentation.setEnabled(false);\n      return;\n    }\n    TaskFile taskFile = service.getTaskFile(psiFile.getVirtualFile());\n    if (taskFile == null) {\n      LOG.info(\"could not find task file\");\n      presentation.setVisible(false);\n      presentation.setEnabled(false);\n      return;\n    }\n    if (psiFile.getName().contains(\".answer\")) {\n      presentation.setEnabled(true);\n      presentation.setVisible(true);\n      presentation.setText(\"Run tests from '\" + psiFile.getName() + \"'\");\n    }\n    else {\n      presentation.setEnabled(false);\n      presentation.setVisible(false);\n    }\n  }","commit_id":"f1816909a9a5951ee91adf34d0616ddb475bdc01","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Override\n  protected RunContentDescriptor doExecute(@NotNull RunProfileState state, @NotNull final ExecutionEnvironment environment) throws ExecutionException {\n    return createSession(state, environment).getRunContentDescriptor();\n  }","id":55907,"modified_method":"@Override\n  protected RunContentDescriptor doExecute(@NotNull RunProfileState state, @NotNull final ExecutionEnvironment environment) throws ExecutionException {\n    XDebugSession session = createSession(state, environment);\n    initSession(session, state, environment.getExecutor());\n    return session.getRunContentDescriptor();\n  }","commit_id":"f1816909a9a5951ee91adf34d0616ddb475bdc01","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Override\n  public void print(@NotNull String text, @NotNull final ConsoleViewContentType outputType) {\n    detectIPython(text, outputType);\n    if (PyConsoleUtil.detectIPythonEnd(text)) {\n      myIsIPythonOutput = false;\n      mySourceHighlighter = null;\n    }\n    else if (PyConsoleUtil.detectIPythonStart(text)) {\n      myIsIPythonOutput = true;\n    }\n    else {\n      if (mySourceHighlighter == null || outputType == ConsoleViewContentType.ERROR_OUTPUT) {\n        if (myHyperlink) {\n          printHyperlink(text, outputType);\n        }\n        else {\n          //Print text normally with converted attributes\n          super.print(text, outputType);\n        }\n        myHyperlink = detectHyperlink(text);\n        if (mySourceHighlighter == null && myIsIPythonOutput && PyConsoleUtil.detectSourcePrinting(text)) {\n          mySourceHighlighter = new PyConsoleSourceHighlighter(this, myScheme, myPyHighlighter);\n        }\n      }\n      else {\n        try {\n          mySourceHighlighter.printHighlightedSource(text);\n        }\n        catch (Exception e) {\n          LOG.error(e);\n        }\n      }\n    }\n  }","id":55908,"modified_method":"@Override\n  public void print(@NotNull String text, @NotNull final ConsoleViewContentType outputType) {\n    for (PyConsoleOutputFilter filter : Extensions.getExtensions(PyConsoleOutputFilter.EP_NAME)) {\n      if (filter.reject(text, outputType)) {\n        return;\n      }\n    }\n\n    detectIPython(text, outputType);\n    if (PyConsoleUtil.detectIPythonEnd(text)) {\n      myIsIPythonOutput = false;\n      mySourceHighlighter = null;\n    }\n    else if (PyConsoleUtil.detectIPythonStart(text)) {\n      myIsIPythonOutput = true;\n    }\n    else {\n      if (mySourceHighlighter == null || outputType == ConsoleViewContentType.ERROR_OUTPUT) {\n        if (myHyperlink) {\n          printHyperlink(text, outputType);\n        }\n        else {\n          //Print text normally with converted attributes\n          super.print(text, outputType);\n        }\n        myHyperlink = detectHyperlink(text);\n        if (mySourceHighlighter == null && myIsIPythonOutput && PyConsoleUtil.detectSourcePrinting(text)) {\n          mySourceHighlighter = new PyConsoleSourceHighlighter(this, myScheme, myPyHighlighter);\n        }\n      }\n      else {\n        try {\n          mySourceHighlighter.printHighlightedSource(text);\n        }\n        catch (Exception e) {\n          LOG.error(e);\n        }\n      }\n    }\n  }","commit_id":"f1816909a9a5951ee91adf34d0616ddb475bdc01","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Override\n\tpublic Session getSession() throws PortalException {\n\t\tMap<String, String> parameters = new HashMap<>();\n\n\t\tparameters.put(\n\t\t\tSessionParameter.ATOMPUB_URL,\n\t\t\tgetTypeSettingsValue(\n\t\t\t\tCMISRepositoryConstants.CMIS_ATOMPUB_URL_PARAMETER));\n\t\tparameters.put(\n\t\t\tSessionParameter.BINDING_TYPE, BindingType.ATOMPUB.value());\n\t\tparameters.put(SessionParameter.COMPRESSION, Boolean.TRUE.toString());\n\n\t\tLocale locale = LocaleUtil.getSiteDefault();\n\n\t\tparameters.put(\n\t\t\tSessionParameter.LOCALE_ISO3166_COUNTRY, locale.getCountry());\n\t\tparameters.put(\n\t\t\tSessionParameter.LOCALE_ISO639_LANGUAGE, locale.getLanguage());\n\n\t\tString login = getLogin();\n\t\tString password = null;\n\n\t\tif (Validator.isNotNull(login)) {\n\t\t\tpassword = PrincipalThreadLocal.getPassword();\n\t\t}\n\t\telse {\n\t\t\tlogin = _DL_REPOSITORY_GUEST_USERNAME;\n\t\t\tpassword = _DL_REPOSITORY_GUEST_PASSWORD;\n\t\t}\n\n\t\tparameters.put(SessionParameter.PASSWORD, password);\n\t\tparameters.put(SessionParameter.USER, login);\n\n\t\tCMISRepositoryUtil.checkRepository(\n\t\t\tgetRepositoryId(), parameters, getTypeSettingsProperties(),\n\t\t\tCMISRepositoryConstants.CMIS_ATOMPUB_REPOSITORY_ID_PARAMETER);\n\n\t\treturn CMISRepositoryUtil.createSession(parameters);\n\t}","id":55909,"modified_method":"@Override\n\tpublic Session getSession() throws PortalException {\n\t\tMap<String, String> parameters = new HashMap<>();\n\n\t\tparameters.put(\n\t\t\tSessionParameter.ATOMPUB_URL,\n\t\t\tgetTypeSettingsValue(\n\t\t\t\tCMISRepositoryConstants.CMIS_ATOMPUB_URL_PARAMETER));\n\t\tparameters.put(\n\t\t\tSessionParameter.BINDING_TYPE, BindingType.ATOMPUB.value());\n\t\tparameters.put(SessionParameter.COMPRESSION, Boolean.TRUE.toString());\n\n\t\tLocale locale = LocaleUtil.getSiteDefault();\n\n\t\tparameters.put(\n\t\t\tSessionParameter.LOCALE_ISO3166_COUNTRY, locale.getCountry());\n\t\tparameters.put(\n\t\t\tSessionParameter.LOCALE_ISO639_LANGUAGE, locale.getLanguage());\n\n\t\tString login = getLogin();\n\t\tString password = null;\n\n\t\tif (Validator.isNotNull(login)) {\n\t\t\tpassword = PrincipalThreadLocal.getPassword();\n\t\t}\n\t\telse {\n\t\t\tlogin = _DL_REPOSITORY_GUEST_USERNAME;\n\t\t\tpassword = _DL_REPOSITORY_GUEST_PASSWORD;\n\t\t}\n\n\t\tparameters.put(SessionParameter.PASSWORD, password);\n\t\tparameters.put(SessionParameter.USER, login);\n\n\t\tClassLoader contextClassLoader =\n\t\t\tThread.currentThread().getContextClassLoader();\n\n\t\tThread.currentThread().setContextClassLoader(\n\t\t\tgetClass().getClassLoader());\n\n\t\tCMISRepositoryUtil.checkRepository(\n\t\t\tgetRepositoryId(), parameters, getTypeSettingsProperties(),\n\t\t\tCMISRepositoryConstants.CMIS_ATOMPUB_REPOSITORY_ID_PARAMETER);\n\n\t\tSession session = CMISRepositoryUtil.createSession(parameters);\n\n\t\tThread.currentThread().setContextClassLoader(contextClassLoader);\n\n\t\treturn session;\n\t}","commit_id":"0d71525da2a3200e1af408515aadcd1e1f54b7c2","url":"https://github.com/liferay/liferay-portal"},{"original_method":"@Override\n    public String getCreationTime(String sessionId) {\n        Session<LocalSessionContext> session = this.manager.findSession(sessionId);\n        if (session == null) return null;\n        return session.getMetaData().getCreationTime().toString();\n    }","id":55910,"modified_method":"@Override\n    public String getCreationTime(String sessionId) {\n        Batcher batcher = this.manager.getBatcher();\n        boolean started = batcher.startBatch();\n        try {\n            Session<LocalSessionContext> session = this.manager.findSession(this.getSessionId(sessionId));\n            if (session == null) return null;\n            return session.getMetaData().getCreationTime().toString();\n        } finally {\n            if (started) {\n                batcher.endBatch(false);\n            }\n        }\n    }","commit_id":"c76ea2f22a037ede8fd731af837301c8e141f4a3","url":"https://github.com/wildfly/wildfly"},{"original_method":"@Override\n    public synchronized void stop() throws LifecycleException {\n        if (!this.started) return;\n\n        this.manager.stop();\n        if (this.transactionValve != null) {\n            this.removeContextValve(this.transactionValve);\n        }\n        if (this.routingValve != null) {\n            this.removeContextValve(this.routingValve);\n        }\n        if (this.lockValve != null) {\n            this.removeContextValve(this.lockValve);\n        }\n        this.started = false;\n    }","id":55911,"modified_method":"@Override\n    public synchronized void stop() throws LifecycleException {\n        if (!this.started) return;\n\n        this.manager.stop();\n\n        this.started = false;\n    }","commit_id":"c76ea2f22a037ede8fd731af837301c8e141f4a3","url":"https://github.com/wildfly/wildfly"},{"original_method":"@Override\n    public org.apache.catalina.Session createSession(String sessionId, Random random) {\n        String id = (sessionId != null) ? sessionId : this.manager.createSessionId();\n        org.apache.catalina.Session session = new SessionFacade(this.manager.createSession(id));\n        session.setManager(this);\n        return session;\n    }","id":55912,"modified_method":"@Override\n    public org.apache.catalina.Session createSession(String sessionId, Random random) {\n        String id = (sessionId != null) ? this.getSessionId(sessionId) : this.manager.createSessionId();\n        this.manager.getBatcher().startBatch();\n        return this.getSession(this.manager.createSession(id));\n    }","commit_id":"c76ea2f22a037ede8fd731af837301c8e141f4a3","url":"https://github.com/wildfly/wildfly"},{"original_method":"@Override\n    public org.apache.catalina.Session findSession(String id) {\n        Session<LocalSessionContext> session = this.manager.findSession(id);\n        return (session != null) ? new SessionFacade(session) : null;\n    }","id":55913,"modified_method":"@Override\n    public org.apache.catalina.Session findSession(String id) {\n        Batcher batcher = this.manager.getBatcher();\n        boolean started = batcher.startBatch();\n        Session<LocalSessionContext> session = this.manager.findSession(this.getSessionId(id));\n        if (session == null) {\n            if (started) {\n                batcher.endBatch(false);\n            }\n            return null;\n        }\n        return this.getSession(session);\n    }","commit_id":"c76ea2f22a037ede8fd731af837301c8e141f4a3","url":"https://github.com/wildfly/wildfly"},{"original_method":"@Override\n    public String getSessionAttribute(String sessionId, String key) {\n        Session<LocalSessionContext> session = this.manager.findSession(sessionId);\n        if (session == null) return null;\n        Object attribute = session.getAttributes().getAttribute(key);\n        return (attribute != null) ? attribute.toString() : null;\n    }","id":55914,"modified_method":"@Override\n    public String getSessionAttribute(String sessionId, String key) {\n        Batcher batcher = this.manager.getBatcher();\n        boolean started = batcher.startBatch();\n        try {\n            Session<LocalSessionContext> session = this.manager.findSession(this.getSessionId(sessionId));\n            if (session == null) return null;\n            Object attribute = session.getAttributes().getAttribute(key);\n            return (attribute != null) ? attribute.toString() : null;\n        } finally {\n            if (started) {\n                batcher.endBatch(false);\n            }\n        }\n    }","commit_id":"c76ea2f22a037ede8fd731af837301c8e141f4a3","url":"https://github.com/wildfly/wildfly"},{"original_method":"@Override\n    public String getLastAccessedTime(String sessionId) {\n        Session<LocalSessionContext> session = this.manager.findSession(sessionId);\n        if (session == null) return null;\n        return session.getMetaData().getLastAccessedTime().toString();\n    }","id":55915,"modified_method":"@Override\n    public String getLastAccessedTime(String sessionId) {\n        Batcher batcher = this.manager.getBatcher();\n        boolean started = batcher.startBatch();\n        try {\n            Session<LocalSessionContext> session = this.manager.findSession(this.getSessionId(sessionId));\n            if (session == null) return null;\n            return session.getMetaData().getLastAccessedTime().toString();\n        } finally {\n            if (started) {\n                batcher.endBatch(false);\n            }\n        }\n    }","commit_id":"c76ea2f22a037ede8fd731af837301c8e141f4a3","url":"https://github.com/wildfly/wildfly"},{"original_method":"@Override\n    public void expireSession(String sessionId) {\n        Session<LocalSessionContext> session = this.manager.findSession(sessionId);\n        if (session != null) {\n            session.invalidate();\n        }\n    }","id":55916,"modified_method":"@Override\n    public void expireSession(String sessionId) {\n        Batcher batcher = this.manager.getBatcher();\n        boolean started = batcher.startBatch();\n        try {\n            Session<LocalSessionContext> session = this.manager.findSession(this.getSessionId(sessionId));\n            if (session != null) {\n                session.invalidate();\n            }\n        } finally {\n            if (started) {\n                batcher.endBatch(true);\n            }\n        }\n    }","commit_id":"c76ea2f22a037ede8fd731af837301c8e141f4a3","url":"https://github.com/wildfly/wildfly"},{"original_method":"public ManagerFacade(SessionManager<LocalSessionContext> manager, ReplicationConfig config) {\n        this.manager = manager;\n        this.config = config;\n    }","id":55917,"modified_method":"public ManagerFacade(SessionManager<LocalSessionContext> manager, ReplicationConfig config) {\n        this.manager = manager;\n        this.config = config;\n        if (this.config.getUseJK() == null) {\n            this.config.setUseJK(true);\n        }\n    }","commit_id":"c76ea2f22a037ede8fd731af837301c8e141f4a3","url":"https://github.com/wildfly/wildfly"},{"original_method":"@SuppressWarnings(\"rawtypes\")\n    @Override\n    public HashMap getSession(String sessionId) {\n        Session session = this.manager.findSession(sessionId);\n        if (session == null) return null;\n        HashMap<String, Object> attributes = new HashMap<>();\n        for (String name: session.getAttributes().getAttributeNames()) {\n            attributes.put(name, session.getAttributes().getAttribute(name));\n        }\n        return attributes;\n    }","id":55918,"modified_method":"@SuppressWarnings(\"rawtypes\")\n    @Override\n    public HashMap getSession(String sessionId) {\n        Batcher batcher = this.manager.getBatcher();\n        boolean started = batcher.startBatch();\n        try {\n            Session session = this.manager.findSession(this.getSessionId(sessionId));\n            if (session == null) return null;\n            HashMap<String, Object> attributes = new HashMap<>();\n            for (String name: session.getAttributes().getAttributeNames()) {\n                attributes.put(name, session.getAttributes().getAttribute(name));\n            }\n            return attributes;\n        } finally {\n            if (started) {\n                batcher.endBatch(false);\n            }\n        }\n    }","commit_id":"c76ea2f22a037ede8fd731af837301c8e141f4a3","url":"https://github.com/wildfly/wildfly"},{"original_method":"@Override\n    public synchronized void start() throws LifecycleException {\n        // JBoss Web likes to start the manager both when it is set in the context and again when the context is started\n        // so we need to defend against sloppy lifecycle behavior\n        if (this.started) return;\n\n        this.transactionValve = new BatchValve(this.manager.getBatcher());\n        this.addContextValve(this.transactionValve);\n        if (this.config.getUseJK()) {\n            this.routingValve = new RoutingValve(this);\n            this.addContextValve(this.routingValve);\n        }\n        this.manager.start();\n        this.started = true;\n    }","id":55919,"modified_method":"@Override\n    public synchronized void start() throws LifecycleException {\n        // JBoss Web likes to start the manager both when it is set in the context and again when the context is started\n        // so we need to defend against sloppy lifecycle behavior\n        if (this.started) return;\n\n        Context context = (Context) this.container;\n        this.manager.setDefaultMaxInactiveInterval(context.getSessionTimeout(), TimeUnit.MINUTES);\n        this.manager.start();\n\n        this.started = true;\n    }","commit_id":"c76ea2f22a037ede8fd731af837301c8e141f4a3","url":"https://github.com/wildfly/wildfly"},{"original_method":"@Override\n    public void expire() {\n        this.session.invalidate();\n    }","id":55920,"modified_method":"@Override\n    public void expire() {\n        this.session.invalidate();\n        this.batcher.endBatch(true);\n    }","commit_id":"c76ea2f22a037ede8fd731af837301c8e141f4a3","url":"https://github.com/wildfly/wildfly"},{"original_method":"@Override\n    public void setManager(Manager manager) {\n        this.manager = manager;\n    }","id":55921,"modified_method":"@Override\n    public void setManager(Manager manager) {\n        // Do nothing\n    }","commit_id":"c76ea2f22a037ede8fd731af837301c8e141f4a3","url":"https://github.com/wildfly/wildfly"},{"original_method":"public SessionFacade(Session<LocalSessionContext> session) {\n        this.session = session;\n    }","id":55922,"modified_method":"public SessionFacade(Manager manager, Session<LocalSessionContext> session, String internalId, Batcher batcher) {\n        this.manager = manager;\n        this.session = session;\n        this.internalId = internalId;\n        this.batcher = batcher;\n    }","commit_id":"c76ea2f22a037ede8fd731af837301c8e141f4a3","url":"https://github.com/wildfly/wildfly"},{"original_method":"@Override\n    public void endAccess() {\n        this.session.close();\n    }","id":55923,"modified_method":"@Override\n    public void endAccess() {\n        this.session.close();\n        this.batcher.endBatch(true);\n    }","commit_id":"c76ea2f22a037ede8fd731af837301c8e141f4a3","url":"https://github.com/wildfly/wildfly"},{"original_method":"@Override\n    public String getIdInternal() {\n        return this.getId();\n    }","id":55924,"modified_method":"@Override\n    public String getIdInternal() {\n        return this.internalId;\n    }","commit_id":"c76ea2f22a037ede8fd731af837301c8e141f4a3","url":"https://github.com/wildfly/wildfly"},{"original_method":"/** {@inheritDoc} */\n    public synchronized void start(StartContext context) throws StartException {\n        final StandardHost host = new StandardHost();\n        host.setAppBase(pathManagerInjector.getValue().getPathEntry(tempPathName).resolvePath());\n        host.setName(name);\n        for(final String alias : aliases) {\n            host.addAlias(alias);\n        }\n        if(accessLog != null) {\n            host.addValve(createAccessLogValve(pathManagerInjector.getValue().resolveRelativePathEntry(accessLogPath, accessLogRelativeTo), accessLog));\n            callbackHandle = pathManagerInjector.getValue().registerCallback(accessLogRelativeTo, PathManager.ReloadServerCallback.create(), PathManager.Event.UPDATED, PathManager.Event.REMOVED);\n        }\n        if(rewrite != null) {\n            host.addValve(createRewriteValve(host, rewrite));\n        }\n        if(sso != null) {\n            host.addValve(createSsoValve(host, sso));\n        }\n        if (defaultWebModule != null) {\n            host.setDefaultWebapp(defaultWebModule);\n        }\n        try {\n            final WebServer server = webServer.getValue();\n            server.addHost(host);\n        } catch(Exception e) {\n            throw new StartException(e);\n        }\n        this.host = new VirtualHost(host, hasWelcomeRoot);\n\n    }","id":55925,"modified_method":"/** {@inheritDoc} */\n    public synchronized void start(StartContext context) throws StartException {\n        final StandardHost host = new StandardHost();\n        host.setAppBase(pathManagerInjector.getValue().getPathEntry(tempPathName).resolvePath());\n        host.setName(name);\n        for(final String alias : aliases) {\n            host.addAlias(alias);\n        }\n        if(accessLog != null) {\n            host.addValve(createAccessLogValve(pathManagerInjector.getValue().resolveRelativePathEntry(accessLogPath, accessLogRelativeTo), accessLog));\n            callbackHandle = pathManagerInjector.getValue().registerCallback(accessLogRelativeTo, PathManager.ReloadServerCallback.create(), PathManager.Event.UPDATED, PathManager.Event.REMOVED);\n        }\n        if(rewrite != null) {\n            host.addValve(createRewriteValve(host, rewrite));\n        }\n        if(sso != null) {\n            host.addValve(createSsoValve(host, sso));\n        }\n        if (defaultWebModule != null) {\n            host.setDefaultWebapp(defaultWebModule);\n        }\n        host.addValve(new ThreadLocalRequestValve());\n        try {\n            final WebServer server = webServer.getValue();\n            server.addHost(host);\n        } catch(Exception e) {\n            throw new StartException(e);\n        }\n        this.host = new VirtualHost(host, hasWelcomeRoot);\n\n    }","commit_id":"c76ea2f22a037ede8fd731af837301c8e141f4a3","url":"https://github.com/wildfly/wildfly"},{"original_method":"@Override\n    protected SessionID openSession(final EJBReceiverContext ejbReceiverContext, final String appName, final String moduleName, final String distinctName, final String beanName) throws Exception {\n        final EjbDeploymentInformation ejbInfo = findBean(appName, moduleName, distinctName, beanName);\n        final EJBComponent component = ejbInfo.getEjbComponent();\n        if (component instanceof StatefulSessionComponent) {\n            final StatefulSessionComponent stateful = (StatefulSessionComponent) component;\n            return stateful.createSession();\n        } else {\n            throw new IllegalArgumentException(\"EJB \" + beanName + \" is not a Stateful Session bean in app: \" + appName + \" module: \" + moduleName + \" distinct name:\" + distinctName);\n        }\n    }","id":55926,"modified_method":"@Override\n    protected <T> StatefulEJBLocator<T> openSession(EJBReceiverContext context, Class<T> viewType, String appName, String moduleName, String distinctName, String beanName) throws Exception {\n        final EjbDeploymentInformation ejbInfo = findBean(appName, moduleName, distinctName, beanName);\n        final EJBComponent component = ejbInfo.getEjbComponent();\n        if (!(component instanceof StatefulSessionComponent)) {\n            throw new IllegalArgumentException(\"EJB \" + beanName + \" is not a Stateful Session bean in app: \" + appName + \" module: \" + moduleName + \" distinct name:\" + distinctName);\n        }\n        final StatefulSessionComponent stateful = (StatefulSessionComponent) component;\n        final SessionID sessionID = stateful.createSession();\n        return new StatefulEJBLocator<T>(viewType, appName, moduleName, beanName, distinctName, sessionID);\n    }","commit_id":"59d4ce69e3c538e154717d071b801892f5092ed8","url":"https://github.com/wildfly/wildfly"},{"original_method":"@Override\n    public ManagedReference getReference() {\n        final ClassLoader tccl = SecurityActions.getContextClassLoader();\n        final Class<?> viewClass;\n        try {\n            viewClass = Class.forName(this.viewClass, false, tccl);\n        } catch (ClassNotFoundException e) {\n            throw MESSAGES.failToLoadViewClassEjb(beanName, e);\n        }\n        EJBLocator ejbLocator = null;\n        if (EJBHome.class.isAssignableFrom(viewClass) || EJBLocalHome.class.isAssignableFrom(viewClass)) {\n            ejbLocator = new EJBHomeLocator(viewClass, appName, moduleName, beanName, distinctName);\n        } else if (stateful) {\n            final SessionID sessionID;\n            try {\n                sessionID = EJBClient.createSession(appName, moduleName, beanName, distinctName);\n            } catch (Exception e) {\n                throw new RuntimeException(e);\n            }\n            ejbLocator = new StatefulEJBLocator(viewClass, appName, moduleName, beanName, distinctName, sessionID);\n        } else {\n            ejbLocator = new StatelessEJBLocator(viewClass, appName, moduleName, beanName, distinctName);\n        }\n        final Object proxy = EJBClient.createProxy(ejbLocator);\n\n        return new ValueManagedReference(new ImmediateValue<Object>(proxy));\n    }","id":55927,"modified_method":"@Override\n    public ManagedReference getReference() {\n        final ClassLoader tccl = SecurityActions.getContextClassLoader();\n        final Class<?> viewClass;\n        try {\n            viewClass = Class.forName(this.viewClass, false, tccl);\n        } catch (ClassNotFoundException e) {\n            throw MESSAGES.failToLoadViewClassEjb(beanName, e);\n        }\n        EJBLocator ejbLocator = null;\n        if (EJBHome.class.isAssignableFrom(viewClass) || EJBLocalHome.class.isAssignableFrom(viewClass)) {\n            ejbLocator = new EJBHomeLocator(viewClass, appName, moduleName, beanName, distinctName);\n        } else if (stateful) {\n            try {\n                ejbLocator = EJBClient.createSession(viewClass, appName, moduleName, beanName, distinctName);\n            } catch (Exception e) {\n                throw new RuntimeException(e);\n            }\n        } else {\n            ejbLocator = new StatelessEJBLocator(viewClass, appName, moduleName, beanName, distinctName);\n        }\n        final Object proxy = EJBClient.createProxy(ejbLocator);\n\n        return new ValueManagedReference(new ImmediateValue<Object>(proxy));\n    }","commit_id":"59d4ce69e3c538e154717d071b801892f5092ed8","url":"https://github.com/wildfly/wildfly"},{"original_method":"@Override\n    public ManagedReference createViewInstance(final ComponentView componentView, final Map<Object, Object> contextData) throws Exception {\n        SessionID sessionID = (SessionID) contextData.get(SessionID.class);\n        if(sessionID == null) {\n            sessionID = EJBClient.createSession(applicationName, moduleName, beanName, distinctName);\n        }\n        Object value = EJBClient.createProxy(new StatefulEJBLocator(componentView.getViewClass(), applicationName, moduleName, beanName, distinctName, sessionID));\n        return new ValueManagedReference(new ImmediateValue(value));\n    }","id":55928,"modified_method":"@Override\n    public ManagedReference createViewInstance(final ComponentView componentView, final Map<Object, Object> contextData) throws Exception {\n        SessionID sessionID = (SessionID) contextData.get(SessionID.class);\n        final StatefulEJBLocator statefulEJBLocator;\n        if (sessionID == null) {\n            statefulEJBLocator = EJBClient.createSession(componentView.getViewClass(), applicationName, moduleName, beanName, distinctName);\n        } else {\n            statefulEJBLocator = new StatefulEJBLocator(componentView.getViewClass(), applicationName, moduleName, beanName, distinctName, sessionID);\n        }\n        final Object ejbProxy = EJBClient.createProxy(statefulEJBLocator);\n        return new ValueManagedReference(new ImmediateValue(ejbProxy));\n    }","commit_id":"59d4ce69e3c538e154717d071b801892f5092ed8","url":"https://github.com/wildfly/wildfly"},{"original_method":"/**\n     * @return true if the web service is functioning correctly\n     */\n    protected boolean isWebServiceOnline()\n    {\n        logger.debug(\"Verifying that the web service is on-line...\");\n        \n        BufferedReader input = null;\n        try \n        {\n            input = new BufferedReader(new InputStreamReader(new URL(TEST_URL).openStream()));\n\n            String response = \"\";\n            String line;\n            while ((line = input.readLine()) != null) \n            {\n                response += line;\n            }\n\n            if (StringUtils.containsIgnoreCase(response, \"Cisco\"))\n            {\n                return true;\n            }\n            else\n            {\n                logger.warn(\"Unexpected response, web service does not seem to be on-line: \\n\" + response);\n                return false;\n            }\n        } \n        catch (Exception e) \n        {\n            logger.warn(\"Exception occurred, web service does not seem to be on-line: \" + e);\n            return false;\n        } \n        finally\n        {\n            if (input != null)\n            {\n                try\n                {\n                    input.close();\n                }\n                catch (IOException ioe) {}\n            }\n        }\n    }","id":55929,"modified_method":"/**\n     * @return true if the web service is functioning correctly\n     */\n    protected boolean isWebServiceOnline()\n    {\n        logger.debug(\"Verifying that the web service is on-line...\");\n        \n        BufferedReader input = null;\n        try \n        {\n            URLConnection conn = new URL(TEST_URL).openConnection();\n            // setting these timeouts ensures the client does not deadlock indefinitely\n            // when the server has problems.\n            conn.setConnectTimeout(AbstractMuleTestCase.RECEIVE_TIMEOUT);\n            conn.setReadTimeout(AbstractMuleTestCase.RECEIVE_TIMEOUT);\n            InputStream in = conn.getInputStream();\n\n            input = new BufferedReader(new InputStreamReader(in));            \n\n            String response = \"\";\n            String line;\n            while ((line = input.readLine()) != null) \n            {\n                response += line;\n            }\n\n            if (StringUtils.containsIgnoreCase(response, \"Cisco\"))\n            {\n                return true;\n            }\n            else\n            {\n                logger.warn(\"Unexpected response, web service does not seem to be on-line: \\n\" + response);\n                return false;\n            }\n        } \n        catch (Exception e) \n        {\n            logger.warn(\"Exception occurred, web service does not seem to be on-line: \" + e);\n            return false;\n        } \n        finally\n        {\n            if (input != null)\n            {\n                try\n                {\n                    input.close();\n                }\n                catch (IOException ioe) {}\n            }\n        }\n    }","commit_id":"9d67443d84e4e1414d3a5e18c480845e055f8d5c","url":"https://github.com/mulesoft/mule"},{"original_method":"/**\n     * @return true if the web service is functioning correctly\n     */\n    protected boolean isWebServiceOnline()\n    {\n        logger.debug(\"Verifying that the web service is on-line...\");\n        \n        BufferedReader input = null;\n        try \n        {\n            input = new BufferedReader(new InputStreamReader(new URL(TEST_URL).openStream()));\n\n            String response = \"\";\n            String line;\n            while ((line = input.readLine()) != null) \n            {\n                response += line;\n            }\n\n            if (StringUtils.containsIgnoreCase(response, \"Cisco\"))\n            {\n                return true;\n            }\n            else\n            {\n                logger.warn(\"Unexpected response, web service does not seem to be on-line: \\n\" + response);\n                return false;\n            }\n        } \n        catch (Exception e) \n        {\n            logger.warn(\"Exception occurred, web service does not seem to be on-line: \" + e);\n            return false;\n        } \n        finally\n        {\n            if (input != null)\n            {\n                try\n                {\n                    input.close();\n                }\n                catch (IOException ioe) {}\n            }\n        }\n    }","id":55930,"modified_method":"/**\n     * @return true if the web service is functioning correctly\n     */\n    protected boolean isWebServiceOnline()\n    {\n        logger.debug(\"Verifying that the web service is on-line...\");\n        \n        BufferedReader input = null;\n        try \n        {\n            URLConnection conn = new URL(TEST_URL).openConnection();\n            // setting these timeouts ensures the client does not deadlock indefinitely\n            // when the server has problems.\n            conn.setConnectTimeout(AbstractMuleTestCase.RECEIVE_TIMEOUT);\n            conn.setReadTimeout(AbstractMuleTestCase.RECEIVE_TIMEOUT);\n            InputStream in = conn.getInputStream();\n\n            input = new BufferedReader(new InputStreamReader(in));\n\n            String response = \"\";\n            String line;\n            while ((line = input.readLine()) != null) \n            {\n                response += line;\n            }\n\n            if (StringUtils.containsIgnoreCase(response, \"Cisco\"))\n            {\n                return true;\n            }\n            else\n            {\n                logger.warn(\"Unexpected response, web service does not seem to be on-line: \\n\" + response);\n                return false;\n            }\n        } \n        catch (Exception e) \n        {\n            logger.warn(\"Exception occurred, web service does not seem to be on-line: \" + e);\n            return false;\n        } \n        finally\n        {\n            if (input != null)\n            {\n                try\n                {\n                    input.close();\n                }\n                catch (IOException ioe) {}\n            }\n        }\n    }","commit_id":"9d67443d84e4e1414d3a5e18c480845e055f8d5c","url":"https://github.com/mulesoft/mule"},{"original_method":"public void load() throws IOException {\n        try {\n            repositories = new ArrayList<URI>();\n            features = new ArrayList<Feature>();\n            DocumentBuilderFactory factory = DocumentBuilderFactory.newInstance();\n            Document doc = factory.newDocumentBuilder().parse(uri.toURL().openStream());\n            NodeList nodes = doc.getDocumentElement().getChildNodes();\n            for (int i = 0; i < nodes.getLength(); i++) {\n                Node node = nodes.item(i);\n                if (!(node instanceof Element)) {\n                    continue;\n                }\n                if (\"repository\".equals(node.getNodeName())) {\n                    Element e = (Element) nodes.item(i);\n                    repositories.add(new URI(e.getTextContent()));\n                } else if (\"feature\".equals(node.getNodeName())) {\n                    Element e = (Element) nodes.item(i);\n                    String name = e.getAttribute(\"name\");\n                    String version = e.getAttribute(\"version\");\n                    FeatureImpl f;\n                    if (version != null && version.length() > 0) {\n                        f = new FeatureImpl(name, version);\n                    } else {\n                        f = new FeatureImpl(name);\n                    }\n\n                    NodeList featureNodes = e.getElementsByTagName(\"feature\");\n                    for (int j = 0; j < featureNodes.getLength(); j++) {\n                        Element b = (Element) featureNodes.item(j);\n                        String dependencyFeatureVersion = b.getAttribute(\"version\");\n                        if (dependencyFeatureVersion != null && dependencyFeatureVersion.length() > 0) {\n                        \tf.addDependency(new FeatureImpl(b.getTextContent(), dependencyFeatureVersion));\n                        } else {\n                        \tf.addDependency(new FeatureImpl(b.getTextContent()));\n                        }\n                    }\n                    NodeList configNodes = e.getElementsByTagName(\"config\");\n                    for (int j = 0; j < configNodes.getLength(); j++) {\n                        Element c = (Element) configNodes.item(j);\n                        String cfgName = c.getAttribute(\"name\");\n                        String data = c.getTextContent();\n                        Properties properties = new Properties();\n                        properties.load(new ByteArrayInputStream(data.getBytes()));\n                        interpolation(properties);\n                        Map<String, String> hashtable = new Hashtable<String, String>();\n                        for (Object key : properties.keySet()) {\n                            String n = key.toString();\n                            hashtable.put(n, properties.getProperty(n));\n                        }\n                        f.addConfig(cfgName, hashtable);\n                    }\n                    NodeList bundleNodes = e.getElementsByTagName(\"bundle\");\n                    for (int j = 0; j < bundleNodes.getLength(); j++) {\n                        Element b = (Element) bundleNodes.item(j);\n                        f.addBundle(b.getTextContent());\n                    }\n                    features.add(f);\n                }\n            }\n        } catch (SAXException e) {\n            throw (IOException) new IOException().initCause(e);\n        } catch (ParserConfigurationException e) {\n            throw (IOException) new IOException().initCause(e);\n        } catch (URISyntaxException e) {\n            throw (IOException) new IOException(e.getMessage() + \" : \" + uri).initCause(e);\n        } catch (IllegalArgumentException e) {\n            throw (IOException) new IOException(e.getMessage() + \" : \" + uri).initCause(e);\n        }\n    }","id":55931,"modified_method":"public void load() throws IOException {\n        try {\n            repositories = new ArrayList<URI>();\n            features = new ArrayList<Feature>();\n            DocumentBuilderFactory factory = DocumentBuilderFactory.newInstance();\n            URLConnection conn = uri.toURL().openConnection();\n            conn.setDefaultUseCaches(false);\n            Document doc = factory.newDocumentBuilder().parse(conn.getInputStream());\n            \n            NodeList nodes = doc.getDocumentElement().getChildNodes();\n            for (int i = 0; i < nodes.getLength(); i++) {\n                Node node = nodes.item(i);\n                if (!(node instanceof Element)) {\n                    continue;\n                }\n                if (\"repository\".equals(node.getNodeName())) {\n                    Element e = (Element) nodes.item(i);\n                    repositories.add(new URI(e.getTextContent()));\n                } else if (\"feature\".equals(node.getNodeName())) {\n                    Element e = (Element) nodes.item(i);\n                    String name = e.getAttribute(\"name\");\n                    String version = e.getAttribute(\"version\");\n                    FeatureImpl f;\n                    if (version != null && version.length() > 0) {\n                        f = new FeatureImpl(name, version);\n                    } else {\n                        f = new FeatureImpl(name);\n                    }\n\n                    NodeList featureNodes = e.getElementsByTagName(\"feature\");\n                    for (int j = 0; j < featureNodes.getLength(); j++) {\n                        Element b = (Element) featureNodes.item(j);\n                        String dependencyFeatureVersion = b.getAttribute(\"version\");\n                        if (dependencyFeatureVersion != null && dependencyFeatureVersion.length() > 0) {\n                        \tf.addDependency(new FeatureImpl(b.getTextContent(), dependencyFeatureVersion));\n                        } else {\n                        \tf.addDependency(new FeatureImpl(b.getTextContent()));\n                        }\n                    }\n                    NodeList configNodes = e.getElementsByTagName(\"config\");\n                    for (int j = 0; j < configNodes.getLength(); j++) {\n                        Element c = (Element) configNodes.item(j);\n                        String cfgName = c.getAttribute(\"name\");\n                        String data = c.getTextContent();\n                        Properties properties = new Properties();\n                        properties.load(new ByteArrayInputStream(data.getBytes()));\n                        interpolation(properties);\n                        Map<String, String> hashtable = new Hashtable<String, String>();\n                        for (Object key : properties.keySet()) {\n                            String n = key.toString();\n                            hashtable.put(n, properties.getProperty(n));\n                        }\n                        f.addConfig(cfgName, hashtable);\n                    }\n                    NodeList bundleNodes = e.getElementsByTagName(\"bundle\");\n                    for (int j = 0; j < bundleNodes.getLength(); j++) {\n                        Element b = (Element) bundleNodes.item(j);\n                        f.addBundle(b.getTextContent());\n                    }\n                    features.add(f);\n                }\n            }\n        } catch (SAXException e) {\n            throw (IOException) new IOException().initCause(e);\n        } catch (ParserConfigurationException e) {\n            throw (IOException) new IOException().initCause(e);\n        } catch (URISyntaxException e) {\n            throw (IOException) new IOException(e.getMessage() + \" : \" + uri).initCause(e);\n        } catch (IllegalArgumentException e) {\n            throw (IOException) new IOException(e.getMessage() + \" : \" + uri).initCause(e);\n        }\n    }","commit_id":"7751deea90968dc445c948e0892b94cd194486a9","url":"https://github.com/apache/felix"},{"original_method":"public EditorCell createExtendedClassReferenceCell(EditorContext context, SNode node) {\n    SNode effectiveNode = null;\n    effectiveNode = node.getReferent(\"extendedClass\");\n    LinkDeclaration linkDeclaration = SModelUtil.getLinkDeclaration(node, \"extendedClass\", context.getOperationContext().getScope());\n    SReference reference = node.getReference(\"extendedClass\");\n    if(reference != null && !(reference.isResolved())) {\n      EditorCell_Error noRefCell = EditorCell_Error.create(context, node, BadReferenceTextProvider.getBadReferenceText(reference));\n      noRefCell.setEditable(true);\n      noRefCell.setDrawBrackets(false);\n      noRefCell.setBracketsColor(Color.black);\n      noRefCell.putUserObject(EditorCell.METAINFO_LINK_DECLARATION, linkDeclaration);\n      noRefCell.putUserObject(EditorCell.METAINFO_SOURCE_NODE, node);\n      noRefCell.setAction(EditorCellAction.DELETE, new CellAction_Empty());\n      noRefCell.setSubstituteInfo(new DefaultReferenceSubstituteInfo(node, linkDeclaration, context));\n      noRefCell.putUserObject(EditorCell.CELL_ID, \"1088354561031\");\n      noRefCell.putUserObject(EditorCell.ROLE, \"extendedClass\");\n      return noRefCell;\n    }\n    if(effectiveNode == null) {\n      {\n        EditorCell_Constant noRefCell = EditorCell_Constant.create(context, node, null, true);\n        noRefCell.setDefaultText(\"<none>\");\n        noRefCell.setEditable(true);\n        noRefCell.setDrawBrackets(false);\n        noRefCell.setBracketsColor(Color.black);\n        noRefCell.putUserObject(EditorCell.METAINFO_LINK_DECLARATION, linkDeclaration);\n        noRefCell.putUserObject(EditorCell.METAINFO_SOURCE_NODE, node);\n        noRefCell.setAction(EditorCellAction.DELETE, new CellAction_Empty());\n        noRefCell.setSubstituteInfo(new DefaultReferenceSubstituteInfo(node, linkDeclaration, context));\n        noRefCell.putUserObject(EditorCell.CELL_ID, \"1088354561031\");\n        noRefCell.putUserObject(EditorCell.ROLE, \"extendedClass\");\n        return noRefCell;\n      }\n    }\n    AbstractCellProvider inlineComponent = new ClassConcept_Editor_extendedClass_InlineComponent(effectiveNode);\n    EditorCell editorCell = inlineComponent.createEditorCell(context);\n    EditorUtil.setSemanticNodeToCells(editorCell, node);\n    editorCell.setSelectable(true);\n    editorCell.setDrawBorder(false);\n    editorCell.setDrawBrackets(false);\n    editorCell.setBracketsColor(Color.black);\n    editorCell.putUserObject(EditorCell.METAINFO_LINK_DECLARATION, linkDeclaration);\n    editorCell.putUserObject(EditorCell.METAINFO_SOURCE_NODE, node);\n    editorCell.putUserObject(EditorCell.ROLE, \"extendedClass\");\n    editorCell.setAction(EditorCellAction.DELETE, new CellAction_DeleteReferenceToNode(node, \"extendedClass\", effectiveNode));\n    editorCell.setSubstituteInfo(new DefaultReferenceSubstituteInfo(node, linkDeclaration, context));\n    return editorCell;\n  }","id":55932,"modified_method":"public EditorCell createExtendedClassReferenceCell(EditorContext context, SNode node) {\n    SNode effectiveNode = null;\n    effectiveNode = node.getReferent(\"extendedClass\");\n    LinkDeclaration linkDeclaration = SModelUtil.getLinkDeclaration(node, \"extendedClass\", context.getOperationContext().getScope());\n    SReference reference = node.getReference(\"extendedClass\");\n    if(reference != null && !(reference.isResolved())) {\n      EditorCell_Error noRefCell = EditorCell_Error.create(context, node, null);\n      noRefCell.setText(BadReferenceTextProvider.getBadReferenceText(reference));\n      noRefCell.setEditable(true);\n      noRefCell.setDrawBrackets(false);\n      noRefCell.setBracketsColor(Color.black);\n      noRefCell.putUserObject(EditorCell.METAINFO_LINK_DECLARATION, linkDeclaration);\n      noRefCell.putUserObject(EditorCell.METAINFO_SOURCE_NODE, node);\n      noRefCell.setAction(EditorCellAction.DELETE, new CellAction_Empty());\n      noRefCell.setSubstituteInfo(new DefaultReferenceSubstituteInfo(node, linkDeclaration, context));\n      noRefCell.putUserObject(EditorCell.CELL_ID, \"1088354561031\");\n      noRefCell.putUserObject(EditorCell.ROLE, \"extendedClass\");\n      return noRefCell;\n    }\n    if(effectiveNode == null) {\n      {\n        EditorCell_Constant noRefCell = EditorCell_Constant.create(context, node, null, true);\n        noRefCell.setDefaultText(\"<none>\");\n        noRefCell.setEditable(true);\n        noRefCell.setDrawBrackets(false);\n        noRefCell.setBracketsColor(Color.black);\n        noRefCell.putUserObject(EditorCell.METAINFO_LINK_DECLARATION, linkDeclaration);\n        noRefCell.putUserObject(EditorCell.METAINFO_SOURCE_NODE, node);\n        noRefCell.setAction(EditorCellAction.DELETE, new CellAction_Empty());\n        noRefCell.setSubstituteInfo(new DefaultReferenceSubstituteInfo(node, linkDeclaration, context));\n        noRefCell.putUserObject(EditorCell.CELL_ID, \"1088354561031\");\n        noRefCell.putUserObject(EditorCell.ROLE, \"extendedClass\");\n        return noRefCell;\n      }\n    }\n    AbstractCellProvider inlineComponent = new ClassConcept_Editor_extendedClass_InlineComponent(effectiveNode);\n    EditorCell editorCell = inlineComponent.createEditorCell(context);\n    EditorUtil.setSemanticNodeToCells(editorCell, node);\n    editorCell.setSelectable(true);\n    editorCell.setDrawBorder(false);\n    editorCell.setDrawBrackets(false);\n    editorCell.setBracketsColor(Color.black);\n    editorCell.putUserObject(EditorCell.METAINFO_LINK_DECLARATION, linkDeclaration);\n    editorCell.putUserObject(EditorCell.METAINFO_SOURCE_NODE, node);\n    editorCell.putUserObject(EditorCell.ROLE, \"extendedClass\");\n    editorCell.setAction(EditorCellAction.DELETE, new CellAction_DeleteReferenceToNode(node, \"extendedClass\", effectiveNode));\n    editorCell.setSubstituteInfo(new DefaultReferenceSubstituteInfo(node, linkDeclaration, context));\n    return editorCell;\n  }","commit_id":"8ac81ce151cbaadc05acd549a5148c7a969ab1ee","url":"https://github.com/JetBrains/MPS"},{"original_method":"public EditorCell createClassifierReferenceCell(EditorContext context, SNode node) {\n    SNode effectiveNode = null;\n    effectiveNode = node.getReferent(\"classifier\");\n    LinkDeclaration linkDeclaration = SModelUtil.getLinkDeclaration(node, \"classifier\", context.getOperationContext().getScope());\n    SReference reference = node.getReference(\"classifier\");\n    if(reference != null && !(reference.isResolved())) {\n      EditorCell_Error noRefCell = EditorCell_Error.create(context, node, BadReferenceTextProvider.getBadReferenceText(reference));\n      noRefCell.setEditable(true);\n      noRefCell.setDrawBrackets(false);\n      noRefCell.setBracketsColor(Color.black);\n      noRefCell.putUserObject(EditorCell.METAINFO_LINK_DECLARATION, linkDeclaration);\n      noRefCell.putUserObject(EditorCell.METAINFO_SOURCE_NODE, node);\n      noRefCell.setAction(EditorCellAction.DELETE, new CellAction_Empty());\n      noRefCell.setSubstituteInfo(new DefaultReferenceSubstituteInfo(node, linkDeclaration, context));\n      noRefCell.putUserObject(EditorCell.CELL_ID, \"1116615277650\");\n      noRefCell.putUserObject(EditorCell.ROLE, \"classifier\");\n      return noRefCell;\n    }\n    if(effectiveNode == null) {\n      {\n        EditorCell_Error noRefCell = EditorCell_Error.create(context, node, \"<no classifier>\");\n        noRefCell.setEditable(true);\n        noRefCell.setDrawBrackets(false);\n        noRefCell.setBracketsColor(Color.black);\n        noRefCell.putUserObject(EditorCell.METAINFO_LINK_DECLARATION, linkDeclaration);\n        noRefCell.putUserObject(EditorCell.METAINFO_SOURCE_NODE, node);\n        noRefCell.setAction(EditorCellAction.DELETE, new CellAction_Empty());\n        noRefCell.setSubstituteInfo(new DefaultReferenceSubstituteInfo(node, linkDeclaration, context));\n        noRefCell.putUserObject(EditorCell.CELL_ID, \"1116615277650\");\n        noRefCell.putUserObject(EditorCell.ROLE, \"classifier\");\n        return noRefCell;\n      }\n    }\n    AbstractCellProvider inlineComponent = new ClassifierClassExpression_Editor_classifier_InlineComponent(effectiveNode);\n    EditorCell editorCell = inlineComponent.createEditorCell(context);\n    EditorUtil.setSemanticNodeToCells(editorCell, node);\n    editorCell.setSelectable(true);\n    editorCell.setDrawBorder(false);\n    editorCell.setDrawBrackets(false);\n    editorCell.setBracketsColor(Color.black);\n    editorCell.putUserObject(EditorCell.METAINFO_LINK_DECLARATION, linkDeclaration);\n    editorCell.putUserObject(EditorCell.METAINFO_SOURCE_NODE, node);\n    editorCell.putUserObject(EditorCell.ROLE, \"classifier\");\n    editorCell.setAction(EditorCellAction.DELETE, new CellAction_Empty());\n    editorCell.setSubstituteInfo(new DefaultReferenceSubstituteInfo(node, linkDeclaration, context));\n    return editorCell;\n  }","id":55933,"modified_method":"public EditorCell createClassifierReferenceCell(EditorContext context, SNode node) {\n    SNode effectiveNode = null;\n    effectiveNode = node.getReferent(\"classifier\");\n    LinkDeclaration linkDeclaration = SModelUtil.getLinkDeclaration(node, \"classifier\", context.getOperationContext().getScope());\n    SReference reference = node.getReference(\"classifier\");\n    if(reference != null && !(reference.isResolved())) {\n      EditorCell_Error noRefCell = EditorCell_Error.create(context, node, null);\n      noRefCell.setText(BadReferenceTextProvider.getBadReferenceText(reference));\n      noRefCell.setEditable(true);\n      noRefCell.setDrawBrackets(false);\n      noRefCell.setBracketsColor(Color.black);\n      noRefCell.putUserObject(EditorCell.METAINFO_LINK_DECLARATION, linkDeclaration);\n      noRefCell.putUserObject(EditorCell.METAINFO_SOURCE_NODE, node);\n      noRefCell.setAction(EditorCellAction.DELETE, new CellAction_Empty());\n      noRefCell.setSubstituteInfo(new DefaultReferenceSubstituteInfo(node, linkDeclaration, context));\n      noRefCell.putUserObject(EditorCell.CELL_ID, \"1116615277650\");\n      noRefCell.putUserObject(EditorCell.ROLE, \"classifier\");\n      return noRefCell;\n    }\n    if(effectiveNode == null) {\n      {\n        EditorCell_Error noRefCell = EditorCell_Error.create(context, node, \"<no classifier>\");\n        noRefCell.setEditable(true);\n        noRefCell.setDrawBrackets(false);\n        noRefCell.setBracketsColor(Color.black);\n        noRefCell.putUserObject(EditorCell.METAINFO_LINK_DECLARATION, linkDeclaration);\n        noRefCell.putUserObject(EditorCell.METAINFO_SOURCE_NODE, node);\n        noRefCell.setAction(EditorCellAction.DELETE, new CellAction_Empty());\n        noRefCell.setSubstituteInfo(new DefaultReferenceSubstituteInfo(node, linkDeclaration, context));\n        noRefCell.putUserObject(EditorCell.CELL_ID, \"1116615277650\");\n        noRefCell.putUserObject(EditorCell.ROLE, \"classifier\");\n        return noRefCell;\n      }\n    }\n    AbstractCellProvider inlineComponent = new ClassifierClassExpression_Editor_classifier_InlineComponent(effectiveNode);\n    EditorCell editorCell = inlineComponent.createEditorCell(context);\n    EditorUtil.setSemanticNodeToCells(editorCell, node);\n    editorCell.setSelectable(true);\n    editorCell.setDrawBorder(false);\n    editorCell.setDrawBrackets(false);\n    editorCell.setBracketsColor(Color.black);\n    editorCell.putUserObject(EditorCell.METAINFO_LINK_DECLARATION, linkDeclaration);\n    editorCell.putUserObject(EditorCell.METAINFO_SOURCE_NODE, node);\n    editorCell.putUserObject(EditorCell.ROLE, \"classifier\");\n    editorCell.setAction(EditorCellAction.DELETE, new CellAction_Empty());\n    editorCell.setSubstituteInfo(new DefaultReferenceSubstituteInfo(node, linkDeclaration, context));\n    return editorCell;\n  }","commit_id":"8ac81ce151cbaadc05acd549a5148c7a969ab1ee","url":"https://github.com/JetBrains/MPS"},{"original_method":"public EditorCell createClassifierReferenceCell(EditorContext context, SNode node) {\n    SNode effectiveNode = null;\n    effectiveNode = node.getReferent(\"classifier\");\n    LinkDeclaration linkDeclaration = SModelUtil.getLinkDeclaration(node, \"classifier\", context.getOperationContext().getScope());\n    SReference reference = node.getReference(\"classifier\");\n    if(reference != null && !(reference.isResolved())) {\n      EditorCell_Error noRefCell = EditorCell_Error.create(context, node, BadReferenceTextProvider.getBadReferenceText(reference));\n      noRefCell.setEditable(true);\n      noRefCell.setDrawBrackets(false);\n      noRefCell.setBracketsColor(Color.black);\n      noRefCell.putUserObject(EditorCell.METAINFO_LINK_DECLARATION, linkDeclaration);\n      noRefCell.putUserObject(EditorCell.METAINFO_SOURCE_NODE, node);\n      noRefCell.setAction(EditorCellAction.DELETE, new CellAction_Empty());\n      noRefCell.setSubstituteInfo(new DefaultReferenceSubstituteInfo(node, linkDeclaration, context));\n      noRefCell.addKeyMap(new _TypeKeyMap());\n      noRefCell.putUserObject(EditorCell.CELL_ID, \"1128164132330\");\n      noRefCell.putUserObject(EditorCell.ROLE, \"classifier\");\n      return noRefCell;\n    }\n    if(effectiveNode == null) {\n      {\n        EditorCell_Error noRefCell = EditorCell_Error.create(context, node, \"<no interface>\");\n        noRefCell.setEditable(true);\n        noRefCell.setDrawBrackets(false);\n        noRefCell.setBracketsColor(Color.black);\n        noRefCell.putUserObject(EditorCell.METAINFO_LINK_DECLARATION, linkDeclaration);\n        noRefCell.putUserObject(EditorCell.METAINFO_SOURCE_NODE, node);\n        noRefCell.setAction(EditorCellAction.DELETE, new CellAction_Empty());\n        noRefCell.setSubstituteInfo(new DefaultReferenceSubstituteInfo(node, linkDeclaration, context));\n        noRefCell.addKeyMap(new _TypeKeyMap());\n        noRefCell.putUserObject(EditorCell.CELL_ID, \"1128164132330\");\n        noRefCell.putUserObject(EditorCell.ROLE, \"classifier\");\n        return noRefCell;\n      }\n    }\n    AbstractCellProvider inlineComponent = new ClassifierType_Editor_classifier_InlineComponent(effectiveNode);\n    EditorCell editorCell = inlineComponent.createEditorCell(context);\n    EditorUtil.setSemanticNodeToCells(editorCell, node);\n    editorCell.setSelectable(true);\n    editorCell.setDrawBorder(false);\n    editorCell.setDrawBrackets(false);\n    editorCell.setBracketsColor(Color.black);\n    editorCell.putUserObject(EditorCell.METAINFO_LINK_DECLARATION, linkDeclaration);\n    editorCell.putUserObject(EditorCell.METAINFO_SOURCE_NODE, node);\n    editorCell.putUserObject(EditorCell.ROLE, \"classifier\");\n    editorCell.setAction(EditorCellAction.DELETE, new CellAction_Empty());\n    editorCell.setSubstituteInfo(new DefaultReferenceSubstituteInfo(node, linkDeclaration, context));\n    editorCell.addKeyMap(new _TypeKeyMap());\n    return editorCell;\n  }","id":55934,"modified_method":"public EditorCell createClassifierReferenceCell(EditorContext context, SNode node) {\n    SNode effectiveNode = null;\n    effectiveNode = node.getReferent(\"classifier\");\n    LinkDeclaration linkDeclaration = SModelUtil.getLinkDeclaration(node, \"classifier\", context.getOperationContext().getScope());\n    SReference reference = node.getReference(\"classifier\");\n    if(reference != null && !(reference.isResolved())) {\n      EditorCell_Error noRefCell = EditorCell_Error.create(context, node, null);\n      noRefCell.setText(BadReferenceTextProvider.getBadReferenceText(reference));\n      noRefCell.setEditable(true);\n      noRefCell.setDrawBrackets(false);\n      noRefCell.setBracketsColor(Color.black);\n      noRefCell.putUserObject(EditorCell.METAINFO_LINK_DECLARATION, linkDeclaration);\n      noRefCell.putUserObject(EditorCell.METAINFO_SOURCE_NODE, node);\n      noRefCell.setAction(EditorCellAction.DELETE, new CellAction_Empty());\n      noRefCell.setSubstituteInfo(new DefaultReferenceSubstituteInfo(node, linkDeclaration, context));\n      noRefCell.addKeyMap(new _TypeKeyMap());\n      noRefCell.putUserObject(EditorCell.CELL_ID, \"1128164132330\");\n      noRefCell.putUserObject(EditorCell.ROLE, \"classifier\");\n      return noRefCell;\n    }\n    if(effectiveNode == null) {\n      {\n        EditorCell_Error noRefCell = EditorCell_Error.create(context, node, \"<no interface>\");\n        noRefCell.setEditable(true);\n        noRefCell.setDrawBrackets(false);\n        noRefCell.setBracketsColor(Color.black);\n        noRefCell.putUserObject(EditorCell.METAINFO_LINK_DECLARATION, linkDeclaration);\n        noRefCell.putUserObject(EditorCell.METAINFO_SOURCE_NODE, node);\n        noRefCell.setAction(EditorCellAction.DELETE, new CellAction_Empty());\n        noRefCell.setSubstituteInfo(new DefaultReferenceSubstituteInfo(node, linkDeclaration, context));\n        noRefCell.addKeyMap(new _TypeKeyMap());\n        noRefCell.putUserObject(EditorCell.CELL_ID, \"1128164132330\");\n        noRefCell.putUserObject(EditorCell.ROLE, \"classifier\");\n        return noRefCell;\n      }\n    }\n    AbstractCellProvider inlineComponent = new ClassifierType_Editor_classifier_InlineComponent(effectiveNode);\n    EditorCell editorCell = inlineComponent.createEditorCell(context);\n    EditorUtil.setSemanticNodeToCells(editorCell, node);\n    editorCell.setSelectable(true);\n    editorCell.setDrawBorder(false);\n    editorCell.setDrawBrackets(false);\n    editorCell.setBracketsColor(Color.black);\n    editorCell.putUserObject(EditorCell.METAINFO_LINK_DECLARATION, linkDeclaration);\n    editorCell.putUserObject(EditorCell.METAINFO_SOURCE_NODE, node);\n    editorCell.putUserObject(EditorCell.ROLE, \"classifier\");\n    editorCell.setAction(EditorCellAction.DELETE, new CellAction_Empty());\n    editorCell.setSubstituteInfo(new DefaultReferenceSubstituteInfo(node, linkDeclaration, context));\n    editorCell.addKeyMap(new _TypeKeyMap());\n    return editorCell;\n  }","commit_id":"8ac81ce151cbaadc05acd549a5148c7a969ab1ee","url":"https://github.com/JetBrains/MPS"},{"original_method":"public EditorCell createEnumConstantDeclarationReferenceCell(EditorContext context, SNode node) {\n    SNode effectiveNode = null;\n    effectiveNode = node.getReferent(\"enumConstantDeclaration\");\n    LinkDeclaration linkDeclaration = SModelUtil.getLinkDeclaration(node, \"enumConstantDeclaration\", context.getOperationContext().getScope());\n    SReference reference = node.getReference(\"enumConstantDeclaration\");\n    if(reference != null && !(reference.isResolved())) {\n      EditorCell_Error noRefCell = EditorCell_Error.create(context, node, BadReferenceTextProvider.getBadReferenceText(reference));\n      noRefCell.setEditable(true);\n      noRefCell.setDrawBrackets(false);\n      noRefCell.setBracketsColor(Color.black);\n      noRefCell.putUserObject(EditorCell.METAINFO_LINK_DECLARATION, linkDeclaration);\n      noRefCell.putUserObject(EditorCell.METAINFO_SOURCE_NODE, node);\n      noRefCell.setAction(EditorCellAction.DELETE, new CellAction_Empty());\n      noRefCell.setSubstituteInfo(new DefaultReferenceSubstituteInfo(node, linkDeclaration, context));\n      EnumConstantReference_ConstantNameActions.setCellActions(noRefCell, node, context);\n      noRefCell.putUserObject(EditorCell.CELL_ID, \"1090928601379\");\n      noRefCell.putUserObject(EditorCell.ROLE, \"enumConstantDeclaration\");\n      return noRefCell;\n    }\n    if(effectiveNode == null) {\n      {\n        EditorCell_Error noRefCell = EditorCell_Error.create(context, node, \"\");\n        noRefCell.setEditable(true);\n        noRefCell.setDrawBrackets(false);\n        noRefCell.setBracketsColor(Color.black);\n        noRefCell.putUserObject(EditorCell.METAINFO_LINK_DECLARATION, linkDeclaration);\n        noRefCell.putUserObject(EditorCell.METAINFO_SOURCE_NODE, node);\n        noRefCell.setAction(EditorCellAction.DELETE, new CellAction_Empty());\n        noRefCell.setSubstituteInfo(new DefaultReferenceSubstituteInfo(node, linkDeclaration, context));\n        EnumConstantReference_ConstantNameActions.setCellActions(noRefCell, node, context);\n        noRefCell.putUserObject(EditorCell.CELL_ID, \"1090928601379\");\n        noRefCell.putUserObject(EditorCell.ROLE, \"enumConstantDeclaration\");\n        return noRefCell;\n      }\n    }\n    AbstractCellProvider inlineComponent = new EnumConstantReference_Editor_enumConstantDeclaration_InlineComponent(effectiveNode);\n    EditorCell editorCell = inlineComponent.createEditorCell(context);\n    EditorUtil.setSemanticNodeToCells(editorCell, node);\n    editorCell.setSelectable(true);\n    editorCell.setDrawBorder(false);\n    editorCell.setDrawBrackets(false);\n    editorCell.setBracketsColor(Color.black);\n    editorCell.putUserObject(EditorCell.METAINFO_LINK_DECLARATION, linkDeclaration);\n    editorCell.putUserObject(EditorCell.METAINFO_SOURCE_NODE, node);\n    editorCell.putUserObject(EditorCell.ROLE, \"enumConstantDeclaration\");\n    editorCell.setAction(EditorCellAction.DELETE, new CellAction_Empty());\n    editorCell.setSubstituteInfo(new DefaultReferenceSubstituteInfo(node, linkDeclaration, context));\n    EnumConstantReference_ConstantNameActions.setCellActions(editorCell, node, context);\n    return editorCell;\n  }","id":55935,"modified_method":"public EditorCell createEnumConstantDeclarationReferenceCell(EditorContext context, SNode node) {\n    SNode effectiveNode = null;\n    effectiveNode = node.getReferent(\"enumConstantDeclaration\");\n    LinkDeclaration linkDeclaration = SModelUtil.getLinkDeclaration(node, \"enumConstantDeclaration\", context.getOperationContext().getScope());\n    SReference reference = node.getReference(\"enumConstantDeclaration\");\n    if(reference != null && !(reference.isResolved())) {\n      EditorCell_Error noRefCell = EditorCell_Error.create(context, node, null);\n      noRefCell.setText(BadReferenceTextProvider.getBadReferenceText(reference));\n      noRefCell.setEditable(true);\n      noRefCell.setDrawBrackets(false);\n      noRefCell.setBracketsColor(Color.black);\n      noRefCell.putUserObject(EditorCell.METAINFO_LINK_DECLARATION, linkDeclaration);\n      noRefCell.putUserObject(EditorCell.METAINFO_SOURCE_NODE, node);\n      noRefCell.setAction(EditorCellAction.DELETE, new CellAction_Empty());\n      noRefCell.setSubstituteInfo(new DefaultReferenceSubstituteInfo(node, linkDeclaration, context));\n      EnumConstantReference_ConstantNameActions.setCellActions(noRefCell, node, context);\n      noRefCell.putUserObject(EditorCell.CELL_ID, \"1090928601379\");\n      noRefCell.putUserObject(EditorCell.ROLE, \"enumConstantDeclaration\");\n      return noRefCell;\n    }\n    if(effectiveNode == null) {\n      {\n        EditorCell_Error noRefCell = EditorCell_Error.create(context, node, \"\");\n        noRefCell.setEditable(true);\n        noRefCell.setDrawBrackets(false);\n        noRefCell.setBracketsColor(Color.black);\n        noRefCell.putUserObject(EditorCell.METAINFO_LINK_DECLARATION, linkDeclaration);\n        noRefCell.putUserObject(EditorCell.METAINFO_SOURCE_NODE, node);\n        noRefCell.setAction(EditorCellAction.DELETE, new CellAction_Empty());\n        noRefCell.setSubstituteInfo(new DefaultReferenceSubstituteInfo(node, linkDeclaration, context));\n        EnumConstantReference_ConstantNameActions.setCellActions(noRefCell, node, context);\n        noRefCell.putUserObject(EditorCell.CELL_ID, \"1090928601379\");\n        noRefCell.putUserObject(EditorCell.ROLE, \"enumConstantDeclaration\");\n        return noRefCell;\n      }\n    }\n    AbstractCellProvider inlineComponent = new EnumConstantReference_Editor_enumConstantDeclaration_InlineComponent(effectiveNode);\n    EditorCell editorCell = inlineComponent.createEditorCell(context);\n    EditorUtil.setSemanticNodeToCells(editorCell, node);\n    editorCell.setSelectable(true);\n    editorCell.setDrawBorder(false);\n    editorCell.setDrawBrackets(false);\n    editorCell.setBracketsColor(Color.black);\n    editorCell.putUserObject(EditorCell.METAINFO_LINK_DECLARATION, linkDeclaration);\n    editorCell.putUserObject(EditorCell.METAINFO_SOURCE_NODE, node);\n    editorCell.putUserObject(EditorCell.ROLE, \"enumConstantDeclaration\");\n    editorCell.setAction(EditorCellAction.DELETE, new CellAction_Empty());\n    editorCell.setSubstituteInfo(new DefaultReferenceSubstituteInfo(node, linkDeclaration, context));\n    EnumConstantReference_ConstantNameActions.setCellActions(editorCell, node, context);\n    return editorCell;\n  }","commit_id":"8ac81ce151cbaadc05acd549a5148c7a969ab1ee","url":"https://github.com/JetBrains/MPS"},{"original_method":"private static String getExtResolveInfoForClassFields(VariableDeclaration variableDeclaration) {\n    ClassConcept classConcept = (ClassConcept) variableDeclaration.getParent();\n    String classExtResolveInfo = getExtResolveInfoForTargetClassGenericDeclaration(classConcept);\n\n    String name = variableDeclaration.getName();\n    String conceptName = variableDeclaration.getConceptName();\n\n    String myExtResolveInfo = \"[\" + conceptName + \"]\" + name + \" : \";\n    ITypeChecker typeChecker = TypeCheckerAccess.getTypeChecker();\n    TSStatus tSStatus = typeChecker.adaptNode(variableDeclaration.getType());\n    ITypeObject typeObject = tSStatus.getTypeObject();\n    myExtResolveInfo+= \"(\" + typeObject.getTypeName() + \"/\" + typeObject.getSignature() + \")\";\n\n    return \"(\"+ classExtResolveInfo + \").\" + \"(\" + myExtResolveInfo + \")\";\n  }","id":55936,"modified_method":"private static String getExtResolveInfoForClassFields(VariableDeclaration variableDeclaration) {\n    Classifier classConcept = (Classifier) variableDeclaration.getParent();\n    String classExtResolveInfo = getExtResolveInfoForTargetClassGenericDeclaration(classConcept);\n\n    String name = variableDeclaration.getName();\n    String conceptName = variableDeclaration.getConceptName();\n\n    String myExtResolveInfo = \"[\" + conceptName + \"]\" + name + \" : \";\n    ITypeChecker typeChecker = TypeCheckerAccess.getTypeChecker();\n    TSStatus tSStatus = typeChecker.adaptNode(variableDeclaration.getType());\n    ITypeObject typeObject = tSStatus.getTypeObject();\n    //test\n    if(typeObject == null) {\n       typeChecker.adaptNode(variableDeclaration.getType());\n    }\n    //test\n    \n    myExtResolveInfo+= \"(\" + typeObject.getTypeName() + \"/\" + typeObject.getSignature() + \")\";\n\n    return \"(\"+ classExtResolveInfo + \").\" + \"(\" + myExtResolveInfo + \")\";\n  }","commit_id":"8ac81ce151cbaadc05acd549a5148c7a969ab1ee","url":"https://github.com/JetBrains/MPS"},{"original_method":"public EditorCell createVariableDeclarationReferenceCell(EditorContext context, SNode node) {\n    SNode effectiveNode = null;\n    effectiveNode = node.getReferent(\"variableDeclaration\");\n    LinkDeclaration linkDeclaration = SModelUtil.getLinkDeclaration(node, \"variableDeclaration\", context.getOperationContext().getScope());\n    SReference reference = node.getReference(\"variableDeclaration\");\n    if(reference != null && !(reference.isResolved())) {\n      EditorCell_Error noRefCell = EditorCell_Error.create(context, node, BadReferenceTextProvider.getBadReferenceText(reference));\n      noRefCell.setEditable(true);\n      noRefCell.setDrawBrackets(false);\n      noRefCell.setBracketsColor(Color.black);\n      noRefCell.putUserObject(EditorCell.METAINFO_LINK_DECLARATION, linkDeclaration);\n      noRefCell.putUserObject(EditorCell.METAINFO_SOURCE_NODE, node);\n      noRefCell.setAction(EditorCellAction.DELETE, new CellAction_Empty());\n      noRefCell.setSubstituteInfo(new DefaultReferenceSubstituteInfo(node, linkDeclaration, context));\n      StaticFieldReference_FieldNameActions.setCellActions(noRefCell, node, context);\n      noRefCell.putUserObject(EditorCell.CELL_ID, \"1088427644683\");\n      noRefCell.putUserObject(EditorCell.ROLE, \"variableDeclaration\");\n      return noRefCell;\n    }\n    if(effectiveNode == null) {\n      {\n        EditorCell_Error noRefCell = EditorCell_Error.create(context, node, \"<no field>\");\n        noRefCell.setEditable(true);\n        noRefCell.setDrawBrackets(false);\n        noRefCell.setBracketsColor(Color.black);\n        noRefCell.putUserObject(EditorCell.METAINFO_LINK_DECLARATION, linkDeclaration);\n        noRefCell.putUserObject(EditorCell.METAINFO_SOURCE_NODE, node);\n        noRefCell.setAction(EditorCellAction.DELETE, new CellAction_Empty());\n        noRefCell.setSubstituteInfo(new DefaultReferenceSubstituteInfo(node, linkDeclaration, context));\n        StaticFieldReference_FieldNameActions.setCellActions(noRefCell, node, context);\n        noRefCell.putUserObject(EditorCell.CELL_ID, \"1088427644683\");\n        noRefCell.putUserObject(EditorCell.ROLE, \"variableDeclaration\");\n        return noRefCell;\n      }\n    }\n    AbstractCellProvider inlineComponent = new StaticFieldReference_Editor_variableDeclaration_InlineComponent(effectiveNode);\n    EditorCell editorCell = inlineComponent.createEditorCell(context);\n    EditorUtil.setSemanticNodeToCells(editorCell, node);\n    editorCell.setSelectable(true);\n    editorCell.setDrawBorder(false);\n    editorCell.setDrawBrackets(false);\n    editorCell.setBracketsColor(Color.black);\n    editorCell.putUserObject(EditorCell.METAINFO_LINK_DECLARATION, linkDeclaration);\n    editorCell.putUserObject(EditorCell.METAINFO_SOURCE_NODE, node);\n    editorCell.putUserObject(EditorCell.ROLE, \"variableDeclaration\");\n    editorCell.setAction(EditorCellAction.DELETE, new CellAction_Empty());\n    editorCell.setSubstituteInfo(new DefaultReferenceSubstituteInfo(node, linkDeclaration, context));\n    StaticFieldReference_FieldNameActions.setCellActions(editorCell, node, context);\n    return editorCell;\n  }","id":55937,"modified_method":"public EditorCell createVariableDeclarationReferenceCell(EditorContext context, SNode node) {\n    SNode effectiveNode = null;\n    effectiveNode = node.getReferent(\"variableDeclaration\");\n    LinkDeclaration linkDeclaration = SModelUtil.getLinkDeclaration(node, \"variableDeclaration\", context.getOperationContext().getScope());\n    SReference reference = node.getReference(\"variableDeclaration\");\n    if(reference != null && !(reference.isResolved())) {\n      EditorCell_Error noRefCell = EditorCell_Error.create(context, node, null);\n      noRefCell.setText(BadReferenceTextProvider.getBadReferenceText(reference));\n      noRefCell.setEditable(true);\n      noRefCell.setDrawBrackets(false);\n      noRefCell.setBracketsColor(Color.black);\n      noRefCell.putUserObject(EditorCell.METAINFO_LINK_DECLARATION, linkDeclaration);\n      noRefCell.putUserObject(EditorCell.METAINFO_SOURCE_NODE, node);\n      noRefCell.setAction(EditorCellAction.DELETE, new CellAction_Empty());\n      noRefCell.setSubstituteInfo(new DefaultReferenceSubstituteInfo(node, linkDeclaration, context));\n      StaticFieldReference_FieldNameActions.setCellActions(noRefCell, node, context);\n      noRefCell.putUserObject(EditorCell.CELL_ID, \"1088427644683\");\n      noRefCell.putUserObject(EditorCell.ROLE, \"variableDeclaration\");\n      return noRefCell;\n    }\n    if(effectiveNode == null) {\n      {\n        EditorCell_Error noRefCell = EditorCell_Error.create(context, node, \"<no field>\");\n        noRefCell.setEditable(true);\n        noRefCell.setDrawBrackets(false);\n        noRefCell.setBracketsColor(Color.black);\n        noRefCell.putUserObject(EditorCell.METAINFO_LINK_DECLARATION, linkDeclaration);\n        noRefCell.putUserObject(EditorCell.METAINFO_SOURCE_NODE, node);\n        noRefCell.setAction(EditorCellAction.DELETE, new CellAction_Empty());\n        noRefCell.setSubstituteInfo(new DefaultReferenceSubstituteInfo(node, linkDeclaration, context));\n        StaticFieldReference_FieldNameActions.setCellActions(noRefCell, node, context);\n        noRefCell.putUserObject(EditorCell.CELL_ID, \"1088427644683\");\n        noRefCell.putUserObject(EditorCell.ROLE, \"variableDeclaration\");\n        return noRefCell;\n      }\n    }\n    AbstractCellProvider inlineComponent = new StaticFieldReference_Editor_variableDeclaration_InlineComponent(effectiveNode);\n    EditorCell editorCell = inlineComponent.createEditorCell(context);\n    EditorUtil.setSemanticNodeToCells(editorCell, node);\n    editorCell.setSelectable(true);\n    editorCell.setDrawBorder(false);\n    editorCell.setDrawBrackets(false);\n    editorCell.setBracketsColor(Color.black);\n    editorCell.putUserObject(EditorCell.METAINFO_LINK_DECLARATION, linkDeclaration);\n    editorCell.putUserObject(EditorCell.METAINFO_SOURCE_NODE, node);\n    editorCell.putUserObject(EditorCell.ROLE, \"variableDeclaration\");\n    editorCell.setAction(EditorCellAction.DELETE, new CellAction_Empty());\n    editorCell.setSubstituteInfo(new DefaultReferenceSubstituteInfo(node, linkDeclaration, context));\n    StaticFieldReference_FieldNameActions.setCellActions(editorCell, node, context);\n    return editorCell;\n  }","commit_id":"8ac81ce151cbaadc05acd549a5148c7a969ab1ee","url":"https://github.com/JetBrains/MPS"},{"original_method":"public EditorCell createBaseMethodDeclarationReferenceCell(EditorContext context, SNode node) {\n    SNode effectiveNode = null;\n    effectiveNode = node.getReferent(\"baseMethodDeclaration\");\n    LinkDeclaration linkDeclaration = SModelUtil.getLinkDeclaration(node, \"baseMethodDeclaration\", context.getOperationContext().getScope());\n    SReference reference = node.getReference(\"baseMethodDeclaration\");\n    if(reference != null && !(reference.isResolved())) {\n      EditorCell_Error noRefCell = EditorCell_Error.create(context, node, BadReferenceTextProvider.getBadReferenceText(reference));\n      noRefCell.setEditable(true);\n      noRefCell.setDrawBrackets(false);\n      noRefCell.setBracketsColor(Color.black);\n      noRefCell.putUserObject(EditorCell.METAINFO_LINK_DECLARATION, linkDeclaration);\n      noRefCell.putUserObject(EditorCell.METAINFO_SOURCE_NODE, node);\n      noRefCell.setAction(EditorCellAction.DELETE, new CellAction_Empty());\n      noRefCell.setSubstituteInfo(new DefaultReferenceSubstituteInfo(node, linkDeclaration, context));\n      StaticMethodCall_MethodNameActions.setCellActions(noRefCell, node, context);\n      noRefCell.putUserObject(EditorCell.CELL_ID, \"1088427863670\");\n      noRefCell.putUserObject(EditorCell.ROLE, \"baseMethodDeclaration\");\n      return noRefCell;\n    }\n    if(effectiveNode == null) {\n      {\n        EditorCell_Error noRefCell = EditorCell_Error.create(context, node, \"<no method>\");\n        noRefCell.setEditable(true);\n        noRefCell.setDrawBrackets(false);\n        noRefCell.setBracketsColor(Color.black);\n        noRefCell.putUserObject(EditorCell.METAINFO_LINK_DECLARATION, linkDeclaration);\n        noRefCell.putUserObject(EditorCell.METAINFO_SOURCE_NODE, node);\n        noRefCell.setAction(EditorCellAction.DELETE, new CellAction_Empty());\n        noRefCell.setSubstituteInfo(new DefaultReferenceSubstituteInfo(node, linkDeclaration, context));\n        StaticMethodCall_MethodNameActions.setCellActions(noRefCell, node, context);\n        noRefCell.putUserObject(EditorCell.CELL_ID, \"1088427863670\");\n        noRefCell.putUserObject(EditorCell.ROLE, \"baseMethodDeclaration\");\n        return noRefCell;\n      }\n    }\n    AbstractCellProvider inlineComponent = new StaticMethodCall_Editor_baseMethodDeclaration_InlineComponent(effectiveNode);\n    EditorCell editorCell = inlineComponent.createEditorCell(context);\n    EditorUtil.setSemanticNodeToCells(editorCell, node);\n    editorCell.setSelectable(true);\n    editorCell.setDrawBorder(false);\n    editorCell.setDrawBrackets(false);\n    editorCell.setBracketsColor(Color.black);\n    editorCell.putUserObject(EditorCell.METAINFO_LINK_DECLARATION, linkDeclaration);\n    editorCell.putUserObject(EditorCell.METAINFO_SOURCE_NODE, node);\n    editorCell.putUserObject(EditorCell.ROLE, \"baseMethodDeclaration\");\n    editorCell.setAction(EditorCellAction.DELETE, new CellAction_Empty());\n    editorCell.setSubstituteInfo(new DefaultReferenceSubstituteInfo(node, linkDeclaration, context));\n    StaticMethodCall_MethodNameActions.setCellActions(editorCell, node, context);\n    return editorCell;\n  }","id":55938,"modified_method":"public EditorCell createBaseMethodDeclarationReferenceCell(EditorContext context, SNode node) {\n    SNode effectiveNode = null;\n    effectiveNode = node.getReferent(\"baseMethodDeclaration\");\n    LinkDeclaration linkDeclaration = SModelUtil.getLinkDeclaration(node, \"baseMethodDeclaration\", context.getOperationContext().getScope());\n    SReference reference = node.getReference(\"baseMethodDeclaration\");\n    if(reference != null && !(reference.isResolved())) {\n      EditorCell_Error noRefCell = EditorCell_Error.create(context, node, null);\n      noRefCell.setText(BadReferenceTextProvider.getBadReferenceText(reference));\n      noRefCell.setEditable(true);\n      noRefCell.setDrawBrackets(false);\n      noRefCell.setBracketsColor(Color.black);\n      noRefCell.putUserObject(EditorCell.METAINFO_LINK_DECLARATION, linkDeclaration);\n      noRefCell.putUserObject(EditorCell.METAINFO_SOURCE_NODE, node);\n      noRefCell.setAction(EditorCellAction.DELETE, new CellAction_Empty());\n      noRefCell.setSubstituteInfo(new DefaultReferenceSubstituteInfo(node, linkDeclaration, context));\n      StaticMethodCall_MethodNameActions.setCellActions(noRefCell, node, context);\n      noRefCell.putUserObject(EditorCell.CELL_ID, \"1088427863670\");\n      noRefCell.putUserObject(EditorCell.ROLE, \"baseMethodDeclaration\");\n      return noRefCell;\n    }\n    if(effectiveNode == null) {\n      {\n        EditorCell_Error noRefCell = EditorCell_Error.create(context, node, \"<no method>\");\n        noRefCell.setEditable(true);\n        noRefCell.setDrawBrackets(false);\n        noRefCell.setBracketsColor(Color.black);\n        noRefCell.putUserObject(EditorCell.METAINFO_LINK_DECLARATION, linkDeclaration);\n        noRefCell.putUserObject(EditorCell.METAINFO_SOURCE_NODE, node);\n        noRefCell.setAction(EditorCellAction.DELETE, new CellAction_Empty());\n        noRefCell.setSubstituteInfo(new DefaultReferenceSubstituteInfo(node, linkDeclaration, context));\n        StaticMethodCall_MethodNameActions.setCellActions(noRefCell, node, context);\n        noRefCell.putUserObject(EditorCell.CELL_ID, \"1088427863670\");\n        noRefCell.putUserObject(EditorCell.ROLE, \"baseMethodDeclaration\");\n        return noRefCell;\n      }\n    }\n    AbstractCellProvider inlineComponent = new StaticMethodCall_Editor_baseMethodDeclaration_InlineComponent(effectiveNode);\n    EditorCell editorCell = inlineComponent.createEditorCell(context);\n    EditorUtil.setSemanticNodeToCells(editorCell, node);\n    editorCell.setSelectable(true);\n    editorCell.setDrawBorder(false);\n    editorCell.setDrawBrackets(false);\n    editorCell.setBracketsColor(Color.black);\n    editorCell.putUserObject(EditorCell.METAINFO_LINK_DECLARATION, linkDeclaration);\n    editorCell.putUserObject(EditorCell.METAINFO_SOURCE_NODE, node);\n    editorCell.putUserObject(EditorCell.ROLE, \"baseMethodDeclaration\");\n    editorCell.setAction(EditorCellAction.DELETE, new CellAction_Empty());\n    editorCell.setSubstituteInfo(new DefaultReferenceSubstituteInfo(node, linkDeclaration, context));\n    StaticMethodCall_MethodNameActions.setCellActions(editorCell, node, context);\n    return editorCell;\n  }","commit_id":"8ac81ce151cbaadc05acd549a5148c7a969ab1ee","url":"https://github.com/JetBrains/MPS"},{"original_method":"public EditorCell createBaseMethodDeclarationReferenceCell(EditorContext context, SNode node) {\n    SNode effectiveNode = null;\n    effectiveNode = node.getReferent(\"baseMethodDeclaration\");\n    LinkDeclaration linkDeclaration = SModelUtil.getLinkDeclaration(node, \"baseMethodDeclaration\", context.getOperationContext().getScope());\n    SReference reference = node.getReference(\"baseMethodDeclaration\");\n    if(reference != null && !(reference.isResolved())) {\n      EditorCell_Error noRefCell = EditorCell_Error.create(context, node, BadReferenceTextProvider.getBadReferenceText(reference));\n      noRefCell.setEditable(true);\n      noRefCell.setDrawBrackets(false);\n      noRefCell.setBracketsColor(Color.black);\n      noRefCell.putUserObject(EditorCell.METAINFO_LINK_DECLARATION, linkDeclaration);\n      noRefCell.putUserObject(EditorCell.METAINFO_SOURCE_NODE, node);\n      noRefCell.setAction(EditorCellAction.DELETE, new CellAction_Empty());\n      noRefCell.setSubstituteInfo(new DefaultReferenceSubstituteInfo(node, linkDeclaration, context));\n      SuperMethodCall_NameCellActions.setCellActions(noRefCell, node, context);\n      noRefCell.putUserObject(EditorCell.CELL_ID, \"1091709481300\");\n      noRefCell.putUserObject(EditorCell.ROLE, \"baseMethodDeclaration\");\n      return noRefCell;\n    }\n    if(effectiveNode == null) {\n      {\n        EditorCell_Error noRefCell = EditorCell_Error.create(context, node, \"\");\n        noRefCell.setEditable(true);\n        noRefCell.setDrawBrackets(false);\n        noRefCell.setBracketsColor(Color.black);\n        noRefCell.putUserObject(EditorCell.METAINFO_LINK_DECLARATION, linkDeclaration);\n        noRefCell.putUserObject(EditorCell.METAINFO_SOURCE_NODE, node);\n        noRefCell.setAction(EditorCellAction.DELETE, new CellAction_Empty());\n        noRefCell.setSubstituteInfo(new DefaultReferenceSubstituteInfo(node, linkDeclaration, context));\n        SuperMethodCall_NameCellActions.setCellActions(noRefCell, node, context);\n        noRefCell.putUserObject(EditorCell.CELL_ID, \"1091709481300\");\n        noRefCell.putUserObject(EditorCell.ROLE, \"baseMethodDeclaration\");\n        return noRefCell;\n      }\n    }\n    AbstractCellProvider inlineComponent = new SuperMethodCall_Editor_baseMethodDeclaration_InlineComponent(effectiveNode);\n    EditorCell editorCell = inlineComponent.createEditorCell(context);\n    EditorUtil.setSemanticNodeToCells(editorCell, node);\n    editorCell.setSelectable(true);\n    editorCell.setDrawBorder(false);\n    editorCell.setDrawBrackets(false);\n    editorCell.setBracketsColor(Color.black);\n    editorCell.putUserObject(EditorCell.METAINFO_LINK_DECLARATION, linkDeclaration);\n    editorCell.putUserObject(EditorCell.METAINFO_SOURCE_NODE, node);\n    editorCell.putUserObject(EditorCell.ROLE, \"baseMethodDeclaration\");\n    editorCell.setAction(EditorCellAction.DELETE, new CellAction_Empty());\n    editorCell.setSubstituteInfo(new DefaultReferenceSubstituteInfo(node, linkDeclaration, context));\n    SuperMethodCall_NameCellActions.setCellActions(editorCell, node, context);\n    return editorCell;\n  }","id":55939,"modified_method":"public EditorCell createBaseMethodDeclarationReferenceCell(EditorContext context, SNode node) {\n    SNode effectiveNode = null;\n    effectiveNode = node.getReferent(\"baseMethodDeclaration\");\n    LinkDeclaration linkDeclaration = SModelUtil.getLinkDeclaration(node, \"baseMethodDeclaration\", context.getOperationContext().getScope());\n    SReference reference = node.getReference(\"baseMethodDeclaration\");\n    if(reference != null && !(reference.isResolved())) {\n      EditorCell_Error noRefCell = EditorCell_Error.create(context, node, null);\n      noRefCell.setText(BadReferenceTextProvider.getBadReferenceText(reference));\n      noRefCell.setEditable(true);\n      noRefCell.setDrawBrackets(false);\n      noRefCell.setBracketsColor(Color.black);\n      noRefCell.putUserObject(EditorCell.METAINFO_LINK_DECLARATION, linkDeclaration);\n      noRefCell.putUserObject(EditorCell.METAINFO_SOURCE_NODE, node);\n      noRefCell.setAction(EditorCellAction.DELETE, new CellAction_Empty());\n      noRefCell.setSubstituteInfo(new DefaultReferenceSubstituteInfo(node, linkDeclaration, context));\n      SuperMethodCall_NameCellActions.setCellActions(noRefCell, node, context);\n      noRefCell.putUserObject(EditorCell.CELL_ID, \"1091709481300\");\n      noRefCell.putUserObject(EditorCell.ROLE, \"baseMethodDeclaration\");\n      return noRefCell;\n    }\n    if(effectiveNode == null) {\n      {\n        EditorCell_Error noRefCell = EditorCell_Error.create(context, node, \"\");\n        noRefCell.setEditable(true);\n        noRefCell.setDrawBrackets(false);\n        noRefCell.setBracketsColor(Color.black);\n        noRefCell.putUserObject(EditorCell.METAINFO_LINK_DECLARATION, linkDeclaration);\n        noRefCell.putUserObject(EditorCell.METAINFO_SOURCE_NODE, node);\n        noRefCell.setAction(EditorCellAction.DELETE, new CellAction_Empty());\n        noRefCell.setSubstituteInfo(new DefaultReferenceSubstituteInfo(node, linkDeclaration, context));\n        SuperMethodCall_NameCellActions.setCellActions(noRefCell, node, context);\n        noRefCell.putUserObject(EditorCell.CELL_ID, \"1091709481300\");\n        noRefCell.putUserObject(EditorCell.ROLE, \"baseMethodDeclaration\");\n        return noRefCell;\n      }\n    }\n    AbstractCellProvider inlineComponent = new SuperMethodCall_Editor_baseMethodDeclaration_InlineComponent(effectiveNode);\n    EditorCell editorCell = inlineComponent.createEditorCell(context);\n    EditorUtil.setSemanticNodeToCells(editorCell, node);\n    editorCell.setSelectable(true);\n    editorCell.setDrawBorder(false);\n    editorCell.setDrawBrackets(false);\n    editorCell.setBracketsColor(Color.black);\n    editorCell.putUserObject(EditorCell.METAINFO_LINK_DECLARATION, linkDeclaration);\n    editorCell.putUserObject(EditorCell.METAINFO_SOURCE_NODE, node);\n    editorCell.putUserObject(EditorCell.ROLE, \"baseMethodDeclaration\");\n    editorCell.setAction(EditorCellAction.DELETE, new CellAction_Empty());\n    editorCell.setSubstituteInfo(new DefaultReferenceSubstituteInfo(node, linkDeclaration, context));\n    SuperMethodCall_NameCellActions.setCellActions(editorCell, node, context);\n    return editorCell;\n  }","commit_id":"8ac81ce151cbaadc05acd549a5148c7a969ab1ee","url":"https://github.com/JetBrains/MPS"},{"original_method":"public EditorCell createTypeVariableDeclarationReferenceCell(EditorContext context, SNode node) {\n    SNode effectiveNode = null;\n    effectiveNode = node.getReferent(\"typeVariableDeclaration\");\n    LinkDeclaration linkDeclaration = SModelUtil.getLinkDeclaration(node, \"typeVariableDeclaration\", context.getOperationContext().getScope());\n    SReference reference = node.getReference(\"typeVariableDeclaration\");\n    if(reference != null && !(reference.isResolved())) {\n      EditorCell_Error noRefCell = EditorCell_Error.create(context, node, BadReferenceTextProvider.getBadReferenceText(reference));\n      noRefCell.setEditable(true);\n      noRefCell.setDrawBrackets(false);\n      noRefCell.setBracketsColor(Color.black);\n      noRefCell.putUserObject(EditorCell.METAINFO_LINK_DECLARATION, linkDeclaration);\n      noRefCell.putUserObject(EditorCell.METAINFO_SOURCE_NODE, node);\n      noRefCell.setAction(EditorCellAction.DELETE, new CellAction_Empty());\n      noRefCell.setSubstituteInfo(new DefaultReferenceSubstituteInfo(node, linkDeclaration, context));\n      noRefCell.putUserObject(EditorCell.CELL_ID, \"1109283721555\");\n      noRefCell.putUserObject(EditorCell.ROLE, \"typeVariableDeclaration\");\n      return noRefCell;\n    }\n    if(effectiveNode == null) {\n      {\n        EditorCell_Error noRefCell = EditorCell_Error.create(context, node, \"<no type variable>\");\n        noRefCell.setEditable(true);\n        noRefCell.setDrawBrackets(false);\n        noRefCell.setBracketsColor(Color.black);\n        noRefCell.putUserObject(EditorCell.METAINFO_LINK_DECLARATION, linkDeclaration);\n        noRefCell.putUserObject(EditorCell.METAINFO_SOURCE_NODE, node);\n        noRefCell.setAction(EditorCellAction.DELETE, new CellAction_Empty());\n        noRefCell.setSubstituteInfo(new DefaultReferenceSubstituteInfo(node, linkDeclaration, context));\n        noRefCell.putUserObject(EditorCell.CELL_ID, \"1109283721555\");\n        noRefCell.putUserObject(EditorCell.ROLE, \"typeVariableDeclaration\");\n        return noRefCell;\n      }\n    }\n    AbstractCellProvider inlineComponent = new TypeVariableReference_Editor_typeVariableDeclaration_InlineComponent(effectiveNode);\n    EditorCell editorCell = inlineComponent.createEditorCell(context);\n    EditorUtil.setSemanticNodeToCells(editorCell, node);\n    editorCell.setSelectable(true);\n    editorCell.setDrawBorder(false);\n    editorCell.setDrawBrackets(false);\n    editorCell.setBracketsColor(Color.black);\n    editorCell.putUserObject(EditorCell.METAINFO_LINK_DECLARATION, linkDeclaration);\n    editorCell.putUserObject(EditorCell.METAINFO_SOURCE_NODE, node);\n    editorCell.putUserObject(EditorCell.ROLE, \"typeVariableDeclaration\");\n    editorCell.setAction(EditorCellAction.DELETE, new CellAction_Empty());\n    editorCell.setSubstituteInfo(new DefaultReferenceSubstituteInfo(node, linkDeclaration, context));\n    return editorCell;\n  }","id":55940,"modified_method":"public EditorCell createTypeVariableDeclarationReferenceCell(EditorContext context, SNode node) {\n    SNode effectiveNode = null;\n    effectiveNode = node.getReferent(\"typeVariableDeclaration\");\n    LinkDeclaration linkDeclaration = SModelUtil.getLinkDeclaration(node, \"typeVariableDeclaration\", context.getOperationContext().getScope());\n    SReference reference = node.getReference(\"typeVariableDeclaration\");\n    if(reference != null && !(reference.isResolved())) {\n      EditorCell_Error noRefCell = EditorCell_Error.create(context, node, null);\n      noRefCell.setText(BadReferenceTextProvider.getBadReferenceText(reference));\n      noRefCell.setEditable(true);\n      noRefCell.setDrawBrackets(false);\n      noRefCell.setBracketsColor(Color.black);\n      noRefCell.putUserObject(EditorCell.METAINFO_LINK_DECLARATION, linkDeclaration);\n      noRefCell.putUserObject(EditorCell.METAINFO_SOURCE_NODE, node);\n      noRefCell.setAction(EditorCellAction.DELETE, new CellAction_Empty());\n      noRefCell.setSubstituteInfo(new DefaultReferenceSubstituteInfo(node, linkDeclaration, context));\n      noRefCell.putUserObject(EditorCell.CELL_ID, \"1109283721555\");\n      noRefCell.putUserObject(EditorCell.ROLE, \"typeVariableDeclaration\");\n      return noRefCell;\n    }\n    if(effectiveNode == null) {\n      {\n        EditorCell_Error noRefCell = EditorCell_Error.create(context, node, \"<no type variable>\");\n        noRefCell.setEditable(true);\n        noRefCell.setDrawBrackets(false);\n        noRefCell.setBracketsColor(Color.black);\n        noRefCell.putUserObject(EditorCell.METAINFO_LINK_DECLARATION, linkDeclaration);\n        noRefCell.putUserObject(EditorCell.METAINFO_SOURCE_NODE, node);\n        noRefCell.setAction(EditorCellAction.DELETE, new CellAction_Empty());\n        noRefCell.setSubstituteInfo(new DefaultReferenceSubstituteInfo(node, linkDeclaration, context));\n        noRefCell.putUserObject(EditorCell.CELL_ID, \"1109283721555\");\n        noRefCell.putUserObject(EditorCell.ROLE, \"typeVariableDeclaration\");\n        return noRefCell;\n      }\n    }\n    AbstractCellProvider inlineComponent = new TypeVariableReference_Editor_typeVariableDeclaration_InlineComponent(effectiveNode);\n    EditorCell editorCell = inlineComponent.createEditorCell(context);\n    EditorUtil.setSemanticNodeToCells(editorCell, node);\n    editorCell.setSelectable(true);\n    editorCell.setDrawBorder(false);\n    editorCell.setDrawBrackets(false);\n    editorCell.setBracketsColor(Color.black);\n    editorCell.putUserObject(EditorCell.METAINFO_LINK_DECLARATION, linkDeclaration);\n    editorCell.putUserObject(EditorCell.METAINFO_SOURCE_NODE, node);\n    editorCell.putUserObject(EditorCell.ROLE, \"typeVariableDeclaration\");\n    editorCell.setAction(EditorCellAction.DELETE, new CellAction_Empty());\n    editorCell.setSubstituteInfo(new DefaultReferenceSubstituteInfo(node, linkDeclaration, context));\n    return editorCell;\n  }","commit_id":"8ac81ce151cbaadc05acd549a5148c7a969ab1ee","url":"https://github.com/JetBrains/MPS"},{"original_method":"@Test\n  public void testDocumentCreation() throws Exception {\n    createSchema(baseDocumentTx);\n    createSchema(testDocumentTx);\n\n    List<Future> futures = new ArrayList<Future>();\n    for (int i = 0; i < 8; i++) {\n      futures.add(executorService.submit(new DataPropagationTask(baseDocumentTx, testDocumentTx)));\n    }\n\n    System.out.println(\"Wait for 5 minutes\");\n    TimeUnit.MINUTES.sleep(5);\n\n    long lastTs = System.currentTimeMillis();\n    process.destroy();\n    process.waitFor();\n\n    System.out.println(\"Process was destroyed\");\n\n    for (Future future : futures) {\n      try {\n        future.get();\n      } catch (Exception e) {\n        e.printStackTrace();\n      }\n    }\n\n    testDocumentTx = new ODatabaseDocumentTx(\n        \"plocal:\" + buildDir.getAbsolutePath() + \"/testLocalPaginatedStorageSmallCacheBigRecordsCrashRestore\");\n    testDocumentTx.open(\"admin\", \"admin\");\n    testDocumentTx.close();\n\n    testDocumentTx.open(\"admin\", \"admin\");\n    compareDocuments(lastTs);\n  }","id":55941,"modified_method":"@Test\n  public void testDocumentCreation() throws Exception {\n    createSchema(baseDocumentTx);\n    createSchema(testDocumentTx);\n\n    List<Future> futures = new ArrayList<Future>();\n    for (int i = 0; i < 1; i++) {\n      futures.add(executorService.submit(new DataPropagationTask(baseDocumentTx, testDocumentTx)));\n    }\n\n    System.out.println(\"Wait for 5 minutes\");\n    TimeUnit.MINUTES.sleep(1);\n\n    long lastTs = System.currentTimeMillis();\n    process.destroy();\n    process.waitFor();\n\n    System.out.println(\"OrientDB server process was destroyed\");\n\n    for (Future future : futures) {\n      try {\n        future.get();\n      } catch (Exception e) {\n        e.printStackTrace();\n      }\n    }\n\n    testDocumentTx = new ODatabaseDocumentTx(\n        \"plocal:\" + buildDir.getAbsolutePath() + \"/testLocalPaginatedStorageSmallCacheBigRecordsCrashRestore\");\n    testDocumentTx.open(\"admin\", \"admin\");\n    testDocumentTx.close();\n\n    testDocumentTx.open(\"admin\", \"admin\");\n    compareDocuments(lastTs);\n  }","commit_id":"dd6c17eb95dfe00e253c8244463924285de54d4e","url":"https://github.com/orientechnologies/orientdb"},{"original_method":"private void compareDocuments(long lastTs) {\n    long minTs = Long.MAX_VALUE;\n    baseDocumentTx.activateOnCurrentThread();\n    int clusterId = baseDocumentTx.getClusterIdByName(\"TestClass\");\n\n    OStorage baseStorage = baseDocumentTx.getStorage();\n\n    OPhysicalPosition[] physicalPositions = baseStorage.ceilingPhysicalPositions(clusterId, new OPhysicalPosition(0));\n\n    int recordsRestored = 0;\n    int recordsTested = 0;\n    while (physicalPositions.length > 0) {\n      final ORecordId rid = new ORecordId(clusterId);\n\n      for (OPhysicalPosition physicalPosition : physicalPositions) {\n        rid.clusterPosition = physicalPosition.clusterPosition;\n\n        ODatabaseRecordThreadLocal.INSTANCE.set(baseDocumentTx);\n        ODocument baseDocument = baseDocumentTx.load(rid);\n\n        testDocumentTx.activateOnCurrentThread();\n        List<ODocument> testDocuments = testDocumentTx\n            .query(new OSQLSynchQuery<ODocument>(\"select from TestClass where id  = \" + baseDocument.field(\"id\")));\n        if (testDocuments.size() == 0) {\n          if (((Long) baseDocument.field(\"timestamp\")) < minTs)\n            minTs = baseDocument.field(\"timestamp\");\n        } else {\n          ODocument testDocument = testDocuments.get(0);\n          Assert.assertEquals(testDocument.field(\"id\"), baseDocument.field(\"id\"));\n          Assert.assertEquals(testDocument.field(\"timestamp\"), baseDocument.field(\"timestamp\"));\n          Assert.assertEquals(testDocument.field(\"stringValue\"), baseDocument.field(\"stringValue\"));\n          Assert.assertEquals(testDocument.field(\"binaryValue\"), baseDocument.field(\"binaryValue\"));\n          recordsRestored++;\n        }\n\n        recordsTested++;\n\n        if (recordsTested % 10000 == 0)\n          System.out.println(recordsTested + \" were tested, \" + recordsRestored + \" were restored ...\");\n      }\n\n      physicalPositions = baseStorage.higherPhysicalPositions(clusterId, physicalPositions[physicalPositions.length - 1]);\n    }\n\n    System.out.println(\n        recordsRestored + \" records were restored. Total records \" + recordsTested + \". Max interval for lost records \" + (lastTs\n            - minTs));\n  }","id":55942,"modified_method":"private void compareDocuments(long lastTs) {\n    long minTs = Long.MAX_VALUE;\n    baseDocumentTx.activateOnCurrentThread();\n    int clusterId = baseDocumentTx.getClusterIdByName(\"TestClass\");\n\n    OStorage baseStorage = baseDocumentTx.getStorage();\n\n    OPhysicalPosition[] physicalPositions = baseStorage.ceilingPhysicalPositions(clusterId, new OPhysicalPosition(0));\n\n    int recordsRestored = 0;\n    int recordsTested = 0;\n    while (physicalPositions.length > 0) {\n      final ORecordId rid = new ORecordId(clusterId);\n\n      for (OPhysicalPosition physicalPosition : physicalPositions) {\n\n        rid.clusterPosition = physicalPosition.clusterPosition;\n\n        baseDocumentTx.activateOnCurrentThread();\n        ODocument baseDocument = baseDocumentTx.load(rid);\n\n        testDocumentTx.activateOnCurrentThread();\n        List<ODocument> testDocuments = testDocumentTx\n            .query(new OSQLSynchQuery<ODocument>(\"select from TestClass where id  = \" + baseDocument.field(\"id\")));\n\n        if (testDocuments.size() == 0) {\n          if (((Long) baseDocument.field(\"timestamp\")) < minTs) {\n            minTs = baseDocument.field(\"timestamp\");\n          }\n        } else {\n          ODocument testDocument = testDocuments.get(0);\n          System.out.println(\"testing id:: \" + testDocument.field(\"id\"));\n\n          assertThat(testDocument.field(\"id\")).as(\"id:: %s\", testDocument.field(\"id\")).isEqualTo(baseDocument.field(\"id\"));\n          assertThat(testDocument.field(\"timestamp\")).as(\"documents:: %s - %s\", testDocument, baseDocument)\n              .isEqualTo(baseDocument.field(\"timestamp\"));\n          assertThat(testDocument.field(\"stringValue\")).as(\"id:: %s\", testDocument.field(\"id\"))\n              .isEqualTo(baseDocument.field(\"stringValue\"));\n          assertThat(testDocument.field(\"binaryValue\")).as(\"id:: %s\", testDocument.field(\"id\"))\n              .isEqualTo(baseDocument.field(\"binaryValue\"));\n\n          recordsRestored++;\n        }\n\n        recordsTested++;\n\n        if (recordsTested % 10000 == 0)\n          System.out.println(recordsTested + \" were tested, \" + recordsRestored + \" were restored ...\");\n      }\n\n      physicalPositions = baseStorage.higherPhysicalPositions(clusterId, physicalPositions[physicalPositions.length - 1]);\n    }\n\n    System.out.println(\n        recordsRestored + \" records were restored. Total records \" + recordsTested + \". Max interval for lost records \" + (lastTs\n            - minTs));\n  }","commit_id":"dd6c17eb95dfe00e253c8244463924285de54d4e","url":"https://github.com/orientechnologies/orientdb"},{"original_method":"private void assertJavaRegexpResult(String javaRegexp, String example, boolean expectedResult) {\n    Pattern pattern = Pattern.compile(javaRegexp);\n    Matcher matcher = pattern.matcher(example);\n    assertThat(example + \" tested with pattern \" + javaRegexp, matcher.matches(), Is.is(expectedResult));\n  }","id":55943,"modified_method":"private void assertJavaRegexpResult(String javaRegexp, String example, boolean expectedResult) {\n    Pattern pattern = Pattern.compile(javaRegexp);\n    Matcher matcher = pattern.matcher(example);\n    assertThat(matcher.matches()).as(example + \" tested with pattern \" + javaRegexp).isEqualTo(expectedResult);\n  }","commit_id":"9b1955062c118f0ae7d32a53d7c173dc5615f823","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"private void assertAntPatternEqualsToFindBugsRegExp(String antPattern, String regExp, String example) {\n    assertThat(FindbugsAntConverter.antToJavaRegexpConvertor(antPattern), Is.is(regExp));\n    String javaRegexp = regExp.substring(1, regExp.length());\n    assertJavaRegexpResult(javaRegexp, example, true);\n  }","id":55944,"modified_method":"private void assertAntPatternEqualsToFindBugsRegExp(String antPattern, String regExp, String example) {\n    assertThat(FindbugsAntConverter.antToJavaRegexpConvertor(antPattern)).isEqualTo(regExp);\n    String javaRegexp = regExp.substring(1, regExp.length());\n    assertJavaRegexpResult(javaRegexp, example, true);\n  }","commit_id":"9b1955062c118f0ae7d32a53d7c173dc5615f823","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"public String getEffort() {\n    return StringUtils.lowerCase(project.getConfiguration().getString(CoreProperties.FINDBUGS_EFFORT_PROPERTY,\n        CoreProperties.FINDBUGS_EFFORT_DEFAULT_VALUE));\n  }","id":55945,"modified_method":"public String getEffort() {\n    return StringUtils.lowerCase(settings.getString(CoreProperties.FINDBUGS_EFFORT_PROPERTY));\n  }","commit_id":"9b1955062c118f0ae7d32a53d7c173dc5615f823","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"public FindbugsConfiguration(Project project, RulesProfile profile, FindbugsProfileExporter exporter, ProjectClasspath classpath) {\n    this.project = project;\n    this.profile = profile;\n    this.exporter = exporter;\n    this.projectClasspath = classpath;\n  }","id":55946,"modified_method":"public FindbugsConfiguration(Project project, Settings settings, RulesProfile profile, FindbugsProfileExporter exporter, ProjectClasspath classpath) {\n    this.project = project;\n    this.settings = settings;\n    this.profile = profile;\n    this.exporter = exporter;\n    this.projectClasspath = classpath;\n  }","commit_id":"9b1955062c118f0ae7d32a53d7c173dc5615f823","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"public long getTimeout() {\n    return project.getConfiguration().getLong(CoreProperties.FINDBUGS_TIMEOUT_PROPERTY, CoreProperties.FINDBUGS_TIMEOUT_DEFAULT_VALUE);\n  }","id":55947,"modified_method":"public long getTimeout() {\n    return settings.getLong(CoreProperties.FINDBUGS_TIMEOUT_PROPERTY);\n  }","commit_id":"9b1955062c118f0ae7d32a53d7c173dc5615f823","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"public List<File> getExcludesFilters() {\n    List<File> result = new ArrayList<File>();\n    String[] filters = project.getConfiguration().getStringArray(FindbugsConstants.EXCLUDES_FILTERS_PROPERTY);\n    for (String excludesFilterPath : filters) {\n      excludesFilterPath = StringUtils.trim(excludesFilterPath);\n      if (StringUtils.isNotBlank(excludesFilterPath)) {\n        result.add(project.getFileSystem().resolvePath(excludesFilterPath));\n      }\n    }\n    return result;\n  }","id":55948,"modified_method":"public List<File> getExcludesFilters() {\n    List<File> result = new ArrayList<File>();\n    String[] filters = settings.getStringArray(FindbugsConstants.EXCLUDES_FILTERS_PROPERTY);\n    for (String excludesFilterPath : filters) {\n      excludesFilterPath = StringUtils.trim(excludesFilterPath);\n      if (StringUtils.isNotBlank(excludesFilterPath)) {\n        result.add(project.getFileSystem().resolvePath(excludesFilterPath));\n      }\n    }\n    return result;\n  }","commit_id":"9b1955062c118f0ae7d32a53d7c173dc5615f823","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"public File getTargetXMLReport() {\n    if (project.getConfiguration().getBoolean(FindbugsConstants.GENERATE_XML_KEY, FindbugsConstants.GENERATE_XML_DEFAULT_VALUE)) {\n      return new File(project.getFileSystem().getSonarWorkingDirectory(), \"findbugs-result.xml\");\n    }\n    return null;\n  }","id":55949,"modified_method":"@CheckForNull\n  public File getTargetXMLReport() {\n    if (settings.getBoolean(FindbugsConstants.GENERATE_XML_KEY)) {\n      return new File(project.getFileSystem().getSonarWorkingDirectory(), \"findbugs-result.xml\");\n    }\n    return null;\n  }","commit_id":"9b1955062c118f0ae7d32a53d7c173dc5615f823","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"@Before\n  public void setup() {\n    project = mock(Project.class);\n    findbugsTempDir = tempFolder.newFolder(\"findbugs\");\n    when(project.getFileSystem()).thenReturn(new SimpleProjectFileSystem(findbugsTempDir));\n  }","id":55950,"modified_method":"@Before\n  public void setup() {\n    project = mock(Project.class);\n    settings = new Settings();\n    findbugsTempDir = tempFolder.newFolder(\"findbugs\");\n    when(project.getFileSystem()).thenReturn(new SimpleProjectFileSystem(findbugsTempDir));\n  }","commit_id":"9b1955062c118f0ae7d32a53d7c173dc5615f823","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"@Test\n  public void shouldReturnExcludesFilters() {\n    Configuration projectConfiguration = new BaseConfiguration();\n    when(project.getConfiguration()).thenReturn(projectConfiguration);\n    FindbugsConfiguration conf = new FindbugsConfiguration(project, RulesProfile.create(), new FindbugsProfileExporter(), null);\n\n    assertThat(conf.getExcludesFilters().size(), is(0));\n    projectConfiguration.setProperty(FindbugsConstants.EXCLUDES_FILTERS_PROPERTY, \" foo.xml , bar.xml,\");\n    assertThat(conf.getExcludesFilters().size(), is(2));\n  }","id":55951,"modified_method":"@Test\n  public void shouldReturnExcludesFilters() {\n    FindbugsConfiguration conf = new FindbugsConfiguration(project, settings, RulesProfile.create(), new FindbugsProfileExporter(), null);\n\n    assertThat(conf.getExcludesFilters()).isEmpty();\n    settings.setProperty(FindbugsConstants.EXCLUDES_FILTERS_PROPERTY, \" foo.xml , bar.xml,\");\n    assertThat(conf.getExcludesFilters()).hasSize(2);\n  }","commit_id":"9b1955062c118f0ae7d32a53d7c173dc5615f823","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"@Test\n  public void shouldSaveConfigFiles() throws Exception {\n    FindbugsConfiguration conf = new FindbugsConfiguration(project, RulesProfile.create(), new FindbugsProfileExporter(), null);\n\n    conf.saveIncludeConfigXml();\n    conf.saveExcludeConfigXml();\n\n    File findbugsIncludeFile = new File(findbugsTempDir + \"/target/sonar/findbugs-include.xml\");\n    File findbugsExcludeFile = new File(findbugsTempDir + \"/target/sonar/findbugs-exclude.xml\");\n    assertThat(findbugsIncludeFile.exists(), is(true));\n    assertThat(findbugsExcludeFile.exists(), is(true));\n  }","id":55952,"modified_method":"@Test\n  public void shouldSaveConfigFiles() throws Exception {\n    FindbugsConfiguration conf = new FindbugsConfiguration(project, settings, RulesProfile.create(), new FindbugsProfileExporter(), null);\n\n    conf.saveIncludeConfigXml();\n    conf.saveExcludeConfigXml();\n\n    File findbugsIncludeFile = new File(findbugsTempDir + \"/target/sonar/findbugs-include.xml\");\n    File findbugsExcludeFile = new File(findbugsTempDir + \"/target/sonar/findbugs-exclude.xml\");\n    assertThat(findbugsIncludeFile.exists()).isTrue();\n    assertThat(findbugsExcludeFile.exists()).isTrue();\n  }","commit_id":"9b1955062c118f0ae7d32a53d7c173dc5615f823","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"@Test(expected = SonarException.class)\n  public void shoulFailIfNoCompiledClasses() throws Exception {\n    Project project = mock(Project.class);\n    ProjectFileSystem fs = mock(ProjectFileSystem.class);\n    when(project.getFileSystem()).thenReturn(fs);\n    FindbugsConfiguration conf = new FindbugsConfiguration(project, null, null, null);\n\n    new FindbugsExecutor(conf).execute();\n  }","id":55953,"modified_method":"@Test(expected = SonarException.class)\n  public void shoulFailIfNoCompiledClasses() throws Exception {\n    Project project = mock(Project.class);\n    ProjectFileSystem fs = mock(ProjectFileSystem.class);\n    when(project.getFileSystem()).thenReturn(fs);\n    FindbugsConfiguration conf = new FindbugsConfiguration(project, null, null, null, null);\n\n    new FindbugsExecutor(conf).execute();\n  }","commit_id":"9b1955062c118f0ae7d32a53d7c173dc5615f823","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"@Test\n  public void canGenerateXMLReport() throws Exception {\n    FindbugsConfiguration conf = mockConf();\n    File reportFile = new File(\"target/test-tmp/findbugs-report.xml\");\n    when(conf.getTargetXMLReport()).thenReturn(reportFile);\n\n    new FindbugsExecutor(conf).execute();\n\n    assertThat(reportFile.exists(), is(true));\n    String report = FileUtils.readFileToString(reportFile);\n    assertThat(\"Report should contain bug instance\", report, containsString(\"<BugInstance\"));\n    assertThat(\"Report should be generated with messages\", report, containsString(\"<Message>\"));\n    assertThat(report, containsString(\"synthetic=\\\"true\\\"\"));\n  }","id":55954,"modified_method":"@Test\n  public void canGenerateXMLReport() throws Exception {\n    FindbugsConfiguration conf = mockConf();\n    File reportFile = new File(\"target/test-tmp/findbugs-report.xml\");\n    when(conf.getTargetXMLReport()).thenReturn(reportFile);\n\n    new FindbugsExecutor(conf).execute();\n\n    assertThat(reportFile.exists()).isTrue();\n    String report = FileUtils.readFileToString(reportFile);\n    assertThat(report).as(\"Report should contain bug instance\").contains(\"<BugInstance\");\n    assertThat(report).as(\"Report should be generated with messages\").contains(\"<Message>\");\n    assertThat(report).contains(\"synthetic=\\\"true\\\"\");\n  }","commit_id":"9b1955062c118f0ae7d32a53d7c173dc5615f823","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"@Test\n  public void shouldGetExcludesFiltersFromPom() {\n    Project project = MavenTestUtils.loadProjectFromPom(getClass(), \"pom.xml\");\n    initializer.execute(project);\n    assertThat(project.getConfiguration().getString(FindbugsConstants.EXCLUDES_FILTERS_PROPERTY), is(\"foo.xml\"));\n  }","id":55955,"modified_method":"@Test\n  public void shouldGetExcludesFiltersFromPom() {\n    Project project = MavenTestUtils.loadProjectFromPom(getClass(), \"pom.xml\");\n    initializer.execute(project);\n    assertThat(project.getConfiguration().getString(FindbugsConstants.EXCLUDES_FILTERS_PROPERTY)).isEqualTo(\"foo.xml\");\n  }","commit_id":"9b1955062c118f0ae7d32a53d7c173dc5615f823","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"@Test\n  public void testGetExtensions() {\n    assertThat(new FindbugsPlugin().getExtensions().size(), greaterThan(1));\n  }","id":55956,"modified_method":"@Test\n  public void testGetExtensions() {\n    assertThat(new FindbugsPlugin().getExtensions().size()).isGreaterThan(1);\n  }","commit_id":"9b1955062c118f0ae7d32a53d7c173dc5615f823","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"@Test\n  public void shouldBuildOnlyOneModuleWhenNoFindbugsActiveRules() {\n    ActiveRule activeRule1 = anActiveRuleFromAnotherPlugin();\n    ActiveRule activeRule2 = anActiveRuleFromAnotherPlugin();\n\n    FindBugsFilter filter = FindbugsProfileExporter.buildFindbugsFilter(Arrays.asList(activeRule1, activeRule2));\n    assertThat(filter.getMatchs().size(), is(0));\n  }","id":55957,"modified_method":"@Test\n  public void shouldBuildOnlyOneModuleWhenNoFindbugsActiveRules() {\n    ActiveRule activeRule1 = anActiveRuleFromAnotherPlugin();\n    ActiveRule activeRule2 = anActiveRuleFromAnotherPlugin();\n\n    FindBugsFilter filter = FindbugsProfileExporter.buildFindbugsFilter(Arrays.asList(activeRule1, activeRule2));\n    assertThat(filter.getMatchs()).hasSize(0);\n  }","commit_id":"9b1955062c118f0ae7d32a53d7c173dc5615f823","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"@Test\n  public void shouldBuildOnlyOneModuleWhenNoActiveRules() {\n    FindBugsFilter filter = FindbugsProfileExporter.buildFindbugsFilter(Collections.<ActiveRule> emptyList());\n    assertThat(filter.getMatchs().size(), is(0));\n  }","id":55958,"modified_method":"@Test\n  public void shouldBuildOnlyOneModuleWhenNoActiveRules() {\n    FindBugsFilter filter = FindbugsProfileExporter.buildFindbugsFilter(Collections.<ActiveRule> emptyList());\n    assertThat(filter.getMatchs()).hasSize(0);\n  }","commit_id":"9b1955062c118f0ae7d32a53d7c173dc5615f823","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"@Test\n  public void shouldBuildTwoModulesEvenIfSameTwoRulesActivated() {\n    ActiveRule activeRule1 = anActiveRule(DLS_DEAD_LOCAL_STORE);\n    ActiveRule activeRule2 = anActiveRule(SS_SHOULD_BE_STATIC);\n    FindBugsFilter filter = FindbugsProfileExporter.buildFindbugsFilter(Arrays.asList(activeRule1, activeRule2));\n\n    List<Match> matches = filter.getMatchs();\n    assertThat(matches.size(), is(2));\n\n    assertThat(matches.get(0).getBug().getPattern(), is(\"DLS_DEAD_LOCAL_STORE\"));\n    assertThat(matches.get(1).getBug().getPattern(), is(\"SS_SHOULD_BE_STATIC\"));\n  }","id":55959,"modified_method":"@Test\n  public void shouldBuildTwoModulesEvenIfSameTwoRulesActivated() {\n    ActiveRule activeRule1 = anActiveRule(DLS_DEAD_LOCAL_STORE);\n    ActiveRule activeRule2 = anActiveRule(SS_SHOULD_BE_STATIC);\n    FindBugsFilter filter = FindbugsProfileExporter.buildFindbugsFilter(Arrays.asList(activeRule1, activeRule2));\n\n    List<Match> matches = filter.getMatchs();\n    assertThat(matches).hasSize(2);\n\n    assertThat(matches.get(0).getBug().getPattern()).isEqualTo(\"DLS_DEAD_LOCAL_STORE\");\n    assertThat(matches.get(1).getBug().getPattern()).isEqualTo(\"SS_SHOULD_BE_STATIC\");\n  }","commit_id":"9b1955062c118f0ae7d32a53d7c173dc5615f823","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"@Test\n  public void shouldBuildModuleWithProperties() {\n    ActiveRule activeRule = anActiveRule(DLS_DEAD_LOCAL_STORE);\n    FindBugsFilter filter = FindbugsProfileExporter.buildFindbugsFilter(Arrays.asList(activeRule));\n\n    assertThat(filter.getMatchs().size(), is(1));\n    assertThat(filter.getMatchs().get(0).getBug().getPattern(), is(\"DLS_DEAD_LOCAL_STORE\"));\n  }","id":55960,"modified_method":"@Test\n  public void shouldBuildModuleWithProperties() {\n    ActiveRule activeRule = anActiveRule(DLS_DEAD_LOCAL_STORE);\n    FindBugsFilter filter = FindbugsProfileExporter.buildFindbugsFilter(Arrays.asList(activeRule));\n\n    assertThat(filter.getMatchs()).hasSize(1);\n    assertThat(filter.getMatchs().get(0).getBug().getPattern()).isEqualTo(\"DLS_DEAD_LOCAL_STORE\");\n  }","commit_id":"9b1955062c118f0ae7d32a53d7c173dc5615f823","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"@Test\n  public void testImportingXmlFileWithUnknownCode() {\n    String uncorrectFindbugsXml = TestUtils.getResourceContent(\"/org/sonar/plugins/findbugs/findbugsXmlWithUnknownCode.xml\");\n    ValidationMessages messages = ValidationMessages.create();\n    RulesProfile profile = importer.importProfile(new StringReader(uncorrectFindbugsXml), messages);\n    List<ActiveRule> results = profile.getActiveRules();\n\n    assertThat(results.size(), is(9));\n    assertThat(messages.getWarnings().size(), is(1));\n  }","id":55961,"modified_method":"@Test\n  public void testImportingXmlFileWithUnknownCode() {\n    String uncorrectFindbugsXml = TestUtils.getResourceContent(\"/org/sonar/plugins/findbugs/findbugsXmlWithUnknownCode.xml\");\n    ValidationMessages messages = ValidationMessages.create();\n    RulesProfile profile = importer.importProfile(new StringReader(uncorrectFindbugsXml), messages);\n    List<ActiveRule> results = profile.getActiveRules();\n\n    assertThat(results).hasSize(9);\n    assertThat(messages.getWarnings()).hasSize(1);\n  }","commit_id":"9b1955062c118f0ae7d32a53d7c173dc5615f823","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"@Test\n  public void testImportingXmlFileWithUnknownRule() {\n    String uncorrectFindbugsXml = TestUtils.getResourceContent(\"/org/sonar/plugins/findbugs/findbugsXmlWithUnknownRule.xml\");\n    ValidationMessages messages = ValidationMessages.create();\n    RulesProfile profile = importer.importProfile(new StringReader(uncorrectFindbugsXml), messages);\n    List<ActiveRule> results = profile.getActiveRules();\n\n    assertThat(results.size(), is(1));\n    assertThat(messages.getWarnings().size(), is(1));\n  }","id":55962,"modified_method":"@Test\n  public void testImportingXmlFileWithUnknownRule() {\n    String uncorrectFindbugsXml = TestUtils.getResourceContent(\"/org/sonar/plugins/findbugs/findbugsXmlWithUnknownRule.xml\");\n    ValidationMessages messages = ValidationMessages.create();\n    RulesProfile profile = importer.importProfile(new StringReader(uncorrectFindbugsXml), messages);\n    List<ActiveRule> results = profile.getActiveRules();\n\n    assertThat(results).hasSize(1);\n    assertThat(messages.getWarnings()).hasSize(1);\n  }","commit_id":"9b1955062c118f0ae7d32a53d7c173dc5615f823","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"@Test\n  public void shouldImportCategories() {\n    InputStream input = getClass().getResourceAsStream(\"/org/sonar/plugins/findbugs/shouldImportCategories.xml\");\n    RulesProfile profile = importer.importProfile(new InputStreamReader(input), ValidationMessages.create());\n    List<ActiveRule> results = profile.getActiveRules();\n\n    assertThat(results.size(), is(182));\n    assertThat(profile.getActiveRule(FindbugsConstants.REPOSITORY_KEY, \"LG_LOST_LOGGER_DUE_TO_WEAK_REFERENCE\"), is(notNullValue()));\n  }","id":55963,"modified_method":"@Test\n  public void shouldImportCategories() {\n    InputStream input = getClass().getResourceAsStream(\"/org/sonar/plugins/findbugs/shouldImportCategories.xml\");\n    RulesProfile profile = importer.importProfile(new InputStreamReader(input), ValidationMessages.create());\n    List<ActiveRule> results = profile.getActiveRules();\n\n    assertThat(results).hasSize(182);\n    assertThat(profile.getActiveRule(FindbugsConstants.REPOSITORY_KEY, \"LG_LOST_LOGGER_DUE_TO_WEAK_REFERENCE\")).isNotNull();\n  }","commit_id":"9b1955062c118f0ae7d32a53d7c173dc5615f823","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"@Test\n  public void shouldBuilModuleTreeFromXml() throws IOException {\n    InputStream input = getClass().getResourceAsStream(\"/org/sonar/plugins/findbugs/test_module_tree.xml\");\n\n    XStream xStream = FindBugsFilter.createXStream();\n    FindBugsFilter filter = (FindBugsFilter) xStream.fromXML(IOUtils.toString(input));\n\n    List<Match> matches = filter.getMatchs();\n    assertThat(matches.size(), is(2));\n    assertThat(matches.get(0).getBug().getPattern(), is(\"DLS_DEAD_LOCAL_STORE\"));\n    assertThat(matches.get(1).getBug().getPattern(), is(\"URF_UNREAD_FIELD\"));\n  }","id":55964,"modified_method":"@Test\n  public void shouldBuilModuleTreeFromXml() throws IOException {\n    InputStream input = getClass().getResourceAsStream(\"/org/sonar/plugins/findbugs/test_module_tree.xml\");\n\n    XStream xStream = FindBugsFilter.createXStream();\n    FindBugsFilter filter = (FindBugsFilter) xStream.fromXML(IOUtils.toString(input));\n\n    List<Match> matches = filter.getMatchs();\n    assertThat(matches).hasSize(2);\n    assertThat(matches.get(0).getBug().getPattern()).isEqualTo(\"DLS_DEAD_LOCAL_STORE\");\n    assertThat(matches.get(1).getBug().getPattern()).isEqualTo(\"URF_UNREAD_FIELD\");\n  }","commit_id":"9b1955062c118f0ae7d32a53d7c173dc5615f823","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"@Test\n  public void testImportingUncorrectXmlFile() {\n    String uncorrectFindbugsXml = TestUtils.getResourceContent(\"/org/sonar/plugins/findbugs/uncorrectFindbugsXml.xml\");\n    ValidationMessages messages = ValidationMessages.create();\n    RulesProfile profile = importer.importProfile(new StringReader(uncorrectFindbugsXml), messages);\n    List<ActiveRule> results = profile.getActiveRules();\n\n    assertThat(results.size(), is(0));\n    assertThat(messages.getErrors().size(), is(1));\n  }","id":55965,"modified_method":"@Test\n  public void testImportingUncorrectXmlFile() {\n    String uncorrectFindbugsXml = TestUtils.getResourceContent(\"/org/sonar/plugins/findbugs/uncorrectFindbugsXml.xml\");\n    ValidationMessages messages = ValidationMessages.create();\n    RulesProfile profile = importer.importProfile(new StringReader(uncorrectFindbugsXml), messages);\n    List<ActiveRule> results = profile.getActiveRules();\n\n    assertThat(results).hasSize(0);\n    assertThat(messages.getErrors()).hasSize(1);\n  }","commit_id":"9b1955062c118f0ae7d32a53d7c173dc5615f823","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"@Test\n  public void shouldImportConfigurationBugInclude() {\n    InputStream input = getClass().getResourceAsStream(\"/org/sonar/plugins/findbugs/findbugs-include.xml\");\n    RulesProfile profile = importer.importProfile(new InputStreamReader(input), ValidationMessages.create());\n    List<ActiveRule> results = profile.getActiveRules();\n\n    assertThat(results.size(), is(11));\n    assertThat(profile.getActiveRule(FindbugsConstants.REPOSITORY_KEY, \"RC_REF_COMPARISON_BAD_PRACTICE\"), is(notNullValue()));\n  }","id":55966,"modified_method":"@Test\n  public void shouldImportConfigurationBugInclude() {\n    InputStream input = getClass().getResourceAsStream(\"/org/sonar/plugins/findbugs/findbugs-include.xml\");\n    RulesProfile profile = importer.importProfile(new InputStreamReader(input), ValidationMessages.create());\n    List<ActiveRule> results = profile.getActiveRules();\n\n    assertThat(results).hasSize(11);\n    assertThat(profile.getActiveRule(FindbugsConstants.REPOSITORY_KEY, \"RC_REF_COMPARISON_BAD_PRACTICE\")).isNotNull();\n  }","commit_id":"9b1955062c118f0ae7d32a53d7c173dc5615f823","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"@Test\n  public void shouldImportPatterns() {\n    String findbugsConf = TestUtils.getResourceContent(\"/org/sonar/plugins/findbugs/shouldImportPatterns.xml\");\n    RulesProfile profile = importer.importProfile(new StringReader(findbugsConf), ValidationMessages.create());\n\n    assertThat(profile.getActiveRules().size(), is(2));\n    assertThat(profile.getActiveRule(FindbugsConstants.REPOSITORY_KEY, \"NP_CLOSING_NULL\"), is(notNullValue()));\n    assertThat(profile.getActiveRule(FindbugsConstants.REPOSITORY_KEY, \"RC_REF_COMPARISON_BAD_PRACTICE\"), is(notNullValue()));\n  }","id":55967,"modified_method":"@Test\n  public void shouldImportPatterns() {\n    String findbugsConf = TestUtils.getResourceContent(\"/org/sonar/plugins/findbugs/shouldImportPatterns.xml\");\n    RulesProfile profile = importer.importProfile(new StringReader(findbugsConf), ValidationMessages.create());\n\n    assertThat(profile.getActiveRules()).hasSize(2);\n    assertThat(profile.getActiveRule(FindbugsConstants.REPOSITORY_KEY, \"NP_CLOSING_NULL\")).isNotNull();\n    assertThat(profile.getActiveRule(FindbugsConstants.REPOSITORY_KEY, \"RC_REF_COMPARISON_BAD_PRACTICE\")).isNotNull();\n  }","commit_id":"9b1955062c118f0ae7d32a53d7c173dc5615f823","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"@Test\n  public void shouldImportCodes() {\n    InputStream input = getClass().getResourceAsStream(\"/org/sonar/plugins/findbugs/shouldImportCodes.xml\");\n    RulesProfile profile = importer.importProfile(new InputStreamReader(input), ValidationMessages.create());\n    List<ActiveRule> results = profile.getActiveRules();\n\n    assertThat(results.size(), is(18));\n    assertThat(profile.getActiveRule(FindbugsConstants.REPOSITORY_KEY, \"EC_INCOMPATIBLE_ARRAY_COMPARE\"), is(notNullValue()));\n    assertThat(profile.getActiveRule(FindbugsConstants.REPOSITORY_KEY, \"BC_IMPOSSIBLE_DOWNCAST_OF_TOARRAY\"), is(notNullValue()));\n  }","id":55968,"modified_method":"@Test\n  public void shouldImportCodes() {\n    InputStream input = getClass().getResourceAsStream(\"/org/sonar/plugins/findbugs/shouldImportCodes.xml\");\n    RulesProfile profile = importer.importProfile(new InputStreamReader(input), ValidationMessages.create());\n    List<ActiveRule> results = profile.getActiveRules();\n\n    assertThat(results).hasSize(18);\n    assertThat(profile.getActiveRule(FindbugsConstants.REPOSITORY_KEY, \"EC_INCOMPATIBLE_ARRAY_COMPARE\")).isNotNull();\n    assertThat(profile.getActiveRule(FindbugsConstants.REPOSITORY_KEY, \"BC_IMPOSSIBLE_DOWNCAST_OF_TOARRAY\")).isNotNull();\n  }","commit_id":"9b1955062c118f0ae7d32a53d7c173dc5615f823","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"@Test\n  public void testImportingXmlFileWithUnknownCategory() {\n    String uncorrectFindbugsXml = TestUtils.getResourceContent(\"/org/sonar/plugins/findbugs/findbugsXmlWithUnknownCategory.xml\");\n    ValidationMessages messages = ValidationMessages.create();\n    RulesProfile profile = importer.importProfile(new StringReader(uncorrectFindbugsXml), messages);\n    List<ActiveRule> results = profile.getActiveRules();\n\n    assertThat(results.size(), is(141));\n    assertThat(messages.getWarnings().size(), is(1));\n  }","id":55969,"modified_method":"@Test\n  public void testImportingXmlFileWithUnknownCategory() {\n    String uncorrectFindbugsXml = TestUtils.getResourceContent(\"/org/sonar/plugins/findbugs/findbugsXmlWithUnknownCategory.xml\");\n    ValidationMessages messages = ValidationMessages.create();\n    RulesProfile profile = importer.importProfile(new StringReader(uncorrectFindbugsXml), messages);\n    List<ActiveRule> results = profile.getActiveRules();\n\n    assertThat(results).hasSize(141);\n    assertThat(messages.getWarnings()).hasSize(1);\n  }","commit_id":"9b1955062c118f0ae7d32a53d7c173dc5615f823","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"@Test\n  public void testLoadRepositoryFromXml() {\n    ServerFileSystem fileSystem = mock(ServerFileSystem.class);\n    FindbugsRuleRepository repository = new FindbugsRuleRepository(fileSystem, new XMLRuleParser());\n    List<Rule> rules = repository.createRules();\n    assertThat(rules.size(), greaterThan(300));\n    for (Rule rule : rules) {\n      assertNotNull(rule.getKey());\n      assertNotNull(rule.getConfigKey());\n      assertNotNull(rule.getName());\n    }\n  }","id":55970,"modified_method":"@Test\n  public void testLoadRepositoryFromXml() {\n    ServerFileSystem fileSystem = mock(ServerFileSystem.class);\n    FindbugsRuleRepository repository = new FindbugsRuleRepository(fileSystem, new XMLRuleParser());\n    List<Rule> rules = repository.createRules();\n    assertThat(rules.size()).isGreaterThan(300);\n    for (Rule rule : rules) {\n      assertThat(rule.getKey()).isNotNull();\n      assertThat(rule.getConfigKey()).isNotNull();\n      assertThat(rule.getName()).isNotNull();\n    }\n  }","commit_id":"9b1955062c118f0ae7d32a53d7c173dc5615f823","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"public void analyse(Project project, SensorContext context) {\n    if (project.getReuseExistingRulesConfig()) {\n      Logs.INFO.warn(\"Reusing existing Findbugs configuration not supported any more.\");\n    }\n    File report = getFindbugsReportFile(project);\n    if (report == null) {\n      report = executor.execute();\n    }\n    FindbugsXmlReportParser reportParser = new FindbugsXmlReportParser(report);\n    List<FindbugsXmlReportParser.Violation> fbViolations = reportParser.getViolations();\n    for (FindbugsXmlReportParser.Violation fbViolation : fbViolations) {\n      Rule rule = ruleFinder.findByKey(FindbugsConstants.REPOSITORY_KEY, fbViolation.getType());\n      if (rule != null) { // ignore violations from report, if rule not activated in Sonar\n        JavaFile resource = new JavaFile(fbViolation.getSonarJavaFileKey());\n        if (context.getResource(resource) != null) {\n          Violation violation = Violation.create(rule, resource).setLineId(fbViolation.getStart()).setMessage(fbViolation.getLongMessage());\n          context.saveViolation(violation);\n        }\n      } else {\n        Logs.INFO.warn(\"Findbugs rule '{}' not active in Sonar.\", fbViolation.getType());\n      }\n    }\n  }","id":55971,"modified_method":"public void analyse(Project project, SensorContext context) {\n    if (project.getReuseExistingRulesConfig()) {\n      LOG.warn(\"Reusing existing Findbugs configuration not supported any more.\");\n    }\n    File report = getFindbugsReportFile(project);\n    if (report == null) {\n      report = executor.execute();\n    }\n    FindbugsXmlReportParser reportParser = new FindbugsXmlReportParser(report);\n    List<FindbugsXmlReportParser.XmlBugInstance> bugInstances = reportParser.getBugInstances();\n\n    for (FindbugsXmlReportParser.XmlBugInstance bugInstance : bugInstances) {\n      FindbugsXmlReportParser.XmlSourceLineAnnotation sourceLine = bugInstance.getPrimarySourceLine();\n      if (sourceLine == null) {\n        LOG.warn(\"No source line for \" + bugInstance.getType());\n        continue;\n      }\n\n      Rule rule = ruleFinder.findByKey(FindbugsConstants.REPOSITORY_KEY, bugInstance.getType());\n      if (rule == null) {\n        // ignore violations from report, if rule not activated in Sonar\n        LOG.warn(\"Findbugs rule '{}' not active in Sonar.\", bugInstance.getType());\n        continue;\n      }\n\n      JavaFile resource = new JavaFile(sourceLine.getSonarJavaFileKey());\n      if (context.getResource(resource) != null) {\n        Violation violation = Violation.create(rule, resource)\n            .setLineId(sourceLine.getStart())\n            .setMessage(bugInstance.getLongMessage());\n        context.saveViolation(violation);\n      }\n    }\n  }","commit_id":"9b1955062c118f0ae7d32a53d7c173dc5615f823","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"@Test\n  public void shouldReuseReport() throws Exception {\n    Project project = createProject();\n    FindbugsExecutor executor = mock(FindbugsExecutor.class);\n    SensorContext context = mock(SensorContext.class);\n    Configuration conf = mock(Configuration.class);\n    File xmlFile = new File(getClass().getResource(\"/org/sonar/plugins/findbugs/findbugsReport.xml\").toURI());\n    when(conf.getString(CoreProperties.FINDBUGS_REPORT_PATH)).thenReturn(xmlFile.getAbsolutePath());\n    when(project.getConfiguration()).thenReturn(conf);\n    when(context.getResource(any(Resource.class))).thenReturn(new JavaFile(\"org.sonar.MyClass\"));\n\n    FindbugsSensor analyser = new FindbugsSensor(createRulesProfileWithActiveRules(), new FakeRuleFinder(), executor);\n    analyser.analyse(project, context);\n\n    verify(executor, never()).execute();\n    verify(context, times(3)).saveViolation(any(Violation.class));\n\n    Violation wanted = Violation.create((Rule) null, new JavaFile(\"org.sonar.commons.ZipUtils\")).setMessage(\n        \"Empty zip file entry created in org.sonar.commons.ZipUtils._zip(String, File, ZipOutputStream)\").setLineId(107);\n\n    verify(context).saveViolation(argThat(new IsViolation(wanted)));\n\n    wanted = Violation.create((Rule) null, new JavaFile(\"org.sonar.commons.resources.MeasuresDao\")).setMessage(\n        \"The class org.sonar.commons.resources.MeasuresDao$1 could be refactored into a named _static_ inner class\").setLineId(56);\n\n    verify(context).saveViolation(argThat(new IsViolation(wanted)));\n  }","id":55972,"modified_method":"@Test\n  public void shouldReuseReport() throws Exception {\n    Project project = createProject();\n    FindbugsExecutor executor = mock(FindbugsExecutor.class);\n    SensorContext context = mock(SensorContext.class);\n    Configuration conf = mock(Configuration.class);\n    File xmlFile = new File(getClass().getResource(\"/org/sonar/plugins/findbugs/findbugsReport.xml\").toURI());\n    when(conf.getString(CoreProperties.FINDBUGS_REPORT_PATH)).thenReturn(xmlFile.getAbsolutePath());\n    when(project.getConfiguration()).thenReturn(conf);\n    when(context.getResource(any(Resource.class))).thenReturn(new JavaFile(\"org.sonar.MyClass\"));\n\n    FindbugsSensor analyser = new FindbugsSensor(createRulesProfileWithActiveRules(), new FakeRuleFinder(), executor);\n    analyser.analyse(project, context);\n\n    verify(executor, never()).execute();\n    verify(context, times(2)).saveViolation(any(Violation.class));\n\n    Violation wanted = Violation.create((Rule) null, new JavaFile(\"org.sonar.commons.ZipUtils\")).setMessage(\n        \"Empty zip file entry created in org.sonar.commons.ZipUtils._zip(String, File, ZipOutputStream)\").setLineId(107);\n    verify(context).saveViolation(argThat(new IsViolation(wanted)));\n\n    wanted = Violation.create((Rule) null, new JavaFile(\"org.sonar.commons.resources.MeasuresDao\")).setMessage(\n        \"The class org.sonar.commons.resources.MeasuresDao$1 could be refactored into a named _static_ inner class\").setLineId(56);\n    verify(context).saveViolation(argThat(new IsViolation(wanted)));\n  }","commit_id":"9b1955062c118f0ae7d32a53d7c173dc5615f823","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"@Test\n  public void shouldExecuteFindbugsWhenNoReportProvided() throws Exception {\n    Project project = createProject();\n    FindbugsExecutor executor = mock(FindbugsExecutor.class);\n    SensorContext context = mock(SensorContext.class);\n    Configuration conf = mock(Configuration.class);\n    // We assume that this report was generated during findbugs execution\n    File xmlFile = new File(getClass().getResource(\"/org/sonar/plugins/findbugs/findbugsReport.xml\").toURI());\n    when(project.getConfiguration()).thenReturn(conf);\n    when(executor.execute()).thenReturn(xmlFile);\n    when(context.getResource(any(Resource.class))).thenReturn(new JavaFile(\"org.sonar.MyClass\"));\n\n    FindbugsSensor analyser = new FindbugsSensor(createRulesProfileWithActiveRules(), new FakeRuleFinder(), executor);\n    analyser.analyse(project, context);\n\n    verify(executor).execute();\n    verify(context, times(3)).saveViolation(any(Violation.class));\n\n    Violation wanted = Violation.create((Rule) null, new JavaFile(\"org.sonar.commons.ZipUtils\")).setMessage(\n        \"Empty zip file entry created in org.sonar.commons.ZipUtils._zip(String, File, ZipOutputStream)\").setLineId(107);\n\n    verify(context).saveViolation(argThat(new IsViolation(wanted)));\n\n    wanted = Violation.create((Rule) null, new JavaFile(\"org.sonar.commons.resources.MeasuresDao\")).setMessage(\n        \"The class org.sonar.commons.resources.MeasuresDao$1 could be refactored into a named _static_ inner class\").setLineId(56);\n\n    verify(context).saveViolation(argThat(new IsViolation(wanted)));\n  }","id":55973,"modified_method":"@Test\n  public void shouldExecuteFindbugsWhenNoReportProvided() throws Exception {\n    Project project = createProject();\n    FindbugsExecutor executor = mock(FindbugsExecutor.class);\n    SensorContext context = mock(SensorContext.class);\n    Configuration conf = mock(Configuration.class);\n    // We assume that this report was generated during findbugs execution\n    File xmlFile = new File(getClass().getResource(\"/org/sonar/plugins/findbugs/findbugsReport.xml\").toURI());\n    when(project.getConfiguration()).thenReturn(conf);\n    when(executor.execute()).thenReturn(xmlFile);\n    when(context.getResource(any(Resource.class))).thenReturn(new JavaFile(\"org.sonar.MyClass\"));\n\n    FindbugsSensor analyser = new FindbugsSensor(createRulesProfileWithActiveRules(), new FakeRuleFinder(), executor);\n    analyser.analyse(project, context);\n\n    verify(executor).execute();\n    verify(context, times(2)).saveViolation(any(Violation.class));\n\n    Violation wanted = Violation.create((Rule) null, new JavaFile(\"org.sonar.commons.ZipUtils\")).setMessage(\n        \"Empty zip file entry created in org.sonar.commons.ZipUtils._zip(String, File, ZipOutputStream)\").setLineId(107);\n    verify(context).saveViolation(argThat(new IsViolation(wanted)));\n\n    wanted = Violation.create((Rule) null, new JavaFile(\"org.sonar.commons.resources.MeasuresDao\")).setMessage(\n        \"The class org.sonar.commons.resources.MeasuresDao$1 could be refactored into a named _static_ inner class\").setLineId(56);\n    verify(context).saveViolation(argThat(new IsViolation(wanted)));\n  }","commit_id":"9b1955062c118f0ae7d32a53d7c173dc5615f823","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"@Test\n  public void getFindbugsVersion() {\n    assertThat(FindbugsVersion.getVersion().length(), greaterThan(1));\n  }","id":55974,"modified_method":"@Test\n  public void getFindbugsVersion() {\n    assertThat(FindbugsVersion.getVersion().length()).isGreaterThan(1);\n  }","commit_id":"9b1955062c118f0ae7d32a53d7c173dc5615f823","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"@Before\n  public void init() {\n    File findbugsXmlReport = getFile(\"/org/sonar/plugins/findbugs/findbugsReport.xml\");\n    FindbugsXmlReportParser xmlParser = new FindbugsXmlReportParser(findbugsXmlReport);\n    violations = xmlParser.getViolations();\n  }","id":55975,"modified_method":"@Before\n  public void init() {\n    File findbugsXmlReport = getFile(\"/org/sonar/plugins/findbugs/findbugsReport.xml\");\n    FindbugsXmlReportParser xmlParser = new FindbugsXmlReportParser(findbugsXmlReport);\n    violations = xmlParser.getBugInstances();\n  }","commit_id":"9b1955062c118f0ae7d32a53d7c173dc5615f823","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"@Test\n  public void testGetViolations() {\n    assertThat(violations.size(), is(3));\n\n    FindbugsXmlReportParser.Violation fbViolation = violations.get(0);\n    assertThat(fbViolation.getType(), is(\"AM_CREATES_EMPTY_ZIP_FILE_ENTRY\"));\n    assertThat(fbViolation.getLongMessage(),\n        is(\"Empty zip file entry created in org.sonar.commons.ZipUtils._zip(String, File, ZipOutputStream)\"));\n    assertThat(fbViolation.getStart(), is(107));\n    assertThat(fbViolation.getEnd(), is(107));\n    assertThat(fbViolation.getClassName(), is(\"org.sonar.commons.ZipUtils\"));\n    assertThat(fbViolation.getSourcePath(), is(\"org/sonar/commons/ZipUtils.java\"));\n  }","id":55976,"modified_method":"@Test\n  public void testGetViolations() {\n    assertThat(violations.size()).isEqualTo(2);\n\n    FindbugsXmlReportParser.XmlBugInstance fbViolation = violations.get(0);\n    assertThat(fbViolation.getType()).isEqualTo(\"AM_CREATES_EMPTY_ZIP_FILE_ENTRY\");\n    assertThat(fbViolation.getLongMessage()).isEqualTo(\"Empty zip file entry created in org.sonar.commons.ZipUtils._zip(String, File, ZipOutputStream)\");\n\n    FindbugsXmlReportParser.XmlSourceLineAnnotation sourceLine = fbViolation.getPrimarySourceLine();\n    assertThat(sourceLine.getStart()).isEqualTo(107);\n    assertThat(sourceLine.getEnd()).isEqualTo(107);\n    assertThat(sourceLine.getClassName()).isEqualTo(\"org.sonar.commons.ZipUtils\");\n  }","commit_id":"9b1955062c118f0ae7d32a53d7c173dc5615f823","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"@Test(expected = SonarException.class)\n  public void createFindbugsXmlReportParserWithUnexistedReportFile() {\n    File xmlReport = new File(\"doesntExist.xml\");\n    new FindbugsXmlReportParser(xmlReport);\n  }","id":55977,"modified_method":"@Test\n  public void createFindbugsXmlReportParserWithUnexistedReportFile() {\n    File xmlReport = new File(\"doesntExist.xml\");\n    thrown.expect(SonarException.class);\n    thrown.expectMessage(\"The findbugs XML report can't be found at '\" + xmlReport.getAbsolutePath() + \"'\");\n    new FindbugsXmlReportParser(xmlReport);\n  }","commit_id":"9b1955062c118f0ae7d32a53d7c173dc5615f823","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"@Test\n  public void testGetSonarJavaFileKey() {\n    FindbugsXmlReportParser.Violation violation = new FindbugsXmlReportParser.Violation();\n    violation.className = \"org.sonar.batch.Sensor\";\n    assertThat(violation.getSonarJavaFileKey(), is(\"org.sonar.batch.Sensor\"));\n    violation.className = \"Sensor\";\n    assertThat(violation.getSonarJavaFileKey(), is(\"Sensor\"));\n    violation.className = \"org.sonar.batch.Sensor$1\";\n    assertThat(violation.getSonarJavaFileKey(), is(\"org.sonar.batch.Sensor\"));\n  }","id":55978,"modified_method":"@Test\n  public void testGetSonarJavaFileKey() {\n    FindbugsXmlReportParser.XmlSourceLineAnnotation sourceLine = new FindbugsXmlReportParser.XmlSourceLineAnnotation();\n    sourceLine.className = \"org.sonar.batch.Sensor\";\n    assertThat(sourceLine.getSonarJavaFileKey()).isEqualTo(\"org.sonar.batch.Sensor\");\n    sourceLine.className = \"Sensor\";\n    assertThat(sourceLine.getSonarJavaFileKey()).isEqualTo(\"Sensor\");\n    sourceLine.className = \"org.sonar.batch.Sensor$1\";\n    assertThat(sourceLine.getSonarJavaFileKey()).isEqualTo(\"org.sonar.batch.Sensor\");\n  }","commit_id":"9b1955062c118f0ae7d32a53d7c173dc5615f823","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"@Test\n  public void shouldCreateProfile() {\n    FindbugsProfileImporter importer = new FindbugsProfileImporter(new FakeRuleFinder());\n    SonarWayWithFindbugsProfile sonarWayWithFindbugs = new SonarWayWithFindbugsProfile(importer);\n    ValidationMessages validation = ValidationMessages.create();\n    RulesProfile profile = sonarWayWithFindbugs.createProfile(validation);\n    assertThat(profile.getActiveRulesByRepository(FindbugsConstants.REPOSITORY_KEY).size(), is(399));\n    assertThat(validation.hasErrors(), is(false));\n  }","id":55979,"modified_method":"@Test\n  public void shouldCreateProfile() {\n    FindbugsProfileImporter importer = new FindbugsProfileImporter(new FakeRuleFinder());\n    SonarWayWithFindbugsProfile sonarWayWithFindbugs = new SonarWayWithFindbugsProfile(importer);\n    ValidationMessages validation = ValidationMessages.create();\n    RulesProfile profile = sonarWayWithFindbugs.createProfile(validation);\n    assertThat(profile.getActiveRulesByRepository(FindbugsConstants.REPOSITORY_KEY)).hasSize(399);\n    assertThat(validation.hasErrors()).isFalse();\n  }","commit_id":"9b1955062c118f0ae7d32a53d7c173dc5615f823","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"@Test\n  public void testDuplicationInSingleFile() {\n    File file = new File(\"test-resources/org/sonar/duplications/cpd/CPDTest/CPDFile3.java\");\n    addToIndex(file);\n\n    List<CloneGroup> duplications = detect(file);\n    assertThat(duplications.size(), is(1));\n\n    CloneGroup duplication = duplications.get(0);\n    assertThat(duplication.getOriginPart().getResourceId(), is(file.getAbsolutePath()));\n    assertThat(duplication.getCloneParts().size(), is(2));\n    assertThat(\"length in tokens\", duplication.getLengthInUnits(), is(157));\n\n    ClonePart part = duplication.getCloneParts().get(0);\n    assertThat(part.getResourceId(), is(file.getAbsolutePath()));\n    assertThat(part.getStartLine(), is(30));\n    assertThat(part.getEndLine(), is(44));\n  }","id":55980,"modified_method":"@Test\n  public void testDuplicationInSingleFile() {\n    File file = new File(\"test-resources/org/sonar/duplications/cpd/CPDTest/CPDFile3.java\");\n    addToIndex(file);\n\n    List<CloneGroup> duplications = detect(file);\n    assertThat(duplications.size()).isEqualTo(1);\n\n    CloneGroup duplication = duplications.get(0);\n    assertThat(duplication.getOriginPart().getResourceId()).isEqualTo(file.getAbsolutePath());\n    assertThat(duplication.getCloneParts().size()).isEqualTo(2);\n    assertThat(duplication.getLengthInUnits()).as(\"length in tokens\").isEqualTo(157);\n\n    ClonePart part = duplication.getCloneParts().get(0);\n    assertThat(part.getResourceId()).isEqualTo(file.getAbsolutePath());\n    assertThat(part.getStartLine()).isEqualTo(30);\n    assertThat(part.getEndLine()).isEqualTo(44);\n  }","commit_id":"385bec1cb26d806ec93a11605c98a4b6412ccf13","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"@Test\n  public void testDuplicationBetweenTwoFiles() {\n    File file1 = new File(\"test-resources/org/sonar/duplications/cpd/CPDTest/CPDFile1.java\");\n    File file2 = new File(\"test-resources/org/sonar/duplications/cpd/CPDTest/CPDFile2.java\");\n    addToIndex(file1);\n    addToIndex(file2);\n\n    List<CloneGroup> duplications = detect(file1);\n    assertThat(duplications.size(), is(1));\n\n    CloneGroup duplication = duplications.get(0);\n    assertThat(duplication.getOriginPart().getResourceId(), is(file1.getAbsolutePath()));\n    assertThat(duplication.getCloneParts().size(), is(2));\n    assertThat(\"length in tokens\", duplication.getLengthInUnits(), is(115));\n\n    ClonePart part = duplication.getCloneParts().get(0);\n    assertThat(part.getResourceId(), is(file1.getAbsolutePath()));\n    assertThat(part.getStartLine(), is(18));\n    assertThat(part.getEndLine(), is(41));\n  }","id":55981,"modified_method":"@Test\n  public void testDuplicationBetweenTwoFiles() {\n    File file1 = new File(\"test-resources/org/sonar/duplications/cpd/CPDTest/CPDFile1.java\");\n    File file2 = new File(\"test-resources/org/sonar/duplications/cpd/CPDTest/CPDFile2.java\");\n    addToIndex(file1);\n    addToIndex(file2);\n\n    List<CloneGroup> duplications = detect(file1);\n    assertThat(duplications.size()).isEqualTo(1);\n\n    CloneGroup duplication = duplications.get(0);\n    assertThat(duplication.getOriginPart().getResourceId()).isEqualTo(file1.getAbsolutePath());\n    ClonePart part1 = new ClonePart(file1.getAbsolutePath(), 1, 18, 41);\n    ClonePart part2 = new ClonePart(file2.getAbsolutePath(), 1, 18, 41);\n    assertThat(duplication.getCloneParts()).containsOnly(part1, part2);\n    assertThat(duplication.getLengthInUnits()).as(\"length in tokens\").isEqualTo(115);\n  }","commit_id":"385bec1cb26d806ec93a11605c98a4b6412ccf13","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"public void _init() {\n    super._init();\n\n    myNamespace.setText(myOptions.getLanguageNamespace());\n    myPath.setPath(myOptions.getLanguagePath());\n    updateLanguagePath();\n  }","id":55982,"modified_method":"public void _init() {\n    super._init();\n\n    if (myOptions.getLanguageNamespace() == null) myOptions.setLanguageNamespace(myOptions.getProjectName());\n\n    myNamespace.setText(myOptions.getLanguageNamespace());\n    myPath.setPath(myOptions.getLanguagePath());\n    updateLanguagePath();\n  }","commit_id":"eb2c375be2d9618532457ef75f73e48ec62a4e23","url":"https://github.com/JetBrains/MPS"},{"original_method":"public void _commit(boolean finishChosen) throws CommitStepException {\n    super._commit(finishChosen);\n\n    if (myOptions.getCreateNewLanguage()) {\n      File dir = new File(myPath.getPath());\n      if (!(dir.isAbsolute())) {\n        throw new CommitStepException(\"Path should path\");\n      }\n      if (myNamespace.getText().length() == 0) {\n        throw new CommitStepException(\"Enter namespace\");\n      }\n      if (MPSModuleRepository.getInstance().getModuleByUID(myNamespace.getText()) != null) {\n        throw new CommitStepException(\"Language namespace already exists\");\n      }\n      if (NameUtil.shortNameFromLongName(myNamespace.getText()).length() == 0) {\n        throw new CommitStepException(\"Enter valid namespace\");\n      }\n      if (!(dir.exists())) {\n        if (!(DirectoryUtil.askToCreateNewDirectory(JOptionPane.getFrameForComponent(myComponent), dir))) {\n          return;\n        }\n      }\n    }\n\n    myOptions.setLanguageNamespace(myNamespace.getText());\n    myOptions.setLanguagePath(myPath.getPath());\n  }","id":55983,"modified_method":"public void _commit(boolean finishChosen) throws CommitStepException {\n    super._commit(finishChosen);\n\n    if (myOptions.getCreateNewLanguage()) {\n      File dir = new File(myPath.getPath());\n      if (!(dir.isAbsolute())) {\n        throw new CommitStepException(\"Path should path\");\n      }\n      if (myNamespace.getText().length() == 0) {\n        throw new CommitStepException(\"Enter namespace\");\n      }\n      if (MPSModuleRepository.getInstance().getModuleByUID(myNamespace.getText()) != null) {\n        throw new CommitStepException(\"Language namespace already exists\");\n      }\n      if (NameUtil.shortNameFromLongName(myNamespace.getText()).length() == 0) {\n        throw new CommitStepException(\"Enter valid namespace\");\n      }\n      if (!(dir.exists())) {\n        boolean created = DirectoryUtil.askToCreateNewDirectory(JOptionPane.getFrameForComponent(myComponent), dir);\n        if (!created) {\n          throw new CommitStepException(\"Specify another directory\");\n        }\n      }\n    }\n\n    myOptions.setLanguageNamespace(myNamespace.getText());\n    myOptions.setLanguagePath(myPath.getPath());\n  }","commit_id":"eb2c375be2d9618532457ef75f73e48ec62a4e23","url":"https://github.com/JetBrains/MPS"},{"original_method":"public void _commit(boolean finishChosen) throws CommitStepException {\n    super._commit(finishChosen);\n\n    if (myProjectPath.getPath() == null) {\n      throw new CommitStepException(\"Project path should be specified\");\n    }\n    File projectDirFile = new File(myProjectPath.getPath());\n    if (!(projectDirFile.isAbsolute())) {\n      throw new CommitStepException(\"Path should be absolute\");\n    }\n    if (myProjectName.getText().length() == 0) {\n      throw new CommitStepException(\"Project name shouldn't be empty\");\n    }\n    if (!(projectDirFile.exists())) {\n      DirectoryUtil.askToCreateNewDirectory(JOptionPane.getFrameForComponent(myComponent), projectDirFile);\n    }\n\n    myOptions.setProjectName(myProjectName.getText());\n    myOptions.setProjectPath(myProjectPath.getPath());\n  }","id":55984,"modified_method":"public void _commit(boolean finishChosen) throws CommitStepException {\n    super._commit(finishChosen);\n\n    if (myProjectPath.getPath() == null) {\n      throw new CommitStepException(\"Project path should be specified\");\n    }\n    File projectDirFile = new File(myProjectPath.getPath());\n    if (!(projectDirFile.isAbsolute())) {\n      throw new CommitStepException(\"Path should be absolute\");\n    }\n    if (myProjectName.getText().length() == 0) {\n      throw new CommitStepException(\"Project name shouldn't be empty\");\n    }\n    if (!(projectDirFile.exists())) {\n      boolean created = DirectoryUtil.askToCreateNewDirectory(JOptionPane.getFrameForComponent(myComponent), projectDirFile);\n      if (!created) {\n        throw new CommitStepException(\"Specify another directory\");\n      }\n    }\n\n    myOptions.setProjectName(myProjectName.getText());\n    myOptions.setProjectPath(myProjectPath.getPath());\n  }","commit_id":"eb2c375be2d9618532457ef75f73e48ec62a4e23","url":"https://github.com/JetBrains/MPS"},{"original_method":"public void _commit(boolean finishChosen) throws CommitStepException {\n    super._commit(finishChosen);\n\n    if (myOptions.getCreateNewSolution()) {\n      if (myPath.getPath().length() == 0) {\n        throw new CommitStepException(\"Enter solution directory\");\n      }\n      if (myNamespace.getText().length() == 0) {\n        throw new CommitStepException(\"Enter solution name\");\n      }\n      if (MPSModuleRepository.getInstance().getModuleByUID(myNamespace.getText()) != null) {\n        throw new CommitStepException(\"Duplicate solution name\");\n      }\n      String descriptorPath = myPath.getPath() + File.separator + myNamespace.getText() + MPSExtentions.DOT_SOLUTION;\n      File file = new File(descriptorPath);\n      if (file.exists()) {\n        throw new CommitStepException(\"Solution file already exists\");\n      }\n      File dir = file.getParentFile();\n      if (!(dir.isAbsolute())) {\n        throw new CommitStepException(\"Path should be absolute\");\n      }\n      if (!(dir.exists())) {\n        if (!(DirectoryUtil.askToCreateNewDirectory(JOptionPane.getFrameForComponent(myComponent), dir))) {\n          throw new CommitStepException(\"Enter correct path\");\n        }\n      }\n      final File descriptorFile = prepareToCreateNewSolutionDescriptorFile(descriptorPath);\n      if (descriptorFile == null) {\n        throw new CommitStepException(\"Can't create \" + descriptorPath);\n      }\n    }\n\n    myOptions.setSolutionNamespace(myNamespace.getText());\n    myOptions.setSolutionPath(myPath.getPath());\n  }","id":55985,"modified_method":"public void _commit(boolean finishChosen) throws CommitStepException {\n    super._commit(finishChosen);\n\n    if (myOptions.getCreateNewSolution()) {\n      if (myPath.getPath().length() == 0) {\n        throw new CommitStepException(\"Enter solution directory\");\n      }\n      if (myNamespace.getText().length() == 0) {\n        throw new CommitStepException(\"Enter solution name\");\n      }\n      if (MPSModuleRepository.getInstance().getModuleByUID(myNamespace.getText()) != null) {\n        throw new CommitStepException(\"Duplicate solution name\");\n      }\n      String descriptorPath = myPath.getPath() + File.separator + myNamespace.getText() + MPSExtentions.DOT_SOLUTION;\n      File file = new File(descriptorPath);\n      if (file.exists()) {\n        throw new CommitStepException(\"Solution file already exists\");\n      }\n      File dir = file.getParentFile();\n      if (!(dir.isAbsolute())) {\n        throw new CommitStepException(\"Path should be absolute\");\n      }\n      if (!(dir.exists())) {\n        boolean created = DirectoryUtil.askToCreateNewDirectory(JOptionPane.getFrameForComponent(myComponent), dir);\n        if (!created) {\n          throw new CommitStepException(\"Specify another directory\");\n        }\n      }\n      final File descriptorFile = prepareToCreateNewSolutionDescriptorFile(descriptorPath);\n      if (descriptorFile == null) {\n        throw new CommitStepException(\"Can't create \" + descriptorPath);\n      }\n    }\n\n    myOptions.setSolutionNamespace(myNamespace.getText());\n    myOptions.setSolutionPath(myPath.getPath());\n  }","commit_id":"eb2c375be2d9618532457ef75f73e48ec62a4e23","url":"https://github.com/JetBrains/MPS"},{"original_method":"public void _init() {\n    super._init();\n\n    myNamespace.setText(myOptions.getSolutionNamespace());\n    myPath.setPath(myOptions.getSolutionPath());\n    updateSolutionPath();\n  }","id":55986,"modified_method":"public void _init() {\n    super._init();\n\n    if (myOptions.getSolutionNamespace() == null) myOptions.setSolutionNamespace(myOptions.getProjectName());\n\n    myNamespace.setText(myOptions.getSolutionNamespace());\n    myPath.setPath(myOptions.getSolutionPath());\n    updateSolutionPath();\n  }","commit_id":"eb2c375be2d9618532457ef75f73e48ec62a4e23","url":"https://github.com/JetBrains/MPS"},{"original_method":"public void testSplitThreadCategoryMessageReplyExplanation()\n\t\tthrows Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tloadRequiredJavaScriptModules();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Message Boards Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Message Boards Test Page\",\n\t\t\tRuntimeVariables.replace(\"Message Boards Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tassertEquals(RuntimeVariables.replace(\"MB Category Name\"),\n\t\t\tselenium.getText(\"//a/strong\"));\n\t\tselenium.clickAt(\"//a/strong\",\n\t\t\tRuntimeVariables.replace(\"MB Category Name\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tassertFalse(selenium.isTextPresent(\n\t\t\t\t\"RE: MB Category Thread Message Subject\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"MB Category Thread Message Subject\"),\n\t\t\tselenium.getText(\"//td[1]/a\"));\n\t\tselenium.clickAt(\"//td[1]/a\",\n\t\t\tRuntimeVariables.replace(\"MB Category Thread Message Subject\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"RE: MB Category Thread Message Subject\"),\n\t\t\tselenium.getText(\"//tr[2]/td[1]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"RE: MB Category Thread Message Subject\"),\n\t\t\tselenium.getText(\"xPath=(//div[@class='subject']/a/strong)[2]\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"MB Category Thread Message Reply Body\"),\n\t\t\tselenium.getText(\"xPath=(//div[@class='thread-body'])[2]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Split Thread\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[5]/table/tbody/tr[2]/td/ul/li[4]/span/a/span\"));\n\t\tselenium.clickAt(\"//div[5]/table/tbody/tr[2]/td/ul/li[4]/span/a/span\",\n\t\t\tRuntimeVariables.replace(\"Split Thread\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tassertFalse(selenium.isChecked(\n\t\t\t\t\"//input[@id='_19_addExplanationPostCheckbox']\"));\n\t\tselenium.clickAt(\"//input[@id='_19_addExplanationPostCheckbox']\",\n\t\t\tRuntimeVariables.replace(\n\t\t\t\t\"Add explanation post to the source thread.\"));\n\t\tassertTrue(selenium.isChecked(\n\t\t\t\t\"//input[@id='_19_addExplanationPostCheckbox']\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//input[@id='_19_subject']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.type(\"//input[@id='_19_subject']\",\n\t\t\tRuntimeVariables.replace(\"MB Explanation Post Subject\"));\n\t\tThread.sleep(5000);\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//td[@id='cke_contents__19_editor']/iframe\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.selectFrame(\"//td[@id='cke_contents__19_editor']/iframe\");\n\t\tselenium.type(\"//body\",\n\t\t\tRuntimeVariables.replace(\"MB Explanation Post Body\"));\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.clickAt(\"//input[@value='OK']\", RuntimeVariables.replace(\"OK\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tThread.sleep(5000);\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tloadRequiredJavaScriptModules();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Message Boards Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Message Boards Test Page\",\n\t\t\tRuntimeVariables.replace(\"Message Boards Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tassertEquals(RuntimeVariables.replace(\"MB Category Name\"),\n\t\t\tselenium.getText(\"//a/strong\"));\n\t\tselenium.clickAt(\"//a/strong\",\n\t\t\tRuntimeVariables.replace(\"MB Category Name\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"MB Category Thread Message Subject\"),\n\t\t\tselenium.getText(\"//tr[3]/td[1]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"RE: MB Category Thread Message Subject\"),\n\t\t\tselenium.getText(\"//tr[4]/td[1]/a\"));\n\t\tselenium.clickAt(\"//tr[3]/td[1]/a\",\n\t\t\tRuntimeVariables.replace(\"MB Category Thread Message Subject\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tassertFalse(selenium.isTextPresent(\n\t\t\t\t\"RE: MB Category Thread Message Subject\"));\n\t\tassertFalse(selenium.isTextPresent(\n\t\t\t\t\"MB Category Thread Message Reply Body\"));\n\t\tassertEquals(RuntimeVariables.replace(\"MB Explanation Post Subject\"),\n\t\t\tselenium.getText(\"xPath=(//div[@class='subject']/a/strong)[2]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"MB Explanation Post Body\"),\n\t\t\tselenium.getText(\"xpath=(//div[@class='thread-body'])[2]\"));\n\t}","id":55987,"modified_method":"public void testSplitThreadCategoryMessageReplyExplanation()\n\t\tthrows Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tloadRequiredJavaScriptModules();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Message Boards Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Message Boards Test Page\",\n\t\t\tRuntimeVariables.replace(\"Message Boards Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tassertEquals(RuntimeVariables.replace(\"MB Category Name\"),\n\t\t\tselenium.getText(\"//a/strong\"));\n\t\tselenium.clickAt(\"//a/strong\",\n\t\t\tRuntimeVariables.replace(\"MB Category Name\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tassertFalse(selenium.isTextPresent(\n\t\t\t\t\"RE: MB Category Thread Message Subject\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"MB Category Thread Message Subject\"),\n\t\t\tselenium.getText(\"//td[1]/a\"));\n\t\tselenium.clickAt(\"//td[1]/a\",\n\t\t\tRuntimeVariables.replace(\"MB Category Thread Message Subject\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"RE: MB Category Thread Message Subject\"),\n\t\t\tselenium.getText(\"//tr[2]/td[1]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"RE: MB Category Thread Message Subject\"),\n\t\t\tselenium.getText(\"xPath=(//div[@class='subject']/a/strong)[2]\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"MB Category Thread Message Reply Body\"),\n\t\t\tselenium.getText(\"xPath=(//div[@class='thread-body'])[2]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Split Thread\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[5]/table/tbody/tr[2]/td/ul/li[4]/span/a/span\"));\n\t\tselenium.clickAt(\"//div[5]/table/tbody/tr[2]/td/ul/li[4]/span/a/span\",\n\t\t\tRuntimeVariables.replace(\"Split Thread\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tassertFalse(selenium.isChecked(\n\t\t\t\t\"//input[@id='_19_addExplanationPostCheckbox']\"));\n\t\tselenium.clickAt(\"//input[@id='_19_addExplanationPostCheckbox']\",\n\t\t\tRuntimeVariables.replace(\n\t\t\t\t\"Add explanation post to the source thread.\"));\n\t\tassertTrue(selenium.isChecked(\n\t\t\t\t\"//input[@id='_19_addExplanationPostCheckbox']\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//input[@id='_19_subject']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.type(\"//input[@id='_19_subject']\",\n\t\t\tRuntimeVariables.replace(\"MB Explanation Post Subject\"));\n\t\tThread.sleep(5000);\n\t\tselenium.clickAt(\"//input[@value='OK']\", RuntimeVariables.replace(\"OK\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tThread.sleep(5000);\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tloadRequiredJavaScriptModules();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Message Boards Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Message Boards Test Page\",\n\t\t\tRuntimeVariables.replace(\"Message Boards Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tassertEquals(RuntimeVariables.replace(\"MB Category Name\"),\n\t\t\tselenium.getText(\"//a/strong\"));\n\t\tselenium.clickAt(\"//a/strong\",\n\t\t\tRuntimeVariables.replace(\"MB Category Name\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"MB Category Thread Message Subject\"),\n\t\t\tselenium.getText(\"//tr[3]/td[1]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"RE: MB Category Thread Message Subject\"),\n\t\t\tselenium.getText(\"//tr[4]/td[1]/a\"));\n\t\tselenium.clickAt(\"//tr[3]/td[1]/a\",\n\t\t\tRuntimeVariables.replace(\"MB Category Thread Message Subject\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tassertFalse(selenium.isTextPresent(\n\t\t\t\t\"RE: MB Category Thread Message Subject\"));\n\t\tassertFalse(selenium.isTextPresent(\n\t\t\t\t\"MB Category Thread Message Reply Body\"));\n\t\tassertEquals(RuntimeVariables.replace(\"MB Explanation Post Subject\"),\n\t\t\tselenium.getText(\"xPath=(//div[@class='subject']/a/strong)[2]\"));\n\t\tassertTrue(selenium.isPartialText(\n\t\t\t\t\"xpath=(//div[@class='thread-body'])[2]\",\n\t\t\t\t\"The new thread can be found at http://localhost:8080/web/guest/message-boards-test-page/-/message_boards/view_message\"));\n\t\tassertTrue(selenium.isPartialText(\n\t\t\t\t\"xpath=(//div[@class='thread-body'])[2]\",\n\t\t\t\t\"The new thread can be found at http://localhost:8080/web/guest/message-boards-test-page/-/message_boards/view_message\"));\n\t\tassertTrue(selenium.isPartialText(\"//div[@class='thread-body']/a\",\n\t\t\t\t\"http://localhost:8080/web/guest/message-boards-test-page/-/message_boards/view_message\"));\n\t\tselenium.clickAt(\"//div[@class='thread-body']/a\",\n\t\t\tRuntimeVariables.replace(\"Link to new thread\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"RE: MB Category Thread Message Subject\"),\n\t\t\tselenium.getText(\"//h1[@class='header-title']/span\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"RE: MB Category Thread Message Subject\"),\n\t\t\tselenium.getText(\"//div[@class='subject']/a/strong\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"MB Category Thread Message Reply Body\"),\n\t\t\tselenium.getText(\"//div[@class='thread-body']\"));\n\t}","commit_id":"b79c58a976a8a81bfeae865758217f466de7e821","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddDocumentType() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Documents and Media\",\n\t\t\tRuntimeVariables.replace(\"Documents and Media\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"//span[@title='Manage']/ul/li/strong/a\",\n\t\t\tRuntimeVariables.replace(\"Manage\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[1]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertEquals(RuntimeVariables.replace(\"Document Types\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[1]/a\"));\n\t\tselenium.click(\"//div[@class='lfr-component lfr-menu-list']/ul/li[1]/a\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//iframe\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.selectFrame(\"//iframe\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Add\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Add\", RuntimeVariables.replace(\"Add\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//input[@id='_20_name']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.type(\"//input[@id='_20_name']\",\n\t\t\tRuntimeVariables.replace(\"Document Type Name\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Select\"),\n\t\t\tselenium.getText(\"//a/span\"));\n\t\tselenium.clickAt(\"//a/span\", RuntimeVariables.replace(\"Select\"));\n\t\tselenium.selectFrame(\"relative=up\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Default Image's Metadata Set\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Default Image's Metadata Set\",\n\t\t\tRuntimeVariables.replace(\"Default Image's Metadata Set\"));\n\t\tselenium.selectFrame(\"relative=up\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (RuntimeVariables.replace(\"Default Image's Metadata Set\")\n\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\"//table/tr/td\"))) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertEquals(RuntimeVariables.replace(\"Default Image's Metadata Set\"),\n\t\t\tselenium.getText(\"//table/tr/td\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (RuntimeVariables.replace(\n\t\t\t\t\t\t\t\"Your request completed successfully.\")\n\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\"//div[@class='portlet-msg-success']\"))) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tselenium.selectFrame(\"relative=top\");\n\t}","id":55988,"modified_method":"public void testAddDocumentType() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Documents and Media\",\n\t\t\tRuntimeVariables.replace(\"Documents and Media\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"//span[@title='Manage']/ul/li/strong/a\",\n\t\t\tRuntimeVariables.replace(\"Manage\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[1]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertEquals(RuntimeVariables.replace(\"Document Types\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[1]/a\"));\n\t\tselenium.click(\"//div[@class='lfr-component lfr-menu-list']/ul/li[1]/a\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//iframe\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.selectFrame(\"//iframe\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Add\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Add\", RuntimeVariables.replace(\"Add\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//input[@id='_20_name']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.type(\"//input[@id='_20_name']\",\n\t\t\tRuntimeVariables.replace(\"Document Type Name\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"xPath=(//div[@class='aui-diagram-builder-field-label'])[5]\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.dragAndDropToObject(\"xPath=(//div[@class='aui-diagram-builder-field-label'])[5]\",\n\t\t\t\"xPath=(//div[@class='aui-diagram-builder-field-label'])[5]\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[contains(@class,'aui-form-builder-text-field-content')]/label\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertEquals(RuntimeVariables.replace(\"Text Box\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[contains(@class,'aui-form-builder-text-field-content')]/label\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tselenium.selectFrame(\"relative=top\");\n\t}","commit_id":"e5e8427ccd8f3b8a0d5b33f028467a5fce32536b","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddDocumentType() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Documents and Media\",\n\t\t\tRuntimeVariables.replace(\"Documents and Media\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"//span[@title='Manage']/ul/li/strong/a\",\n\t\t\tRuntimeVariables.replace(\"Manage\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[1]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertEquals(RuntimeVariables.replace(\"Document Types\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[1]/a\"));\n\t\tselenium.click(\"//div[@class='lfr-component lfr-menu-list']/ul/li[1]/a\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//iframe\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.selectFrame(\"//iframe\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Add\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Add\", RuntimeVariables.replace(\"Add\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//input[@id='_20_name']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.type(\"//input[@id='_20_name']\",\n\t\t\tRuntimeVariables.replace(\"Document Type Name\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Select\"),\n\t\t\tselenium.getText(\"//a/span\"));\n\t\tselenium.clickAt(\"//a/span\", RuntimeVariables.replace(\"Select\"));\n\t\tselenium.selectFrame(\"relative=up\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Default Image's Metadata Set\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Default Image's Metadata Set\",\n\t\t\tRuntimeVariables.replace(\"Default Image's Metadata Set\"));\n\t\tselenium.selectFrame(\"relative=up\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (RuntimeVariables.replace(\"Default Image's Metadata Set\")\n\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\"//table/tr/td\"))) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertEquals(RuntimeVariables.replace(\"Default Image's Metadata Set\"),\n\t\t\tselenium.getText(\"//table/tr/td\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (RuntimeVariables.replace(\n\t\t\t\t\t\t\t\"Your request completed successfully.\")\n\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\"//div[@class='portlet-msg-success']\"))) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tselenium.selectFrame(\"relative=top\");\n\t}","id":55989,"modified_method":"public void testAddDocumentType() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Documents and Media\",\n\t\t\tRuntimeVariables.replace(\"Documents and Media\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"//span[@title='Manage']/ul/li/strong/a\",\n\t\t\tRuntimeVariables.replace(\"Manage\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[1]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertEquals(RuntimeVariables.replace(\"Document Types\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[1]/a\"));\n\t\tselenium.click(\"//div[@class='lfr-component lfr-menu-list']/ul/li[1]/a\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//iframe\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.selectFrame(\"//iframe\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Add\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Add\", RuntimeVariables.replace(\"Add\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//input[@id='_20_name']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.type(\"//input[@id='_20_name']\",\n\t\t\tRuntimeVariables.replace(\"Document Type Name\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"xPath=(//div[@class='aui-diagram-builder-field-label'])[5]\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.dragAndDropToObject(\"xPath=(//div[@class='aui-diagram-builder-field-label'])[5]\",\n\t\t\t\"xPath=(//div[@class='aui-diagram-builder-field-label'])[5]\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[contains(@class,'aui-form-builder-text-field-content')]/label\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertEquals(RuntimeVariables.replace(\"Text Box\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[contains(@class,'aui-form-builder-text-field-content')]/label\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tselenium.selectFrame(\"relative=top\");\n\t}","commit_id":"e5e8427ccd8f3b8a0d5b33f028467a5fce32536b","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddDocumentType() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Documents and Media\",\n\t\t\tRuntimeVariables.replace(\"Documents and Media\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"//span[@title='Manage']/ul/li/strong/a\",\n\t\t\tRuntimeVariables.replace(\"Manage\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[1]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertEquals(RuntimeVariables.replace(\"Document Types\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[1]/a\"));\n\t\tselenium.click(\"//div[@class='lfr-component lfr-menu-list']/ul/li[1]/a\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//iframe\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.selectFrame(\"//iframe\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Add\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Add\", RuntimeVariables.replace(\"Add\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//input[@id='_20_name']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.type(\"//input[@id='_20_name']\",\n\t\t\tRuntimeVariables.replace(\"Document Type Name\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Select\"),\n\t\t\tselenium.getText(\"//a/span\"));\n\t\tselenium.clickAt(\"//a/span\", RuntimeVariables.replace(\"Select\"));\n\t\tselenium.selectFrame(\"relative=up\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Default Image's Metadata Set\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Default Image's Metadata Set\",\n\t\t\tRuntimeVariables.replace(\"Default Image's Metadata Set\"));\n\t\tselenium.selectFrame(\"relative=up\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (RuntimeVariables.replace(\"Default Image's Metadata Set\")\n\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\"//table/tr/td\"))) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertEquals(RuntimeVariables.replace(\"Default Image's Metadata Set\"),\n\t\t\tselenium.getText(\"//table/tr/td\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (RuntimeVariables.replace(\n\t\t\t\t\t\t\t\"Your request completed successfully.\")\n\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\"//div[@class='portlet-msg-success']\"))) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tselenium.selectFrame(\"relative=top\");\n\t}","id":55990,"modified_method":"public void testAddDocumentType() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Documents and Media\",\n\t\t\tRuntimeVariables.replace(\"Documents and Media\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"//span[@title='Manage']/ul/li/strong/a\",\n\t\t\tRuntimeVariables.replace(\"Manage\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[1]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertEquals(RuntimeVariables.replace(\"Document Types\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[1]/a\"));\n\t\tselenium.click(\"//div[@class='lfr-component lfr-menu-list']/ul/li[1]/a\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//iframe\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.selectFrame(\"//iframe\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Add\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Add\", RuntimeVariables.replace(\"Add\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//input[@id='_20_name']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.type(\"//input[@id='_20_name']\",\n\t\t\tRuntimeVariables.replace(\"Document Type Name\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"xPath=(//div[@class='aui-diagram-builder-field-label'])[5]\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.dragAndDropToObject(\"xPath=(//div[@class='aui-diagram-builder-field-label'])[5]\",\n\t\t\t\"xPath=(//div[@class='aui-diagram-builder-field-label'])[5]\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[contains(@class,'aui-form-builder-text-field-content')]/label\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertEquals(RuntimeVariables.replace(\"Text Box\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[contains(@class,'aui-form-builder-text-field-content')]/label\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tselenium.selectFrame(\"relative=top\");\n\t}","commit_id":"e5e8427ccd8f3b8a0d5b33f028467a5fce32536b","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddDocumentType() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Documents and Media\",\n\t\t\tRuntimeVariables.replace(\"Documents and Media\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"//span[@title='Manage']/ul/li/strong/a\",\n\t\t\tRuntimeVariables.replace(\"Manage\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[1]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertEquals(RuntimeVariables.replace(\"Document Types\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[1]/a\"));\n\t\tselenium.click(\"//div[@class='lfr-component lfr-menu-list']/ul/li[1]/a\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//iframe\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.selectFrame(\"//iframe\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Add\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Add\", RuntimeVariables.replace(\"Add\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//input[@id='_20_name']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.type(\"//input[@id='_20_name']\",\n\t\t\tRuntimeVariables.replace(\"Document Type Name\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Select\"),\n\t\t\tselenium.getText(\"//a/span\"));\n\t\tselenium.clickAt(\"//a/span\", RuntimeVariables.replace(\"Select\"));\n\t\tselenium.selectFrame(\"relative=up\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Default Image's Metadata Set\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Default Image's Metadata Set\",\n\t\t\tRuntimeVariables.replace(\"Default Image's Metadata Set\"));\n\t\tselenium.selectFrame(\"relative=up\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (RuntimeVariables.replace(\"Default Image's Metadata Set\")\n\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\"//table/tr/td\"))) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertEquals(RuntimeVariables.replace(\"Default Image's Metadata Set\"),\n\t\t\tselenium.getText(\"//table/tr/td\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (RuntimeVariables.replace(\n\t\t\t\t\t\t\t\"Your request completed successfully.\")\n\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\"//div[@class='portlet-msg-success']\"))) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tselenium.selectFrame(\"relative=top\");\n\t}","id":55991,"modified_method":"public void testAddDocumentType() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Documents and Media\",\n\t\t\tRuntimeVariables.replace(\"Documents and Media\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"//span[@title='Manage']/ul/li/strong/a\",\n\t\t\tRuntimeVariables.replace(\"Manage\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[1]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertEquals(RuntimeVariables.replace(\"Document Types\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[1]/a\"));\n\t\tselenium.click(\"//div[@class='lfr-component lfr-menu-list']/ul/li[1]/a\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//iframe\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.selectFrame(\"//iframe\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Add\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Add\", RuntimeVariables.replace(\"Add\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//input[@id='_20_name']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.type(\"//input[@id='_20_name']\",\n\t\t\tRuntimeVariables.replace(\"Document Type Name\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"xPath=(//div[@class='aui-diagram-builder-field-label'])[5]\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.dragAndDropToObject(\"xPath=(//div[@class='aui-diagram-builder-field-label'])[5]\",\n\t\t\t\"xPath=(//div[@class='aui-diagram-builder-field-label'])[5]\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[contains(@class,'aui-form-builder-text-field-content')]/label\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertEquals(RuntimeVariables.replace(\"Text Box\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[contains(@class,'aui-form-builder-text-field-content')]/label\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tselenium.selectFrame(\"relative=top\");\n\t}","commit_id":"e5e8427ccd8f3b8a0d5b33f028467a5fce32536b","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testMember_AddDocumentType() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Documents and Media\",\n\t\t\tRuntimeVariables.replace(\"Documents and Media\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"//span[@title='Manage']/ul/li/strong/a\",\n\t\t\tRuntimeVariables.replace(\"Manage\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[1]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertEquals(RuntimeVariables.replace(\"Document Types\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[1]/a\"));\n\t\tselenium.click(\"//div[@class='lfr-component lfr-menu-list']/ul/li[1]/a\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//iframe\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.selectFrame(\"//iframe\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Add\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Add\", RuntimeVariables.replace(\"Add\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//input[@id='_20_name']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.type(\"//input[@id='_20_name']\",\n\t\t\tRuntimeVariables.replace(\"Document Type Name\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Select\"),\n\t\t\tselenium.getText(\"//a/span\"));\n\t\tselenium.clickAt(\"//a/span\", RuntimeVariables.replace(\"Select\"));\n\t\tselenium.selectFrame(\"relative=up\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Default Image's Metadata Set\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Default Image's Metadata Set\",\n\t\t\tRuntimeVariables.replace(\"Default Image's Metadata Set\"));\n\t\tselenium.selectFrame(\"relative=up\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (RuntimeVariables.replace(\"Default Image's Metadata Set\")\n\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\"//table/tr/td\"))) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertEquals(RuntimeVariables.replace(\"Default Image's Metadata Set\"),\n\t\t\tselenium.getText(\"//table/tr/td\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (RuntimeVariables.replace(\n\t\t\t\t\t\t\t\"Your request completed successfully.\")\n\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\"//div[@class='portlet-msg-success']\"))) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tselenium.selectFrame(\"relative=top\");\n\t}","id":55992,"modified_method":"public void testMember_AddDocumentType() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Documents and Media\",\n\t\t\tRuntimeVariables.replace(\"Documents and Media\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"//span[@title='Manage']/ul/li/strong/a\",\n\t\t\tRuntimeVariables.replace(\"Manage\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[1]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertEquals(RuntimeVariables.replace(\"Document Types\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[1]/a\"));\n\t\tselenium.click(\"//div[@class='lfr-component lfr-menu-list']/ul/li[1]/a\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//iframe\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.selectFrame(\"//iframe\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Add\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Add\", RuntimeVariables.replace(\"Add\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//input[@id='_20_name']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.type(\"//input[@id='_20_name']\",\n\t\t\tRuntimeVariables.replace(\"Document Type Name\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"xPath=(//div[@class='aui-diagram-builder-field-label'])[5]\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.dragAndDropToObject(\"xPath=(//div[@class='aui-diagram-builder-field-label'])[5]\",\n\t\t\t\"xPath=(//div[@class='aui-diagram-builder-field-label'])[5]\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[contains(@class,'aui-form-builder-text-field-content')]/label\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertEquals(RuntimeVariables.replace(\"Text Box\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[contains(@class,'aui-form-builder-text-field-content')]/label\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tselenium.selectFrame(\"relative=top\");\n\t}","commit_id":"e5e8427ccd8f3b8a0d5b33f028467a5fce32536b","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testMember_AssertCannotViewDocumentType()\n\t\tthrows Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Documents and Media\",\n\t\t\tRuntimeVariables.replace(\"Documents and Media\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertFalse(selenium.isElementPresent(\"link=Document Type Name\"));\n\t\tselenium.clickAt(\"//span[@title='Manage']/ul/li/strong/a\",\n\t\t\tRuntimeVariables.replace(\"Manage\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[1]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertEquals(RuntimeVariables.replace(\"Document Types\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[1]/a\"));\n\t\tselenium.click(\"//div[@class='lfr-component lfr-menu-list']/ul/li[1]/a\");\n\t\tassertFalse(selenium.isTextPresent(\"Document Type Name\"));\n\t}","id":55993,"modified_method":"public void testMember_AssertCannotViewDocumentType()\n\t\tthrows Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Documents and Media\",\n\t\t\tRuntimeVariables.replace(\"Documents and Media\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertFalse(selenium.isElementPresent(\"link=Document Type Name\"));\n\t\tselenium.clickAt(\"//span[@title='Manage']/ul/li/strong/a\",\n\t\t\tRuntimeVariables.replace(\"Manage\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[1]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertEquals(RuntimeVariables.replace(\"Document Types\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[1]/a\"));\n\t\tselenium.click(\"//div[@class='lfr-component lfr-menu-list']/ul/li[1]/a\");\n\t\tThread.sleep(5000);\n\t\tassertFalse(selenium.isTextPresent(\"Document Type Name\"));\n\t}","commit_id":"e5e8427ccd8f3b8a0d5b33f028467a5fce32536b","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testTearDownUser() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.clickAt(\"link=Users and Organizations\",\n\t\t\t\t\tRuntimeVariables.replace(\"Users and Organizations\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tboolean usersPresent = selenium.isElementPresent(\n\t\t\t\t\t\t\"//form/div[2]/div/div/div/div/div[2]\");\n\n\t\t\t\tif (!usersPresent) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[@id='usersAdminUsersPanel']/div[2]/div/div/table/tbody/tr/th/input\",\n\t\t\t\t\tRuntimeVariables.replace(\"Select All\"));\n\t\t\t\tselenium.click(\"//input[@value='Deactivate']\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to deactivate the selected users[\\\\s\\\\S]$\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\t\t\"//div[@class='portlet-msg-success']\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"Your request completed successfully.\"),\n\t\t\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\n\t\t\tcase 2:\n\t\t\t\tselenium.clickAt(\"link=Search All Users\",\n\t\t\t\t\tRuntimeVariables.replace(\"Search All Users\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tboolean advancedVisible = selenium.isVisible(\n\t\t\t\t\t\t\"link=Advanced \\u00bb\");\n\n\t\t\t\tif (!advancedVisible) {\n\t\t\t\t\tlabel = 3;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"link=Advanced \\u00bb\",\n\t\t\t\t\tRuntimeVariables.replace(\"Advanced\"));\n\n\t\t\tcase 3:\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\"//select[@id='_125_status']\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.select(\"//select[@id='_125_status']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Inactive\"));\n\t\t\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Search\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.clickAt(\"//input[@name='_125_allRowIds']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Select All\"));\n\t\t\t\tselenium.clickAt(\"//input[@value='Delete']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to permanently delete the selected users[\\\\s\\\\S]$\"));\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"Your request completed successfully.\"),\n\t\t\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"No users were found.\"),\n\t\t\t\t\tselenium.getText(\"//div[@class='portlet-msg-info']\"));\n\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","id":55994,"modified_method":"public void testTearDownUser() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.clickAt(\"link=Users and Organizations\",\n\t\t\t\t\tRuntimeVariables.replace(\"Users and Organizations\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tboolean usersPresent = selenium.isElementPresent(\n\t\t\t\t\t\t\"xPath=(//input[@name='_125_allRowIds'])[2]\");\n\n\t\t\t\tif (!usersPresent) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"xPath=(//input[@name='_125_allRowIds'])[2]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Select All\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//input[@value='Deactivate']\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to deactivate the selected users[\\\\s\\\\S]$\"));\n\n\t\t\tcase 2:\n\t\t\t\tselenium.clickAt(\"link=Search All Users\",\n\t\t\t\t\tRuntimeVariables.replace(\"Search All Users\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tboolean advancedVisible = selenium.isVisible(\n\t\t\t\t\t\t\"link=Advanced \\u00bb\");\n\n\t\t\t\tif (!advancedVisible) {\n\t\t\t\t\tlabel = 3;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"link=Advanced \\u00bb\",\n\t\t\t\t\tRuntimeVariables.replace(\"Advanced\"));\n\n\t\t\tcase 3:\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\"//select[@id='_125_status']\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.select(\"//select[@id='_125_status']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Inactive\"));\n\t\t\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Search\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tboolean users2Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//input[@name='_125_allRowIds']\");\n\n\t\t\t\tif (!users2Present) {\n\t\t\t\t\tlabel = 4;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//input[@name='_125_allRowIds']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Select All\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//input[@value='Delete']\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to permanently delete the selected users[\\\\s\\\\S]$\"));\n\n\t\t\tcase 4:\n\t\t\t\tselenium.clickAt(\"link=\\u00ab Basic\",\n\t\t\t\t\tRuntimeVariables.replace(\"\\u00ab Basic\"));\n\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","commit_id":"e5e8427ccd8f3b8a0d5b33f028467a5fce32536b","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testTearDownUser() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.clickAt(\"link=Users and Organizations\",\n\t\t\t\t\tRuntimeVariables.replace(\"Users and Organizations\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tboolean usersPresent = selenium.isElementPresent(\n\t\t\t\t\t\t\"//form/div[2]/div/div/div/div/div[2]\");\n\n\t\t\t\tif (!usersPresent) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[@id='usersAdminUsersPanel']/div[2]/div/div/table/tbody/tr/th/input\",\n\t\t\t\t\tRuntimeVariables.replace(\"Select All\"));\n\t\t\t\tselenium.click(\"//input[@value='Deactivate']\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to deactivate the selected users[\\\\s\\\\S]$\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\t\t\"//div[@class='portlet-msg-success']\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"Your request completed successfully.\"),\n\t\t\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\n\t\t\tcase 2:\n\t\t\t\tselenium.clickAt(\"link=Search All Users\",\n\t\t\t\t\tRuntimeVariables.replace(\"Search All Users\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tboolean advancedVisible = selenium.isVisible(\n\t\t\t\t\t\t\"link=Advanced \\u00bb\");\n\n\t\t\t\tif (!advancedVisible) {\n\t\t\t\t\tlabel = 3;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"link=Advanced \\u00bb\",\n\t\t\t\t\tRuntimeVariables.replace(\"Advanced\"));\n\n\t\t\tcase 3:\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\"//select[@id='_125_status']\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.select(\"//select[@id='_125_status']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Inactive\"));\n\t\t\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Search\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.clickAt(\"//input[@name='_125_allRowIds']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Select All\"));\n\t\t\t\tselenium.clickAt(\"//input[@value='Delete']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to permanently delete the selected users[\\\\s\\\\S]$\"));\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"Your request completed successfully.\"),\n\t\t\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"No users were found.\"),\n\t\t\t\t\tselenium.getText(\"//div[@class='portlet-msg-info']\"));\n\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","id":55995,"modified_method":"public void testTearDownUser() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.clickAt(\"link=Users and Organizations\",\n\t\t\t\t\tRuntimeVariables.replace(\"Users and Organizations\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tboolean usersPresent = selenium.isElementPresent(\n\t\t\t\t\t\t\"xPath=(//input[@name='_125_allRowIds'])[2]\");\n\n\t\t\t\tif (!usersPresent) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"xPath=(//input[@name='_125_allRowIds'])[2]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Select All\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//input[@value='Deactivate']\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to deactivate the selected users[\\\\s\\\\S]$\"));\n\n\t\t\tcase 2:\n\t\t\t\tselenium.clickAt(\"link=Search All Users\",\n\t\t\t\t\tRuntimeVariables.replace(\"Search All Users\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tboolean advancedVisible = selenium.isVisible(\n\t\t\t\t\t\t\"link=Advanced \\u00bb\");\n\n\t\t\t\tif (!advancedVisible) {\n\t\t\t\t\tlabel = 3;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"link=Advanced \\u00bb\",\n\t\t\t\t\tRuntimeVariables.replace(\"Advanced\"));\n\n\t\t\tcase 3:\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\"//select[@id='_125_status']\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.select(\"//select[@id='_125_status']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Inactive\"));\n\t\t\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Search\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tboolean users2Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//input[@name='_125_allRowIds']\");\n\n\t\t\t\tif (!users2Present) {\n\t\t\t\t\tlabel = 4;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//input[@name='_125_allRowIds']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Select All\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//input[@value='Delete']\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to permanently delete the selected users[\\\\s\\\\S]$\"));\n\n\t\t\tcase 4:\n\t\t\t\tselenium.clickAt(\"link=\\u00ab Basic\",\n\t\t\t\t\tRuntimeVariables.replace(\"\\u00ab Basic\"));\n\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","commit_id":"e5e8427ccd8f3b8a0d5b33f028467a5fce32536b","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testTearDownUser() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.clickAt(\"link=Users and Organizations\",\n\t\t\t\t\tRuntimeVariables.replace(\"Users and Organizations\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tboolean usersPresent = selenium.isElementPresent(\n\t\t\t\t\t\t\"//form/div[2]/div/div/div/div/div[2]\");\n\n\t\t\t\tif (!usersPresent) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[@id='usersAdminUsersPanel']/div[2]/div/div/table/tbody/tr/th/input\",\n\t\t\t\t\tRuntimeVariables.replace(\"Select All\"));\n\t\t\t\tselenium.click(\"//input[@value='Deactivate']\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to deactivate the selected users[\\\\s\\\\S]$\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\t\t\"//div[@class='portlet-msg-success']\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"Your request completed successfully.\"),\n\t\t\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\n\t\t\tcase 2:\n\t\t\t\tselenium.clickAt(\"link=Search All Users\",\n\t\t\t\t\tRuntimeVariables.replace(\"Search All Users\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tboolean advancedVisible = selenium.isVisible(\n\t\t\t\t\t\t\"link=Advanced \\u00bb\");\n\n\t\t\t\tif (!advancedVisible) {\n\t\t\t\t\tlabel = 3;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"link=Advanced \\u00bb\",\n\t\t\t\t\tRuntimeVariables.replace(\"Advanced\"));\n\n\t\t\tcase 3:\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\"//select[@id='_125_status']\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.select(\"//select[@id='_125_status']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Inactive\"));\n\t\t\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Search\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.clickAt(\"//input[@name='_125_allRowIds']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Select All\"));\n\t\t\t\tselenium.clickAt(\"//input[@value='Delete']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to permanently delete the selected users[\\\\s\\\\S]$\"));\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"Your request completed successfully.\"),\n\t\t\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"No users were found.\"),\n\t\t\t\t\tselenium.getText(\"//div[@class='portlet-msg-info']\"));\n\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","id":55996,"modified_method":"public void testTearDownUser() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.clickAt(\"link=Users and Organizations\",\n\t\t\t\t\tRuntimeVariables.replace(\"Users and Organizations\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tboolean usersPresent = selenium.isElementPresent(\n\t\t\t\t\t\t\"xPath=(//input[@name='_125_allRowIds'])[2]\");\n\n\t\t\t\tif (!usersPresent) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"xPath=(//input[@name='_125_allRowIds'])[2]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Select All\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//input[@value='Deactivate']\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to deactivate the selected users[\\\\s\\\\S]$\"));\n\n\t\t\tcase 2:\n\t\t\t\tselenium.clickAt(\"link=Search All Users\",\n\t\t\t\t\tRuntimeVariables.replace(\"Search All Users\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tboolean advancedVisible = selenium.isVisible(\n\t\t\t\t\t\t\"link=Advanced \\u00bb\");\n\n\t\t\t\tif (!advancedVisible) {\n\t\t\t\t\tlabel = 3;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"link=Advanced \\u00bb\",\n\t\t\t\t\tRuntimeVariables.replace(\"Advanced\"));\n\n\t\t\tcase 3:\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\"//select[@id='_125_status']\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.select(\"//select[@id='_125_status']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Inactive\"));\n\t\t\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Search\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tboolean users2Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//input[@name='_125_allRowIds']\");\n\n\t\t\t\tif (!users2Present) {\n\t\t\t\t\tlabel = 4;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//input[@name='_125_allRowIds']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Select All\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//input[@value='Delete']\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to permanently delete the selected users[\\\\s\\\\S]$\"));\n\n\t\t\tcase 4:\n\t\t\t\tselenium.clickAt(\"link=\\u00ab Basic\",\n\t\t\t\t\tRuntimeVariables.replace(\"\\u00ab Basic\"));\n\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","commit_id":"e5e8427ccd8f3b8a0d5b33f028467a5fce32536b","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testTearDownUser() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.clickAt(\"link=Users and Organizations\",\n\t\t\t\t\tRuntimeVariables.replace(\"Users and Organizations\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tboolean usersPresent = selenium.isElementPresent(\n\t\t\t\t\t\t\"//form/div[2]/div/div/div/div/div[2]\");\n\n\t\t\t\tif (!usersPresent) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[@id='usersAdminUsersPanel']/div[2]/div/div/table/tbody/tr/th/input\",\n\t\t\t\t\tRuntimeVariables.replace(\"Select All\"));\n\t\t\t\tselenium.click(\"//input[@value='Deactivate']\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to deactivate the selected users[\\\\s\\\\S]$\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\t\t\"//div[@class='portlet-msg-success']\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"Your request completed successfully.\"),\n\t\t\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\n\t\t\tcase 2:\n\t\t\t\tselenium.clickAt(\"link=Search All Users\",\n\t\t\t\t\tRuntimeVariables.replace(\"Search All Users\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tboolean advancedVisible = selenium.isVisible(\n\t\t\t\t\t\t\"link=Advanced \\u00bb\");\n\n\t\t\t\tif (!advancedVisible) {\n\t\t\t\t\tlabel = 3;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"link=Advanced \\u00bb\",\n\t\t\t\t\tRuntimeVariables.replace(\"Advanced\"));\n\n\t\t\tcase 3:\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\"//select[@id='_125_status']\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.select(\"//select[@id='_125_status']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Inactive\"));\n\t\t\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Search\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.clickAt(\"//input[@name='_125_allRowIds']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Select All\"));\n\t\t\t\tselenium.clickAt(\"//input[@value='Delete']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to permanently delete the selected users[\\\\s\\\\S]$\"));\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"Your request completed successfully.\"),\n\t\t\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"No users were found.\"),\n\t\t\t\t\tselenium.getText(\"//div[@class='portlet-msg-info']\"));\n\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","id":55997,"modified_method":"public void testTearDownUser() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.clickAt(\"link=Users and Organizations\",\n\t\t\t\t\tRuntimeVariables.replace(\"Users and Organizations\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tboolean usersPresent = selenium.isElementPresent(\n\t\t\t\t\t\t\"xPath=(//input[@name='_125_allRowIds'])[2]\");\n\n\t\t\t\tif (!usersPresent) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"xPath=(//input[@name='_125_allRowIds'])[2]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Select All\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//input[@value='Deactivate']\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to deactivate the selected users[\\\\s\\\\S]$\"));\n\n\t\t\tcase 2:\n\t\t\t\tselenium.clickAt(\"link=Search All Users\",\n\t\t\t\t\tRuntimeVariables.replace(\"Search All Users\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tboolean advancedVisible = selenium.isVisible(\n\t\t\t\t\t\t\"link=Advanced \\u00bb\");\n\n\t\t\t\tif (!advancedVisible) {\n\t\t\t\t\tlabel = 3;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"link=Advanced \\u00bb\",\n\t\t\t\t\tRuntimeVariables.replace(\"Advanced\"));\n\n\t\t\tcase 3:\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\"//select[@id='_125_status']\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.select(\"//select[@id='_125_status']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Inactive\"));\n\t\t\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Search\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tboolean users2Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//input[@name='_125_allRowIds']\");\n\n\t\t\t\tif (!users2Present) {\n\t\t\t\t\tlabel = 4;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//input[@name='_125_allRowIds']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Select All\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//input[@value='Delete']\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to permanently delete the selected users[\\\\s\\\\S]$\"));\n\n\t\t\tcase 4:\n\t\t\t\tselenium.clickAt(\"link=\\u00ab Basic\",\n\t\t\t\t\tRuntimeVariables.replace(\"\\u00ab Basic\"));\n\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","commit_id":"e5e8427ccd8f3b8a0d5b33f028467a5fce32536b","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testTearDownUser() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.clickAt(\"link=Users and Organizations\",\n\t\t\t\t\tRuntimeVariables.replace(\"Users and Organizations\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tboolean usersPresent = selenium.isElementPresent(\n\t\t\t\t\t\t\"//form/div[2]/div/div/div/div/div[2]\");\n\n\t\t\t\tif (!usersPresent) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[@id='usersAdminUsersPanel']/div[2]/div/div/table/tbody/tr/th/input\",\n\t\t\t\t\tRuntimeVariables.replace(\"Select All\"));\n\t\t\t\tselenium.click(\"//input[@value='Deactivate']\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to deactivate the selected users[\\\\s\\\\S]$\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\t\t\"//div[@class='portlet-msg-success']\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"Your request completed successfully.\"),\n\t\t\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\n\t\t\tcase 2:\n\t\t\t\tselenium.clickAt(\"link=Search All Users\",\n\t\t\t\t\tRuntimeVariables.replace(\"Search All Users\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tboolean advancedVisible = selenium.isVisible(\n\t\t\t\t\t\t\"link=Advanced \\u00bb\");\n\n\t\t\t\tif (!advancedVisible) {\n\t\t\t\t\tlabel = 3;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"link=Advanced \\u00bb\",\n\t\t\t\t\tRuntimeVariables.replace(\"Advanced\"));\n\n\t\t\tcase 3:\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\"//select[@id='_125_status']\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.select(\"//select[@id='_125_status']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Inactive\"));\n\t\t\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Search\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.clickAt(\"//input[@name='_125_allRowIds']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Select All\"));\n\t\t\t\tselenium.clickAt(\"//input[@value='Delete']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to permanently delete the selected users[\\\\s\\\\S]$\"));\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"Your request completed successfully.\"),\n\t\t\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"No users were found.\"),\n\t\t\t\t\tselenium.getText(\"//div[@class='portlet-msg-info']\"));\n\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","id":55998,"modified_method":"public void testTearDownUser() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.clickAt(\"link=Users and Organizations\",\n\t\t\t\t\tRuntimeVariables.replace(\"Users and Organizations\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tboolean usersPresent = selenium.isElementPresent(\n\t\t\t\t\t\t\"xPath=(//input[@name='_125_allRowIds'])[2]\");\n\n\t\t\t\tif (!usersPresent) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"xPath=(//input[@name='_125_allRowIds'])[2]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Select All\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//input[@value='Deactivate']\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to deactivate the selected users[\\\\s\\\\S]$\"));\n\n\t\t\tcase 2:\n\t\t\t\tselenium.clickAt(\"link=Search All Users\",\n\t\t\t\t\tRuntimeVariables.replace(\"Search All Users\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tboolean advancedVisible = selenium.isVisible(\n\t\t\t\t\t\t\"link=Advanced \\u00bb\");\n\n\t\t\t\tif (!advancedVisible) {\n\t\t\t\t\tlabel = 3;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"link=Advanced \\u00bb\",\n\t\t\t\t\tRuntimeVariables.replace(\"Advanced\"));\n\n\t\t\tcase 3:\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\"//select[@id='_125_status']\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.select(\"//select[@id='_125_status']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Inactive\"));\n\t\t\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Search\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tboolean users2Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//input[@name='_125_allRowIds']\");\n\n\t\t\t\tif (!users2Present) {\n\t\t\t\t\tlabel = 4;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//input[@name='_125_allRowIds']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Select All\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//input[@value='Delete']\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to permanently delete the selected users[\\\\s\\\\S]$\"));\n\n\t\t\tcase 4:\n\t\t\t\tselenium.clickAt(\"link=\\u00ab Basic\",\n\t\t\t\t\tRuntimeVariables.replace(\"\\u00ab Basic\"));\n\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","commit_id":"e5e8427ccd8f3b8a0d5b33f028467a5fce32536b","url":"https://github.com/liferay/liferay-portal"},{"original_method":"private void reportAlternativeSignatureErrors() {\n        assert analyzeExhaust != null;\n        BindingContext bc = analyzeExhaust.getBindingContext();\n        Collection<DeclarationDescriptor> descriptorsWithErrors = bc.getKeys(BindingContext.LOAD_FROM_JAVA_SIGNATURE_ERROR);\n        if (!descriptorsWithErrors.isEmpty()) {\n            StringBuilder message = new StringBuilder(\"The following Java entities have annotations wrong Kotlin signatures:\\n\");\n            for (DeclarationDescriptor descriptor : descriptorsWithErrors) {\n                PsiElement declaration = BindingContextUtils.descriptorToDeclaration(bc, descriptor);\n                assert declaration instanceof PsiModifierListOwner;\n                String externalName = PsiFormatUtil.getExternalName((PsiModifierListOwner) declaration);\n                message.append(externalName).append(\": \");\n                message.append(bc.get(BindingContext.LOAD_FROM_JAVA_SIGNATURE_ERROR, descriptor)).append(\"\\n\");\n            }\n            messageCollectorWrapper.report(CompilerMessageSeverity.ERROR, message.toString(), CompilerMessageLocation.NO_LOCATION);\n        }\n    }","id":55999,"modified_method":"private void reportAlternativeSignatureErrors() {\n        assert analyzeExhaust != null;\n        BindingContext bc = analyzeExhaust.getBindingContext();\n        Collection<DeclarationDescriptor> descriptorsWithErrors = bc.getKeys(BindingContext.LOAD_FROM_JAVA_SIGNATURE_ERRORS);\n        if (!descriptorsWithErrors.isEmpty()) {\n            StringBuilder messageStart = new StringBuilder(\"The following Java entities have annotations wrong Kotlin signatures:\\n\");\n            for (DeclarationDescriptor descriptor : descriptorsWithErrors) {\n                PsiElement declaration = BindingContextUtils.descriptorToDeclaration(bc, descriptor);\n                assert declaration instanceof PsiModifierListOwner;\n                String externalName = PsiFormatUtil.getExternalName((PsiModifierListOwner) declaration);\n                messageStart.append(externalName).append(\": \");\n                List<String> errors = bc.get(BindingContext.LOAD_FROM_JAVA_SIGNATURE_ERRORS, descriptor);\n                assert errors != null;\n                for (String error : errors) {\n                    messageCollectorWrapper.report(CompilerMessageSeverity.ERROR,\n                                                   messageStart + error + \"\\n\", CompilerMessageLocation.NO_LOCATION);\n                }\n            }\n        }\n    }","commit_id":"60f30732ed5f73c91260da8c43abbb2f28288d77","url":"https://github.com/JetBrains/kotlin"}]